

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jul 18 18:46:06 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F452 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataCOMRAM
   100  0000'                    __pidataCOMRAM:
   101                           	callstack 0
   102                           
   103                           ;initializer for _new_TMR1H@main$F655
   104  0000' FA                 	db	250
   105                           
   106                           	psect	idataBANK0
   107  0000'                    __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _Tosc@serial$F927
   111  0000' 37BD               	dw	14269
   112  0002' 3486               	dw	13446
   113                           
   114                           ;initializer for _Tosc
   115  0004' 37BD               	dw	14269
   116  0006' 3486               	dw	13446
   117                           
   118                           ;initializer for add_component@F3136
   119  0008' 20                 	db	32
   120  0009' 00                 	db	0
   121                           
   122                           ;initializer for _steps_per_unit
   123  000A' 0001               	dw	1
   124                           
   125                           ;initializer for _func
   126  000C' 30                 	db	48
   127                           
   128                           ;initializer for _new_TMR1L@main$F656
   129  000D' 60                 	db	96
   130                           
   131                           ;initializer for _new_TMR1L
   132  000E' 24                 	db	36
   133                           
   134                           ;initializer for _new_TMR1H
   135  000F' FA                 	db	250
   136                           
   137                           ;initializer for _input_str
   138  0010' 20                 	db	32
   139  0011' 00                 	db	0
   140  0012' 00                 	db	0
   141  0013' 00                 	db	0
   142  0014' 00                 	db	0
   143  0015' 00                 	db	0
   144  0016' 00                 	db	0
   145  0017' 00                 	db	0
   146  0018' 00                 	db	0
   147  0019' 00                 	db	0
   148                           
   149                           ;initializer for _sequence
   150  001A' 43                 	db	67
   151  001B' 41                 	db	65
   152  001C' 42                 	db	66
   153  001D' 00                 	db	0
   154                           
   155                           	psect	mediumconst
   156  0000'                    __pmediumconst:
   157                           	callstack 0
   158  0000' 00                 	db	0
   159  0001' 0000               	dw	0
   160  0003' 4B00               	dw	19200
   161  0005'                    __end_of_toint:
   162                           	callstack 0
   163  0005' 0000               	dw	0
   164  0007' 4616               	dw	17942
   165  0009'                    __end_of_desired_BaudRate@serial$F928:
   166                           	callstack 0
   167  0009' 0000               	dw	0
   168  000B' 4616               	dw	17942
   169  000D'                    __end_of_desired_BaudRate:
   170                           	callstack 0
   171  000D' 2400               	dw	9216
   172  000F' 4A74               	dw	19060
   173  0011'                    __end_of_Fosc@serial$F926:
   174                           	callstack 0
   175  0011' 2400               	dw	9216
   176  0013' 4A74               	dw	19060
   177  0015'                    __end_of_Fosc:
   178                           	callstack 0
   179  0015'                    STR_1:
   180  0015' 0A                 	db	10
   181  0016' 0A                 	db	10
   182  0017' 31                 	db	49	;'1'
   183  0018' 2E                 	db	46
   184  0019' 20                 	db	32
   185  001A' 53                 	db	83	;'S'
   186  001B' 74                 	db	116	;'t'
   187  001C' 61                 	db	97	;'a'
   188  001D' 72                 	db	114	;'r'
   189  001E' 74                 	db	116	;'t'
   190  001F' 20                 	db	32
   191  0020' 53                 	db	83	;'S'
   192  0021' 65                 	db	101	;'e'
   193  0022' 71                 	db	113	;'q'
   194  0023' 75                 	db	117	;'u'
   195  0024' 65                 	db	101	;'e'
   196  0025' 6E                 	db	110	;'n'
   197  0026' 63                 	db	99	;'c'
   198  0027' 65                 	db	101	;'e'
   199  0028' 0A                 	db	10
   200  0029' 32                 	db	50	;'2'
   201  002A' 2E                 	db	46
   202  002B' 20                 	db	32
   203  002C' 43                 	db	67	;'C'
   204  002D' 68                 	db	104	;'h'
   205  002E' 61                 	db	97	;'a'
   206  002F' 6E                 	db	110	;'n'
   207  0030' 67                 	db	103	;'g'
   208  0031' 65                 	db	101	;'e'
   209  0032' 20                 	db	32
   210  0033' 73                 	db	115	;'s'
   211  0034' 65                 	db	101	;'e'
   212  0035' 71                 	db	113	;'q'
   213  0036' 75                 	db	117	;'u'
   214  0037' 65                 	db	101	;'e'
   215  0038' 6E                 	db	110	;'n'
   216  0039' 63                 	db	99	;'c'
   217  003A' 65                 	db	101	;'e'
   218  003B' 0A                 	db	10
   219  003C' 33                 	db	51	;'3'
   220  003D' 2E                 	db	46
   221  003E' 20                 	db	32
   222  003F' 41                 	db	65	;'A'
   223  0040' 64                 	db	100	;'d'
   224  0041' 64                 	db	100	;'d'
   225  0042' 20                 	db	32
   226  0043' 6E                 	db	110	;'n'
   227  0044' 65                 	db	101	;'e'
   228  0045' 77                 	db	119	;'w'
   229  0046' 20                 	db	32
   230  0047' 63                 	db	99	;'c'
   231  0048' 6F                 	db	111	;'o'
   232  0049' 6D                 	db	109	;'m'
   233  004A' 70                 	db	112	;'p'
   234  004B' 6F                 	db	111	;'o'
   235  004C' 6E                 	db	110	;'n'
   236  004D' 65                 	db	101	;'e'
   237  004E' 6E                 	db	110	;'n'
   238  004F' 74                 	db	116	;'t'
   239  0050' 0A                 	db	10
   240  0051' 34                 	db	52	;'4'
   241  0052' 2E                 	db	46
   242  0053' 20                 	db	32
   243  0054' 52                 	db	82	;'R'
   244  0055' 65                 	db	101	;'e'
   245  0056' 6D                 	db	109	;'m'
   246  0057' 6F                 	db	111	;'o'
   247  0058' 76                 	db	118	;'v'
   248  0059' 65                 	db	101	;'e'
   249  005A' 20                 	db	32
   250  005B' 61                 	db	97	;'a'
   251  005C' 20                 	db	32
   252  005D' 63                 	db	99	;'c'
   253  005E' 6F                 	db	111	;'o'
   254  005F' 6D                 	db	109	;'m'
   255  0060' 70                 	db	112	;'p'
   256  0061' 6F                 	db	111	;'o'
   257  0062' 6E                 	db	110	;'n'
   258  0063' 65                 	db	101	;'e'
   259  0064' 6E                 	db	110	;'n'
   260  0065' 74                 	db	116	;'t'
   261  0066' 0A                 	db	10
   262  0067' 35                 	db	53	;'5'
   263  0068' 2E                 	db	46
   264  0069' 20                 	db	32
   265  006A' 52                 	db	82	;'R'
   266  006B' 65                 	db	101	;'e'
   267  006C' 74                 	db	116	;'t'
   268  006D' 75                 	db	117	;'u'
   269  006E' 72                 	db	114	;'r'
   270  006F' 6E                 	db	110	;'n'
   271  0070' 20                 	db	32
   272  0071' 74                 	db	116	;'t'
   273  0072' 6F                 	db	111	;'o'
   274  0073' 20                 	db	32
   275  0074' 49                 	db	73	;'I'
   276  0075' 6E                 	db	110	;'n'
   277  0076' 69                 	db	105	;'i'
   278  0077' 74                 	db	116	;'t'
   279  0078' 69                 	db	105	;'i'
   280  0079' 61                 	db	97	;'a'
   281  007A' 6C                 	db	108	;'l'
   282  007B' 20                 	db	32
   283  007C' 50                 	db	80	;'P'
   284  007D' 6F                 	db	111	;'o'
   285  007E' 73                 	db	115	;'s'
   286  007F' 69                 	db	105	;'i'
   287  0080' 74                 	db	116	;'t'
   288  0081' 69                 	db	105	;'i'
   289  0082' 6F                 	db	111	;'o'
   290  0083' 6E                 	db	110	;'n'
   291  0084' 00                 	db	0
   292  0085'                    STR_16:
   293  0085' 0A                 	db	10
   294  0086' 63                 	db	99	;'c'
   295  0087' 6F                 	db	111	;'o'
   296  0088' 6D                 	db	109	;'m'
   297  0089' 70                 	db	112	;'p'
   298  008A' 6F                 	db	111	;'o'
   299  008B' 6E                 	db	110	;'n'
   300  008C' 65                 	db	101	;'e'
   301  008D' 6E                 	db	110	;'n'
   302  008E' 74                 	db	116	;'t'
   303  008F' 20                 	db	32
   304  0090' 69                 	db	105	;'i'
   305  0091' 73                 	db	115	;'s'
   306  0092' 20                 	db	32
   307  0093' 6E                 	db	110	;'n'
   308  0094' 6F                 	db	111	;'o'
   309  0095' 74                 	db	116	;'t'
   310  0096' 20                 	db	32
   311  0097' 69                 	db	105	;'i'
   312  0098' 6E                 	db	110	;'n'
   313  0099' 20                 	db	32
   314  009A' 74                 	db	116	;'t'
   315  009B' 68                 	db	104	;'h'
   316  009C' 65                 	db	101	;'e'
   317  009D' 20                 	db	32
   318  009E' 73                 	db	115	;'s'
   319  009F' 65                 	db	101	;'e'
   320  00A0' 71                 	db	113	;'q'
   321  00A1' 75                 	db	117	;'u'
   322  00A2' 65                 	db	101	;'e'
   323  00A3' 6E                 	db	110	;'n'
   324  00A4' 63                 	db	99	;'c'
   325  00A5' 65                 	db	101	;'e'
   326  00A6' 2E                 	db	46
   327  00A7' 20                 	db	32
   328  00A8' 54                 	db	84	;'T'
   329  00A9' 72                 	db	114	;'r'
   330  00AA' 79                 	db	121	;'y'
   331  00AB' 20                 	db	32
   332  00AC' 73                 	db	115	;'s'
   333  00AD' 65                 	db	101	;'e'
   334  00AE' 6C                 	db	108	;'l'
   335  00AF' 65                 	db	101	;'e'
   336  00B0' 63                 	db	99	;'c'
   337  00B1' 74                 	db	116	;'t'
   338  00B2' 69                 	db	105	;'i'
   339  00B3' 6E                 	db	110	;'n'
   340  00B4' 67                 	db	103	;'g'
   341  00B5' 20                 	db	32
   342  00B6' 61                 	db	97	;'a'
   343  00B7' 6E                 	db	110	;'n'
   344  00B8' 6F                 	db	111	;'o'
   345  00B9' 74                 	db	116	;'t'
   346  00BA' 68                 	db	104	;'h'
   347  00BB' 65                 	db	101	;'e'
   348  00BC' 72                 	db	114	;'r'
   349  00BD' 20                 	db	32
   350  00BE' 63                 	db	99	;'c'
   351  00BF' 6F                 	db	111	;'o'
   352  00C0' 6D                 	db	109	;'m'
   353  00C1' 70                 	db	112	;'p'
   354  00C2' 6F                 	db	111	;'o'
   355  00C3' 6E                 	db	110	;'n'
   356  00C4' 65                 	db	101	;'e'
   357  00C5' 6E                 	db	110	;'n'
   358  00C6' 74                 	db	116	;'t'
   359  00C7' 3A                 	db	58	;':'
   360  00C8' 20                 	db	32
   361  00C9' 0A                 	db	10
   362  00CA' 00                 	db	0
   363  00CB'                    STR_14:
   364  00CB' 0A                 	db	10
   365  00CC' 57                 	db	87	;'W'
   366  00CD' 68                 	db	104	;'h'
   367  00CE' 69                 	db	105	;'i'
   368  00CF' 63                 	db	99	;'c'
   369  00D0' 68                 	db	104	;'h'
   370  00D1' 20                 	db	32
   371  00D2' 63                 	db	99	;'c'
   372  00D3' 6F                 	db	111	;'o'
   373  00D4' 6D                 	db	109	;'m'
   374  00D5' 70                 	db	112	;'p'
   375  00D6' 6F                 	db	111	;'o'
   376  00D7' 6E                 	db	110	;'n'
   377  00D8' 65                 	db	101	;'e'
   378  00D9' 6E                 	db	110	;'n'
   379  00DA' 74                 	db	116	;'t'
   380  00DB' 20                 	db	32
   381  00DC' 77                 	db	119	;'w'
   382  00DD' 6F                 	db	111	;'o'
   383  00DE' 75                 	db	117	;'u'
   384  00DF' 6C                 	db	108	;'l'
   385  00E0' 64                 	db	100	;'d'
   386  00E1' 20                 	db	32
   387  00E2' 79                 	db	121	;'y'
   388  00E3' 6F                 	db	111	;'o'
   389  00E4' 75                 	db	117	;'u'
   390  00E5' 20                 	db	32
   391  00E6' 6C                 	db	108	;'l'
   392  00E7' 69                 	db	105	;'i'
   393  00E8' 6B                 	db	107	;'k'
   394  00E9' 65                 	db	101	;'e'
   395  00EA' 20                 	db	32
   396  00EB' 74                 	db	116	;'t'
   397  00EC' 6F                 	db	111	;'o'
   398  00ED' 20                 	db	32
   399  00EE' 72                 	db	114	;'r'
   400  00EF' 65                 	db	101	;'e'
   401  00F0' 6D                 	db	109	;'m'
   402  00F1' 6F                 	db	111	;'o'
   403  00F2' 76                 	db	118	;'v'
   404  00F3' 65                 	db	101	;'e'
   405  00F4' 20                 	db	32
   406  00F5' 66                 	db	102	;'f'
   407  00F6' 72                 	db	114	;'r'
   408  00F7' 6F                 	db	111	;'o'
   409  00F8' 6D                 	db	109	;'m'
   410  00F9' 20                 	db	32
   411  00FA' 74                 	db	116	;'t'
   412  00FB' 68                 	db	104	;'h'
   413  00FC' 65                 	db	101	;'e'
   414  00FD' 20                 	db	32
   415  00FE' 20                 	db	32
   416  00FF' 73                 	db	115	;'s'
   417  0100' 65                 	db	101	;'e'
   418  0101' 71                 	db	113	;'q'
   419  0102' 75                 	db	117	;'u'
   420  0103' 65                 	db	101	;'e'
   421  0104' 6E                 	db	110	;'n'
   422  0105' 63                 	db	99	;'c'
   423  0106' 65                 	db	101	;'e'
   424  0107' 3F                 	db	63	;'?'
   425  0108' 0A                 	db	10
   426  0109' 00                 	db	0
   427  010A'                    STR_6:
   428  010A' 0A                 	db	10
   429  010B' 45                 	db	69	;'E'
   430  010C' 6E                 	db	110	;'n'
   431  010D' 74                 	db	116	;'t'
   432  010E' 65                 	db	101	;'e'
   433  010F' 72                 	db	114	;'r'
   434  0110' 20                 	db	32
   435  0111' 74                 	db	116	;'t'
   436  0112' 68                 	db	104	;'h'
   437  0113' 65                 	db	101	;'e'
   438  0114' 20                 	db	32
   439  0115' 63                 	db	99	;'c'
   440  0116' 6F                 	db	111	;'o'
   441  0117' 6D                 	db	109	;'m'
   442  0118' 70                 	db	112	;'p'
   443  0119' 6F                 	db	111	;'o'
   444  011A' 6E                 	db	110	;'n'
   445  011B' 65                 	db	101	;'e'
   446  011C' 6E                 	db	110	;'n'
   447  011D' 74                 	db	116	;'t'
   448  011E' 20                 	db	32
   449  011F' 79                 	db	121	;'y'
   450  0120' 6F                 	db	111	;'o'
   451  0121' 75                 	db	117	;'u'
   452  0122' 20                 	db	32
   453  0123' 77                 	db	119	;'w'
   454  0124' 61                 	db	97	;'a'
   455  0125' 6E                 	db	110	;'n'
   456  0126' 74                 	db	116	;'t'
   457  0127' 20                 	db	32
   458  0128' 74                 	db	116	;'t'
   459  0129' 6F                 	db	111	;'o'
   460  012A' 20                 	db	32
   461  012B' 61                 	db	97	;'a'
   462  012C' 64                 	db	100	;'d'
   463  012D' 64                 	db	100	;'d'
   464  012E' 3A                 	db	58	;':'
   465  012F' 20                 	db	32
   466  0130' 41                 	db	65	;'A'
   467  0131' 2C                 	db	44
   468  0132' 20                 	db	32
   469  0133' 42                 	db	66	;'B'
   470  0134' 2C                 	db	44
   471  0135' 20                 	db	32
   472  0136' 43                 	db	67	;'C'
   473  0137' 20                 	db	32
   474  0138' 6F                 	db	111	;'o'
   475  0139' 72                 	db	114	;'r'
   476  013A' 20                 	db	32
   477  013B' 44                 	db	68	;'D'
   478  013C' 3F                 	db	63	;'?'
   479  013D' 00                 	db	0
   480  013E'                    STR_19:
   481  013E' 0A                 	db	10
   482  013F' 77                 	db	119	;'w'
   483  0140' 61                 	db	97	;'a'
   484  0141' 69                 	db	105	;'i'
   485  0142' 74                 	db	116	;'t'
   486  0143' 69                 	db	105	;'i'
   487  0144' 6E                 	db	110	;'n'
   488  0145' 67                 	db	103	;'g'
   489  0146' 20                 	db	32
   490  0147' 66                 	db	102	;'f'
   491  0148' 6F                 	db	111	;'o'
   492  0149' 72                 	db	114	;'r'
   493  014A' 20                 	db	32
   494  014B' 66                 	db	102	;'f'
   495  014C' 65                 	db	101	;'e'
   496  014D' 77                 	db	119	;'w'
   497  014E' 20                 	db	32
   498  014F' 73                 	db	115	;'s'
   499  0150' 65                 	db	101	;'e'
   500  0151' 63                 	db	99	;'c'
   501  0152' 6F                 	db	111	;'o'
   502  0153' 6E                 	db	110	;'n'
   503  0154' 64                 	db	100	;'d'
   504  0155' 73                 	db	115	;'s'
   505  0156' 20                 	db	32
   506  0157' 66                 	db	102	;'f'
   507  0158' 6F                 	db	111	;'o'
   508  0159' 72                 	db	114	;'r'
   509  015A' 20                 	db	32
   510  015B' 74                 	db	116	;'t'
   511  015C' 68                 	db	104	;'h'
   512  015D' 65                 	db	101	;'e'
   513  015E' 20                 	db	32
   514  015F' 63                 	db	99	;'c'
   515  0160' 6F                 	db	111	;'o'
   516  0161' 6D                 	db	109	;'m'
   517  0162' 70                 	db	112	;'p'
   518  0163' 6F                 	db	111	;'o'
   519  0164' 6E                 	db	110	;'n'
   520  0165' 65                 	db	101	;'e'
   521  0166' 6E                 	db	110	;'n'
   522  0167' 74                 	db	116	;'t'
   523  0168' 2E                 	db	46
   524  0169' 2E                 	db	46
   525  016A' 00                 	db	0
   526  016B'                    STR_4:
   527  016B' 0A                 	db	10
   528  016C' 50                 	db	80	;'P'
   529  016D' 6C                 	db	108	;'l'
   530  016E' 65                 	db	101	;'e'
   531  016F' 61                 	db	97	;'a'
   532  0170' 73                 	db	115	;'s'
   533  0171' 65                 	db	101	;'e'
   534  0172' 20                 	db	32
   535  0173' 67                 	db	103	;'g'
   536  0174' 69                 	db	105	;'i'
   537  0175' 76                 	db	118	;'v'
   538  0176' 65                 	db	101	;'e'
   539  0177' 20                 	db	32
   540  0178' 74                 	db	116	;'t'
   541  0179' 68                 	db	104	;'h'
   542  017A' 65                 	db	101	;'e'
   543  017B' 20                 	db	32
   544  017C' 6E                 	db	110	;'n'
   545  017D' 65                 	db	101	;'e'
   546  017E' 77                 	db	119	;'w'
   547  017F' 20                 	db	32
   548  0180' 73                 	db	115	;'s'
   549  0181' 65                 	db	101	;'e'
   550  0182' 71                 	db	113	;'q'
   551  0183' 75                 	db	117	;'u'
   552  0184' 65                 	db	101	;'e'
   553  0185' 6E                 	db	110	;'n'
   554  0186' 63                 	db	99	;'c'
   555  0187' 65                 	db	101	;'e'
   556  0188' 20                 	db	32
   557  0189' 61                 	db	97	;'a'
   558  018A' 73                 	db	115	;'s'
   559  018B' 20                 	db	32
   560  018C' 69                 	db	105	;'i'
   561  018D' 6E                 	db	110	;'n'
   562  018E' 70                 	db	112	;'p'
   563  018F' 75                 	db	117	;'u'
   564  0190' 74                 	db	116	;'t'
   565  0191' 0D                 	db	13
   566  0192' 00                 	db	0
   567  0193'                    STR_12:
   568  0193' 0A                 	db	10
   569  0194' 45                 	db	69	;'E'
   570  0195' 6E                 	db	110	;'n'
   571  0196' 74                 	db	116	;'t'
   572  0197' 65                 	db	101	;'e'
   573  0198' 72                 	db	114	;'r'
   574  0199' 20                 	db	32
   575  019A' 74                 	db	116	;'t'
   576  019B' 68                 	db	104	;'h'
   577  019C' 65                 	db	101	;'e'
   578  019D' 20                 	db	32
   579  019E' 70                 	db	112	;'p'
   580  019F' 6C                 	db	108	;'l'
   581  01A0' 61                 	db	97	;'a'
   582  01A1' 63                 	db	99	;'c'
   583  01A2' 65                 	db	101	;'e'
   584  01A3' 20                 	db	32
   585  01A4' 6F                 	db	111	;'o'
   586  01A5' 72                 	db	114	;'r'
   587  01A6' 69                 	db	105	;'i'
   588  01A7' 65                 	db	101	;'e'
   589  01A8' 6E                 	db	110	;'n'
   590  01A9' 74                 	db	116	;'t'
   591  01AA' 61                 	db	97	;'a'
   592  01AB' 74                 	db	116	;'t'
   593  01AC' 69                 	db	105	;'i'
   594  01AD' 6F                 	db	111	;'o'
   595  01AE' 6E                 	db	110	;'n'
   596  01AF' 20                 	db	32
   597  01B0' 28                 	db	40
   598  01B1' 30                 	db	48	;'0'
   599  01B2' 2D                 	db	45
   600  01B3' 33                 	db	51	;'3'
   601  01B4' 36                 	db	54	;'6'
   602  01B5' 30                 	db	48	;'0'
   603  01B6' 29                 	db	41
   604  01B7' 3A                 	db	58	;':'
   605  01B8' 20                 	db	32
   606  01B9' 00                 	db	0
   607  01BA'                    STR_9:
   608  01BA' 0A                 	db	10
   609  01BB' 45                 	db	69	;'E'
   610  01BC' 6E                 	db	110	;'n'
   611  01BD' 74                 	db	116	;'t'
   612  01BE' 65                 	db	101	;'e'
   613  01BF' 72                 	db	114	;'r'
   614  01C0' 20                 	db	32
   615  01C1' 74                 	db	116	;'t'
   616  01C2' 68                 	db	104	;'h'
   617  01C3' 65                 	db	101	;'e'
   618  01C4' 20                 	db	32
   619  01C5' 70                 	db	112	;'p'
   620  01C6' 69                 	db	105	;'i'
   621  01C7' 63                 	db	99	;'c'
   622  01C8' 6B                 	db	107	;'k'
   623  01C9' 20                 	db	32
   624  01CA' 6F                 	db	111	;'o'
   625  01CB' 72                 	db	114	;'r'
   626  01CC' 69                 	db	105	;'i'
   627  01CD' 65                 	db	101	;'e'
   628  01CE' 6E                 	db	110	;'n'
   629  01CF' 74                 	db	116	;'t'
   630  01D0' 61                 	db	97	;'a'
   631  01D1' 74                 	db	116	;'t'
   632  01D2' 69                 	db	105	;'i'
   633  01D3' 6F                 	db	111	;'o'
   634  01D4' 6E                 	db	110	;'n'
   635  01D5' 20                 	db	32
   636  01D6' 28                 	db	40
   637  01D7' 30                 	db	48	;'0'
   638  01D8' 2D                 	db	45
   639  01D9' 33                 	db	51	;'3'
   640  01DA' 36                 	db	54	;'6'
   641  01DB' 30                 	db	48	;'0'
   642  01DC' 29                 	db	41
   643  01DD' 3A                 	db	58	;':'
   644  01DE' 20                 	db	32
   645  01DF' 00                 	db	0
   646  01E0'                    STR_10:
   647  01E0' 0A                 	db	10
   648  01E1' 45                 	db	69	;'E'
   649  01E2' 6E                 	db	110	;'n'
   650  01E3' 74                 	db	116	;'t'
   651  01E4' 65                 	db	101	;'e'
   652  01E5' 72                 	db	114	;'r'
   653  01E6' 20                 	db	32
   654  01E7' 74                 	db	116	;'t'
   655  01E8' 68                 	db	104	;'h'
   656  01E9' 65                 	db	101	;'e'
   657  01EA' 20                 	db	32
   658  01EB' 70                 	db	112	;'p'
   659  01EC' 6C                 	db	108	;'l'
   660  01ED' 61                 	db	97	;'a'
   661  01EE' 63                 	db	99	;'c'
   662  01EF' 65                 	db	101	;'e'
   663  01F0' 20                 	db	32
   664  01F1' 70                 	db	112	;'p'
   665  01F2' 6F                 	db	111	;'o'
   666  01F3' 73                 	db	115	;'s'
   667  01F4' 69                 	db	105	;'i'
   668  01F5' 74                 	db	116	;'t'
   669  01F6' 69                 	db	105	;'i'
   670  01F7' 6F                 	db	111	;'o'
   671  01F8' 6E                 	db	110	;'n'
   672  01F9' 20                 	db	32
   673  01FA' 58                 	db	88	;'X'
   674  01FB' 20                 	db	32
   675  01FC' 28                 	db	40
   676  01FD' 31                 	db	49	;'1'
   677  01FE' 2D                 	db	45
   678  01FF' 32                 	db	50	;'2'
   679  0200' 30                 	db	48	;'0'
   680  0201' 29                 	db	41
   681  0202' 3A                 	db	58	;':'
   682  0203' 20                 	db	32
   683  0204' 00                 	db	0
   684  0205'                    STR_11:
   685  0205' 0A                 	db	10
   686  0206' 45                 	db	69	;'E'
   687  0207' 6E                 	db	110	;'n'
   688  0208' 74                 	db	116	;'t'
   689  0209' 65                 	db	101	;'e'
   690  020A' 72                 	db	114	;'r'
   691  020B' 20                 	db	32
   692  020C' 74                 	db	116	;'t'
   693  020D' 68                 	db	104	;'h'
   694  020E' 65                 	db	101	;'e'
   695  020F' 20                 	db	32
   696  0210' 70                 	db	112	;'p'
   697  0211' 6C                 	db	108	;'l'
   698  0212' 61                 	db	97	;'a'
   699  0213' 63                 	db	99	;'c'
   700  0214' 65                 	db	101	;'e'
   701  0215' 20                 	db	32
   702  0216' 70                 	db	112	;'p'
   703  0217' 6F                 	db	111	;'o'
   704  0218' 73                 	db	115	;'s'
   705  0219' 69                 	db	105	;'i'
   706  021A' 74                 	db	116	;'t'
   707  021B' 69                 	db	105	;'i'
   708  021C' 6F                 	db	111	;'o'
   709  021D' 6E                 	db	110	;'n'
   710  021E' 20                 	db	32
   711  021F' 59                 	db	89	;'Y'
   712  0220' 20                 	db	32
   713  0221' 28                 	db	40
   714  0222' 31                 	db	49	;'1'
   715  0223' 2D                 	db	45
   716  0224' 32                 	db	50	;'2'
   717  0225' 30                 	db	48	;'0'
   718  0226' 29                 	db	41
   719  0227' 3A                 	db	58	;':'
   720  0228' 20                 	db	32
   721  0229' 00                 	db	0
   722  022A'                    STR_7:
   723  022A' 0A                 	db	10
   724  022B' 45                 	db	69	;'E'
   725  022C' 6E                 	db	110	;'n'
   726  022D' 74                 	db	116	;'t'
   727  022E' 65                 	db	101	;'e'
   728  022F' 72                 	db	114	;'r'
   729  0230' 20                 	db	32
   730  0231' 74                 	db	116	;'t'
   731  0232' 68                 	db	104	;'h'
   732  0233' 65                 	db	101	;'e'
   733  0234' 20                 	db	32
   734  0235' 70                 	db	112	;'p'
   735  0236' 69                 	db	105	;'i'
   736  0237' 63                 	db	99	;'c'
   737  0238' 6B                 	db	107	;'k'
   738  0239' 20                 	db	32
   739  023A' 70                 	db	112	;'p'
   740  023B' 6F                 	db	111	;'o'
   741  023C' 73                 	db	115	;'s'
   742  023D' 69                 	db	105	;'i'
   743  023E' 74                 	db	116	;'t'
   744  023F' 69                 	db	105	;'i'
   745  0240' 6F                 	db	111	;'o'
   746  0241' 6E                 	db	110	;'n'
   747  0242' 20                 	db	32
   748  0243' 58                 	db	88	;'X'
   749  0244' 20                 	db	32
   750  0245' 28                 	db	40
   751  0246' 31                 	db	49	;'1'
   752  0247' 2D                 	db	45
   753  0248' 32                 	db	50	;'2'
   754  0249' 30                 	db	48	;'0'
   755  024A' 29                 	db	41
   756  024B' 3A                 	db	58	;':'
   757  024C' 20                 	db	32
   758  024D' 00                 	db	0
   759  024E'                    STR_8:
   760  024E' 0A                 	db	10
   761  024F' 45                 	db	69	;'E'
   762  0250' 6E                 	db	110	;'n'
   763  0251' 74                 	db	116	;'t'
   764  0252' 65                 	db	101	;'e'
   765  0253' 72                 	db	114	;'r'
   766  0254' 20                 	db	32
   767  0255' 74                 	db	116	;'t'
   768  0256' 68                 	db	104	;'h'
   769  0257' 65                 	db	101	;'e'
   770  0258' 20                 	db	32
   771  0259' 70                 	db	112	;'p'
   772  025A' 69                 	db	105	;'i'
   773  025B' 63                 	db	99	;'c'
   774  025C' 6B                 	db	107	;'k'
   775  025D' 20                 	db	32
   776  025E' 70                 	db	112	;'p'
   777  025F' 6F                 	db	111	;'o'
   778  0260' 73                 	db	115	;'s'
   779  0261' 69                 	db	105	;'i'
   780  0262' 74                 	db	116	;'t'
   781  0263' 69                 	db	105	;'i'
   782  0264' 6F                 	db	111	;'o'
   783  0265' 6E                 	db	110	;'n'
   784  0266' 20                 	db	32
   785  0267' 59                 	db	89	;'Y'
   786  0268' 20                 	db	32
   787  0269' 28                 	db	40
   788  026A' 31                 	db	49	;'1'
   789  026B' 2D                 	db	45
   790  026C' 32                 	db	50	;'2'
   791  026D' 30                 	db	48	;'0'
   792  026E' 29                 	db	41
   793  026F' 3A                 	db	58	;':'
   794  0270' 20                 	db	32
   795  0271' 00                 	db	0
   796  0272'                    STR_3:
   797  0272' 0A                 	db	10
   798  0273' 54                 	db	84	;'T'
   799  0274' 68                 	db	104	;'h'
   800  0275' 65                 	db	101	;'e'
   801  0276' 20                 	db	32
   802  0277' 63                 	db	99	;'c'
   803  0278' 75                 	db	117	;'u'
   804  0279' 72                 	db	114	;'r'
   805  027A' 72                 	db	114	;'r'
   806  027B' 65                 	db	101	;'e'
   807  027C' 6E                 	db	110	;'n'
   808  027D' 74                 	db	116	;'t'
   809  027E' 20                 	db	32
   810  027F' 73                 	db	115	;'s'
   811  0280' 65                 	db	101	;'e'
   812  0281' 71                 	db	113	;'q'
   813  0282' 75                 	db	117	;'u'
   814  0283' 65                 	db	101	;'e'
   815  0284' 6E                 	db	110	;'n'
   816  0285' 63                 	db	99	;'c'
   817  0286' 65                 	db	101	;'e'
   818  0287' 20                 	db	32
   819  0288' 69                 	db	105	;'i'
   820  0289' 73                 	db	115	;'s'
   821  028A' 3A                 	db	58	;':'
   822  028B' 20                 	db	32
   823  028C' 00                 	db	0
   824  028D'                    STR_5:
   825  028D' 0A                 	db	10
   826  028E' 0A                 	db	10
   827  028F' 54                 	db	84	;'T'
   828  0290' 68                 	db	104	;'h'
   829  0291' 65                 	db	101	;'e'
   830  0292' 20                 	db	32
   831  0293' 43                 	db	67	;'C'
   832  0294' 75                 	db	117	;'u'
   833  0295' 72                 	db	114	;'r'
   834  0296' 72                 	db	114	;'r'
   835  0297' 65                 	db	101	;'e'
   836  0298' 6E                 	db	110	;'n'
   837  0299' 74                 	db	116	;'t'
   838  029A' 20                 	db	32
   839  029B' 73                 	db	115	;'s'
   840  029C' 65                 	db	101	;'e'
   841  029D' 71                 	db	113	;'q'
   842  029E' 75                 	db	117	;'u'
   843  029F' 65                 	db	101	;'e'
   844  02A0' 6E                 	db	110	;'n'
   845  02A1' 63                 	db	99	;'c'
   846  02A2' 65                 	db	101	;'e'
   847  02A3' 20                 	db	32
   848  02A4' 69                 	db	105	;'i'
   849  02A5' 73                 	db	115	;'s'
   850  02A6' 3A                 	db	58	;':'
   851  02A7' 00                 	db	0
   852  02A8'                    STR_21:
   853  02A8' 0A                 	db	10
   854  02A9' 50                 	db	80	;'P'
   855  02AA' 6C                 	db	108	;'l'
   856  02AB' 61                 	db	97	;'a'
   857  02AC' 63                 	db	99	;'c'
   858  02AD' 69                 	db	105	;'i'
   859  02AE' 6E                 	db	110	;'n'
   860  02AF' 67                 	db	103	;'g'
   861  02B0' 20                 	db	32
   862  02B1' 63                 	db	99	;'c'
   863  02B2' 6F                 	db	111	;'o'
   864  02B3' 6D                 	db	109	;'m'
   865  02B4' 70                 	db	112	;'p'
   866  02B5' 6F                 	db	111	;'o'
   867  02B6' 6E                 	db	110	;'n'
   868  02B7' 65                 	db	101	;'e'
   869  02B8' 6E                 	db	110	;'n'
   870  02B9' 74                 	db	116	;'t'
   871  02BA' 3A                 	db	58	;':'
   872  02BB' 20                 	db	32
   873  02BC' 00                 	db	0
   874  02BD'                    STR_20:
   875  02BD' 0A                 	db	10
   876  02BE' 50                 	db	80	;'P'
   877  02BF' 69                 	db	105	;'i'
   878  02C0' 63                 	db	99	;'c'
   879  02C1' 6B                 	db	107	;'k'
   880  02C2' 69                 	db	105	;'i'
   881  02C3' 6E                 	db	110	;'n'
   882  02C4' 67                 	db	103	;'g'
   883  02C5' 20                 	db	32
   884  02C6' 63                 	db	99	;'c'
   885  02C7' 6F                 	db	111	;'o'
   886  02C8' 6D                 	db	109	;'m'
   887  02C9' 70                 	db	112	;'p'
   888  02CA' 6F                 	db	111	;'o'
   889  02CB' 6E                 	db	110	;'n'
   890  02CC' 65                 	db	101	;'e'
   891  02CD' 6E                 	db	110	;'n'
   892  02CE' 74                 	db	116	;'t'
   893  02CF' 3A                 	db	58	;':'
   894  02D0' 20                 	db	32
   895  02D1' 00                 	db	0
   896  02D2'                    STR_2:
   897  02D2' 0A                 	db	10
   898  02D3' 0A                 	db	10
   899  02D4' 53                 	db	83	;'S'
   900  02D5' 74                 	db	116	;'t'
   901  02D6' 61                 	db	97	;'a'
   902  02D7' 72                 	db	114	;'r'
   903  02D8' 74                 	db	116	;'t'
   904  02D9' 69                 	db	105	;'i'
   905  02DA' 6E                 	db	110	;'n'
   906  02DB' 67                 	db	103	;'g'
   907  02DC' 20                 	db	32
   908  02DD' 73                 	db	115	;'s'
   909  02DE' 65                 	db	101	;'e'
   910  02DF' 71                 	db	113	;'q'
   911  02E0' 75                 	db	117	;'u'
   912  02E1' 65                 	db	101	;'e'
   913  02E2' 6E                 	db	110	;'n'
   914  02E3' 63                 	db	99	;'c'
   915  02E4' 65                 	db	101	;'e'
   916  02E5' 3A                 	db	58	;':'
   917  02E6' 00                 	db	0
   918  02E7'                    STR_13:
   919  02E7' 0A                 	db	10
   920  02E8' 0A                 	db	10
   921  02E9' 43                 	db	67	;'C'
   922  02EA' 6F                 	db	111	;'o'
   923  02EB' 6D                 	db	109	;'m'
   924  02EC' 70                 	db	112	;'p'
   925  02ED' 6F                 	db	111	;'o'
   926  02EE' 6E                 	db	110	;'n'
   927  02EF' 65                 	db	101	;'e'
   928  02F0' 6E                 	db	110	;'n'
   929  02F1' 74                 	db	116	;'t'
   930  02F2' 20                 	db	32
   931  02F3' 41                 	db	65	;'A'
   932  02F4' 64                 	db	100	;'d'
   933  02F5' 64                 	db	100	;'d'
   934  02F6' 65                 	db	101	;'e'
   935  02F7' 64                 	db	100	;'d'
   936  02F8' 3A                 	db	58	;':'
   937  02F9' 20                 	db	32
   938  02FA' 00                 	db	0
   939  02FB'                    STR_15:
   940  02FB' 0A                 	db	10
   941  02FC' 63                 	db	99	;'c'
   942  02FD' 6F                 	db	111	;'o'
   943  02FE' 6D                 	db	109	;'m'
   944  02FF' 70                 	db	112	;'p'
   945  0300' 6F                 	db	111	;'o'
   946  0301' 6E                 	db	110	;'n'
   947  0302' 65                 	db	101	;'e'
   948  0303' 6E                 	db	110	;'n'
   949  0304' 74                 	db	116	;'t'
   950  0305' 20                 	db	32
   951  0306' 72                 	db	114	;'r'
   952  0307' 65                 	db	101	;'e'
   953  0308' 6D                 	db	109	;'m'
   954  0309' 6F                 	db	111	;'o'
   955  030A' 76                 	db	118	;'v'
   956  030B' 65                 	db	101	;'e'
   957  030C' 64                 	db	100	;'d'
   958  030D' 00                 	db	0
   959  030E'                    STR_17:
   960  030E' 0A                 	db	10
   961  030F' 43                 	db	67	;'C'
   962  0310' 6F                 	db	111	;'o'
   963  0311' 6D                 	db	109	;'m'
   964  0312' 70                 	db	112	;'p'
   965  0313' 6F                 	db	111	;'o'
   966  0314' 6E                 	db	110	;'n'
   967  0315' 65                 	db	101	;'e'
   968  0316' 6E                 	db	110	;'n'
   969  0317' 74                 	db	116	;'t'
   970  0318' 20                 	db	32
   971  0319' 00                 	db	0
   972  031A'                    STR_18:
   973  031A' 20                 	db	32
   974  031B' 6D                 	db	109	;'m'
   975  031C' 69                 	db	105	;'i'
   976  031D' 73                 	db	115	;'s'
   977  031E' 73                 	db	115	;'s'
   978  031F' 69                 	db	105	;'i'
   979  0320' 6E                 	db	110	;'n'
   980  0321' 67                 	db	103	;'g'
   981  0322' 21                 	db	33
   982  0323' 00                 	db	0
   983  0324' 00                 	db	0	; dummy byte at the end
   984  0000                     
   985                           	psect	nvCOMRAM
   986  0000'                    __pnvCOMRAM:
   987                           	callstack 0
   988  0000'                    _New_char_RX:
   989                           	callstack 0
   990  0000'                    	ds	1
   991  0000                     _TXREG	set	4013
   992  0000                     _RCSTAbits	set	4011
   993  0000                     _TXSTAbits	set	4012
   994  0000                     _SPBRG	set	4015
   995  0000                     _RCREG	set	4014
   996  0000                     _PORTB	set	3969
   997  0000                     _LATCbits	set	3979
   998  0000                     _INTCON3bits	set	4080
   999  0000                     _INTCON3	set	4080
  1000  0000                     _INTCON2	set	4081
  1001  0000                     _INTCONbits	set	4082
  1002  0000                     _PIE1bits	set	3997
  1003  0000                     _PIR1bits	set	3998
  1004  0000                     _TMR1L	set	4046
  1005  0000                     _TMR1H	set	4047
  1006  0000                     _T1CONbits	set	4045
  1007  0000                     _TMR0L	set	4054
  1008  0000                     _TMR0H	set	4055
  1009  0000                     _T0CONbits	set	4053
  1010  0000                     _TRISCbits	set	3988
  1011  0000                     _PORTC	set	3970
  1012  0000                     _LATC	set	3979
  1013  0000                     _PORTD	set	3971
  1014  0000                     _PORTA	set	3968
  1015  0000                     _TRISB	set	3987
  1016  0000                     _TRISA	set	3986
  1017  0000                     _TRISD	set	3989
  1018  0000                     _RCIF	set	31989
  1019                           
  1020                           ; #config settings
  1021                           
  1022                           	psect	cinit
  1023  0000'                    __pcinit:
  1024                           	callstack 0
  1025  0000'                    start_initialization:
  1026                           	callstack 0
  1027  0000'                    __initialization:
  1028                           	callstack 0
  1029                           
  1030                           ; Initialize objects allocated to BANK0 (30 bytes)
  1031                           ; load TBLPTR registers with __pidataBANK0
  1032  0000' 0E00'              	movlw	low __pidataBANK0
  1033  0002' 6EF6               	movwf	tblptrl,c
  1034  0004' 0E00'              	movlw	high __pidataBANK0
  1035  0006' 6EF7               	movwf	tblptrh,c
  1036  0008' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
  1037  000A' 6EF8               	movwf	tblptru,c
  1038  000C' EE00' F000'        	lfsr	0,__pdataBANK0
  1039  0010' EE10 F01E          	lfsr	1,30
  1040  0014'                    copy_data0:
  1041  0014' 0009               	tblrd		*+
  1042  0016' CFF5 FFEE          	movff	tablat,postinc0
  1043  001A' 50E5               	movf	postdec1,w,c
  1044  001C' 50E1               	movf	fsr1l,w,c
  1045  001E' E1FA               	bnz	copy_data0
  1046                           
  1047                           ; Initialize objects allocated to COMRAM (1 bytes)
  1048                           ; load TBLPTR registers with __pidataCOMRAM
  1049  0020' 0E00'              	movlw	low __pidataCOMRAM
  1050  0022' 6EF6               	movwf	tblptrl,c
  1051  0024' 0E00'              	movlw	high __pidataCOMRAM
  1052  0026' 6EF7               	movwf	tblptrh,c
  1053  0028' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
  1054  002A' 6EF8               	movwf	tblptru,c
  1055  002C' 0009               	tblrd		*+	;fetch initializer
  1056  002E' CFF5 F000'         	movff	tablat,__pdataCOMRAM
  1057                           
  1058                           ; Clear objects allocated to BANK0 (26 bytes)
  1059  0032' EE00' F000'        	lfsr	0,__pbssBANK0
  1060  0036' 0E1A               	movlw	26
  1061  0038'                    clear_0:
  1062  0038' 6AEE               	clrf	postinc0,c
  1063  003A' 06E8               	decf	wreg,f,c
  1064  003C' E1FD               	bnz	clear_0
  1065                           
  1066                           ; Clear objects allocated to COMRAM (25 bytes)
  1067  003E' EE00' F000'        	lfsr	0,__pbssCOMRAM
  1068  0042' 0E19               	movlw	25
  1069  0044'                    clear_1:
  1070  0044' 6AEE               	clrf	postinc0,c
  1071  0046' 06E8               	decf	wreg,f,c
  1072  0048' E1FD               	bnz	clear_1
  1073  004A'                    end_of_initialization:
  1074                           	callstack 0
  1075  004A'                    __end_of__initialization:
  1076                           	callstack 0
  1077  004A' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1078  004C' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1079  004E' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
  1080  0050' 6EF8               	movwf	tblptru,c
  1081  0052' 0100               	movlb	0
  1082  0054' EF00' F000'        	goto	_main	;jump to C main() function
  1083                           
  1084                           	psect	bssCOMRAM
  1085  0000'                    __pbssCOMRAM:
  1086                           	callstack 0
  1087  0000'                    _Steps:
  1088                           	callstack 0
  1089  0000'                    	ds	2
  1090  0002'                    _Angle_diff:
  1091                           	callstack 0
  1092  0002'                    	ds	2
  1093  0004'                    _Y_diff:
  1094                           	callstack 0
  1095  0004'                    	ds	2
  1096  0006'                    _X_diff:
  1097                           	callstack 0
  1098  0006'                    	ds	2
  1099  0008'                    _Place_Angle:
  1100                           	callstack 0
  1101  0008'                    	ds	2
  1102  000A'                    _Pick_Angle:
  1103                           	callstack 0
  1104  000A'                    	ds	2
  1105  000C'                    _Y_Place:
  1106                           	callstack 0
  1107  000C'                    	ds	2
  1108  000E'                    _Y_Pick:
  1109                           	callstack 0
  1110  000E'                    	ds	2
  1111  0010'                    _X_Place:
  1112                           	callstack 0
  1113  0010'                    	ds	2
  1114  0012'                    _X_Pick:
  1115                           	callstack 0
  1116  0012'                    	ds	2
  1117  0014'                    _Twist_dir:
  1118                           	callstack 0
  1119  0014'                    	ds	1
  1120  0015'                    _Y_dir:
  1121                           	callstack 0
  1122  0015'                    	ds	1
  1123  0016'                    _X_dir:
  1124                           	callstack 0
  1125  0016'                    	ds	1
  1126  0017'                    _stop:
  1127                           	callstack 0
  1128  0017'                    	ds	1
  1129  0018'                    _component_present:
  1130                           	callstack 0
  1131  0018'                    	ds	1
  1132                           
  1133                           	psect	dataCOMRAM
  1134  0000'                    __pdataCOMRAM:
  1135                           	callstack 0
  1136  0000'                    _new_TMR1H@main$F655:
  1137                           	callstack 0
  1138  0000'                    	ds	1
  1139                           
  1140                           	psect	bssBANK0
  1141  0000'                    __pbssBANK0:
  1142                           	callstack 0
  1143  0000'                    roundf@F528:
  1144                           	callstack 0
  1145  0000'                    	ds	4
  1146  0004'                    _angle_diff:
  1147                           	callstack 0
  1148  0004'                    	ds	2
  1149  0006'                    _Place_Angle_D:
  1150                           	callstack 0
  1151  0006'                    	ds	2
  1152  0008'                    _Y_Place_D:
  1153                           	callstack 0
  1154  0008'                    	ds	2
  1155  000A'                    _X_Place_D:
  1156                           	callstack 0
  1157  000A'                    	ds	2
  1158  000C'                    _Pick_Angle_D:
  1159                           	callstack 0
  1160  000C'                    	ds	2
  1161  000E'                    _Y_Pick_D:
  1162                           	callstack 0
  1163  000E'                    	ds	2
  1164  0010'                    _X_Pick_D:
  1165                           	callstack 0
  1166  0010'                    	ds	2
  1167  0012'                    _Step_Angle:
  1168                           	callstack 0
  1169  0012'                    	ds	2
  1170  0014'                    _Step_Z:
  1171                           	callstack 0
  1172  0014'                    	ds	2
  1173  0016'                    _Step_Y:
  1174                           	callstack 0
  1175  0016'                    	ds	2
  1176  0018'                    _Step_X:
  1177                           	callstack 0
  1178  0018'                    	ds	2
  1179                           
  1180                           	psect	dataBANK0
  1181  0000'                    __pdataBANK0:
  1182                           	callstack 0
  1183  0000'                    	ds	4
  1184  0004'                    	ds	4
  1185  0008'                    add_component@F3136:
  1186                           	callstack 0
  1187  0008'                    	ds	2
  1188  000A'                    _steps_per_unit:
  1189                           	callstack 0
  1190  000A'                    	ds	2
  1191  000C'                    _func:
  1192                           	callstack 0
  1193  000C'                    	ds	1
  1194  000D'                    _new_TMR1L@main$F656:
  1195                           	callstack 0
  1196  000D'                    	ds	1
  1197  000E'                    	ds	1
  1198  000F'                    	ds	1
  1199  0010'                    _input_str:
  1200                           	callstack 0
  1201  0010'                    	ds	10
  1202  001A'                    _sequence:
  1203                           	callstack 0
  1204  001A'                    	ds	4
  1205                           
  1206                           	psect	cstackBANK0
  1207  0000'                    __pcstackBANK0:
  1208                           	callstack 0
  1209  0000'                    ??___fltol:
  1210  0000'                    pick_and_place@i:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x0
  1214  0000'                    	ds	2
  1215  0002'                    _pick_and_place$765:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x2
  1219  0002'                    	ds	2
  1220  0004'                    ___fltol@sign1:
  1221                           	callstack 0
  1222  0004'                    pick_and_place@i_766:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x4
  1226  0004'                    	ds	1
  1227  0005'                    ___fltol@exp1:
  1228                           	callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x5
  1231  0005'                    	ds	1
  1232  0006'                    _pick_and_place$768:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x6
  1236  0006'                    	ds	2
  1237  0008'                    pick_and_place@i_769:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x8
  1241  0008'                    	ds	2
  1242  000A'                    _pick_and_place$771:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0xA
  1246  000A'                    	ds	2
  1247  000C'                    pick_and_place@i_773:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0xC
  1251  000C'                    	ds	2
  1252  000E'                    pick_and_place@i_776:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0xE
  1256  000E'                    	ds	2
  1257  0010'                    pick_and_place@i_778:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x10
  1261  0010'                    	ds	2
  1262  0012'                    _pick_and_place$779:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x12
  1266  0012'                    	ds	2
  1267  0014'                    pick_and_place@i_780:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x14
  1271  0014'                    	ds	2
  1272  0016'                    _pick_and_place$781:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x16
  1276  0016'                    	ds	2
  1277  0018'                    pick_and_place@i_782:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x18
  1281  0018'                    	ds	2
  1282  001A'                    _pick_and_place$783:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x1A
  1286  001A'                    	ds	2
  1287  001C'                    pick_and_place@i_784:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x1C
  1291  001C'                    	ds	2
  1292  001E'                    pick_and_place@i_785:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x1E
  1296  001E'                    	ds	2
  1297  0020'                    pick_and_place@Componnt:
  1298                           	callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x20
  1301  0020'                    	ds	1
  1302                           
  1303                           	psect	cstackCOMRAM
  1304  0000'                    __pcstackCOMRAM:
  1305                           	callstack 0
  1306  0000'                    ?__delay_ms:
  1307                           	callstack 0
  1308  0000'                    set_new_pos@nTMR1L:
  1309                           	callstack 0
  1310                           
  1311                           ; 1 bytes @ 0x0
  1312  0000'                    	ds	1
  1313  0001'                    set_new_pos@nTMR1H:
  1314                           	callstack 0
  1315                           
  1316                           ; 1 bytes @ 0x1
  1317  0001'                    	ds	1
  1318  0002'                    ??_Rx_char_USART:
  1319                           
  1320                           ; 1 bytes @ 0x2
  1321  0002'                    	ds	5
  1322  0007'                    Rx_char_USART@i:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x7
  1326  0007'                    	ds	2
  1327  0009'                    ?_strlen:
  1328                           	callstack 0
  1329  0009'                    ?_isspace:
  1330                           	callstack 0
  1331  0009'                    ?_isdigit:
  1332                           	callstack 0
  1333  0009'                    ?___wmul:
  1334                           	callstack 0
  1335  0009'                    ?___fladd:
  1336                           	callstack 0
  1337  0009'                    ?___flmul:
  1338                           	callstack 0
  1339  0009'                    ?___flneg:
  1340                           	callstack 0
  1341  0009'                    ?___xxtofl:
  1342                           	callstack 0
  1343  0009'                    Tweezer@action:
  1344                           	callstack 0
  1345  0009'                    fetch_coordinates@Componnt:
  1346                           	callstack 0
  1347  0009'                    print_char@chr:
  1348                           	callstack 0
  1349  0009'                    ms_delay@val:
  1350                           	callstack 0
  1351  0009'                    print_string@strng:
  1352                           	callstack 0
  1353  0009'                    ___wmul@multiplier:
  1354                           	callstack 0
  1355  0009'                    isdigit@c:
  1356                           	callstack 0
  1357  0009'                    isspace@c:
  1358                           	callstack 0
  1359  0009'                    strlen@s:
  1360                           	callstack 0
  1361  0009'                    ___flneg@f1:
  1362                           	callstack 0
  1363  0009'                    ___fladd@b:
  1364                           	callstack 0
  1365  0009'                    ___flmul@b:
  1366                           	callstack 0
  1367  0009'                    ___xxtofl@val:
  1368                           	callstack 0
  1369                           
  1370                           ; 4 bytes @ 0x9
  1371  0009'                    	ds	2
  1372  000B'                    ??_print_string:
  1373  000B'                    ??_isspace:
  1374  000B'                    ??_isdigit:
  1375  000B'                    ms_delay@i:
  1376                           	callstack 0
  1377  000B'                    ___wmul@multiplicand:
  1378                           	callstack 0
  1379  000B'                    strlen@a:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0xB
  1383  000B'                    	ds	2
  1384  000D'                    ??___xxtofl:
  1385  000D'                    ?___memrchr:
  1386                           	callstack 0
  1387  000D'                    ms_delay@j:
  1388                           	callstack 0
  1389  000D'                    print_string@i:
  1390                           	callstack 0
  1391  000D'                    ___wmul@product:
  1392                           	callstack 0
  1393  000D'                    memmove@d1:
  1394                           	callstack 0
  1395  000D'                    strcpy@dest:
  1396                           	callstack 0
  1397  000D'                    ___memrchr@m:
  1398                           	callstack 0
  1399  000D'                    ___fladd@a:
  1400                           	callstack 0
  1401  000D'                    ___flmul@a:
  1402                           	callstack 0
  1403                           
  1404                           ; 4 bytes @ 0xD
  1405  000D'                    	ds	2
  1406  000F'                    ??_change_sequence:
  1407  000F'                    ??_Z_axis:
  1408  000F'                    ??_check_component:
  1409  000F'                    X_axis@direction:
  1410                           	callstack 0
  1411  000F'                    Y_axis@direction:
  1412                           	callstack 0
  1413  000F'                    Twister@direction:
  1414                           	callstack 0
  1415  000F'                    _isspace$1421:
  1416                           	callstack 0
  1417  000F'                    memmove@s1:
  1418                           	callstack 0
  1419  000F'                    strcpy@src:
  1420                           	callstack 0
  1421  000F'                    ___memrchr@c:
  1422                           	callstack 0
  1423                           
  1424                           ; 2 bytes @ 0xF
  1425  000F'                    	ds	1
  1426  0010'                    ?_atoi:
  1427                           	callstack 0
  1428  0010'                    atoi@s:
  1429                           	callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x10
  1432  0010'                    	ds	1
  1433  0011'                    ??___fladd:
  1434  0011'                    ??___flmul:
  1435  0011'                    Z_axis@direction:
  1436                           	callstack 0
  1437  0011'                    check_component@Compnt:
  1438                           	callstack 0
  1439  0011'                    ___xxtofl@sign:
  1440                           	callstack 0
  1441  0011'                    memmove@n:
  1442                           	callstack 0
  1443  0011'                    strcpy@s:
  1444                           	callstack 0
  1445  0011'                    ___memrchr@n:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x11
  1449  0011'                    	ds	1
  1450  0012'                    ??_return_to_initial:
  1451  0012'                    ??_atoi:
  1452  0012'                    ___xxtofl@exp:
  1453                           	callstack 0
  1454  0012'                    change_sequence@i:
  1455                           	callstack 0
  1456  0012'                    check_component@j:
  1457                           	callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x12
  1460  0012'                    	ds	1
  1461  0013'                    ??_memmove:
  1462  0013'                    ??___memrchr:
  1463  0013'                    return_to_initial@i:
  1464                           	callstack 0
  1465  0013'                    strcpy@d:
  1466                           	callstack 0
  1467  0013'                    ___xxtofl@arg:
  1468                           	callstack 0
  1469                           
  1470                           ; 4 bytes @ 0x13
  1471  0013'                    	ds	2
  1472  0015'                    ___fladd@signs:
  1473                           	callstack 0
  1474  0015'                    ___flmul@sign:
  1475                           	callstack 0
  1476  0015'                    return_to_initial@i_788:
  1477                           	callstack 0
  1478  0015'                    memmove@d:
  1479                           	callstack 0
  1480  0015'                    strcat@dest:
  1481                           	callstack 0
  1482  0015'                    ___memrchr@s:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x15
  1486  0015'                    	ds	1
  1487  0016'                    ___fladd@aexp:
  1488                           	callstack 0
  1489  0016'                    atoi@neg:
  1490                           	callstack 0
  1491  0016'                    ___flmul@grs:
  1492                           	callstack 0
  1493                           
  1494                           ; 4 bytes @ 0x16
  1495  0016'                    	ds	1
  1496  0017'                    ?_strrchr:
  1497                           	callstack 0
  1498  0017'                    ?___fldiv:
  1499                           	callstack 0
  1500  0017'                    ___fladd@bexp:
  1501                           	callstack 0
  1502  0017'                    return_to_initial@i_789:
  1503                           	callstack 0
  1504  0017'                    memmove@s:
  1505                           	callstack 0
  1506  0017'                    strcat@src:
  1507                           	callstack 0
  1508  0017'                    strrchr@s:
  1509                           	callstack 0
  1510  0017'                    ___fldiv@b:
  1511                           	callstack 0
  1512                           
  1513                           ; 4 bytes @ 0x17
  1514  0017'                    	ds	1
  1515  0018'                    ___fladd@grs:
  1516                           	callstack 0
  1517  0018'                    _atoi$1403:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x18
  1521  0018'                    	ds	1
  1522  0019'                    ?___flsub:
  1523                           	callstack 0
  1524  0019'                    return_to_initial@i_790:
  1525                           	callstack 0
  1526  0019'                    strrchr@c:
  1527                           	callstack 0
  1528  0019'                    ___flsub@b:
  1529                           	callstack 0
  1530                           
  1531                           ; 4 bytes @ 0x19
  1532  0019'                    	ds	1
  1533  001A'                    ___flmul@aexp:
  1534                           	callstack 0
  1535  001A'                    _atoi$1405:
  1536                           	callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x1A
  1539  001A'                    	ds	1
  1540  001B'                    remove_component@rm_comp:
  1541                           	callstack 0
  1542  001B'                    ___flmul@bexp:
  1543                           	callstack 0
  1544  001B'                    ___fldiv@a:
  1545                           	callstack 0
  1546                           
  1547                           ; 4 bytes @ 0x1B
  1548  001B'                    	ds	1
  1549  001C'                    _atoi$1404:
  1550                           	callstack 0
  1551  001C'                    remove_component@ptr:
  1552                           	callstack 0
  1553  001C'                    ___flmul@prod:
  1554                           	callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x1C
  1557  001C'                    	ds	1
  1558  001D'                    atoi@n:
  1559                           	callstack 0
  1560  001D'                    ___flsub@a:
  1561                           	callstack 0
  1562                           
  1563                           ; 4 bytes @ 0x1D
  1564  001D'                    	ds	1
  1565  001E'                    remove_component@indxToDel:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x1E
  1569  001E'                    	ds	1
  1570  001F'                    ??___fldiv:
  1571  001F'                    add_component@add_componnt:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x1F
  1575  001F'                    	ds	1
  1576  0020'                    ___flmul@temp:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x20
  1580  0020'                    	ds	1
  1581  0021'                    
  1582                           ; 1 bytes @ 0x21
  1583  0021'                    	ds	2
  1584  0023'                    ___fldiv@rem:
  1585                           	callstack 0
  1586                           
  1587                           ; 4 bytes @ 0x23
  1588  0023'                    	ds	4
  1589  0027'                    ___fldiv@sign:
  1590                           	callstack 0
  1591                           
  1592                           ; 1 bytes @ 0x27
  1593  0027'                    	ds	1
  1594  0028'                    ___fldiv@new_exp:
  1595                           	callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x28
  1598  0028'                    	ds	2
  1599  002A'                    ___fldiv@grs:
  1600                           	callstack 0
  1601                           
  1602                           ; 4 bytes @ 0x2A
  1603  002A'                    	ds	4
  1604  002E'                    ___fldiv@bexp:
  1605                           	callstack 0
  1606                           
  1607                           ; 1 bytes @ 0x2E
  1608  002E'                    	ds	1
  1609  002F'                    ___fldiv@aexp:
  1610                           	callstack 0
  1611                           
  1612                           ; 1 bytes @ 0x2F
  1613  002F'                    	ds	1
  1614  0030'                    ___flge@ff1:
  1615                           	callstack 0
  1616                           
  1617                           ; 4 bytes @ 0x30
  1618  0030'                    	ds	4
  1619  0034'                    ___flge@ff2:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x34
  1623  0034'                    	ds	4
  1624  0038'                    ??___flge:
  1625                           
  1626                           ; 1 bytes @ 0x38
  1627  0038'                    	ds	4
  1628  003C'                    ??_pick_and_place:
  1629  003C'                    ?_roundf:
  1630                           	callstack 0
  1631  003C'                    roundf@x:
  1632                           	callstack 0
  1633                           
  1634                           ; 4 bytes @ 0x3C
  1635  003C'                    	ds	2
  1636  003E'                    ??_start_up_menu:
  1637                           
  1638                           ; 1 bytes @ 0x3E
  1639  003E'                    	ds	2
  1640  0040'                    ??_roundf:
  1641  0040'                    start_up_menu@i:
  1642                           	callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x40
  1645  0040'                    	ds	4
  1646  0044'                    _roundf$1684:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x44
  1650  0044'                    	ds	4
  1651  0048'                    roundf@e:
  1652                           	callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x48
  1655  0048'                    	ds	2
  1656  004A'                    _roundf$1683:
  1657                           	callstack 0
  1658                           
  1659                           ; 4 bytes @ 0x4A
  1660  004A'                    	ds	4
  1661  004E'                    roundf@u:
  1662                           	callstack 0
  1663                           
  1664                           ; 4 bytes @ 0x4E
  1665  004E'                    	ds	4
  1666  0052'                    roundf@y:
  1667                           	callstack 0
  1668                           
  1669                           ; 4 bytes @ 0x52
  1670  0052'                    	ds	4
  1671  0056'                    ?___fltol:
  1672                           	callstack 0
  1673  0056'                    ___fltol@f1:
  1674                           	callstack 0
  1675                           
  1676                           ; 4 bytes @ 0x56
  1677  0056'                    	ds	4
  1678  005A'                    
  1679                           ; 1 bytes @ 0x5A
  1680 ;;
  1681 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1682 ;;
  1683 ;; *************** function _main *****************
  1684 ;; Defined at:
  1685 ;;		line 205 in file "main.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1699 ;;      Params:         0       0       0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels required when called: 6
  1705 ;; This function calls:
  1706 ;;		_init_PORTS
  1707 ;;		_init_Timers
  1708 ;;		_init_USART
  1709 ;;		_init_interrupts
  1710 ;;		_start_up_menu
  1711 ;; This function is called by:
  1712 ;;		Startup code after reset
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text0
  1717  0000'                    __ptext0:
  1718                           	callstack 0
  1719  0000'                    _main:
  1720                           	callstack 25
  1721  0000' FFFF               	dw	65535	; assembler added errata NOP
  1722                           
  1723                           ;main.c: 207:     init_PORTS();
  1724  0002' EC00' F000'        	call	_init_PORTS	;wreg free
  1725  0006'                    
  1726                           ;main.c: 208:     init_USART();
  1727  0006' EC00' F000'        	call	_init_USART	;wreg free
  1728  000A'                    
  1729                           ;main.c: 209:     init_interrupts();
  1730  000A' EC00' F000'        	call	_init_interrupts	;wreg free
  1731  000E'                    
  1732                           ;main.c: 210:     init_Timers();
  1733  000E' EC00' F000'        	call	_init_Timers	;wreg free
  1734  0012'                    
  1735                           ;main.c: 212:     (INTCONbits.GIE = 1);
  1736  0012' 8EF2               	bsf	242,7,c	;volatile
  1737  0014'                    
  1738                           ;main.c: 213:     T0CONbits.TMR0ON = 1;
  1739  0014' 8ED5               	bsf	213,7,c	;volatile
  1740  0016'                    
  1741                           ;main.c: 214:  T1CONbits.TMR1ON = 1;
  1742  0016' 80CD               	bsf	205,0,c	;volatile
  1743  0018'                    
  1744                           ;main.c: 215:  LATCbits.LC2 = 1;
  1745  0018' 848B               	bsf	139,2,c	;volatile
  1746  001A'                    l5277:
  1747  001A' FFFF               	dw	65535	; assembler added errata NOP
  1748                           
  1749                           ;main.c: 218:         New_char_RX=0;
  1750  001C' 0E00               	movlw	0
  1751  001E' 6E00'              	movwf	_New_char_RX^0,c
  1752  0020'                    
  1753                           ;main.c: 219:         start_up_menu();
  1754  0020' EC00' F000'        	call	_start_up_menu	;wreg free
  1755  0024' EF00' F000'        	goto	l5277
  1756  0028' EF00' F000'        	goto	start
  1757  002C'                    __end_of_main:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _start_up_menu *****************
  1761 ;; Defined at:
  1762 ;;		line 225 in file "main.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  i               2   64[COMRAM] int 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1776 ;;      Params:         0       0       0       0       0       0       0
  1777 ;;      Locals:         2       0       0       0       0       0       0
  1778 ;;      Temps:          2       0       0       0       0       0       0
  1779 ;;      Totals:         4       0       0       0       0       0       0
  1780 ;;Total ram usage:        4 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 5
  1783 ;; This function calls:
  1784 ;;		_add_component
  1785 ;;		_change_sequence
  1786 ;;		_pick_and_place
  1787 ;;		_print_string
  1788 ;;		_remove_component
  1789 ;;		_return_to_initial
  1790 ;;		_strlen
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text1
  1797  0000'                    __ptext1:
  1798                           	callstack 0
  1799  0000'                    _start_up_menu:
  1800                           	callstack 0
  1801  0000' FFFF               	dw	65535	; assembler added errata NOP
  1802  0002'                    
  1803                           ;main.c: 227:     print_string("\n\n1. Start Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component\n5. Return to Initial Position");
  1804  0002' 0E00'              	movlw	low STR_1
  1805  0004' 6E00'              	movwf	print_string@strng^0,c
  1806  0006' 0E00'              	movlw	high STR_1
  1807  0008' 6E00'              	movwf	(print_string@strng+1)^0,c
  1808  000A' EC00' F000'        	call	_print_string	;wreg free
  1809  000E'                    l5217:
  1810  000E' FFFF               	dw	65535	; assembler added errata NOP
  1811                           
  1812                           ;main.c: 230:         if(New_char_RX){
  1813  0010' 5000'              	movf	_New_char_RX^0,w,c
  1814  0012' B4D8               	btfsc	status,2,c
  1815  0014' EF00' F000'        	goto	u6191
  1816  0018' EF00' F000'        	goto	u6190
  1817  001C'                    u6191:
  1818  001C' FFFF               	dw	65535	; assembler added errata NOP
  1819  001E' EF00' F000'        	goto	l5217
  1820  0022'                    u6190:
  1821  0022' FFFF               	dw	65535	; assembler added errata NOP
  1822  0024'                    
  1823                           ;main.c: 231:             New_char_RX=0;
  1824  0024' 0E00               	movlw	0
  1825  0026' 6E00'              	movwf	_New_char_RX^0,c
  1826  0028'                    
  1827                           ;main.c: 232:             func = input_str[0];
  1828  0028' C010' F00C'        	movff	_input_str,_func	;volatile
  1829                           
  1830                           ;main.c: 233:             switch(func){
  1831  002C' EF00' F000'        	goto	l5255
  1832  0030'                    l5223:
  1833  0030' FFFF               	dw	65535	; assembler added errata NOP
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 236:                     print_string("\n\nStarting sequence:");
  1837  0032' 0E00'              	movlw	low STR_2
  1838  0034' 6E00'              	movwf	print_string@strng^0,c
  1839  0036' 0E00'              	movlw	high STR_2
  1840  0038' 6E00'              	movwf	(print_string@strng+1)^0,c
  1841  003A' EC00' F000'        	call	_print_string	;wreg free
  1842                           
  1843                           ;main.c: 237:                     print_string(sequence);
  1844  003E' 0E00'              	movlw	low _sequence
  1845  0040' 6E00'              	movwf	print_string@strng^0,c
  1846  0042' 0E00'              	movlw	high _sequence
  1847  0044' 6E00'              	movwf	(print_string@strng+1)^0,c
  1848  0046' EC00' F000'        	call	_print_string	;wreg free
  1849  004A'                    
  1850                           ;main.c: 238:                     return_to_initial();
  1851  004A' EC00' F000'        	call	_return_to_initial	;wreg free
  1852  004E'                    
  1853                           ;main.c: 239:                     X_diff=0;
  1854  004E' 0E00               	movlw	0
  1855  0050' 6E00'              	movwf	(_X_diff+1)^0,c
  1856  0052' 0E00               	movlw	0
  1857  0054' 6E00'              	movwf	_X_diff^0,c
  1858  0056'                    
  1859                           ;main.c: 240:                     Y_diff=0;
  1860  0056' 0E00               	movlw	0
  1861  0058' 6E00'              	movwf	(_Y_diff+1)^0,c
  1862  005A' 0E00               	movlw	0
  1863  005C' 6E00'              	movwf	_Y_diff^0,c
  1864  005E'                    
  1865                           ;main.c: 241:                     Angle_diff=0;
  1866  005E' 0E00               	movlw	0
  1867  0060' 6E00'              	movwf	(_Angle_diff+1)^0,c
  1868  0062' 0E00               	movlw	0
  1869  0064' 6E00'              	movwf	_Angle_diff^0,c
  1870                           
  1871                           ;main.c: 243:                     while(!stop){
  1872  0066' EF00' F000'        	goto	l5243
  1873  006A'                    l5233:
  1874  006A' FFFF               	dw	65535	; assembler added errata NOP
  1875                           
  1876                           ;main.c: 244:                         for(int i=0; i<strlen(sequence) && !stop;i++){
  1877  006C' 0E00               	movlw	0
  1878  006E' 6E00'              	movwf	(start_up_menu@i+1)^0,c
  1879  0070' 0E00               	movlw	0
  1880  0072' 6E00'              	movwf	start_up_menu@i^0,c
  1881  0074' EF00' F000'        	goto	l5239
  1882  0078'                    l5235:
  1883  0078' FFFF               	dw	65535	; assembler added errata NOP
  1884                           
  1885                           ;main.c: 245:                             pick_and_place(sequence[i]);
  1886  007A' 0E00'              	movlw	low _sequence
  1887  007C' 2400'              	addwf	start_up_menu@i^0,w,c
  1888  007E' 6ED9               	movwf	fsr2l,c
  1889  0080' 0E00'              	movlw	high _sequence
  1890  0082' 2000'              	addwfc	(start_up_menu@i+1)^0,w,c
  1891  0084' 6EDA               	movwf	fsr2h,c
  1892  0086' 50DF               	movf	indf2,w,c
  1893  0088' EC00' F000'        	call	_pick_and_place
  1894  008C'                    
  1895                           ;main.c: 246:                         }
  1896  008C' 4A00'              	infsnz	start_up_menu@i^0,f,c
  1897  008E' 2A00'              	incf	(start_up_menu@i+1)^0,f,c
  1898  0090'                    l5239:
  1899  0090' FFFF               	dw	65535	; assembler added errata NOP
  1900  0092' 0E00'              	movlw	low _sequence
  1901  0094' 6E00'              	movwf	strlen@s^0,c
  1902  0096' 0E00'              	movlw	high _sequence
  1903  0098' 6E00'              	movwf	(strlen@s+1)^0,c
  1904  009A' EC00' F000'        	call	_strlen	;wreg free
  1905  009E' 5000'              	movf	?_strlen^0,w,c
  1906  00A0' 5C00'              	subwf	start_up_menu@i^0,w,c
  1907  00A2' 5000'              	movf	(?_strlen+1)^0,w,c
  1908  00A4' 5800'              	subwfb	(start_up_menu@i+1)^0,w,c
  1909  00A6' B0D8               	btfsc	status,0,c
  1910  00A8' EF00' F000'        	goto	u6201
  1911  00AC' EF00' F000'        	goto	u6200
  1912  00B0'                    u6201:
  1913  00B0' FFFF               	dw	65535	; assembler added errata NOP
  1914  00B2' EF00' F000'        	goto	l5243
  1915  00B6'                    u6200:
  1916  00B6' FFFF               	dw	65535	; assembler added errata NOP
  1917  00B8' 5000'              	movf	_stop^0,w,c
  1918  00BA' B4D8               	btfsc	status,2,c
  1919  00BC' EF00' F000'        	goto	u6211
  1920  00C0' EF00' F000'        	goto	u6210
  1921  00C4'                    u6211:
  1922  00C4' FFFF               	dw	65535	; assembler added errata NOP
  1923  00C6' EF00' F000'        	goto	l5235
  1924  00CA'                    u6210:
  1925  00CA'                    l5243:
  1926  00CA' FFFF               	dw	65535	; assembler added errata NOP
  1927                           
  1928                           ;main.c: 243:                     while(!stop){
  1929  00CC' 5000'              	movf	_stop^0,w,c
  1930  00CE' B4D8               	btfsc	status,2,c
  1931  00D0' EF00' F000'        	goto	u6221
  1932  00D4' EF00' F000'        	goto	u6220
  1933  00D8'                    u6221:
  1934  00D8' FFFF               	dw	65535	; assembler added errata NOP
  1935  00DA' EF00' F000'        	goto	l5233
  1936  00DE'                    u6220:
  1937  00DE' FFFF               	dw	65535	; assembler added errata NOP
  1938  00E0' EF00' F000'        	goto	l231
  1939  00E4'                    l5245:
  1940  00E4' FFFF               	dw	65535	; assembler added errata NOP
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;main.c: 251:                     change_sequence();
  1944  00E6' EC00' F000'        	call	_change_sequence	;wreg free
  1945                           
  1946                           ;main.c: 252:                     break;
  1947  00EA' EF00' F000'        	goto	l231
  1948  00EE'                    l5247:
  1949  00EE' FFFF               	dw	65535	; assembler added errata NOP
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;main.c: 255:                     add_component();
  1953  00F0' EC00' F000'        	call	_add_component	;wreg free
  1954                           
  1955                           ;main.c: 256:                     break;
  1956  00F4' EF00' F000'        	goto	l231
  1957  00F8'                    l5249:
  1958  00F8' FFFF               	dw	65535	; assembler added errata NOP
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;main.c: 259:                     remove_component();
  1962  00FA' EC00' F000'        	call	_remove_component	;wreg free
  1963                           
  1964                           ;main.c: 260:                     break;
  1965  00FE' EF00' F000'        	goto	l231
  1966  0102'                    l5251:
  1967  0102' FFFF               	dw	65535	; assembler added errata NOP
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;main.c: 263:                     return_to_initial();
  1971  0104' EC00' F000'        	call	_return_to_initial	;wreg free
  1972                           
  1973                           ;main.c: 264:                     break;
  1974  0108' EF00' F000'        	goto	l231
  1975  010C'                    l5255:
  1976  010C' FFFF               	dw	65535	; assembler added errata NOP
  1977  010E' 0100               	movlb	0	; () banked
  1978  0110' 5100'              	movf	_func& (0+255),w,b
  1979  0112' 6E00'              	movwf	??_start_up_menu^0,c
  1980  0114' 6A00'              	clrf	(??_start_up_menu+1)^0,c
  1981                           
  1982                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1983                           ; Switch size 1, requested type "simple"
  1984                           ; Number of cases is 1, Range of values is 0 to 0
  1985                           ; switch strategies available:
  1986                           ; Name         Instructions Cycles
  1987                           ; simple_byte            4     3 (average)
  1988                           ;	Chosen strategy is simple_byte
  1989  0116' 5000'              	movf	(??_start_up_menu+1)^0,w,c
  1990  0118' 0A00               	xorlw	0	; case 0
  1991  011A' B4D8               	btfsc	status,2,c
  1992  011C' EF00' F000'        	goto	l5321
  1993  0120' EF00' F000'        	goto	l231
  1994  0124'                    l5321:
  1995  0124' FFFF               	dw	65535	; assembler added errata NOP
  1996                           
  1997                           ; BSR set to: 0
  1998                           ; Switch size 1, requested type "simple"
  1999                           ; Number of cases is 5, Range of values is 49 to 53
  2000                           ; switch strategies available:
  2001                           ; Name         Instructions Cycles
  2002                           ; simple_byte           16     9 (average)
  2003                           ;	Chosen strategy is simple_byte
  2004  0126' 5000'              	movf	??_start_up_menu^0,w,c
  2005  0128' 0A31               	xorlw	49	; case 49
  2006  012A' B4D8               	btfsc	status,2,c
  2007  012C' EF00' F000'        	goto	l5223
  2008  0130' 0A03               	xorlw	3	; case 50
  2009  0132' B4D8               	btfsc	status,2,c
  2010  0134' EF00' F000'        	goto	l5245
  2011  0138' 0A01               	xorlw	1	; case 51
  2012  013A' B4D8               	btfsc	status,2,c
  2013  013C' EF00' F000'        	goto	l5247
  2014  0140' 0A07               	xorlw	7	; case 52
  2015  0142' B4D8               	btfsc	status,2,c
  2016  0144' EF00' F000'        	goto	l5249
  2017  0148' 0A01               	xorlw	1	; case 53
  2018  014A' B4D8               	btfsc	status,2,c
  2019  014C' EF00' F000'        	goto	l5251
  2020  0150' EF00' F000'        	goto	l231
  2021  0154'                    l231:
  2022  0154' FFFF               	dw	65535	; assembler added errata NOP
  2023  0156' 0012               	return		;funcret
  2024  0158' FFFF               	dw	65535	; errata NOP
  2025  015A'                    __end_of_start_up_menu:
  2026                           	callstack 0
  2027                           
  2028 ;; *************** function _return_to_initial *****************
  2029 ;; Defined at:
  2030 ;;		line 703 in file "main.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  i               2   25[COMRAM] int 
  2035 ;;  i               2   23[COMRAM] int 
  2036 ;;  i               2   21[COMRAM] int 
  2037 ;;  i               2   19[COMRAM] int 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2047 ;;      Params:         0       0       0       0       0       0       0
  2048 ;;      Locals:         8       0       0       0       0       0       0
  2049 ;;      Temps:          1       0       0       0       0       0       0
  2050 ;;      Totals:         9       0       0       0       0       0       0
  2051 ;;Total ram usage:        9 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 4
  2054 ;; This function calls:
  2055 ;;		_Tweezer
  2056 ;;		_Twister
  2057 ;;		_X_axis
  2058 ;;		_Y_axis
  2059 ;;		_Z_axis
  2060 ;; This function is called by:
  2061 ;;		_start_up_menu
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text2
  2066  0000'                    __ptext2:
  2067                           	callstack 0
  2068  0000'                    _return_to_initial:
  2069                           	callstack 0
  2070  0000' FFFF               	dw	65535	; assembler added errata NOP
  2071  0002'                    
  2072                           ;main.c: 704:     New_char_RX=0;
  2073  0002' 0E00               	movlw	0
  2074  0004' 6E00'              	movwf	_New_char_RX^0,c
  2075                           
  2076                           ;main.c: 705:     stop=0;
  2077  0006' 0E00               	movlw	0
  2078  0008' 6E00'              	movwf	_stop^0,c
  2079  000A'                    
  2080                           ;main.c: 706:     Steps=Step_X;
  2081  000A' C018' F000'        	movff	_Step_X,_Steps
  2082  000E' C019' F001'        	movff	_Step_X+1,_Steps+1
  2083                           
  2084                           ;main.c: 707:     for(int i = 0; i<Steps; i++){X_axis(0);}
  2085  0012' 0E00               	movlw	0
  2086  0014' 6E00'              	movwf	(return_to_initial@i+1)^0,c
  2087  0016' 0E00               	movlw	0
  2088  0018' 6E00'              	movwf	return_to_initial@i^0,c
  2089  001A' EF00' F000'        	goto	l4807
  2090  001E'                    l4803:
  2091  001E' FFFF               	dw	65535	; assembler added errata NOP
  2092  0020' 0E00               	movlw	0
  2093  0022' EC00' F000'        	call	_X_axis
  2094  0026' 4A00'              	infsnz	return_to_initial@i^0,f,c
  2095  0028' 2A00'              	incf	(return_to_initial@i+1)^0,f,c
  2096  002A'                    l4807:
  2097  002A' FFFF               	dw	65535	; assembler added errata NOP
  2098  002C' 5000'              	movf	_Steps^0,w,c
  2099  002E' 5C00'              	subwf	return_to_initial@i^0,w,c
  2100  0030' 5000'              	movf	(return_to_initial@i+1)^0,w,c
  2101  0032' 0A80               	xorlw	128
  2102  0034' 6E00'              	movwf	??_return_to_initial^0,c
  2103  0036' 5000'              	movf	(_Steps+1)^0,w,c
  2104  0038' 0A80               	xorlw	128
  2105  003A' 5800'              	subwfb	??_return_to_initial^0,w,c
  2106  003C' A0D8               	btfss	status,0,c
  2107  003E' EF00' F000'        	goto	u5461
  2108  0042' EF00' F000'        	goto	u5460
  2109  0046'                    u5461:
  2110  0046' FFFF               	dw	65535	; assembler added errata NOP
  2111  0048' EF00' F000'        	goto	l4803
  2112  004C'                    u5460:
  2113  004C' FFFF               	dw	65535	; assembler added errata NOP
  2114  004E'                    
  2115                           ;main.c: 709:     Steps=Step_Y;
  2116  004E' C016' F000'        	movff	_Step_Y,_Steps
  2117  0052' C017' F001'        	movff	_Step_Y+1,_Steps+1
  2118  0056'                    
  2119                           ;main.c: 710:     for(int i = 0; i<Steps; i++){Y_axis(0);}
  2120  0056' 0E00               	movlw	0
  2121  0058' 6E00'              	movwf	(return_to_initial@i_788+1)^0,c
  2122  005A' 0E00               	movlw	0
  2123  005C' 6E00'              	movwf	return_to_initial@i_788^0,c
  2124  005E' EF00' F000'        	goto	l4815
  2125  0062'                    l4811:
  2126  0062' FFFF               	dw	65535	; assembler added errata NOP
  2127  0064' 0E00               	movlw	0
  2128  0066' EC00' F000'        	call	_Y_axis
  2129  006A' 4A00'              	infsnz	return_to_initial@i_788^0,f,c
  2130  006C' 2A00'              	incf	(return_to_initial@i_788+1)^0,f,c
  2131  006E'                    l4815:
  2132  006E' FFFF               	dw	65535	; assembler added errata NOP
  2133  0070' 5000'              	movf	_Steps^0,w,c
  2134  0072' 5C00'              	subwf	return_to_initial@i_788^0,w,c
  2135  0074' 5000'              	movf	(return_to_initial@i_788+1)^0,w,c
  2136  0076' 0A80               	xorlw	128
  2137  0078' 6E00'              	movwf	??_return_to_initial^0,c
  2138  007A' 5000'              	movf	(_Steps+1)^0,w,c
  2139  007C' 0A80               	xorlw	128
  2140  007E' 5800'              	subwfb	??_return_to_initial^0,w,c
  2141  0080' A0D8               	btfss	status,0,c
  2142  0082' EF00' F000'        	goto	u5471
  2143  0086' EF00' F000'        	goto	u5470
  2144  008A'                    u5471:
  2145  008A' FFFF               	dw	65535	; assembler added errata NOP
  2146  008C' EF00' F000'        	goto	l4811
  2147  0090'                    u5470:
  2148  0090' FFFF               	dw	65535	; assembler added errata NOP
  2149  0092'                    
  2150                           ;main.c: 712:     Steps=Step_Angle;
  2151  0092' C012' F000'        	movff	_Step_Angle,_Steps
  2152  0096' C013' F001'        	movff	_Step_Angle+1,_Steps+1
  2153  009A'                    
  2154                           ;main.c: 713:     for(int i = 0; i<Steps; i++){Twister(0);}
  2155  009A' 0E00               	movlw	0
  2156  009C' 6E00'              	movwf	(return_to_initial@i_789+1)^0,c
  2157  009E' 0E00               	movlw	0
  2158  00A0' 6E00'              	movwf	return_to_initial@i_789^0,c
  2159  00A2' EF00' F000'        	goto	l4823
  2160  00A6'                    l4819:
  2161  00A6' FFFF               	dw	65535	; assembler added errata NOP
  2162  00A8' 0E00               	movlw	0
  2163  00AA' EC00' F000'        	call	_Twister
  2164  00AE' 4A00'              	infsnz	return_to_initial@i_789^0,f,c
  2165  00B0' 2A00'              	incf	(return_to_initial@i_789+1)^0,f,c
  2166  00B2'                    l4823:
  2167  00B2' FFFF               	dw	65535	; assembler added errata NOP
  2168  00B4' 5000'              	movf	_Steps^0,w,c
  2169  00B6' 5C00'              	subwf	return_to_initial@i_789^0,w,c
  2170  00B8' 5000'              	movf	(return_to_initial@i_789+1)^0,w,c
  2171  00BA' 0A80               	xorlw	128
  2172  00BC' 6E00'              	movwf	??_return_to_initial^0,c
  2173  00BE' 5000'              	movf	(_Steps+1)^0,w,c
  2174  00C0' 0A80               	xorlw	128
  2175  00C2' 5800'              	subwfb	??_return_to_initial^0,w,c
  2176  00C4' A0D8               	btfss	status,0,c
  2177  00C6' EF00' F000'        	goto	u5481
  2178  00CA' EF00' F000'        	goto	u5480
  2179  00CE'                    u5481:
  2180  00CE' FFFF               	dw	65535	; assembler added errata NOP
  2181  00D0' EF00' F000'        	goto	l4819
  2182  00D4'                    u5480:
  2183  00D4' FFFF               	dw	65535	; assembler added errata NOP
  2184  00D6'                    
  2185                           ;main.c: 715:     Steps=Step_Z;
  2186  00D6' C014' F000'        	movff	_Step_Z,_Steps
  2187  00DA' C015' F001'        	movff	_Step_Z+1,_Steps+1
  2188  00DE'                    
  2189                           ;main.c: 716:     for(int i=0; i<Steps; i++){Z_axis(0);}
  2190  00DE' 0E00               	movlw	0
  2191  00E0' 6E00'              	movwf	(return_to_initial@i_790+1)^0,c
  2192  00E2' 0E00               	movlw	0
  2193  00E4' 6E00'              	movwf	return_to_initial@i_790^0,c
  2194  00E6' EF00' F000'        	goto	l4831
  2195  00EA'                    l4827:
  2196  00EA' FFFF               	dw	65535	; assembler added errata NOP
  2197  00EC' 0E00               	movlw	0
  2198  00EE' EC00' F000'        	call	_Z_axis
  2199  00F2' 4A00'              	infsnz	return_to_initial@i_790^0,f,c
  2200  00F4' 2A00'              	incf	(return_to_initial@i_790+1)^0,f,c
  2201  00F6'                    l4831:
  2202  00F6' FFFF               	dw	65535	; assembler added errata NOP
  2203  00F8' 5000'              	movf	_Steps^0,w,c
  2204  00FA' 5C00'              	subwf	return_to_initial@i_790^0,w,c
  2205  00FC' 5000'              	movf	(return_to_initial@i_790+1)^0,w,c
  2206  00FE' 0A80               	xorlw	128
  2207  0100' 6E00'              	movwf	??_return_to_initial^0,c
  2208  0102' 5000'              	movf	(_Steps+1)^0,w,c
  2209  0104' 0A80               	xorlw	128
  2210  0106' 5800'              	subwfb	??_return_to_initial^0,w,c
  2211  0108' A0D8               	btfss	status,0,c
  2212  010A' EF00' F000'        	goto	u5491
  2213  010E' EF00' F000'        	goto	u5490
  2214  0112'                    u5491:
  2215  0112' FFFF               	dw	65535	; assembler added errata NOP
  2216  0114' EF00' F000'        	goto	l4827
  2217  0118'                    u5490:
  2218  0118' FFFF               	dw	65535	; assembler added errata NOP
  2219  011A'                    
  2220                           ;main.c: 718:     Tweezer(0);
  2221  011A' 0E00               	movlw	0
  2222  011C' EC00' F000'        	call	_Tweezer
  2223  0120' 0012               	return		;funcret
  2224  0122' FFFF               	dw	65535	; errata NOP
  2225  0124'                    __end_of_return_to_initial:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function _remove_component *****************
  2229 ;; Defined at:
  2230 ;;		line 375 in file "main.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  indxToDel       2   30[COMRAM] int 
  2235 ;;  ptr             2   28[COMRAM] PTR unsigned char 
  2236 ;;		 -> NULL(0), sequence(4), 
  2237 ;;  rm_comp         1   27[COMRAM] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2247 ;;      Params:         0       0       0       0       0       0       0
  2248 ;;      Locals:         5       0       0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0
  2250 ;;      Totals:         5       0       0       0       0       0       0
  2251 ;;Total ram usage:        5 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 4
  2254 ;; This function calls:
  2255 ;;		_memmove
  2256 ;;		_print_string
  2257 ;;		_strlen
  2258 ;;		_strrchr
  2259 ;; This function is called by:
  2260 ;;		_start_up_menu
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text3
  2265  0000'                    __ptext3:
  2266                           	callstack 0
  2267  0000'                    _remove_component:
  2268                           	callstack 0
  2269  0000' FFFF               	dw	65535	; assembler added errata NOP
  2270  0002'                    
  2271                           ;main.c: 376:     print_string("\nWhich component would you like to remove from the  seq
      +                          uence?\n");
  2272  0002' 0E00'              	movlw	low STR_14
  2273  0004' 6E00'              	movwf	print_string@strng^0,c
  2274  0006' 0E00'              	movlw	high STR_14
  2275  0008' 6E00'              	movwf	(print_string@strng+1)^0,c
  2276  000A' EC00' F000'        	call	_print_string	;wreg free
  2277                           
  2278                           ;main.c: 377:     print_string(sequence);
  2279  000E' 0E00'              	movlw	low _sequence
  2280  0010' 6E00'              	movwf	print_string@strng^0,c
  2281  0012' 0E00'              	movlw	high _sequence
  2282  0014' 6E00'              	movwf	(print_string@strng+1)^0,c
  2283  0016' EC00' F000'        	call	_print_string	;wreg free
  2284  001A'                    l5095:
  2285  001A' FFFF               	dw	65535	; assembler added errata NOP
  2286                           
  2287                           ;main.c: 379:         if(New_char_RX){
  2288  001C' 5000'              	movf	_New_char_RX^0,w,c
  2289  001E' B4D8               	btfsc	status,2,c
  2290  0020' EF00' F000'        	goto	u6001
  2291  0024' EF00' F000'        	goto	u6000
  2292  0028'                    u6001:
  2293  0028' FFFF               	dw	65535	; assembler added errata NOP
  2294  002A' EF00' F000'        	goto	l5095
  2295  002E'                    u6000:
  2296  002E' FFFF               	dw	65535	; assembler added errata NOP
  2297  0030'                    
  2298                           ;main.c: 380:             New_char_RX=0;
  2299  0030' 0E00               	movlw	0
  2300  0032' 6E00'              	movwf	_New_char_RX^0,c
  2301  0034'                    
  2302                           ;main.c: 381:             char rm_comp = input_str[0];
  2303  0034' C010' F01B'        	movff	_input_str,remove_component@rm_comp	;volatile
  2304  0038'                    
  2305                           ;main.c: 382:             char *ptr;;main.c: 383:             int indxToDel;;main.c: 384
      +                          :             ptr=strrchr(sequence,rm_comp);
  2306  0038' 0E00'              	movlw	low _sequence
  2307  003A' 6E00'              	movwf	strrchr@s^0,c
  2308  003C' 0E00'              	movlw	high _sequence
  2309  003E' 6E00'              	movwf	(strrchr@s+1)^0,c
  2310  0040' C01B' F019'        	movff	remove_component@rm_comp,strrchr@c
  2311  0044' 6A00'              	clrf	(strrchr@c+1)^0,c
  2312  0046' EC00' F000'        	call	_strrchr	;wreg free
  2313  004A' C017' F01C'        	movff	?_strrchr,remove_component@ptr
  2314  004E' C018' F01D'        	movff	?_strrchr+1,remove_component@ptr+1
  2315  0052'                    
  2316                           ;main.c: 386:             if(ptr != ((void*)0)){
  2317  0052' 5000'              	movf	remove_component@ptr^0,w,c
  2318  0054' 1000'              	iorwf	(remove_component@ptr+1)^0,w,c
  2319  0056' B4D8               	btfsc	status,2,c
  2320  0058' EF00' F000'        	goto	u6011
  2321  005C' EF00' F000'        	goto	u6010
  2322  0060'                    u6011:
  2323  0060' FFFF               	dw	65535	; assembler added errata NOP
  2324  0062' EF00' F000'        	goto	l5115
  2325  0066'                    u6010:
  2326  0066' FFFF               	dw	65535	; assembler added errata NOP
  2327  0068'                    
  2328                           ;main.c: 387:                 indxToDel = ptr - sequence;
  2329  0068' 0E00'              	movlw	low _sequence
  2330  006A' 5C00'              	subwf	remove_component@ptr^0,w,c
  2331  006C' 6E00'              	movwf	remove_component@indxToDel^0,c
  2332  006E' 0E00'              	movlw	high _sequence
  2333  0070' 5800'              	subwfb	(remove_component@ptr+1)^0,w,c
  2334  0072' 6E00'              	movwf	(remove_component@indxToDel+1)^0,c
  2335  0074'                    
  2336                           ;main.c: 388:                 memmove(&sequence[indxToDel], &sequence[indxToDel + 1], st
      +                          rlen(sequence) - indxToDel);
  2337  0074' 0E00'              	movlw	low _sequence
  2338  0076' 2400'              	addwf	remove_component@indxToDel^0,w,c
  2339  0078' 6E00'              	movwf	memmove@d1^0,c
  2340  007A' 0E00'              	movlw	high _sequence
  2341  007C' 2000'              	addwfc	(remove_component@indxToDel+1)^0,w,c
  2342  007E' 6E00'              	movwf	(memmove@d1+1)^0,c
  2343  0080' 0E00'              	movlw	low (_sequence+1)
  2344  0082' 2400'              	addwf	remove_component@indxToDel^0,w,c
  2345  0084' 6E00'              	movwf	memmove@s1^0,c
  2346  0086' 0E00'              	movlw	high (_sequence+1)
  2347  0088' 2000'              	addwfc	(remove_component@indxToDel+1)^0,w,c
  2348  008A' 6E00'              	movwf	(memmove@s1+1)^0,c
  2349  008C' 0E00'              	movlw	low _sequence
  2350  008E' 6E00'              	movwf	strlen@s^0,c
  2351  0090' 0E00'              	movlw	high _sequence
  2352  0092' 6E00'              	movwf	(strlen@s+1)^0,c
  2353  0094' EC00' F000'        	call	_strlen	;wreg free
  2354  0098' 5000'              	movf	remove_component@indxToDel^0,w,c
  2355  009A' 5C00'              	subwf	?_strlen^0,w,c
  2356  009C' 6E00'              	movwf	memmove@n^0,c
  2357  009E' 5000'              	movf	(remove_component@indxToDel+1)^0,w,c
  2358  00A0' 5800'              	subwfb	(?_strlen+1)^0,w,c
  2359  00A2' 6E00'              	movwf	(memmove@n+1)^0,c
  2360  00A4' EC00' F000'        	call	_memmove	;wreg free
  2361  00A8'                    
  2362                           ;main.c: 389:                 print_string("\ncomponent removed");
  2363  00A8' 0E00'              	movlw	low STR_15
  2364  00AA' 6E00'              	movwf	print_string@strng^0,c
  2365  00AC' 0E00'              	movlw	high STR_15
  2366  00AE' 6E00'              	movwf	(print_string@strng+1)^0,c
  2367  00B0' EC00' F000'        	call	_print_string	;wreg free
  2368  00B4'                    
  2369                           ;main.c: 390:                 stop=0;
  2370  00B4' 0E00               	movlw	0
  2371  00B6' 6E00'              	movwf	_stop^0,c
  2372                           
  2373                           ;main.c: 391:                 break;
  2374  00B8' EF00' F000'        	goto	l5119
  2375  00BC'                    l5115:
  2376  00BC' FFFF               	dw	65535	; assembler added errata NOP
  2377                           
  2378                           ;main.c: 396:                 print_string("\ncomponent is not in the sequence. Try sele
      +                          cting another component: \n");
  2379  00BE' 0E00'              	movlw	low STR_16
  2380  00C0' 6E00'              	movwf	print_string@strng^0,c
  2381  00C2' 0E00'              	movlw	high STR_16
  2382  00C4' 6E00'              	movwf	(print_string@strng+1)^0,c
  2383  00C6' EC00' F000'        	call	_print_string	;wreg free
  2384  00CA'                    l5117:
  2385  00CA' FFFF               	dw	65535	; assembler added errata NOP
  2386  00CC' 5000'              	movf	_New_char_RX^0,w,c
  2387  00CE' B4D8               	btfsc	status,2,c
  2388  00D0' EF00' F000'        	goto	u6021
  2389  00D4' EF00' F000'        	goto	u6020
  2390  00D8'                    u6021:
  2391  00D8' FFFF               	dw	65535	; assembler added errata NOP
  2392  00DA' EF00' F000'        	goto	l5117
  2393  00DE'                    u6020:
  2394  00DE' FFFF               	dw	65535	; assembler added errata NOP
  2395  00E0' EF00' F000'        	goto	l5095
  2396  00E4'                    l5119:
  2397  00E4' FFFF               	dw	65535	; assembler added errata NOP
  2398                           
  2399                           ;main.c: 401:     New_char_RX=0;
  2400  00E6' 0E00               	movlw	0
  2401  00E8' 6E00'              	movwf	_New_char_RX^0,c
  2402  00EA' 0012               	return		;funcret
  2403  00EC' FFFF               	dw	65535	; errata NOP
  2404  00EE'                    __end_of_remove_component:
  2405                           	callstack 0
  2406                           
  2407 ;; *************** function _strrchr *****************
  2408 ;; Defined at:
  2409 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2412 ;;		 -> sequence(4), 
  2413 ;;  c               2   25[COMRAM] int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2   23[COMRAM] PTR unsigned char 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2425 ;;      Params:         4       0       0       0       0       0       0
  2426 ;;      Locals:         0       0       0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0
  2428 ;;      Totals:         4       0       0       0       0       0       0
  2429 ;;Total ram usage:        4 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 3
  2432 ;; This function calls:
  2433 ;;		___memrchr
  2434 ;;		_strlen
  2435 ;; This function is called by:
  2436 ;;		_remove_component
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text4
  2441  0000'                    __ptext4:
  2442                           	callstack 0
  2443  0000'                    _strrchr:
  2444                           	callstack 0
  2445  0000' FFFF               	dw	65535	; assembler added errata NOP
  2446  0002' C017' F00D'        	movff	strrchr@s,___memrchr@m
  2447  0006' C018' F00E'        	movff	strrchr@s+1,___memrchr@m+1
  2448  000A' C019' F00F'        	movff	strrchr@c,___memrchr@c
  2449  000E' C01A' F010'        	movff	strrchr@c+1,___memrchr@c+1
  2450  0012' C017' F009'        	movff	strrchr@s,strlen@s
  2451  0016' C018' F00A'        	movff	strrchr@s+1,strlen@s+1
  2452  001A' EC00' F000'        	call	_strlen	;wreg free
  2453  001E' 0E01               	movlw	1
  2454  0020' 2400'              	addwf	?_strlen^0,w,c
  2455  0022' 6E00'              	movwf	___memrchr@n^0,c
  2456  0024' 0E00               	movlw	0
  2457  0026' 2000'              	addwfc	(?_strlen+1)^0,w,c
  2458  0028' 6E00'              	movwf	(___memrchr@n+1)^0,c
  2459  002A' EC00' F000'        	call	___memrchr	;wreg free
  2460  002E' C00D' F017'        	movff	?___memrchr,?_strrchr
  2461  0032' C00E' F018'        	movff	?___memrchr+1,?_strrchr+1
  2462  0036' 0012               	return		;funcret
  2463  0038' FFFF               	dw	65535	; errata NOP
  2464  003A'                    __end_of_strrchr:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function ___memrchr *****************
  2468 ;; Defined at:
  2469 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  m               2   13[COMRAM] PTR const void 
  2472 ;;		 -> sequence(4), 
  2473 ;;  c               2   15[COMRAM] int 
  2474 ;;  n               2   17[COMRAM] unsigned int 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2477 ;;		 -> sequence(4), 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  2   13[COMRAM] PTR void 
  2480 ;; Registers used:
  2481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2487 ;;      Params:         6       0       0       0       0       0       0
  2488 ;;      Locals:         2       0       0       0       0       0       0
  2489 ;;      Temps:          2       0       0       0       0       0       0
  2490 ;;      Totals:        10       0       0       0       0       0       0
  2491 ;;Total ram usage:       10 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; Hardware stack levels required when called: 2
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_strrchr
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text5
  2502  0000'                    __ptext5:
  2503                           	callstack 0
  2504  0000'                    ___memrchr:
  2505                           	callstack 0
  2506  0000' FFFF               	dw	65535	; assembler added errata NOP
  2507  0002' C00D' F015'        	movff	___memrchr@m,___memrchr@s
  2508  0006' C00E' F016'        	movff	___memrchr@m+1,___memrchr@s+1
  2509  000A' C00F' F00F'        	movff	___memrchr@c,___memrchr@c
  2510  000E' 6A00'              	clrf	(___memrchr@c+1)^0,c
  2511  0010' EF00' F000'        	goto	l3061
  2512  0014'                    l3055:
  2513  0014' FFFF               	dw	65535	; assembler added errata NOP
  2514  0016' 5000'              	movf	___memrchr@n^0,w,c
  2515  0018' 2400'              	addwf	___memrchr@s^0,w,c
  2516  001A' 6ED9               	movwf	fsr2l,c
  2517  001C' 5000'              	movf	(___memrchr@n+1)^0,w,c
  2518  001E' 2000'              	addwfc	(___memrchr@s+1)^0,w,c
  2519  0020' 6EDA               	movwf	fsr2h,c
  2520  0022' 50DF               	movf	indf2,w,c
  2521  0024' 6E00'              	movwf	??___memrchr^0,c
  2522  0026' 6A00'              	clrf	(??___memrchr+1)^0,c
  2523  0028' 5000'              	movf	___memrchr@c^0,w,c
  2524  002A' 1800'              	xorwf	??___memrchr^0,w,c
  2525  002C' E107               	bnz	u2891
  2526  002E' 5000'              	movf	(___memrchr@c+1)^0,w,c
  2527  0030' 1800'              	xorwf	(??___memrchr+1)^0,w,c
  2528  0032' A4D8               	btfss	status,2,c
  2529  0034' EF00' F000'        	goto	u2891
  2530  0038' EF00' F000'        	goto	u2890
  2531  003C'                    u2891:
  2532  003C' FFFF               	dw	65535	; assembler added errata NOP
  2533  003E' EF00' F000'        	goto	l3061
  2534  0042'                    u2890:
  2535  0042' FFFF               	dw	65535	; assembler added errata NOP
  2536  0044' 5000'              	movf	___memrchr@n^0,w,c
  2537  0046' 2400'              	addwf	___memrchr@s^0,w,c
  2538  0048' 6E00'              	movwf	?___memrchr^0,c
  2539  004A' 5000'              	movf	(___memrchr@n+1)^0,w,c
  2540  004C' 2000'              	addwfc	(___memrchr@s+1)^0,w,c
  2541  004E' 6E00'              	movwf	(?___memrchr+1)^0,c
  2542  0050' EF00' F000'        	goto	l1266
  2543  0054'                    l3061:
  2544  0054' FFFF               	dw	65535	; assembler added errata NOP
  2545  0056' 0600'              	decf	___memrchr@n^0,f,c
  2546  0058' A0D8               	btfss	status,0,c
  2547  005A' 0600'              	decf	(___memrchr@n+1)^0,f,c
  2548  005C' 2800'              	incf	___memrchr@n^0,w,c
  2549  005E' E106               	bnz	u2901
  2550  0060' 2800'              	incf	(___memrchr@n+1)^0,w,c
  2551  0062' A4D8               	btfss	status,2,c
  2552  0064' EF00' F000'        	goto	u2901
  2553  0068' EF00' F000'        	goto	u2900
  2554  006C'                    u2901:
  2555  006C' FFFF               	dw	65535	; assembler added errata NOP
  2556  006E' EF00' F000'        	goto	l3055
  2557  0072'                    u2900:
  2558  0072' FFFF               	dw	65535	; assembler added errata NOP
  2559  0074' 0E00               	movlw	0
  2560  0076' 6E00'              	movwf	?___memrchr^0,c
  2561  0078' 0E00               	movlw	0
  2562  007A' 6E00'              	movwf	(?___memrchr+1)^0,c
  2563  007C'                    l1266:
  2564  007C' FFFF               	dw	65535	; assembler added errata NOP
  2565  007E' 0012               	return		;funcret
  2566  0080' FFFF               	dw	65535	; errata NOP
  2567  0082'                    __end_of___memrchr:
  2568                           	callstack 0
  2569                           
  2570 ;; *************** function _memmove *****************
  2571 ;; Defined at:
  2572 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  d1              2   13[COMRAM] PTR void 
  2575 ;;		 -> sequence(4), 
  2576 ;;  s1              2   15[COMRAM] PTR const void 
  2577 ;;		 -> sequence(4), 
  2578 ;;  n               2   17[COMRAM] unsigned int 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2581 ;;		 -> sequence(4), 
  2582 ;;  d               2   21[COMRAM] PTR unsigned char 
  2583 ;;		 -> sequence(4), 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2   13[COMRAM] PTR void 
  2586 ;; Registers used:
  2587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2593 ;;      Params:         6       0       0       0       0       0       0
  2594 ;;      Locals:         4       0       0       0       0       0       0
  2595 ;;      Temps:          2       0       0       0       0       0       0
  2596 ;;      Totals:        12       0       0       0       0       0       0
  2597 ;;Total ram usage:       12 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 2
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_remove_component
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text6
  2608  0000'                    __ptext6:
  2609                           	callstack 0
  2610  0000'                    _memmove:
  2611                           	callstack 0
  2612  0000' FFFF               	dw	65535	; assembler added errata NOP
  2613  0002' C00F' F017'        	movff	memmove@s1,memmove@s
  2614  0006' C010' F018'        	movff	memmove@s1+1,memmove@s+1
  2615  000A' C00D' F015'        	movff	memmove@d1,memmove@d
  2616  000E' C00E' F016'        	movff	memmove@d1+1,memmove@d+1
  2617  0012' 5000'              	movf	memmove@d^0,w,c
  2618  0014' 5C00'              	subwf	memmove@s^0,w,c
  2619  0016' 5000'              	movf	(memmove@d+1)^0,w,c
  2620  0018' 5800'              	subwfb	(memmove@s+1)^0,w,c
  2621  001A' B0D8               	btfsc	status,0,c
  2622  001C' EF00' F000'        	goto	u2981
  2623  0020' EF00' F000'        	goto	u2980
  2624  0024'                    u2981:
  2625  0024' FFFF               	dw	65535	; assembler added errata NOP
  2626  0026' EF00' F000'        	goto	l3127
  2627  002A'                    u2980:
  2628  002A' FFFF               	dw	65535	; assembler added errata NOP
  2629  002C' 5000'              	movf	memmove@n^0,w,c
  2630  002E' 2400'              	addwf	memmove@s^0,w,c
  2631  0030' 6E00'              	movwf	??_memmove^0,c
  2632  0032' 5000'              	movf	(memmove@n+1)^0,w,c
  2633  0034' 2000'              	addwfc	(memmove@s+1)^0,w,c
  2634  0036' 6E00'              	movwf	(??_memmove+1)^0,c
  2635  0038' 5000'              	movf	??_memmove^0,w,c
  2636  003A' 5C00'              	subwf	memmove@d^0,w,c
  2637  003C' 5000'              	movf	(??_memmove+1)^0,w,c
  2638  003E' 5800'              	subwfb	(memmove@d+1)^0,w,c
  2639  0040' B0D8               	btfsc	status,0,c
  2640  0042' EF00' F000'        	goto	u2991
  2641  0046' EF00' F000'        	goto	u2990
  2642  004A'                    u2991:
  2643  004A' FFFF               	dw	65535	; assembler added errata NOP
  2644  004C' EF00' F000'        	goto	l3127
  2645  0050'                    u2990:
  2646  0050' FFFF               	dw	65535	; assembler added errata NOP
  2647  0052' 5000'              	movf	memmove@n^0,w,c
  2648  0054' 2600'              	addwf	memmove@s^0,f,c
  2649  0056' 5000'              	movf	(memmove@n+1)^0,w,c
  2650  0058' 2200'              	addwfc	(memmove@s+1)^0,f,c
  2651  005A' 5000'              	movf	memmove@n^0,w,c
  2652  005C' 2600'              	addwf	memmove@d^0,f,c
  2653  005E' 5000'              	movf	(memmove@n+1)^0,w,c
  2654  0060' 2200'              	addwfc	(memmove@d+1)^0,f,c
  2655  0062'                    l3123:
  2656  0062' FFFF               	dw	65535	; assembler added errata NOP
  2657  0064' 0600'              	decf	memmove@s^0,f,c
  2658  0066' A0D8               	btfss	status,0,c
  2659  0068' 0600'              	decf	(memmove@s+1)^0,f,c
  2660  006A' C017' FFD9         	movff	memmove@s,fsr2l
  2661  006E' C018' FFDA         	movff	memmove@s+1,fsr2h
  2662  0072' 0600'              	decf	memmove@d^0,f,c
  2663  0074' A0D8               	btfss	status,0,c
  2664  0076' 0600'              	decf	(memmove@d+1)^0,f,c
  2665  0078' C015' FFE1         	movff	memmove@d,fsr1l
  2666  007C' C016' FFE2         	movff	memmove@d+1,fsr1h
  2667  0080' CFDF FFE7          	movff	indf2,indf1
  2668  0084' 0600'              	decf	memmove@n^0,f,c
  2669  0086' A0D8               	btfss	status,0,c
  2670  0088' 0600'              	decf	(memmove@n+1)^0,f,c
  2671  008A' 5000'              	movf	memmove@n^0,w,c
  2672  008C' 1000'              	iorwf	(memmove@n+1)^0,w,c
  2673  008E' A4D8               	btfss	status,2,c
  2674  0090' EF00' F000'        	goto	u3001
  2675  0094' EF00' F000'        	goto	u3000
  2676  0098'                    u3001:
  2677  0098' FFFF               	dw	65535	; assembler added errata NOP
  2678  009A' EF00' F000'        	goto	l3123
  2679  009E'                    u3000:
  2680  009E' FFFF               	dw	65535	; assembler added errata NOP
  2681  00A0' EF00' F000'        	goto	l1219
  2682  00A4'                    l3127:
  2683  00A4' FFFF               	dw	65535	; assembler added errata NOP
  2684  00A6' 5000'              	movf	memmove@n^0,w,c
  2685  00A8' 1000'              	iorwf	(memmove@n+1)^0,w,c
  2686  00AA' B4D8               	btfsc	status,2,c
  2687  00AC' EF00' F000'        	goto	u3011
  2688  00B0' EF00' F000'        	goto	u3010
  2689  00B4'                    u3011:
  2690  00B4' FFFF               	dw	65535	; assembler added errata NOP
  2691  00B6' EF00' F000'        	goto	l1219
  2692  00BA'                    u3010:
  2693  00BA' FFFF               	dw	65535	; assembler added errata NOP
  2694  00BC'                    l3129:
  2695  00BC' FFFF               	dw	65535	; assembler added errata NOP
  2696  00BE' C017' FFD9         	movff	memmove@s,fsr2l
  2697  00C2' C018' FFDA         	movff	memmove@s+1,fsr2h
  2698  00C6' C015' FFE1         	movff	memmove@d,fsr1l
  2699  00CA' C016' FFE2         	movff	memmove@d+1,fsr1h
  2700  00CE' CFDF FFE7          	movff	indf2,indf1
  2701  00D2' 4A00'              	infsnz	memmove@s^0,f,c
  2702  00D4' 2A00'              	incf	(memmove@s+1)^0,f,c
  2703  00D6' 4A00'              	infsnz	memmove@d^0,f,c
  2704  00D8' 2A00'              	incf	(memmove@d+1)^0,f,c
  2705  00DA' 0600'              	decf	memmove@n^0,f,c
  2706  00DC' A0D8               	btfss	status,0,c
  2707  00DE' 0600'              	decf	(memmove@n+1)^0,f,c
  2708  00E0' 5000'              	movf	memmove@n^0,w,c
  2709  00E2' 1000'              	iorwf	(memmove@n+1)^0,w,c
  2710  00E4' A4D8               	btfss	status,2,c
  2711  00E6' EF00' F000'        	goto	u3021
  2712  00EA' EF00' F000'        	goto	u3020
  2713  00EE'                    u3021:
  2714  00EE' FFFF               	dw	65535	; assembler added errata NOP
  2715  00F0' EF00' F000'        	goto	l3129
  2716  00F4'                    u3020:
  2717  00F4'                    l1219:
  2718  00F4' FFFF               	dw	65535	; assembler added errata NOP
  2719  00F6' 0012               	return		;funcret
  2720  00F8' FFFF               	dw	65535	; errata NOP
  2721  00FA'                    __end_of_memmove:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function _pick_and_place *****************
  2725 ;; Defined at:
  2726 ;;		line 624 in file "main.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  Componnt        1    wreg     unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  Componnt        1   32[BANK0 ] unsigned char 
  2731 ;;  i               2   30[BANK0 ] int 
  2732 ;;  i               2   28[BANK0 ] int 
  2733 ;;  i               2   24[BANK0 ] int 
  2734 ;;  i               2   20[BANK0 ] int 
  2735 ;;  i               2   16[BANK0 ] int 
  2736 ;;  i               2   14[BANK0 ] int 
  2737 ;;  i               2   12[BANK0 ] int 
  2738 ;;  i               2    8[BANK0 ] int 
  2739 ;;  i               2    4[BANK0 ] int 
  2740 ;;  i               2    0[BANK0 ] int 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  2   77[None  ] int 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2750 ;;      Params:         0       0       0       0       0       0       0
  2751 ;;      Locals:         0      33       0       0       0       0       0
  2752 ;;      Temps:          2       0       0       0       0       0       0
  2753 ;;      Totals:         2      33       0       0       0       0       0
  2754 ;;Total ram usage:       35 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 4
  2757 ;; This function calls:
  2758 ;;		_Tweezer
  2759 ;;		_Twister
  2760 ;;		_X_axis
  2761 ;;		_Y_axis
  2762 ;;		_Z_axis
  2763 ;;		___fldiv
  2764 ;;		___flge
  2765 ;;		___xxtofl
  2766 ;;		__delay_ms
  2767 ;;		_check_component
  2768 ;;		_fetch_coordinates
  2769 ;;		_print_char
  2770 ;;		_print_string
  2771 ;; This function is called by:
  2772 ;;		_start_up_menu
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text7
  2777  0000'                    __ptext7:
  2778                           	callstack 0
  2779  0000'                    _pick_and_place:
  2780                           	callstack 0
  2781  0000' FFFF               	dw	65535	; assembler added errata NOP
  2782                           
  2783                           ;incstack = 0
  2784                           ;pick_and_place@Componnt stored from wreg
  2785  0002' 0100               	movlb	0	; () banked
  2786  0004' 6F00'              	movwf	pick_and_place@Componnt& (0+255),b
  2787  0006'                    
  2788                           ;main.c: 624: int pick_and_place(char Componnt);main.c: 625: {;main.c: 626:     fetch_co
      +                          ordinates(Componnt);
  2789  0006' 0100               	movlb	0	; () banked
  2790  0008' 5100'              	movf	pick_and_place@Componnt& (0+255),w,b
  2791  000A' EC00' F000'        	call	_fetch_coordinates
  2792  000E'                    
  2793                           ;main.c: 628:     print_string("\nPicking component: ");
  2794  000E' 0E00'              	movlw	low STR_20
  2795  0010' 6E00'              	movwf	print_string@strng^0,c
  2796  0012' 0E00'              	movlw	high STR_20
  2797  0014' 6E00'              	movwf	(print_string@strng+1)^0,c
  2798  0016' EC00' F000'        	call	_print_string	;wreg free
  2799  001A'                    
  2800                           ;main.c: 629:     print_char(Componnt);
  2801  001A' 0100               	movlb	0	; () banked
  2802  001C' 5100'              	movf	pick_and_place@Componnt& (0+255),w,b
  2803  001E' EC00' F000'        	call	_print_char
  2804  0022'                    
  2805                           ;main.c: 635:     X_dir=((X_diff<X_Pick)? 1:0);
  2806  0022' 5000'              	movf	_X_Pick^0,w,c
  2807  0024' 5C00'              	subwf	_X_diff^0,w,c
  2808  0026' 5000'              	movf	(_X_diff+1)^0,w,c
  2809  0028' 0A80               	xorlw	128
  2810  002A' 6E00'              	movwf	??_pick_and_place^0,c
  2811  002C' 5000'              	movf	(_X_Pick+1)^0,w,c
  2812  002E' 0A80               	xorlw	128
  2813  0030' 5800'              	subwfb	??_pick_and_place^0,w,c
  2814  0032' A0D8               	btfss	status,0,c
  2815  0034' EF00' F000'        	goto	u5501
  2816  0038' EF00' F000'        	goto	u5500
  2817  003C'                    u5501:
  2818  003C' FFFF               	dw	65535	; assembler added errata NOP
  2819  003E' 0E01               	movlw	1
  2820  0040' EF00' F000'        	goto	u5510
  2821  0044'                    u5500:
  2822  0044' FFFF               	dw	65535	; assembler added errata NOP
  2823  0046' 0E00               	movlw	0
  2824  0048'                    u5510:
  2825  0048' FFFF               	dw	65535	; assembler added errata NOP
  2826  004A' 6E00'              	movwf	_X_dir^0,c
  2827  004C'                    
  2828                           ;main.c: 636:     Y_dir=((Y_diff<Y_Pick)? 1:0);
  2829  004C' 5000'              	movf	_Y_Pick^0,w,c
  2830  004E' 5C00'              	subwf	_Y_diff^0,w,c
  2831  0050' 5000'              	movf	(_Y_diff+1)^0,w,c
  2832  0052' 0A80               	xorlw	128
  2833  0054' 6E00'              	movwf	??_pick_and_place^0,c
  2834  0056' 5000'              	movf	(_Y_Pick+1)^0,w,c
  2835  0058' 0A80               	xorlw	128
  2836  005A' 5800'              	subwfb	??_pick_and_place^0,w,c
  2837  005C' A0D8               	btfss	status,0,c
  2838  005E' EF00' F000'        	goto	u5521
  2839  0062' EF00' F000'        	goto	u5520
  2840  0066'                    u5521:
  2841  0066' FFFF               	dw	65535	; assembler added errata NOP
  2842  0068' 0E01               	movlw	1
  2843  006A' EF00' F000'        	goto	u5530
  2844  006E'                    u5520:
  2845  006E' FFFF               	dw	65535	; assembler added errata NOP
  2846  0070' 0E00               	movlw	0
  2847  0072'                    u5530:
  2848  0072' FFFF               	dw	65535	; assembler added errata NOP
  2849  0074' 6E00'              	movwf	_Y_dir^0,c
  2850  0076'                    
  2851                           ;main.c: 637:     Twist_dir=((Angle_diff<Pick_Angle)? 1:0);
  2852  0076' 5000'              	movf	_Pick_Angle^0,w,c
  2853  0078' 5C00'              	subwf	_Angle_diff^0,w,c
  2854  007A' 5000'              	movf	(_Angle_diff+1)^0,w,c
  2855  007C' 0A80               	xorlw	128
  2856  007E' 6E00'              	movwf	??_pick_and_place^0,c
  2857  0080' 5000'              	movf	(_Pick_Angle+1)^0,w,c
  2858  0082' 0A80               	xorlw	128
  2859  0084' 5800'              	subwfb	??_pick_and_place^0,w,c
  2860  0086' A0D8               	btfss	status,0,c
  2861  0088' EF00' F000'        	goto	u5541
  2862  008C' EF00' F000'        	goto	u5540
  2863  0090'                    u5541:
  2864  0090' FFFF               	dw	65535	; assembler added errata NOP
  2865  0092' 0E01               	movlw	1
  2866  0094' EF00' F000'        	goto	u5550
  2867  0098'                    u5540:
  2868  0098' FFFF               	dw	65535	; assembler added errata NOP
  2869  009A' 0E00               	movlw	0
  2870  009C'                    u5550:
  2871  009C' FFFF               	dw	65535	; assembler added errata NOP
  2872  009E' 6E00'              	movwf	_Twist_dir^0,c
  2873  00A0'                    
  2874                           ;main.c: 646:     for(int i = 0; (i<((((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_Pick-
      +                          X_diff)))*steps_per_unit)) && !stop; i++){
  2875  00A0' 0E00               	movlw	0
  2876  00A2' 0100               	movlb	0	; () banked
  2877  00A4' 6F00'              	movwf	(pick_and_place@i+1)& (0+255),b
  2878  00A6' 0E00               	movlw	0
  2879  00A8' 6F00'              	movwf	pick_and_place@i& (0+255),b
  2880  00AA' EF00' F000'        	goto	l4853
  2881  00AE'                    l4849:
  2882  00AE' FFFF               	dw	65535	; assembler added errata NOP
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;main.c: 647:         X_axis(X_dir);
  2886  00B0' 5000'              	movf	_X_dir^0,w,c
  2887  00B2' EC00' F000'        	call	_X_axis
  2888  00B6'                    
  2889                           ;main.c: 648:     }
  2890  00B6' 0100               	movlb	0	; () banked
  2891  00B8' 4B00'              	infsnz	pick_and_place@i& (0+255),f,b
  2892  00BA' 2B00'              	incf	(pick_and_place@i+1)& (0+255),f,b
  2893  00BC'                    l4853:
  2894  00BC' FFFF               	dw	65535	; assembler added errata NOP
  2895                           
  2896                           ; BSR set to: 0
  2897  00BE' 5000'              	movf	_X_diff^0,w,c
  2898  00C0' 5C00'              	subwf	_X_Pick^0,w,c
  2899  00C2' 6E00'              	movwf	??_pick_and_place^0,c
  2900  00C4' 5000'              	movf	(_X_diff+1)^0,w,c
  2901  00C6' 5800'              	subwfb	(_X_Pick+1)^0,w,c
  2902  00C8' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  2903  00CA' BE00'              	btfsc	(??_pick_and_place+1)^0,7,c
  2904  00CC' EF00' F000'        	goto	u5560
  2905  00D0' 5000'              	movf	(??_pick_and_place+1)^0,w,c
  2906  00D2' E106               	bnz	u5561
  2907  00D4' 0400'              	decf	??_pick_and_place^0,w,c
  2908  00D6' B0D8               	btfsc	status,0,c
  2909  00D8' EF00' F000'        	goto	u5561
  2910  00DC' EF00' F000'        	goto	u5560
  2911  00E0'                    u5561:
  2912  00E0' FFFF               	dw	65535	; assembler added errata NOP
  2913  00E2' EF00' F000'        	goto	l4857
  2914  00E6'                    u5560:
  2915  00E6' FFFF               	dw	65535	; assembler added errata NOP
  2916  00E8'                    
  2917                           ; BSR set to: 0
  2918  00E8' 5000'              	movf	_X_diff^0,w,c
  2919  00EA' 5C00'              	subwf	_X_Pick^0,w,c
  2920  00EC' 6E00'              	movwf	??_pick_and_place^0,c
  2921  00EE' 5000'              	movf	(_X_diff+1)^0,w,c
  2922  00F0' 5800'              	subwfb	(_X_Pick+1)^0,w,c
  2923  00F2' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  2924  00F4' 1E00'              	comf	??_pick_and_place^0,f,c
  2925  00F6' 1E00'              	comf	(??_pick_and_place+1)^0,f,c
  2926  00F8' 4A00'              	infsnz	??_pick_and_place^0,f,c
  2927  00FA' 2A00'              	incf	(??_pick_and_place+1)^0,f,c
  2928  00FC' C03C' F002'        	movff	??_pick_and_place,_pick_and_place$765
  2929  0100' C03D' F003'        	movff	??_pick_and_place+1,_pick_and_place$765+1
  2930  0104' EF00' F000'        	goto	l354
  2931  0108'                    l4857:
  2932  0108' FFFF               	dw	65535	; assembler added errata NOP
  2933                           
  2934                           ; BSR set to: 0
  2935  010A' 5000'              	movf	_X_diff^0,w,c
  2936  010C' 5C00'              	subwf	_X_Pick^0,w,c
  2937  010E' 6F00'              	movwf	_pick_and_place$765& (0+255),b
  2938  0110' 5000'              	movf	(_X_diff+1)^0,w,c
  2939  0112' 5800'              	subwfb	(_X_Pick+1)^0,w,c
  2940  0114' 6F00'              	movwf	(_pick_and_place$765+1)& (0+255),b
  2941  0116'                    l354:
  2942  0116' FFFF               	dw	65535	; assembler added errata NOP
  2943                           
  2944                           ; BSR set to: 0
  2945  0118' 5100'              	movf	_pick_and_place$765& (0+255),w,b
  2946  011A' 5D00'              	subwf	pick_and_place@i& (0+255),w,b
  2947  011C' 5100'              	movf	(pick_and_place@i+1)& (0+255),w,b
  2948  011E' 0A80               	xorlw	128
  2949  0120' 6E00'              	movwf	??_pick_and_place^0,c
  2950  0122' 5100'              	movf	(_pick_and_place$765+1)& (0+255),w,b
  2951  0124' 0A80               	xorlw	128
  2952  0126' 5800'              	subwfb	??_pick_and_place^0,w,c
  2953  0128' B0D8               	btfsc	status,0,c
  2954  012A' EF00' F000'        	goto	u5571
  2955  012E' EF00' F000'        	goto	u5570
  2956  0132'                    u5571:
  2957  0132' FFFF               	dw	65535	; assembler added errata NOP
  2958  0134' EF00' F000'        	goto	l4861
  2959  0138'                    u5570:
  2960  0138' FFFF               	dw	65535	; assembler added errata NOP
  2961  013A'                    
  2962                           ; BSR set to: 0
  2963  013A' 5000'              	movf	_stop^0,w,c
  2964  013C' B4D8               	btfsc	status,2,c
  2965  013E' EF00' F000'        	goto	u5581
  2966  0142' EF00' F000'        	goto	u5580
  2967  0146'                    u5581:
  2968  0146' FFFF               	dw	65535	; assembler added errata NOP
  2969  0148' EF00' F000'        	goto	l4849
  2970  014C'                    u5580:
  2971  014C'                    l4861:
  2972  014C' FFFF               	dw	65535	; assembler added errata NOP
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;main.c: 649:     for(int i = 0; (i<((((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_Pick-
      +                          Y_diff)))*steps_per_unit)) && !stop; i++){
  2976  014E' 0E00               	movlw	0
  2977  0150' 6F00'              	movwf	(pick_and_place@i_766+1)& (0+255),b
  2978  0152' 0E00               	movlw	0
  2979  0154' 6F00'              	movwf	pick_and_place@i_766& (0+255),b
  2980  0156' EF00' F000'        	goto	l4867
  2981  015A'                    l4863:
  2982  015A' FFFF               	dw	65535	; assembler added errata NOP
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;main.c: 650:         Y_axis(Y_dir);
  2986  015C' 5000'              	movf	_Y_dir^0,w,c
  2987  015E' EC00' F000'        	call	_Y_axis
  2988  0162'                    
  2989                           ;main.c: 651:     }
  2990  0162' 0100               	movlb	0	; () banked
  2991  0164' 4B00'              	infsnz	pick_and_place@i_766& (0+255),f,b
  2992  0166' 2B00'              	incf	(pick_and_place@i_766+1)& (0+255),f,b
  2993  0168'                    l4867:
  2994  0168' FFFF               	dw	65535	; assembler added errata NOP
  2995                           
  2996                           ; BSR set to: 0
  2997  016A' 5000'              	movf	_Y_diff^0,w,c
  2998  016C' 5C00'              	subwf	_Y_Pick^0,w,c
  2999  016E' 6E00'              	movwf	??_pick_and_place^0,c
  3000  0170' 5000'              	movf	(_Y_diff+1)^0,w,c
  3001  0172' 5800'              	subwfb	(_Y_Pick+1)^0,w,c
  3002  0174' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  3003  0176' BE00'              	btfsc	(??_pick_and_place+1)^0,7,c
  3004  0178' EF00' F000'        	goto	u5590
  3005  017C' 5000'              	movf	(??_pick_and_place+1)^0,w,c
  3006  017E' E106               	bnz	u5591
  3007  0180' 0400'              	decf	??_pick_and_place^0,w,c
  3008  0182' B0D8               	btfsc	status,0,c
  3009  0184' EF00' F000'        	goto	u5591
  3010  0188' EF00' F000'        	goto	u5590
  3011  018C'                    u5591:
  3012  018C' FFFF               	dw	65535	; assembler added errata NOP
  3013  018E' EF00' F000'        	goto	l4871
  3014  0192'                    u5590:
  3015  0192' FFFF               	dw	65535	; assembler added errata NOP
  3016  0194'                    
  3017                           ; BSR set to: 0
  3018  0194' 5000'              	movf	_Y_diff^0,w,c
  3019  0196' 5C00'              	subwf	_Y_Pick^0,w,c
  3020  0198' 6E00'              	movwf	??_pick_and_place^0,c
  3021  019A' 5000'              	movf	(_Y_diff+1)^0,w,c
  3022  019C' 5800'              	subwfb	(_Y_Pick+1)^0,w,c
  3023  019E' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  3024  01A0' 1E00'              	comf	??_pick_and_place^0,f,c
  3025  01A2' 1E00'              	comf	(??_pick_and_place+1)^0,f,c
  3026  01A4' 4A00'              	infsnz	??_pick_and_place^0,f,c
  3027  01A6' 2A00'              	incf	(??_pick_and_place+1)^0,f,c
  3028  01A8' C03C' F006'        	movff	??_pick_and_place,_pick_and_place$768
  3029  01AC' C03D' F007'        	movff	??_pick_and_place+1,_pick_and_place$768+1
  3030  01B0' EF00' F000'        	goto	l363
  3031  01B4'                    l4871:
  3032  01B4' FFFF               	dw	65535	; assembler added errata NOP
  3033                           
  3034                           ; BSR set to: 0
  3035  01B6' 5000'              	movf	_Y_diff^0,w,c
  3036  01B8' 5C00'              	subwf	_Y_Pick^0,w,c
  3037  01BA' 6F00'              	movwf	_pick_and_place$768& (0+255),b
  3038  01BC' 5000'              	movf	(_Y_diff+1)^0,w,c
  3039  01BE' 5800'              	subwfb	(_Y_Pick+1)^0,w,c
  3040  01C0' 6F00'              	movwf	(_pick_and_place$768+1)& (0+255),b
  3041  01C2'                    l363:
  3042  01C2' FFFF               	dw	65535	; assembler added errata NOP
  3043                           
  3044                           ; BSR set to: 0
  3045  01C4' 5100'              	movf	_pick_and_place$768& (0+255),w,b
  3046  01C6' 5D00'              	subwf	pick_and_place@i_766& (0+255),w,b
  3047  01C8' 5100'              	movf	(pick_and_place@i_766+1)& (0+255),w,b
  3048  01CA' 0A80               	xorlw	128
  3049  01CC' 6E00'              	movwf	??_pick_and_place^0,c
  3050  01CE' 5100'              	movf	(_pick_and_place$768+1)& (0+255),w,b
  3051  01D0' 0A80               	xorlw	128
  3052  01D2' 5800'              	subwfb	??_pick_and_place^0,w,c
  3053  01D4' B0D8               	btfsc	status,0,c
  3054  01D6' EF00' F000'        	goto	u5601
  3055  01DA' EF00' F000'        	goto	u5600
  3056  01DE'                    u5601:
  3057  01DE' FFFF               	dw	65535	; assembler added errata NOP
  3058  01E0' EF00' F000'        	goto	l4875
  3059  01E4'                    u5600:
  3060  01E4' FFFF               	dw	65535	; assembler added errata NOP
  3061  01E6'                    
  3062                           ; BSR set to: 0
  3063  01E6' 5000'              	movf	_stop^0,w,c
  3064  01E8' B4D8               	btfsc	status,2,c
  3065  01EA' EF00' F000'        	goto	u5611
  3066  01EE' EF00' F000'        	goto	u5610
  3067  01F2'                    u5611:
  3068  01F2' FFFF               	dw	65535	; assembler added errata NOP
  3069  01F4' EF00' F000'        	goto	l4863
  3070  01F8'                    u5610:
  3071  01F8'                    l4875:
  3072  01F8' FFFF               	dw	65535	; assembler added errata NOP
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;main.c: 652:     for(int i = 0; (i<(((Angle_diff-Pick_Angle) > 0 ? (Angle_diff-Pick_Ang
      +                          le) : -(Angle_diff-Pick_Angle))/3.6)) && !stop; i++){
  3076  01FA' 0E00               	movlw	0
  3077  01FC' 6F00'              	movwf	(pick_and_place@i_769+1)& (0+255),b
  3078  01FE' 0E00               	movlw	0
  3079  0200' 6F00'              	movwf	pick_and_place@i_769& (0+255),b
  3080  0202' EF00' F000'        	goto	l4881
  3081  0206'                    l4877:
  3082  0206' FFFF               	dw	65535	; assembler added errata NOP
  3083                           
  3084                           ;main.c: 653:         Twister(Twist_dir);
  3085  0208' 5000'              	movf	_Twist_dir^0,w,c
  3086  020A' EC00' F000'        	call	_Twister
  3087  020E'                    
  3088                           ;main.c: 654:     }
  3089  020E' 0100               	movlb	0	; () banked
  3090  0210' 4B00'              	infsnz	pick_and_place@i_769& (0+255),f,b
  3091  0212' 2B00'              	incf	(pick_and_place@i_769+1)& (0+255),f,b
  3092  0214'                    l4881:
  3093  0214' FFFF               	dw	65535	; assembler added errata NOP
  3094                           
  3095                           ; BSR set to: 0
  3096  0216' 5000'              	movf	_Pick_Angle^0,w,c
  3097  0218' 5C00'              	subwf	_Angle_diff^0,w,c
  3098  021A' 6E00'              	movwf	??_pick_and_place^0,c
  3099  021C' 5000'              	movf	(_Pick_Angle+1)^0,w,c
  3100  021E' 5800'              	subwfb	(_Angle_diff+1)^0,w,c
  3101  0220' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  3102  0222' BE00'              	btfsc	(??_pick_and_place+1)^0,7,c
  3103  0224' EF00' F000'        	goto	u5620
  3104  0228' 5000'              	movf	(??_pick_and_place+1)^0,w,c
  3105  022A' E106               	bnz	u5621
  3106  022C' 0400'              	decf	??_pick_and_place^0,w,c
  3107  022E' B0D8               	btfsc	status,0,c
  3108  0230' EF00' F000'        	goto	u5621
  3109  0234' EF00' F000'        	goto	u5620
  3110  0238'                    u5621:
  3111  0238' FFFF               	dw	65535	; assembler added errata NOP
  3112  023A' EF00' F000'        	goto	l4885
  3113  023E'                    u5620:
  3114  023E' FFFF               	dw	65535	; assembler added errata NOP
  3115  0240'                    
  3116                           ; BSR set to: 0
  3117  0240' 5000'              	movf	_Pick_Angle^0,w,c
  3118  0242' 5C00'              	subwf	_Angle_diff^0,w,c
  3119  0244' 6E00'              	movwf	??_pick_and_place^0,c
  3120  0246' 5000'              	movf	(_Pick_Angle+1)^0,w,c
  3121  0248' 5800'              	subwfb	(_Angle_diff+1)^0,w,c
  3122  024A' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  3123  024C' 1E00'              	comf	??_pick_and_place^0,f,c
  3124  024E' 1E00'              	comf	(??_pick_and_place+1)^0,f,c
  3125  0250' 4A00'              	infsnz	??_pick_and_place^0,f,c
  3126  0252' 2A00'              	incf	(??_pick_and_place+1)^0,f,c
  3127  0254' C03C' F00A'        	movff	??_pick_and_place,_pick_and_place$771
  3128  0258' C03D' F00B'        	movff	??_pick_and_place+1,_pick_and_place$771+1
  3129  025C' EF00' F000'        	goto	l4887
  3130  0260'                    l4885:
  3131  0260' FFFF               	dw	65535	; assembler added errata NOP
  3132                           
  3133                           ; BSR set to: 0
  3134  0262' 5000'              	movf	_Pick_Angle^0,w,c
  3135  0264' 5C00'              	subwf	_Angle_diff^0,w,c
  3136  0266' 6F00'              	movwf	_pick_and_place$771& (0+255),b
  3137  0268' 5000'              	movf	(_Pick_Angle+1)^0,w,c
  3138  026A' 5800'              	subwfb	(_Angle_diff+1)^0,w,c
  3139  026C' 6F00'              	movwf	(_pick_and_place$771+1)& (0+255),b
  3140  026E'                    l4887:
  3141  026E' FFFF               	dw	65535	; assembler added errata NOP
  3142                           
  3143                           ; BSR set to: 0
  3144  0270' C008' F009'        	movff	pick_and_place@i_769,___xxtofl@val
  3145  0274' C009' F00A'        	movff	pick_and_place@i_769+1,___xxtofl@val+1
  3146  0278' 0E00               	movlw	0
  3147  027A' BE00'              	btfsc	(___xxtofl@val+1)^0,7,c
  3148  027C' 0EFF               	movlw	-1
  3149  027E' 6E00'              	movwf	(___xxtofl@val+2)^0,c
  3150  0280' 6E00'              	movwf	(___xxtofl@val+3)^0,c
  3151  0282' 0E01               	movlw	1
  3152  0284' EC00' F000'        	call	___xxtofl
  3153  0288' C009' F030'        	movff	?___xxtofl,___flge@ff1
  3154  028C' C00A' F031'        	movff	?___xxtofl+1,___flge@ff1+1
  3155  0290' C00B' F032'        	movff	?___xxtofl+2,___flge@ff1+2
  3156  0294' C00C' F033'        	movff	?___xxtofl+3,___flge@ff1+3
  3157  0298' 0E66               	movlw	102
  3158  029A' 6E00'              	movwf	___fldiv@a^0,c
  3159  029C' 0E66               	movlw	102
  3160  029E' 6E00'              	movwf	(___fldiv@a+1)^0,c
  3161  02A0' 0E66               	movlw	102
  3162  02A2' 6E00'              	movwf	(___fldiv@a+2)^0,c
  3163  02A4' 0E40               	movlw	64
  3164  02A6' 6E00'              	movwf	(___fldiv@a+3)^0,c
  3165  02A8' C00A' F009'        	movff	_pick_and_place$771,___xxtofl@val
  3166  02AC' C00B' F00A'        	movff	_pick_and_place$771+1,___xxtofl@val+1
  3167  02B0' 0E00               	movlw	0
  3168  02B2' BE00'              	btfsc	(___xxtofl@val+1)^0,7,c
  3169  02B4' 0EFF               	movlw	-1
  3170  02B6' 6E00'              	movwf	(___xxtofl@val+2)^0,c
  3171  02B8' 6E00'              	movwf	(___xxtofl@val+3)^0,c
  3172  02BA' 0E01               	movlw	1
  3173  02BC' EC00' F000'        	call	___xxtofl
  3174  02C0' C009' F017'        	movff	?___xxtofl,___fldiv@b
  3175  02C4' C00A' F018'        	movff	?___xxtofl+1,___fldiv@b+1
  3176  02C8' C00B' F019'        	movff	?___xxtofl+2,___fldiv@b+2
  3177  02CC' C00C' F01A'        	movff	?___xxtofl+3,___fldiv@b+3
  3178  02D0' EC00' F000'        	call	___fldiv	;wreg free
  3179  02D4' C017' F034'        	movff	?___fldiv,___flge@ff2
  3180  02D8' C018' F035'        	movff	?___fldiv+1,___flge@ff2+1
  3181  02DC' C019' F036'        	movff	?___fldiv+2,___flge@ff2+2
  3182  02E0' C01A' F037'        	movff	?___fldiv+3,___flge@ff2+3
  3183  02E4' EC00' F000'        	call	___flge	;wreg free
  3184  02E8' B0D8               	btfsc	status,0,c
  3185  02EA' EF00' F000'        	goto	u5631
  3186  02EE' EF00' F000'        	goto	u5630
  3187  02F2'                    u5631:
  3188  02F2' FFFF               	dw	65535	; assembler added errata NOP
  3189  02F4' EF00' F000'        	goto	l4891
  3190  02F8'                    u5630:
  3191  02F8' FFFF               	dw	65535	; assembler added errata NOP
  3192  02FA' 5000'              	movf	_stop^0,w,c
  3193  02FC' B4D8               	btfsc	status,2,c
  3194  02FE' EF00' F000'        	goto	u5641
  3195  0302' EF00' F000'        	goto	u5640
  3196  0306'                    u5641:
  3197  0306' FFFF               	dw	65535	; assembler added errata NOP
  3198  0308' EF00' F000'        	goto	l4877
  3199  030C'                    u5640:
  3200  030C'                    l4891:
  3201  030C' FFFF               	dw	65535	; assembler added errata NOP
  3202                           
  3203                           ;main.c: 656:     Tweezer(1);
  3204  030E' 0E01               	movlw	1
  3205  0310' EC00' F000'        	call	_Tweezer
  3206  0314'                    
  3207                           ;main.c: 657:     _delay_ms(500);
  3208  0314' 0E01               	movlw	1
  3209  0316' 6E00'              	movwf	(?__delay_ms+1)^0,c
  3210  0318' 0EF4               	movlw	244
  3211  031A' 6E00'              	movwf	?__delay_ms^0,c
  3212  031C' EC00' F000'        	call	__delay_ms	;wreg free
  3213  0320'                    
  3214                           ;main.c: 658:     for(int i=0; i<(3*steps_per_unit) && !stop; i++){Z_axis(1);}
  3215  0320' 0E00               	movlw	0
  3216  0322' 0100               	movlb	0	; () banked
  3217  0324' 6F00'              	movwf	(pick_and_place@i_773+1)& (0+255),b
  3218  0326' 0E00               	movlw	0
  3219  0328' 6F00'              	movwf	pick_and_place@i_773& (0+255),b
  3220  032A' EF00' F000'        	goto	l4901
  3221  032E'                    l4897:
  3222  032E' FFFF               	dw	65535	; assembler added errata NOP
  3223                           
  3224                           ; BSR set to: 0
  3225  0330' 0E01               	movlw	1
  3226  0332' EC00' F000'        	call	_Z_axis
  3227  0336' 0100               	movlb	0	; () banked
  3228  0338' 4B00'              	infsnz	pick_and_place@i_773& (0+255),f,b
  3229  033A' 2B00'              	incf	(pick_and_place@i_773+1)& (0+255),f,b
  3230  033C'                    l4901:
  3231  033C' FFFF               	dw	65535	; assembler added errata NOP
  3232                           
  3233                           ; BSR set to: 0
  3234  033E' BF00'              	btfsc	(pick_and_place@i_773+1)& (0+255),7,b
  3235  0340' EF00' F000'        	goto	u5650
  3236  0344' 5100'              	movf	(pick_and_place@i_773+1)& (0+255),w,b
  3237  0346' E107               	bnz	u5651
  3238  0348' 0E03               	movlw	3
  3239  034A' 5D00'              	subwf	pick_and_place@i_773& (0+255),w,b
  3240  034C' B0D8               	btfsc	status,0,c
  3241  034E' EF00' F000'        	goto	u5651
  3242  0352' EF00' F000'        	goto	u5650
  3243  0356'                    u5651:
  3244  0356' FFFF               	dw	65535	; assembler added errata NOP
  3245  0358' EF00' F000'        	goto	l4905
  3246  035C'                    u5650:
  3247  035C' FFFF               	dw	65535	; assembler added errata NOP
  3248  035E'                    
  3249                           ; BSR set to: 0
  3250  035E' 5000'              	movf	_stop^0,w,c
  3251  0360' B4D8               	btfsc	status,2,c
  3252  0362' EF00' F000'        	goto	u5661
  3253  0366' EF00' F000'        	goto	u5660
  3254  036A'                    u5661:
  3255  036A' FFFF               	dw	65535	; assembler added errata NOP
  3256  036C' EF00' F000'        	goto	l4897
  3257  0370'                    u5660:
  3258  0370'                    l4905:
  3259  0370' FFFF               	dw	65535	; assembler added errata NOP
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;main.c: 659:     check_component(Componnt);
  3263  0372' 5100'              	movf	pick_and_place@Componnt& (0+255),w,b
  3264  0374' EC00' F000'        	call	_check_component
  3265  0378'                    
  3266                           ;main.c: 661:     Tweezer(0);
  3267  0378' 0E00               	movlw	0
  3268  037A' EC00' F000'        	call	_Tweezer
  3269  037E'                    
  3270                           ;main.c: 662:     for(int i=0; i<(3*steps_per_unit) && !stop; i++){Z_axis(0);}
  3271  037E' 0E00               	movlw	0
  3272  0380' 0100               	movlb	0	; () banked
  3273  0382' 6F00'              	movwf	(pick_and_place@i_776+1)& (0+255),b
  3274  0384' 0E00               	movlw	0
  3275  0386' 6F00'              	movwf	pick_and_place@i_776& (0+255),b
  3276  0388' EF00' F000'        	goto	l4915
  3277  038C'                    l4911:
  3278  038C' FFFF               	dw	65535	; assembler added errata NOP
  3279                           
  3280                           ; BSR set to: 0
  3281  038E' 0E00               	movlw	0
  3282  0390' EC00' F000'        	call	_Z_axis
  3283  0394' 0100               	movlb	0	; () banked
  3284  0396' 4B00'              	infsnz	pick_and_place@i_776& (0+255),f,b
  3285  0398' 2B00'              	incf	(pick_and_place@i_776+1)& (0+255),f,b
  3286  039A'                    l4915:
  3287  039A' FFFF               	dw	65535	; assembler added errata NOP
  3288                           
  3289                           ; BSR set to: 0
  3290  039C' BF00'              	btfsc	(pick_and_place@i_776+1)& (0+255),7,b
  3291  039E' EF00' F000'        	goto	u5670
  3292  03A2' 5100'              	movf	(pick_and_place@i_776+1)& (0+255),w,b
  3293  03A4' E107               	bnz	u5671
  3294  03A6' 0E03               	movlw	3
  3295  03A8' 5D00'              	subwf	pick_and_place@i_776& (0+255),w,b
  3296  03AA' B0D8               	btfsc	status,0,c
  3297  03AC' EF00' F000'        	goto	u5671
  3298  03B0' EF00' F000'        	goto	u5670
  3299  03B4'                    u5671:
  3300  03B4' FFFF               	dw	65535	; assembler added errata NOP
  3301  03B6' EF00' F000'        	goto	l4919
  3302  03BA'                    u5670:
  3303  03BA' FFFF               	dw	65535	; assembler added errata NOP
  3304  03BC'                    
  3305                           ; BSR set to: 0
  3306  03BC' 5000'              	movf	_stop^0,w,c
  3307  03BE' B4D8               	btfsc	status,2,c
  3308  03C0' EF00' F000'        	goto	u5681
  3309  03C4' EF00' F000'        	goto	u5680
  3310  03C8'                    u5681:
  3311  03C8' FFFF               	dw	65535	; assembler added errata NOP
  3312  03CA' EF00' F000'        	goto	l4911
  3313  03CE'                    u5680:
  3314  03CE'                    l4919:
  3315  03CE' FFFF               	dw	65535	; assembler added errata NOP
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;main.c: 666:     X_dir=((X_Pick<X_Place)? 1:0);
  3319  03D0' 5000'              	movf	_X_Place^0,w,c
  3320  03D2' 5C00'              	subwf	_X_Pick^0,w,c
  3321  03D4' 5000'              	movf	(_X_Pick+1)^0,w,c
  3322  03D6' 0A80               	xorlw	128
  3323  03D8' 6E00'              	movwf	??_pick_and_place^0,c
  3324  03DA' 5000'              	movf	(_X_Place+1)^0,w,c
  3325  03DC' 0A80               	xorlw	128
  3326  03DE' 5800'              	subwfb	??_pick_and_place^0,w,c
  3327  03E0' A0D8               	btfss	status,0,c
  3328  03E2' EF00' F000'        	goto	u5691
  3329  03E6' EF00' F000'        	goto	u5690
  3330  03EA'                    u5691:
  3331  03EA' FFFF               	dw	65535	; assembler added errata NOP
  3332  03EC' 0E01               	movlw	1
  3333  03EE' EF00' F000'        	goto	u5700
  3334  03F2'                    u5690:
  3335  03F2' FFFF               	dw	65535	; assembler added errata NOP
  3336  03F4' 0E00               	movlw	0
  3337  03F6'                    u5700:
  3338  03F6' FFFF               	dw	65535	; assembler added errata NOP
  3339  03F8' 6E00'              	movwf	_X_dir^0,c
  3340                           
  3341                           ;main.c: 667:     Y_dir=((Y_Pick<Y_Place)? 1:0);
  3342  03FA' 5000'              	movf	_Y_Place^0,w,c
  3343  03FC' 5C00'              	subwf	_Y_Pick^0,w,c
  3344  03FE' 5000'              	movf	(_Y_Pick+1)^0,w,c
  3345  0400' 0A80               	xorlw	128
  3346  0402' 6E00'              	movwf	??_pick_and_place^0,c
  3347  0404' 5000'              	movf	(_Y_Place+1)^0,w,c
  3348  0406' 0A80               	xorlw	128
  3349  0408' 5800'              	subwfb	??_pick_and_place^0,w,c
  3350  040A' A0D8               	btfss	status,0,c
  3351  040C' EF00' F000'        	goto	u5711
  3352  0410' EF00' F000'        	goto	u5710
  3353  0414'                    u5711:
  3354  0414' FFFF               	dw	65535	; assembler added errata NOP
  3355  0416' 0E01               	movlw	1
  3356  0418' EF00' F000'        	goto	u5720
  3357  041C'                    u5710:
  3358  041C' FFFF               	dw	65535	; assembler added errata NOP
  3359  041E' 0E00               	movlw	0
  3360  0420'                    u5720:
  3361  0420' FFFF               	dw	65535	; assembler added errata NOP
  3362  0422' 6E00'              	movwf	_Y_dir^0,c
  3363                           
  3364                           ;main.c: 668:     Twist_dir=((Pick_Angle<Place_Angle)? 1:0);
  3365  0424' 5000'              	movf	_Place_Angle^0,w,c
  3366  0426' 5C00'              	subwf	_Pick_Angle^0,w,c
  3367  0428' 5000'              	movf	(_Pick_Angle+1)^0,w,c
  3368  042A' 0A80               	xorlw	128
  3369  042C' 6E00'              	movwf	??_pick_and_place^0,c
  3370  042E' 5000'              	movf	(_Place_Angle+1)^0,w,c
  3371  0430' 0A80               	xorlw	128
  3372  0432' 5800'              	subwfb	??_pick_and_place^0,w,c
  3373  0434' A0D8               	btfss	status,0,c
  3374  0436' EF00' F000'        	goto	u5731
  3375  043A' EF00' F000'        	goto	u5730
  3376  043E'                    u5731:
  3377  043E' FFFF               	dw	65535	; assembler added errata NOP
  3378  0440' 0E01               	movlw	1
  3379  0442' EF00' F000'        	goto	u5740
  3380  0446'                    u5730:
  3381  0446' FFFF               	dw	65535	; assembler added errata NOP
  3382  0448' 0E00               	movlw	0
  3383  044A'                    u5740:
  3384  044A' FFFF               	dw	65535	; assembler added errata NOP
  3385  044C' 6E00'              	movwf	_Twist_dir^0,c
  3386  044E'                    
  3387                           ; BSR set to: 0
  3388                           ;main.c: 671:     if(!stop){
  3389  044E' 5000'              	movf	_stop^0,w,c
  3390  0450' A4D8               	btfss	status,2,c
  3391  0452' EF00' F000'        	goto	u5751
  3392  0456' EF00' F000'        	goto	u5750
  3393  045A'                    u5751:
  3394  045A' FFFF               	dw	65535	; assembler added errata NOP
  3395  045C' EF00' F000'        	goto	l4927
  3396  0460'                    u5750:
  3397  0460' FFFF               	dw	65535	; assembler added errata NOP
  3398  0462'                    
  3399                           ; BSR set to: 0
  3400                           ;main.c: 672:         print_string("\nPlacing component: ");
  3401  0462' 0E00'              	movlw	low STR_21
  3402  0464' 6E00'              	movwf	print_string@strng^0,c
  3403  0466' 0E00'              	movlw	high STR_21
  3404  0468' 6E00'              	movwf	(print_string@strng+1)^0,c
  3405  046A' EC00' F000'        	call	_print_string	;wreg free
  3406  046E'                    
  3407                           ;main.c: 673:         print_char(Componnt);
  3408  046E' 0100               	movlb	0	; () banked
  3409  0470' 5100'              	movf	pick_and_place@Componnt& (0+255),w,b
  3410  0472' EC00' F000'        	call	_print_char
  3411  0476'                    l4927:
  3412  0476' FFFF               	dw	65535	; assembler added errata NOP
  3413                           
  3414                           ;main.c: 678:     for(int i = 0; (i<((((X_Place-X_Pick) > 0 ? (X_Place-X_Pick) : -(X_Pla
      +                          ce-X_Pick)))*steps_per_unit)) && !stop; i++){
  3415  0478' 0E00               	movlw	0
  3416  047A' 0100               	movlb	0	; () banked
  3417  047C' 6F00'              	movwf	(pick_and_place@i_778+1)& (0+255),b
  3418  047E' 0E00               	movlw	0
  3419  0480' 6F00'              	movwf	pick_and_place@i_778& (0+255),b
  3420  0482' EF00' F000'        	goto	l4933
  3421  0486'                    l4929:
  3422  0486' FFFF               	dw	65535	; assembler added errata NOP
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;main.c: 679:         X_axis(X_dir);
  3426  0488' 5000'              	movf	_X_dir^0,w,c
  3427  048A' EC00' F000'        	call	_X_axis
  3428  048E'                    
  3429                           ;main.c: 680:     }
  3430  048E' 0100               	movlb	0	; () banked
  3431  0490' 4B00'              	infsnz	pick_and_place@i_778& (0+255),f,b
  3432  0492' 2B00'              	incf	(pick_and_place@i_778+1)& (0+255),f,b
  3433  0494'                    l4933:
  3434  0494' FFFF               	dw	65535	; assembler added errata NOP
  3435                           
  3436                           ; BSR set to: 0
  3437  0496' 5000'              	movf	_X_Pick^0,w,c
  3438  0498' 5C00'              	subwf	_X_Place^0,w,c
  3439  049A' 6E00'              	movwf	??_pick_and_place^0,c
  3440  049C' 5000'              	movf	(_X_Pick+1)^0,w,c
  3441  049E' 5800'              	subwfb	(_X_Place+1)^0,w,c
  3442  04A0' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  3443  04A2' BE00'              	btfsc	(??_pick_and_place+1)^0,7,c
  3444  04A4' EF00' F000'        	goto	u5760
  3445  04A8' 5000'              	movf	(??_pick_and_place+1)^0,w,c
  3446  04AA' E106               	bnz	u5761
  3447  04AC' 0400'              	decf	??_pick_and_place^0,w,c
  3448  04AE' B0D8               	btfsc	status,0,c
  3449  04B0' EF00' F000'        	goto	u5761
  3450  04B4' EF00' F000'        	goto	u5760
  3451  04B8'                    u5761:
  3452  04B8' FFFF               	dw	65535	; assembler added errata NOP
  3453  04BA' EF00' F000'        	goto	l4937
  3454  04BE'                    u5760:
  3455  04BE' FFFF               	dw	65535	; assembler added errata NOP
  3456  04C0'                    
  3457                           ; BSR set to: 0
  3458  04C0' 5000'              	movf	_X_Pick^0,w,c
  3459  04C2' 5C00'              	subwf	_X_Place^0,w,c
  3460  04C4' 6E00'              	movwf	??_pick_and_place^0,c
  3461  04C6' 5000'              	movf	(_X_Pick+1)^0,w,c
  3462  04C8' 5800'              	subwfb	(_X_Place+1)^0,w,c
  3463  04CA' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  3464  04CC' 1E00'              	comf	??_pick_and_place^0,f,c
  3465  04CE' 1E00'              	comf	(??_pick_and_place+1)^0,f,c
  3466  04D0' 4A00'              	infsnz	??_pick_and_place^0,f,c
  3467  04D2' 2A00'              	incf	(??_pick_and_place+1)^0,f,c
  3468  04D4' C03C' F012'        	movff	??_pick_and_place,_pick_and_place$779
  3469  04D8' C03D' F013'        	movff	??_pick_and_place+1,_pick_and_place$779+1
  3470  04DC' EF00' F000'        	goto	l392
  3471  04E0'                    l4937:
  3472  04E0' FFFF               	dw	65535	; assembler added errata NOP
  3473                           
  3474                           ; BSR set to: 0
  3475  04E2' 5000'              	movf	_X_Pick^0,w,c
  3476  04E4' 5C00'              	subwf	_X_Place^0,w,c
  3477  04E6' 6F00'              	movwf	_pick_and_place$779& (0+255),b
  3478  04E8' 5000'              	movf	(_X_Pick+1)^0,w,c
  3479  04EA' 5800'              	subwfb	(_X_Place+1)^0,w,c
  3480  04EC' 6F00'              	movwf	(_pick_and_place$779+1)& (0+255),b
  3481  04EE'                    l392:
  3482  04EE' FFFF               	dw	65535	; assembler added errata NOP
  3483                           
  3484                           ; BSR set to: 0
  3485  04F0' 5100'              	movf	_pick_and_place$779& (0+255),w,b
  3486  04F2' 5D00'              	subwf	pick_and_place@i_778& (0+255),w,b
  3487  04F4' 5100'              	movf	(pick_and_place@i_778+1)& (0+255),w,b
  3488  04F6' 0A80               	xorlw	128
  3489  04F8' 6E00'              	movwf	??_pick_and_place^0,c
  3490  04FA' 5100'              	movf	(_pick_and_place$779+1)& (0+255),w,b
  3491  04FC' 0A80               	xorlw	128
  3492  04FE' 5800'              	subwfb	??_pick_and_place^0,w,c
  3493  0500' B0D8               	btfsc	status,0,c
  3494  0502' EF00' F000'        	goto	u5771
  3495  0506' EF00' F000'        	goto	u5770
  3496  050A'                    u5771:
  3497  050A' FFFF               	dw	65535	; assembler added errata NOP
  3498  050C' EF00' F000'        	goto	l4941
  3499  0510'                    u5770:
  3500  0510' FFFF               	dw	65535	; assembler added errata NOP
  3501  0512'                    
  3502                           ; BSR set to: 0
  3503  0512' 5000'              	movf	_stop^0,w,c
  3504  0514' B4D8               	btfsc	status,2,c
  3505  0516' EF00' F000'        	goto	u5781
  3506  051A' EF00' F000'        	goto	u5780
  3507  051E'                    u5781:
  3508  051E' FFFF               	dw	65535	; assembler added errata NOP
  3509  0520' EF00' F000'        	goto	l4929
  3510  0524'                    u5780:
  3511  0524'                    l4941:
  3512  0524' FFFF               	dw	65535	; assembler added errata NOP
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;main.c: 681:     for(int i = 0; (i<((((Y_Place-Y_Pick) > 0 ? (Y_Place-Y_Pick) : -(Y_Pla
      +                          ce-Y_Pick)))*steps_per_unit)) && !stop; i++){
  3516  0526' 0E00               	movlw	0
  3517  0528' 6F00'              	movwf	(pick_and_place@i_780+1)& (0+255),b
  3518  052A' 0E00               	movlw	0
  3519  052C' 6F00'              	movwf	pick_and_place@i_780& (0+255),b
  3520  052E' EF00' F000'        	goto	l4947
  3521  0532'                    l4943:
  3522  0532' FFFF               	dw	65535	; assembler added errata NOP
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;main.c: 682:         Y_axis(Y_dir);
  3526  0534' 5000'              	movf	_Y_dir^0,w,c
  3527  0536' EC00' F000'        	call	_Y_axis
  3528  053A'                    
  3529                           ;main.c: 683:     }
  3530  053A' 0100               	movlb	0	; () banked
  3531  053C' 4B00'              	infsnz	pick_and_place@i_780& (0+255),f,b
  3532  053E' 2B00'              	incf	(pick_and_place@i_780+1)& (0+255),f,b
  3533  0540'                    l4947:
  3534  0540' FFFF               	dw	65535	; assembler added errata NOP
  3535                           
  3536                           ; BSR set to: 0
  3537  0542' 5000'              	movf	_Y_Pick^0,w,c
  3538  0544' 5C00'              	subwf	_Y_Place^0,w,c
  3539  0546' 6E00'              	movwf	??_pick_and_place^0,c
  3540  0548' 5000'              	movf	(_Y_Pick+1)^0,w,c
  3541  054A' 5800'              	subwfb	(_Y_Place+1)^0,w,c
  3542  054C' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  3543  054E' BE00'              	btfsc	(??_pick_and_place+1)^0,7,c
  3544  0550' EF00' F000'        	goto	u5790
  3545  0554' 5000'              	movf	(??_pick_and_place+1)^0,w,c
  3546  0556' E106               	bnz	u5791
  3547  0558' 0400'              	decf	??_pick_and_place^0,w,c
  3548  055A' B0D8               	btfsc	status,0,c
  3549  055C' EF00' F000'        	goto	u5791
  3550  0560' EF00' F000'        	goto	u5790
  3551  0564'                    u5791:
  3552  0564' FFFF               	dw	65535	; assembler added errata NOP
  3553  0566' EF00' F000'        	goto	l4951
  3554  056A'                    u5790:
  3555  056A' FFFF               	dw	65535	; assembler added errata NOP
  3556  056C'                    
  3557                           ; BSR set to: 0
  3558  056C' 5000'              	movf	_Y_Pick^0,w,c
  3559  056E' 5C00'              	subwf	_Y_Place^0,w,c
  3560  0570' 6E00'              	movwf	??_pick_and_place^0,c
  3561  0572' 5000'              	movf	(_Y_Pick+1)^0,w,c
  3562  0574' 5800'              	subwfb	(_Y_Place+1)^0,w,c
  3563  0576' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  3564  0578' 1E00'              	comf	??_pick_and_place^0,f,c
  3565  057A' 1E00'              	comf	(??_pick_and_place+1)^0,f,c
  3566  057C' 4A00'              	infsnz	??_pick_and_place^0,f,c
  3567  057E' 2A00'              	incf	(??_pick_and_place+1)^0,f,c
  3568  0580' C03C' F016'        	movff	??_pick_and_place,_pick_and_place$781
  3569  0584' C03D' F017'        	movff	??_pick_and_place+1,_pick_and_place$781+1
  3570  0588' EF00' F000'        	goto	l401
  3571  058C'                    l4951:
  3572  058C' FFFF               	dw	65535	; assembler added errata NOP
  3573                           
  3574                           ; BSR set to: 0
  3575  058E' 5000'              	movf	_Y_Pick^0,w,c
  3576  0590' 5C00'              	subwf	_Y_Place^0,w,c
  3577  0592' 6F00'              	movwf	_pick_and_place$781& (0+255),b
  3578  0594' 5000'              	movf	(_Y_Pick+1)^0,w,c
  3579  0596' 5800'              	subwfb	(_Y_Place+1)^0,w,c
  3580  0598' 6F00'              	movwf	(_pick_and_place$781+1)& (0+255),b
  3581  059A'                    l401:
  3582  059A' FFFF               	dw	65535	; assembler added errata NOP
  3583                           
  3584                           ; BSR set to: 0
  3585  059C' 5100'              	movf	_pick_and_place$781& (0+255),w,b
  3586  059E' 5D00'              	subwf	pick_and_place@i_780& (0+255),w,b
  3587  05A0' 5100'              	movf	(pick_and_place@i_780+1)& (0+255),w,b
  3588  05A2' 0A80               	xorlw	128
  3589  05A4' 6E00'              	movwf	??_pick_and_place^0,c
  3590  05A6' 5100'              	movf	(_pick_and_place$781+1)& (0+255),w,b
  3591  05A8' 0A80               	xorlw	128
  3592  05AA' 5800'              	subwfb	??_pick_and_place^0,w,c
  3593  05AC' B0D8               	btfsc	status,0,c
  3594  05AE' EF00' F000'        	goto	u5801
  3595  05B2' EF00' F000'        	goto	u5800
  3596  05B6'                    u5801:
  3597  05B6' FFFF               	dw	65535	; assembler added errata NOP
  3598  05B8' EF00' F000'        	goto	l4955
  3599  05BC'                    u5800:
  3600  05BC' FFFF               	dw	65535	; assembler added errata NOP
  3601  05BE'                    
  3602                           ; BSR set to: 0
  3603  05BE' 5000'              	movf	_stop^0,w,c
  3604  05C0' B4D8               	btfsc	status,2,c
  3605  05C2' EF00' F000'        	goto	u5811
  3606  05C6' EF00' F000'        	goto	u5810
  3607  05CA'                    u5811:
  3608  05CA' FFFF               	dw	65535	; assembler added errata NOP
  3609  05CC' EF00' F000'        	goto	l4943
  3610  05D0'                    u5810:
  3611  05D0'                    l4955:
  3612  05D0' FFFF               	dw	65535	; assembler added errata NOP
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;main.c: 684:     for(int i = 0; (i<(((Pick_Angle-Place_Angle) > 0 ? (Pick_Angle-Place_A
      +                          ngle) : -(Pick_Angle-Place_Angle))/3.6)) && !stop; i++){
  3616  05D2' 0E00               	movlw	0
  3617  05D4' 6F00'              	movwf	(pick_and_place@i_782+1)& (0+255),b
  3618  05D6' 0E00               	movlw	0
  3619  05D8' 6F00'              	movwf	pick_and_place@i_782& (0+255),b
  3620  05DA' EF00' F000'        	goto	l4961
  3621  05DE'                    l4957:
  3622  05DE' FFFF               	dw	65535	; assembler added errata NOP
  3623                           
  3624                           ;main.c: 685:         Twister(Twist_dir);
  3625  05E0' 5000'              	movf	_Twist_dir^0,w,c
  3626  05E2' EC00' F000'        	call	_Twister
  3627  05E6'                    
  3628                           ;main.c: 686:     }
  3629  05E6' 0100               	movlb	0	; () banked
  3630  05E8' 4B00'              	infsnz	pick_and_place@i_782& (0+255),f,b
  3631  05EA' 2B00'              	incf	(pick_and_place@i_782+1)& (0+255),f,b
  3632  05EC'                    l4961:
  3633  05EC' FFFF               	dw	65535	; assembler added errata NOP
  3634                           
  3635                           ; BSR set to: 0
  3636  05EE' 5000'              	movf	_Place_Angle^0,w,c
  3637  05F0' 5C00'              	subwf	_Pick_Angle^0,w,c
  3638  05F2' 6E00'              	movwf	??_pick_and_place^0,c
  3639  05F4' 5000'              	movf	(_Place_Angle+1)^0,w,c
  3640  05F6' 5800'              	subwfb	(_Pick_Angle+1)^0,w,c
  3641  05F8' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  3642  05FA' BE00'              	btfsc	(??_pick_and_place+1)^0,7,c
  3643  05FC' EF00' F000'        	goto	u5820
  3644  0600' 5000'              	movf	(??_pick_and_place+1)^0,w,c
  3645  0602' E106               	bnz	u5821
  3646  0604' 0400'              	decf	??_pick_and_place^0,w,c
  3647  0606' B0D8               	btfsc	status,0,c
  3648  0608' EF00' F000'        	goto	u5821
  3649  060C' EF00' F000'        	goto	u5820
  3650  0610'                    u5821:
  3651  0610' FFFF               	dw	65535	; assembler added errata NOP
  3652  0612' EF00' F000'        	goto	l4965
  3653  0616'                    u5820:
  3654  0616' FFFF               	dw	65535	; assembler added errata NOP
  3655  0618'                    
  3656                           ; BSR set to: 0
  3657  0618' 5000'              	movf	_Place_Angle^0,w,c
  3658  061A' 5C00'              	subwf	_Pick_Angle^0,w,c
  3659  061C' 6E00'              	movwf	??_pick_and_place^0,c
  3660  061E' 5000'              	movf	(_Place_Angle+1)^0,w,c
  3661  0620' 5800'              	subwfb	(_Pick_Angle+1)^0,w,c
  3662  0622' 6E00'              	movwf	(??_pick_and_place+1)^0,c
  3663  0624' 1E00'              	comf	??_pick_and_place^0,f,c
  3664  0626' 1E00'              	comf	(??_pick_and_place+1)^0,f,c
  3665  0628' 4A00'              	infsnz	??_pick_and_place^0,f,c
  3666  062A' 2A00'              	incf	(??_pick_and_place+1)^0,f,c
  3667  062C' C03C' F01A'        	movff	??_pick_and_place,_pick_and_place$783
  3668  0630' C03D' F01B'        	movff	??_pick_and_place+1,_pick_and_place$783+1
  3669  0634' EF00' F000'        	goto	l4967
  3670  0638'                    l4965:
  3671  0638' FFFF               	dw	65535	; assembler added errata NOP
  3672                           
  3673                           ; BSR set to: 0
  3674  063A' 5000'              	movf	_Place_Angle^0,w,c
  3675  063C' 5C00'              	subwf	_Pick_Angle^0,w,c
  3676  063E' 6F00'              	movwf	_pick_and_place$783& (0+255),b
  3677  0640' 5000'              	movf	(_Place_Angle+1)^0,w,c
  3678  0642' 5800'              	subwfb	(_Pick_Angle+1)^0,w,c
  3679  0644' 6F00'              	movwf	(_pick_and_place$783+1)& (0+255),b
  3680  0646'                    l4967:
  3681  0646' FFFF               	dw	65535	; assembler added errata NOP
  3682                           
  3683                           ; BSR set to: 0
  3684  0648' C018' F009'        	movff	pick_and_place@i_782,___xxtofl@val
  3685  064C' C019' F00A'        	movff	pick_and_place@i_782+1,___xxtofl@val+1
  3686  0650' 0E00               	movlw	0
  3687  0652' BE00'              	btfsc	(___xxtofl@val+1)^0,7,c
  3688  0654' 0EFF               	movlw	-1
  3689  0656' 6E00'              	movwf	(___xxtofl@val+2)^0,c
  3690  0658' 6E00'              	movwf	(___xxtofl@val+3)^0,c
  3691  065A' 0E01               	movlw	1
  3692  065C' EC00' F000'        	call	___xxtofl
  3693  0660' C009' F030'        	movff	?___xxtofl,___flge@ff1
  3694  0664' C00A' F031'        	movff	?___xxtofl+1,___flge@ff1+1
  3695  0668' C00B' F032'        	movff	?___xxtofl+2,___flge@ff1+2
  3696  066C' C00C' F033'        	movff	?___xxtofl+3,___flge@ff1+3
  3697  0670' 0E66               	movlw	102
  3698  0672' 6E00'              	movwf	___fldiv@a^0,c
  3699  0674' 0E66               	movlw	102
  3700  0676' 6E00'              	movwf	(___fldiv@a+1)^0,c
  3701  0678' 0E66               	movlw	102
  3702  067A' 6E00'              	movwf	(___fldiv@a+2)^0,c
  3703  067C' 0E40               	movlw	64
  3704  067E' 6E00'              	movwf	(___fldiv@a+3)^0,c
  3705  0680' C01A' F009'        	movff	_pick_and_place$783,___xxtofl@val
  3706  0684' C01B' F00A'        	movff	_pick_and_place$783+1,___xxtofl@val+1
  3707  0688' 0E00               	movlw	0
  3708  068A' BE00'              	btfsc	(___xxtofl@val+1)^0,7,c
  3709  068C' 0EFF               	movlw	-1
  3710  068E' 6E00'              	movwf	(___xxtofl@val+2)^0,c
  3711  0690' 6E00'              	movwf	(___xxtofl@val+3)^0,c
  3712  0692' 0E01               	movlw	1
  3713  0694' EC00' F000'        	call	___xxtofl
  3714  0698' C009' F017'        	movff	?___xxtofl,___fldiv@b
  3715  069C' C00A' F018'        	movff	?___xxtofl+1,___fldiv@b+1
  3716  06A0' C00B' F019'        	movff	?___xxtofl+2,___fldiv@b+2
  3717  06A4' C00C' F01A'        	movff	?___xxtofl+3,___fldiv@b+3
  3718  06A8' EC00' F000'        	call	___fldiv	;wreg free
  3719  06AC' C017' F034'        	movff	?___fldiv,___flge@ff2
  3720  06B0' C018' F035'        	movff	?___fldiv+1,___flge@ff2+1
  3721  06B4' C019' F036'        	movff	?___fldiv+2,___flge@ff2+2
  3722  06B8' C01A' F037'        	movff	?___fldiv+3,___flge@ff2+3
  3723  06BC' EC00' F000'        	call	___flge	;wreg free
  3724  06C0' B0D8               	btfsc	status,0,c
  3725  06C2' EF00' F000'        	goto	u5831
  3726  06C6' EF00' F000'        	goto	u5830
  3727  06CA'                    u5831:
  3728  06CA' FFFF               	dw	65535	; assembler added errata NOP
  3729  06CC' EF00' F000'        	goto	l4971
  3730  06D0'                    u5830:
  3731  06D0' FFFF               	dw	65535	; assembler added errata NOP
  3732  06D2' 5000'              	movf	_stop^0,w,c
  3733  06D4' B4D8               	btfsc	status,2,c
  3734  06D6' EF00' F000'        	goto	u5841
  3735  06DA' EF00' F000'        	goto	u5840
  3736  06DE'                    u5841:
  3737  06DE' FFFF               	dw	65535	; assembler added errata NOP
  3738  06E0' EF00' F000'        	goto	l4957
  3739  06E4'                    u5840:
  3740  06E4'                    l4971:
  3741  06E4' FFFF               	dw	65535	; assembler added errata NOP
  3742                           
  3743                           ;main.c: 689:     for(int i=0; i<(3*steps_per_unit) && !stop; i++){Z_axis(1);}
  3744  06E6' 0E00               	movlw	0
  3745  06E8' 0100               	movlb	0	; () banked
  3746  06EA' 6F00'              	movwf	(pick_and_place@i_784+1)& (0+255),b
  3747  06EC' 0E00               	movlw	0
  3748  06EE' 6F00'              	movwf	pick_and_place@i_784& (0+255),b
  3749  06F0' EF00' F000'        	goto	l4977
  3750  06F4'                    l4973:
  3751  06F4' FFFF               	dw	65535	; assembler added errata NOP
  3752                           
  3753                           ; BSR set to: 0
  3754  06F6' 0E01               	movlw	1
  3755  06F8' EC00' F000'        	call	_Z_axis
  3756  06FC' 0100               	movlb	0	; () banked
  3757  06FE' 4B00'              	infsnz	pick_and_place@i_784& (0+255),f,b
  3758  0700' 2B00'              	incf	(pick_and_place@i_784+1)& (0+255),f,b
  3759  0702'                    l4977:
  3760  0702' FFFF               	dw	65535	; assembler added errata NOP
  3761                           
  3762                           ; BSR set to: 0
  3763  0704' BF00'              	btfsc	(pick_and_place@i_784+1)& (0+255),7,b
  3764  0706' EF00' F000'        	goto	u5850
  3765  070A' 5100'              	movf	(pick_and_place@i_784+1)& (0+255),w,b
  3766  070C' E107               	bnz	u5851
  3767  070E' 0E03               	movlw	3
  3768  0710' 5D00'              	subwf	pick_and_place@i_784& (0+255),w,b
  3769  0712' B0D8               	btfsc	status,0,c
  3770  0714' EF00' F000'        	goto	u5851
  3771  0718' EF00' F000'        	goto	u5850
  3772  071C'                    u5851:
  3773  071C' FFFF               	dw	65535	; assembler added errata NOP
  3774  071E' EF00' F000'        	goto	l4981
  3775  0722'                    u5850:
  3776  0722' FFFF               	dw	65535	; assembler added errata NOP
  3777  0724'                    
  3778                           ; BSR set to: 0
  3779  0724' 5000'              	movf	_stop^0,w,c
  3780  0726' B4D8               	btfsc	status,2,c
  3781  0728' EF00' F000'        	goto	u5861
  3782  072C' EF00' F000'        	goto	u5860
  3783  0730'                    u5861:
  3784  0730' FFFF               	dw	65535	; assembler added errata NOP
  3785  0732' EF00' F000'        	goto	l4973
  3786  0736'                    u5860:
  3787  0736'                    l4981:
  3788  0736' FFFF               	dw	65535	; assembler added errata NOP
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;main.c: 690:     Tweezer(1);
  3792  0738' 0E01               	movlw	1
  3793  073A' EC00' F000'        	call	_Tweezer
  3794  073E'                    
  3795                           ;main.c: 691:     for(int i=0; i<(3*steps_per_unit) && !stop; i++){Z_axis(0);}
  3796  073E' 0E00               	movlw	0
  3797  0740' 0100               	movlb	0	; () banked
  3798  0742' 6F00'              	movwf	(pick_and_place@i_785+1)& (0+255),b
  3799  0744' 0E00               	movlw	0
  3800  0746' 6F00'              	movwf	pick_and_place@i_785& (0+255),b
  3801  0748' EF00' F000'        	goto	l4989
  3802  074C'                    l4985:
  3803  074C' FFFF               	dw	65535	; assembler added errata NOP
  3804                           
  3805                           ; BSR set to: 0
  3806  074E' 0E00               	movlw	0
  3807  0750' EC00' F000'        	call	_Z_axis
  3808  0754' 0100               	movlb	0	; () banked
  3809  0756' 4B00'              	infsnz	pick_and_place@i_785& (0+255),f,b
  3810  0758' 2B00'              	incf	(pick_and_place@i_785+1)& (0+255),f,b
  3811  075A'                    l4989:
  3812  075A' FFFF               	dw	65535	; assembler added errata NOP
  3813                           
  3814                           ; BSR set to: 0
  3815  075C' BF00'              	btfsc	(pick_and_place@i_785+1)& (0+255),7,b
  3816  075E' EF00' F000'        	goto	u5870
  3817  0762' 5100'              	movf	(pick_and_place@i_785+1)& (0+255),w,b
  3818  0764' E107               	bnz	u5871
  3819  0766' 0E03               	movlw	3
  3820  0768' 5D00'              	subwf	pick_and_place@i_785& (0+255),w,b
  3821  076A' B0D8               	btfsc	status,0,c
  3822  076C' EF00' F000'        	goto	u5871
  3823  0770' EF00' F000'        	goto	u5870
  3824  0774'                    u5871:
  3825  0774' FFFF               	dw	65535	; assembler added errata NOP
  3826  0776' EF00' F000'        	goto	l421
  3827  077A'                    u5870:
  3828  077A' FFFF               	dw	65535	; assembler added errata NOP
  3829  077C'                    
  3830                           ; BSR set to: 0
  3831  077C' 5000'              	movf	_stop^0,w,c
  3832  077E' B4D8               	btfsc	status,2,c
  3833  0780' EF00' F000'        	goto	u5881
  3834  0784' EF00' F000'        	goto	u5880
  3835  0788'                    u5881:
  3836  0788' FFFF               	dw	65535	; assembler added errata NOP
  3837  078A' EF00' F000'        	goto	l4985
  3838  078E'                    u5880:
  3839  078E'                    l421:
  3840  078E' FFFF               	dw	65535	; assembler added errata NOP
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;main.c: 694:     Angle_diff= Place_Angle;
  3844  0790' C008' F002'        	movff	_Place_Angle,_Angle_diff
  3845  0794' C009' F003'        	movff	_Place_Angle+1,_Angle_diff+1
  3846                           
  3847                           ;main.c: 695:     X_diff = X_Place;
  3848  0798' C010' F006'        	movff	_X_Place,_X_diff
  3849  079C' C011' F007'        	movff	_X_Place+1,_X_diff+1
  3850                           
  3851                           ;main.c: 696:     Y_diff = Y_Place;
  3852  07A0' C00C' F004'        	movff	_Y_Place,_Y_diff
  3853  07A4' C00D' F005'        	movff	_Y_Place+1,_Y_diff+1
  3854  07A8'                    
  3855                           ; BSR set to: 0
  3856  07A8' 0012               	return		;funcret
  3857  07AA' FFFF               	dw	65535	; errata NOP
  3858  07AC'                    __end_of_pick_and_place:
  3859                           	callstack 0
  3860                           
  3861 ;; *************** function _fetch_coordinates *****************
  3862 ;; Defined at:
  3863 ;;		line 559 in file "main.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  Componnt        1    wreg     unsigned char 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  Componnt        1    9[COMRAM] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  2  325[None  ] int 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3877 ;;      Params:         0       0       0       0       0       0       0
  3878 ;;      Locals:         1       0       0       0       0       0       0
  3879 ;;      Temps:          0       0       0       0       0       0       0
  3880 ;;      Totals:         1       0       0       0       0       0       0
  3881 ;;Total ram usage:        1 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 2
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_pick_and_place
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text8
  3892  0000'                    __ptext8:
  3893                           	callstack 0
  3894  0000'                    _fetch_coordinates:
  3895                           	callstack 0
  3896  0000' FFFF               	dw	65535	; assembler added errata NOP
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;incstack = 0
  3900                           ;fetch_coordinates@Componnt stored from wreg
  3901  0002' 6E00'              	movwf	fetch_coordinates@Componnt^0,c
  3902  0004'                    
  3903                           ;main.c: 560:     if(Componnt=='A'){
  3904  0004' 0E41               	movlw	65
  3905  0006' 1800'              	xorwf	fetch_coordinates@Componnt^0,w,c
  3906  0008' A4D8               	btfss	status,2,c
  3907  000A' EF00' F000'        	goto	u4991
  3908  000E' EF00' F000'        	goto	u4990
  3909  0012'                    u4991:
  3910  0012' FFFF               	dw	65535	; assembler added errata NOP
  3911  0014' EF00' F000'        	goto	l4549
  3912  0018'                    u4990:
  3913  0018' FFFF               	dw	65535	; assembler added errata NOP
  3914  001A'                    
  3915                           ;main.c: 561:         X_Pick=3;
  3916  001A' 0E00               	movlw	0
  3917  001C' 6E00'              	movwf	(_X_Pick+1)^0,c
  3918  001E' 0E03               	movlw	3
  3919  0020' 6E00'              	movwf	_X_Pick^0,c
  3920                           
  3921                           ;main.c: 562:         Y_Pick=4;
  3922  0022' 0E00               	movlw	0
  3923  0024' 6E00'              	movwf	(_Y_Pick+1)^0,c
  3924  0026' 0E04               	movlw	4
  3925  0028' 6E00'              	movwf	_Y_Pick^0,c
  3926                           
  3927                           ;main.c: 563:         Pick_Angle=0;
  3928  002A' 0E00               	movlw	0
  3929  002C' 6E00'              	movwf	(_Pick_Angle+1)^0,c
  3930  002E' 0E00               	movlw	0
  3931  0030' 6E00'              	movwf	_Pick_Angle^0,c
  3932                           
  3933                           ;main.c: 565:         X_Place=17;
  3934  0032' 0E00               	movlw	0
  3935  0034' 6E00'              	movwf	(_X_Place+1)^0,c
  3936  0036' 0E11               	movlw	17
  3937  0038' 6E00'              	movwf	_X_Place^0,c
  3938                           
  3939                           ;main.c: 566:         Y_Place=5;
  3940  003A' 0E00               	movlw	0
  3941  003C' 6E00'              	movwf	(_Y_Place+1)^0,c
  3942  003E' 0E05               	movlw	5
  3943  0040' 6E00'              	movwf	_Y_Place^0,c
  3944                           
  3945                           ;main.c: 567:         Place_Angle=270;
  3946  0042' 0E01               	movlw	1
  3947  0044' 6E00'              	movwf	(_Place_Angle+1)^0,c
  3948  0046' 0E0E               	movlw	14
  3949  0048' 6E00'              	movwf	_Place_Angle^0,c
  3950                           
  3951                           ;main.c: 568:     }
  3952  004A' EF00' F000'        	goto	l333
  3953  004E'                    l4549:
  3954  004E' FFFF               	dw	65535	; assembler added errata NOP
  3955  0050' 0E42               	movlw	66
  3956  0052' 1800'              	xorwf	fetch_coordinates@Componnt^0,w,c
  3957  0054' A4D8               	btfss	status,2,c
  3958  0056' EF00' F000'        	goto	u5001
  3959  005A' EF00' F000'        	goto	u5000
  3960  005E'                    u5001:
  3961  005E' FFFF               	dw	65535	; assembler added errata NOP
  3962  0060' EF00' F000'        	goto	l4553
  3963  0064'                    u5000:
  3964  0064' FFFF               	dw	65535	; assembler added errata NOP
  3965  0066'                    
  3966                           ;main.c: 570:         X_Pick=3;
  3967  0066' 0E00               	movlw	0
  3968  0068' 6E00'              	movwf	(_X_Pick+1)^0,c
  3969  006A' 0E03               	movlw	3
  3970  006C' 6E00'              	movwf	_X_Pick^0,c
  3971                           
  3972                           ;main.c: 571:         Y_Pick=10;
  3973  006E' 0E00               	movlw	0
  3974  0070' 6E00'              	movwf	(_Y_Pick+1)^0,c
  3975  0072' 0E0A               	movlw	10
  3976  0074' 6E00'              	movwf	_Y_Pick^0,c
  3977                           
  3978                           ;main.c: 572:         Pick_Angle=90;
  3979  0076' 0E00               	movlw	0
  3980  0078' 6E00'              	movwf	(_Pick_Angle+1)^0,c
  3981  007A' 0E5A               	movlw	90
  3982  007C' 6E00'              	movwf	_Pick_Angle^0,c
  3983                           
  3984                           ;main.c: 574:         X_Place=10;
  3985  007E' 0E00               	movlw	0
  3986  0080' 6E00'              	movwf	(_X_Place+1)^0,c
  3987  0082' 0E0A               	movlw	10
  3988  0084' 6E00'              	movwf	_X_Place^0,c
  3989                           
  3990                           ;main.c: 575:         Y_Place=5;
  3991  0086' 0E00               	movlw	0
  3992  0088' 6E00'              	movwf	(_Y_Place+1)^0,c
  3993  008A' 0E05               	movlw	5
  3994  008C' 6E00'              	movwf	_Y_Place^0,c
  3995                           
  3996                           ;main.c: 576:         Place_Angle=180;
  3997  008E' 0E00               	movlw	0
  3998  0090' 6E00'              	movwf	(_Place_Angle+1)^0,c
  3999  0092' 0EB4               	movlw	180
  4000  0094' 6E00'              	movwf	_Place_Angle^0,c
  4001                           
  4002                           ;main.c: 577:     }
  4003  0096' EF00' F000'        	goto	l333
  4004  009A'                    l4553:
  4005  009A' FFFF               	dw	65535	; assembler added errata NOP
  4006  009C' 0E43               	movlw	67
  4007  009E' 1800'              	xorwf	fetch_coordinates@Componnt^0,w,c
  4008  00A0' A4D8               	btfss	status,2,c
  4009  00A2' EF00' F000'        	goto	u5011
  4010  00A6' EF00' F000'        	goto	u5010
  4011  00AA'                    u5011:
  4012  00AA' FFFF               	dw	65535	; assembler added errata NOP
  4013  00AC' EF00' F000'        	goto	l4557
  4014  00B0'                    u5010:
  4015  00B0' FFFF               	dw	65535	; assembler added errata NOP
  4016  00B2'                    
  4017                           ;main.c: 579:         X_Pick=3;
  4018  00B2' 0E00               	movlw	0
  4019  00B4' 6E00'              	movwf	(_X_Pick+1)^0,c
  4020  00B6' 0E03               	movlw	3
  4021  00B8' 6E00'              	movwf	_X_Pick^0,c
  4022                           
  4023                           ;main.c: 580:         Y_Pick=15;
  4024  00BA' 0E00               	movlw	0
  4025  00BC' 6E00'              	movwf	(_Y_Pick+1)^0,c
  4026  00BE' 0E0F               	movlw	15
  4027  00C0' 6E00'              	movwf	_Y_Pick^0,c
  4028                           
  4029                           ;main.c: 581:         Pick_Angle=90;
  4030  00C2' 0E00               	movlw	0
  4031  00C4' 6E00'              	movwf	(_Pick_Angle+1)^0,c
  4032  00C6' 0E5A               	movlw	90
  4033  00C8' 6E00'              	movwf	_Pick_Angle^0,c
  4034                           
  4035                           ;main.c: 583:         X_Place=16;
  4036  00CA' 0E00               	movlw	0
  4037  00CC' 6E00'              	movwf	(_X_Place+1)^0,c
  4038  00CE' 0E10               	movlw	16
  4039  00D0' 6E00'              	movwf	_X_Place^0,c
  4040                           
  4041                           ;main.c: 584:         Y_Place=14;
  4042  00D2' 0E00               	movlw	0
  4043  00D4' 6E00'              	movwf	(_Y_Place+1)^0,c
  4044  00D6' 0E0E               	movlw	14
  4045  00D8' 6E00'              	movwf	_Y_Place^0,c
  4046                           
  4047                           ;main.c: 585:         Place_Angle=270;
  4048  00DA' 0E01               	movlw	1
  4049  00DC' 6E00'              	movwf	(_Place_Angle+1)^0,c
  4050  00DE' 0E0E               	movlw	14
  4051  00E0' 6E00'              	movwf	_Place_Angle^0,c
  4052                           
  4053                           ;main.c: 586:     }
  4054  00E2' EF00' F000'        	goto	l333
  4055  00E6'                    l4557:
  4056  00E6' FFFF               	dw	65535	; assembler added errata NOP
  4057  00E8' 0E44               	movlw	68
  4058  00EA' 1800'              	xorwf	fetch_coordinates@Componnt^0,w,c
  4059  00EC' A4D8               	btfss	status,2,c
  4060  00EE' EF00' F000'        	goto	u5021
  4061  00F2' EF00' F000'        	goto	u5020
  4062  00F6'                    u5021:
  4063  00F6' FFFF               	dw	65535	; assembler added errata NOP
  4064  00F8' EF00' F000'        	goto	l329
  4065  00FC'                    u5020:
  4066  00FC' FFFF               	dw	65535	; assembler added errata NOP
  4067  00FE'                    
  4068                           ;main.c: 588:         X_Pick=X_Pick_D;
  4069  00FE' C010' F012'        	movff	_X_Pick_D,_X_Pick
  4070  0102' C011' F013'        	movff	_X_Pick_D+1,_X_Pick+1
  4071                           
  4072                           ;main.c: 589:         Y_Pick=Y_Pick_D;
  4073  0106' C00E' F00E'        	movff	_Y_Pick_D,_Y_Pick
  4074  010A' C00F' F00F'        	movff	_Y_Pick_D+1,_Y_Pick+1
  4075                           
  4076                           ;main.c: 590:         Pick_Angle=Pick_Angle_D;
  4077  010E' C00C' F00A'        	movff	_Pick_Angle_D,_Pick_Angle
  4078  0112' C00D' F00B'        	movff	_Pick_Angle_D+1,_Pick_Angle+1
  4079                           
  4080                           ;main.c: 592:         X_Place=X_Place_D;
  4081  0116' C00A' F010'        	movff	_X_Place_D,_X_Place
  4082  011A' C00B' F011'        	movff	_X_Place_D+1,_X_Place+1
  4083                           
  4084                           ;main.c: 593:         Y_Place=Y_Place_D;
  4085  011E' C008' F00C'        	movff	_Y_Place_D,_Y_Place
  4086  0122' C009' F00D'        	movff	_Y_Place_D+1,_Y_Place+1
  4087                           
  4088                           ;main.c: 594:         Place_Angle=Place_Angle_D;
  4089  0126' C006' F008'        	movff	_Place_Angle_D,_Place_Angle
  4090  012A' C007' F009'        	movff	_Place_Angle_D+1,_Place_Angle+1
  4091  012E' EF00' F000'        	goto	l333
  4092  0132'                    l329:
  4093  0132'                    l333:
  4094  0132' FFFF               	dw	65535	; assembler added errata NOP
  4095  0134' 0012               	return		;funcret
  4096  0136' FFFF               	dw	65535	; errata NOP
  4097  0138'                    __end_of_fetch_coordinates:
  4098                           	callstack 0
  4099                           
  4100 ;; *************** function _check_component *****************
  4101 ;; Defined at:
  4102 ;;		line 601 in file "main.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  Compnt          1    wreg     unsigned char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  Compnt          1   17[COMRAM] unsigned char 
  4107 ;;  j               2   18[COMRAM] int 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4117 ;;      Params:         0       0       0       0       0       0       0
  4118 ;;      Locals:         3       0       0       0       0       0       0
  4119 ;;      Temps:          2       0       0       0       0       0       0
  4120 ;;      Totals:         5       0       0       0       0       0       0
  4121 ;;Total ram usage:        5 bytes
  4122 ;; Hardware stack levels used: 1
  4123 ;; Hardware stack levels required when called: 3
  4124 ;; This function calls:
  4125 ;;		_print_char
  4126 ;;		_print_string
  4127 ;; This function is called by:
  4128 ;;		_pick_and_place
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text9
  4133  0000'                    __ptext9:
  4134                           	callstack 0
  4135  0000'                    _check_component:
  4136                           	callstack 0
  4137  0000' FFFF               	dw	65535	; assembler added errata NOP
  4138                           
  4139                           ;incstack = 0
  4140                           ;check_component@Compnt stored from wreg
  4141  0002' 6E00'              	movwf	check_component@Compnt^0,c
  4142  0004'                    
  4143                           ;main.c: 602:     int j = 0;
  4144  0004' 0E00               	movlw	0
  4145  0006' 6E00'              	movwf	(check_component@j+1)^0,c
  4146  0008' 0E00               	movlw	0
  4147  000A' 6E00'              	movwf	check_component@j^0,c
  4148                           
  4149                           ;main.c: 603:     while(!stop){
  4150  000C' EF00' F000'        	goto	l4591
  4151  0010'                    l4563:
  4152  0010' FFFF               	dw	65535	; assembler added errata NOP
  4153                           
  4154                           ;main.c: 604:         if(component_present){
  4155  0012' 5000'              	movf	_component_present^0,w,c
  4156  0014' B4D8               	btfsc	status,2,c
  4157  0016' EF00' F000'        	goto	u5031
  4158  001A' EF00' F000'        	goto	u5030
  4159  001E'                    u5031:
  4160  001E' FFFF               	dw	65535	; assembler added errata NOP
  4161  0020' EF00' F000'        	goto	l4569
  4162  0024'                    u5030:
  4163  0024' FFFF               	dw	65535	; assembler added errata NOP
  4164  0026'                    
  4165                           ;main.c: 605:             component_present=0;
  4166  0026' 0E00               	movlw	0
  4167  0028' 6E00'              	movwf	_component_present^0,c
  4168                           
  4169                           ;main.c: 606:             break;
  4170  002A' EF00' F000'        	goto	l344
  4171  002E'                    l4569:
  4172  002E' FFFF               	dw	65535	; assembler added errata NOP
  4173  0030' BE00'              	btfsc	(check_component@j+1)^0,7,c
  4174  0032' EF00' F000'        	goto	u5041
  4175  0036' 5000'              	movf	(check_component@j+1)^0,w,c
  4176  0038' E109               	bnz	u5040
  4177  003A' 0400'              	decf	check_component@j^0,w,c
  4178  003C' A0D8               	btfss	status,0,c
  4179  003E' EF00' F000'        	goto	u5041
  4180  0042' EF00' F000'        	goto	u5040
  4181  0046'                    u5041:
  4182  0046' FFFF               	dw	65535	; assembler added errata NOP
  4183  0048' EF00' F000'        	goto	l4583
  4184  004C'                    u5040:
  4185  004C' FFFF               	dw	65535	; assembler added errata NOP
  4186  004E' 5000'              	movf	_component_present^0,w,c
  4187  0050' A4D8               	btfss	status,2,c
  4188  0052' EF00' F000'        	goto	u5051
  4189  0056' EF00' F000'        	goto	u5050
  4190  005A'                    u5051:
  4191  005A' FFFF               	dw	65535	; assembler added errata NOP
  4192  005C' EF00' F000'        	goto	l4583
  4193  0060'                    u5050:
  4194  0060' FFFF               	dw	65535	; assembler added errata NOP
  4195  0062'                    
  4196                           ;main.c: 609:             print_string("\nComponent ");
  4197  0062' 0E00'              	movlw	low STR_17
  4198  0064' 6E00'              	movwf	print_string@strng^0,c
  4199  0066' 0E00'              	movlw	high STR_17
  4200  0068' 6E00'              	movwf	(print_string@strng+1)^0,c
  4201  006A' EC00' F000'        	call	_print_string	;wreg free
  4202  006E'                    
  4203                           ;main.c: 610:             print_char(Compnt);
  4204  006E' 5000'              	movf	check_component@Compnt^0,w,c
  4205  0070' EC00' F000'        	call	_print_char
  4206  0074'                    
  4207                           ;main.c: 611:             print_string(" missing!");
  4208  0074' 0E00'              	movlw	low STR_18
  4209  0076' 6E00'              	movwf	print_string@strng^0,c
  4210  0078' 0E00'              	movlw	high STR_18
  4211  007A' 6E00'              	movwf	(print_string@strng+1)^0,c
  4212  007C' EC00' F000'        	call	_print_string	;wreg free
  4213  0080'                    
  4214                           ;main.c: 612:             stop=1;
  4215  0080' 0E01               	movlw	1
  4216  0082' 6E00'              	movwf	_stop^0,c
  4217                           
  4218                           ;main.c: 613:             break;
  4219  0084' EF00' F000'        	goto	l344
  4220  0088'                    l4583:
  4221  0088' FFFF               	dw	65535	; assembler added errata NOP
  4222  008A' 5000'              	movf	_component_present^0,w,c
  4223  008C' A4D8               	btfss	status,2,c
  4224  008E' EF00' F000'        	goto	u5061
  4225  0092' EF00' F000'        	goto	u5060
  4226  0096'                    u5061:
  4227  0096' FFFF               	dw	65535	; assembler added errata NOP
  4228  0098' EF00' F000'        	goto	l340
  4229  009C'                    u5060:
  4230  009C' FFFF               	dw	65535	; assembler added errata NOP
  4231  009E'                    
  4232                           ;main.c: 616:             print_string("\nwaiting for few seconds for the component..");
  4233  009E' 0E00'              	movlw	low STR_19
  4234  00A0' 6E00'              	movwf	print_string@strng^0,c
  4235  00A2' 0E00'              	movlw	high STR_19
  4236  00A4' 6E00'              	movwf	(print_string@strng+1)^0,c
  4237  00A6' EC00' F000'        	call	_print_string	;wreg free
  4238  00AA'                    
  4239                           ;main.c: 617:             _delay((unsigned long)((5000)*(4000000/4000.0)));
  4240  00AA' 0E14               	movlw	20
  4241  00AC' 6E00'              	movwf	(??_check_component+1)^0,c
  4242  00AE' 0E0A               	movlw	10
  4243  00B0' 6E00'              	movwf	??_check_component^0,c
  4244  00B2' 0E40               	movlw	64
  4245  00B4'                    u6237:
  4246  00B4' FFFF               	dw	65535	; errata NOP
  4247  00B6' 2EE8               	decfsz	wreg,f,c
  4248  00B8' D7FD               	bra	u6237
  4249  00BA' 2E00'              	decfsz	??_check_component^0,f,c
  4250  00BC' D7FB               	bra	u6237
  4251  00BE' 2E00'              	decfsz	(??_check_component+1)^0,f,c
  4252  00C0' D7F9               	bra	u6237
  4253  00C2'                    
  4254                           ;main.c: 618:             j++;
  4255  00C2' 4A00'              	infsnz	check_component@j^0,f,c
  4256  00C4' 2A00'              	incf	(check_component@j+1)^0,f,c
  4257  00C6' EF00' F000'        	goto	l4591
  4258  00CA'                    l340:
  4259  00CA'                    l4591:
  4260  00CA' FFFF               	dw	65535	; assembler added errata NOP
  4261                           
  4262                           ;main.c: 603:     while(!stop){
  4263  00CC' 5000'              	movf	_stop^0,w,c
  4264  00CE' B4D8               	btfsc	status,2,c
  4265  00D0' EF00' F000'        	goto	u5071
  4266  00D4' EF00' F000'        	goto	u5070
  4267  00D8'                    u5071:
  4268  00D8' FFFF               	dw	65535	; assembler added errata NOP
  4269  00DA' EF00' F000'        	goto	l4563
  4270  00DE'                    u5070:
  4271  00DE'                    l344:
  4272  00DE' FFFF               	dw	65535	; assembler added errata NOP
  4273  00E0' 0012               	return		;funcret
  4274  00E2' FFFF               	dw	65535	; errata NOP
  4275  00E4'                    __end_of_check_component:
  4276                           	callstack 0
  4277                           
  4278 ;; *************** function _print_char *****************
  4279 ;; Defined at:
  4280 ;;		line 52 in file "serial.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  chr             1    wreg     unsigned char 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  chr             1    9[COMRAM] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4294 ;;      Params:         0       0       0       0       0       0       0
  4295 ;;      Locals:         1       0       0       0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0
  4297 ;;      Totals:         1       0       0       0       0       0       0
  4298 ;;Total ram usage:        1 bytes
  4299 ;; Hardware stack levels used: 1
  4300 ;; Hardware stack levels required when called: 2
  4301 ;; This function calls:
  4302 ;;		Nothing
  4303 ;; This function is called by:
  4304 ;;		_check_component
  4305 ;;		_pick_and_place
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           	psect	text10
  4310  0000'                    __ptext10:
  4311                           	callstack 0
  4312  0000'                    _print_char:
  4313                           	callstack 0
  4314  0000' FFFF               	dw	65535	; assembler added errata NOP
  4315                           
  4316                           ;incstack = 0
  4317                           ;print_char@chr stored from wreg
  4318  0002' 6E00'              	movwf	print_char@chr^0,c
  4319  0004'                    
  4320                           ;serial.c: 53:     TXREG=chr;
  4321  0004' C009' FFAD         	movff	print_char@chr,4013	;volatile
  4322  0008'                    l487:
  4323  0008' FFFF               	dw	65535	; assembler added errata NOP
  4324  000A' A2AC               	btfss	172,1,c	;volatile
  4325  000C' EF00' F000'        	goto	u4791
  4326  0010' EF00' F000'        	goto	u4790
  4327  0014'                    u4791:
  4328  0014' FFFF               	dw	65535	; assembler added errata NOP
  4329  0016' EF00' F000'        	goto	l487
  4330  001A'                    u4790:
  4331  001A' FFFF               	dw	65535	; assembler added errata NOP
  4332  001C' 0012               	return		;funcret
  4333  001E' FFFF               	dw	65535	; errata NOP
  4334  0020'                    __end_of_print_char:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function ___xxtofl *****************
  4338 ;; Defined at:
  4339 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  sign            1    wreg     unsigned char 
  4342 ;;  val             4    9[COMRAM] long 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  sign            1   17[COMRAM] unsigned char 
  4345 ;;  arg             4   19[COMRAM] unsigned long 
  4346 ;;  exp             1   18[COMRAM] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  4    9[COMRAM] unsigned char 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4356 ;;      Params:         4       0       0       0       0       0       0
  4357 ;;      Locals:         6       0       0       0       0       0       0
  4358 ;;      Temps:          4       0       0       0       0       0       0
  4359 ;;      Totals:        14       0       0       0       0       0       0
  4360 ;;Total ram usage:       14 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 2
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_pick_and_place
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text11
  4371  0000'                    __ptext11:
  4372                           	callstack 0
  4373  0000'                    ___xxtofl:
  4374                           	callstack 0
  4375  0000' FFFF               	dw	65535	; assembler added errata NOP
  4376                           
  4377                           ;incstack = 0
  4378                           ;___xxtofl@sign stored from wreg
  4379  0002' 6E00'              	movwf	___xxtofl@sign^0,c
  4380  0004' 5000'              	movf	___xxtofl@sign^0,w,c
  4381  0006' B4D8               	btfsc	status,2,c
  4382  0008' EF00' F000'        	goto	u5361
  4383  000C' EF00' F000'        	goto	u5360
  4384  0010'                    u5361:
  4385  0010' FFFF               	dw	65535	; assembler added errata NOP
  4386  0012' EF00' F000'        	goto	l1148
  4387  0016'                    u5360:
  4388  0016' FFFF               	dw	65535	; assembler added errata NOP
  4389  0018' BE00'              	btfsc	(___xxtofl@val+3)^0,7,c
  4390  001A' EF00' F000'        	goto	u5370
  4391  001E' EF00' F000'        	goto	u5371
  4392  0022'                    u5371:
  4393  0022' FFFF               	dw	65535	; assembler added errata NOP
  4394  0024' EF00' F000'        	goto	l1148
  4395  0028'                    u5370:
  4396  0028' FFFF               	dw	65535	; assembler added errata NOP
  4397  002A' C009' F00D'        	movff	___xxtofl@val,??___xxtofl
  4398  002E' C00A' F00E'        	movff	___xxtofl@val+1,??___xxtofl+1
  4399  0032' C00B' F00F'        	movff	___xxtofl@val+2,??___xxtofl+2
  4400  0036' C00C' F010'        	movff	___xxtofl@val+3,??___xxtofl+3
  4401  003A' 1E00'              	comf	??___xxtofl^0,f,c
  4402  003C' 1E00'              	comf	(??___xxtofl+1)^0,f,c
  4403  003E' 1E00'              	comf	(??___xxtofl+2)^0,f,c
  4404  0040' 1E00'              	comf	(??___xxtofl+3)^0,f,c
  4405  0042' 2A00'              	incf	??___xxtofl^0,f,c
  4406  0044' 0E00               	movlw	0
  4407  0046' 2200'              	addwfc	(??___xxtofl+1)^0,f,c
  4408  0048' 2200'              	addwfc	(??___xxtofl+2)^0,f,c
  4409  004A' 2200'              	addwfc	(??___xxtofl+3)^0,f,c
  4410  004C' C00D' F013'        	movff	??___xxtofl,___xxtofl@arg
  4411  0050' C00E' F014'        	movff	??___xxtofl+1,___xxtofl@arg+1
  4412  0054' C00F' F015'        	movff	??___xxtofl+2,___xxtofl@arg+2
  4413  0058' C010' F016'        	movff	??___xxtofl+3,___xxtofl@arg+3
  4414  005C' EF00' F000'        	goto	l4759
  4415  0060'                    l1148:
  4416  0060' FFFF               	dw	65535	; assembler added errata NOP
  4417  0062' C009' F013'        	movff	___xxtofl@val,___xxtofl@arg
  4418  0066' C00A' F014'        	movff	___xxtofl@val+1,___xxtofl@arg+1
  4419  006A' C00B' F015'        	movff	___xxtofl@val+2,___xxtofl@arg+2
  4420  006E' C00C' F016'        	movff	___xxtofl@val+3,___xxtofl@arg+3
  4421  0072'                    l4759:
  4422  0072' FFFF               	dw	65535	; assembler added errata NOP
  4423  0074' 5000'              	movf	___xxtofl@val^0,w,c
  4424  0076' 1000'              	iorwf	(___xxtofl@val+1)^0,w,c
  4425  0078' 1000'              	iorwf	(___xxtofl@val+2)^0,w,c
  4426  007A' 1000'              	iorwf	(___xxtofl@val+3)^0,w,c
  4427  007C' A4D8               	btfss	status,2,c
  4428  007E' EF00' F000'        	goto	u5381
  4429  0082' EF00' F000'        	goto	u5380
  4430  0086'                    u5381:
  4431  0086' FFFF               	dw	65535	; assembler added errata NOP
  4432  0088' EF00' F000'        	goto	l4765
  4433  008C'                    u5380:
  4434  008C' FFFF               	dw	65535	; assembler added errata NOP
  4435  008E' 0E00               	movlw	0
  4436  0090' 6E00'              	movwf	?___xxtofl^0,c
  4437  0092' 0E00               	movlw	0
  4438  0094' 6E00'              	movwf	(?___xxtofl+1)^0,c
  4439  0096' 0E00               	movlw	0
  4440  0098' 6E00'              	movwf	(?___xxtofl+2)^0,c
  4441  009A' 0E00               	movlw	0
  4442  009C' 6E00'              	movwf	(?___xxtofl+3)^0,c
  4443  009E' EF00' F000'        	goto	l1151
  4444  00A2'                    l4765:
  4445  00A2' FFFF               	dw	65535	; assembler added errata NOP
  4446  00A4' 0E96               	movlw	150
  4447  00A6' 6E00'              	movwf	___xxtofl@exp^0,c
  4448  00A8' EF00' F000'        	goto	l4769
  4449  00AC'                    l4767:
  4450  00AC' FFFF               	dw	65535	; assembler added errata NOP
  4451  00AE' 2A00'              	incf	___xxtofl@exp^0,f,c
  4452  00B0' 90D8               	bcf	status,0,c
  4453  00B2' 3200'              	rrcf	(___xxtofl@arg+3)^0,f,c
  4454  00B4' 3200'              	rrcf	(___xxtofl@arg+2)^0,f,c
  4455  00B6' 3200'              	rrcf	(___xxtofl@arg+1)^0,f,c
  4456  00B8' 3200'              	rrcf	___xxtofl@arg^0,f,c
  4457  00BA'                    l4769:
  4458  00BA' FFFF               	dw	65535	; assembler added errata NOP
  4459  00BC' 0E00               	movlw	0
  4460  00BE' 1400'              	andwf	___xxtofl@arg^0,w,c
  4461  00C0' 6E00'              	movwf	??___xxtofl^0,c
  4462  00C2' 0E00               	movlw	0
  4463  00C4' 1400'              	andwf	(___xxtofl@arg+1)^0,w,c
  4464  00C6' 6E00'              	movwf	(??___xxtofl+1)^0,c
  4465  00C8' 0E00               	movlw	0
  4466  00CA' 1400'              	andwf	(___xxtofl@arg+2)^0,w,c
  4467  00CC' 6E00'              	movwf	(??___xxtofl+2)^0,c
  4468  00CE' 0EFE               	movlw	254
  4469  00D0' 1400'              	andwf	(___xxtofl@arg+3)^0,w,c
  4470  00D2' 6E00'              	movwf	(??___xxtofl+3)^0,c
  4471  00D4' 5000'              	movf	??___xxtofl^0,w,c
  4472  00D6' 1000'              	iorwf	(??___xxtofl+1)^0,w,c
  4473  00D8' 1000'              	iorwf	(??___xxtofl+2)^0,w,c
  4474  00DA' 1000'              	iorwf	(??___xxtofl+3)^0,w,c
  4475  00DC' A4D8               	btfss	status,2,c
  4476  00DE' EF00' F000'        	goto	u5391
  4477  00E2' EF00' F000'        	goto	u5390
  4478  00E6'                    u5391:
  4479  00E6' FFFF               	dw	65535	; assembler added errata NOP
  4480  00E8' EF00' F000'        	goto	l4767
  4481  00EC'                    u5390:
  4482  00EC' FFFF               	dw	65535	; assembler added errata NOP
  4483  00EE' EF00' F000'        	goto	l1155
  4484  00F2'                    l4771:
  4485  00F2' FFFF               	dw	65535	; assembler added errata NOP
  4486  00F4' 2A00'              	incf	___xxtofl@exp^0,f,c
  4487  00F6' 0E01               	movlw	1
  4488  00F8' 2600'              	addwf	___xxtofl@arg^0,f,c
  4489  00FA' 0E00               	movlw	0
  4490  00FC' 2200'              	addwfc	(___xxtofl@arg+1)^0,f,c
  4491  00FE' 2200'              	addwfc	(___xxtofl@arg+2)^0,f,c
  4492  0100' 2200'              	addwfc	(___xxtofl@arg+3)^0,f,c
  4493  0102' 90D8               	bcf	status,0,c
  4494  0104' 3200'              	rrcf	(___xxtofl@arg+3)^0,f,c
  4495  0106' 3200'              	rrcf	(___xxtofl@arg+2)^0,f,c
  4496  0108' 3200'              	rrcf	(___xxtofl@arg+1)^0,f,c
  4497  010A' 3200'              	rrcf	___xxtofl@arg^0,f,c
  4498  010C'                    l1155:
  4499  010C' FFFF               	dw	65535	; assembler added errata NOP
  4500  010E' 0E00               	movlw	0
  4501  0110' 1400'              	andwf	___xxtofl@arg^0,w,c
  4502  0112' 6E00'              	movwf	??___xxtofl^0,c
  4503  0114' 0E00               	movlw	0
  4504  0116' 1400'              	andwf	(___xxtofl@arg+1)^0,w,c
  4505  0118' 6E00'              	movwf	(??___xxtofl+1)^0,c
  4506  011A' 0E00               	movlw	0
  4507  011C' 1400'              	andwf	(___xxtofl@arg+2)^0,w,c
  4508  011E' 6E00'              	movwf	(??___xxtofl+2)^0,c
  4509  0120' 0EFF               	movlw	255
  4510  0122' 1400'              	andwf	(___xxtofl@arg+3)^0,w,c
  4511  0124' 6E00'              	movwf	(??___xxtofl+3)^0,c
  4512  0126' 5000'              	movf	??___xxtofl^0,w,c
  4513  0128' 1000'              	iorwf	(??___xxtofl+1)^0,w,c
  4514  012A' 1000'              	iorwf	(??___xxtofl+2)^0,w,c
  4515  012C' 1000'              	iorwf	(??___xxtofl+3)^0,w,c
  4516  012E' A4D8               	btfss	status,2,c
  4517  0130' EF00' F000'        	goto	u5401
  4518  0134' EF00' F000'        	goto	u5400
  4519  0138'                    u5401:
  4520  0138' FFFF               	dw	65535	; assembler added errata NOP
  4521  013A' EF00' F000'        	goto	l4771
  4522  013E'                    u5400:
  4523  013E' FFFF               	dw	65535	; assembler added errata NOP
  4524  0140' EF00' F000'        	goto	l4779
  4525  0144'                    l4777:
  4526  0144' FFFF               	dw	65535	; assembler added errata NOP
  4527  0146' 0600'              	decf	___xxtofl@exp^0,f,c
  4528  0148' 90D8               	bcf	status,0,c
  4529  014A' 3600'              	rlcf	___xxtofl@arg^0,f,c
  4530  014C' 3600'              	rlcf	(___xxtofl@arg+1)^0,f,c
  4531  014E' 3600'              	rlcf	(___xxtofl@arg+2)^0,f,c
  4532  0150' 3600'              	rlcf	(___xxtofl@arg+3)^0,f,c
  4533  0152'                    l4779:
  4534  0152' FFFF               	dw	65535	; assembler added errata NOP
  4535  0154' BE00'              	btfsc	(___xxtofl@arg+2)^0,7,c
  4536  0156' EF00' F000'        	goto	u5411
  4537  015A' EF00' F000'        	goto	u5410
  4538  015E'                    u5411:
  4539  015E' FFFF               	dw	65535	; assembler added errata NOP
  4540  0160' EF00' F000'        	goto	l1162
  4541  0164'                    u5410:
  4542  0164' FFFF               	dw	65535	; assembler added errata NOP
  4543  0166' 0E02               	movlw	2
  4544  0168' 6000'              	cpfslt	___xxtofl@exp^0,c
  4545  016A' EF00' F000'        	goto	u5421
  4546  016E' EF00' F000'        	goto	u5420
  4547  0172'                    u5421:
  4548  0172' FFFF               	dw	65535	; assembler added errata NOP
  4549  0174' EF00' F000'        	goto	l4777
  4550  0178'                    u5420:
  4551  0178'                    l1162:
  4552  0178' FFFF               	dw	65535	; assembler added errata NOP
  4553  017A' B000'              	btfsc	___xxtofl@exp^0,0,c
  4554  017C' EF00' F000'        	goto	u5431
  4555  0180' EF00' F000'        	goto	u5430
  4556  0184'                    u5431:
  4557  0184' FFFF               	dw	65535	; assembler added errata NOP
  4558  0186' EF00' F000'        	goto	l4785
  4559  018A'                    u5430:
  4560  018A' FFFF               	dw	65535	; assembler added errata NOP
  4561  018C' 9E00'              	bcf	(___xxtofl@arg+2)^0,7,c
  4562  018E'                    l4785:
  4563  018E' FFFF               	dw	65535	; assembler added errata NOP
  4564  0190' 90D8               	bcf	status,0,c
  4565  0192' 3200'              	rrcf	___xxtofl@exp^0,f,c
  4566  0194' C012' F00D'        	movff	___xxtofl@exp,??___xxtofl
  4567  0198' 6A00'              	clrf	(??___xxtofl+1)^0,c
  4568  019A' 6A00'              	clrf	(??___xxtofl+2)^0,c
  4569  019C' 6A00'              	clrf	(??___xxtofl+3)^0,c
  4570  019E' C00D' F010'        	movff	??___xxtofl,??___xxtofl+3
  4571  01A2' 6A00'              	clrf	(??___xxtofl+2)^0,c
  4572  01A4' 6A00'              	clrf	(??___xxtofl+1)^0,c
  4573  01A6' 6A00'              	clrf	??___xxtofl^0,c
  4574  01A8' 5000'              	movf	??___xxtofl^0,w,c
  4575  01AA' 1200'              	iorwf	___xxtofl@arg^0,f,c
  4576  01AC' 5000'              	movf	(??___xxtofl+1)^0,w,c
  4577  01AE' 1200'              	iorwf	(___xxtofl@arg+1)^0,f,c
  4578  01B0' 5000'              	movf	(??___xxtofl+2)^0,w,c
  4579  01B2' 1200'              	iorwf	(___xxtofl@arg+2)^0,f,c
  4580  01B4' 5000'              	movf	(??___xxtofl+3)^0,w,c
  4581  01B6' 1200'              	iorwf	(___xxtofl@arg+3)^0,f,c
  4582  01B8' 5000'              	movf	___xxtofl@sign^0,w,c
  4583  01BA' B4D8               	btfsc	status,2,c
  4584  01BC' EF00' F000'        	goto	u5441
  4585  01C0' EF00' F000'        	goto	u5440
  4586  01C4'                    u5441:
  4587  01C4' FFFF               	dw	65535	; assembler added errata NOP
  4588  01C6' EF00' F000'        	goto	l4795
  4589  01CA'                    u5440:
  4590  01CA' FFFF               	dw	65535	; assembler added errata NOP
  4591  01CC' BE00'              	btfsc	(___xxtofl@val+3)^0,7,c
  4592  01CE' EF00' F000'        	goto	u5450
  4593  01D2' EF00' F000'        	goto	u5451
  4594  01D6'                    u5451:
  4595  01D6' FFFF               	dw	65535	; assembler added errata NOP
  4596  01D8' EF00' F000'        	goto	l4795
  4597  01DC'                    u5450:
  4598  01DC' FFFF               	dw	65535	; assembler added errata NOP
  4599  01DE' 8E00'              	bsf	(___xxtofl@arg+3)^0,7,c
  4600  01E0'                    l4795:
  4601  01E0' FFFF               	dw	65535	; assembler added errata NOP
  4602  01E2' C013' F009'        	movff	___xxtofl@arg,?___xxtofl
  4603  01E6' C014' F00A'        	movff	___xxtofl@arg+1,?___xxtofl+1
  4604  01EA' C015' F00B'        	movff	___xxtofl@arg+2,?___xxtofl+2
  4605  01EE' C016' F00C'        	movff	___xxtofl@arg+3,?___xxtofl+3
  4606  01F2'                    l1151:
  4607  01F2' FFFF               	dw	65535	; assembler added errata NOP
  4608  01F4' 0012               	return		;funcret
  4609  01F6' FFFF               	dw	65535	; errata NOP
  4610  01F8'                    __end_of___xxtofl:
  4611                           	callstack 0
  4612                           
  4613 ;; *************** function ___fldiv *****************
  4614 ;; Defined at:
  4615 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  b               4   23[COMRAM] unsigned char 
  4618 ;;  a               4   27[COMRAM] unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  grs             4   42[COMRAM] unsigned long 
  4621 ;;  rem             4   35[COMRAM] unsigned long 
  4622 ;;  new_exp         2   40[COMRAM] short 
  4623 ;;  aexp            1   47[COMRAM] unsigned char 
  4624 ;;  bexp            1   46[COMRAM] unsigned char 
  4625 ;;  sign            1   39[COMRAM] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  4   23[COMRAM] unsigned char 
  4628 ;; Registers used:
  4629 ;;		wreg, status,2, status,0
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4635 ;;      Params:         8       0       0       0       0       0       0
  4636 ;;      Locals:        13       0       0       0       0       0       0
  4637 ;;      Temps:          4       0       0       0       0       0       0
  4638 ;;      Totals:        25       0       0       0       0       0       0
  4639 ;;Total ram usage:       25 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; Hardware stack levels required when called: 2
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_pick_and_place
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text12
  4650  0000'                    __ptext12:
  4651                           	callstack 0
  4652  0000'                    ___fldiv:
  4653                           	callstack 0
  4654  0000' FFFF               	dw	65535	; assembler added errata NOP
  4655  0002' 5000'              	movf	(___fldiv@b+3)^0,w,c
  4656  0004' 0B80               	andlw	128
  4657  0006' 6E00'              	movwf	___fldiv@sign^0,c
  4658  0008' 5000'              	movf	(___fldiv@b+3)^0,w,c
  4659  000A' 2400'              	addwf	(___fldiv@b+3)^0,w,c
  4660  000C' 6E00'              	movwf	___fldiv@bexp^0,c
  4661  000E' AE00'              	btfss	(___fldiv@b+2)^0,7,c
  4662  0010' EF00' F000'        	goto	u5081
  4663  0014' EF00' F000'        	goto	u5080
  4664  0018'                    u5081:
  4665  0018' FFFF               	dw	65535	; assembler added errata NOP
  4666  001A' EF00' F000'        	goto	l4599
  4667  001E'                    u5080:
  4668  001E' FFFF               	dw	65535	; assembler added errata NOP
  4669  0020' 8000'              	bsf	___fldiv@bexp^0,0,c
  4670  0022'                    l4599:
  4671  0022' FFFF               	dw	65535	; assembler added errata NOP
  4672  0024' 5000'              	movf	___fldiv@bexp^0,w,c
  4673  0026' B4D8               	btfsc	status,2,c
  4674  0028' EF00' F000'        	goto	u5091
  4675  002C' EF00' F000'        	goto	u5090
  4676  0030'                    u5091:
  4677  0030' FFFF               	dw	65535	; assembler added errata NOP
  4678  0032' EF00' F000'        	goto	l4609
  4679  0036'                    u5090:
  4680  0036' FFFF               	dw	65535	; assembler added errata NOP
  4681  0038' 2800'              	incf	___fldiv@bexp^0,w,c
  4682  003A' A4D8               	btfss	status,2,c
  4683  003C' EF00' F000'        	goto	u5101
  4684  0040' EF00' F000'        	goto	u5100
  4685  0044'                    u5101:
  4686  0044' FFFF               	dw	65535	; assembler added errata NOP
  4687  0046' EF00' F000'        	goto	l4605
  4688  004A'                    u5100:
  4689  004A' FFFF               	dw	65535	; assembler added errata NOP
  4690  004C' 0E00               	movlw	0
  4691  004E' 6E00'              	movwf	___fldiv@b^0,c
  4692  0050' 0E00               	movlw	0
  4693  0052' 6E00'              	movwf	(___fldiv@b+1)^0,c
  4694  0054' 0E00               	movlw	0
  4695  0056' 6E00'              	movwf	(___fldiv@b+2)^0,c
  4696  0058' 0E00               	movlw	0
  4697  005A' 6E00'              	movwf	(___fldiv@b+3)^0,c
  4698  005C'                    l4605:
  4699  005C' FFFF               	dw	65535	; assembler added errata NOP
  4700  005E' 8E00'              	bsf	(___fldiv@b+2)^0,7,c
  4701  0060' 0E00               	movlw	0
  4702  0062' 6E00'              	movwf	(___fldiv@b+3)^0,c
  4703  0064' EF00' F000'        	goto	l4611
  4704  0068'                    l4609:
  4705  0068' FFFF               	dw	65535	; assembler added errata NOP
  4706  006A' 0E00               	movlw	0
  4707  006C' 6E00'              	movwf	___fldiv@b^0,c
  4708  006E' 0E00               	movlw	0
  4709  0070' 6E00'              	movwf	(___fldiv@b+1)^0,c
  4710  0072' 0E00               	movlw	0
  4711  0074' 6E00'              	movwf	(___fldiv@b+2)^0,c
  4712  0076' 0E00               	movlw	0
  4713  0078' 6E00'              	movwf	(___fldiv@b+3)^0,c
  4714  007A'                    l4611:
  4715  007A' FFFF               	dw	65535	; assembler added errata NOP
  4716  007C' 5000'              	movf	(___fldiv@a+3)^0,w,c
  4717  007E' 0B80               	andlw	128
  4718  0080' 1A00'              	xorwf	___fldiv@sign^0,f,c
  4719  0082' 5000'              	movf	(___fldiv@a+3)^0,w,c
  4720  0084' 2400'              	addwf	(___fldiv@a+3)^0,w,c
  4721  0086' 6E00'              	movwf	___fldiv@aexp^0,c
  4722  0088' AE00'              	btfss	(___fldiv@a+2)^0,7,c
  4723  008A' EF00' F000'        	goto	u5111
  4724  008E' EF00' F000'        	goto	u5110
  4725  0092'                    u5111:
  4726  0092' FFFF               	dw	65535	; assembler added errata NOP
  4727  0094' EF00' F000'        	goto	l4619
  4728  0098'                    u5110:
  4729  0098' FFFF               	dw	65535	; assembler added errata NOP
  4730  009A' 8000'              	bsf	___fldiv@aexp^0,0,c
  4731  009C'                    l4619:
  4732  009C' FFFF               	dw	65535	; assembler added errata NOP
  4733  009E' 5000'              	movf	___fldiv@aexp^0,w,c
  4734  00A0' B4D8               	btfsc	status,2,c
  4735  00A2' EF00' F000'        	goto	u5121
  4736  00A6' EF00' F000'        	goto	u5120
  4737  00AA'                    u5121:
  4738  00AA' FFFF               	dw	65535	; assembler added errata NOP
  4739  00AC' EF00' F000'        	goto	l4629
  4740  00B0'                    u5120:
  4741  00B0' FFFF               	dw	65535	; assembler added errata NOP
  4742  00B2' 2800'              	incf	___fldiv@aexp^0,w,c
  4743  00B4' A4D8               	btfss	status,2,c
  4744  00B6' EF00' F000'        	goto	u5131
  4745  00BA' EF00' F000'        	goto	u5130
  4746  00BE'                    u5131:
  4747  00BE' FFFF               	dw	65535	; assembler added errata NOP
  4748  00C0' EF00' F000'        	goto	l4625
  4749  00C4'                    u5130:
  4750  00C4' FFFF               	dw	65535	; assembler added errata NOP
  4751  00C6' 0E00               	movlw	0
  4752  00C8' 6E00'              	movwf	___fldiv@a^0,c
  4753  00CA' 0E00               	movlw	0
  4754  00CC' 6E00'              	movwf	(___fldiv@a+1)^0,c
  4755  00CE' 0E00               	movlw	0
  4756  00D0' 6E00'              	movwf	(___fldiv@a+2)^0,c
  4757  00D2' 0E00               	movlw	0
  4758  00D4' 6E00'              	movwf	(___fldiv@a+3)^0,c
  4759  00D6'                    l4625:
  4760  00D6' FFFF               	dw	65535	; assembler added errata NOP
  4761  00D8' 8E00'              	bsf	(___fldiv@a+2)^0,7,c
  4762  00DA' 0E00               	movlw	0
  4763  00DC' 6E00'              	movwf	(___fldiv@a+3)^0,c
  4764  00DE' EF00' F000'        	goto	l4631
  4765  00E2'                    l4629:
  4766  00E2' FFFF               	dw	65535	; assembler added errata NOP
  4767  00E4' 0E00               	movlw	0
  4768  00E6' 6E00'              	movwf	___fldiv@a^0,c
  4769  00E8' 0E00               	movlw	0
  4770  00EA' 6E00'              	movwf	(___fldiv@a+1)^0,c
  4771  00EC' 0E00               	movlw	0
  4772  00EE' 6E00'              	movwf	(___fldiv@a+2)^0,c
  4773  00F0' 0E00               	movlw	0
  4774  00F2' 6E00'              	movwf	(___fldiv@a+3)^0,c
  4775  00F4'                    l4631:
  4776  00F4' FFFF               	dw	65535	; assembler added errata NOP
  4777  00F6' 5000'              	movf	___fldiv@a^0,w,c
  4778  00F8' 1000'              	iorwf	(___fldiv@a+1)^0,w,c
  4779  00FA' 1000'              	iorwf	(___fldiv@a+2)^0,w,c
  4780  00FC' 1000'              	iorwf	(___fldiv@a+3)^0,w,c
  4781  00FE' A4D8               	btfss	status,2,c
  4782  0100' EF00' F000'        	goto	u5141
  4783  0104' EF00' F000'        	goto	u5140
  4784  0108'                    u5141:
  4785  0108' FFFF               	dw	65535	; assembler added errata NOP
  4786  010A' EF00' F000'        	goto	l4643
  4787  010E'                    u5140:
  4788  010E' FFFF               	dw	65535	; assembler added errata NOP
  4789  0110' 0E00               	movlw	0
  4790  0112' 6E00'              	movwf	___fldiv@b^0,c
  4791  0114' 0E00               	movlw	0
  4792  0116' 6E00'              	movwf	(___fldiv@b+1)^0,c
  4793  0118' 0E00               	movlw	0
  4794  011A' 6E00'              	movwf	(___fldiv@b+2)^0,c
  4795  011C' 0E00               	movlw	0
  4796  011E' 6E00'              	movwf	(___fldiv@b+3)^0,c
  4797  0120' 0E80               	movlw	128
  4798  0122' 1200'              	iorwf	(___fldiv@b+2)^0,f,c
  4799  0124' 0E7F               	movlw	127
  4800  0126' 1200'              	iorwf	(___fldiv@b+3)^0,f,c
  4801  0128'                    l4637:
  4802  0128' FFFF               	dw	65535	; assembler added errata NOP
  4803  012A' 5000'              	movf	___fldiv@sign^0,w,c
  4804  012C' 1200'              	iorwf	(___fldiv@b+3)^0,f,c
  4805  012E' C017' F017'        	movff	___fldiv@b,?___fldiv
  4806  0132' C018' F018'        	movff	___fldiv@b+1,?___fldiv+1
  4807  0136' C019' F019'        	movff	___fldiv@b+2,?___fldiv+2
  4808  013A' C01A' F01A'        	movff	___fldiv@b+3,?___fldiv+3
  4809  013E' EF00' F000'        	goto	l1075
  4810  0142'                    l4643:
  4811  0142' FFFF               	dw	65535	; assembler added errata NOP
  4812  0144' 5000'              	movf	___fldiv@bexp^0,w,c
  4813  0146' A4D8               	btfss	status,2,c
  4814  0148' EF00' F000'        	goto	u5151
  4815  014C' EF00' F000'        	goto	u5150
  4816  0150'                    u5151:
  4817  0150' FFFF               	dw	65535	; assembler added errata NOP
  4818  0152' EF00' F000'        	goto	l4651
  4819  0156'                    u5150:
  4820  0156' FFFF               	dw	65535	; assembler added errata NOP
  4821  0158' 0E00               	movlw	0
  4822  015A' 6E00'              	movwf	?___fldiv^0,c
  4823  015C' 0E00               	movlw	0
  4824  015E' 6E00'              	movwf	(?___fldiv+1)^0,c
  4825  0160' 0E00               	movlw	0
  4826  0162' 6E00'              	movwf	(?___fldiv+2)^0,c
  4827  0164' 0E00               	movlw	0
  4828  0166' 6E00'              	movwf	(?___fldiv+3)^0,c
  4829  0168' EF00' F000'        	goto	l1075
  4830  016C'                    l4651:
  4831  016C' FFFF               	dw	65535	; assembler added errata NOP
  4832  016E' 5000'              	movf	___fldiv@aexp^0,w,c
  4833  0170' C02E' F01F'        	movff	___fldiv@bexp,??___fldiv
  4834  0174' 6A00'              	clrf	(??___fldiv+1)^0,c
  4835  0176' 5E00'              	subwf	??___fldiv^0,f,c
  4836  0178' 0E00               	movlw	0
  4837  017A' 5A00'              	subwfb	(??___fldiv+1)^0,f,c
  4838  017C' 0E7F               	movlw	127
  4839  017E' 2400'              	addwf	??___fldiv^0,w,c
  4840  0180' 6E00'              	movwf	___fldiv@new_exp^0,c
  4841  0182' 0E00               	movlw	0
  4842  0184' 2000'              	addwfc	(??___fldiv+1)^0,w,c
  4843  0186' 6E00'              	movwf	(___fldiv@new_exp+1)^0,c
  4844  0188' C017' F023'        	movff	___fldiv@b,___fldiv@rem
  4845  018C' C018' F024'        	movff	___fldiv@b+1,___fldiv@rem+1
  4846  0190' C019' F025'        	movff	___fldiv@b+2,___fldiv@rem+2
  4847  0194' C01A' F026'        	movff	___fldiv@b+3,___fldiv@rem+3
  4848  0198' 0E00               	movlw	0
  4849  019A' 6E00'              	movwf	___fldiv@b^0,c
  4850  019C' 0E00               	movlw	0
  4851  019E' 6E00'              	movwf	(___fldiv@b+1)^0,c
  4852  01A0' 0E00               	movlw	0
  4853  01A2' 6E00'              	movwf	(___fldiv@b+2)^0,c
  4854  01A4' 0E00               	movlw	0
  4855  01A6' 6E00'              	movwf	(___fldiv@b+3)^0,c
  4856  01A8' 0E00               	movlw	0
  4857  01AA' 6E00'              	movwf	___fldiv@grs^0,c
  4858  01AC' 0E00               	movlw	0
  4859  01AE' 6E00'              	movwf	(___fldiv@grs+1)^0,c
  4860  01B0' 0E00               	movlw	0
  4861  01B2' 6E00'              	movwf	(___fldiv@grs+2)^0,c
  4862  01B4' 0E00               	movlw	0
  4863  01B6' 6E00'              	movwf	(___fldiv@grs+3)^0,c
  4864  01B8' 0E00               	movlw	0
  4865  01BA' 6E00'              	movwf	___fldiv@aexp^0,c
  4866  01BC' EF00' F000'        	goto	l1077
  4867  01C0'                    l4661:
  4868  01C0' FFFF               	dw	65535	; assembler added errata NOP
  4869  01C2' 5000'              	movf	___fldiv@aexp^0,w,c
  4870  01C4' B4D8               	btfsc	status,2,c
  4871  01C6' EF00' F000'        	goto	u5161
  4872  01CA' EF00' F000'        	goto	u5160
  4873  01CE'                    u5161:
  4874  01CE' FFFF               	dw	65535	; assembler added errata NOP
  4875  01D0' EF00' F000'        	goto	l4669
  4876  01D4'                    u5160:
  4877  01D4' FFFF               	dw	65535	; assembler added errata NOP
  4878  01D6' 90D8               	bcf	status,0,c
  4879  01D8' 3600'              	rlcf	___fldiv@rem^0,f,c
  4880  01DA' 3600'              	rlcf	(___fldiv@rem+1)^0,f,c
  4881  01DC' 3600'              	rlcf	(___fldiv@rem+2)^0,f,c
  4882  01DE' 3600'              	rlcf	(___fldiv@rem+3)^0,f,c
  4883  01E0' 90D8               	bcf	status,0,c
  4884  01E2' 3600'              	rlcf	___fldiv@b^0,f,c
  4885  01E4' 3600'              	rlcf	(___fldiv@b+1)^0,f,c
  4886  01E6' 3600'              	rlcf	(___fldiv@b+2)^0,f,c
  4887  01E8' 3600'              	rlcf	(___fldiv@b+3)^0,f,c
  4888  01EA' AE00'              	btfss	(___fldiv@grs+3)^0,7,c
  4889  01EC' EF00' F000'        	goto	u5171
  4890  01F0' EF00' F000'        	goto	u5170
  4891  01F4'                    u5171:
  4892  01F4' FFFF               	dw	65535	; assembler added errata NOP
  4893  01F6' EF00' F000'        	goto	l1080
  4894  01FA'                    u5170:
  4895  01FA' FFFF               	dw	65535	; assembler added errata NOP
  4896  01FC' 8000'              	bsf	___fldiv@b^0,0,c
  4897  01FE'                    l1080:
  4898  01FE' FFFF               	dw	65535	; assembler added errata NOP
  4899  0200' 90D8               	bcf	status,0,c
  4900  0202' 3600'              	rlcf	___fldiv@grs^0,f,c
  4901  0204' 3600'              	rlcf	(___fldiv@grs+1)^0,f,c
  4902  0206' 3600'              	rlcf	(___fldiv@grs+2)^0,f,c
  4903  0208' 3600'              	rlcf	(___fldiv@grs+3)^0,f,c
  4904  020A'                    l4669:
  4905  020A' FFFF               	dw	65535	; assembler added errata NOP
  4906  020C' 5000'              	movf	___fldiv@a^0,w,c
  4907  020E' 5C00'              	subwf	___fldiv@rem^0,w,c
  4908  0210' 5000'              	movf	(___fldiv@a+1)^0,w,c
  4909  0212' 5800'              	subwfb	(___fldiv@rem+1)^0,w,c
  4910  0214' 5000'              	movf	(___fldiv@a+2)^0,w,c
  4911  0216' 5800'              	subwfb	(___fldiv@rem+2)^0,w,c
  4912  0218' 5000'              	movf	(___fldiv@a+3)^0,w,c
  4913  021A' 5800'              	subwfb	(___fldiv@rem+3)^0,w,c
  4914  021C' A0D8               	btfss	status,0,c
  4915  021E' EF00' F000'        	goto	u5181
  4916  0222' EF00' F000'        	goto	u5180
  4917  0226'                    u5181:
  4918  0226' FFFF               	dw	65535	; assembler added errata NOP
  4919  0228' EF00' F000'        	goto	l4675
  4920  022C'                    u5180:
  4921  022C' FFFF               	dw	65535	; assembler added errata NOP
  4922  022E' 8C00'              	bsf	(___fldiv@grs+3)^0,6,c
  4923  0230' 5000'              	movf	___fldiv@a^0,w,c
  4924  0232' 5E00'              	subwf	___fldiv@rem^0,f,c
  4925  0234' 5000'              	movf	(___fldiv@a+1)^0,w,c
  4926  0236' 5A00'              	subwfb	(___fldiv@rem+1)^0,f,c
  4927  0238' 5000'              	movf	(___fldiv@a+2)^0,w,c
  4928  023A' 5A00'              	subwfb	(___fldiv@rem+2)^0,f,c
  4929  023C' 5000'              	movf	(___fldiv@a+3)^0,w,c
  4930  023E' 5A00'              	subwfb	(___fldiv@rem+3)^0,f,c
  4931  0240'                    l4675:
  4932  0240' FFFF               	dw	65535	; assembler added errata NOP
  4933  0242' 2A00'              	incf	___fldiv@aexp^0,f,c
  4934  0244'                    l1077:
  4935  0244' FFFF               	dw	65535	; assembler added errata NOP
  4936  0246' 0E19               	movlw	25
  4937  0248' 6400'              	cpfsgt	___fldiv@aexp^0,c
  4938  024A' EF00' F000'        	goto	u5191
  4939  024E' EF00' F000'        	goto	u5190
  4940  0252'                    u5191:
  4941  0252' FFFF               	dw	65535	; assembler added errata NOP
  4942  0254' EF00' F000'        	goto	l4661
  4943  0258'                    u5190:
  4944  0258' FFFF               	dw	65535	; assembler added errata NOP
  4945  025A' 5000'              	movf	___fldiv@rem^0,w,c
  4946  025C' 1000'              	iorwf	(___fldiv@rem+1)^0,w,c
  4947  025E' 1000'              	iorwf	(___fldiv@rem+2)^0,w,c
  4948  0260' 1000'              	iorwf	(___fldiv@rem+3)^0,w,c
  4949  0262' B4D8               	btfsc	status,2,c
  4950  0264' EF00' F000'        	goto	u5201
  4951  0268' EF00' F000'        	goto	u5200
  4952  026C'                    u5201:
  4953  026C' FFFF               	dw	65535	; assembler added errata NOP
  4954  026E' EF00' F000'        	goto	l4687
  4955  0272'                    u5200:
  4956  0272' FFFF               	dw	65535	; assembler added errata NOP
  4957  0274' 8000'              	bsf	___fldiv@grs^0,0,c
  4958  0276' EF00' F000'        	goto	l4687
  4959  027A'                    l4681:
  4960  027A' FFFF               	dw	65535	; assembler added errata NOP
  4961  027C' 90D8               	bcf	status,0,c
  4962  027E' 3600'              	rlcf	___fldiv@b^0,f,c
  4963  0280' 3600'              	rlcf	(___fldiv@b+1)^0,f,c
  4964  0282' 3600'              	rlcf	(___fldiv@b+2)^0,f,c
  4965  0284' 3600'              	rlcf	(___fldiv@b+3)^0,f,c
  4966  0286' AE00'              	btfss	(___fldiv@grs+3)^0,7,c
  4967  0288' EF00' F000'        	goto	u5211
  4968  028C' EF00' F000'        	goto	u5210
  4969  0290'                    u5211:
  4970  0290' FFFF               	dw	65535	; assembler added errata NOP
  4971  0292' EF00' F000'        	goto	l1086
  4972  0296'                    u5210:
  4973  0296' FFFF               	dw	65535	; assembler added errata NOP
  4974  0298' 8000'              	bsf	___fldiv@b^0,0,c
  4975  029A'                    l1086:
  4976  029A' FFFF               	dw	65535	; assembler added errata NOP
  4977  029C' 90D8               	bcf	status,0,c
  4978  029E' 3600'              	rlcf	___fldiv@grs^0,f,c
  4979  02A0' 3600'              	rlcf	(___fldiv@grs+1)^0,f,c
  4980  02A2' 3600'              	rlcf	(___fldiv@grs+2)^0,f,c
  4981  02A4' 3600'              	rlcf	(___fldiv@grs+3)^0,f,c
  4982  02A6' 0600'              	decf	___fldiv@new_exp^0,f,c
  4983  02A8' A0D8               	btfss	status,0,c
  4984  02AA' 0600'              	decf	(___fldiv@new_exp+1)^0,f,c
  4985  02AC'                    l4687:
  4986  02AC' FFFF               	dw	65535	; assembler added errata NOP
  4987  02AE' AE00'              	btfss	(___fldiv@b+2)^0,7,c
  4988  02B0' EF00' F000'        	goto	u5221
  4989  02B4' EF00' F000'        	goto	u5220
  4990  02B8'                    u5221:
  4991  02B8' FFFF               	dw	65535	; assembler added errata NOP
  4992  02BA' EF00' F000'        	goto	l4681
  4993  02BE'                    u5220:
  4994  02BE' FFFF               	dw	65535	; assembler added errata NOP
  4995  02C0' 0E00               	movlw	0
  4996  02C2' 6E00'              	movwf	___fldiv@aexp^0,c
  4997  02C4' AE00'              	btfss	(___fldiv@grs+3)^0,7,c
  4998  02C6' EF00' F000'        	goto	u5231
  4999  02CA' EF00' F000'        	goto	u5230
  5000  02CE'                    u5231:
  5001  02CE' FFFF               	dw	65535	; assembler added errata NOP
  5002  02D0' EF00' F000'        	goto	l1088
  5003  02D4'                    u5230:
  5004  02D4' FFFF               	dw	65535	; assembler added errata NOP
  5005  02D6' 0EFF               	movlw	255
  5006  02D8' 1400'              	andwf	___fldiv@grs^0,w,c
  5007  02DA' 6E00'              	movwf	??___fldiv^0,c
  5008  02DC' 0EFF               	movlw	255
  5009  02DE' 1400'              	andwf	(___fldiv@grs+1)^0,w,c
  5010  02E0' 6E00'              	movwf	(??___fldiv+1)^0,c
  5011  02E2' 0EFF               	movlw	255
  5012  02E4' 1400'              	andwf	(___fldiv@grs+2)^0,w,c
  5013  02E6' 6E00'              	movwf	(??___fldiv+2)^0,c
  5014  02E8' 0E7F               	movlw	127
  5015  02EA' 1400'              	andwf	(___fldiv@grs+3)^0,w,c
  5016  02EC' 6E00'              	movwf	(??___fldiv+3)^0,c
  5017  02EE' 5000'              	movf	??___fldiv^0,w,c
  5018  02F0' 1000'              	iorwf	(??___fldiv+1)^0,w,c
  5019  02F2' 1000'              	iorwf	(??___fldiv+2)^0,w,c
  5020  02F4' 1000'              	iorwf	(??___fldiv+3)^0,w,c
  5021  02F6' B4D8               	btfsc	status,2,c
  5022  02F8' EF00' F000'        	goto	u5241
  5023  02FC' EF00' F000'        	goto	u5240
  5024  0300'                    u5241:
  5025  0300' FFFF               	dw	65535	; assembler added errata NOP
  5026  0302' EF00' F000'        	goto	l1089
  5027  0306'                    u5240:
  5028  0306' FFFF               	dw	65535	; assembler added errata NOP
  5029  0308'                    l4695:
  5030  0308' FFFF               	dw	65535	; assembler added errata NOP
  5031  030A' 0E01               	movlw	1
  5032  030C' 6E00'              	movwf	___fldiv@aexp^0,c
  5033  030E' EF00' F000'        	goto	l1088
  5034  0312'                    l1089:
  5035  0312' FFFF               	dw	65535	; assembler added errata NOP
  5036  0314' A000'              	btfss	___fldiv@b^0,0,c
  5037  0316' EF00' F000'        	goto	u5251
  5038  031A' EF00' F000'        	goto	u5250
  5039  031E'                    u5251:
  5040  031E' FFFF               	dw	65535	; assembler added errata NOP
  5041  0320' EF00' F000'        	goto	l1088
  5042  0324'                    u5250:
  5043  0324' FFFF               	dw	65535	; assembler added errata NOP
  5044  0326' EF00' F000'        	goto	l4695
  5045  032A'                    l1088:
  5046  032A' FFFF               	dw	65535	; assembler added errata NOP
  5047  032C' 5000'              	movf	___fldiv@aexp^0,w,c
  5048  032E' B4D8               	btfsc	status,2,c
  5049  0330' EF00' F000'        	goto	u5261
  5050  0334' EF00' F000'        	goto	u5260
  5051  0338'                    u5261:
  5052  0338' FFFF               	dw	65535	; assembler added errata NOP
  5053  033A' EF00' F000'        	goto	l4707
  5054  033E'                    u5260:
  5055  033E' FFFF               	dw	65535	; assembler added errata NOP
  5056  0340' 0E01               	movlw	1
  5057  0342' 2600'              	addwf	___fldiv@b^0,f,c
  5058  0344' 0E00               	movlw	0
  5059  0346' 2200'              	addwfc	(___fldiv@b+1)^0,f,c
  5060  0348' 2200'              	addwfc	(___fldiv@b+2)^0,f,c
  5061  034A' 2200'              	addwfc	(___fldiv@b+3)^0,f,c
  5062  034C' A000'              	btfss	(___fldiv@b+3)^0,0,c
  5063  034E' EF00' F000'        	goto	u5271
  5064  0352' EF00' F000'        	goto	u5270
  5065  0356'                    u5271:
  5066  0356' FFFF               	dw	65535	; assembler added errata NOP
  5067  0358' EF00' F000'        	goto	l4707
  5068  035C'                    u5270:
  5069  035C' FFFF               	dw	65535	; assembler added errata NOP
  5070  035E' C017' F01F'        	movff	___fldiv@b,??___fldiv
  5071  0362' C018' F020'        	movff	___fldiv@b+1,??___fldiv+1
  5072  0366' C019' F021'        	movff	___fldiv@b+2,??___fldiv+2
  5073  036A' C01A' F022'        	movff	___fldiv@b+3,??___fldiv+3
  5074  036E' 3400'              	rlcf	(??___fldiv+3)^0,w,c
  5075  0370' 3200'              	rrcf	(??___fldiv+3)^0,f,c
  5076  0372' 3200'              	rrcf	(??___fldiv+2)^0,f,c
  5077  0374' 3200'              	rrcf	(??___fldiv+1)^0,f,c
  5078  0376' 3200'              	rrcf	??___fldiv^0,f,c
  5079  0378' C01F' F017'        	movff	??___fldiv,___fldiv@b
  5080  037C' C020' F018'        	movff	??___fldiv+1,___fldiv@b+1
  5081  0380' C021' F019'        	movff	??___fldiv+2,___fldiv@b+2
  5082  0384' C022' F01A'        	movff	??___fldiv+3,___fldiv@b+3
  5083  0388' 4A00'              	infsnz	___fldiv@new_exp^0,f,c
  5084  038A' 2A00'              	incf	(___fldiv@new_exp+1)^0,f,c
  5085  038C'                    l4707:
  5086  038C' FFFF               	dw	65535	; assembler added errata NOP
  5087  038E' BE00'              	btfsc	(___fldiv@new_exp+1)^0,7,c
  5088  0390' EF00' F000'        	goto	u5281
  5089  0394' 5000'              	movf	(___fldiv@new_exp+1)^0,w,c
  5090  0396' E109               	bnz	u5280
  5091  0398' 2800'              	incf	___fldiv@new_exp^0,w,c
  5092  039A' A0D8               	btfss	status,0,c
  5093  039C' EF00' F000'        	goto	u5281
  5094  03A0' EF00' F000'        	goto	u5280
  5095  03A4'                    u5281:
  5096  03A4' FFFF               	dw	65535	; assembler added errata NOP
  5097  03A6' EF00' F000'        	goto	l4711
  5098  03AA'                    u5280:
  5099  03AA' FFFF               	dw	65535	; assembler added errata NOP
  5100  03AC' 0E00               	movlw	0
  5101  03AE' 6E00'              	movwf	(___fldiv@new_exp+1)^0,c
  5102  03B0' 6800'              	setf	___fldiv@new_exp^0,c
  5103  03B2' 0E00               	movlw	0
  5104  03B4' 6E00'              	movwf	___fldiv@b^0,c
  5105  03B6' 0E00               	movlw	0
  5106  03B8' 6E00'              	movwf	(___fldiv@b+1)^0,c
  5107  03BA' 0E00               	movlw	0
  5108  03BC' 6E00'              	movwf	(___fldiv@b+2)^0,c
  5109  03BE' 0E00               	movlw	0
  5110  03C0' 6E00'              	movwf	(___fldiv@b+3)^0,c
  5111  03C2'                    l4711:
  5112  03C2' FFFF               	dw	65535	; assembler added errata NOP
  5113  03C4' BE00'              	btfsc	(___fldiv@new_exp+1)^0,7,c
  5114  03C6' EF00' F000'        	goto	u5290
  5115  03CA' 5000'              	movf	(___fldiv@new_exp+1)^0,w,c
  5116  03CC' E106               	bnz	u5291
  5117  03CE' 0400'              	decf	___fldiv@new_exp^0,w,c
  5118  03D0' B0D8               	btfsc	status,0,c
  5119  03D2' EF00' F000'        	goto	u5291
  5120  03D6' EF00' F000'        	goto	u5290
  5121  03DA'                    u5291:
  5122  03DA' FFFF               	dw	65535	; assembler added errata NOP
  5123  03DC' EF00' F000'        	goto	l4715
  5124  03E0'                    u5290:
  5125  03E0' FFFF               	dw	65535	; assembler added errata NOP
  5126  03E2' 0E00               	movlw	0
  5127  03E4' 6E00'              	movwf	(___fldiv@new_exp+1)^0,c
  5128  03E6' 0E00               	movlw	0
  5129  03E8' 6E00'              	movwf	___fldiv@new_exp^0,c
  5130  03EA' 0E00               	movlw	0
  5131  03EC' 6E00'              	movwf	___fldiv@b^0,c
  5132  03EE' 0E00               	movlw	0
  5133  03F0' 6E00'              	movwf	(___fldiv@b+1)^0,c
  5134  03F2' 0E00               	movlw	0
  5135  03F4' 6E00'              	movwf	(___fldiv@b+2)^0,c
  5136  03F6' 0E00               	movlw	0
  5137  03F8' 6E00'              	movwf	(___fldiv@b+3)^0,c
  5138  03FA' 0E00               	movlw	0
  5139  03FC' 6E00'              	movwf	___fldiv@sign^0,c
  5140  03FE'                    l4715:
  5141  03FE' FFFF               	dw	65535	; assembler added errata NOP
  5142  0400' C028' F02E'        	movff	___fldiv@new_exp,___fldiv@bexp
  5143  0404' A000'              	btfss	___fldiv@bexp^0,0,c
  5144  0406' EF00' F000'        	goto	u5301
  5145  040A' EF00' F000'        	goto	u5300
  5146  040E'                    u5301:
  5147  040E' FFFF               	dw	65535	; assembler added errata NOP
  5148  0410' EF00' F000'        	goto	l4721
  5149  0414'                    u5300:
  5150  0414' FFFF               	dw	65535	; assembler added errata NOP
  5151  0416' 8E00'              	bsf	(___fldiv@b+2)^0,7,c
  5152  0418' EF00' F000'        	goto	l4723
  5153  041C'                    l4721:
  5154  041C' FFFF               	dw	65535	; assembler added errata NOP
  5155  041E' 9E00'              	bcf	(___fldiv@b+2)^0,7,c
  5156  0420'                    l4723:
  5157  0420' FFFF               	dw	65535	; assembler added errata NOP
  5158  0422' 90D8               	bcf	status,0,c
  5159  0424' 3000'              	rrcf	___fldiv@bexp^0,w,c
  5160  0426' 6E00'              	movwf	(___fldiv@b+3)^0,c
  5161  0428' EF00' F000'        	goto	l4637
  5162  042C'                    l1075:
  5163  042C' FFFF               	dw	65535	; assembler added errata NOP
  5164  042E' 0012               	return		;funcret
  5165  0430' FFFF               	dw	65535	; errata NOP
  5166  0432'                    __end_of___fldiv:
  5167                           	callstack 0
  5168                           
  5169 ;; *************** function _Z_axis *****************
  5170 ;; Defined at:
  5171 ;;		line 467 in file "main.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  direction       1    wreg     unsigned char 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  direction       1   17[COMRAM] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5185 ;;      Params:         0       0       0       0       0       0       0
  5186 ;;      Locals:         1       0       0       0       0       0       0
  5187 ;;      Temps:          2       0       0       0       0       0       0
  5188 ;;      Totals:         3       0       0       0       0       0       0
  5189 ;;Total ram usage:        3 bytes
  5190 ;; Hardware stack levels used: 1
  5191 ;; Hardware stack levels required when called: 3
  5192 ;; This function calls:
  5193 ;;		_ms_delay
  5194 ;; This function is called by:
  5195 ;;		_pick_and_place
  5196 ;;		_return_to_initial
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text13
  5201  0000'                    __ptext13:
  5202                           	callstack 0
  5203  0000'                    _Z_axis:
  5204                           	callstack 0
  5205  0000' FFFF               	dw	65535	; assembler added errata NOP
  5206                           
  5207                           ;incstack = 0
  5208                           ;Z_axis@direction stored from wreg
  5209  0002' 6E00'              	movwf	Z_axis@direction^0,c
  5210  0004'                    
  5211                           ;main.c: 468:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5212  0004' 0E02               	movlw	2
  5213  0006' 6E00'              	movwf	(??_Z_axis+1)^0,c
  5214  0008' 0EE8               	movlw	232
  5215  000A' 6E00'              	movwf	??_Z_axis^0,c
  5216  000C' 0E52               	movlw	82
  5217  000E'                    u6247:
  5218  000E' FFFF               	dw	65535	; errata NOP
  5219  0010' 2EE8               	decfsz	wreg,f,c
  5220  0012' D7FD               	bra	u6247
  5221  0014' 2E00'              	decfsz	??_Z_axis^0,f,c
  5222  0016' D7FB               	bra	u6247
  5223  0018' 2E00'              	decfsz	(??_Z_axis+1)^0,f,c
  5224  001A' D7F9               	bra	u6247
  5225  001C'                    
  5226                           ;main.c: 469:         if (direction == 0){
  5227  001C' 5000'              	movf	Z_axis@direction^0,w,c
  5228  001E' A4D8               	btfss	status,2,c
  5229  0020' EF00' F000'        	goto	u4911
  5230  0024' EF00' F000'        	goto	u4910
  5231  0028'                    u4911:
  5232  0028' FFFF               	dw	65535	; assembler added errata NOP
  5233  002A' EF00' F000'        	goto	l4479
  5234  002E'                    u4910:
  5235  002E' FFFF               	dw	65535	; assembler added errata NOP
  5236  0030'                    
  5237                           ;main.c: 470:             PORTD = 0b00000011;
  5238  0030' 0E03               	movlw	3
  5239  0032' 6E83               	movwf	131,c	;volatile
  5240  0034'                    
  5241                           ;main.c: 471:             ms_delay(10);
  5242  0034' 0E00               	movlw	0
  5243  0036' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5244  0038' 0E0A               	movlw	10
  5245  003A' 6E00'              	movwf	ms_delay@val^0,c
  5246  003C' EC00' F000'        	call	_ms_delay	;wreg free
  5247  0040'                    
  5248                           ;main.c: 472:             PORTD = 0b00000110;
  5249  0040' 0E06               	movlw	6
  5250  0042' 6E83               	movwf	131,c	;volatile
  5251  0044'                    
  5252                           ;main.c: 473:             ms_delay(10);
  5253  0044' 0E00               	movlw	0
  5254  0046' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5255  0048' 0E0A               	movlw	10
  5256  004A' 6E00'              	movwf	ms_delay@val^0,c
  5257  004C' EC00' F000'        	call	_ms_delay	;wreg free
  5258  0050'                    
  5259                           ;main.c: 474:             PORTD = 0b00001100;
  5260  0050' 0E0C               	movlw	12
  5261  0052' 6E83               	movwf	131,c	;volatile
  5262  0054'                    
  5263                           ;main.c: 475:             ms_delay(10);
  5264  0054' 0E00               	movlw	0
  5265  0056' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5266  0058' 0E0A               	movlw	10
  5267  005A' 6E00'              	movwf	ms_delay@val^0,c
  5268  005C' EC00' F000'        	call	_ms_delay	;wreg free
  5269  0060'                    
  5270                           ;main.c: 476:             PORTD = 0b00001001;
  5271  0060' 0E09               	movlw	9
  5272  0062' 6E83               	movwf	131,c	;volatile
  5273  0064'                    
  5274                           ;main.c: 477:             ms_delay(10);
  5275  0064' 0E00               	movlw	0
  5276  0066' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5277  0068' 0E0A               	movlw	10
  5278  006A' 6E00'              	movwf	ms_delay@val^0,c
  5279  006C' EC00' F000'        	call	_ms_delay	;wreg free
  5280  0070'                    
  5281                           ;main.c: 478:             PORTD = 0b00000011;
  5282  0070' 0E03               	movlw	3
  5283  0072' 6E83               	movwf	131,c	;volatile
  5284  0074'                    
  5285                           ;main.c: 479:             ms_delay(10);
  5286  0074' 0E00               	movlw	0
  5287  0076' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5288  0078' 0E0A               	movlw	10
  5289  007A' 6E00'              	movwf	ms_delay@val^0,c
  5290  007C' EC00' F000'        	call	_ms_delay	;wreg free
  5291  0080'                    
  5292                           ;main.c: 480:             Step_Z--;
  5293  0080' 0100               	movlb	0	; () banked
  5294  0082' 0700'              	decf	_Step_Z& (0+255),f,b
  5295  0084' A0D8               	btfss	status,0,c
  5296  0086' 0700'              	decf	(_Step_Z+1)& (0+255),f,b
  5297  0088'                    l4479:
  5298  0088' FFFF               	dw	65535	; assembler added errata NOP
  5299                           
  5300                           ;main.c: 482:         if (direction == 1){
  5301  008A' 0400'              	decf	Z_axis@direction^0,w,c
  5302  008C' A4D8               	btfss	status,2,c
  5303  008E' EF00' F000'        	goto	u4921
  5304  0092' EF00' F000'        	goto	u4920
  5305  0096'                    u4921:
  5306  0096' FFFF               	dw	65535	; assembler added errata NOP
  5307  0098' EF00' F000'        	goto	l302
  5308  009C'                    u4920:
  5309  009C' FFFF               	dw	65535	; assembler added errata NOP
  5310  009E'                    
  5311                           ;main.c: 483:             PORTD = 0b00001001;
  5312  009E' 0E09               	movlw	9
  5313  00A0' 6E83               	movwf	131,c	;volatile
  5314  00A2'                    
  5315                           ;main.c: 484:             ms_delay(10);
  5316  00A2' 0E00               	movlw	0
  5317  00A4' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5318  00A6' 0E0A               	movlw	10
  5319  00A8' 6E00'              	movwf	ms_delay@val^0,c
  5320  00AA' EC00' F000'        	call	_ms_delay	;wreg free
  5321  00AE'                    
  5322                           ;main.c: 485:             PORTD = 0b00001100;
  5323  00AE' 0E0C               	movlw	12
  5324  00B0' 6E83               	movwf	131,c	;volatile
  5325                           
  5326                           ;main.c: 486:             ms_delay(10);
  5327  00B2' 0E00               	movlw	0
  5328  00B4' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5329  00B6' 0E0A               	movlw	10
  5330  00B8' 6E00'              	movwf	ms_delay@val^0,c
  5331  00BA' EC00' F000'        	call	_ms_delay	;wreg free
  5332  00BE'                    
  5333                           ;main.c: 487:             PORTD = 0b00000110;
  5334  00BE' 0E06               	movlw	6
  5335  00C0' 6E83               	movwf	131,c	;volatile
  5336  00C2'                    
  5337                           ;main.c: 488:             ms_delay(10);
  5338  00C2' 0E00               	movlw	0
  5339  00C4' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5340  00C6' 0E0A               	movlw	10
  5341  00C8' 6E00'              	movwf	ms_delay@val^0,c
  5342  00CA' EC00' F000'        	call	_ms_delay	;wreg free
  5343                           
  5344                           ;main.c: 489:             PORTD = 0b00000011;
  5345  00CE' 0E03               	movlw	3
  5346  00D0' 6E83               	movwf	131,c	;volatile
  5347  00D2'                    
  5348                           ;main.c: 490:             ms_delay(10);
  5349  00D2' 0E00               	movlw	0
  5350  00D4' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5351  00D6' 0E0A               	movlw	10
  5352  00D8' 6E00'              	movwf	ms_delay@val^0,c
  5353  00DA' EC00' F000'        	call	_ms_delay	;wreg free
  5354  00DE'                    
  5355                           ;main.c: 491:             PORTD = 0b00001001;
  5356  00DE' 0E09               	movlw	9
  5357  00E0' 6E83               	movwf	131,c	;volatile
  5358                           
  5359                           ;main.c: 492:             ms_delay(10);
  5360  00E2' 0E00               	movlw	0
  5361  00E4' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5362  00E6' 0E0A               	movlw	10
  5363  00E8' 6E00'              	movwf	ms_delay@val^0,c
  5364  00EA' EC00' F000'        	call	_ms_delay	;wreg free
  5365  00EE'                    
  5366                           ;main.c: 493:             Step_Z++;
  5367  00EE' 0100               	movlb	0	; () banked
  5368  00F0' 4B00'              	infsnz	_Step_Z& (0+255),f,b
  5369  00F2' 2B00'              	incf	(_Step_Z+1)& (0+255),f,b
  5370  00F4'                    l302:
  5371  00F4' FFFF               	dw	65535	; assembler added errata NOP
  5372  00F6' 0012               	return		;funcret
  5373  00F8' FFFF               	dw	65535	; errata NOP
  5374  00FA'                    __end_of_Z_axis:
  5375                           	callstack 0
  5376                           
  5377 ;; *************** function _Y_axis *****************
  5378 ;; Defined at:
  5379 ;;		line 437 in file "main.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  direction       1    wreg     unsigned char 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  direction       1   15[COMRAM] unsigned char 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5393 ;;      Params:         0       0       0       0       0       0       0
  5394 ;;      Locals:         1       0       0       0       0       0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0
  5396 ;;      Totals:         1       0       0       0       0       0       0
  5397 ;;Total ram usage:        1 bytes
  5398 ;; Hardware stack levels used: 1
  5399 ;; Hardware stack levels required when called: 3
  5400 ;; This function calls:
  5401 ;;		_ms_delay
  5402 ;; This function is called by:
  5403 ;;		_pick_and_place
  5404 ;;		_return_to_initial
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text14
  5409  0000'                    __ptext14:
  5410                           	callstack 0
  5411  0000'                    _Y_axis:
  5412                           	callstack 0
  5413  0000' FFFF               	dw	65535	; assembler added errata NOP
  5414                           
  5415                           ;incstack = 0
  5416                           ;Y_axis@direction stored from wreg
  5417  0002' 6E00'              	movwf	Y_axis@direction^0,c
  5418  0004'                    
  5419                           ;main.c: 438:         if (direction == 0){
  5420  0004' 5000'              	movf	Y_axis@direction^0,w,c
  5421  0006' A4D8               	btfss	status,2,c
  5422  0008' EF00' F000'        	goto	u4891
  5423  000C' EF00' F000'        	goto	u4890
  5424  0010'                    u4891:
  5425  0010' FFFF               	dw	65535	; assembler added errata NOP
  5426  0012' EF00' F000'        	goto	l4435
  5427  0016'                    u4890:
  5428  0016' FFFF               	dw	65535	; assembler added errata NOP
  5429  0018'                    
  5430                           ;main.c: 439:             PORTB = 0b00110000;
  5431  0018' 0E30               	movlw	48
  5432  001A' 6E81               	movwf	129,c	;volatile
  5433  001C'                    
  5434                           ;main.c: 440:             ms_delay(1);
  5435  001C' 0E00               	movlw	0
  5436  001E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5437  0020' 0E01               	movlw	1
  5438  0022' 6E00'              	movwf	ms_delay@val^0,c
  5439  0024' EC00' F000'        	call	_ms_delay	;wreg free
  5440  0028'                    
  5441                           ;main.c: 441:             PORTB = 0b01100000;
  5442  0028' 0E60               	movlw	96
  5443  002A' 6E81               	movwf	129,c	;volatile
  5444  002C'                    
  5445                           ;main.c: 442:             ms_delay(1);
  5446  002C' 0E00               	movlw	0
  5447  002E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5448  0030' 0E01               	movlw	1
  5449  0032' 6E00'              	movwf	ms_delay@val^0,c
  5450  0034' EC00' F000'        	call	_ms_delay	;wreg free
  5451  0038'                    
  5452                           ;main.c: 443:             PORTB = 0b11000000;
  5453  0038' 0EC0               	movlw	192
  5454  003A' 6E81               	movwf	129,c	;volatile
  5455  003C'                    
  5456                           ;main.c: 444:             ms_delay(1);
  5457  003C' 0E00               	movlw	0
  5458  003E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5459  0040' 0E01               	movlw	1
  5460  0042' 6E00'              	movwf	ms_delay@val^0,c
  5461  0044' EC00' F000'        	call	_ms_delay	;wreg free
  5462  0048'                    
  5463                           ;main.c: 445:             PORTB = 0b10010000;
  5464  0048' 0E90               	movlw	144
  5465  004A' 6E81               	movwf	129,c	;volatile
  5466  004C'                    
  5467                           ;main.c: 446:             ms_delay(1);
  5468  004C' 0E00               	movlw	0
  5469  004E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5470  0050' 0E01               	movlw	1
  5471  0052' 6E00'              	movwf	ms_delay@val^0,c
  5472  0054' EC00' F000'        	call	_ms_delay	;wreg free
  5473  0058'                    
  5474                           ;main.c: 447:             PORTB = 0b00110000;
  5475  0058' 0E30               	movlw	48
  5476  005A' 6E81               	movwf	129,c	;volatile
  5477  005C'                    
  5478                           ;main.c: 448:             ms_delay(1);
  5479  005C' 0E00               	movlw	0
  5480  005E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5481  0060' 0E01               	movlw	1
  5482  0062' 6E00'              	movwf	ms_delay@val^0,c
  5483  0064' EC00' F000'        	call	_ms_delay	;wreg free
  5484  0068'                    
  5485                           ;main.c: 449:             Step_Y--;
  5486  0068' 0100               	movlb	0	; () banked
  5487  006A' 0700'              	decf	_Step_Y& (0+255),f,b
  5488  006C' A0D8               	btfss	status,0,c
  5489  006E' 0700'              	decf	(_Step_Y+1)& (0+255),f,b
  5490  0070'                    l4435:
  5491  0070' FFFF               	dw	65535	; assembler added errata NOP
  5492                           
  5493                           ;main.c: 451:         if (direction == 1){
  5494  0072' 0400'              	decf	Y_axis@direction^0,w,c
  5495  0074' A4D8               	btfss	status,2,c
  5496  0076' EF00' F000'        	goto	u4901
  5497  007A' EF00' F000'        	goto	u4900
  5498  007E'                    u4901:
  5499  007E' FFFF               	dw	65535	; assembler added errata NOP
  5500  0080' EF00' F000'        	goto	l297
  5501  0084'                    u4900:
  5502  0084' FFFF               	dw	65535	; assembler added errata NOP
  5503  0086'                    
  5504                           ;main.c: 452:             PORTB = 0b10010000;
  5505  0086' 0E90               	movlw	144
  5506  0088' 6E81               	movwf	129,c	;volatile
  5507  008A'                    
  5508                           ;main.c: 453:             ms_delay(1);
  5509  008A' 0E00               	movlw	0
  5510  008C' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5511  008E' 0E01               	movlw	1
  5512  0090' 6E00'              	movwf	ms_delay@val^0,c
  5513  0092' EC00' F000'        	call	_ms_delay	;wreg free
  5514  0096'                    
  5515                           ;main.c: 454:             PORTB = 0b11000000;
  5516  0096' 0EC0               	movlw	192
  5517  0098' 6E81               	movwf	129,c	;volatile
  5518                           
  5519                           ;main.c: 455:             ms_delay(1);
  5520  009A' 0E00               	movlw	0
  5521  009C' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5522  009E' 0E01               	movlw	1
  5523  00A0' 6E00'              	movwf	ms_delay@val^0,c
  5524  00A2' EC00' F000'        	call	_ms_delay	;wreg free
  5525  00A6'                    
  5526                           ;main.c: 456:             PORTB = 0b01100000;
  5527  00A6' 0E60               	movlw	96
  5528  00A8' 6E81               	movwf	129,c	;volatile
  5529  00AA'                    
  5530                           ;main.c: 457:             ms_delay(1);
  5531  00AA' 0E00               	movlw	0
  5532  00AC' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5533  00AE' 0E01               	movlw	1
  5534  00B0' 6E00'              	movwf	ms_delay@val^0,c
  5535  00B2' EC00' F000'        	call	_ms_delay	;wreg free
  5536                           
  5537                           ;main.c: 458:             PORTB = 0b00110000;
  5538  00B6' 0E30               	movlw	48
  5539  00B8' 6E81               	movwf	129,c	;volatile
  5540  00BA'                    
  5541                           ;main.c: 459:             ms_delay(1);
  5542  00BA' 0E00               	movlw	0
  5543  00BC' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5544  00BE' 0E01               	movlw	1
  5545  00C0' 6E00'              	movwf	ms_delay@val^0,c
  5546  00C2' EC00' F000'        	call	_ms_delay	;wreg free
  5547  00C6'                    
  5548                           ;main.c: 460:             PORTB = 0b10010000;
  5549  00C6' 0E90               	movlw	144
  5550  00C8' 6E81               	movwf	129,c	;volatile
  5551                           
  5552                           ;main.c: 461:             ms_delay(1);
  5553  00CA' 0E00               	movlw	0
  5554  00CC' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5555  00CE' 0E01               	movlw	1
  5556  00D0' 6E00'              	movwf	ms_delay@val^0,c
  5557  00D2' EC00' F000'        	call	_ms_delay	;wreg free
  5558  00D6'                    
  5559                           ;main.c: 462:             Step_Y++;
  5560  00D6' 0100               	movlb	0	; () banked
  5561  00D8' 4B00'              	infsnz	_Step_Y& (0+255),f,b
  5562  00DA' 2B00'              	incf	(_Step_Y+1)& (0+255),f,b
  5563  00DC'                    l297:
  5564  00DC' FFFF               	dw	65535	; assembler added errata NOP
  5565  00DE' 0012               	return		;funcret
  5566  00E0' FFFF               	dw	65535	; errata NOP
  5567  00E2'                    __end_of_Y_axis:
  5568                           	callstack 0
  5569                           
  5570 ;; *************** function _X_axis *****************
  5571 ;; Defined at:
  5572 ;;		line 407 in file "main.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  direction       1    wreg     unsigned char 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  direction       1   15[COMRAM] unsigned char 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      void 
  5579 ;; Registers used:
  5580 ;;		wreg, status,2, status,0, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5586 ;;      Params:         0       0       0       0       0       0       0
  5587 ;;      Locals:         1       0       0       0       0       0       0
  5588 ;;      Temps:          0       0       0       0       0       0       0
  5589 ;;      Totals:         1       0       0       0       0       0       0
  5590 ;;Total ram usage:        1 bytes
  5591 ;; Hardware stack levels used: 1
  5592 ;; Hardware stack levels required when called: 3
  5593 ;; This function calls:
  5594 ;;		_ms_delay
  5595 ;; This function is called by:
  5596 ;;		_pick_and_place
  5597 ;;		_return_to_initial
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text15
  5602  0000'                    __ptext15:
  5603                           	callstack 0
  5604  0000'                    _X_axis:
  5605                           	callstack 0
  5606  0000' FFFF               	dw	65535	; assembler added errata NOP
  5607                           
  5608                           ;incstack = 0
  5609                           ;X_axis@direction stored from wreg
  5610  0002' 6E00'              	movwf	X_axis@direction^0,c
  5611  0004'                    
  5612                           ;main.c: 408:         if (direction == 0){
  5613  0004' 5000'              	movf	X_axis@direction^0,w,c
  5614  0006' A4D8               	btfss	status,2,c
  5615  0008' EF00' F000'        	goto	u4871
  5616  000C' EF00' F000'        	goto	u4870
  5617  0010'                    u4871:
  5618  0010' FFFF               	dw	65535	; assembler added errata NOP
  5619  0012' EF00' F000'        	goto	l4393
  5620  0016'                    u4870:
  5621  0016' FFFF               	dw	65535	; assembler added errata NOP
  5622  0018'                    
  5623                           ;main.c: 409:             PORTA = 0b00000011;
  5624  0018' 0E03               	movlw	3
  5625  001A' 6E80               	movwf	128,c	;volatile
  5626  001C'                    
  5627                           ;main.c: 410:             ms_delay(1);
  5628  001C' 0E00               	movlw	0
  5629  001E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5630  0020' 0E01               	movlw	1
  5631  0022' 6E00'              	movwf	ms_delay@val^0,c
  5632  0024' EC00' F000'        	call	_ms_delay	;wreg free
  5633  0028'                    
  5634                           ;main.c: 411:             PORTA = 0b00000110;
  5635  0028' 0E06               	movlw	6
  5636  002A' 6E80               	movwf	128,c	;volatile
  5637  002C'                    
  5638                           ;main.c: 412:             ms_delay(1);
  5639  002C' 0E00               	movlw	0
  5640  002E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5641  0030' 0E01               	movlw	1
  5642  0032' 6E00'              	movwf	ms_delay@val^0,c
  5643  0034' EC00' F000'        	call	_ms_delay	;wreg free
  5644  0038'                    
  5645                           ;main.c: 413:             PORTA = 0b00001100;
  5646  0038' 0E0C               	movlw	12
  5647  003A' 6E80               	movwf	128,c	;volatile
  5648  003C'                    
  5649                           ;main.c: 414:             ms_delay(1);
  5650  003C' 0E00               	movlw	0
  5651  003E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5652  0040' 0E01               	movlw	1
  5653  0042' 6E00'              	movwf	ms_delay@val^0,c
  5654  0044' EC00' F000'        	call	_ms_delay	;wreg free
  5655  0048'                    
  5656                           ;main.c: 415:             PORTA = 0b00001001;
  5657  0048' 0E09               	movlw	9
  5658  004A' 6E80               	movwf	128,c	;volatile
  5659  004C'                    
  5660                           ;main.c: 416:             ms_delay(1);
  5661  004C' 0E00               	movlw	0
  5662  004E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5663  0050' 0E01               	movlw	1
  5664  0052' 6E00'              	movwf	ms_delay@val^0,c
  5665  0054' EC00' F000'        	call	_ms_delay	;wreg free
  5666  0058'                    
  5667                           ;main.c: 417:             PORTA = 0b00000011;
  5668  0058' 0E03               	movlw	3
  5669  005A' 6E80               	movwf	128,c	;volatile
  5670  005C'                    
  5671                           ;main.c: 418:             ms_delay(1);
  5672  005C' 0E00               	movlw	0
  5673  005E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5674  0060' 0E01               	movlw	1
  5675  0062' 6E00'              	movwf	ms_delay@val^0,c
  5676  0064' EC00' F000'        	call	_ms_delay	;wreg free
  5677  0068'                    
  5678                           ;main.c: 419:             Step_X--;
  5679  0068' 0100               	movlb	0	; () banked
  5680  006A' 0700'              	decf	_Step_X& (0+255),f,b
  5681  006C' A0D8               	btfss	status,0,c
  5682  006E' 0700'              	decf	(_Step_X+1)& (0+255),f,b
  5683  0070'                    l4393:
  5684  0070' FFFF               	dw	65535	; assembler added errata NOP
  5685                           
  5686                           ;main.c: 421:         if (direction == 1){
  5687  0072' 0400'              	decf	X_axis@direction^0,w,c
  5688  0074' A4D8               	btfss	status,2,c
  5689  0076' EF00' F000'        	goto	u4881
  5690  007A' EF00' F000'        	goto	u4880
  5691  007E'                    u4881:
  5692  007E' FFFF               	dw	65535	; assembler added errata NOP
  5693  0080' EF00' F000'        	goto	l292
  5694  0084'                    u4880:
  5695  0084' FFFF               	dw	65535	; assembler added errata NOP
  5696  0086'                    
  5697                           ;main.c: 422:             PORTA = 0b00001001;
  5698  0086' 0E09               	movlw	9
  5699  0088' 6E80               	movwf	128,c	;volatile
  5700  008A'                    
  5701                           ;main.c: 423:             ms_delay(1);
  5702  008A' 0E00               	movlw	0
  5703  008C' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5704  008E' 0E01               	movlw	1
  5705  0090' 6E00'              	movwf	ms_delay@val^0,c
  5706  0092' EC00' F000'        	call	_ms_delay	;wreg free
  5707  0096'                    
  5708                           ;main.c: 424:             PORTA = 0b00001100;
  5709  0096' 0E0C               	movlw	12
  5710  0098' 6E80               	movwf	128,c	;volatile
  5711                           
  5712                           ;main.c: 425:             ms_delay(1);
  5713  009A' 0E00               	movlw	0
  5714  009C' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5715  009E' 0E01               	movlw	1
  5716  00A0' 6E00'              	movwf	ms_delay@val^0,c
  5717  00A2' EC00' F000'        	call	_ms_delay	;wreg free
  5718  00A6'                    
  5719                           ;main.c: 426:             PORTA = 0b00000110;
  5720  00A6' 0E06               	movlw	6
  5721  00A8' 6E80               	movwf	128,c	;volatile
  5722  00AA'                    
  5723                           ;main.c: 427:             ms_delay(1);
  5724  00AA' 0E00               	movlw	0
  5725  00AC' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5726  00AE' 0E01               	movlw	1
  5727  00B0' 6E00'              	movwf	ms_delay@val^0,c
  5728  00B2' EC00' F000'        	call	_ms_delay	;wreg free
  5729                           
  5730                           ;main.c: 428:             PORTA = 0b00000011;
  5731  00B6' 0E03               	movlw	3
  5732  00B8' 6E80               	movwf	128,c	;volatile
  5733  00BA'                    
  5734                           ;main.c: 429:             ms_delay(1);
  5735  00BA' 0E00               	movlw	0
  5736  00BC' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5737  00BE' 0E01               	movlw	1
  5738  00C0' 6E00'              	movwf	ms_delay@val^0,c
  5739  00C2' EC00' F000'        	call	_ms_delay	;wreg free
  5740  00C6'                    
  5741                           ;main.c: 430:             PORTA = 0b00001001;
  5742  00C6' 0E09               	movlw	9
  5743  00C8' 6E80               	movwf	128,c	;volatile
  5744                           
  5745                           ;main.c: 431:             ms_delay(1);
  5746  00CA' 0E00               	movlw	0
  5747  00CC' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5748  00CE' 0E01               	movlw	1
  5749  00D0' 6E00'              	movwf	ms_delay@val^0,c
  5750  00D2' EC00' F000'        	call	_ms_delay	;wreg free
  5751  00D6'                    
  5752                           ;main.c: 432:             Step_X++;
  5753  00D6' 0100               	movlb	0	; () banked
  5754  00D8' 4B00'              	infsnz	_Step_X& (0+255),f,b
  5755  00DA' 2B00'              	incf	(_Step_X+1)& (0+255),f,b
  5756  00DC'                    l292:
  5757  00DC' FFFF               	dw	65535	; assembler added errata NOP
  5758  00DE' 0012               	return		;funcret
  5759  00E0' FFFF               	dw	65535	; errata NOP
  5760  00E2'                    __end_of_X_axis:
  5761                           	callstack 0
  5762                           
  5763 ;; *************** function _Twister *****************
  5764 ;; Defined at:
  5765 ;;		line 498 in file "main.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  direction       1    wreg     unsigned char 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  direction       1   15[COMRAM] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg, status,2, status,0, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5779 ;;      Params:         0       0       0       0       0       0       0
  5780 ;;      Locals:         1       0       0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0       0       0
  5782 ;;      Totals:         1       0       0       0       0       0       0
  5783 ;;Total ram usage:        1 bytes
  5784 ;; Hardware stack levels used: 1
  5785 ;; Hardware stack levels required when called: 3
  5786 ;; This function calls:
  5787 ;;		_ms_delay
  5788 ;; This function is called by:
  5789 ;;		_pick_and_place
  5790 ;;		_return_to_initial
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text16
  5795  0000'                    __ptext16:
  5796                           	callstack 0
  5797  0000'                    _Twister:
  5798                           	callstack 0
  5799  0000' FFFF               	dw	65535	; assembler added errata NOP
  5800                           
  5801                           ;incstack = 0
  5802                           ;Twister@direction stored from wreg
  5803  0002' 6E00'              	movwf	Twister@direction^0,c
  5804  0004'                    
  5805                           ;main.c: 499:         if (direction == 0){
  5806  0004' 5000'              	movf	Twister@direction^0,w,c
  5807  0006' A4D8               	btfss	status,2,c
  5808  0008' EF00' F000'        	goto	u4931
  5809  000C' EF00' F000'        	goto	u4930
  5810  0010'                    u4931:
  5811  0010' FFFF               	dw	65535	; assembler added errata NOP
  5812  0012' EF00' F000'        	goto	l305
  5813  0016'                    u4930:
  5814  0016' FFFF               	dw	65535	; assembler added errata NOP
  5815  0018'                    
  5816                           ;main.c: 500:             PORTD = 0b00110000;
  5817  0018' 0E30               	movlw	48
  5818  001A' 6E83               	movwf	131,c	;volatile
  5819  001C'                    
  5820                           ;main.c: 501:             ms_delay(1);
  5821  001C' 0E00               	movlw	0
  5822  001E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5823  0020' 0E01               	movlw	1
  5824  0022' 6E00'              	movwf	ms_delay@val^0,c
  5825  0024' EC00' F000'        	call	_ms_delay	;wreg free
  5826  0028'                    
  5827                           ;main.c: 502:             PORTD = 0b11000000;
  5828  0028' 0EC0               	movlw	192
  5829  002A' 6E83               	movwf	131,c	;volatile
  5830  002C'                    
  5831                           ;main.c: 503:             ms_delay(1);
  5832  002C' 0E00               	movlw	0
  5833  002E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5834  0030' 0E01               	movlw	1
  5835  0032' 6E00'              	movwf	ms_delay@val^0,c
  5836  0034' EC00' F000'        	call	_ms_delay	;wreg free
  5837  0038'                    
  5838                           ;main.c: 504:             PORTD = 0b10010000;
  5839  0038' 0E90               	movlw	144
  5840  003A' 6E83               	movwf	131,c	;volatile
  5841  003C'                    
  5842                           ;main.c: 505:             ms_delay(1);
  5843  003C' 0E00               	movlw	0
  5844  003E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5845  0040' 0E01               	movlw	1
  5846  0042' 6E00'              	movwf	ms_delay@val^0,c
  5847  0044' EC00' F000'        	call	_ms_delay	;wreg free
  5848  0048'                    
  5849                           ;main.c: 506:             PORTD = 0b00110000;
  5850  0048' 0E30               	movlw	48
  5851  004A' 6E83               	movwf	131,c	;volatile
  5852  004C'                    
  5853                           ;main.c: 507:             ms_delay(1);
  5854  004C' 0E00               	movlw	0
  5855  004E' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5856  0050' 0E01               	movlw	1
  5857  0052' 6E00'              	movwf	ms_delay@val^0,c
  5858  0054' EC00' F000'        	call	_ms_delay	;wreg free
  5859  0058'                    
  5860                           ;main.c: 508:             Step_Angle--;
  5861  0058' 0100               	movlb	0	; () banked
  5862  005A' 0700'              	decf	_Step_Angle& (0+255),f,b
  5863  005C' A0D8               	btfss	status,0,c
  5864  005E' 0700'              	decf	(_Step_Angle+1)& (0+255),f,b
  5865  0060'                    l305:
  5866  0060' FFFF               	dw	65535	; assembler added errata NOP
  5867                           
  5868                           ;main.c: 510:         if (direction == 1){
  5869  0062' 0400'              	decf	Twister@direction^0,w,c
  5870  0064' A4D8               	btfss	status,2,c
  5871  0066' EF00' F000'        	goto	u4941
  5872  006A' EF00' F000'        	goto	u4940
  5873  006E'                    u4941:
  5874  006E' FFFF               	dw	65535	; assembler added errata NOP
  5875  0070' EF00' F000'        	goto	l307
  5876  0074'                    u4940:
  5877  0074' FFFF               	dw	65535	; assembler added errata NOP
  5878  0076'                    
  5879                           ;main.c: 511:             PORTD = 0b10010000;
  5880  0076' 0E90               	movlw	144
  5881  0078' 6E83               	movwf	131,c	;volatile
  5882  007A'                    
  5883                           ;main.c: 512:             ms_delay(1);
  5884  007A' 0E00               	movlw	0
  5885  007C' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5886  007E' 0E01               	movlw	1
  5887  0080' 6E00'              	movwf	ms_delay@val^0,c
  5888  0082' EC00' F000'        	call	_ms_delay	;wreg free
  5889  0086'                    
  5890                           ;main.c: 513:             PORTD = 0b01100000;
  5891  0086' 0E60               	movlw	96
  5892  0088' 6E83               	movwf	131,c	;volatile
  5893                           
  5894                           ;main.c: 514:             ms_delay(1);
  5895  008A' 0E00               	movlw	0
  5896  008C' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5897  008E' 0E01               	movlw	1
  5898  0090' 6E00'              	movwf	ms_delay@val^0,c
  5899  0092' EC00' F000'        	call	_ms_delay	;wreg free
  5900  0096'                    
  5901                           ;main.c: 515:             PORTD = 0b00110000;
  5902  0096' 0E30               	movlw	48
  5903  0098' 6E83               	movwf	131,c	;volatile
  5904  009A'                    
  5905                           ;main.c: 516:             ms_delay(1);
  5906  009A' 0E00               	movlw	0
  5907  009C' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5908  009E' 0E01               	movlw	1
  5909  00A0' 6E00'              	movwf	ms_delay@val^0,c
  5910  00A2' EC00' F000'        	call	_ms_delay	;wreg free
  5911                           
  5912                           ;main.c: 517:             PORTD = 0b10010000;
  5913  00A6' 0E90               	movlw	144
  5914  00A8' 6E83               	movwf	131,c	;volatile
  5915  00AA'                    
  5916                           ;main.c: 518:             ms_delay(1);
  5917  00AA' 0E00               	movlw	0
  5918  00AC' 6E00'              	movwf	(ms_delay@val+1)^0,c
  5919  00AE' 0E01               	movlw	1
  5920  00B0' 6E00'              	movwf	ms_delay@val^0,c
  5921  00B2' EC00' F000'        	call	_ms_delay	;wreg free
  5922  00B6'                    
  5923                           ;main.c: 519:             Step_Angle++;
  5924  00B6' 0100               	movlb	0	; () banked
  5925  00B8' 4B00'              	infsnz	_Step_Angle& (0+255),f,b
  5926  00BA' 2B00'              	incf	(_Step_Angle+1)& (0+255),f,b
  5927  00BC'                    l307:
  5928  00BC' FFFF               	dw	65535	; assembler added errata NOP
  5929  00BE' 0012               	return		;funcret
  5930  00C0' FFFF               	dw	65535	; errata NOP
  5931  00C2'                    __end_of_Twister:
  5932                           	callstack 0
  5933                           
  5934 ;; *************** function _ms_delay *****************
  5935 ;; Defined at:
  5936 ;;		line 525 in file "main.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  val             2    9[COMRAM] unsigned int 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  j               2   13[COMRAM] unsigned int 
  5941 ;;  i               2   11[COMRAM] unsigned int 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      void 
  5944 ;; Registers used:
  5945 ;;		wreg, status,2, status,0
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5951 ;;      Params:         2       0       0       0       0       0       0
  5952 ;;      Locals:         4       0       0       0       0       0       0
  5953 ;;      Temps:          0       0       0       0       0       0       0
  5954 ;;      Totals:         6       0       0       0       0       0       0
  5955 ;;Total ram usage:        6 bytes
  5956 ;; Hardware stack levels used: 1
  5957 ;; Hardware stack levels required when called: 2
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_X_axis
  5962 ;;		_Y_axis
  5963 ;;		_Z_axis
  5964 ;;		_Twister
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           	psect	text17
  5969  0000'                    __ptext17:
  5970                           	callstack 0
  5971  0000'                    _ms_delay:
  5972                           	callstack 0
  5973  0000' FFFF               	dw	65535	; assembler added errata NOP
  5974  0002'                    
  5975                           ;main.c: 525: void ms_delay(unsigned int val);main.c: 526: {;main.c: 527:     unsigned i
      +                          nt i,j;;main.c: 528:     for(i=0;i<val;i++);
  5976  0002' 0E00               	movlw	0
  5977  0004' 6E00'              	movwf	(ms_delay@i+1)^0,c
  5978  0006' 0E00               	movlw	0
  5979  0008' 6E00'              	movwf	ms_delay@i^0,c
  5980  000A' EF00' F000'        	goto	l4307
  5981  000E'                    l4305:
  5982  000E' FFFF               	dw	65535	; assembler added errata NOP
  5983  0010' 4A00'              	infsnz	ms_delay@i^0,f,c
  5984  0012' 2A00'              	incf	(ms_delay@i+1)^0,f,c
  5985  0014'                    l4307:
  5986  0014' FFFF               	dw	65535	; assembler added errata NOP
  5987  0016' 5000'              	movf	ms_delay@val^0,w,c
  5988  0018' 5C00'              	subwf	ms_delay@i^0,w,c
  5989  001A' 5000'              	movf	(ms_delay@val+1)^0,w,c
  5990  001C' 5800'              	subwfb	(ms_delay@i+1)^0,w,c
  5991  001E' A0D8               	btfss	status,0,c
  5992  0020' EF00' F000'        	goto	u4771
  5993  0024' EF00' F000'        	goto	u4770
  5994  0028'                    u4771:
  5995  0028' FFFF               	dw	65535	; assembler added errata NOP
  5996  002A' EF00' F000'        	goto	l4305
  5997  002E'                    u4770:
  5998  002E' FFFF               	dw	65535	; assembler added errata NOP
  5999  0030'                    
  6000                           ;main.c: 529:     for(j=0;j<1650;j++);
  6001  0030' 0E00               	movlw	0
  6002  0032' 6E00'              	movwf	(ms_delay@j+1)^0,c
  6003  0034' 0E00               	movlw	0
  6004  0036' 6E00'              	movwf	ms_delay@j^0,c
  6005  0038'                    l4315:
  6006  0038' FFFF               	dw	65535	; assembler added errata NOP
  6007  003A' 4A00'              	infsnz	ms_delay@j^0,f,c
  6008  003C' 2A00'              	incf	(ms_delay@j+1)^0,f,c
  6009  003E' 0E72               	movlw	114
  6010  0040' 5C00'              	subwf	ms_delay@j^0,w,c
  6011  0042' 0E06               	movlw	6
  6012  0044' 5800'              	subwfb	(ms_delay@j+1)^0,w,c
  6013  0046' A0D8               	btfss	status,0,c
  6014  0048' EF00' F000'        	goto	u4781
  6015  004C' EF00' F000'        	goto	u4780
  6016  0050'                    u4781:
  6017  0050' FFFF               	dw	65535	; assembler added errata NOP
  6018  0052' EF00' F000'        	goto	l4315
  6019  0056'                    u4780:
  6020  0056' FFFF               	dw	65535	; assembler added errata NOP
  6021  0058' 0012               	return		;funcret
  6022  005A' FFFF               	dw	65535	; errata NOP
  6023  005C'                    __end_of_ms_delay:
  6024                           	callstack 0
  6025                           
  6026 ;; *************** function _Tweezer *****************
  6027 ;; Defined at:
  6028 ;;		line 542 in file "main.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  action          1    wreg     unsigned char 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  action          1    9[COMRAM] unsigned char 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6042 ;;      Params:         0       0       0       0       0       0       0
  6043 ;;      Locals:         1       0       0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0
  6045 ;;      Totals:         1       0       0       0       0       0       0
  6046 ;;Total ram usage:        1 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 2
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_pick_and_place
  6053 ;;		_return_to_initial
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text18
  6058  0000'                    __ptext18:
  6059                           	callstack 0
  6060  0000'                    _Tweezer:
  6061                           	callstack 0
  6062  0000' FFFF               	dw	65535	; assembler added errata NOP
  6063                           
  6064                           ;incstack = 0
  6065                           ;Tweezer@action stored from wreg
  6066  0002' 6E00'              	movwf	Tweezer@action^0,c
  6067  0004'                    
  6068                           ;main.c: 543:     if(action == 1 && !stop){
  6069  0004' 0400'              	decf	Tweezer@action^0,w,c
  6070  0006' A4D8               	btfss	status,2,c
  6071  0008' EF00' F000'        	goto	u4951
  6072  000C' EF00' F000'        	goto	u4950
  6073  0010'                    u4951:
  6074  0010' FFFF               	dw	65535	; assembler added errata NOP
  6075  0012' EF00' F000'        	goto	l321
  6076  0016'                    u4950:
  6077  0016' FFFF               	dw	65535	; assembler added errata NOP
  6078  0018' 5000'              	movf	_stop^0,w,c
  6079  001A' A4D8               	btfss	status,2,c
  6080  001C' EF00' F000'        	goto	u4961
  6081  0020' EF00' F000'        	goto	u4960
  6082  0024'                    u4961:
  6083  0024' FFFF               	dw	65535	; assembler added errata NOP
  6084  0026' EF00' F000'        	goto	l321
  6085  002A'                    u4960:
  6086  002A' FFFF               	dw	65535	; assembler added errata NOP
  6087  002C'                    
  6088                           ;main.c: 544:         new_TMR1H = 0xF9;
  6089  002C' 0EF9               	movlw	249
  6090  002E' 6E00'              	movwf	_new_TMR1H@main$F655^0,c
  6091                           
  6092                           ;main.c: 545:         new_TMR1L = 0x53;
  6093  0030' 0E53               	movlw	83
  6094  0032' 0100               	movlb	0	; () banked
  6095  0034' 6F00'              	movwf	_new_TMR1L@main$F656& (0+255),b
  6096  0036'                    l321:
  6097  0036' FFFF               	dw	65535	; assembler added errata NOP
  6098                           
  6099                           ;main.c: 548:     if(action == 0 && !stop){
  6100  0038' 5000'              	movf	Tweezer@action^0,w,c
  6101  003A' A4D8               	btfss	status,2,c
  6102  003C' EF00' F000'        	goto	u4971
  6103  0040' EF00' F000'        	goto	u4970
  6104  0044'                    u4971:
  6105  0044' FFFF               	dw	65535	; assembler added errata NOP
  6106  0046' EF00' F000'        	goto	l4541
  6107  004A'                    u4970:
  6108  004A' FFFF               	dw	65535	; assembler added errata NOP
  6109  004C' 5000'              	movf	_stop^0,w,c
  6110  004E' A4D8               	btfss	status,2,c
  6111  0050' EF00' F000'        	goto	u4981
  6112  0054' EF00' F000'        	goto	u4980
  6113  0058'                    u4981:
  6114  0058' FFFF               	dw	65535	; assembler added errata NOP
  6115  005A' EF00' F000'        	goto	l4541
  6116  005E'                    u4980:
  6117  005E' FFFF               	dw	65535	; assembler added errata NOP
  6118  0060'                    
  6119                           ;main.c: 549:         new_TMR1H= 0xFA;
  6120  0060' 0EFA               	movlw	250
  6121  0062' 6E00'              	movwf	_new_TMR1H@main$F655^0,c
  6122                           
  6123                           ;main.c: 550:         new_TMR1L= 0x60;
  6124  0064' 0E60               	movlw	96
  6125  0066' 0100               	movlb	0	; () banked
  6126  0068' 6F00'              	movwf	_new_TMR1L@main$F656& (0+255),b
  6127  006A'                    l4541:
  6128  006A' FFFF               	dw	65535	; assembler added errata NOP
  6129                           
  6130                           ;main.c: 552:     LATCbits.LC2=1;
  6131  006C' 848B               	bsf	139,2,c	;volatile
  6132  006E'                    
  6133                           ;main.c: 553:     T1CONbits.TMR1ON=1;
  6134  006E' 80CD               	bsf	205,0,c	;volatile
  6135  0070' 0012               	return		;funcret
  6136  0072' FFFF               	dw	65535	; errata NOP
  6137  0074'                    __end_of_Tweezer:
  6138                           	callstack 0
  6139                           
  6140 ;; *************** function _change_sequence *****************
  6141 ;; Defined at:
  6142 ;;		line 274 in file "main.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;		None
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  i               2   18[COMRAM] int 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6156 ;;      Params:         0       0       0       0       0       0       0
  6157 ;;      Locals:         2       0       0       0       0       0       0
  6158 ;;      Temps:          3       0       0       0       0       0       0
  6159 ;;      Totals:         5       0       0       0       0       0       0
  6160 ;;Total ram usage:        5 bytes
  6161 ;; Hardware stack levels used: 1
  6162 ;; Hardware stack levels required when called: 3
  6163 ;; This function calls:
  6164 ;;		_print_string
  6165 ;; This function is called by:
  6166 ;;		_start_up_menu
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           	psect	text19
  6171  0000'                    __ptext19:
  6172                           	callstack 0
  6173  0000'                    _change_sequence:
  6174                           	callstack 0
  6175  0000' FFFF               	dw	65535	; assembler added errata NOP
  6176  0002'                    
  6177                           ;main.c: 275:     print_string("\nThe current sequence is: ");
  6178  0002' 0E00'              	movlw	low STR_3
  6179  0004' 6E00'              	movwf	print_string@strng^0,c
  6180  0006' 0E00'              	movlw	high STR_3
  6181  0008' 6E00'              	movwf	(print_string@strng+1)^0,c
  6182  000A' EC00' F000'        	call	_print_string	;wreg free
  6183                           
  6184                           ;main.c: 276:     print_string(sequence);
  6185  000E' 0E00'              	movlw	low _sequence
  6186  0010' 6E00'              	movwf	print_string@strng^0,c
  6187  0012' 0E00'              	movlw	high _sequence
  6188  0014' 6E00'              	movwf	(print_string@strng+1)^0,c
  6189  0016' EC00' F000'        	call	_print_string	;wreg free
  6190                           
  6191                           ;main.c: 277:     print_string("\nPlease give the new sequence as input\r");
  6192  001A' 0E00'              	movlw	low STR_4
  6193  001C' 6E00'              	movwf	print_string@strng^0,c
  6194  001E' 0E00'              	movlw	high STR_4
  6195  0020' 6E00'              	movwf	(print_string@strng+1)^0,c
  6196  0022' EC00' F000'        	call	_print_string	;wreg free
  6197  0026'                    
  6198                           ;main.c: 278:     int i = 0;
  6199  0026' 0E00               	movlw	0
  6200  0028' 6E00'              	movwf	(change_sequence@i+1)^0,c
  6201  002A' 0E00               	movlw	0
  6202  002C' 6E00'              	movwf	change_sequence@i^0,c
  6203  002E'                    l4997:
  6204  002E' FFFF               	dw	65535	; assembler added errata NOP
  6205                           
  6206                           ;main.c: 280:         if(New_char_RX){
  6207  0030' 5000'              	movf	_New_char_RX^0,w,c
  6208  0032' B4D8               	btfsc	status,2,c
  6209  0034' EF00' F000'        	goto	u5891
  6210  0038' EF00' F000'        	goto	u5890
  6211  003C'                    u5891:
  6212  003C' FFFF               	dw	65535	; assembler added errata NOP
  6213  003E' EF00' F000'        	goto	l4997
  6214  0042'                    u5890:
  6215  0042' FFFF               	dw	65535	; assembler added errata NOP
  6216  0044'                    l4999:
  6217  0044' FFFF               	dw	65535	; assembler added errata NOP
  6218                           
  6219                           ;main.c: 282:                 sequence[i]=input_str[i];
  6220  0046' 0E00'              	movlw	low _input_str
  6221  0048' 2400'              	addwf	change_sequence@i^0,w,c
  6222  004A' 6ED9               	movwf	fsr2l,c
  6223  004C' 0E00'              	movlw	high _input_str
  6224  004E' 2000'              	addwfc	(change_sequence@i+1)^0,w,c
  6225  0050' 6EDA               	movwf	fsr2h,c
  6226  0052' 0E00'              	movlw	low _sequence
  6227  0054' 2400'              	addwf	change_sequence@i^0,w,c
  6228  0056' 6EE1               	movwf	fsr1l,c
  6229  0058' 0E00'              	movlw	high _sequence
  6230  005A' 2000'              	addwfc	(change_sequence@i+1)^0,w,c
  6231  005C' 6EE2               	movwf	fsr1h,c
  6232  005E' CFDF FFE7          	movff	indf2,indf1
  6233  0062'                    
  6234                           ;main.c: 283:             }while(input_str[i++]!='\n');
  6235  0062' 5000'              	movf	change_sequence@i^0,w,c
  6236  0064' 6E00'              	movwf	??_change_sequence^0,c
  6237  0066' 5000'              	movf	(change_sequence@i+1)^0,w,c
  6238  0068' 6E00'              	movwf	(??_change_sequence+1)^0,c
  6239  006A' 4A00'              	infsnz	change_sequence@i^0,f,c
  6240  006C' 2A00'              	incf	(change_sequence@i+1)^0,f,c
  6241  006E' 0E00'              	movlw	low _input_str
  6242  0070' 2400'              	addwf	??_change_sequence^0,w,c
  6243  0072' 6ED9               	movwf	fsr2l,c
  6244  0074' 0E00'              	movlw	high _input_str
  6245  0076' 2000'              	addwfc	(??_change_sequence+1)^0,w,c
  6246  0078' 6EDA               	movwf	fsr2h,c
  6247  007A' 0E0A               	movlw	10
  6248  007C' 18DE               	xorwf	postinc2,w,c
  6249  007E' A4D8               	btfss	status,2,c
  6250  0080' EF00' F000'        	goto	u5901
  6251  0084' EF00' F000'        	goto	u5900
  6252  0088'                    u5901:
  6253  0088' FFFF               	dw	65535	; assembler added errata NOP
  6254  008A' EF00' F000'        	goto	l4999
  6255  008E'                    u5900:
  6256  008E' FFFF               	dw	65535	; assembler added errata NOP
  6257  0090'                    
  6258                           ;main.c: 285:             New_char_RX=0;
  6259  0090' 0E00               	movlw	0
  6260  0092' 6E00'              	movwf	_New_char_RX^0,c
  6261  0094' 0012               	return		;funcret
  6262  0096' FFFF               	dw	65535	; errata NOP
  6263  0098'                    __end_of_change_sequence:
  6264                           	callstack 0
  6265                           
  6266 ;; *************** function _add_component *****************
  6267 ;; Defined at:
  6268 ;;		line 294 in file "main.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;		None
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  add_componnt    2   31[COMRAM] unsigned char [2]
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1    wreg      void 
  6275 ;; Registers used:
  6276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6282 ;;      Params:         0       0       0       0       0       0       0
  6283 ;;      Locals:         2       0       0       0       0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0
  6285 ;;      Totals:         2       0       0       0       0       0       0
  6286 ;;Total ram usage:        2 bytes
  6287 ;; Hardware stack levels used: 1
  6288 ;; Hardware stack levels required when called: 4
  6289 ;; This function calls:
  6290 ;;		_atoi
  6291 ;;		_print_string
  6292 ;;		_strcat
  6293 ;; This function is called by:
  6294 ;;		_start_up_menu
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           	psect	text20
  6299  0000'                    __ptext20:
  6300                           	callstack 0
  6301  0000'                    _add_component:
  6302                           	callstack 0
  6303  0000' FFFF               	dw	65535	; assembler added errata NOP
  6304  0002'                    
  6305                           ;main.c: 295:     char add_componnt[]=" ";
  6306  0002' C008' F01F'        	movff	add_component@F3136,add_component@add_componnt
  6307  0006' C009' F020'        	movff	add_component@F3136+1,add_component@add_componnt+1
  6308  000A'                    
  6309                           ;main.c: 296:     print_string("\n\nThe Current sequence is:");
  6310  000A' 0E00'              	movlw	low STR_5
  6311  000C' 6E00'              	movwf	print_string@strng^0,c
  6312  000E' 0E00'              	movlw	high STR_5
  6313  0010' 6E00'              	movwf	(print_string@strng+1)^0,c
  6314  0012' EC00' F000'        	call	_print_string	;wreg free
  6315                           
  6316                           ;main.c: 297:     print_string(sequence);
  6317  0016' 0E00'              	movlw	low _sequence
  6318  0018' 6E00'              	movwf	print_string@strng^0,c
  6319  001A' 0E00'              	movlw	high _sequence
  6320  001C' 6E00'              	movwf	(print_string@strng+1)^0,c
  6321  001E' EC00' F000'        	call	_print_string	;wreg free
  6322                           
  6323                           ;main.c: 298:     print_string("\nEnter the component you want to add: A, B, C or D?");
  6324  0022' 0E00'              	movlw	low STR_6
  6325  0024' 6E00'              	movwf	print_string@strng^0,c
  6326  0026' 0E00'              	movlw	high STR_6
  6327  0028' 6E00'              	movwf	(print_string@strng+1)^0,c
  6328  002A' EC00' F000'        	call	_print_string	;wreg free
  6329  002E'                    l5009:
  6330  002E' FFFF               	dw	65535	; assembler added errata NOP
  6331                           
  6332                           ;main.c: 300:         if(New_char_RX && input_str[0]=='D'){
  6333  0030' 5000'              	movf	_New_char_RX^0,w,c
  6334  0032' B4D8               	btfsc	status,2,c
  6335  0034' EF00' F000'        	goto	u5911
  6336  0038' EF00' F000'        	goto	u5910
  6337  003C'                    u5911:
  6338  003C' FFFF               	dw	65535	; assembler added errata NOP
  6339  003E' EF00' F000'        	goto	l5079
  6340  0042'                    u5910:
  6341  0042' FFFF               	dw	65535	; assembler added errata NOP
  6342  0044' 0E44               	movlw	68
  6343  0046' 0100               	movlb	0	; () banked
  6344  0048' 1900'              	xorwf	_input_str& (0+255),w,b	;volatile
  6345  004A' A4D8               	btfss	status,2,c
  6346  004C' EF00' F000'        	goto	u5921
  6347  0050' EF00' F000'        	goto	u5920
  6348  0054'                    u5921:
  6349  0054' FFFF               	dw	65535	; assembler added errata NOP
  6350  0056' EF00' F000'        	goto	l5079
  6351  005A'                    u5920:
  6352  005A' FFFF               	dw	65535	; assembler added errata NOP
  6353  005C'                    
  6354                           ; BSR set to: 0
  6355                           ;main.c: 301:             add_componnt[0]=input_str[0];
  6356  005C' C010' F01F'        	movff	_input_str,add_component@add_componnt	;volatile
  6357  0060'                    
  6358                           ; BSR set to: 0
  6359                           ;main.c: 302:             New_char_RX=0;
  6360  0060' 0E00               	movlw	0
  6361  0062' 6E00'              	movwf	_New_char_RX^0,c
  6362  0064'                    
  6363                           ; BSR set to: 0
  6364                           ;main.c: 303:             print_string("\nEnter the pick position X (1-20): ");
  6365  0064' 0E00'              	movlw	low STR_7
  6366  0066' 6E00'              	movwf	print_string@strng^0,c
  6367  0068' 0E00'              	movlw	high STR_7
  6368  006A' 6E00'              	movwf	(print_string@strng+1)^0,c
  6369  006C' EC00' F000'        	call	_print_string	;wreg free
  6370  0070'                    l5019:
  6371  0070' FFFF               	dw	65535	; assembler added errata NOP
  6372                           
  6373                           ;main.c: 305:                 if(New_char_RX){
  6374  0072' 5000'              	movf	_New_char_RX^0,w,c
  6375  0074' B4D8               	btfsc	status,2,c
  6376  0076' EF00' F000'        	goto	u5931
  6377  007A' EF00' F000'        	goto	u5930
  6378  007E'                    u5931:
  6379  007E' FFFF               	dw	65535	; assembler added errata NOP
  6380  0080' EF00' F000'        	goto	l5019
  6381  0084'                    u5930:
  6382  0084' FFFF               	dw	65535	; assembler added errata NOP
  6383  0086'                    
  6384                           ;main.c: 306:                     X_Pick_D=atoi(input_str);
  6385  0086' 0E00'              	movlw	low _input_str
  6386  0088' 6E00'              	movwf	atoi@s^0,c
  6387  008A' 0E00'              	movlw	high _input_str
  6388  008C' 6E00'              	movwf	(atoi@s+1)^0,c
  6389  008E' EC00' F000'        	call	_atoi	;wreg free
  6390  0092' C010' F010'        	movff	?_atoi,_X_Pick_D
  6391  0096' C011' F011'        	movff	?_atoi+1,_X_Pick_D+1
  6392  009A'                    
  6393                           ;main.c: 307:                     print_string(input_str);
  6394  009A' 0E00'              	movlw	low _input_str
  6395  009C' 6E00'              	movwf	print_string@strng^0,c
  6396  009E' 0E00'              	movlw	high _input_str
  6397  00A0' 6E00'              	movwf	(print_string@strng+1)^0,c
  6398  00A2' EC00' F000'        	call	_print_string	;wreg free
  6399  00A6'                    
  6400                           ;main.c: 308:                     New_char_RX=0;
  6401  00A6' 0E00               	movlw	0
  6402  00A8' 6E00'              	movwf	_New_char_RX^0,c
  6403  00AA'                    
  6404                           ;main.c: 312:             print_string("\nEnter the pick position Y (1-20): ");
  6405  00AA' 0E00'              	movlw	low STR_8
  6406  00AC' 6E00'              	movwf	print_string@strng^0,c
  6407  00AE' 0E00'              	movlw	high STR_8
  6408  00B0' 6E00'              	movwf	(print_string@strng+1)^0,c
  6409  00B2' EC00' F000'        	call	_print_string	;wreg free
  6410  00B6'                    l5029:
  6411  00B6' FFFF               	dw	65535	; assembler added errata NOP
  6412                           
  6413                           ;main.c: 314:                 if(New_char_RX){
  6414  00B8' 5000'              	movf	_New_char_RX^0,w,c
  6415  00BA' B4D8               	btfsc	status,2,c
  6416  00BC' EF00' F000'        	goto	u5941
  6417  00C0' EF00' F000'        	goto	u5940
  6418  00C4'                    u5941:
  6419  00C4' FFFF               	dw	65535	; assembler added errata NOP
  6420  00C6' EF00' F000'        	goto	l5029
  6421  00CA'                    u5940:
  6422  00CA' FFFF               	dw	65535	; assembler added errata NOP
  6423  00CC'                    
  6424                           ;main.c: 315:                     Y_Pick_D=(atoi(input_str));
  6425  00CC' 0E00'              	movlw	low _input_str
  6426  00CE' 6E00'              	movwf	atoi@s^0,c
  6427  00D0' 0E00'              	movlw	high _input_str
  6428  00D2' 6E00'              	movwf	(atoi@s+1)^0,c
  6429  00D4' EC00' F000'        	call	_atoi	;wreg free
  6430  00D8' C010' F00E'        	movff	?_atoi,_Y_Pick_D
  6431  00DC' C011' F00F'        	movff	?_atoi+1,_Y_Pick_D+1
  6432  00E0'                    
  6433                           ;main.c: 316:                     print_string(input_str);
  6434  00E0' 0E00'              	movlw	low _input_str
  6435  00E2' 6E00'              	movwf	print_string@strng^0,c
  6436  00E4' 0E00'              	movlw	high _input_str
  6437  00E6' 6E00'              	movwf	(print_string@strng+1)^0,c
  6438  00E8' EC00' F000'        	call	_print_string	;wreg free
  6439  00EC'                    
  6440                           ;main.c: 317:                     New_char_RX=0;
  6441  00EC' 0E00               	movlw	0
  6442  00EE' 6E00'              	movwf	_New_char_RX^0,c
  6443  00F0'                    
  6444                           ;main.c: 321:             print_string("\nEnter the pick orientation (0-360): ");
  6445  00F0' 0E00'              	movlw	low STR_9
  6446  00F2' 6E00'              	movwf	print_string@strng^0,c
  6447  00F4' 0E00'              	movlw	high STR_9
  6448  00F6' 6E00'              	movwf	(print_string@strng+1)^0,c
  6449  00F8' EC00' F000'        	call	_print_string	;wreg free
  6450  00FC'                    l5039:
  6451  00FC' FFFF               	dw	65535	; assembler added errata NOP
  6452                           
  6453                           ;main.c: 323:                 if(New_char_RX){
  6454  00FE' 5000'              	movf	_New_char_RX^0,w,c
  6455  0100' B4D8               	btfsc	status,2,c
  6456  0102' EF00' F000'        	goto	u5951
  6457  0106' EF00' F000'        	goto	u5950
  6458  010A'                    u5951:
  6459  010A' FFFF               	dw	65535	; assembler added errata NOP
  6460  010C' EF00' F000'        	goto	l5039
  6461  0110'                    u5950:
  6462  0110' FFFF               	dw	65535	; assembler added errata NOP
  6463  0112'                    
  6464                           ;main.c: 324:                     Pick_Angle_D=(atoi(input_str));
  6465  0112' 0E00'              	movlw	low _input_str
  6466  0114' 6E00'              	movwf	atoi@s^0,c
  6467  0116' 0E00'              	movlw	high _input_str
  6468  0118' 6E00'              	movwf	(atoi@s+1)^0,c
  6469  011A' EC00' F000'        	call	_atoi	;wreg free
  6470  011E' C010' F00C'        	movff	?_atoi,_Pick_Angle_D
  6471  0122' C011' F00D'        	movff	?_atoi+1,_Pick_Angle_D+1
  6472  0126'                    
  6473                           ;main.c: 325:                     print_string(input_str);
  6474  0126' 0E00'              	movlw	low _input_str
  6475  0128' 6E00'              	movwf	print_string@strng^0,c
  6476  012A' 0E00'              	movlw	high _input_str
  6477  012C' 6E00'              	movwf	(print_string@strng+1)^0,c
  6478  012E' EC00' F000'        	call	_print_string	;wreg free
  6479  0132'                    
  6480                           ;main.c: 326:                     New_char_RX=0;
  6481  0132' 0E00               	movlw	0
  6482  0134' 6E00'              	movwf	_New_char_RX^0,c
  6483  0136'                    
  6484                           ;main.c: 330:             print_string("\nEnter the place position X (1-20): ");
  6485  0136' 0E00'              	movlw	low STR_10
  6486  0138' 6E00'              	movwf	print_string@strng^0,c
  6487  013A' 0E00'              	movlw	high STR_10
  6488  013C' 6E00'              	movwf	(print_string@strng+1)^0,c
  6489  013E' EC00' F000'        	call	_print_string	;wreg free
  6490  0142'                    l5049:
  6491  0142' FFFF               	dw	65535	; assembler added errata NOP
  6492                           
  6493                           ;main.c: 332:                 if(New_char_RX){
  6494  0144' 5000'              	movf	_New_char_RX^0,w,c
  6495  0146' B4D8               	btfsc	status,2,c
  6496  0148' EF00' F000'        	goto	u5961
  6497  014C' EF00' F000'        	goto	u5960
  6498  0150'                    u5961:
  6499  0150' FFFF               	dw	65535	; assembler added errata NOP
  6500  0152' EF00' F000'        	goto	l5049
  6501  0156'                    u5960:
  6502  0156' FFFF               	dw	65535	; assembler added errata NOP
  6503  0158'                    
  6504                           ;main.c: 333:                     X_Place_D=(atoi(input_str));
  6505  0158' 0E00'              	movlw	low _input_str
  6506  015A' 6E00'              	movwf	atoi@s^0,c
  6507  015C' 0E00'              	movlw	high _input_str
  6508  015E' 6E00'              	movwf	(atoi@s+1)^0,c
  6509  0160' EC00' F000'        	call	_atoi	;wreg free
  6510  0164' C010' F00A'        	movff	?_atoi,_X_Place_D
  6511  0168' C011' F00B'        	movff	?_atoi+1,_X_Place_D+1
  6512  016C'                    
  6513                           ;main.c: 334:                     print_string(input_str);
  6514  016C' 0E00'              	movlw	low _input_str
  6515  016E' 6E00'              	movwf	print_string@strng^0,c
  6516  0170' 0E00'              	movlw	high _input_str
  6517  0172' 6E00'              	movwf	(print_string@strng+1)^0,c
  6518  0174' EC00' F000'        	call	_print_string	;wreg free
  6519  0178'                    
  6520                           ;main.c: 335:                     New_char_RX=0;
  6521  0178' 0E00               	movlw	0
  6522  017A' 6E00'              	movwf	_New_char_RX^0,c
  6523  017C'                    
  6524                           ;main.c: 339:             print_string("\nEnter the place position Y (1-20): ");
  6525  017C' 0E00'              	movlw	low STR_11
  6526  017E' 6E00'              	movwf	print_string@strng^0,c
  6527  0180' 0E00'              	movlw	high STR_11
  6528  0182' 6E00'              	movwf	(print_string@strng+1)^0,c
  6529  0184' EC00' F000'        	call	_print_string	;wreg free
  6530  0188'                    l5059:
  6531  0188' FFFF               	dw	65535	; assembler added errata NOP
  6532                           
  6533                           ;main.c: 341:                 if(New_char_RX){
  6534  018A' 5000'              	movf	_New_char_RX^0,w,c
  6535  018C' B4D8               	btfsc	status,2,c
  6536  018E' EF00' F000'        	goto	u5971
  6537  0192' EF00' F000'        	goto	u5970
  6538  0196'                    u5971:
  6539  0196' FFFF               	dw	65535	; assembler added errata NOP
  6540  0198' EF00' F000'        	goto	l5059
  6541  019C'                    u5970:
  6542  019C' FFFF               	dw	65535	; assembler added errata NOP
  6543  019E'                    
  6544                           ;main.c: 342:                     Y_Place_D=(atoi(input_str));
  6545  019E' 0E00'              	movlw	low _input_str
  6546  01A0' 6E00'              	movwf	atoi@s^0,c
  6547  01A2' 0E00'              	movlw	high _input_str
  6548  01A4' 6E00'              	movwf	(atoi@s+1)^0,c
  6549  01A6' EC00' F000'        	call	_atoi	;wreg free
  6550  01AA' C010' F008'        	movff	?_atoi,_Y_Place_D
  6551  01AE' C011' F009'        	movff	?_atoi+1,_Y_Place_D+1
  6552  01B2'                    
  6553                           ;main.c: 343:                     print_string(input_str);
  6554  01B2' 0E00'              	movlw	low _input_str
  6555  01B4' 6E00'              	movwf	print_string@strng^0,c
  6556  01B6' 0E00'              	movlw	high _input_str
  6557  01B8' 6E00'              	movwf	(print_string@strng+1)^0,c
  6558  01BA' EC00' F000'        	call	_print_string	;wreg free
  6559  01BE'                    
  6560                           ;main.c: 344:                     New_char_RX=0;
  6561  01BE' 0E00               	movlw	0
  6562  01C0' 6E00'              	movwf	_New_char_RX^0,c
  6563  01C2'                    
  6564                           ;main.c: 348:             print_string("\nEnter the place orientation (0-360): ");
  6565  01C2' 0E00'              	movlw	low STR_12
  6566  01C4' 6E00'              	movwf	print_string@strng^0,c
  6567  01C6' 0E00'              	movlw	high STR_12
  6568  01C8' 6E00'              	movwf	(print_string@strng+1)^0,c
  6569  01CA' EC00' F000'        	call	_print_string	;wreg free
  6570  01CE'                    l5069:
  6571  01CE' FFFF               	dw	65535	; assembler added errata NOP
  6572                           
  6573                           ;main.c: 350:                     if(New_char_RX){
  6574  01D0' 5000'              	movf	_New_char_RX^0,w,c
  6575  01D2' B4D8               	btfsc	status,2,c
  6576  01D4' EF00' F000'        	goto	u5981
  6577  01D8' EF00' F000'        	goto	u5980
  6578  01DC'                    u5981:
  6579  01DC' FFFF               	dw	65535	; assembler added errata NOP
  6580  01DE' EF00' F000'        	goto	l5069
  6581  01E2'                    u5980:
  6582  01E2' FFFF               	dw	65535	; assembler added errata NOP
  6583  01E4'                    
  6584                           ;main.c: 351:                     Place_Angle_D=(atoi(input_str));
  6585  01E4' 0E00'              	movlw	low _input_str
  6586  01E6' 6E00'              	movwf	atoi@s^0,c
  6587  01E8' 0E00'              	movlw	high _input_str
  6588  01EA' 6E00'              	movwf	(atoi@s+1)^0,c
  6589  01EC' EC00' F000'        	call	_atoi	;wreg free
  6590  01F0' C010' F006'        	movff	?_atoi,_Place_Angle_D
  6591  01F4' C011' F007'        	movff	?_atoi+1,_Place_Angle_D+1
  6592  01F8'                    
  6593                           ;main.c: 352:                     print_string(input_str);
  6594  01F8' 0E00'              	movlw	low _input_str
  6595  01FA' 6E00'              	movwf	print_string@strng^0,c
  6596  01FC' 0E00'              	movlw	high _input_str
  6597  01FE' 6E00'              	movwf	(print_string@strng+1)^0,c
  6598  0200' EC00' F000'        	call	_print_string	;wreg free
  6599  0204'                    l5075:
  6600  0204' FFFF               	dw	65535	; assembler added errata NOP
  6601                           
  6602                           ;main.c: 353:                     New_char_RX=0;
  6603  0206' 0E00               	movlw	0
  6604  0208' 6E00'              	movwf	_New_char_RX^0,c
  6605                           
  6606                           ;main.c: 354:                     break;
  6607  020A' EF00' F000'        	goto	l5085
  6608  020E'                    l5079:
  6609  020E' FFFF               	dw	65535	; assembler added errata NOP
  6610  0210' 5000'              	movf	_New_char_RX^0,w,c
  6611  0212' B4D8               	btfsc	status,2,c
  6612  0214' EF00' F000'        	goto	u5991
  6613  0218' EF00' F000'        	goto	u5990
  6614  021C'                    u5991:
  6615  021C' FFFF               	dw	65535	; assembler added errata NOP
  6616  021E' EF00' F000'        	goto	l5009
  6617  0222'                    u5990:
  6618  0222' FFFF               	dw	65535	; assembler added errata NOP
  6619  0224'                    
  6620                           ;main.c: 360:             add_componnt[0]=input_str[0];
  6621  0224' C010' F01F'        	movff	_input_str,add_component@add_componnt	;volatile
  6622  0228' EF00' F000'        	goto	l5075
  6623  022C'                    l5085:
  6624  022C' FFFF               	dw	65535	; assembler added errata NOP
  6625                           
  6626                           ;main.c: 366:     strcat(sequence,add_componnt);
  6627  022E' 0E00'              	movlw	low _sequence
  6628  0230' 6E00'              	movwf	strcat@dest^0,c
  6629  0232' 0E00'              	movlw	high _sequence
  6630  0234' 6E00'              	movwf	(strcat@dest+1)^0,c
  6631  0236' 0E00'              	movlw	low add_component@add_componnt
  6632  0238' 6E00'              	movwf	strcat@src^0,c
  6633  023A' 0E00'              	movlw	high add_component@add_componnt
  6634  023C' 6E00'              	movwf	(strcat@src+1)^0,c
  6635  023E' EC00' F000'        	call	_strcat	;wreg free
  6636  0242'                    
  6637                           ;main.c: 367:     print_string("\n\nComponent Added: ");
  6638  0242' 0E00'              	movlw	low STR_13
  6639  0244' 6E00'              	movwf	print_string@strng^0,c
  6640  0246' 0E00'              	movlw	high STR_13
  6641  0248' 6E00'              	movwf	(print_string@strng+1)^0,c
  6642  024A' EC00' F000'        	call	_print_string	;wreg free
  6643  024E'                    
  6644                           ;main.c: 368:     print_string(add_componnt);
  6645  024E' 0E00'              	movlw	low add_component@add_componnt
  6646  0250' 6E00'              	movwf	print_string@strng^0,c
  6647  0252' 0E00'              	movlw	high add_component@add_componnt
  6648  0254' 6E00'              	movwf	(print_string@strng+1)^0,c
  6649  0256' EC00' F000'        	call	_print_string	;wreg free
  6650  025A'                    
  6651                           ;main.c: 369:     New_char_RX=0;
  6652  025A' 0E00               	movlw	0
  6653  025C' 6E00'              	movwf	_New_char_RX^0,c
  6654  025E' 0012               	return		;funcret
  6655  0260' FFFF               	dw	65535	; errata NOP
  6656  0262'                    __end_of_add_component:
  6657                           	callstack 0
  6658                           
  6659 ;; *************** function _strcat *****************
  6660 ;; Defined at:
  6661 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strcat.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  dest            2   21[COMRAM] PTR unsigned char 
  6664 ;;		 -> sequence(4), 
  6665 ;;  src             2   23[COMRAM] PTR const unsigned char 
  6666 ;;		 -> add_component@add_componnt(2), 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;		None
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  2   21[COMRAM] PTR unsigned char 
  6671 ;; Registers used:
  6672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6678 ;;      Params:         4       0       0       0       0       0       0
  6679 ;;      Locals:         0       0       0       0       0       0       0
  6680 ;;      Temps:          0       0       0       0       0       0       0
  6681 ;;      Totals:         4       0       0       0       0       0       0
  6682 ;;Total ram usage:        4 bytes
  6683 ;; Hardware stack levels used: 1
  6684 ;; Hardware stack levels required when called: 3
  6685 ;; This function calls:
  6686 ;;		_strcpy
  6687 ;;		_strlen
  6688 ;; This function is called by:
  6689 ;;		_add_component
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text21
  6694  0000'                    __ptext21:
  6695                           	callstack 0
  6696  0000'                    _strcat:
  6697                           	callstack 0
  6698  0000' FFFF               	dw	65535	; assembler added errata NOP
  6699  0002' C015' F009'        	movff	strcat@dest,strlen@s
  6700  0006' C016' F00A'        	movff	strcat@dest+1,strlen@s+1
  6701  000A' EC00' F000'        	call	_strlen	;wreg free
  6702  000E' 5000'              	movf	?_strlen^0,w,c
  6703  0010' 2400'              	addwf	strcat@dest^0,w,c
  6704  0012' 6E00'              	movwf	strcpy@dest^0,c
  6705  0014' 5000'              	movf	(?_strlen+1)^0,w,c
  6706  0016' 2000'              	addwfc	(strcat@dest+1)^0,w,c
  6707  0018' 6E00'              	movwf	(strcpy@dest+1)^0,c
  6708  001A' C017' F00F'        	movff	strcat@src,strcpy@src
  6709  001E' C018' F010'        	movff	strcat@src+1,strcpy@src+1
  6710  0022' EC00' F000'        	call	_strcpy	;wreg free
  6711  0026' 0012               	return		;funcret
  6712  0028' FFFF               	dw	65535	; errata NOP
  6713  002A'                    __end_of_strcat:
  6714                           	callstack 0
  6715                           
  6716 ;; *************** function _strlen *****************
  6717 ;; Defined at:
  6718 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6721 ;;		 -> sequence(4), 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;  a               2   11[COMRAM] PTR const unsigned char 
  6724 ;;		 -> sequence(4), 
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  2    9[COMRAM] unsigned int 
  6727 ;; Registers used:
  6728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6734 ;;      Params:         2       0       0       0       0       0       0
  6735 ;;      Locals:         2       0       0       0       0       0       0
  6736 ;;      Temps:          0       0       0       0       0       0       0
  6737 ;;      Totals:         4       0       0       0       0       0       0
  6738 ;;Total ram usage:        4 bytes
  6739 ;; Hardware stack levels used: 1
  6740 ;; Hardware stack levels required when called: 2
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_start_up_menu
  6745 ;;		_remove_component
  6746 ;;		_strcat
  6747 ;;		_strrchr
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text22
  6752  0000'                    __ptext22:
  6753                           	callstack 0
  6754  0000'                    _strlen:
  6755                           	callstack 0
  6756  0000' FFFF               	dw	65535	; assembler added errata NOP
  6757  0002' C009' F00B'        	movff	strlen@s,strlen@a
  6758  0006' C00A' F00C'        	movff	strlen@s+1,strlen@a+1
  6759  000A' EF00' F000'        	goto	l2799
  6760  000E'                    l2797:
  6761  000E' FFFF               	dw	65535	; assembler added errata NOP
  6762  0010' 4A00'              	infsnz	strlen@s^0,f,c
  6763  0012' 2A00'              	incf	(strlen@s+1)^0,f,c
  6764  0014'                    l2799:
  6765  0014' FFFF               	dw	65535	; assembler added errata NOP
  6766  0016' C009' FFD9         	movff	strlen@s,fsr2l
  6767  001A' C00A' FFDA         	movff	strlen@s+1,fsr2h
  6768  001E' 50DF               	movf	indf2,w,c
  6769  0020' A4D8               	btfss	status,2,c
  6770  0022' EF00' F000'        	goto	u2411
  6771  0026' EF00' F000'        	goto	u2410
  6772  002A'                    u2411:
  6773  002A' FFFF               	dw	65535	; assembler added errata NOP
  6774  002C' EF00' F000'        	goto	l2797
  6775  0030'                    u2410:
  6776  0030' FFFF               	dw	65535	; assembler added errata NOP
  6777  0032' 5000'              	movf	strlen@a^0,w,c
  6778  0034' 5C00'              	subwf	strlen@s^0,w,c
  6779  0036' 6E00'              	movwf	?_strlen^0,c
  6780  0038' 5000'              	movf	(strlen@a+1)^0,w,c
  6781  003A' 5800'              	subwfb	(strlen@s+1)^0,w,c
  6782  003C' 6E00'              	movwf	(?_strlen+1)^0,c
  6783  003E' 0012               	return		;funcret
  6784  0040' FFFF               	dw	65535	; errata NOP
  6785  0042'                    __end_of_strlen:
  6786                           	callstack 0
  6787                           
  6788 ;; *************** function _strcpy *****************
  6789 ;; Defined at:
  6790 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strcpy.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  dest            2   13[COMRAM] PTR unsigned char 
  6793 ;;		 -> sequence(4), 
  6794 ;;  src             2   15[COMRAM] PTR const unsigned char 
  6795 ;;		 -> add_component@add_componnt(2), 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  d               2   19[COMRAM] PTR unsigned char 
  6798 ;;		 -> sequence(4), 
  6799 ;;  s               2   17[COMRAM] PTR const unsigned char 
  6800 ;;		 -> add_component@add_componnt(2), 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  2   13[COMRAM] PTR unsigned char 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6810 ;;      Params:         4       0       0       0       0       0       0
  6811 ;;      Locals:         4       0       0       0       0       0       0
  6812 ;;      Temps:          0       0       0       0       0       0       0
  6813 ;;      Totals:         8       0       0       0       0       0       0
  6814 ;;Total ram usage:        8 bytes
  6815 ;; Hardware stack levels used: 1
  6816 ;; Hardware stack levels required when called: 2
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_strcat
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text23
  6825  0000'                    __ptext23:
  6826                           	callstack 0
  6827  0000'                    _strcpy:
  6828                           	callstack 0
  6829  0000' FFFF               	dw	65535	; assembler added errata NOP
  6830  0002' C00F' F011'        	movff	strcpy@src,strcpy@s
  6831  0006' C010' F012'        	movff	strcpy@src+1,strcpy@s+1
  6832  000A' C00D' F013'        	movff	strcpy@dest,strcpy@d
  6833  000E' C00E' F014'        	movff	strcpy@dest+1,strcpy@d+1
  6834  0012'                    l3049:
  6835  0012' FFFF               	dw	65535	; assembler added errata NOP
  6836  0014' C011' FFD9         	movff	strcpy@s,fsr2l
  6837  0018' C012' FFDA         	movff	strcpy@s+1,fsr2h
  6838  001C' 4A00'              	infsnz	strcpy@s^0,f,c
  6839  001E' 2A00'              	incf	(strcpy@s+1)^0,f,c
  6840  0020' C013' FFE1         	movff	strcpy@d,fsr1l
  6841  0024' C014' FFE2         	movff	strcpy@d+1,fsr1h
  6842  0028' 4A00'              	infsnz	strcpy@d^0,f,c
  6843  002A' 2A00'              	incf	(strcpy@d+1)^0,f,c
  6844  002C' CFDF FFE7          	movff	indf2,indf1
  6845  0030' 50E7               	movf	indf1,w,c
  6846  0032' A4D8               	btfss	status,2,c
  6847  0034' EF00' F000'        	goto	u2881
  6848  0038' EF00' F000'        	goto	u2880
  6849  003C'                    u2881:
  6850  003C' FFFF               	dw	65535	; assembler added errata NOP
  6851  003E' EF00' F000'        	goto	l3049
  6852  0042'                    u2880:
  6853  0042' FFFF               	dw	65535	; assembler added errata NOP
  6854  0044' 0012               	return		;funcret
  6855  0046' FFFF               	dw	65535	; errata NOP
  6856  0048'                    __end_of_strcpy:
  6857                           	callstack 0
  6858                           
  6859 ;; *************** function _print_string *****************
  6860 ;; Defined at:
  6861 ;;		line 44 in file "serial.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  strng           2    9[COMRAM] PTR unsigned char 
  6864 ;;		 -> STR_21(21), STR_20(21), STR_19(45), STR_18(10), 
  6865 ;;		 -> STR_17(12), STR_16(70), STR_15(19), STR_14(63), 
  6866 ;;		 -> STR_13(20), STR_12(39), STR_11(37), STR_10(37), 
  6867 ;;		 -> STR_9(38), STR_8(36), STR_7(36), STR_6(52), 
  6868 ;;		 -> STR_5(27), add_component@add_componnt(2), STR_4(40), STR_3(27), 
  6869 ;;		 -> sequence(4), STR_2(21), input_str(10), STR_1(112), 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  i               2   13[COMRAM] int 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6881 ;;      Params:         2       0       0       0       0       0       0
  6882 ;;      Locals:         2       0       0       0       0       0       0
  6883 ;;      Temps:          2       0       0       0       0       0       0
  6884 ;;      Totals:         6       0       0       0       0       0       0
  6885 ;;Total ram usage:        6 bytes
  6886 ;; Hardware stack levels used: 1
  6887 ;; Hardware stack levels required when called: 2
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		_start_up_menu
  6892 ;;		_change_sequence
  6893 ;;		_add_component
  6894 ;;		_remove_component
  6895 ;;		_check_component
  6896 ;;		_pick_and_place
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text24
  6901  0000'                    __ptext24:
  6902                           	callstack 0
  6903  0000'                    _print_string:
  6904                           	callstack 0
  6905  0000' FFFF               	dw	65535	; assembler added errata NOP
  6906  0002'                    
  6907                           ;serial.c: 44: void print_string(char strng[]);serial.c: 45: {;serial.c: 46:     for(int
      +                           i=0; strng[i]!=((void*)0);i++){
  6908  0002' 0E00               	movlw	0
  6909  0004' 6E00'              	movwf	(print_string@i+1)^0,c
  6910  0006' 0E00               	movlw	0
  6911  0008' 6E00'              	movwf	print_string@i^0,c
  6912  000A' EF00' F000'        	goto	l4301
  6913  000E'                    l4297:
  6914  000E' FFFF               	dw	65535	; assembler added errata NOP
  6915                           
  6916                           ;serial.c: 47:         TXREG=strng[i];
  6917  0010' 5000'              	movf	print_string@i^0,w,c
  6918  0012' 2400'              	addwf	print_string@strng^0,w,c
  6919  0014' 6E00'              	movwf	??_print_string^0,c
  6920  0016' 5000'              	movf	(print_string@i+1)^0,w,c
  6921  0018' 2000'              	addwfc	(print_string@strng+1)^0,w,c
  6922  001A' 6E00'              	movwf	(??_print_string+1)^0,c
  6923  001C' C00B' FFF6         	movff	??_print_string,tblptrl
  6924  0020' C00C' FFF7         	movff	??_print_string+1,tblptrh
  6925  0024' 6AF8               	clrf	tblptru,c
  6926  0026' 0EFF'              	movlw	(high __ramtop+-1)
  6927  0028' 64F7               	cpfsgt	tblptrh,c
  6928  002A' D004               	bra	u4737
  6929  002C' 0008               	tblrd		*
  6930  002E' FFFF               	dw	65535	; errata NOP
  6931  0030' 50F5               	movf	tablat,w,c
  6932  0032' D005               	bra	u4730
  6933  0034'                    u4737:
  6934  0034' CFF6 FFE9          	movff	tblptrl,fsr0l
  6935  0038' CFF7 FFEA          	movff	tblptrh,fsr0h
  6936  003C' 50EF               	movf	indf0,w,c
  6937  003E'                    u4730:
  6938  003E' 6EAD               	movwf	173,c	;volatile
  6939  0040'                    l480:
  6940  0040' FFFF               	dw	65535	; assembler added errata NOP
  6941  0042' A2AC               	btfss	172,1,c	;volatile
  6942  0044' EF00' F000'        	goto	u4741
  6943  0048' EF00' F000'        	goto	u4740
  6944  004C'                    u4741:
  6945  004C' FFFF               	dw	65535	; assembler added errata NOP
  6946  004E' EF00' F000'        	goto	l480
  6947  0052'                    u4740:
  6948  0052' FFFF               	dw	65535	; assembler added errata NOP
  6949  0054'                    
  6950                           ;serial.c: 49:     }
  6951  0054' 4A00'              	infsnz	print_string@i^0,f,c
  6952  0056' 2A00'              	incf	(print_string@i+1)^0,f,c
  6953  0058'                    l4301:
  6954  0058' FFFF               	dw	65535	; assembler added errata NOP
  6955  005A' 5000'              	movf	print_string@i^0,w,c
  6956  005C' 2400'              	addwf	print_string@strng^0,w,c
  6957  005E' 6E00'              	movwf	??_print_string^0,c
  6958  0060' 5000'              	movf	(print_string@i+1)^0,w,c
  6959  0062' 2000'              	addwfc	(print_string@strng+1)^0,w,c
  6960  0064' 6E00'              	movwf	(??_print_string+1)^0,c
  6961  0066' C00B' FFF6         	movff	??_print_string,tblptrl
  6962  006A' C00C' FFF7         	movff	??_print_string+1,tblptrh
  6963  006E' 6AF8               	clrf	tblptru,c
  6964  0070' 0EFF'              	movlw	(high __ramtop+-1)
  6965  0072' 64F7               	cpfsgt	tblptrh,c
  6966  0074' D004               	bra	u4757
  6967  0076' 0008               	tblrd		*
  6968  0078' FFFF               	dw	65535	; errata NOP
  6969  007A' 50F5               	movf	tablat,w,c
  6970  007C' D005               	bra	u4750
  6971  007E'                    u4757:
  6972  007E' CFF6 FFE9          	movff	tblptrl,fsr0l
  6973  0082' CFF7 FFEA          	movff	tblptrh,fsr0h
  6974  0086' 50EF               	movf	indf0,w,c
  6975  0088'                    u4750:
  6976  0088' 0900               	iorlw	0
  6977  008A' A4D8               	btfss	status,2,c
  6978  008C' EF00' F000'        	goto	u4761
  6979  0090' EF00' F000'        	goto	u4760
  6980  0094'                    u4761:
  6981  0094' FFFF               	dw	65535	; assembler added errata NOP
  6982  0096' EF00' F000'        	goto	l4297
  6983  009A'                    u4760:
  6984  009A' FFFF               	dw	65535	; assembler added errata NOP
  6985  009C' 0012               	return		;funcret
  6986  009E' FFFF               	dw	65535	; errata NOP
  6987  00A0'                    __end_of_print_string:
  6988                           	callstack 0
  6989                           
  6990 ;; *************** function _atoi *****************
  6991 ;; Defined at:
  6992 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  s               2   16[COMRAM] PTR const unsigned char 
  6995 ;;		 -> input_str(10), 
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  n               2   29[COMRAM] int 
  6998 ;;  neg             2   22[COMRAM] int 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  2   16[COMRAM] int 
  7001 ;; Registers used:
  7002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7008 ;;      Params:         2       0       0       0       0       0       0
  7009 ;;      Locals:         9       0       0       0       0       0       0
  7010 ;;      Temps:          4       0       0       0       0       0       0
  7011 ;;      Totals:        15       0       0       0       0       0       0
  7012 ;;Total ram usage:       15 bytes
  7013 ;; Hardware stack levels used: 1
  7014 ;; Hardware stack levels required when called: 3
  7015 ;; This function calls:
  7016 ;;		___wmul
  7017 ;;		_isdigit
  7018 ;;		_isspace
  7019 ;; This function is called by:
  7020 ;;		_add_component
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           	psect	text25
  7025  0000'                    __ptext25:
  7026                           	callstack 0
  7027  0000'                    _atoi:
  7028                           	callstack 0
  7029  0000' FFFF               	dw	65535	; assembler added errata NOP
  7030  0002' 0E00               	movlw	0
  7031  0004' 6E00'              	movwf	(atoi@n+1)^0,c
  7032  0006' 0E00               	movlw	0
  7033  0008' 6E00'              	movwf	atoi@n^0,c
  7034  000A' 0E00               	movlw	0
  7035  000C' 6E00'              	movwf	(atoi@neg+1)^0,c
  7036  000E' 0E00               	movlw	0
  7037  0010' 6E00'              	movwf	atoi@neg^0,c
  7038  0012' EF00' F000'        	goto	l4331
  7039  0016'                    l4329:
  7040  0016' FFFF               	dw	65535	; assembler added errata NOP
  7041  0018' 4A00'              	infsnz	atoi@s^0,f,c
  7042  001A' 2A00'              	incf	(atoi@s+1)^0,f,c
  7043  001C'                    l4331:
  7044  001C' FFFF               	dw	65535	; assembler added errata NOP
  7045  001E' 0E01               	movlw	1
  7046  0020' 6E00'              	movwf	_atoi$1404^0,c
  7047  0022' C010' FFD9         	movff	atoi@s,fsr2l
  7048  0026' C011' FFDA         	movff	atoi@s+1,fsr2h
  7049  002A' 0E20               	movlw	32
  7050  002C' 18DE               	xorwf	postinc2,w,c
  7051  002E' B4D8               	btfsc	status,2,c
  7052  0030' EF00' F000'        	goto	u4801
  7053  0034' EF00' F000'        	goto	u4800
  7054  0038'                    u4801:
  7055  0038' FFFF               	dw	65535	; assembler added errata NOP
  7056  003A' EF00' F000'        	goto	l4339
  7057  003E'                    u4800:
  7058  003E' FFFF               	dw	65535	; assembler added errata NOP
  7059  0040' 0EF7               	movlw	247
  7060  0042' 6E00'              	movwf	??_atoi^0,c
  7061  0044' 0EFF               	movlw	255
  7062  0046' 6E00'              	movwf	(??_atoi+1)^0,c
  7063  0048' C010' FFD9         	movff	atoi@s,fsr2l
  7064  004C' C011' FFDA         	movff	atoi@s+1,fsr2h
  7065  0050' 50DF               	movf	indf2,w,c
  7066  0052' 6E00'              	movwf	(??_atoi+2)^0,c
  7067  0054' 6A00'              	clrf	(??_atoi+3)^0,c
  7068  0056' 5000'              	movf	??_atoi^0,w,c
  7069  0058' 2600'              	addwf	(??_atoi+2)^0,f,c
  7070  005A' 5000'              	movf	(??_atoi+1)^0,w,c
  7071  005C' 2200'              	addwfc	(??_atoi+3)^0,f,c
  7072  005E' 5000'              	movf	(??_atoi+3)^0,w,c
  7073  0060' E10A               	bnz	u4810
  7074  0062' 0E05               	movlw	5
  7075  0064' 5C00'              	subwf	(??_atoi+2)^0,w,c
  7076  0066' A0D8               	btfss	status,0,c
  7077  0068' EF00' F000'        	goto	u4811
  7078  006C' EF00' F000'        	goto	u4810
  7079  0070'                    u4811:
  7080  0070' FFFF               	dw	65535	; assembler added errata NOP
  7081  0072' EF00' F000'        	goto	l4339
  7082  0076'                    u4810:
  7083  0076' FFFF               	dw	65535	; assembler added errata NOP
  7084  0078' 0E00               	movlw	0
  7085  007A' 6E00'              	movwf	_atoi$1404^0,c
  7086  007C'                    l4339:
  7087  007C' FFFF               	dw	65535	; assembler added errata NOP
  7088  007E' C01C' F018'        	movff	_atoi$1404,_atoi$1403
  7089  0082' 6A00'              	clrf	(_atoi$1403+1)^0,c
  7090  0084' 5000'              	movf	_atoi$1403^0,w,c
  7091  0086' 1000'              	iorwf	(_atoi$1403+1)^0,w,c
  7092  0088' A4D8               	btfss	status,2,c
  7093  008A' EF00' F000'        	goto	u4821
  7094  008E' EF00' F000'        	goto	u4820
  7095  0092'                    u4821:
  7096  0092' FFFF               	dw	65535	; assembler added errata NOP
  7097  0094' EF00' F000'        	goto	l4329
  7098  0098'                    u4820:
  7099  0098' FFFF               	dw	65535	; assembler added errata NOP
  7100  009A' EF00' F000'        	goto	l4349
  7101  009E'                    l4345:
  7102  009E' FFFF               	dw	65535	; assembler added errata NOP
  7103  00A0' 0E00               	movlw	0
  7104  00A2' 6E00'              	movwf	(atoi@neg+1)^0,c
  7105  00A4' 0E01               	movlw	1
  7106  00A6' 6E00'              	movwf	atoi@neg^0,c
  7107  00A8'                    l4347:
  7108  00A8' FFFF               	dw	65535	; assembler added errata NOP
  7109  00AA' 4A00'              	infsnz	atoi@s^0,f,c
  7110  00AC' 2A00'              	incf	(atoi@s+1)^0,f,c
  7111  00AE' EF00' F000'        	goto	l4355
  7112  00B2'                    l4349:
  7113  00B2' FFFF               	dw	65535	; assembler added errata NOP
  7114  00B4' C010' FFD9         	movff	atoi@s,fsr2l
  7115  00B8' C011' FFDA         	movff	atoi@s+1,fsr2h
  7116  00BC' 50DF               	movf	indf2,w,c
  7117  00BE' 6E00'              	movwf	??_atoi^0,c
  7118  00C0' 6A00'              	clrf	(??_atoi+1)^0,c
  7119                           
  7120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7121                           ; Switch size 1, requested type "simple"
  7122                           ; Number of cases is 1, Range of values is 0 to 0
  7123                           ; switch strategies available:
  7124                           ; Name         Instructions Cycles
  7125                           ; simple_byte            4     3 (average)
  7126                           ;	Chosen strategy is simple_byte
  7127  00C2' 5000'              	movf	(??_atoi+1)^0,w,c
  7128  00C4' 0A00               	xorlw	0	; case 0
  7129  00C6' B4D8               	btfsc	status,2,c
  7130  00C8' EF00' F000'        	goto	l5323
  7131  00CC' EF00' F000'        	goto	l4355
  7132  00D0'                    l5323:
  7133  00D0' FFFF               	dw	65535	; assembler added errata NOP
  7134                           
  7135                           ; Switch size 1, requested type "simple"
  7136                           ; Number of cases is 2, Range of values is 43 to 45
  7137                           ; switch strategies available:
  7138                           ; Name         Instructions Cycles
  7139                           ; simple_byte            7     4 (average)
  7140                           ;	Chosen strategy is simple_byte
  7141  00D2' 5000'              	movf	??_atoi^0,w,c
  7142  00D4' 0A2B               	xorlw	43	; case 43
  7143  00D6' B4D8               	btfsc	status,2,c
  7144  00D8' EF00' F000'        	goto	l4347
  7145  00DC' 0A06               	xorlw	6	; case 45
  7146  00DE' B4D8               	btfsc	status,2,c
  7147  00E0' EF00' F000'        	goto	l4345
  7148  00E4' EF00' F000'        	goto	l4355
  7149  00E8'                    l4351:
  7150  00E8' FFFF               	dw	65535	; assembler added errata NOP
  7151  00EA' C01D' F009'        	movff	atoi@n,___wmul@multiplier
  7152  00EE' C01E' F00A'        	movff	atoi@n+1,___wmul@multiplier+1
  7153  00F2' 0E00               	movlw	0
  7154  00F4' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  7155  00F6' 0E0A               	movlw	10
  7156  00F8' 6E00'              	movwf	___wmul@multiplicand^0,c
  7157  00FA' EC00' F000'        	call	___wmul	;wreg free
  7158  00FE' C010' FFD9         	movff	atoi@s,fsr2l
  7159  0102' C011' FFDA         	movff	atoi@s+1,fsr2h
  7160  0106' 50DF               	movf	indf2,w,c
  7161  0108' 6E00'              	movwf	??_atoi^0,c
  7162  010A' 5000'              	movf	??_atoi^0,w,c
  7163  010C' 5E00'              	subwf	?___wmul^0,f,c
  7164  010E' 0E00               	movlw	0
  7165  0110' 5A00'              	subwfb	(?___wmul+1)^0,f,c
  7166  0112' 0E30               	movlw	48
  7167  0114' 2400'              	addwf	?___wmul^0,w,c
  7168  0116' 6E00'              	movwf	atoi@n^0,c
  7169  0118' 0E00               	movlw	0
  7170  011A' 2000'              	addwfc	(?___wmul+1)^0,w,c
  7171  011C' 6E00'              	movwf	(atoi@n+1)^0,c
  7172  011E' EF00' F000'        	goto	l4347
  7173  0122'                    l4355:
  7174  0122' FFFF               	dw	65535	; assembler added errata NOP
  7175  0124' 0ED0               	movlw	208
  7176  0126' 6E00'              	movwf	??_atoi^0,c
  7177  0128' 0EFF               	movlw	255
  7178  012A' 6E00'              	movwf	(??_atoi+1)^0,c
  7179  012C' C010' FFD9         	movff	atoi@s,fsr2l
  7180  0130' C011' FFDA         	movff	atoi@s+1,fsr2h
  7181  0134' 50DF               	movf	indf2,w,c
  7182  0136' 6E00'              	movwf	(??_atoi+2)^0,c
  7183  0138' 6A00'              	clrf	(??_atoi+3)^0,c
  7184  013A' 5000'              	movf	??_atoi^0,w,c
  7185  013C' 2600'              	addwf	(??_atoi+2)^0,f,c
  7186  013E' 5000'              	movf	(??_atoi+1)^0,w,c
  7187  0140' 2200'              	addwfc	(??_atoi+3)^0,f,c
  7188  0142' 5000'              	movf	(??_atoi+3)^0,w,c
  7189  0144' E10B               	bnz	u4830
  7190  0146' 0E0A               	movlw	10
  7191  0148' 5C00'              	subwf	(??_atoi+2)^0,w,c
  7192  014A' A0D8               	btfss	status,0,c
  7193  014C' EF00' F000'        	goto	u4831
  7194  0150' EF00' F000'        	goto	u4830
  7195  0154'                    u4831:
  7196  0154' FFFF               	dw	65535	; assembler added errata NOP
  7197  0156' 0E01               	movlw	1
  7198  0158' EF00' F000'        	goto	u4840
  7199  015C'                    u4830:
  7200  015C' FFFF               	dw	65535	; assembler added errata NOP
  7201  015E' 0E00               	movlw	0
  7202  0160'                    u4840:
  7203  0160' FFFF               	dw	65535	; assembler added errata NOP
  7204  0162' 6E00'              	movwf	_atoi$1405^0,c
  7205  0164' 6A00'              	clrf	(_atoi$1405+1)^0,c
  7206  0166' 5000'              	movf	_atoi$1405^0,w,c
  7207  0168' 1000'              	iorwf	(_atoi$1405+1)^0,w,c
  7208  016A' A4D8               	btfss	status,2,c
  7209  016C' EF00' F000'        	goto	u4851
  7210  0170' EF00' F000'        	goto	u4850
  7211  0174'                    u4851:
  7212  0174' FFFF               	dw	65535	; assembler added errata NOP
  7213  0176' EF00' F000'        	goto	l4351
  7214  017A'                    u4850:
  7215  017A' FFFF               	dw	65535	; assembler added errata NOP
  7216  017C' 5000'              	movf	atoi@neg^0,w,c
  7217  017E' 1000'              	iorwf	(atoi@neg+1)^0,w,c
  7218  0180' A4D8               	btfss	status,2,c
  7219  0182' EF00' F000'        	goto	u4861
  7220  0186' EF00' F000'        	goto	u4860
  7221  018A'                    u4861:
  7222  018A' FFFF               	dw	65535	; assembler added errata NOP
  7223  018C' EF00' F000'        	goto	l1192
  7224  0190'                    u4860:
  7225  0190' FFFF               	dw	65535	; assembler added errata NOP
  7226  0192' C01D' F012'        	movff	atoi@n,??_atoi
  7227  0196' C01E' F013'        	movff	atoi@n+1,??_atoi+1
  7228  019A' 1E00'              	comf	??_atoi^0,f,c
  7229  019C' 1E00'              	comf	(??_atoi+1)^0,f,c
  7230  019E' 4A00'              	infsnz	??_atoi^0,f,c
  7231  01A0' 2A00'              	incf	(??_atoi+1)^0,f,c
  7232  01A2' C012' F010'        	movff	??_atoi,?_atoi
  7233  01A6' C013' F011'        	movff	??_atoi+1,?_atoi+1
  7234  01AA' EF00' F000'        	goto	l1195
  7235  01AE'                    l1192:
  7236  01AE' FFFF               	dw	65535	; assembler added errata NOP
  7237  01B0' C01D' F010'        	movff	atoi@n,?_atoi
  7238  01B4' C01E' F011'        	movff	atoi@n+1,?_atoi+1
  7239  01B8'                    l1195:
  7240  01B8' FFFF               	dw	65535	; assembler added errata NOP
  7241  01BA' 0012               	return		;funcret
  7242  01BC' FFFF               	dw	65535	; errata NOP
  7243  01BE'                    __end_of_atoi:
  7244                           	callstack 0
  7245                           
  7246 ;; *************** function _isspace *****************
  7247 ;; Defined at:
  7248 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  c               2    9[COMRAM] int 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  2    9[COMRAM] int 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7262 ;;      Params:         2       0       0       0       0       0       0
  7263 ;;      Locals:         1       0       0       0       0       0       0
  7264 ;;      Temps:          4       0       0       0       0       0       0
  7265 ;;      Totals:         7       0       0       0       0       0       0
  7266 ;;Total ram usage:        7 bytes
  7267 ;; Hardware stack levels used: 1
  7268 ;; Hardware stack levels required when called: 2
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		_atoi
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           	psect	text26
  7277  0000'                    __ptext26:
  7278                           	callstack 0
  7279  0000'                    _isspace:
  7280                           	callstack 25
  7281  0000' FFFF               	dw	65535	; assembler added errata NOP
  7282  0002' 0E01               	movlw	1
  7283  0004' 6E00'              	movwf	_isspace$1421^0,c
  7284  0006' 0E20               	movlw	32
  7285  0008' 1800'              	xorwf	isspace@c^0,w,c
  7286  000A' 1000'              	iorwf	(isspace@c+1)^0,w,c
  7287  000C' B4D8               	btfsc	status,2,c
  7288  000E' EF00' F000'        	goto	u2841
  7289  0012' EF00' F000'        	goto	u2840
  7290  0016'                    u2841:
  7291  0016' FFFF               	dw	65535	; assembler added errata NOP
  7292  0018' EF00' F000'        	goto	l3039
  7293  001C'                    u2840:
  7294  001C' FFFF               	dw	65535	; assembler added errata NOP
  7295  001E' 0EF7               	movlw	247
  7296  0020' 6E00'              	movwf	??_isspace^0,c
  7297  0022' 0EFF               	movlw	255
  7298  0024' 6E00'              	movwf	(??_isspace+1)^0,c
  7299  0026' C009' F00D'        	movff	isspace@c,??_isspace+2
  7300  002A' C00A' F00E'        	movff	isspace@c+1,??_isspace+3
  7301  002E' 5000'              	movf	??_isspace^0,w,c
  7302  0030' 2600'              	addwf	(??_isspace+2)^0,f,c
  7303  0032' 5000'              	movf	(??_isspace+1)^0,w,c
  7304  0034' 2200'              	addwfc	(??_isspace+3)^0,f,c
  7305  0036' 5000'              	movf	(??_isspace+3)^0,w,c
  7306  0038' E10A               	bnz	u2850
  7307  003A' 0E05               	movlw	5
  7308  003C' 5C00'              	subwf	(??_isspace+2)^0,w,c
  7309  003E' A0D8               	btfss	status,0,c
  7310  0040' EF00' F000'        	goto	u2851
  7311  0044' EF00' F000'        	goto	u2850
  7312  0048'                    u2851:
  7313  0048' FFFF               	dw	65535	; assembler added errata NOP
  7314  004A' EF00' F000'        	goto	l3039
  7315  004E'                    u2850:
  7316  004E' FFFF               	dw	65535	; assembler added errata NOP
  7317  0050' 0E00               	movlw	0
  7318  0052' 6E00'              	movwf	_isspace$1421^0,c
  7319  0054'                    l3039:
  7320  0054' FFFF               	dw	65535	; assembler added errata NOP
  7321  0056' C00F' F009'        	movff	_isspace$1421,?_isspace
  7322  005A' 6A00'              	clrf	(?_isspace+1)^0,c
  7323  005C' 0012               	return		;funcret
  7324  005E' FFFF               	dw	65535	; errata NOP
  7325  0060'                    __end_of_isspace:
  7326                           	callstack 0
  7327                           
  7328 ;; *************** function _isdigit *****************
  7329 ;; Defined at:
  7330 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;  c               2    9[COMRAM] int 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;		None
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  2    9[COMRAM] int 
  7337 ;; Registers used:
  7338 ;;		wreg, status,2, status,0
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7344 ;;      Params:         2       0       0       0       0       0       0
  7345 ;;      Locals:         0       0       0       0       0       0       0
  7346 ;;      Temps:          4       0       0       0       0       0       0
  7347 ;;      Totals:         6       0       0       0       0       0       0
  7348 ;;Total ram usage:        6 bytes
  7349 ;; Hardware stack levels used: 1
  7350 ;; Hardware stack levels required when called: 2
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_atoi
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text27
  7359  0000'                    __ptext27:
  7360                           	callstack 0
  7361  0000'                    _isdigit:
  7362                           	callstack 25
  7363  0000' FFFF               	dw	65535	; assembler added errata NOP
  7364  0002' 0ED0               	movlw	208
  7365  0004' 6E00'              	movwf	??_isdigit^0,c
  7366  0006' 0EFF               	movlw	255
  7367  0008' 6E00'              	movwf	(??_isdigit+1)^0,c
  7368  000A' C009' F00D'        	movff	isdigit@c,??_isdigit+2
  7369  000E' C00A' F00E'        	movff	isdigit@c+1,??_isdigit+3
  7370  0012' 5000'              	movf	??_isdigit^0,w,c
  7371  0014' 2600'              	addwf	(??_isdigit+2)^0,f,c
  7372  0016' 5000'              	movf	(??_isdigit+1)^0,w,c
  7373  0018' 2200'              	addwfc	(??_isdigit+3)^0,f,c
  7374  001A' 5000'              	movf	(??_isdigit+3)^0,w,c
  7375  001C' E10B               	bnz	u2860
  7376  001E' 0E0A               	movlw	10
  7377  0020' 5C00'              	subwf	(??_isdigit+2)^0,w,c
  7378  0022' A0D8               	btfss	status,0,c
  7379  0024' EF00' F000'        	goto	u2861
  7380  0028' EF00' F000'        	goto	u2860
  7381  002C'                    u2861:
  7382  002C' FFFF               	dw	65535	; assembler added errata NOP
  7383  002E' 0E01               	movlw	1
  7384  0030' EF00' F000'        	goto	u2870
  7385  0034'                    u2860:
  7386  0034' FFFF               	dw	65535	; assembler added errata NOP
  7387  0036' 0E00               	movlw	0
  7388  0038'                    u2870:
  7389  0038' FFFF               	dw	65535	; assembler added errata NOP
  7390  003A' 6E00'              	movwf	?_isdigit^0,c
  7391  003C' 6A00'              	clrf	(?_isdigit+1)^0,c
  7392  003E' 0012               	return		;funcret
  7393  0040' FFFF               	dw	65535	; errata NOP
  7394  0042'                    __end_of_isdigit:
  7395                           	callstack 0
  7396                           
  7397 ;; *************** function ___wmul *****************
  7398 ;; Defined at:
  7399 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  multiplier      2    9[COMRAM] unsigned int 
  7402 ;;  multiplicand    2   11[COMRAM] unsigned int 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  product         2   13[COMRAM] unsigned int 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  2    9[COMRAM] unsigned int 
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0, prodl, prodh
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7414 ;;      Params:         4       0       0       0       0       0       0
  7415 ;;      Locals:         2       0       0       0       0       0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0
  7417 ;;      Totals:         6       0       0       0       0       0       0
  7418 ;;Total ram usage:        6 bytes
  7419 ;; Hardware stack levels used: 1
  7420 ;; Hardware stack levels required when called: 2
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_pick_and_place
  7425 ;;		_atoi
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           	psect	text28
  7430  0000'                    __ptext28:
  7431                           	callstack 0
  7432  0000'                    ___wmul:
  7433                           	callstack 0
  7434  0000' FFFF               	dw	65535	; assembler added errata NOP
  7435  0002' 5000'              	movf	___wmul@multiplier^0,w,c
  7436  0004' 0200'              	mulwf	___wmul@multiplicand^0,c
  7437  0006' CFF3 F00D'         	movff	prodl,___wmul@product
  7438  000A' CFF4 F00E'         	movff	prodh,___wmul@product+1
  7439  000E' 5000'              	movf	___wmul@multiplier^0,w,c
  7440  0010' 0200'              	mulwf	(___wmul@multiplicand+1)^0,c
  7441  0012' 50F3               	movf	243,w,c
  7442  0014' 2600'              	addwf	(___wmul@product+1)^0,f,c
  7443  0016' 5000'              	movf	(___wmul@multiplier+1)^0,w,c
  7444  0018' 0200'              	mulwf	___wmul@multiplicand^0,c
  7445  001A' 50F3               	movf	243,w,c
  7446  001C' 2600'              	addwf	(___wmul@product+1)^0,f,c
  7447  001E' C00D' F009'        	movff	___wmul@product,?___wmul
  7448  0022' C00E' F00A'        	movff	___wmul@product+1,?___wmul+1
  7449  0026' 0012               	return		;funcret
  7450  0028' FFFF               	dw	65535	; errata NOP
  7451  002A'                    __end_of___wmul:
  7452                           	callstack 0
  7453                           
  7454 ;; *************** function _init_interrupts *****************
  7455 ;; Defined at:
  7456 ;;		line 71 in file "init_PIC.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;		None
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;		None
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      void 
  7463 ;; Registers used:
  7464 ;;		wreg, status,2
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7470 ;;      Params:         0       0       0       0       0       0       0
  7471 ;;      Locals:         0       0       0       0       0       0       0
  7472 ;;      Temps:          0       0       0       0       0       0       0
  7473 ;;      Totals:         0       0       0       0       0       0       0
  7474 ;;Total ram usage:        0 bytes
  7475 ;; Hardware stack levels used: 1
  7476 ;; Hardware stack levels required when called: 2
  7477 ;; This function calls:
  7478 ;;		Nothing
  7479 ;; This function is called by:
  7480 ;;		_main
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text29
  7485  0000'                    __ptext29:
  7486                           	callstack 0
  7487  0000'                    _init_interrupts:
  7488                           	callstack 0
  7489  0000' FFFF               	dw	65535	; assembler added errata NOP
  7490  0002'                    
  7491                           ;init_PIC.c: 73:     PIR1bits.RCIF = 0;
  7492  0002' 9A9E               	bcf	158,5,c	;volatile
  7493                           
  7494                           ;init_PIC.c: 74:  PIE1bits.RCIE = 1;
  7495  0004' 8A9D               	bsf	157,5,c	;volatile
  7496                           
  7497                           ;init_PIC.c: 75:  INTCONbits.PEIE = 1;
  7498  0006' 8CF2               	bsf	242,6,c	;volatile
  7499                           
  7500                           ;init_PIC.c: 77:     PIE1bits.TMR1IE = 1;
  7501  0008' 809D               	bsf	157,0,c	;volatile
  7502                           
  7503                           ;init_PIC.c: 78:     INTCONbits.TMR0IE = 1;
  7504  000A' 8AF2               	bsf	242,5,c	;volatile
  7505  000C'                    
  7506                           ;init_PIC.c: 80:     INTCON2=0x00;
  7507  000C' 0E00               	movlw	0
  7508  000E' 6EF1               	movwf	241,c	;volatile
  7509                           
  7510                           ;init_PIC.c: 82:     INTCON3=0x00;
  7511  0010' 0E00               	movlw	0
  7512  0012' 6EF0               	movwf	240,c	;volatile
  7513  0014'                    
  7514                           ;init_PIC.c: 83:     INTCONbits.INT0IF=0;
  7515  0014' 92F2               	bcf	242,1,c	;volatile
  7516  0016'                    
  7517                           ;init_PIC.c: 84:     INTCONbits.INT0IE=1;
  7518  0016' 88F2               	bsf	242,4,c	;volatile
  7519  0018'                    
  7520                           ;init_PIC.c: 85:     INTCON3bits.INT1IF=0;
  7521  0018' 90F0               	bcf	240,0,c	;volatile
  7522  001A'                    
  7523                           ;init_PIC.c: 86:     INTCON3bits.INT1IE=1;
  7524  001A' 86F0               	bsf	240,3,c	;volatile
  7525  001C' 0012               	return		;funcret
  7526  001E' FFFF               	dw	65535	; errata NOP
  7527  0020'                    __end_of_init_interrupts:
  7528                           	callstack 0
  7529                           
  7530 ;; *************** function _init_USART *****************
  7531 ;; Defined at:
  7532 ;;		line 17 in file "serial.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;		None
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;		None
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  1    wreg      void 
  7539 ;; Registers used:
  7540 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7541 ;; Tracked objects:
  7542 ;;		On entry : 0/0
  7543 ;;		On exit  : 0/0
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7546 ;;      Params:         0       0       0       0       0       0       0
  7547 ;;      Locals:         0       0       0       0       0       0       0
  7548 ;;      Temps:          0       0       0       0       0       0       0
  7549 ;;      Totals:         0       0       0       0       0       0       0
  7550 ;;Total ram usage:        0 bytes
  7551 ;; Hardware stack levels used: 1
  7552 ;; Hardware stack levels required when called: 5
  7553 ;; This function calls:
  7554 ;;		___fltol
  7555 ;;		_roundf
  7556 ;; This function is called by:
  7557 ;;		_main
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           	psect	text30
  7562  0000'                    __ptext30:
  7563                           	callstack 0
  7564  0000'                    _init_USART:
  7565                           	callstack 0
  7566  0000' FFFF               	dw	65535	; assembler added errata NOP
  7567  0002'                    
  7568                           ;serial.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  7569  0002' 0E55               	movlw	85
  7570  0004' 6E00'              	movwf	roundf@x^0,c
  7571  0006' 0E55               	movlw	85
  7572  0008' 6E00'              	movwf	(roundf@x+1)^0,c
  7573  000A' 0EC8               	movlw	200
  7574  000C' 6E00'              	movwf	(roundf@x+2)^0,c
  7575  000E' 0E41               	movlw	65
  7576  0010' 6E00'              	movwf	(roundf@x+3)^0,c
  7577  0012' EC00' F000'        	call	_roundf	;wreg free
  7578  0016' C03C' F056'        	movff	?_roundf,___fltol@f1
  7579  001A' C03D' F057'        	movff	?_roundf+1,___fltol@f1+1
  7580  001E' C03E' F058'        	movff	?_roundf+2,___fltol@f1+2
  7581  0022' C03F' F059'        	movff	?_roundf+3,___fltol@f1+3
  7582  0026' EC00' F000'        	call	___fltol	;wreg free
  7583  002A' 5000'              	movf	?___fltol^0,w,c
  7584  002C' 6EAF               	movwf	175,c	;volatile
  7585  002E'                    
  7586                           ;serial.c: 35:  TXSTAbits.TX9=0;
  7587  002E' 9CAC               	bcf	172,6,c	;volatile
  7588  0030'                    
  7589                           ;serial.c: 36:     TXSTAbits.TXEN=1;
  7590  0030' 8AAC               	bsf	172,5,c	;volatile
  7591  0032'                    
  7592                           ;serial.c: 37:     TXSTAbits.SYNC=0;
  7593  0032' 98AC               	bcf	172,4,c	;volatile
  7594  0034'                    
  7595                           ;serial.c: 38:     TXSTAbits.BRGH=1;
  7596  0034' 84AC               	bsf	172,2,c	;volatile
  7597  0036'                    
  7598                           ;serial.c: 39:     RCSTAbits.SPEN=1;
  7599  0036' 8EAB               	bsf	171,7,c	;volatile
  7600  0038'                    
  7601                           ;serial.c: 40:     RCSTAbits.RX9=0;
  7602  0038' 9CAB               	bcf	171,6,c	;volatile
  7603  003A'                    
  7604                           ;serial.c: 41:     RCSTAbits.CREN=1;
  7605  003A' 88AB               	bsf	171,4,c	;volatile
  7606  003C' 0012               	return		;funcret
  7607  003E' FFFF               	dw	65535	; errata NOP
  7608  0040'                    __end_of_init_USART:
  7609                           	callstack 0
  7610                           
  7611 ;; *************** function _roundf *****************
  7612 ;; Defined at:
  7613 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;  x               4   60[COMRAM] float 
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;  y               4   82[COMRAM] float 
  7618 ;;  u               4   78[COMRAM] struct .
  7619 ;;  e               2   72[COMRAM] int 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  4   60[COMRAM] float 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7629 ;;      Params:         4       0       0       0       0       0       0
  7630 ;;      Locals:        18       0       0       0       0       0       0
  7631 ;;      Temps:          4       0       0       0       0       0       0
  7632 ;;      Totals:        26       0       0       0       0       0       0
  7633 ;;Total ram usage:       26 bytes
  7634 ;; Hardware stack levels used: 1
  7635 ;; Hardware stack levels required when called: 4
  7636 ;; This function calls:
  7637 ;;		___fladd
  7638 ;;		___flge
  7639 ;;		___flmul
  7640 ;;		___flneg
  7641 ;;		___flsub
  7642 ;; This function is called by:
  7643 ;;		_init_USART
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text31
  7648  0000'                    __ptext31:
  7649                           	callstack 0
  7650  0000'                    _roundf:
  7651                           	callstack 0
  7652  0000' FFFF               	dw	65535	; assembler added errata NOP
  7653  0002' C000' F04E'        	movff	roundf@F528,roundf@u
  7654  0006' C001' F04F'        	movff	roundf@F528+1,roundf@u+1
  7655  000A' C002' F050'        	movff	roundf@F528+2,roundf@u+2
  7656  000E' C003' F051'        	movff	roundf@F528+3,roundf@u+3
  7657  0012' C03C' F04E'        	movff	roundf@x,roundf@u
  7658  0016' C03D' F04F'        	movff	roundf@x+1,roundf@u+1
  7659  001A' C03E' F050'        	movff	roundf@x+2,roundf@u+2
  7660  001E' C03F' F051'        	movff	roundf@x+3,roundf@u+3
  7661  0022' C04E' F040'        	movff	roundf@u,??_roundf
  7662  0026' C04F' F041'        	movff	roundf@u+1,??_roundf+1
  7663  002A' C050' F042'        	movff	roundf@u+2,??_roundf+2
  7664  002E' C051' F043'        	movff	roundf@u+3,??_roundf+3
  7665  0032' 0E18               	movlw	24
  7666  0034' EF00' F000'        	goto	u6030
  7667  0038'                    u6035:
  7668  0038' FFFF               	dw	65535	; assembler added errata NOP
  7669  003A' 90D8               	bcf	status,0,c
  7670  003C' 3200'              	rrcf	(??_roundf+3)^0,f,c
  7671  003E' 3200'              	rrcf	(??_roundf+2)^0,f,c
  7672  0040' 3200'              	rrcf	(??_roundf+1)^0,f,c
  7673  0042' 3200'              	rrcf	??_roundf^0,f,c
  7674  0044'                    u6030:
  7675  0044' FFFF               	dw	65535	; assembler added errata NOP
  7676  0046' 2EE8               	decfsz	wreg,f,c
  7677  0048' EF00' F000'        	goto	u6035
  7678  004C' 5000'              	movf	??_roundf^0,w,c
  7679  004E' 6E00'              	movwf	roundf@e^0,c
  7680  0050' 6A00'              	clrf	(roundf@e+1)^0,c
  7681  0052' BE00'              	btfsc	(roundf@e+1)^0,7,c
  7682  0054' EF00' F000'        	goto	u6041
  7683  0058' 5000'              	movf	(roundf@e+1)^0,w,c
  7684  005A' E10A               	bnz	u6040
  7685  005C' 0E96               	movlw	150
  7686  005E' 5C00'              	subwf	roundf@e^0,w,c
  7687  0060' A0D8               	btfss	status,0,c
  7688  0062' EF00' F000'        	goto	u6041
  7689  0066' EF00' F000'        	goto	u6040
  7690  006A'                    u6041:
  7691  006A' FFFF               	dw	65535	; assembler added errata NOP
  7692  006C' EF00' F000'        	goto	l5127
  7693  0070'                    u6040:
  7694  0070' FFFF               	dw	65535	; assembler added errata NOP
  7695  0072' C03C' F03C'        	movff	roundf@x,?_roundf
  7696  0076' C03D' F03D'        	movff	roundf@x+1,?_roundf+1
  7697  007A' C03E' F03E'        	movff	roundf@x+2,?_roundf+2
  7698  007E' C03F' F03F'        	movff	roundf@x+3,?_roundf+3
  7699  0082' EF00' F000'        	goto	l1227
  7700  0086'                    l5127:
  7701  0086' FFFF               	dw	65535	; assembler added errata NOP
  7702  0088' C04E' F040'        	movff	roundf@u,??_roundf
  7703  008C' C04F' F041'        	movff	roundf@u+1,??_roundf+1
  7704  0090' C050' F042'        	movff	roundf@u+2,??_roundf+2
  7705  0094' C051' F043'        	movff	roundf@u+3,??_roundf+3
  7706  0098' 0E20               	movlw	32
  7707  009A' EF00' F000'        	goto	u6050
  7708  009E'                    u6055:
  7709  009E' FFFF               	dw	65535	; assembler added errata NOP
  7710  00A0' 90D8               	bcf	status,0,c
  7711  00A2' 3200'              	rrcf	(??_roundf+3)^0,f,c
  7712  00A4' 3200'              	rrcf	(??_roundf+2)^0,f,c
  7713  00A6' 3200'              	rrcf	(??_roundf+1)^0,f,c
  7714  00A8' 3200'              	rrcf	??_roundf^0,f,c
  7715  00AA'                    u6050:
  7716  00AA' FFFF               	dw	65535	; assembler added errata NOP
  7717  00AC' 2EE8               	decfsz	wreg,f,c
  7718  00AE' EF00' F000'        	goto	u6055
  7719  00B2' 5000'              	movf	??_roundf^0,w,c
  7720  00B4' 1000'              	iorwf	(??_roundf+1)^0,w,c
  7721  00B6' 1000'              	iorwf	(??_roundf+2)^0,w,c
  7722  00B8' 1000'              	iorwf	(??_roundf+3)^0,w,c
  7723  00BA' B4D8               	btfsc	status,2,c
  7724  00BC' EF00' F000'        	goto	u6061
  7725  00C0' EF00' F000'        	goto	u6060
  7726  00C4'                    u6061:
  7727  00C4' FFFF               	dw	65535	; assembler added errata NOP
  7728  00C6' EF00' F000'        	goto	l5131
  7729  00CA'                    u6060:
  7730  00CA' FFFF               	dw	65535	; assembler added errata NOP
  7731  00CC' C03C' F009'        	movff	roundf@x,___flneg@f1
  7732  00D0' C03D' F00A'        	movff	roundf@x+1,___flneg@f1+1
  7733  00D4' C03E' F00B'        	movff	roundf@x+2,___flneg@f1+2
  7734  00D8' C03F' F00C'        	movff	roundf@x+3,___flneg@f1+3
  7735  00DC' EC00' F000'        	call	___flneg	;wreg free
  7736  00E0' C009' F03C'        	movff	?___flneg,roundf@x
  7737  00E4' C00A' F03D'        	movff	?___flneg+1,roundf@x+1
  7738  00E8' C00B' F03E'        	movff	?___flneg+2,roundf@x+2
  7739  00EC' C00C' F03F'        	movff	?___flneg+3,roundf@x+3
  7740  00F0'                    l5131:
  7741  00F0' FFFF               	dw	65535	; assembler added errata NOP
  7742  00F2' BE00'              	btfsc	(roundf@e+1)^0,7,c
  7743  00F4' EF00' F000'        	goto	u6070
  7744  00F8' 5000'              	movf	(roundf@e+1)^0,w,c
  7745  00FA' E107               	bnz	u6071
  7746  00FC' 0E7E               	movlw	126
  7747  00FE' 5C00'              	subwf	roundf@e^0,w,c
  7748  0100' B0D8               	btfsc	status,0,c
  7749  0102' EF00' F000'        	goto	u6071
  7750  0106' EF00' F000'        	goto	u6070
  7751  010A'                    u6071:
  7752  010A' FFFF               	dw	65535	; assembler added errata NOP
  7753  010C' EF00' F000'        	goto	l5137
  7754  0110'                    u6070:
  7755  0110' FFFF               	dw	65535	; assembler added errata NOP
  7756  0112' C04E' F009'        	movff	roundf@u,___flmul@b
  7757  0116' C04F' F00A'        	movff	roundf@u+1,___flmul@b+1
  7758  011A' C050' F00B'        	movff	roundf@u+2,___flmul@b+2
  7759  011E' C051' F00C'        	movff	roundf@u+3,___flmul@b+3
  7760  0122' 0E00               	movlw	0
  7761  0124' 6E00'              	movwf	___flmul@a^0,c
  7762  0126' 0E00               	movlw	0
  7763  0128' 6E00'              	movwf	(___flmul@a+1)^0,c
  7764  012A' 0E00               	movlw	0
  7765  012C' 6E00'              	movwf	(___flmul@a+2)^0,c
  7766  012E' 0E00               	movlw	0
  7767  0130' 6E00'              	movwf	(___flmul@a+3)^0,c
  7768  0132' EC00' F000'        	call	___flmul	;wreg free
  7769  0136' C009' F03C'        	movff	?___flmul,?_roundf
  7770  013A' C00A' F03D'        	movff	?___flmul+1,?_roundf+1
  7771  013E' C00B' F03E'        	movff	?___flmul+2,?_roundf+2
  7772  0142' C00C' F03F'        	movff	?___flmul+3,?_roundf+3
  7773  0146' EF00' F000'        	goto	l1227
  7774  014A'                    l5137:
  7775  014A' FFFF               	dw	65535	; assembler added errata NOP
  7776  014C' 0E00               	movlw	0
  7777  014E' 6E00'              	movwf	___fladd@a^0,c
  7778  0150' 0E00               	movlw	0
  7779  0152' 6E00'              	movwf	(___fladd@a+1)^0,c
  7780  0154' 0E00               	movlw	0
  7781  0156' 6E00'              	movwf	(___fladd@a+2)^0,c
  7782  0158' 0E4B               	movlw	75
  7783  015A' 6E00'              	movwf	(___fladd@a+3)^0,c
  7784  015C' C03C' F009'        	movff	roundf@x,___fladd@b
  7785  0160' C03D' F00A'        	movff	roundf@x+1,___fladd@b+1
  7786  0164' C03E' F00B'        	movff	roundf@x+2,___fladd@b+2
  7787  0168' C03F' F00C'        	movff	roundf@x+3,___fladd@b+3
  7788  016C' EC00' F000'        	call	___fladd	;wreg free
  7789  0170' C009' F04A'        	movff	?___fladd,_roundf$1683
  7790  0174' C00A' F04B'        	movff	?___fladd+1,_roundf$1683+1
  7791  0178' C00B' F04C'        	movff	?___fladd+2,_roundf$1683+2
  7792  017C' C00C' F04D'        	movff	?___fladd+3,_roundf$1683+3
  7793  0180' 0E00               	movlw	0
  7794  0182' 6E00'              	movwf	___fladd@a^0,c
  7795  0184' 0E00               	movlw	0
  7796  0186' 6E00'              	movwf	(___fladd@a+1)^0,c
  7797  0188' 0E00               	movlw	0
  7798  018A' 6E00'              	movwf	(___fladd@a+2)^0,c
  7799  018C' 0ECB               	movlw	203
  7800  018E' 6E00'              	movwf	(___fladd@a+3)^0,c
  7801  0190' C04A' F009'        	movff	_roundf$1683,___fladd@b
  7802  0194' C04B' F00A'        	movff	_roundf$1683+1,___fladd@b+1
  7803  0198' C04C' F00B'        	movff	_roundf$1683+2,___fladd@b+2
  7804  019C' C04D' F00C'        	movff	_roundf$1683+3,___fladd@b+3
  7805  01A0' EC00' F000'        	call	___fladd	;wreg free
  7806  01A4' C009' F044'        	movff	?___fladd,_roundf$1684
  7807  01A8' C00A' F045'        	movff	?___fladd+1,_roundf$1684+1
  7808  01AC' C00B' F046'        	movff	?___fladd+2,_roundf$1684+2
  7809  01B0' C00C' F047'        	movff	?___fladd+3,_roundf$1684+3
  7810  01B4' C044' F019'        	movff	_roundf$1684,___flsub@b
  7811  01B8' C045' F01A'        	movff	_roundf$1684+1,___flsub@b+1
  7812  01BC' C046' F01B'        	movff	_roundf$1684+2,___flsub@b+2
  7813  01C0' C047' F01C'        	movff	_roundf$1684+3,___flsub@b+3
  7814  01C4' C03C' F01D'        	movff	roundf@x,___flsub@a
  7815  01C8' C03D' F01E'        	movff	roundf@x+1,___flsub@a+1
  7816  01CC' C03E' F01F'        	movff	roundf@x+2,___flsub@a+2
  7817  01D0' C03F' F020'        	movff	roundf@x+3,___flsub@a+3
  7818  01D4' EC00' F000'        	call	___flsub	;wreg free
  7819  01D8' C019' F052'        	movff	?___flsub,roundf@y
  7820  01DC' C01A' F053'        	movff	?___flsub+1,roundf@y+1
  7821  01E0' C01B' F054'        	movff	?___flsub+2,roundf@y+2
  7822  01E4' C01C' F055'        	movff	?___flsub+3,roundf@y+3
  7823  01E8' 0E00               	movlw	0
  7824  01EA' 6E00'              	movwf	___flge@ff1^0,c
  7825  01EC' 0E00               	movlw	0
  7826  01EE' 6E00'              	movwf	(___flge@ff1+1)^0,c
  7827  01F0' 0E00               	movlw	0
  7828  01F2' 6E00'              	movwf	(___flge@ff1+2)^0,c
  7829  01F4' 0E3F               	movlw	63
  7830  01F6' 6E00'              	movwf	(___flge@ff1+3)^0,c
  7831  01F8' C052' F034'        	movff	roundf@y,___flge@ff2
  7832  01FC' C053' F035'        	movff	roundf@y+1,___flge@ff2+1
  7833  0200' C054' F036'        	movff	roundf@y+2,___flge@ff2+2
  7834  0204' C055' F037'        	movff	roundf@y+3,___flge@ff2+3
  7835  0208' EC00' F000'        	call	___flge	;wreg free
  7836  020C' B0D8               	btfsc	status,0,c
  7837  020E' EF00' F000'        	goto	u6081
  7838  0212' EF00' F000'        	goto	u6080
  7839  0216'                    u6081:
  7840  0216' FFFF               	dw	65535	; assembler added errata NOP
  7841  0218' EF00' F000'        	goto	l5141
  7842  021C'                    u6080:
  7843  021C' FFFF               	dw	65535	; assembler added errata NOP
  7844  021E' C03C' F00D'        	movff	roundf@x,___fladd@a
  7845  0222' C03D' F00E'        	movff	roundf@x+1,___fladd@a+1
  7846  0226' C03E' F00F'        	movff	roundf@x+2,___fladd@a+2
  7847  022A' C03F' F010'        	movff	roundf@x+3,___fladd@a+3
  7848  022E' C052' F009'        	movff	roundf@y,___fladd@b
  7849  0232' C053' F00A'        	movff	roundf@y+1,___fladd@b+1
  7850  0236' C054' F00B'        	movff	roundf@y+2,___fladd@b+2
  7851  023A' C055' F00C'        	movff	roundf@y+3,___fladd@b+3
  7852  023E' EC00' F000'        	call	___fladd	;wreg free
  7853  0242' C009' F04A'        	movff	?___fladd,_roundf$1683
  7854  0246' C00A' F04B'        	movff	?___fladd+1,_roundf$1683+1
  7855  024A' C00B' F04C'        	movff	?___fladd+2,_roundf$1683+2
  7856  024E' C00C' F04D'        	movff	?___fladd+3,_roundf$1683+3
  7857  0252' C04A' F009'        	movff	_roundf$1683,___fladd@b
  7858  0256' C04B' F00A'        	movff	_roundf$1683+1,___fladd@b+1
  7859  025A' C04C' F00B'        	movff	_roundf$1683+2,___fladd@b+2
  7860  025E' C04D' F00C'        	movff	_roundf$1683+3,___fladd@b+3
  7861  0262' 0E00               	movlw	0
  7862  0264' 6E00'              	movwf	___fladd@a^0,c
  7863  0266' 0E00               	movlw	0
  7864  0268' 6E00'              	movwf	(___fladd@a+1)^0,c
  7865  026A' 0E80               	movlw	128
  7866  026C' 6E00'              	movwf	(___fladd@a+2)^0,c
  7867  026E' 0EBF               	movlw	191
  7868  0270' 6E00'              	movwf	(___fladd@a+3)^0,c
  7869  0272' EC00' F000'        	call	___fladd	;wreg free
  7870  0276' C009' F052'        	movff	?___fladd,roundf@y
  7871  027A' C00A' F053'        	movff	?___fladd+1,roundf@y+1
  7872  027E' C00B' F054'        	movff	?___fladd+2,roundf@y+2
  7873  0282' C00C' F055'        	movff	?___fladd+3,roundf@y+3
  7874  0286' EF00' F000'        	goto	l5147
  7875  028A'                    l5141:
  7876  028A' FFFF               	dw	65535	; assembler added errata NOP
  7877  028C' 0E00               	movlw	0
  7878  028E' 6E00'              	movwf	___flge@ff1^0,c
  7879  0290' 0E00               	movlw	0
  7880  0292' 6E00'              	movwf	(___flge@ff1+1)^0,c
  7881  0294' 0E00               	movlw	0
  7882  0296' 6E00'              	movwf	(___flge@ff1+2)^0,c
  7883  0298' 0EBF               	movlw	191
  7884  029A' 6E00'              	movwf	(___flge@ff1+3)^0,c
  7885  029C' C052' F034'        	movff	roundf@y,___flge@ff2
  7886  02A0' C053' F035'        	movff	roundf@y+1,___flge@ff2+1
  7887  02A4' C054' F036'        	movff	roundf@y+2,___flge@ff2+2
  7888  02A8' C055' F037'        	movff	roundf@y+3,___flge@ff2+3
  7889  02AC' EC00' F000'        	call	___flge	;wreg free
  7890  02B0' A0D8               	btfss	status,0,c
  7891  02B2' EF00' F000'        	goto	u6091
  7892  02B6' EF00' F000'        	goto	u6090
  7893  02BA'                    u6091:
  7894  02BA' FFFF               	dw	65535	; assembler added errata NOP
  7895  02BC' EF00' F000'        	goto	l5145
  7896  02C0'                    u6090:
  7897  02C0' FFFF               	dw	65535	; assembler added errata NOP
  7898  02C2' C03C' F00D'        	movff	roundf@x,___fladd@a
  7899  02C6' C03D' F00E'        	movff	roundf@x+1,___fladd@a+1
  7900  02CA' C03E' F00F'        	movff	roundf@x+2,___fladd@a+2
  7901  02CE' C03F' F010'        	movff	roundf@x+3,___fladd@a+3
  7902  02D2' C052' F009'        	movff	roundf@y,___fladd@b
  7903  02D6' C053' F00A'        	movff	roundf@y+1,___fladd@b+1
  7904  02DA' C054' F00B'        	movff	roundf@y+2,___fladd@b+2
  7905  02DE' C055' F00C'        	movff	roundf@y+3,___fladd@b+3
  7906  02E2' EC00' F000'        	call	___fladd	;wreg free
  7907  02E6' C009' F04A'        	movff	?___fladd,_roundf$1683
  7908  02EA' C00A' F04B'        	movff	?___fladd+1,_roundf$1683+1
  7909  02EE' C00B' F04C'        	movff	?___fladd+2,_roundf$1683+2
  7910  02F2' C00C' F04D'        	movff	?___fladd+3,_roundf$1683+3
  7911  02F6' C04A' F009'        	movff	_roundf$1683,___fladd@b
  7912  02FA' C04B' F00A'        	movff	_roundf$1683+1,___fladd@b+1
  7913  02FE' C04C' F00B'        	movff	_roundf$1683+2,___fladd@b+2
  7914  0302' C04D' F00C'        	movff	_roundf$1683+3,___fladd@b+3
  7915  0306' 0E00               	movlw	0
  7916  0308' 6E00'              	movwf	___fladd@a^0,c
  7917  030A' 0E00               	movlw	0
  7918  030C' 6E00'              	movwf	(___fladd@a+1)^0,c
  7919  030E' 0E80               	movlw	128
  7920  0310' 6E00'              	movwf	(___fladd@a+2)^0,c
  7921  0312' 0E3F               	movlw	63
  7922  0314' 6E00'              	movwf	(___fladd@a+3)^0,c
  7923  0316' EC00' F000'        	call	___fladd	;wreg free
  7924  031A' C009' F052'        	movff	?___fladd,roundf@y
  7925  031E' C00A' F053'        	movff	?___fladd+1,roundf@y+1
  7926  0322' C00B' F054'        	movff	?___fladd+2,roundf@y+2
  7927  0326' C00C' F055'        	movff	?___fladd+3,roundf@y+3
  7928  032A' EF00' F000'        	goto	l5147
  7929  032E'                    l5145:
  7930  032E' FFFF               	dw	65535	; assembler added errata NOP
  7931  0330' C052' F009'        	movff	roundf@y,___fladd@b
  7932  0334' C053' F00A'        	movff	roundf@y+1,___fladd@b+1
  7933  0338' C054' F00B'        	movff	roundf@y+2,___fladd@b+2
  7934  033C' C055' F00C'        	movff	roundf@y+3,___fladd@b+3
  7935  0340' C03C' F00D'        	movff	roundf@x,___fladd@a
  7936  0344' C03D' F00E'        	movff	roundf@x+1,___fladd@a+1
  7937  0348' C03E' F00F'        	movff	roundf@x+2,___fladd@a+2
  7938  034C' C03F' F010'        	movff	roundf@x+3,___fladd@a+3
  7939  0350' EC00' F000'        	call	___fladd	;wreg free
  7940  0354' C009' F052'        	movff	?___fladd,roundf@y
  7941  0358' C00A' F053'        	movff	?___fladd+1,roundf@y+1
  7942  035C' C00B' F054'        	movff	?___fladd+2,roundf@y+2
  7943  0360' C00C' F055'        	movff	?___fladd+3,roundf@y+3
  7944  0364'                    l5147:
  7945  0364' FFFF               	dw	65535	; assembler added errata NOP
  7946  0366' C04E' F040'        	movff	roundf@u,??_roundf
  7947  036A' C04F' F041'        	movff	roundf@u+1,??_roundf+1
  7948  036E' C050' F042'        	movff	roundf@u+2,??_roundf+2
  7949  0372' C051' F043'        	movff	roundf@u+3,??_roundf+3
  7950  0376' 0E20               	movlw	32
  7951  0378' EF00' F000'        	goto	u6100
  7952  037C'                    u6105:
  7953  037C' FFFF               	dw	65535	; assembler added errata NOP
  7954  037E' 90D8               	bcf	status,0,c
  7955  0380' 3200'              	rrcf	(??_roundf+3)^0,f,c
  7956  0382' 3200'              	rrcf	(??_roundf+2)^0,f,c
  7957  0384' 3200'              	rrcf	(??_roundf+1)^0,f,c
  7958  0386' 3200'              	rrcf	??_roundf^0,f,c
  7959  0388'                    u6100:
  7960  0388' FFFF               	dw	65535	; assembler added errata NOP
  7961  038A' 2EE8               	decfsz	wreg,f,c
  7962  038C' EF00' F000'        	goto	u6105
  7963  0390' 5000'              	movf	??_roundf^0,w,c
  7964  0392' 1000'              	iorwf	(??_roundf+1)^0,w,c
  7965  0394' 1000'              	iorwf	(??_roundf+2)^0,w,c
  7966  0396' 1000'              	iorwf	(??_roundf+3)^0,w,c
  7967  0398' B4D8               	btfsc	status,2,c
  7968  039A' EF00' F000'        	goto	u6111
  7969  039E' EF00' F000'        	goto	u6110
  7970  03A2'                    u6111:
  7971  03A2' FFFF               	dw	65535	; assembler added errata NOP
  7972  03A4' EF00' F000'        	goto	l5151
  7973  03A8'                    u6110:
  7974  03A8' FFFF               	dw	65535	; assembler added errata NOP
  7975  03AA' C052' F009'        	movff	roundf@y,___flneg@f1
  7976  03AE' C053' F00A'        	movff	roundf@y+1,___flneg@f1+1
  7977  03B2' C054' F00B'        	movff	roundf@y+2,___flneg@f1+2
  7978  03B6' C055' F00C'        	movff	roundf@y+3,___flneg@f1+3
  7979  03BA' EC00' F000'        	call	___flneg	;wreg free
  7980  03BE' C009' F052'        	movff	?___flneg,roundf@y
  7981  03C2' C00A' F053'        	movff	?___flneg+1,roundf@y+1
  7982  03C6' C00B' F054'        	movff	?___flneg+2,roundf@y+2
  7983  03CA' C00C' F055'        	movff	?___flneg+3,roundf@y+3
  7984  03CE'                    l5151:
  7985  03CE' FFFF               	dw	65535	; assembler added errata NOP
  7986  03D0' C052' F03C'        	movff	roundf@y,?_roundf
  7987  03D4' C053' F03D'        	movff	roundf@y+1,?_roundf+1
  7988  03D8' C054' F03E'        	movff	roundf@y+2,?_roundf+2
  7989  03DC' C055' F03F'        	movff	roundf@y+3,?_roundf+3
  7990  03E0'                    l1227:
  7991  03E0' FFFF               	dw	65535	; assembler added errata NOP
  7992  03E2' 0012               	return		;funcret
  7993  03E4' FFFF               	dw	65535	; errata NOP
  7994  03E6'                    __end_of_roundf:
  7995                           	callstack 0
  7996                           
  7997 ;; *************** function ___flsub *****************
  7998 ;; Defined at:
  7999 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  b               4   25[COMRAM] float 
  8002 ;;  a               4   29[COMRAM] float 
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;		None
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  4   25[COMRAM] float 
  8007 ;; Registers used:
  8008 ;;		wreg, status,2, status,0, cstack
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8014 ;;      Params:         8       0       0       0       0       0       0
  8015 ;;      Locals:         0       0       0       0       0       0       0
  8016 ;;      Temps:          0       0       0       0       0       0       0
  8017 ;;      Totals:         8       0       0       0       0       0       0
  8018 ;;Total ram usage:        8 bytes
  8019 ;; Hardware stack levels used: 1
  8020 ;; Hardware stack levels required when called: 3
  8021 ;; This function calls:
  8022 ;;		___fladd
  8023 ;; This function is called by:
  8024 ;;		_roundf
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           	psect	text32
  8029  0000'                    __ptext32:
  8030                           	callstack 0
  8031  0000'                    ___flsub:
  8032                           	callstack 0
  8033  0000' FFFF               	dw	65535	; assembler added errata NOP
  8034  0002' 0E00               	movlw	0
  8035  0004' 1A00'              	xorwf	___flsub@a^0,f,c
  8036  0006' 0E00               	movlw	0
  8037  0008' 1A00'              	xorwf	(___flsub@a+1)^0,f,c
  8038  000A' 0E00               	movlw	0
  8039  000C' 1A00'              	xorwf	(___flsub@a+2)^0,f,c
  8040  000E' 0E80               	movlw	128
  8041  0010' 1A00'              	xorwf	(___flsub@a+3)^0,f,c
  8042  0012' C019' F009'        	movff	___flsub@b,___fladd@b
  8043  0016' C01A' F00A'        	movff	___flsub@b+1,___fladd@b+1
  8044  001A' C01B' F00B'        	movff	___flsub@b+2,___fladd@b+2
  8045  001E' C01C' F00C'        	movff	___flsub@b+3,___fladd@b+3
  8046  0022' C01D' F00D'        	movff	___flsub@a,___fladd@a
  8047  0026' C01E' F00E'        	movff	___flsub@a+1,___fladd@a+1
  8048  002A' C01F' F00F'        	movff	___flsub@a+2,___fladd@a+2
  8049  002E' C020' F010'        	movff	___flsub@a+3,___fladd@a+3
  8050  0032' EC00' F000'        	call	___fladd	;wreg free
  8051  0036' C009' F019'        	movff	?___fladd,?___flsub
  8052  003A' C00A' F01A'        	movff	?___fladd+1,?___flsub+1
  8053  003E' C00B' F01B'        	movff	?___fladd+2,?___flsub+2
  8054  0042' C00C' F01C'        	movff	?___fladd+3,?___flsub+3
  8055  0046' 0012               	return		;funcret
  8056  0048' FFFF               	dw	65535	; errata NOP
  8057  004A'                    __end_of___flsub:
  8058                           	callstack 0
  8059                           
  8060 ;; *************** function ___fladd *****************
  8061 ;; Defined at:
  8062 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  b               4    9[COMRAM] float 
  8065 ;;  a               4   13[COMRAM] float 
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  grs             1   24[COMRAM] unsigned char 
  8068 ;;  bexp            1   23[COMRAM] unsigned char 
  8069 ;;  aexp            1   22[COMRAM] unsigned char 
  8070 ;;  signs           1   21[COMRAM] unsigned char 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  4    9[COMRAM] unsigned char 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8080 ;;      Params:         8       0       0       0       0       0       0
  8081 ;;      Locals:         4       0       0       0       0       0       0
  8082 ;;      Temps:          4       0       0       0       0       0       0
  8083 ;;      Totals:        16       0       0       0       0       0       0
  8084 ;;Total ram usage:       16 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 2
  8087 ;; This function calls:
  8088 ;;		Nothing
  8089 ;; This function is called by:
  8090 ;;		___flsub
  8091 ;;		_roundf
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           	psect	text33
  8096  0000'                    __ptext33:
  8097                           	callstack 0
  8098  0000'                    ___fladd:
  8099                           	callstack 0
  8100  0000' FFFF               	dw	65535	; assembler added errata NOP
  8101  0002' 5000'              	movf	(___fladd@b+3)^0,w,c
  8102  0004' 0B80               	andlw	128
  8103  0006' 6E00'              	movwf	___fladd@signs^0,c
  8104  0008' 5000'              	movf	(___fladd@b+3)^0,w,c
  8105  000A' 2400'              	addwf	(___fladd@b+3)^0,w,c
  8106  000C' 6E00'              	movwf	___fladd@bexp^0,c
  8107  000E' AE00'              	btfss	(___fladd@b+2)^0,7,c
  8108  0010' EF00' F000'        	goto	u2451
  8109  0014' EF00' F000'        	goto	u2450
  8110  0018'                    u2451:
  8111  0018' FFFF               	dw	65535	; assembler added errata NOP
  8112  001A' EF00' F000'        	goto	l2835
  8113  001E'                    u2450:
  8114  001E' FFFF               	dw	65535	; assembler added errata NOP
  8115  0020' 8000'              	bsf	___fladd@bexp^0,0,c
  8116  0022'                    l2835:
  8117  0022' FFFF               	dw	65535	; assembler added errata NOP
  8118  0024' 5000'              	movf	___fladd@bexp^0,w,c
  8119  0026' B4D8               	btfsc	status,2,c
  8120  0028' EF00' F000'        	goto	u2461
  8121  002C' EF00' F000'        	goto	u2460
  8122  0030'                    u2461:
  8123  0030' FFFF               	dw	65535	; assembler added errata NOP
  8124  0032' EF00' F000'        	goto	l2845
  8125  0036'                    u2460:
  8126  0036' FFFF               	dw	65535	; assembler added errata NOP
  8127  0038' 2800'              	incf	___fladd@bexp^0,w,c
  8128  003A' A4D8               	btfss	status,2,c
  8129  003C' EF00' F000'        	goto	u2471
  8130  0040' EF00' F000'        	goto	u2470
  8131  0044'                    u2471:
  8132  0044' FFFF               	dw	65535	; assembler added errata NOP
  8133  0046' EF00' F000'        	goto	l2841
  8134  004A'                    u2470:
  8135  004A' FFFF               	dw	65535	; assembler added errata NOP
  8136  004C' 0E00               	movlw	0
  8137  004E' 6E00'              	movwf	___fladd@b^0,c
  8138  0050' 0E00               	movlw	0
  8139  0052' 6E00'              	movwf	(___fladd@b+1)^0,c
  8140  0054' 0E00               	movlw	0
  8141  0056' 6E00'              	movwf	(___fladd@b+2)^0,c
  8142  0058' 0E00               	movlw	0
  8143  005A' 6E00'              	movwf	(___fladd@b+3)^0,c
  8144  005C'                    l2841:
  8145  005C' FFFF               	dw	65535	; assembler added errata NOP
  8146  005E' 8E00'              	bsf	(___fladd@b+2)^0,7,c
  8147  0060' 0E00               	movlw	0
  8148  0062' 6E00'              	movwf	(___fladd@b+3)^0,c
  8149  0064' EF00' F000'        	goto	l2847
  8150  0068'                    l2845:
  8151  0068' FFFF               	dw	65535	; assembler added errata NOP
  8152  006A' 0E00               	movlw	0
  8153  006C' 6E00'              	movwf	___fladd@b^0,c
  8154  006E' 0E00               	movlw	0
  8155  0070' 6E00'              	movwf	(___fladd@b+1)^0,c
  8156  0072' 0E00               	movlw	0
  8157  0074' 6E00'              	movwf	(___fladd@b+2)^0,c
  8158  0076' 0E00               	movlw	0
  8159  0078' 6E00'              	movwf	(___fladd@b+3)^0,c
  8160  007A'                    l2847:
  8161  007A' FFFF               	dw	65535	; assembler added errata NOP
  8162  007C' 5000'              	movf	(___fladd@a+3)^0,w,c
  8163  007E' 0B80               	andlw	128
  8164  0080' 6E00'              	movwf	___fladd@aexp^0,c
  8165  0082' 5000'              	movf	___fladd@signs^0,w,c
  8166  0084' 1800'              	xorwf	___fladd@aexp^0,w,c
  8167  0086' B4D8               	btfsc	status,2,c
  8168  0088' EF00' F000'        	goto	u2481
  8169  008C' EF00' F000'        	goto	u2480
  8170  0090'                    u2481:
  8171  0090' FFFF               	dw	65535	; assembler added errata NOP
  8172  0092' EF00' F000'        	goto	l2853
  8173  0096'                    u2480:
  8174  0096' FFFF               	dw	65535	; assembler added errata NOP
  8175  0098' 8C00'              	bsf	___fladd@signs^0,6,c
  8176  009A'                    l2853:
  8177  009A' FFFF               	dw	65535	; assembler added errata NOP
  8178  009C' 5000'              	movf	(___fladd@a+3)^0,w,c
  8179  009E' 2400'              	addwf	(___fladd@a+3)^0,w,c
  8180  00A0' 6E00'              	movwf	___fladd@aexp^0,c
  8181  00A2' AE00'              	btfss	(___fladd@a+2)^0,7,c
  8182  00A4' EF00' F000'        	goto	u2491
  8183  00A8' EF00' F000'        	goto	u2490
  8184  00AC'                    u2491:
  8185  00AC' FFFF               	dw	65535	; assembler added errata NOP
  8186  00AE' EF00' F000'        	goto	l2859
  8187  00B2'                    u2490:
  8188  00B2' FFFF               	dw	65535	; assembler added errata NOP
  8189  00B4' 8000'              	bsf	___fladd@aexp^0,0,c
  8190  00B6'                    l2859:
  8191  00B6' FFFF               	dw	65535	; assembler added errata NOP
  8192  00B8' 5000'              	movf	___fladd@aexp^0,w,c
  8193  00BA' B4D8               	btfsc	status,2,c
  8194  00BC' EF00' F000'        	goto	u2501
  8195  00C0' EF00' F000'        	goto	u2500
  8196  00C4'                    u2501:
  8197  00C4' FFFF               	dw	65535	; assembler added errata NOP
  8198  00C6' EF00' F000'        	goto	l2869
  8199  00CA'                    u2500:
  8200  00CA' FFFF               	dw	65535	; assembler added errata NOP
  8201  00CC' 2800'              	incf	___fladd@aexp^0,w,c
  8202  00CE' A4D8               	btfss	status,2,c
  8203  00D0' EF00' F000'        	goto	u2511
  8204  00D4' EF00' F000'        	goto	u2510
  8205  00D8'                    u2511:
  8206  00D8' FFFF               	dw	65535	; assembler added errata NOP
  8207  00DA' EF00' F000'        	goto	l2865
  8208  00DE'                    u2510:
  8209  00DE' FFFF               	dw	65535	; assembler added errata NOP
  8210  00E0' 0E00               	movlw	0
  8211  00E2' 6E00'              	movwf	___fladd@a^0,c
  8212  00E4' 0E00               	movlw	0
  8213  00E6' 6E00'              	movwf	(___fladd@a+1)^0,c
  8214  00E8' 0E00               	movlw	0
  8215  00EA' 6E00'              	movwf	(___fladd@a+2)^0,c
  8216  00EC' 0E00               	movlw	0
  8217  00EE' 6E00'              	movwf	(___fladd@a+3)^0,c
  8218  00F0'                    l2865:
  8219  00F0' FFFF               	dw	65535	; assembler added errata NOP
  8220  00F2' 8E00'              	bsf	(___fladd@a+2)^0,7,c
  8221  00F4' 0E00               	movlw	0
  8222  00F6' 6E00'              	movwf	(___fladd@a+3)^0,c
  8223  00F8' EF00' F000'        	goto	l2871
  8224  00FC'                    l2869:
  8225  00FC' FFFF               	dw	65535	; assembler added errata NOP
  8226  00FE' 0E00               	movlw	0
  8227  0100' 6E00'              	movwf	___fladd@a^0,c
  8228  0102' 0E00               	movlw	0
  8229  0104' 6E00'              	movwf	(___fladd@a+1)^0,c
  8230  0106' 0E00               	movlw	0
  8231  0108' 6E00'              	movwf	(___fladd@a+2)^0,c
  8232  010A' 0E00               	movlw	0
  8233  010C' 6E00'              	movwf	(___fladd@a+3)^0,c
  8234  010E'                    l2871:
  8235  010E' FFFF               	dw	65535	; assembler added errata NOP
  8236  0110' 5000'              	movf	___fladd@bexp^0,w,c
  8237  0112' 5C00'              	subwf	___fladd@aexp^0,w,c
  8238  0114' B0D8               	btfsc	status,0,c
  8239  0116' EF00' F000'        	goto	u2521
  8240  011A' EF00' F000'        	goto	u2520
  8241  011E'                    u2521:
  8242  011E' FFFF               	dw	65535	; assembler added errata NOP
  8243  0120' EF00' F000'        	goto	l2907
  8244  0124'                    u2520:
  8245  0124' FFFF               	dw	65535	; assembler added errata NOP
  8246  0126' AC00'              	btfss	___fladd@signs^0,6,c
  8247  0128' EF00' F000'        	goto	u2531
  8248  012C' EF00' F000'        	goto	u2530
  8249  0130'                    u2531:
  8250  0130' FFFF               	dw	65535	; assembler added errata NOP
  8251  0132' EF00' F000'        	goto	l2877
  8252  0136'                    u2530:
  8253  0136' FFFF               	dw	65535	; assembler added errata NOP
  8254  0138' 0E80               	movlw	128
  8255  013A' 1A00'              	xorwf	___fladd@signs^0,f,c
  8256  013C'                    l2877:
  8257  013C' FFFF               	dw	65535	; assembler added errata NOP
  8258  013E' C017' F018'        	movff	___fladd@bexp,___fladd@grs
  8259  0142' C016' F017'        	movff	___fladd@aexp,___fladd@bexp
  8260  0146' C018' F016'        	movff	___fladd@grs,___fladd@aexp
  8261  014A' C009' F018'        	movff	___fladd@b,___fladd@grs
  8262  014E' C00D' F009'        	movff	___fladd@a,___fladd@b
  8263  0152' C018' F00D'        	movff	___fladd@grs,___fladd@a
  8264  0156' C00A' F018'        	movff	___fladd@b+1,___fladd@grs
  8265  015A' C00E' F00A'        	movff	___fladd@a+1,___fladd@b+1
  8266  015E' C018' F00E'        	movff	___fladd@grs,___fladd@a+1
  8267  0162' C00B' F018'        	movff	___fladd@b+2,___fladd@grs
  8268  0166' C00F' F00B'        	movff	___fladd@a+2,___fladd@b+2
  8269  016A' C018' F00F'        	movff	___fladd@grs,___fladd@a+2
  8270  016E' C00C' F018'        	movff	___fladd@b+3,___fladd@grs
  8271  0172' C010' F00C'        	movff	___fladd@a+3,___fladd@b+3
  8272  0176' C018' F010'        	movff	___fladd@grs,___fladd@a+3
  8273  017A'                    l2907:
  8274  017A' FFFF               	dw	65535	; assembler added errata NOP
  8275  017C' 0E00               	movlw	0
  8276  017E' 6E00'              	movwf	___fladd@grs^0,c
  8277  0180' 5000'              	movf	___fladd@bexp^0,w,c
  8278  0182' C016' F011'        	movff	___fladd@aexp,??___fladd
  8279  0186' 6A00'              	clrf	(??___fladd+1)^0,c
  8280  0188' 5E00'              	subwf	??___fladd^0,f,c
  8281  018A' 0E00               	movlw	0
  8282  018C' 5A00'              	subwfb	(??___fladd+1)^0,f,c
  8283  018E' BE00'              	btfsc	(??___fladd+1)^0,7,c
  8284  0190' EF00' F000'        	goto	u2541
  8285  0194' 5000'              	movf	(??___fladd+1)^0,w,c
  8286  0196' E10A               	bnz	u2540
  8287  0198' 0E1A               	movlw	26
  8288  019A' 5C00'              	subwf	??___fladd^0,w,c
  8289  019C' A0D8               	btfss	status,0,c
  8290  019E' EF00' F000'        	goto	u2541
  8291  01A2' EF00' F000'        	goto	u2540
  8292  01A6'                    u2541:
  8293  01A6' FFFF               	dw	65535	; assembler added errata NOP
  8294  01A8' EF00' F000'        	goto	l1022
  8295  01AC'                    u2540:
  8296  01AC' FFFF               	dw	65535	; assembler added errata NOP
  8297  01AE' 5000'              	movf	___fladd@b^0,w,c
  8298  01B0' 1000'              	iorwf	(___fladd@b+1)^0,w,c
  8299  01B2' 1000'              	iorwf	(___fladd@b+2)^0,w,c
  8300  01B4' 1000'              	iorwf	(___fladd@b+3)^0,w,c
  8301  01B6' A4D8               	btfss	status,2,c
  8302  01B8' EF00' F000'        	goto	u2551
  8303  01BC' EF00' F000'        	goto	u2550
  8304  01C0'                    u2551:
  8305  01C0' FFFF               	dw	65535	; assembler added errata NOP
  8306  01C2' 0E01               	movlw	1
  8307  01C4' EF00' F000'        	goto	u2560
  8308  01C8'                    u2550:
  8309  01C8' FFFF               	dw	65535	; assembler added errata NOP
  8310  01CA' 0E00               	movlw	0
  8311  01CC'                    u2560:
  8312  01CC' FFFF               	dw	65535	; assembler added errata NOP
  8313  01CE' 6E00'              	movwf	___fladd@grs^0,c
  8314  01D0' 0E00               	movlw	0
  8315  01D2' 6E00'              	movwf	___fladd@b^0,c
  8316  01D4' 0E00               	movlw	0
  8317  01D6' 6E00'              	movwf	(___fladd@b+1)^0,c
  8318  01D8' 0E00               	movlw	0
  8319  01DA' 6E00'              	movwf	(___fladd@b+2)^0,c
  8320  01DC' 0E00               	movlw	0
  8321  01DE' 6E00'              	movwf	(___fladd@b+3)^0,c
  8322  01E0' C016' F017'        	movff	___fladd@aexp,___fladd@bexp
  8323  01E4' EF00' F000'        	goto	l1021
  8324  01E8'                    l1023:
  8325  01E8' FFFF               	dw	65535	; assembler added errata NOP
  8326  01EA' A000'              	btfss	___fladd@grs^0,0,c
  8327  01EC' EF00' F000'        	goto	u2571
  8328  01F0' EF00' F000'        	goto	u2570
  8329  01F4'                    u2571:
  8330  01F4' FFFF               	dw	65535	; assembler added errata NOP
  8331  01F6' EF00' F000'        	goto	l2919
  8332  01FA'                    u2570:
  8333  01FA' FFFF               	dw	65535	; assembler added errata NOP
  8334  01FC' 90D8               	bcf	status,0,c
  8335  01FE' 3000'              	rrcf	___fladd@grs^0,w,c
  8336  0200' 0901               	iorlw	1
  8337  0202' 6E00'              	movwf	___fladd@grs^0,c
  8338  0204' EF00' F000'        	goto	l2921
  8339  0208'                    l2919:
  8340  0208' FFFF               	dw	65535	; assembler added errata NOP
  8341  020A' 90D8               	bcf	status,0,c
  8342  020C' 3200'              	rrcf	___fladd@grs^0,f,c
  8343  020E'                    l2921:
  8344  020E' FFFF               	dw	65535	; assembler added errata NOP
  8345  0210' A000'              	btfss	___fladd@b^0,0,c
  8346  0212' EF00' F000'        	goto	u2581
  8347  0216' EF00' F000'        	goto	u2580
  8348  021A'                    u2581:
  8349  021A' FFFF               	dw	65535	; assembler added errata NOP
  8350  021C' EF00' F000'        	goto	l2925
  8351  0220'                    u2580:
  8352  0220' FFFF               	dw	65535	; assembler added errata NOP
  8353  0222' 8E00'              	bsf	___fladd@grs^0,7,c
  8354  0224'                    l2925:
  8355  0224' FFFF               	dw	65535	; assembler added errata NOP
  8356  0226' 3400'              	rlcf	(___fladd@b+3)^0,w,c
  8357  0228' 3200'              	rrcf	(___fladd@b+3)^0,f,c
  8358  022A' 3200'              	rrcf	(___fladd@b+2)^0,f,c
  8359  022C' 3200'              	rrcf	(___fladd@b+1)^0,f,c
  8360  022E' 3200'              	rrcf	___fladd@b^0,f,c
  8361  0230' 2A00'              	incf	___fladd@bexp^0,f,c
  8362  0232'                    l1022:
  8363  0232' FFFF               	dw	65535	; assembler added errata NOP
  8364  0234' 5000'              	movf	___fladd@aexp^0,w,c
  8365  0236' 5C00'              	subwf	___fladd@bexp^0,w,c
  8366  0238' A0D8               	btfss	status,0,c
  8367  023A' EF00' F000'        	goto	u2591
  8368  023E' EF00' F000'        	goto	u2590
  8369  0242'                    u2591:
  8370  0242' FFFF               	dw	65535	; assembler added errata NOP
  8371  0244' EF00' F000'        	goto	l1023
  8372  0248'                    u2590:
  8373  0248'                    l1021:
  8374  0248' FFFF               	dw	65535	; assembler added errata NOP
  8375  024A' BC00'              	btfsc	___fladd@signs^0,6,c
  8376  024C' EF00' F000'        	goto	u2601
  8377  0250' EF00' F000'        	goto	u2600
  8378  0254'                    u2601:
  8379  0254' FFFF               	dw	65535	; assembler added errata NOP
  8380  0256' EF00' F000'        	goto	l2953
  8381  025A'                    u2600:
  8382  025A' FFFF               	dw	65535	; assembler added errata NOP
  8383  025C' 5000'              	movf	___fladd@bexp^0,w,c
  8384  025E' A4D8               	btfss	status,2,c
  8385  0260' EF00' F000'        	goto	u2611
  8386  0264' EF00' F000'        	goto	u2610
  8387  0268'                    u2611:
  8388  0268' FFFF               	dw	65535	; assembler added errata NOP
  8389  026A' EF00' F000'        	goto	l2935
  8390  026E'                    u2610:
  8391  026E' FFFF               	dw	65535	; assembler added errata NOP
  8392  0270' 0E00               	movlw	0
  8393  0272' 6E00'              	movwf	?___fladd^0,c
  8394  0274' 0E00               	movlw	0
  8395  0276' 6E00'              	movwf	(?___fladd+1)^0,c
  8396  0278' 0E00               	movlw	0
  8397  027A' 6E00'              	movwf	(?___fladd+2)^0,c
  8398  027C' 0E00               	movlw	0
  8399  027E' 6E00'              	movwf	(?___fladd+3)^0,c
  8400  0280' EF00' F000'        	goto	l1030
  8401  0284'                    l2935:
  8402  0284' FFFF               	dw	65535	; assembler added errata NOP
  8403  0286' 5000'              	movf	___fladd@a^0,w,c
  8404  0288' 2600'              	addwf	___fladd@b^0,f,c
  8405  028A' 5000'              	movf	(___fladd@a+1)^0,w,c
  8406  028C' 2200'              	addwfc	(___fladd@b+1)^0,f,c
  8407  028E' 5000'              	movf	(___fladd@a+2)^0,w,c
  8408  0290' 2200'              	addwfc	(___fladd@b+2)^0,f,c
  8409  0292' 5000'              	movf	(___fladd@a+3)^0,w,c
  8410  0294' 2200'              	addwfc	(___fladd@b+3)^0,f,c
  8411  0296' A000'              	btfss	(___fladd@b+3)^0,0,c
  8412  0298' EF00' F000'        	goto	u2621
  8413  029C' EF00' F000'        	goto	u2620
  8414  02A0'                    u2621:
  8415  02A0' FFFF               	dw	65535	; assembler added errata NOP
  8416  02A2' EF00' F000'        	goto	l2989
  8417  02A6'                    u2620:
  8418  02A6' FFFF               	dw	65535	; assembler added errata NOP
  8419  02A8' A000'              	btfss	___fladd@grs^0,0,c
  8420  02AA' EF00' F000'        	goto	u2631
  8421  02AE' EF00' F000'        	goto	u2630
  8422  02B2'                    u2631:
  8423  02B2' FFFF               	dw	65535	; assembler added errata NOP
  8424  02B4' EF00' F000'        	goto	l2943
  8425  02B8'                    u2630:
  8426  02B8' FFFF               	dw	65535	; assembler added errata NOP
  8427  02BA' 90D8               	bcf	status,0,c
  8428  02BC' 3000'              	rrcf	___fladd@grs^0,w,c
  8429  02BE' 0901               	iorlw	1
  8430  02C0' 6E00'              	movwf	___fladd@grs^0,c
  8431  02C2' EF00' F000'        	goto	l2945
  8432  02C6'                    l2943:
  8433  02C6' FFFF               	dw	65535	; assembler added errata NOP
  8434  02C8' 90D8               	bcf	status,0,c
  8435  02CA' 3200'              	rrcf	___fladd@grs^0,f,c
  8436  02CC'                    l2945:
  8437  02CC' FFFF               	dw	65535	; assembler added errata NOP
  8438  02CE' A000'              	btfss	___fladd@b^0,0,c
  8439  02D0' EF00' F000'        	goto	u2641
  8440  02D4' EF00' F000'        	goto	u2640
  8441  02D8'                    u2641:
  8442  02D8' FFFF               	dw	65535	; assembler added errata NOP
  8443  02DA' EF00' F000'        	goto	l2949
  8444  02DE'                    u2640:
  8445  02DE' FFFF               	dw	65535	; assembler added errata NOP
  8446  02E0' 8E00'              	bsf	___fladd@grs^0,7,c
  8447  02E2'                    l2949:
  8448  02E2' FFFF               	dw	65535	; assembler added errata NOP
  8449  02E4' 3400'              	rlcf	(___fladd@b+3)^0,w,c
  8450  02E6' 3200'              	rrcf	(___fladd@b+3)^0,f,c
  8451  02E8' 3200'              	rrcf	(___fladd@b+2)^0,f,c
  8452  02EA' 3200'              	rrcf	(___fladd@b+1)^0,f,c
  8453  02EC' 3200'              	rrcf	___fladd@b^0,f,c
  8454  02EE' 2A00'              	incf	___fladd@bexp^0,f,c
  8455  02F0' EF00' F000'        	goto	l2989
  8456  02F4'                    l2953:
  8457  02F4' FFFF               	dw	65535	; assembler added errata NOP
  8458  02F6' 5000'              	movf	___fladd@a^0,w,c
  8459  02F8' 5C00'              	subwf	___fladd@b^0,w,c
  8460  02FA' 5000'              	movf	(___fladd@a+1)^0,w,c
  8461  02FC' 5800'              	subwfb	(___fladd@b+1)^0,w,c
  8462  02FE' 5000'              	movf	(___fladd@a+2)^0,w,c
  8463  0300' 5800'              	subwfb	(___fladd@b+2)^0,w,c
  8464  0302' 5000'              	movf	(___fladd@b+3)^0,w,c
  8465  0304' 0A80               	xorlw	128
  8466  0306' 6E00'              	movwf	??___fladd^0,c
  8467  0308' 5000'              	movf	(___fladd@a+3)^0,w,c
  8468  030A' 0A80               	xorlw	128
  8469  030C' 5800'              	subwfb	??___fladd^0,w,c
  8470  030E' B0D8               	btfsc	status,0,c
  8471  0310' EF00' F000'        	goto	u2651
  8472  0314' EF00' F000'        	goto	u2650
  8473  0318'                    u2651:
  8474  0318' FFFF               	dw	65535	; assembler added errata NOP
  8475  031A' EF00' F000'        	goto	l2963
  8476  031E'                    u2650:
  8477  031E' FFFF               	dw	65535	; assembler added errata NOP
  8478  0320' 5000'              	movf	___fladd@b^0,w,c
  8479  0322' 5C00'              	subwf	___fladd@a^0,w,c
  8480  0324' 6E00'              	movwf	??___fladd^0,c
  8481  0326' 5000'              	movf	(___fladd@b+1)^0,w,c
  8482  0328' 5800'              	subwfb	(___fladd@a+1)^0,w,c
  8483  032A' 6E00'              	movwf	(??___fladd+1)^0,c
  8484  032C' 5000'              	movf	(___fladd@b+2)^0,w,c
  8485  032E' 5800'              	subwfb	(___fladd@a+2)^0,w,c
  8486  0330' 6E00'              	movwf	(??___fladd+2)^0,c
  8487  0332' 5000'              	movf	(___fladd@b+3)^0,w,c
  8488  0334' 5800'              	subwfb	(___fladd@a+3)^0,w,c
  8489  0336' 6E00'              	movwf	(??___fladd+3)^0,c
  8490  0338' 0EFF               	movlw	255
  8491  033A' 2400'              	addwf	??___fladd^0,w,c
  8492  033C' 6E00'              	movwf	___fladd@b^0,c
  8493  033E' 0EFF               	movlw	255
  8494  0340' 2000'              	addwfc	(??___fladd+1)^0,w,c
  8495  0342' 6E00'              	movwf	(___fladd@b+1)^0,c
  8496  0344' 0EFF               	movlw	255
  8497  0346' 2000'              	addwfc	(??___fladd+2)^0,w,c
  8498  0348' 6E00'              	movwf	(___fladd@b+2)^0,c
  8499  034A' 0EFF               	movlw	255
  8500  034C' 2000'              	addwfc	(??___fladd+3)^0,w,c
  8501  034E' 6E00'              	movwf	(___fladd@b+3)^0,c
  8502  0350' 0E80               	movlw	128
  8503  0352' 1A00'              	xorwf	___fladd@signs^0,f,c
  8504  0354' 6C00'              	negf	___fladd@grs^0,c
  8505  0356' 5000'              	movf	___fladd@grs^0,w,c
  8506  0358' A4D8               	btfss	status,2,c
  8507  035A' EF00' F000'        	goto	u2661
  8508  035E' EF00' F000'        	goto	u2660
  8509  0362'                    u2661:
  8510  0362' FFFF               	dw	65535	; assembler added errata NOP
  8511  0364' EF00' F000'        	goto	l1038
  8512  0368'                    u2660:
  8513  0368' FFFF               	dw	65535	; assembler added errata NOP
  8514  036A' 0E01               	movlw	1
  8515  036C' 2600'              	addwf	___fladd@b^0,f,c
  8516  036E' 0E00               	movlw	0
  8517  0370' 2200'              	addwfc	(___fladd@b+1)^0,f,c
  8518  0372' 2200'              	addwfc	(___fladd@b+2)^0,f,c
  8519  0374' 2200'              	addwfc	(___fladd@b+3)^0,f,c
  8520  0376' EF00' F000'        	goto	l1038
  8521  037A'                    l2963:
  8522  037A' FFFF               	dw	65535	; assembler added errata NOP
  8523  037C' 5000'              	movf	___fladd@a^0,w,c
  8524  037E' 5E00'              	subwf	___fladd@b^0,f,c
  8525  0380' 5000'              	movf	(___fladd@a+1)^0,w,c
  8526  0382' 5A00'              	subwfb	(___fladd@b+1)^0,f,c
  8527  0384' 5000'              	movf	(___fladd@a+2)^0,w,c
  8528  0386' 5A00'              	subwfb	(___fladd@b+2)^0,f,c
  8529  0388' 5000'              	movf	(___fladd@a+3)^0,w,c
  8530  038A' 5A00'              	subwfb	(___fladd@b+3)^0,f,c
  8531  038C'                    l1038:
  8532  038C' FFFF               	dw	65535	; assembler added errata NOP
  8533  038E' 5000'              	movf	___fladd@b^0,w,c
  8534  0390' 1000'              	iorwf	(___fladd@b+1)^0,w,c
  8535  0392' 1000'              	iorwf	(___fladd@b+2)^0,w,c
  8536  0394' 1000'              	iorwf	(___fladd@b+3)^0,w,c
  8537  0396' A4D8               	btfss	status,2,c
  8538  0398' EF00' F000'        	goto	u2671
  8539  039C' EF00' F000'        	goto	u2670
  8540  03A0'                    u2671:
  8541  03A0' FFFF               	dw	65535	; assembler added errata NOP
  8542  03A2' EF00' F000'        	goto	l2987
  8543  03A6'                    u2670:
  8544  03A6' FFFF               	dw	65535	; assembler added errata NOP
  8545  03A8' 5000'              	movf	___fladd@grs^0,w,c
  8546  03AA' A4D8               	btfss	status,2,c
  8547  03AC' EF00' F000'        	goto	u2681
  8548  03B0' EF00' F000'        	goto	u2680
  8549  03B4'                    u2681:
  8550  03B4' FFFF               	dw	65535	; assembler added errata NOP
  8551  03B6' EF00' F000'        	goto	l2987
  8552  03BA'                    u2680:
  8553  03BA' FFFF               	dw	65535	; assembler added errata NOP
  8554  03BC' 0E00               	movlw	0
  8555  03BE' 6E00'              	movwf	?___fladd^0,c
  8556  03C0' 0E00               	movlw	0
  8557  03C2' 6E00'              	movwf	(?___fladd+1)^0,c
  8558  03C4' 0E00               	movlw	0
  8559  03C6' 6E00'              	movwf	(?___fladd+2)^0,c
  8560  03C8' 0E00               	movlw	0
  8561  03CA' 6E00'              	movwf	(?___fladd+3)^0,c
  8562  03CC' EF00' F000'        	goto	l1030
  8563  03D0'                    l2971:
  8564  03D0' FFFF               	dw	65535	; assembler added errata NOP
  8565  03D2' 90D8               	bcf	status,0,c
  8566  03D4' 3600'              	rlcf	___fladd@b^0,f,c
  8567  03D6' 3600'              	rlcf	(___fladd@b+1)^0,f,c
  8568  03D8' 3600'              	rlcf	(___fladd@b+2)^0,f,c
  8569  03DA' 3600'              	rlcf	(___fladd@b+3)^0,f,c
  8570  03DC' AE00'              	btfss	___fladd@grs^0,7,c
  8571  03DE' EF00' F000'        	goto	u2691
  8572  03E2' EF00' F000'        	goto	u2690
  8573  03E6'                    u2691:
  8574  03E6' FFFF               	dw	65535	; assembler added errata NOP
  8575  03E8' EF00' F000'        	goto	l2977
  8576  03EC'                    u2690:
  8577  03EC' FFFF               	dw	65535	; assembler added errata NOP
  8578  03EE' 8000'              	bsf	___fladd@b^0,0,c
  8579  03F0'                    l2977:
  8580  03F0' FFFF               	dw	65535	; assembler added errata NOP
  8581  03F2' A000'              	btfss	___fladd@grs^0,0,c
  8582  03F4' EF00' F000'        	goto	u2701
  8583  03F8' EF00' F000'        	goto	u2700
  8584  03FC'                    u2701:
  8585  03FC' FFFF               	dw	65535	; assembler added errata NOP
  8586  03FE' EF00' F000'        	goto	l2981
  8587  0402'                    u2700:
  8588  0402' FFFF               	dw	65535	; assembler added errata NOP
  8589  0404' 80D8               	bsf	status,0,c
  8590  0406' 3600'              	rlcf	___fladd@grs^0,f,c
  8591  0408' EF00' F000'        	goto	l2983
  8592  040C'                    l2981:
  8593  040C' FFFF               	dw	65535	; assembler added errata NOP
  8594  040E' 90D8               	bcf	status,0,c
  8595  0410' 3600'              	rlcf	___fladd@grs^0,f,c
  8596  0412'                    l2983:
  8597  0412' FFFF               	dw	65535	; assembler added errata NOP
  8598  0414' 5000'              	movf	___fladd@bexp^0,w,c
  8599  0416' B4D8               	btfsc	status,2,c
  8600  0418' EF00' F000'        	goto	u2711
  8601  041C' EF00' F000'        	goto	u2710
  8602  0420'                    u2711:
  8603  0420' FFFF               	dw	65535	; assembler added errata NOP
  8604  0422' EF00' F000'        	goto	l2987
  8605  0426'                    u2710:
  8606  0426' FFFF               	dw	65535	; assembler added errata NOP
  8607  0428' 0600'              	decf	___fladd@bexp^0,f,c
  8608  042A'                    l2987:
  8609  042A' FFFF               	dw	65535	; assembler added errata NOP
  8610  042C' AE00'              	btfss	(___fladd@b+2)^0,7,c
  8611  042E' EF00' F000'        	goto	u2721
  8612  0432' EF00' F000'        	goto	u2720
  8613  0436'                    u2721:
  8614  0436' FFFF               	dw	65535	; assembler added errata NOP
  8615  0438' EF00' F000'        	goto	l2971
  8616  043C'                    u2720:
  8617  043C'                    l2989:
  8618  043C' FFFF               	dw	65535	; assembler added errata NOP
  8619  043E' 0E00               	movlw	0
  8620  0440' 6E00'              	movwf	___fladd@aexp^0,c
  8621  0442' AE00'              	btfss	___fladd@grs^0,7,c
  8622  0444' EF00' F000'        	goto	u2731
  8623  0448' EF00' F000'        	goto	u2730
  8624  044C'                    u2731:
  8625  044C' FFFF               	dw	65535	; assembler added errata NOP
  8626  044E' EF00' F000'        	goto	l1047
  8627  0452'                    u2730:
  8628  0452' FFFF               	dw	65535	; assembler added errata NOP
  8629  0454' C018' F011'        	movff	___fladd@grs,??___fladd
  8630  0458' 0E7F               	movlw	127
  8631  045A' 1600'              	andwf	??___fladd^0,f,c
  8632  045C' B4D8               	btfsc	status,2,c
  8633  045E' EF00' F000'        	goto	u2741
  8634  0462' EF00' F000'        	goto	u2740
  8635  0466'                    u2741:
  8636  0466' FFFF               	dw	65535	; assembler added errata NOP
  8637  0468' EF00' F000'        	goto	l1048
  8638  046C'                    u2740:
  8639  046C' FFFF               	dw	65535	; assembler added errata NOP
  8640  046E'                    l2995:
  8641  046E' FFFF               	dw	65535	; assembler added errata NOP
  8642  0470' 0E01               	movlw	1
  8643  0472' 6E00'              	movwf	___fladd@aexp^0,c
  8644  0474' EF00' F000'        	goto	l1047
  8645  0478'                    l1048:
  8646  0478' FFFF               	dw	65535	; assembler added errata NOP
  8647  047A' A000'              	btfss	___fladd@b^0,0,c
  8648  047C' EF00' F000'        	goto	u2751
  8649  0480' EF00' F000'        	goto	u2750
  8650  0484'                    u2751:
  8651  0484' FFFF               	dw	65535	; assembler added errata NOP
  8652  0486' EF00' F000'        	goto	l1047
  8653  048A'                    u2750:
  8654  048A' FFFF               	dw	65535	; assembler added errata NOP
  8655  048C' EF00' F000'        	goto	l2995
  8656  0490'                    l1047:
  8657  0490' FFFF               	dw	65535	; assembler added errata NOP
  8658  0492' 5000'              	movf	___fladd@aexp^0,w,c
  8659  0494' B4D8               	btfsc	status,2,c
  8660  0496' EF00' F000'        	goto	u2761
  8661  049A' EF00' F000'        	goto	u2760
  8662  049E'                    u2761:
  8663  049E' FFFF               	dw	65535	; assembler added errata NOP
  8664  04A0' EF00' F000'        	goto	l3007
  8665  04A4'                    u2760:
  8666  04A4' FFFF               	dw	65535	; assembler added errata NOP
  8667  04A6' 0E01               	movlw	1
  8668  04A8' 2600'              	addwf	___fladd@b^0,f,c
  8669  04AA' 0E00               	movlw	0
  8670  04AC' 2200'              	addwfc	(___fladd@b+1)^0,f,c
  8671  04AE' 2200'              	addwfc	(___fladd@b+2)^0,f,c
  8672  04B0' 2200'              	addwfc	(___fladd@b+3)^0,f,c
  8673  04B2' A000'              	btfss	(___fladd@b+3)^0,0,c
  8674  04B4' EF00' F000'        	goto	u2771
  8675  04B8' EF00' F000'        	goto	u2770
  8676  04BC'                    u2771:
  8677  04BC' FFFF               	dw	65535	; assembler added errata NOP
  8678  04BE' EF00' F000'        	goto	l3007
  8679  04C2'                    u2770:
  8680  04C2' FFFF               	dw	65535	; assembler added errata NOP
  8681  04C4' C009' F011'        	movff	___fladd@b,??___fladd
  8682  04C8' C00A' F012'        	movff	___fladd@b+1,??___fladd+1
  8683  04CC' C00B' F013'        	movff	___fladd@b+2,??___fladd+2
  8684  04D0' C00C' F014'        	movff	___fladd@b+3,??___fladd+3
  8685  04D4' 3400'              	rlcf	(??___fladd+3)^0,w,c
  8686  04D6' 3200'              	rrcf	(??___fladd+3)^0,f,c
  8687  04D8' 3200'              	rrcf	(??___fladd+2)^0,f,c
  8688  04DA' 3200'              	rrcf	(??___fladd+1)^0,f,c
  8689  04DC' 3200'              	rrcf	??___fladd^0,f,c
  8690  04DE' C011' F009'        	movff	??___fladd,___fladd@b
  8691  04E2' C012' F00A'        	movff	??___fladd+1,___fladd@b+1
  8692  04E6' C013' F00B'        	movff	??___fladd+2,___fladd@b+2
  8693  04EA' C014' F00C'        	movff	??___fladd+3,___fladd@b+3
  8694  04EE' 2800'              	incf	___fladd@bexp^0,w,c
  8695  04F0' B4D8               	btfsc	status,2,c
  8696  04F2' EF00' F000'        	goto	u2781
  8697  04F6' EF00' F000'        	goto	u2780
  8698  04FA'                    u2781:
  8699  04FA' FFFF               	dw	65535	; assembler added errata NOP
  8700  04FC' EF00' F000'        	goto	l3007
  8701  0500'                    u2780:
  8702  0500' FFFF               	dw	65535	; assembler added errata NOP
  8703  0502' 2A00'              	incf	___fladd@bexp^0,f,c
  8704  0504'                    l3007:
  8705  0504' FFFF               	dw	65535	; assembler added errata NOP
  8706  0506' 2800'              	incf	___fladd@bexp^0,w,c
  8707  0508' B4D8               	btfsc	status,2,c
  8708  050A' EF00' F000'        	goto	u2791
  8709  050E' EF00' F000'        	goto	u2790
  8710  0512'                    u2791:
  8711  0512' FFFF               	dw	65535	; assembler added errata NOP
  8712  0514' EF00' F000'        	goto	l3011
  8713  0518'                    u2790:
  8714  0518' FFFF               	dw	65535	; assembler added errata NOP
  8715  051A' 5000'              	movf	___fladd@bexp^0,w,c
  8716  051C' A4D8               	btfss	status,2,c
  8717  051E' EF00' F000'        	goto	u2801
  8718  0522' EF00' F000'        	goto	u2800
  8719  0526'                    u2801:
  8720  0526' FFFF               	dw	65535	; assembler added errata NOP
  8721  0528' EF00' F000'        	goto	l3015
  8722  052C'                    u2800:
  8723  052C'                    l3011:
  8724  052C' FFFF               	dw	65535	; assembler added errata NOP
  8725  052E' 0E00               	movlw	0
  8726  0530' 6E00'              	movwf	___fladd@b^0,c
  8727  0532' 0E00               	movlw	0
  8728  0534' 6E00'              	movwf	(___fladd@b+1)^0,c
  8729  0536' 0E00               	movlw	0
  8730  0538' 6E00'              	movwf	(___fladd@b+2)^0,c
  8731  053A' 0E00               	movlw	0
  8732  053C' 6E00'              	movwf	(___fladd@b+3)^0,c
  8733  053E' 5000'              	movf	___fladd@bexp^0,w,c
  8734  0540' A4D8               	btfss	status,2,c
  8735  0542' EF00' F000'        	goto	u2811
  8736  0546' EF00' F000'        	goto	u2810
  8737  054A'                    u2811:
  8738  054A' FFFF               	dw	65535	; assembler added errata NOP
  8739  054C' EF00' F000'        	goto	l3015
  8740  0550'                    u2810:
  8741  0550' FFFF               	dw	65535	; assembler added errata NOP
  8742  0552' 0E00               	movlw	0
  8743  0554' 6E00'              	movwf	___fladd@signs^0,c
  8744  0556'                    l3015:
  8745  0556' FFFF               	dw	65535	; assembler added errata NOP
  8746  0558' A000'              	btfss	___fladd@bexp^0,0,c
  8747  055A' EF00' F000'        	goto	u2821
  8748  055E' EF00' F000'        	goto	u2820
  8749  0562'                    u2821:
  8750  0562' FFFF               	dw	65535	; assembler added errata NOP
  8751  0564' EF00' F000'        	goto	l3019
  8752  0568'                    u2820:
  8753  0568' FFFF               	dw	65535	; assembler added errata NOP
  8754  056A' 8E00'              	bsf	(___fladd@b+2)^0,7,c
  8755  056C' EF00' F000'        	goto	l3021
  8756  0570'                    l3019:
  8757  0570' FFFF               	dw	65535	; assembler added errata NOP
  8758  0572' 9E00'              	bcf	(___fladd@b+2)^0,7,c
  8759  0574'                    l3021:
  8760  0574' FFFF               	dw	65535	; assembler added errata NOP
  8761  0576' 90D8               	bcf	status,0,c
  8762  0578' 3000'              	rrcf	___fladd@bexp^0,w,c
  8763  057A' 6E00'              	movwf	(___fladd@b+3)^0,c
  8764  057C' AE00'              	btfss	___fladd@signs^0,7,c
  8765  057E' EF00' F000'        	goto	u2831
  8766  0582' EF00' F000'        	goto	u2830
  8767  0586'                    u2831:
  8768  0586' FFFF               	dw	65535	; assembler added errata NOP
  8769  0588' EF00' F000'        	goto	l3027
  8770  058C'                    u2830:
  8771  058C' FFFF               	dw	65535	; assembler added errata NOP
  8772  058E' 8E00'              	bsf	(___fladd@b+3)^0,7,c
  8773  0590'                    l3027:
  8774  0590' FFFF               	dw	65535	; assembler added errata NOP
  8775  0592' C009' F009'        	movff	___fladd@b,?___fladd
  8776  0596' C00A' F00A'        	movff	___fladd@b+1,?___fladd+1
  8777  059A' C00B' F00B'        	movff	___fladd@b+2,?___fladd+2
  8778  059E' C00C' F00C'        	movff	___fladd@b+3,?___fladd+3
  8779  05A2'                    l1030:
  8780  05A2' FFFF               	dw	65535	; assembler added errata NOP
  8781  05A4' 0012               	return		;funcret
  8782  05A6' FFFF               	dw	65535	; errata NOP
  8783  05A8'                    __end_of___fladd:
  8784                           	callstack 0
  8785                           
  8786 ;; *************** function ___flneg *****************
  8787 ;; Defined at:
  8788 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  f1              4    9[COMRAM] unsigned char 
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;		None
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  4    9[COMRAM] unsigned char 
  8795 ;; Registers used:
  8796 ;;		wreg, status,2, status,0
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8802 ;;      Params:         4       0       0       0       0       0       0
  8803 ;;      Locals:         0       0       0       0       0       0       0
  8804 ;;      Temps:          0       0       0       0       0       0       0
  8805 ;;      Totals:         4       0       0       0       0       0       0
  8806 ;;Total ram usage:        4 bytes
  8807 ;; Hardware stack levels used: 1
  8808 ;; Hardware stack levels required when called: 2
  8809 ;; This function calls:
  8810 ;;		Nothing
  8811 ;; This function is called by:
  8812 ;;		_roundf
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text34
  8817  0000'                    __ptext34:
  8818                           	callstack 0
  8819  0000'                    ___flneg:
  8820                           	callstack 0
  8821  0000' FFFF               	dw	65535	; assembler added errata NOP
  8822  0002' 5000'              	movf	___flneg@f1^0,w,c
  8823  0004' 1000'              	iorwf	(___flneg@f1+1)^0,w,c
  8824  0006' 1000'              	iorwf	(___flneg@f1+2)^0,w,c
  8825  0008' 1000'              	iorwf	(___flneg@f1+3)^0,w,c
  8826  000A' B4D8               	btfsc	status,2,c
  8827  000C' EF00' F000'        	goto	u3711
  8828  0010' EF00' F000'        	goto	u3710
  8829  0014'                    u3711:
  8830  0014' FFFF               	dw	65535	; assembler added errata NOP
  8831  0016' EF00' F000'        	goto	l3661
  8832  001A'                    u3710:
  8833  001A' FFFF               	dw	65535	; assembler added errata NOP
  8834  001C' 0E00               	movlw	0
  8835  001E' 1A00'              	xorwf	___flneg@f1^0,f,c
  8836  0020' 0E00               	movlw	0
  8837  0022' 1A00'              	xorwf	(___flneg@f1+1)^0,f,c
  8838  0024' 0E00               	movlw	0
  8839  0026' 1A00'              	xorwf	(___flneg@f1+2)^0,f,c
  8840  0028' 0E80               	movlw	128
  8841  002A' 1A00'              	xorwf	(___flneg@f1+3)^0,f,c
  8842  002C'                    l3661:
  8843  002C' FFFF               	dw	65535	; assembler added errata NOP
  8844  002E' C009' F009'        	movff	___flneg@f1,?___flneg
  8845  0032' C00A' F00A'        	movff	___flneg@f1+1,?___flneg+1
  8846  0036' C00B' F00B'        	movff	___flneg@f1+2,?___flneg+2
  8847  003A' C00C' F00C'        	movff	___flneg@f1+3,?___flneg+3
  8848  003E' 0012               	return		;funcret
  8849  0040' FFFF               	dw	65535	; errata NOP
  8850  0042'                    __end_of___flneg:
  8851                           	callstack 0
  8852                           
  8853 ;; *************** function ___flmul *****************
  8854 ;; Defined at:
  8855 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  b               4    9[COMRAM] unsigned char 
  8858 ;;  a               4   13[COMRAM] unsigned char 
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;  prod            4   28[COMRAM] struct .
  8861 ;;  grs             4   22[COMRAM] unsigned long 
  8862 ;;  temp            2   32[COMRAM] struct .
  8863 ;;  bexp            1   27[COMRAM] unsigned char 
  8864 ;;  aexp            1   26[COMRAM] unsigned char 
  8865 ;;  sign            1   21[COMRAM] unsigned char 
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  4    9[COMRAM] unsigned char 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2, status,0, prodl, prodh
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8875 ;;      Params:         8       0       0       0       0       0       0
  8876 ;;      Locals:        13       0       0       0       0       0       0
  8877 ;;      Temps:          4       0       0       0       0       0       0
  8878 ;;      Totals:        25       0       0       0       0       0       0
  8879 ;;Total ram usage:       25 bytes
  8880 ;; Hardware stack levels used: 1
  8881 ;; Hardware stack levels required when called: 2
  8882 ;; This function calls:
  8883 ;;		Nothing
  8884 ;; This function is called by:
  8885 ;;		_roundf
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text35
  8890  0000'                    __ptext35:
  8891                           	callstack 0
  8892  0000'                    ___flmul:
  8893                           	callstack 0
  8894  0000' FFFF               	dw	65535	; assembler added errata NOP
  8895  0002' 5000'              	movf	(___flmul@b+3)^0,w,c
  8896  0004' 0B80               	andlw	128
  8897  0006' 6E00'              	movwf	___flmul@sign^0,c
  8898  0008' 5000'              	movf	(___flmul@b+3)^0,w,c
  8899  000A' 2400'              	addwf	(___flmul@b+3)^0,w,c
  8900  000C' 6E00'              	movwf	___flmul@bexp^0,c
  8901  000E' AE00'              	btfss	(___flmul@b+2)^0,7,c
  8902  0010' EF00' F000'        	goto	u3471
  8903  0014' EF00' F000'        	goto	u3470
  8904  0018'                    u3471:
  8905  0018' FFFF               	dw	65535	; assembler added errata NOP
  8906  001A' EF00' F000'        	goto	l3505
  8907  001E'                    u3470:
  8908  001E' FFFF               	dw	65535	; assembler added errata NOP
  8909  0020' 8000'              	bsf	___flmul@bexp^0,0,c
  8910  0022'                    l3505:
  8911  0022' FFFF               	dw	65535	; assembler added errata NOP
  8912  0024' 5000'              	movf	___flmul@bexp^0,w,c
  8913  0026' B4D8               	btfsc	status,2,c
  8914  0028' EF00' F000'        	goto	u3481
  8915  002C' EF00' F000'        	goto	u3480
  8916  0030'                    u3481:
  8917  0030' FFFF               	dw	65535	; assembler added errata NOP
  8918  0032' EF00' F000'        	goto	l3513
  8919  0036'                    u3480:
  8920  0036' FFFF               	dw	65535	; assembler added errata NOP
  8921  0038' 2800'              	incf	___flmul@bexp^0,w,c
  8922  003A' A4D8               	btfss	status,2,c
  8923  003C' EF00' F000'        	goto	u3491
  8924  0040' EF00' F000'        	goto	u3490
  8925  0044'                    u3491:
  8926  0044' FFFF               	dw	65535	; assembler added errata NOP
  8927  0046' EF00' F000'        	goto	l3511
  8928  004A'                    u3490:
  8929  004A' FFFF               	dw	65535	; assembler added errata NOP
  8930  004C' 0E00               	movlw	0
  8931  004E' 6E00'              	movwf	___flmul@b^0,c
  8932  0050' 0E00               	movlw	0
  8933  0052' 6E00'              	movwf	(___flmul@b+1)^0,c
  8934  0054' 0E00               	movlw	0
  8935  0056' 6E00'              	movwf	(___flmul@b+2)^0,c
  8936  0058' 0E00               	movlw	0
  8937  005A' 6E00'              	movwf	(___flmul@b+3)^0,c
  8938  005C'                    l3511:
  8939  005C' FFFF               	dw	65535	; assembler added errata NOP
  8940  005E' 8E00'              	bsf	(___flmul@b+2)^0,7,c
  8941  0060' EF00' F000'        	goto	l3515
  8942  0064'                    l3513:
  8943  0064' FFFF               	dw	65535	; assembler added errata NOP
  8944  0066' 0E00               	movlw	0
  8945  0068' 6E00'              	movwf	___flmul@b^0,c
  8946  006A' 0E00               	movlw	0
  8947  006C' 6E00'              	movwf	(___flmul@b+1)^0,c
  8948  006E' 0E00               	movlw	0
  8949  0070' 6E00'              	movwf	(___flmul@b+2)^0,c
  8950  0072' 0E00               	movlw	0
  8951  0074' 6E00'              	movwf	(___flmul@b+3)^0,c
  8952  0076'                    l3515:
  8953  0076' FFFF               	dw	65535	; assembler added errata NOP
  8954  0078' 5000'              	movf	(___flmul@a+3)^0,w,c
  8955  007A' 0B80               	andlw	128
  8956  007C' 1A00'              	xorwf	___flmul@sign^0,f,c
  8957  007E' 5000'              	movf	(___flmul@a+3)^0,w,c
  8958  0080' 2400'              	addwf	(___flmul@a+3)^0,w,c
  8959  0082' 6E00'              	movwf	___flmul@aexp^0,c
  8960  0084' AE00'              	btfss	(___flmul@a+2)^0,7,c
  8961  0086' EF00' F000'        	goto	u3501
  8962  008A' EF00' F000'        	goto	u3500
  8963  008E'                    u3501:
  8964  008E' FFFF               	dw	65535	; assembler added errata NOP
  8965  0090' EF00' F000'        	goto	l3523
  8966  0094'                    u3500:
  8967  0094' FFFF               	dw	65535	; assembler added errata NOP
  8968  0096' 8000'              	bsf	___flmul@aexp^0,0,c
  8969  0098'                    l3523:
  8970  0098' FFFF               	dw	65535	; assembler added errata NOP
  8971  009A' 5000'              	movf	___flmul@aexp^0,w,c
  8972  009C' B4D8               	btfsc	status,2,c
  8973  009E' EF00' F000'        	goto	u3511
  8974  00A2' EF00' F000'        	goto	u3510
  8975  00A6'                    u3511:
  8976  00A6' FFFF               	dw	65535	; assembler added errata NOP
  8977  00A8' EF00' F000'        	goto	l3531
  8978  00AC'                    u3510:
  8979  00AC' FFFF               	dw	65535	; assembler added errata NOP
  8980  00AE' 2800'              	incf	___flmul@aexp^0,w,c
  8981  00B0' A4D8               	btfss	status,2,c
  8982  00B2' EF00' F000'        	goto	u3521
  8983  00B6' EF00' F000'        	goto	u3520
  8984  00BA'                    u3521:
  8985  00BA' FFFF               	dw	65535	; assembler added errata NOP
  8986  00BC' EF00' F000'        	goto	l3529
  8987  00C0'                    u3520:
  8988  00C0' FFFF               	dw	65535	; assembler added errata NOP
  8989  00C2' 0E00               	movlw	0
  8990  00C4' 6E00'              	movwf	___flmul@a^0,c
  8991  00C6' 0E00               	movlw	0
  8992  00C8' 6E00'              	movwf	(___flmul@a+1)^0,c
  8993  00CA' 0E00               	movlw	0
  8994  00CC' 6E00'              	movwf	(___flmul@a+2)^0,c
  8995  00CE' 0E00               	movlw	0
  8996  00D0' 6E00'              	movwf	(___flmul@a+3)^0,c
  8997  00D2'                    l3529:
  8998  00D2' FFFF               	dw	65535	; assembler added errata NOP
  8999  00D4' 8E00'              	bsf	(___flmul@a+2)^0,7,c
  9000  00D6' EF00' F000'        	goto	l1107
  9001  00DA'                    l3531:
  9002  00DA' FFFF               	dw	65535	; assembler added errata NOP
  9003  00DC' 0E00               	movlw	0
  9004  00DE' 6E00'              	movwf	___flmul@a^0,c
  9005  00E0' 0E00               	movlw	0
  9006  00E2' 6E00'              	movwf	(___flmul@a+1)^0,c
  9007  00E4' 0E00               	movlw	0
  9008  00E6' 6E00'              	movwf	(___flmul@a+2)^0,c
  9009  00E8' 0E00               	movlw	0
  9010  00EA' 6E00'              	movwf	(___flmul@a+3)^0,c
  9011  00EC'                    l1107:
  9012  00EC' FFFF               	dw	65535	; assembler added errata NOP
  9013  00EE' 5000'              	movf	___flmul@aexp^0,w,c
  9014  00F0' B4D8               	btfsc	status,2,c
  9015  00F2' EF00' F000'        	goto	u3531
  9016  00F6' EF00' F000'        	goto	u3530
  9017  00FA'                    u3531:
  9018  00FA' FFFF               	dw	65535	; assembler added errata NOP
  9019  00FC' EF00' F000'        	goto	l3535
  9020  0100'                    u3530:
  9021  0100' FFFF               	dw	65535	; assembler added errata NOP
  9022  0102' 5000'              	movf	___flmul@bexp^0,w,c
  9023  0104' A4D8               	btfss	status,2,c
  9024  0106' EF00' F000'        	goto	u3541
  9025  010A' EF00' F000'        	goto	u3540
  9026  010E'                    u3541:
  9027  010E' FFFF               	dw	65535	; assembler added errata NOP
  9028  0110' EF00' F000'        	goto	l3539
  9029  0114'                    u3540:
  9030  0114'                    l3535:
  9031  0114' FFFF               	dw	65535	; assembler added errata NOP
  9032  0116' 0E00               	movlw	0
  9033  0118' 6E00'              	movwf	?___flmul^0,c
  9034  011A' 0E00               	movlw	0
  9035  011C' 6E00'              	movwf	(?___flmul+1)^0,c
  9036  011E' 0E00               	movlw	0
  9037  0120' 6E00'              	movwf	(?___flmul+2)^0,c
  9038  0122' 0E00               	movlw	0
  9039  0124' 6E00'              	movwf	(?___flmul+3)^0,c
  9040  0126' EF00' F000'        	goto	l1111
  9041  012A'                    l3539:
  9042  012A' FFFF               	dw	65535	; assembler added errata NOP
  9043  012C' 5000'              	movf	(___flmul@a+2)^0,w,c
  9044  012E' 0200'              	mulwf	___flmul@b^0,c
  9045  0130' CFF3 F020'         	movff	prodl,___flmul@temp
  9046  0134' CFF4 F021'         	movff	prodh,___flmul@temp+1
  9047  0138' 5000'              	movf	___flmul@temp^0,w,c
  9048  013A' 6E00'              	movwf	___flmul@grs^0,c
  9049  013C' 6A00'              	clrf	(___flmul@grs+1)^0,c
  9050  013E' 6A00'              	clrf	(___flmul@grs+2)^0,c
  9051  0140' 6A00'              	clrf	(___flmul@grs+3)^0,c
  9052  0142' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9053  0144' 6E00'              	movwf	___flmul@prod^0,c
  9054  0146' 6A00'              	clrf	(___flmul@prod+1)^0,c
  9055  0148' 6A00'              	clrf	(___flmul@prod+2)^0,c
  9056  014A' 6A00'              	clrf	(___flmul@prod+3)^0,c
  9057  014C' 5000'              	movf	(___flmul@a+1)^0,w,c
  9058  014E' 0200'              	mulwf	(___flmul@b+1)^0,c
  9059  0150' CFF3 F020'         	movff	prodl,___flmul@temp
  9060  0154' CFF4 F021'         	movff	prodh,___flmul@temp+1
  9061  0158' 5000'              	movf	___flmul@temp^0,w,c
  9062  015A' 2600'              	addwf	___flmul@grs^0,f,c
  9063  015C' 0E00               	movlw	0
  9064  015E' 2200'              	addwfc	(___flmul@grs+1)^0,f,c
  9065  0160' 2200'              	addwfc	(___flmul@grs+2)^0,f,c
  9066  0162' 2200'              	addwfc	(___flmul@grs+3)^0,f,c
  9067  0164' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9068  0166' 2600'              	addwf	___flmul@prod^0,f,c
  9069  0168' 0E00               	movlw	0
  9070  016A' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  9071  016C' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  9072  016E' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  9073  0170' 5000'              	movf	___flmul@a^0,w,c
  9074  0172' 0200'              	mulwf	(___flmul@b+2)^0,c
  9075  0174' CFF3 F020'         	movff	prodl,___flmul@temp
  9076  0178' CFF4 F021'         	movff	prodh,___flmul@temp+1
  9077  017C' 5000'              	movf	___flmul@temp^0,w,c
  9078  017E' 2600'              	addwf	___flmul@grs^0,f,c
  9079  0180' 0E00               	movlw	0
  9080  0182' 2200'              	addwfc	(___flmul@grs+1)^0,f,c
  9081  0184' 2200'              	addwfc	(___flmul@grs+2)^0,f,c
  9082  0186' 2200'              	addwfc	(___flmul@grs+3)^0,f,c
  9083  0188' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9084  018A' 2600'              	addwf	___flmul@prod^0,f,c
  9085  018C' 0E00               	movlw	0
  9086  018E' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  9087  0190' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  9088  0192' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  9089  0194' C018' F019'        	movff	___flmul@grs+2,___flmul@grs+3
  9090  0198' C017' F018'        	movff	___flmul@grs+1,___flmul@grs+2
  9091  019C' C016' F017'        	movff	___flmul@grs,___flmul@grs+1
  9092  01A0' 6A00'              	clrf	___flmul@grs^0,c
  9093  01A2' 5000'              	movf	___flmul@a^0,w,c
  9094  01A4' 0200'              	mulwf	(___flmul@b+1)^0,c
  9095  01A6' CFF3 F020'         	movff	prodl,___flmul@temp
  9096  01AA' CFF4 F021'         	movff	prodh,___flmul@temp+1
  9097  01AE' 5000'              	movf	___flmul@temp^0,w,c
  9098  01B0' 2600'              	addwf	___flmul@grs^0,f,c
  9099  01B2' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9100  01B4' 2200'              	addwfc	(___flmul@grs+1)^0,f,c
  9101  01B6' 0E00               	movlw	0
  9102  01B8' 2200'              	addwfc	(___flmul@grs+2)^0,f,c
  9103  01BA' 0E00               	movlw	0
  9104  01BC' 2200'              	addwfc	(___flmul@grs+3)^0,f,c
  9105  01BE' 5000'              	movf	(___flmul@a+1)^0,w,c
  9106  01C0' 0200'              	mulwf	___flmul@b^0,c
  9107  01C2' CFF3 F020'         	movff	prodl,___flmul@temp
  9108  01C6' CFF4 F021'         	movff	prodh,___flmul@temp+1
  9109  01CA' 5000'              	movf	___flmul@temp^0,w,c
  9110  01CC' 2600'              	addwf	___flmul@grs^0,f,c
  9111  01CE' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9112  01D0' 2200'              	addwfc	(___flmul@grs+1)^0,f,c
  9113  01D2' 0E00               	movlw	0
  9114  01D4' 2200'              	addwfc	(___flmul@grs+2)^0,f,c
  9115  01D6' 0E00               	movlw	0
  9116  01D8' 2200'              	addwfc	(___flmul@grs+3)^0,f,c
  9117  01DA' C018' F019'        	movff	___flmul@grs+2,___flmul@grs+3
  9118  01DE' C017' F018'        	movff	___flmul@grs+1,___flmul@grs+2
  9119  01E2' C016' F017'        	movff	___flmul@grs,___flmul@grs+1
  9120  01E6' 6A00'              	clrf	___flmul@grs^0,c
  9121  01E8' 5000'              	movf	___flmul@a^0,w,c
  9122  01EA' 0200'              	mulwf	___flmul@b^0,c
  9123  01EC' CFF3 F020'         	movff	prodl,___flmul@temp
  9124  01F0' CFF4 F021'         	movff	prodh,___flmul@temp+1
  9125  01F4' 5000'              	movf	___flmul@temp^0,w,c
  9126  01F6' 2600'              	addwf	___flmul@grs^0,f,c
  9127  01F8' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9128  01FA' 2200'              	addwfc	(___flmul@grs+1)^0,f,c
  9129  01FC' 0E00               	movlw	0
  9130  01FE' 2200'              	addwfc	(___flmul@grs+2)^0,f,c
  9131  0200' 0E00               	movlw	0
  9132  0202' 2200'              	addwfc	(___flmul@grs+3)^0,f,c
  9133  0204' 5000'              	movf	(___flmul@a+2)^0,w,c
  9134  0206' 0200'              	mulwf	(___flmul@b+1)^0,c
  9135  0208' CFF3 F020'         	movff	prodl,___flmul@temp
  9136  020C' CFF4 F021'         	movff	prodh,___flmul@temp+1
  9137  0210' 5000'              	movf	___flmul@temp^0,w,c
  9138  0212' 2600'              	addwf	___flmul@prod^0,f,c
  9139  0214' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9140  0216' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  9141  0218' 0E00               	movlw	0
  9142  021A' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  9143  021C' 0E00               	movlw	0
  9144  021E' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  9145  0220' 5000'              	movf	(___flmul@a+1)^0,w,c
  9146  0222' 0200'              	mulwf	(___flmul@b+2)^0,c
  9147  0224' CFF3 F020'         	movff	prodl,___flmul@temp
  9148  0228' CFF4 F021'         	movff	prodh,___flmul@temp+1
  9149  022C' 5000'              	movf	___flmul@temp^0,w,c
  9150  022E' 2600'              	addwf	___flmul@prod^0,f,c
  9151  0230' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9152  0232' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  9153  0234' 0E00               	movlw	0
  9154  0236' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  9155  0238' 0E00               	movlw	0
  9156  023A' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  9157  023C' 5000'              	movf	(___flmul@a+2)^0,w,c
  9158  023E' 0200'              	mulwf	(___flmul@b+2)^0,c
  9159  0240' CFF3 F020'         	movff	prodl,___flmul@temp
  9160  0244' CFF4 F021'         	movff	prodh,___flmul@temp+1
  9161  0248' 5000'              	movf	___flmul@temp^0,w,c
  9162  024A' 6E00'              	movwf	??___flmul^0,c
  9163  024C' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9164  024E' 6E00'              	movwf	(??___flmul+1)^0,c
  9165  0250' 6A00'              	clrf	(??___flmul+2)^0,c
  9166  0252' 6A00'              	clrf	(??___flmul+3)^0,c
  9167  0254' C013' F014'        	movff	??___flmul+2,??___flmul+3
  9168  0258' C012' F013'        	movff	??___flmul+1,??___flmul+2
  9169  025C' C011' F012'        	movff	??___flmul,??___flmul+1
  9170  0260' 6A00'              	clrf	??___flmul^0,c
  9171  0262' 5000'              	movf	??___flmul^0,w,c
  9172  0264' 2600'              	addwf	___flmul@prod^0,f,c
  9173  0266' 5000'              	movf	(??___flmul+1)^0,w,c
  9174  0268' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  9175  026A' 5000'              	movf	(??___flmul+2)^0,w,c
  9176  026C' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  9177  026E' 5000'              	movf	(??___flmul+3)^0,w,c
  9178  0270' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  9179  0272' C016' F011'        	movff	___flmul@grs,??___flmul
  9180  0276' C017' F012'        	movff	___flmul@grs+1,??___flmul+1
  9181  027A' C018' F013'        	movff	___flmul@grs+2,??___flmul+2
  9182  027E' C019' F014'        	movff	___flmul@grs+3,??___flmul+3
  9183  0282' 0E19               	movlw	25
  9184  0284' EF00' F000'        	goto	u3550
  9185  0288'                    u3555:
  9186  0288' FFFF               	dw	65535	; assembler added errata NOP
  9187  028A' 90D8               	bcf	status,0,c
  9188  028C' 3200'              	rrcf	(??___flmul+3)^0,f,c
  9189  028E' 3200'              	rrcf	(??___flmul+2)^0,f,c
  9190  0290' 3200'              	rrcf	(??___flmul+1)^0,f,c
  9191  0292' 3200'              	rrcf	??___flmul^0,f,c
  9192  0294'                    u3550:
  9193  0294' FFFF               	dw	65535	; assembler added errata NOP
  9194  0296' 2EE8               	decfsz	wreg,f,c
  9195  0298' EF00' F000'        	goto	u3555
  9196  029C' 5000'              	movf	??___flmul^0,w,c
  9197  029E' 2600'              	addwf	___flmul@prod^0,f,c
  9198  02A0' 5000'              	movf	(??___flmul+1)^0,w,c
  9199  02A2' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  9200  02A4' 5000'              	movf	(??___flmul+2)^0,w,c
  9201  02A6' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  9202  02A8' 5000'              	movf	(??___flmul+3)^0,w,c
  9203  02AA' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  9204  02AC' C018' F019'        	movff	___flmul@grs+2,___flmul@grs+3
  9205  02B0' C017' F018'        	movff	___flmul@grs+1,___flmul@grs+2
  9206  02B4' C016' F017'        	movff	___flmul@grs,___flmul@grs+1
  9207  02B8' 6A00'              	clrf	___flmul@grs^0,c
  9208  02BA' 5000'              	movf	___flmul@aexp^0,w,c
  9209  02BC' C01B' F011'        	movff	___flmul@bexp,??___flmul
  9210  02C0' 6A00'              	clrf	(??___flmul+1)^0,c
  9211  02C2' 2600'              	addwf	??___flmul^0,f,c
  9212  02C4' 0E00               	movlw	0
  9213  02C6' 2200'              	addwfc	(??___flmul+1)^0,f,c
  9214  02C8' 0E82               	movlw	130
  9215  02CA' 2400'              	addwf	??___flmul^0,w,c
  9216  02CC' 6E00'              	movwf	___flmul@temp^0,c
  9217  02CE' 0EFF               	movlw	255
  9218  02D0' 2000'              	addwfc	(??___flmul+1)^0,w,c
  9219  02D2' 6E00'              	movwf	(___flmul@temp+1)^0,c
  9220  02D4' EF00' F000'        	goto	l3587
  9221  02D8'                    l3581:
  9222  02D8' FFFF               	dw	65535	; assembler added errata NOP
  9223  02DA' 90D8               	bcf	status,0,c
  9224  02DC' 3600'              	rlcf	___flmul@prod^0,f,c
  9225  02DE' 3600'              	rlcf	(___flmul@prod+1)^0,f,c
  9226  02E0' 3600'              	rlcf	(___flmul@prod+2)^0,f,c
  9227  02E2' 3600'              	rlcf	(___flmul@prod+3)^0,f,c
  9228  02E4' AE00'              	btfss	(___flmul@grs+3)^0,7,c
  9229  02E6' EF00' F000'        	goto	u3561
  9230  02EA' EF00' F000'        	goto	u3560
  9231  02EE'                    u3561:
  9232  02EE' FFFF               	dw	65535	; assembler added errata NOP
  9233  02F0' EF00' F000'        	goto	l1114
  9234  02F4'                    u3560:
  9235  02F4' FFFF               	dw	65535	; assembler added errata NOP
  9236  02F6' 8000'              	bsf	___flmul@prod^0,0,c
  9237  02F8'                    l1114:
  9238  02F8' FFFF               	dw	65535	; assembler added errata NOP
  9239  02FA' 90D8               	bcf	status,0,c
  9240  02FC' 3600'              	rlcf	___flmul@grs^0,f,c
  9241  02FE' 3600'              	rlcf	(___flmul@grs+1)^0,f,c
  9242  0300' 3600'              	rlcf	(___flmul@grs+2)^0,f,c
  9243  0302' 3600'              	rlcf	(___flmul@grs+3)^0,f,c
  9244  0304' 0600'              	decf	___flmul@temp^0,f,c
  9245  0306' A0D8               	btfss	status,0,c
  9246  0308' 0600'              	decf	(___flmul@temp+1)^0,f,c
  9247  030A'                    l3587:
  9248  030A' FFFF               	dw	65535	; assembler added errata NOP
  9249  030C' AE00'              	btfss	(___flmul@prod+2)^0,7,c
  9250  030E' EF00' F000'        	goto	u3571
  9251  0312' EF00' F000'        	goto	u3570
  9252  0316'                    u3571:
  9253  0316' FFFF               	dw	65535	; assembler added errata NOP
  9254  0318' EF00' F000'        	goto	l3581
  9255  031C'                    u3570:
  9256  031C' FFFF               	dw	65535	; assembler added errata NOP
  9257  031E' 0E00               	movlw	0
  9258  0320' 6E00'              	movwf	___flmul@aexp^0,c
  9259  0322' AE00'              	btfss	(___flmul@grs+3)^0,7,c
  9260  0324' EF00' F000'        	goto	u3581
  9261  0328' EF00' F000'        	goto	u3580
  9262  032C'                    u3581:
  9263  032C' FFFF               	dw	65535	; assembler added errata NOP
  9264  032E' EF00' F000'        	goto	l1116
  9265  0332'                    u3580:
  9266  0332' FFFF               	dw	65535	; assembler added errata NOP
  9267  0334' 0EFF               	movlw	255
  9268  0336' 1400'              	andwf	___flmul@grs^0,w,c
  9269  0338' 6E00'              	movwf	??___flmul^0,c
  9270  033A' 0EFF               	movlw	255
  9271  033C' 1400'              	andwf	(___flmul@grs+1)^0,w,c
  9272  033E' 6E00'              	movwf	(??___flmul+1)^0,c
  9273  0340' 0EFF               	movlw	255
  9274  0342' 1400'              	andwf	(___flmul@grs+2)^0,w,c
  9275  0344' 6E00'              	movwf	(??___flmul+2)^0,c
  9276  0346' 0E7F               	movlw	127
  9277  0348' 1400'              	andwf	(___flmul@grs+3)^0,w,c
  9278  034A' 6E00'              	movwf	(??___flmul+3)^0,c
  9279  034C' 5000'              	movf	??___flmul^0,w,c
  9280  034E' 1000'              	iorwf	(??___flmul+1)^0,w,c
  9281  0350' 1000'              	iorwf	(??___flmul+2)^0,w,c
  9282  0352' 1000'              	iorwf	(??___flmul+3)^0,w,c
  9283  0354' B4D8               	btfsc	status,2,c
  9284  0356' EF00' F000'        	goto	u3591
  9285  035A' EF00' F000'        	goto	u3590
  9286  035E'                    u3591:
  9287  035E' FFFF               	dw	65535	; assembler added errata NOP
  9288  0360' EF00' F000'        	goto	l1117
  9289  0364'                    u3590:
  9290  0364' FFFF               	dw	65535	; assembler added errata NOP
  9291  0366'                    l3595:
  9292  0366' FFFF               	dw	65535	; assembler added errata NOP
  9293  0368' 0E01               	movlw	1
  9294  036A' 6E00'              	movwf	___flmul@aexp^0,c
  9295  036C' EF00' F000'        	goto	l1116
  9296  0370'                    l1117:
  9297  0370' FFFF               	dw	65535	; assembler added errata NOP
  9298  0372' A000'              	btfss	___flmul@prod^0,0,c
  9299  0374' EF00' F000'        	goto	u3601
  9300  0378' EF00' F000'        	goto	u3600
  9301  037C'                    u3601:
  9302  037C' FFFF               	dw	65535	; assembler added errata NOP
  9303  037E' EF00' F000'        	goto	l1116
  9304  0382'                    u3600:
  9305  0382' FFFF               	dw	65535	; assembler added errata NOP
  9306  0384' EF00' F000'        	goto	l3595
  9307  0388'                    l1116:
  9308  0388' FFFF               	dw	65535	; assembler added errata NOP
  9309  038A' 5000'              	movf	___flmul@aexp^0,w,c
  9310  038C' B4D8               	btfsc	status,2,c
  9311  038E' EF00' F000'        	goto	u3611
  9312  0392' EF00' F000'        	goto	u3610
  9313  0396'                    u3611:
  9314  0396' FFFF               	dw	65535	; assembler added errata NOP
  9315  0398' EF00' F000'        	goto	l3607
  9316  039C'                    u3610:
  9317  039C' FFFF               	dw	65535	; assembler added errata NOP
  9318  039E' 0E01               	movlw	1
  9319  03A0' 2600'              	addwf	___flmul@prod^0,f,c
  9320  03A2' 0E00               	movlw	0
  9321  03A4' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  9322  03A6' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  9323  03A8' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  9324  03AA' A000'              	btfss	(___flmul@prod+3)^0,0,c
  9325  03AC' EF00' F000'        	goto	u3621
  9326  03B0' EF00' F000'        	goto	u3620
  9327  03B4'                    u3621:
  9328  03B4' FFFF               	dw	65535	; assembler added errata NOP
  9329  03B6' EF00' F000'        	goto	l3607
  9330  03BA'                    u3620:
  9331  03BA' FFFF               	dw	65535	; assembler added errata NOP
  9332  03BC' C01C' F011'        	movff	___flmul@prod,??___flmul
  9333  03C0' C01D' F012'        	movff	___flmul@prod+1,??___flmul+1
  9334  03C4' C01E' F013'        	movff	___flmul@prod+2,??___flmul+2
  9335  03C8' C01F' F014'        	movff	___flmul@prod+3,??___flmul+3
  9336  03CC' 3400'              	rlcf	(??___flmul+3)^0,w,c
  9337  03CE' 3200'              	rrcf	(??___flmul+3)^0,f,c
  9338  03D0' 3200'              	rrcf	(??___flmul+2)^0,f,c
  9339  03D2' 3200'              	rrcf	(??___flmul+1)^0,f,c
  9340  03D4' 3200'              	rrcf	??___flmul^0,f,c
  9341  03D6' C011' F01C'        	movff	??___flmul,___flmul@prod
  9342  03DA' C012' F01D'        	movff	??___flmul+1,___flmul@prod+1
  9343  03DE' C013' F01E'        	movff	??___flmul+2,___flmul@prod+2
  9344  03E2' C014' F01F'        	movff	??___flmul+3,___flmul@prod+3
  9345  03E6' 4A00'              	infsnz	___flmul@temp^0,f,c
  9346  03E8' 2A00'              	incf	(___flmul@temp+1)^0,f,c
  9347  03EA'                    l3607:
  9348  03EA' FFFF               	dw	65535	; assembler added errata NOP
  9349  03EC' BE00'              	btfsc	(___flmul@temp+1)^0,7,c
  9350  03EE' EF00' F000'        	goto	u3631
  9351  03F2' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9352  03F4' E109               	bnz	u3630
  9353  03F6' 2800'              	incf	___flmul@temp^0,w,c
  9354  03F8' A0D8               	btfss	status,0,c
  9355  03FA' EF00' F000'        	goto	u3631
  9356  03FE' EF00' F000'        	goto	u3630
  9357  0402'                    u3631:
  9358  0402' FFFF               	dw	65535	; assembler added errata NOP
  9359  0404' EF00' F000'        	goto	l3611
  9360  0408'                    u3630:
  9361  0408' FFFF               	dw	65535	; assembler added errata NOP
  9362  040A' 0E00               	movlw	0
  9363  040C' 6E00'              	movwf	___flmul@prod^0,c
  9364  040E' 0E00               	movlw	0
  9365  0410' 6E00'              	movwf	(___flmul@prod+1)^0,c
  9366  0412' 0E80               	movlw	128
  9367  0414' 6E00'              	movwf	(___flmul@prod+2)^0,c
  9368  0416' 0E7F               	movlw	127
  9369  0418' 6E00'              	movwf	(___flmul@prod+3)^0,c
  9370  041A' EF00' F000'        	goto	l3623
  9371  041E'                    l3611:
  9372  041E' FFFF               	dw	65535	; assembler added errata NOP
  9373  0420' BE00'              	btfsc	(___flmul@temp+1)^0,7,c
  9374  0422' EF00' F000'        	goto	u3640
  9375  0426' 5000'              	movf	(___flmul@temp+1)^0,w,c
  9376  0428' E106               	bnz	u3641
  9377  042A' 0400'              	decf	___flmul@temp^0,w,c
  9378  042C' B0D8               	btfsc	status,0,c
  9379  042E' EF00' F000'        	goto	u3641
  9380  0432' EF00' F000'        	goto	u3640
  9381  0436'                    u3641:
  9382  0436' FFFF               	dw	65535	; assembler added errata NOP
  9383  0438' EF00' F000'        	goto	l1124
  9384  043C'                    u3640:
  9385  043C' FFFF               	dw	65535	; assembler added errata NOP
  9386  043E' 0E00               	movlw	0
  9387  0440' 6E00'              	movwf	___flmul@prod^0,c
  9388  0442' 0E00               	movlw	0
  9389  0444' 6E00'              	movwf	(___flmul@prod+1)^0,c
  9390  0446' 0E00               	movlw	0
  9391  0448' 6E00'              	movwf	(___flmul@prod+2)^0,c
  9392  044A' 0E00               	movlw	0
  9393  044C' 6E00'              	movwf	(___flmul@prod+3)^0,c
  9394  044E' 0E00               	movlw	0
  9395  0450' 6E00'              	movwf	___flmul@sign^0,c
  9396  0452' EF00' F000'        	goto	l3623
  9397  0456'                    l1124:
  9398  0456' FFFF               	dw	65535	; assembler added errata NOP
  9399  0458' C020' F01B'        	movff	___flmul@temp,___flmul@bexp
  9400  045C' 0EFF               	movlw	255
  9401  045E' 1600'              	andwf	___flmul@prod^0,f,c
  9402  0460' 0EFF               	movlw	255
  9403  0462' 1600'              	andwf	(___flmul@prod+1)^0,f,c
  9404  0464' 0E7F               	movlw	127
  9405  0466' 1600'              	andwf	(___flmul@prod+2)^0,f,c
  9406  0468' 0E00               	movlw	0
  9407  046A' 1600'              	andwf	(___flmul@prod+3)^0,f,c
  9408  046C' A000'              	btfss	___flmul@bexp^0,0,c
  9409  046E' EF00' F000'        	goto	u3651
  9410  0472' EF00' F000'        	goto	u3650
  9411  0476'                    u3651:
  9412  0476' FFFF               	dw	65535	; assembler added errata NOP
  9413  0478' EF00' F000'        	goto	l3621
  9414  047C'                    u3650:
  9415  047C' FFFF               	dw	65535	; assembler added errata NOP
  9416  047E' 8E00'              	bsf	(___flmul@prod+2)^0,7,c
  9417  0480'                    l3621:
  9418  0480' FFFF               	dw	65535	; assembler added errata NOP
  9419  0482' 90D8               	bcf	status,0,c
  9420  0484' 3000'              	rrcf	___flmul@bexp^0,w,c
  9421  0486' 6E00'              	movwf	(___flmul@prod+3)^0,c
  9422  0488'                    l3623:
  9423  0488' FFFF               	dw	65535	; assembler added errata NOP
  9424  048A' 5000'              	movf	___flmul@sign^0,w,c
  9425  048C' 1200'              	iorwf	(___flmul@prod+3)^0,f,c
  9426  048E' C01C' F009'        	movff	___flmul@prod,?___flmul
  9427  0492' C01D' F00A'        	movff	___flmul@prod+1,?___flmul+1
  9428  0496' C01E' F00B'        	movff	___flmul@prod+2,?___flmul+2
  9429  049A' C01F' F00C'        	movff	___flmul@prod+3,?___flmul+3
  9430  049E'                    l1111:
  9431  049E' FFFF               	dw	65535	; assembler added errata NOP
  9432  04A0' 0012               	return		;funcret
  9433  04A2' FFFF               	dw	65535	; errata NOP
  9434  04A4'                    __end_of___flmul:
  9435                           	callstack 0
  9436                           
  9437 ;; *************** function ___flge *****************
  9438 ;; Defined at:
  9439 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  ff1             4   48[COMRAM] unsigned char 
  9442 ;;  ff2             4   52[COMRAM] unsigned char 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;		None               void
  9447 ;; Registers used:
  9448 ;;		wreg, status,2, status,0
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9454 ;;      Params:         8       0       0       0       0       0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0
  9456 ;;      Temps:          4       0       0       0       0       0       0
  9457 ;;      Totals:        12       0       0       0       0       0       0
  9458 ;;Total ram usage:       12 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 2
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		_pick_and_place
  9465 ;;		_roundf
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           	psect	text36
  9470  0000'                    __ptext36:
  9471                           	callstack 0
  9472  0000'                    ___flge:
  9473                           	callstack 0
  9474  0000' FFFF               	dw	65535	; assembler added errata NOP
  9475  0002' 0E00               	movlw	0
  9476  0004' 1400'              	andwf	___flge@ff1^0,w,c
  9477  0006' 6E00'              	movwf	??___flge^0,c
  9478  0008' 0E00               	movlw	0
  9479  000A' 1400'              	andwf	(___flge@ff1+1)^0,w,c
  9480  000C' 6E00'              	movwf	(??___flge+1)^0,c
  9481  000E' 0E80               	movlw	128
  9482  0010' 1400'              	andwf	(___flge@ff1+2)^0,w,c
  9483  0012' 6E00'              	movwf	(??___flge+2)^0,c
  9484  0014' 0E7F               	movlw	127
  9485  0016' 1400'              	andwf	(___flge@ff1+3)^0,w,c
  9486  0018' 6E00'              	movwf	(??___flge+3)^0,c
  9487  001A' 5000'              	movf	??___flge^0,w,c
  9488  001C' 1000'              	iorwf	(??___flge+1)^0,w,c
  9489  001E' 1000'              	iorwf	(??___flge+2)^0,w,c
  9490  0020' 1000'              	iorwf	(??___flge+3)^0,w,c
  9491  0022' A4D8               	btfss	status,2,c
  9492  0024' EF00' F000'        	goto	u5311
  9493  0028' EF00' F000'        	goto	u5310
  9494  002C'                    u5311:
  9495  002C' FFFF               	dw	65535	; assembler added errata NOP
  9496  002E' EF00' F000'        	goto	l4735
  9497  0032'                    u5310:
  9498  0032' FFFF               	dw	65535	; assembler added errata NOP
  9499  0034' 0E00               	movlw	0
  9500  0036' 6E00'              	movwf	___flge@ff1^0,c
  9501  0038' 0E00               	movlw	0
  9502  003A' 6E00'              	movwf	(___flge@ff1+1)^0,c
  9503  003C' 0E00               	movlw	0
  9504  003E' 6E00'              	movwf	(___flge@ff1+2)^0,c
  9505  0040' 0E00               	movlw	0
  9506  0042' 6E00'              	movwf	(___flge@ff1+3)^0,c
  9507  0044'                    l4735:
  9508  0044' FFFF               	dw	65535	; assembler added errata NOP
  9509  0046' 0E00               	movlw	0
  9510  0048' 1400'              	andwf	___flge@ff2^0,w,c
  9511  004A' 6E00'              	movwf	??___flge^0,c
  9512  004C' 0E00               	movlw	0
  9513  004E' 1400'              	andwf	(___flge@ff2+1)^0,w,c
  9514  0050' 6E00'              	movwf	(??___flge+1)^0,c
  9515  0052' 0E80               	movlw	128
  9516  0054' 1400'              	andwf	(___flge@ff2+2)^0,w,c
  9517  0056' 6E00'              	movwf	(??___flge+2)^0,c
  9518  0058' 0E7F               	movlw	127
  9519  005A' 1400'              	andwf	(___flge@ff2+3)^0,w,c
  9520  005C' 6E00'              	movwf	(??___flge+3)^0,c
  9521  005E' 5000'              	movf	??___flge^0,w,c
  9522  0060' 1000'              	iorwf	(??___flge+1)^0,w,c
  9523  0062' 1000'              	iorwf	(??___flge+2)^0,w,c
  9524  0064' 1000'              	iorwf	(??___flge+3)^0,w,c
  9525  0066' A4D8               	btfss	status,2,c
  9526  0068' EF00' F000'        	goto	u5321
  9527  006C' EF00' F000'        	goto	u5320
  9528  0070'                    u5321:
  9529  0070' FFFF               	dw	65535	; assembler added errata NOP
  9530  0072' EF00' F000'        	goto	l4739
  9531  0076'                    u5320:
  9532  0076' FFFF               	dw	65535	; assembler added errata NOP
  9533  0078' 0E00               	movlw	0
  9534  007A' 6E00'              	movwf	___flge@ff2^0,c
  9535  007C' 0E00               	movlw	0
  9536  007E' 6E00'              	movwf	(___flge@ff2+1)^0,c
  9537  0080' 0E00               	movlw	0
  9538  0082' 6E00'              	movwf	(___flge@ff2+2)^0,c
  9539  0084' 0E00               	movlw	0
  9540  0086' 6E00'              	movwf	(___flge@ff2+3)^0,c
  9541  0088'                    l4739:
  9542  0088' FFFF               	dw	65535	; assembler added errata NOP
  9543  008A' AE00'              	btfss	(___flge@ff1+3)^0,7,c
  9544  008C' EF00' F000'        	goto	u5331
  9545  0090' EF00' F000'        	goto	u5330
  9546  0094'                    u5331:
  9547  0094' FFFF               	dw	65535	; assembler added errata NOP
  9548  0096' EF00' F000'        	goto	l4743
  9549  009A'                    u5330:
  9550  009A' FFFF               	dw	65535	; assembler added errata NOP
  9551  009C' 6C00'              	negf	___flge@ff1^0,c
  9552  009E' 1E00'              	comf	(___flge@ff1+1)^0,f,c
  9553  00A0' B0D8               	btfsc	status,0,c
  9554  00A2' 2A00'              	incf	(___flge@ff1+1)^0,f,c
  9555  00A4' 1E00'              	comf	(___flge@ff1+2)^0,f,c
  9556  00A6' B0D8               	btfsc	status,0,c
  9557  00A8' 2A00'              	incf	(___flge@ff1+2)^0,f,c
  9558  00AA' 0E80               	movlw	128
  9559  00AC' 5600'              	subfwb	(___flge@ff1+3)^0,f,c
  9560  00AE'                    l4743:
  9561  00AE' FFFF               	dw	65535	; assembler added errata NOP
  9562  00B0' AE00'              	btfss	(___flge@ff2+3)^0,7,c
  9563  00B2' EF00' F000'        	goto	u5341
  9564  00B6' EF00' F000'        	goto	u5340
  9565  00BA'                    u5341:
  9566  00BA' FFFF               	dw	65535	; assembler added errata NOP
  9567  00BC' EF00' F000'        	goto	l758
  9568  00C0'                    u5340:
  9569  00C0' FFFF               	dw	65535	; assembler added errata NOP
  9570  00C2' 6C00'              	negf	___flge@ff2^0,c
  9571  00C4' 1E00'              	comf	(___flge@ff2+1)^0,f,c
  9572  00C6' B0D8               	btfsc	status,0,c
  9573  00C8' 2A00'              	incf	(___flge@ff2+1)^0,f,c
  9574  00CA' 1E00'              	comf	(___flge@ff2+2)^0,f,c
  9575  00CC' B0D8               	btfsc	status,0,c
  9576  00CE' 2A00'              	incf	(___flge@ff2+2)^0,f,c
  9577  00D0' 0E80               	movlw	128
  9578  00D2' 5600'              	subfwb	(___flge@ff2+3)^0,f,c
  9579  00D4'                    l758:
  9580  00D4' FFFF               	dw	65535	; assembler added errata NOP
  9581  00D6' 0E00               	movlw	0
  9582  00D8' 1A00'              	xorwf	___flge@ff1^0,f,c
  9583  00DA' 0E00               	movlw	0
  9584  00DC' 1A00'              	xorwf	(___flge@ff1+1)^0,f,c
  9585  00DE' 0E00               	movlw	0
  9586  00E0' 1A00'              	xorwf	(___flge@ff1+2)^0,f,c
  9587  00E2' 0E80               	movlw	128
  9588  00E4' 1A00'              	xorwf	(___flge@ff1+3)^0,f,c
  9589  00E6' 0E00               	movlw	0
  9590  00E8' 1A00'              	xorwf	___flge@ff2^0,f,c
  9591  00EA' 0E00               	movlw	0
  9592  00EC' 1A00'              	xorwf	(___flge@ff2+1)^0,f,c
  9593  00EE' 0E00               	movlw	0
  9594  00F0' 1A00'              	xorwf	(___flge@ff2+2)^0,f,c
  9595  00F2' 0E80               	movlw	128
  9596  00F4' 1A00'              	xorwf	(___flge@ff2+3)^0,f,c
  9597  00F6' 5000'              	movf	___flge@ff2^0,w,c
  9598  00F8' 5C00'              	subwf	___flge@ff1^0,w,c
  9599  00FA' 5000'              	movf	(___flge@ff2+1)^0,w,c
  9600  00FC' 5800'              	subwfb	(___flge@ff1+1)^0,w,c
  9601  00FE' 5000'              	movf	(___flge@ff2+2)^0,w,c
  9602  0100' 5800'              	subwfb	(___flge@ff1+2)^0,w,c
  9603  0102' 5000'              	movf	(___flge@ff2+3)^0,w,c
  9604  0104' 5800'              	subwfb	(___flge@ff1+3)^0,w,c
  9605  0106' B0D8               	btfsc	status,0,c
  9606  0108' EF00' F000'        	goto	u5351
  9607  010C' EF00' F000'        	goto	u5350
  9608  0110'                    u5351:
  9609  0110' FFFF               	dw	65535	; assembler added errata NOP
  9610  0112' EF00' F000'        	goto	l4749
  9611  0116'                    u5350:
  9612  0116' FFFF               	dw	65535	; assembler added errata NOP
  9613  0118' 90D8               	bcf	status,0,c
  9614  011A' EF00' F000'        	goto	l763
  9615  011E'                    l4749:
  9616  011E' FFFF               	dw	65535	; assembler added errata NOP
  9617  0120' 80D8               	bsf	status,0,c
  9618  0122'                    l763:
  9619  0122' FFFF               	dw	65535	; assembler added errata NOP
  9620  0124' 0012               	return		;funcret
  9621  0126' FFFF               	dw	65535	; errata NOP
  9622  0128'                    __end_of___flge:
  9623                           	callstack 0
  9624                           
  9625 ;; *************** function ___fltol *****************
  9626 ;; Defined at:
  9627 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  f1              4   86[COMRAM] unsigned char 
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;  exp1            1    5[BANK0 ] unsigned char 
  9632 ;;  sign1           1    4[BANK0 ] unsigned char 
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  4   86[COMRAM] long 
  9635 ;; Registers used:
  9636 ;;		wreg, status,2, status,0
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9642 ;;      Params:         4       0       0       0       0       0       0
  9643 ;;      Locals:         0       2       0       0       0       0       0
  9644 ;;      Temps:          0       4       0       0       0       0       0
  9645 ;;      Totals:         4       6       0       0       0       0       0
  9646 ;;Total ram usage:       10 bytes
  9647 ;; Hardware stack levels used: 1
  9648 ;; Hardware stack levels required when called: 2
  9649 ;; This function calls:
  9650 ;;		Nothing
  9651 ;; This function is called by:
  9652 ;;		_init_USART
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656                           	psect	text37
  9657  0000'                    __ptext37:
  9658                           	callstack 0
  9659  0000'                    ___fltol:
  9660                           	callstack 0
  9661  0000' FFFF               	dw	65535	; assembler added errata NOP
  9662  0002' 3400'              	rlcf	(___fltol@f1+2)^0,w,c
  9663  0004' 3400'              	rlcf	(___fltol@f1+3)^0,w,c
  9664  0006' 0100               	movlb	0	; () banked
  9665  0008' 6F00'              	movwf	___fltol@exp1& (0+255),b
  9666  000A' 5100'              	movf	___fltol@exp1& (0+255),w,b
  9667  000C' A4D8               	btfss	status,2,c
  9668  000E' EF00' F000'        	goto	u6121
  9669  0012' EF00' F000'        	goto	u6120
  9670  0016'                    u6121:
  9671  0016' FFFF               	dw	65535	; assembler added errata NOP
  9672  0018' EF00' F000'        	goto	l5161
  9673  001C'                    u6120:
  9674  001C' FFFF               	dw	65535	; assembler added errata NOP
  9675  001E'                    l5157:
  9676  001E' FFFF               	dw	65535	; assembler added errata NOP
  9677                           
  9678                           ; BSR set to: 0
  9679  0020' 0E00               	movlw	0
  9680  0022' 6E00'              	movwf	?___fltol^0,c
  9681  0024' 0E00               	movlw	0
  9682  0026' 6E00'              	movwf	(?___fltol+1)^0,c
  9683  0028' 0E00               	movlw	0
  9684  002A' 6E00'              	movwf	(?___fltol+2)^0,c
  9685  002C' 0E00               	movlw	0
  9686  002E' 6E00'              	movwf	(?___fltol+3)^0,c
  9687  0030' EF00' F000'        	goto	l790
  9688  0034'                    l5161:
  9689  0034' FFFF               	dw	65535	; assembler added errata NOP
  9690                           
  9691                           ; BSR set to: 0
  9692  0036' C056' F000'        	movff	___fltol@f1,??___fltol
  9693  003A' C057' F001'        	movff	___fltol@f1+1,??___fltol+1
  9694  003E' C058' F002'        	movff	___fltol@f1+2,??___fltol+2
  9695  0042' C059' F003'        	movff	___fltol@f1+3,??___fltol+3
  9696  0046' 0E20               	movlw	32
  9697  0048' EF00' F000'        	goto	u6130
  9698  004C'                    u6135:
  9699  004C' FFFF               	dw	65535	; assembler added errata NOP
  9700  004E' 90D8               	bcf	status,0,c
  9701  0050' 3300'              	rrcf	(??___fltol+3)& (0+255),f,b
  9702  0052' 3300'              	rrcf	(??___fltol+2)& (0+255),f,b
  9703  0054' 3300'              	rrcf	(??___fltol+1)& (0+255),f,b
  9704  0056' 3300'              	rrcf	??___fltol& (0+255),f,b
  9705  0058'                    u6130:
  9706  0058' FFFF               	dw	65535	; assembler added errata NOP
  9707  005A' 2EE8               	decfsz	wreg,f,c
  9708  005C' EF00' F000'        	goto	u6135
  9709  0060' 5100'              	movf	??___fltol& (0+255),w,b
  9710  0062' 6F00'              	movwf	___fltol@sign1& (0+255),b
  9711  0064'                    
  9712                           ; BSR set to: 0
  9713  0064' 8E00'              	bsf	(___fltol@f1+2)^0,7,c
  9714  0066'                    
  9715                           ; BSR set to: 0
  9716  0066' 0EFF               	movlw	255
  9717  0068' 1600'              	andwf	___fltol@f1^0,f,c
  9718  006A' 0EFF               	movlw	255
  9719  006C' 1600'              	andwf	(___fltol@f1+1)^0,f,c
  9720  006E' 0EFF               	movlw	255
  9721  0070' 1600'              	andwf	(___fltol@f1+2)^0,f,c
  9722  0072' 0E00               	movlw	0
  9723  0074' 1600'              	andwf	(___fltol@f1+3)^0,f,c
  9724  0076'                    
  9725                           ; BSR set to: 0
  9726  0076' 0E96               	movlw	150
  9727  0078' 5F00'              	subwf	___fltol@exp1& (0+255),f,b
  9728  007A'                    
  9729                           ; BSR set to: 0
  9730  007A' BF00'              	btfsc	___fltol@exp1& (0+255),7,b
  9731  007C' EF00' F000'        	goto	u6140
  9732  0080' EF00' F000'        	goto	u6141
  9733  0084'                    u6141:
  9734  0084' FFFF               	dw	65535	; assembler added errata NOP
  9735  0086' EF00' F000'        	goto	l5181
  9736  008A'                    u6140:
  9737  008A' FFFF               	dw	65535	; assembler added errata NOP
  9738  008C'                    
  9739                           ; BSR set to: 0
  9740  008C' 5100'              	movf	___fltol@exp1& (0+255),w,b
  9741  008E' 0A80               	xorlw	128
  9742  0090' 0F97               	addlw	151
  9743  0092' B0D8               	btfsc	status,0,c
  9744  0094' EF00' F000'        	goto	u6151
  9745  0098' EF00' F000'        	goto	u6150
  9746  009C'                    u6151:
  9747  009C' FFFF               	dw	65535	; assembler added errata NOP
  9748  009E' EF00' F000'        	goto	l5177
  9749  00A2'                    u6150:
  9750  00A2' FFFF               	dw	65535	; assembler added errata NOP
  9751  00A4' EF00' F000'        	goto	l5157
  9752  00A8'                    l5177:
  9753  00A8' FFFF               	dw	65535	; assembler added errata NOP
  9754                           
  9755                           ; BSR set to: 0
  9756  00AA' 90D8               	bcf	status,0,c
  9757  00AC' 3200'              	rrcf	(___fltol@f1+3)^0,f,c
  9758  00AE' 3200'              	rrcf	(___fltol@f1+2)^0,f,c
  9759  00B0' 3200'              	rrcf	(___fltol@f1+1)^0,f,c
  9760  00B2' 3200'              	rrcf	___fltol@f1^0,f,c
  9761  00B4'                    
  9762                           ; BSR set to: 0
  9763  00B4' 3F00'              	incfsz	___fltol@exp1& (0+255),f,b
  9764  00B6' EF00' F000'        	goto	l5177
  9765  00BA' EF00' F000'        	goto	l5191
  9766  00BE'                    l5181:
  9767  00BE' FFFF               	dw	65535	; assembler added errata NOP
  9768                           
  9769                           ; BSR set to: 0
  9770  00C0' 0E1F               	movlw	31
  9771  00C2' 6500'              	cpfsgt	___fltol@exp1& (0+255),b
  9772  00C4' EF00' F000'        	goto	u6161
  9773  00C8' EF00' F000'        	goto	u6160
  9774  00CC'                    u6161:
  9775  00CC' FFFF               	dw	65535	; assembler added errata NOP
  9776  00CE' EF00' F000'        	goto	l5189
  9777  00D2'                    u6160:
  9778  00D2' FFFF               	dw	65535	; assembler added errata NOP
  9779  00D4' EF00' F000'        	goto	l5157
  9780  00D8'                    l5187:
  9781  00D8' FFFF               	dw	65535	; assembler added errata NOP
  9782                           
  9783                           ; BSR set to: 0
  9784  00DA' 90D8               	bcf	status,0,c
  9785  00DC' 3600'              	rlcf	___fltol@f1^0,f,c
  9786  00DE' 3600'              	rlcf	(___fltol@f1+1)^0,f,c
  9787  00E0' 3600'              	rlcf	(___fltol@f1+2)^0,f,c
  9788  00E2' 3600'              	rlcf	(___fltol@f1+3)^0,f,c
  9789  00E4' 0700'              	decf	___fltol@exp1& (0+255),f,b
  9790  00E6'                    l5189:
  9791  00E6' FFFF               	dw	65535	; assembler added errata NOP
  9792                           
  9793                           ; BSR set to: 0
  9794  00E8' 5100'              	movf	___fltol@exp1& (0+255),w,b
  9795  00EA' A4D8               	btfss	status,2,c
  9796  00EC' EF00' F000'        	goto	u6171
  9797  00F0' EF00' F000'        	goto	u6170
  9798  00F4'                    u6171:
  9799  00F4' FFFF               	dw	65535	; assembler added errata NOP
  9800  00F6' EF00' F000'        	goto	l5187
  9801  00FA'                    u6170:
  9802  00FA'                    l5191:
  9803  00FA' FFFF               	dw	65535	; assembler added errata NOP
  9804                           
  9805                           ; BSR set to: 0
  9806  00FC' 5100'              	movf	___fltol@sign1& (0+255),w,b
  9807  00FE' B4D8               	btfsc	status,2,c
  9808  0100' EF00' F000'        	goto	u6181
  9809  0104' EF00' F000'        	goto	u6180
  9810  0108'                    u6181:
  9811  0108' FFFF               	dw	65535	; assembler added errata NOP
  9812  010A' EF00' F000'        	goto	l5195
  9813  010E'                    u6180:
  9814  010E' FFFF               	dw	65535	; assembler added errata NOP
  9815  0110'                    
  9816                           ; BSR set to: 0
  9817  0110' 1E00'              	comf	(___fltol@f1+3)^0,f,c
  9818  0112' 1E00'              	comf	(___fltol@f1+2)^0,f,c
  9819  0114' 1E00'              	comf	(___fltol@f1+1)^0,f,c
  9820  0116' 6C00'              	negf	___fltol@f1^0,c
  9821  0118' 0E00               	movlw	0
  9822  011A' 2200'              	addwfc	(___fltol@f1+1)^0,f,c
  9823  011C' 2200'              	addwfc	(___fltol@f1+2)^0,f,c
  9824  011E' 2200'              	addwfc	(___fltol@f1+3)^0,f,c
  9825  0120'                    l5195:
  9826  0120' FFFF               	dw	65535	; assembler added errata NOP
  9827                           
  9828                           ; BSR set to: 0
  9829  0122' C056' F056'        	movff	___fltol@f1,?___fltol
  9830  0126' C057' F057'        	movff	___fltol@f1+1,?___fltol+1
  9831  012A' C058' F058'        	movff	___fltol@f1+2,?___fltol+2
  9832  012E' C059' F059'        	movff	___fltol@f1+3,?___fltol+3
  9833  0132'                    l790:
  9834  0132' FFFF               	dw	65535	; assembler added errata NOP
  9835                           
  9836                           ; BSR set to: 0
  9837  0134' 0012               	return		;funcret
  9838  0136' FFFF               	dw	65535	; errata NOP
  9839  0138'                    __end_of___fltol:
  9840                           	callstack 0
  9841                           
  9842 ;; *************** function _init_Timers *****************
  9843 ;; Defined at:
  9844 ;;		line 44 in file "init_PIC.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;		None
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;		None
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1    wreg      void 
  9851 ;; Registers used:
  9852 ;;		wreg, status,2
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9858 ;;      Params:         0       0       0       0       0       0       0
  9859 ;;      Locals:         0       0       0       0       0       0       0
  9860 ;;      Temps:          0       0       0       0       0       0       0
  9861 ;;      Totals:         0       0       0       0       0       0       0
  9862 ;;Total ram usage:        0 bytes
  9863 ;; Hardware stack levels used: 1
  9864 ;; Hardware stack levels required when called: 2
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_main
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text38
  9873  0000'                    __ptext38:
  9874                           	callstack 0
  9875  0000'                    _init_Timers:
  9876                           	callstack 0
  9877  0000' FFFF               	dw	65535	; assembler added errata NOP
  9878  0002'                    
  9879                           ;init_PIC.c: 45:     T0CONbits.T08BIT = 0;
  9880  0002' 9CD5               	bcf	213,6,c	;volatile
  9881                           
  9882                           ;init_PIC.c: 46:  T0CONbits.T0CS = 0;
  9883  0004' 9AD5               	bcf	213,5,c	;volatile
  9884                           
  9885                           ;init_PIC.c: 47:  T0CONbits.PSA = 1;
  9886  0006' 86D5               	bsf	213,3,c	;volatile
  9887                           
  9888                           ;init_PIC.c: 48:  T0CONbits.TMR0ON = 0;
  9889  0008' 9ED5               	bcf	213,7,c	;volatile
  9890  000A'                    
  9891                           ;init_PIC.c: 51:  TMR0H = 0xB2;
  9892  000A' 0EB2               	movlw	178
  9893  000C' 6ED7               	movwf	215,c	;volatile
  9894                           
  9895                           ;init_PIC.c: 52:  TMR0L = 0x04;
  9896  000E' 0E04               	movlw	4
  9897  0010' 6ED6               	movwf	214,c	;volatile
  9898  0012'                    
  9899                           ;init_PIC.c: 55:     T1CONbits.RD16 = 1;
  9900  0012' 8ECD               	bsf	205,7,c	;volatile
  9901  0014'                    
  9902                           ;init_PIC.c: 56:  T1CONbits.T1CKPS1 = 0;
  9903  0014' 9ACD               	bcf	205,5,c	;volatile
  9904  0016'                    
  9905                           ;init_PIC.c: 57:  T1CONbits.T1CKPS0 = 0;
  9906  0016' 98CD               	bcf	205,4,c	;volatile
  9907  0018'                    
  9908                           ;init_PIC.c: 58:  T1CONbits.T1OSCEN = 0;
  9909  0018' 96CD               	bcf	205,3,c	;volatile
  9910  001A'                    
  9911                           ;init_PIC.c: 59:  T1CONbits.TMR1CS = 0;
  9912  001A' 92CD               	bcf	205,1,c	;volatile
  9913  001C'                    
  9914                           ;init_PIC.c: 60:  T1CONbits.TMR1ON = 0;
  9915  001C' 90CD               	bcf	205,0,c	;volatile
  9916                           
  9917                           ;init_PIC.c: 63:  TMR1H = 0xFA;
  9918  001E' 0EFA               	movlw	250
  9919  0020' 6ECF               	movwf	207,c	;volatile
  9920                           
  9921                           ;init_PIC.c: 64:     TMR1L = 0x24;
  9922  0022' 0E24               	movlw	36
  9923  0024' 6ECE               	movwf	206,c	;volatile
  9924  0026' 0012               	return		;funcret
  9925  0028' FFFF               	dw	65535	; errata NOP
  9926  002A'                    __end_of_init_Timers:
  9927                           	callstack 0
  9928                           
  9929 ;; *************** function _init_PORTS *****************
  9930 ;; Defined at:
  9931 ;;		line 21 in file "init_PIC.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;		None
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;		None
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9945 ;;      Params:         0       0       0       0       0       0       0
  9946 ;;      Locals:         0       0       0       0       0       0       0
  9947 ;;      Temps:          0       0       0       0       0       0       0
  9948 ;;      Totals:         0       0       0       0       0       0       0
  9949 ;;Total ram usage:        0 bytes
  9950 ;; Hardware stack levels used: 1
  9951 ;; Hardware stack levels required when called: 2
  9952 ;; This function calls:
  9953 ;;		Nothing
  9954 ;; This function is called by:
  9955 ;;		_main
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           	psect	text39
  9960  0000'                    __ptext39:
  9961                           	callstack 0
  9962  0000'                    _init_PORTS:
  9963                           	callstack 0
  9964  0000' FFFF               	dw	65535	; assembler added errata NOP
  9965  0002'                    
  9966                           ;init_PIC.c: 25:     TRISD = 0x00;
  9967  0002' 0E00               	movlw	0
  9968  0004' 6E95               	movwf	149,c	;volatile
  9969                           
  9970                           ;init_PIC.c: 26:     TRISA = 0x00;
  9971  0006' 0E00               	movlw	0
  9972  0008' 6E92               	movwf	146,c	;volatile
  9973                           
  9974                           ;init_PIC.c: 27:     TRISB = 0X03;
  9975  000A' 0E03               	movlw	3
  9976  000C' 6E93               	movwf	147,c	;volatile
  9977                           
  9978                           ;init_PIC.c: 28:     PORTA = 0x00;
  9979  000E' 0E00               	movlw	0
  9980  0010' 6E80               	movwf	128,c	;volatile
  9981                           
  9982                           ;init_PIC.c: 29:     PORTD = 0x00;
  9983  0012' 0E00               	movlw	0
  9984  0014' 6E83               	movwf	131,c	;volatile
  9985                           
  9986                           ;init_PIC.c: 34:     LATC = 0;
  9987  0016' 0E00               	movlw	0
  9988  0018' 6E8B               	movwf	139,c	;volatile
  9989                           
  9990                           ;init_PIC.c: 35:     PORTC = 0;
  9991  001A' 0E00               	movlw	0
  9992  001C' 6E82               	movwf	130,c	;volatile
  9993  001E'                    
  9994                           ;init_PIC.c: 36:     TRISCbits.RC7 = 1;
  9995  001E' 8E94               	bsf	148,7,c	;volatile
  9996  0020'                    
  9997                           ;init_PIC.c: 37:     TRISCbits.RC6 = 0;
  9998  0020' 9C94               	bcf	148,6,c	;volatile
  9999  0022'                    
 10000                           ;init_PIC.c: 38:     TRISCbits.RC2 = 0;
 10001  0022' 9494               	bcf	148,2,c	;volatile
 10002  0024' 0012               	return		;funcret
 10003  0026' FFFF               	dw	65535	; errata NOP
 10004  0028'                    __end_of_init_PORTS:
 10005                           	callstack 0
 10006                           
 10007 ;; *************** function _Rx_char_USART *****************
 10008 ;; Defined at:
 10009 ;;		line 723 in file "main.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;		None
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;  i               2    7[COMRAM] int 
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10023 ;;      Params:         0       0       0       0       0       0       0
 10024 ;;      Locals:         2       0       0       0       0       0       0
 10025 ;;      Temps:          5       0       0       0       0       0       0
 10026 ;;      Totals:         7       0       0       0       0       0       0
 10027 ;;Total ram usage:        7 bytes
 10028 ;; Hardware stack levels used: 1
 10029 ;; Hardware stack levels required when called: 1
 10030 ;; This function calls:
 10031 ;;		_set_new_pos
 10032 ;; This function is called by:
 10033 ;;		Interrupt level 2
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037                           	psect	intcode
 10038  0000'                    __pintcode:
 10039                           	callstack 0
 10040  0000'                    _Rx_char_USART:
 10041                           	callstack 0
 10042  0000' FFFF               	dw	65535	; assembler added errata NOP
 10043                           
 10044                           ;incstack = 0
 10045  0002' 8200'              	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10046  0004' CFD9 F005'         	movff	fsr2l,??_Rx_char_USART+3
 10047  0008' CFDA F006'         	movff	fsr2h,??_Rx_char_USART+4
 10048  000C'                    
 10049                           ;main.c: 725:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 10050  000C' AA9D               	btfss	157,5,c	;volatile
 10051  000E' EF00' F000'        	goto	i2u459_41
 10052  0012' EF00' F000'        	goto	i2u459_40
 10053  0016'                    i2u459_41:
 10054  0016' FFFF               	dw	65535	; assembler added errata NOP
 10055  0018' EF00' F000'        	goto	i2l4219
 10056  001C'                    i2u459_40:
 10057  001C' FFFF               	dw	65535	; assembler added errata NOP
 10058  001E' AA9E               	btfss	158,5,c	;volatile
 10059  0020' EF00' F000'        	goto	i2u460_41
 10060  0024' EF00' F000'        	goto	i2u460_40
 10061  0028'                    i2u460_41:
 10062  0028' FFFF               	dw	65535	; assembler added errata NOP
 10063  002A' EF00' F000'        	goto	i2l4219
 10064  002E'                    i2u460_40:
 10065  002E' FFFF               	dw	65535	; assembler added errata NOP
 10066  0030'                    
 10067                           ;main.c: 726:         int i=0;
 10068  0030' 0E00               	movlw	0
 10069  0032' 6E00'              	movwf	(Rx_char_USART@i+1)^0,c
 10070  0034' 0E00               	movlw	0
 10071  0036' 6E00'              	movwf	Rx_char_USART@i^0,c
 10072  0038'                    i2l444:
 10073  0038' FFFF               	dw	65535	; assembler added errata NOP
 10074  003A' B2F2               	btfsc	242,1,c	;volatile
 10075  003C' EF00' F000'        	goto	i2u461_41
 10076  0040' EF00' F000'        	goto	i2u461_40
 10077  0044'                    i2u461_41:
 10078  0044' FFFF               	dw	65535	; assembler added errata NOP
 10079  0046' EF00' F000'        	goto	i2l4211
 10080  004A'                    i2u461_40:
 10081  004A' FFFF               	dw	65535	; assembler added errata NOP
 10082  004C' AA9E               	btfss	3998,5,c	;volatile
 10083  004E' EF00' F000'        	goto	i2u462_41
 10084  0052' EF00' F000'        	goto	i2u462_40
 10085  0056'                    i2u462_41:
 10086  0056' FFFF               	dw	65535	; assembler added errata NOP
 10087  0058' EF00' F000'        	goto	i2l444
 10088  005C'                    i2u462_40:
 10089  005C'                    i2l4211:
 10090  005C' FFFF               	dw	65535	; assembler added errata NOP
 10091                           
 10092                           ;main.c: 730:             input_str[i]=RCREG;
 10093  005E' 0E00'              	movlw	low _input_str
 10094  0060' 2400'              	addwf	Rx_char_USART@i^0,w,c
 10095  0062' 6ED9               	movwf	fsr2l,c
 10096  0064' 0E00'              	movlw	high _input_str
 10097  0066' 2000'              	addwfc	(Rx_char_USART@i+1)^0,w,c
 10098  0068' 6EDA               	movwf	fsr2h,c
 10099  006A' CFAE FFDF          	movff	4014,indf2	;volatile
 10100  006E'                    
 10101                           ;main.c: 731:         }while(INTCONbits.INT0IF==0 && input_str[i++] != '\n');
 10102  006E' B2F2               	btfsc	242,1,c	;volatile
 10103  0070' EF00' F000'        	goto	i2u463_41
 10104  0074' EF00' F000'        	goto	i2u463_40
 10105  0078'                    i2u463_41:
 10106  0078' FFFF               	dw	65535	; assembler added errata NOP
 10107  007A' EF00' F000'        	goto	i2l451
 10108  007E'                    i2u463_40:
 10109  007E' FFFF               	dw	65535	; assembler added errata NOP
 10110  0080' 5000'              	movf	Rx_char_USART@i^0,w,c
 10111  0082' 6E00'              	movwf	??_Rx_char_USART^0,c
 10112  0084' 5000'              	movf	(Rx_char_USART@i+1)^0,w,c
 10113  0086' 6E00'              	movwf	(??_Rx_char_USART+1)^0,c
 10114  0088' 4A00'              	infsnz	Rx_char_USART@i^0,f,c
 10115  008A' 2A00'              	incf	(Rx_char_USART@i+1)^0,f,c
 10116  008C' 0E00'              	movlw	low _input_str
 10117  008E' 2400'              	addwf	??_Rx_char_USART^0,w,c
 10118  0090' 6ED9               	movwf	fsr2l,c
 10119  0092' 0E00'              	movlw	high _input_str
 10120  0094' 2000'              	addwfc	(??_Rx_char_USART+1)^0,w,c
 10121  0096' 6EDA               	movwf	fsr2h,c
 10122  0098' 0E0A               	movlw	10
 10123  009A' 18DE               	xorwf	postinc2,w,c
 10124  009C' A4D8               	btfss	status,2,c
 10125  009E' EF00' F000'        	goto	i2u464_41
 10126  00A2' EF00' F000'        	goto	i2u464_40
 10127  00A6'                    i2u464_41:
 10128  00A6' FFFF               	dw	65535	; assembler added errata NOP
 10129  00A8' EF00' F000'        	goto	i2l444
 10130  00AC'                    i2u464_40:
 10131  00AC'                    i2l451:
 10132  00AC' FFFF               	dw	65535	; assembler added errata NOP
 10133                           
 10134                           ;main.c: 733:         PIR1bits.RCIF = 0;
 10135  00AE' 9A9E               	bcf	158,5,c	;volatile
 10136  00B0'                    
 10137                           ;main.c: 734:         New_char_RX = 1;
 10138  00B0' 0E01               	movlw	1
 10139  00B2' 6E00'              	movwf	_New_char_RX^0,c
 10140  00B4'                    i2l4219:
 10141  00B4' FFFF               	dw	65535	; assembler added errata NOP
 10142                           
 10143                           ;main.c: 740:     if(INTCONbits.INT0IF && INTCONbits.INT0IE){
 10144  00B6' A2F2               	btfss	242,1,c	;volatile
 10145  00B8' EF00' F000'        	goto	i2u465_41
 10146  00BC' EF00' F000'        	goto	i2u465_40
 10147  00C0'                    i2u465_41:
 10148  00C0' FFFF               	dw	65535	; assembler added errata NOP
 10149  00C2' EF00' F000'        	goto	i2l4227
 10150  00C6'                    i2u465_40:
 10151  00C6' FFFF               	dw	65535	; assembler added errata NOP
 10152  00C8' A8F2               	btfss	242,4,c	;volatile
 10153  00CA' EF00' F000'        	goto	i2u466_41
 10154  00CE' EF00' F000'        	goto	i2u466_40
 10155  00D2'                    i2u466_41:
 10156  00D2' FFFF               	dw	65535	; assembler added errata NOP
 10157  00D4' EF00' F000'        	goto	i2l4227
 10158  00D8'                    i2u466_40:
 10159  00D8' FFFF               	dw	65535	; assembler added errata NOP
 10160  00DA'                    
 10161                           ;main.c: 741:         INTCONbits.INT0IF=0;
 10162  00DA' 92F2               	bcf	242,1,c	;volatile
 10163  00DC'                    
 10164                           ;main.c: 742:         stop=1;
 10165  00DC' 0E01               	movlw	1
 10166  00DE' 6E00'              	movwf	_stop^0,c
 10167  00E0'                    i2l4227:
 10168  00E0' FFFF               	dw	65535	; assembler added errata NOP
 10169                           
 10170                           ;main.c: 747:     if(INTCON3bits.INT1IF && INTCON3bits.INT1IE){
 10171  00E2' A0F0               	btfss	240,0,c	;volatile
 10172  00E4' EF00' F000'        	goto	i2u467_41
 10173  00E8' EF00' F000'        	goto	i2u467_40
 10174  00EC'                    i2u467_41:
 10175  00EC' FFFF               	dw	65535	; assembler added errata NOP
 10176  00EE' EF00' F000'        	goto	i2l4235
 10177  00F2'                    i2u467_40:
 10178  00F2' FFFF               	dw	65535	; assembler added errata NOP
 10179  00F4' A6F0               	btfss	240,3,c	;volatile
 10180  00F6' EF00' F000'        	goto	i2u468_41
 10181  00FA' EF00' F000'        	goto	i2u468_40
 10182  00FE'                    i2u468_41:
 10183  00FE' FFFF               	dw	65535	; assembler added errata NOP
 10184  0100' EF00' F000'        	goto	i2l4235
 10185  0104'                    i2u468_40:
 10186  0104' FFFF               	dw	65535	; assembler added errata NOP
 10187  0106'                    
 10188                           ;main.c: 748:         INTCON3bits.INT1IF=0;
 10189  0106' 90F0               	bcf	240,0,c	;volatile
 10190  0108'                    
 10191                           ;main.c: 749:         component_present=1;
 10192  0108' 0E01               	movlw	1
 10193  010A' 6E00'              	movwf	_component_present^0,c
 10194  010C'                    i2l4235:
 10195  010C' FFFF               	dw	65535	; assembler added errata NOP
 10196                           
 10197                           ;main.c: 754:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
 10198  010E' AAF2               	btfss	242,5,c	;volatile
 10199  0110' EF00' F000'        	goto	i2u469_41
 10200  0114' EF00' F000'        	goto	i2u469_40
 10201  0118'                    i2u469_41:
 10202  0118' FFFF               	dw	65535	; assembler added errata NOP
 10203  011A' EF00' F000'        	goto	i2l4249
 10204  011E'                    i2u469_40:
 10205  011E' FFFF               	dw	65535	; assembler added errata NOP
 10206  0120' A4F2               	btfss	242,2,c	;volatile
 10207  0122' EF00' F000'        	goto	i2u470_41
 10208  0126' EF00' F000'        	goto	i2u470_40
 10209  012A'                    i2u470_41:
 10210  012A' FFFF               	dw	65535	; assembler added errata NOP
 10211  012C' EF00' F000'        	goto	i2l4249
 10212  0130'                    i2u470_40:
 10213  0130' FFFF               	dw	65535	; assembler added errata NOP
 10214  0132'                    
 10215                           ;main.c: 755:         {;main.c: 757:          TMR0H = 0xB2;
 10216  0132' 0EB2               	movlw	178
 10217  0134' 6ED7               	movwf	215,c	;volatile
 10218                           
 10219                           ;main.c: 758:             TMR0L = 0x04;
 10220  0136' 0E04               	movlw	4
 10221  0138' 6ED6               	movwf	214,c	;volatile
 10222  013A'                    
 10223                           ;main.c: 759:    set_new_pos(new_TMR1H, new_TMR1L);
 10224  013A' C00D' F000'        	movff	_new_TMR1L@main$F656,set_new_pos@nTMR1L
 10225  013E' 5000'              	movf	_new_TMR1H@main$F655^0,w,c
 10226  0140' EC00' F000'        	call	_set_new_pos
 10227  0144'                    
 10228                           ;main.c: 760:             T0CONbits.TMR0ON = 1;
 10229  0144' 8ED5               	bsf	213,7,c	;volatile
 10230  0146'                    
 10231                           ;main.c: 761:    T1CONbits.TMR1ON = 1;
 10232  0146' 80CD               	bsf	205,0,c	;volatile
 10233  0148'                    
 10234                           ;main.c: 762:             INTCONbits.TMR0IF = 0;
 10235  0148' 94F2               	bcf	242,2,c	;volatile
 10236  014A'                    i2l4249:
 10237  014A' FFFF               	dw	65535	; assembler added errata NOP
 10238                           
 10239                           ;main.c: 766:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF)
 10240  014C' A09D               	btfss	157,0,c	;volatile
 10241  014E' EF00' F000'        	goto	i2u471_41
 10242  0152' EF00' F000'        	goto	i2u471_40
 10243  0156'                    i2u471_41:
 10244  0156' FFFF               	dw	65535	; assembler added errata NOP
 10245  0158' EF00' F000'        	goto	i2l456
 10246  015C'                    i2u471_40:
 10247  015C' FFFF               	dw	65535	; assembler added errata NOP
 10248  015E' A09E               	btfss	158,0,c	;volatile
 10249  0160' EF00' F000'        	goto	i2u472_41
 10250  0164' EF00' F000'        	goto	i2u472_40
 10251  0168'                    i2u472_41:
 10252  0168' FFFF               	dw	65535	; assembler added errata NOP
 10253  016A' EF00' F000'        	goto	i2l456
 10254  016E'                    i2u472_40:
 10255  016E' FFFF               	dw	65535	; assembler added errata NOP
 10256  0170'                    
 10257                           ;main.c: 767:         {;main.c: 768:             LATCbits.LC2 = 0;
 10258  0170' 948B               	bcf	139,2,c	;volatile
 10259                           
 10260                           ;main.c: 769:             T1CONbits.TMR1ON = 0;
 10261  0172' 90CD               	bcf	205,0,c	;volatile
 10262                           
 10263                           ;main.c: 770:          PIR1bits.TMR1IF = 0;
 10264  0174' 909E               	bcf	158,0,c	;volatile
 10265  0176'                    i2l456:
 10266  0176' FFFF               	dw	65535	; assembler added errata NOP
 10267  0178' C006' FFDA         	movff	??_Rx_char_USART+4,fsr2h
 10268  017C' C005' FFD9         	movff	??_Rx_char_USART+3,fsr2l
 10269  0180' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10270  0182' 0011               	retfie		f
 10271  0184' FFFF               	dw	65535	; errata NOP
 10272  0186'                    __end_of_Rx_char_USART:
 10273                           	callstack 0
 10274                           
 10275 ;; *************** function _set_new_pos *****************
 10276 ;; Defined at:
 10277 ;;		line 533 in file "main.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  nTMR1H          1    wreg     unsigned char 
 10280 ;;  nTMR1L          1    0[COMRAM] unsigned char 
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;  nTMR1H          1    1[COMRAM] unsigned char 
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      void 
 10285 ;; Registers used:
 10286 ;;		wreg
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10292 ;;      Params:         1       0       0       0       0       0       0
 10293 ;;      Locals:         1       0       0       0       0       0       0
 10294 ;;      Temps:          0       0       0       0       0       0       0
 10295 ;;      Totals:         2       0       0       0       0       0       0
 10296 ;;Total ram usage:        2 bytes
 10297 ;; Hardware stack levels used: 1
 10298 ;; This function calls:
 10299 ;;		Nothing
 10300 ;; This function is called by:
 10301 ;;		_Rx_char_USART
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text41
 10306  0000'                    __ptext41:
 10307                           	callstack 0
 10308  0000'                    _set_new_pos:
 10309                           	callstack 0
 10310  0000' FFFF               	dw	65535	; assembler added errata NOP
 10311                           
 10312                           ;incstack = 0
 10313                           ;set_new_pos@nTMR1H stored from wreg
 10314  0002' 6E00'              	movwf	set_new_pos@nTMR1H^0,c
 10315  0004'                    
 10316                           ;main.c: 533: void set_new_pos(uint8_t nTMR1H, uint8_t nTMR1L);main.c: 534: {;main.c: 53
      +                          5:     TMR1H = nTMR1H;
 10317  0004' C001' FFCF         	movff	set_new_pos@nTMR1H,4047	;volatile
 10318  0008'                    
 10319                           ;main.c: 536:     TMR1L = nTMR1L;
 10320  0008' C000' FFCE         	movff	set_new_pos@nTMR1L,4046	;volatile
 10321  000C'                    
 10322                           ;main.c: 537:     LATCbits.LC2 = 1;
 10323  000C' 848B               	bsf	139,2,c	;volatile
 10324  000E'                    
 10325                           ;main.c: 538:  T1CONbits.TMR1ON = 1;
 10326  000E' 80CD               	bsf	205,0,c	;volatile
 10327  0010' 0012               	return		;funcret
 10328  0012' FFFF               	dw	65535	; errata NOP
 10329  0014'                    __end_of_set_new_pos:
 10330                           	callstack 0
 10331                           
 10332                           	psect	rparam
 10333  0000                     
 10334                           	psect	temp
 10335  0000'                    btemp:
 10336                           	callstack 0
 10337  0000'                    	ds	1
 10338  0000                     int$flags	set	btemp
 10339  0000                     wtemp8	set	btemp+1
 10340  0000                     ttemp5	set	btemp+1
 10341  0000                     ttemp6	set	btemp+4
 10342  0000                     ttemp7	set	btemp+8
 10343                           
 10344                           	psect	idloc
 10345                           
 10346                           ;Config register IDLOC0 @ 0x200000
 10347                           ;	unspecified, using default values
 10348  200000                     	org	2097152
 10349  200000  FF                 	db	255
 10350                           
 10351                           ;Config register IDLOC1 @ 0x200001
 10352                           ;	unspecified, using default values
 10353  200001                     	org	2097153
 10354  200001  FF                 	db	255
 10355                           
 10356                           ;Config register IDLOC2 @ 0x200002
 10357                           ;	unspecified, using default values
 10358  200002                     	org	2097154
 10359  200002  FF                 	db	255
 10360                           
 10361                           ;Config register IDLOC3 @ 0x200003
 10362                           ;	unspecified, using default values
 10363  200003                     	org	2097155
 10364  200003  FF                 	db	255
 10365                           
 10366                           ;Config register IDLOC4 @ 0x200004
 10367                           ;	unspecified, using default values
 10368  200004                     	org	2097156
 10369  200004  FF                 	db	255
 10370                           
 10371                           ;Config register IDLOC5 @ 0x200005
 10372                           ;	unspecified, using default values
 10373  200005                     	org	2097157
 10374  200005  FF                 	db	255
 10375                           
 10376                           ;Config register IDLOC6 @ 0x200006
 10377                           ;	unspecified, using default values
 10378  200006                     	org	2097158
 10379  200006  FF                 	db	255
 10380                           
 10381                           ;Config register IDLOC7 @ 0x200007
 10382                           ;	unspecified, using default values
 10383  200007                     	org	2097159
 10384  200007  FF                 	db	255
 10385                           
 10386                           	psect	config
 10387                           
 10388                           ; Padding undefined space
 10389  300000                     	org	3145728
 10390  300000  FF                 	db	255
 10391                           
 10392                           ;Config register CONFIG1H @ 0x300001
 10393                           ;	Oscillator Selection bits
 10394                           ;	OSC = XT, XT oscillator
 10395                           ;	Oscillator System Clock Switch Enable bit
 10396                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 10397  300001                     	org	3145729
 10398  300001  21                 	db	33
 10399                           
 10400                           ;Config register CONFIG2L @ 0x300002
 10401                           ;	Power-up Timer Enable bit
 10402                           ;	PWRT = OFF, PWRT disabled
 10403                           ;	Brown-out Reset Enable bit
 10404                           ;	BOR = OFF, Brown-out Reset disabled
 10405                           ;	Brown-out Reset Voltage bits
 10406                           ;	BORV = 20, VBOR set to 2.0V
 10407  300002                     	org	3145730
 10408  300002  0D                 	db	13
 10409                           
 10410                           ;Config register CONFIG2H @ 0x300003
 10411                           ;	Watchdog Timer Enable bit
 10412                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10413                           ;	Watchdog Timer Postscale Select bits
 10414                           ;	WDTPS = 128, 1:128
 10415  300003                     	org	3145731
 10416  300003  0E                 	db	14
 10417                           
 10418                           ; Padding undefined space
 10419  300004                     	org	3145732
 10420  300004  FF                 	db	255
 10421                           
 10422                           ;Config register CONFIG3H @ 0x300005
 10423                           ;	CCP2 Mux bit
 10424                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
 10425  300005                     	org	3145733
 10426  300005  00                 	db	0
 10427                           
 10428                           ;Config register CONFIG4L @ 0x300006
 10429                           ;	Stack Full/Underflow Reset Enable bit
 10430                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
 10431                           ;	Low Voltage ICSP Enable bit
 10432                           ;	LVP = OFF, Low Voltage ICSP disabled
 10433                           ;	Background Debugger Enable bit
 10434                           ;	DEBUG = 0x1, unprogrammed default
 10435  300006                     	org	3145734
 10436  300006  80                 	db	128
 10437                           
 10438                           ; Padding undefined space
 10439  300007                     	org	3145735
 10440  300007  FF                 	db	255
 10441                           
 10442                           ;Config register CONFIG5L @ 0x300008
 10443                           ;	Code Protection bit
 10444                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 10445                           ;	Code Protection bit
 10446                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 10447                           ;	Code Protection bit
 10448                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 10449                           ;	Code Protection bit
 10450                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 10451  300008                     	org	3145736
 10452  300008  0F                 	db	15
 10453                           
 10454                           ;Config register CONFIG5H @ 0x300009
 10455                           ;	Boot Block Code Protection bit
 10456                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 10457                           ;	Data EEPROM Code Protection bit
 10458                           ;	CPD = OFF, Data EEPROM not code protected
 10459  300009                     	org	3145737
 10460  300009  C0                 	db	192
 10461                           
 10462                           ;Config register CONFIG6L @ 0x30000A
 10463                           ;	Write Protection bit
 10464                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 10465                           ;	Write Protection bit
 10466                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 10467                           ;	Write Protection bit
 10468                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 10469                           ;	Write Protection bit
 10470                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 10471  30000A                     	org	3145738
 10472  30000A  0F                 	db	15
 10473                           
 10474                           ;Config register CONFIG6H @ 0x30000B
 10475                           ;	Configuration Register Write Protection bit
 10476                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 10477                           ;	Boot Block Write Protection bit
 10478                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 10479                           ;	Data EEPROM Write Protection bit
 10480                           ;	WRTD = OFF, Data EEPROM not write protected
 10481  30000B                     	org	3145739
 10482  30000B  E0                 	db	224
 10483                           
 10484                           ;Config register CONFIG7L @ 0x30000C
 10485                           ;	Table Read Protection bit
 10486                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 10487                           ;	Table Read Protection bit
 10488                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 10489                           ;	Table Read Protection bit
 10490                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 10491                           ;	Table Read Protection bit
 10492                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 10493  30000C                     	org	3145740
 10494  30000C  0F                 	db	15
 10495                           
 10496                           ;Config register CONFIG7H @ 0x30000D
 10497                           ;	Boot Block Table Read Protection bit
 10498                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 10499  30000D                     	org	3145741
 10500  30000D  40                 	db	64
 10501                           tosu	equ	0xFFF
 10502                           tosh	equ	0xFFE
 10503                           tosl	equ	0xFFD
 10504                           stkptr	equ	0xFFC
 10505                           pclatu	equ	0xFFB
 10506                           pclath	equ	0xFFA
 10507                           pcl	equ	0xFF9
 10508                           tblptru	equ	0xFF8
 10509                           tblptrh	equ	0xFF7
 10510                           tblptrl	equ	0xFF6
 10511                           tablat	equ	0xFF5
 10512                           prodh	equ	0xFF4
 10513                           prodl	equ	0xFF3
 10514                           indf0	equ	0xFEF
 10515                           postinc0	equ	0xFEE
 10516                           postdec0	equ	0xFED
 10517                           preinc0	equ	0xFEC
 10518                           plusw0	equ	0xFEB
 10519                           fsr0h	equ	0xFEA
 10520                           fsr0l	equ	0xFE9
 10521                           wreg	equ	0xFE8
 10522                           indf1	equ	0xFE7
 10523                           postinc1	equ	0xFE6
 10524                           postdec1	equ	0xFE5
 10525                           preinc1	equ	0xFE4
 10526                           plusw1	equ	0xFE3
 10527                           fsr1h	equ	0xFE2
 10528                           fsr1l	equ	0xFE1
 10529                           bsr	equ	0xFE0
 10530                           indf2	equ	0xFDF
 10531                           postinc2	equ	0xFDE
 10532                           postdec2	equ	0xFDD
 10533                           preinc2	equ	0xFDC
 10534                           plusw2	equ	0xFDB
 10535                           fsr2h	equ	0xFDA
 10536                           fsr2l	equ	0xFD9
 10537                           status	equ	0xFD8

Data Sizes:
    Strings     783
    Constant    20
    Data        31
    BSS         51
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     90     117
    BANK0           128     33      89
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(BANK0[4]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> input_str(BANK0[10]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 112
		 -> STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[45]), STR_18(CODE[10]), 
		 -> STR_17(CODE[12]), STR_16(CODE[70]), STR_15(CODE[19]), STR_14(CODE[63]), 
		 -> STR_13(CODE[20]), STR_12(CODE[39]), STR_11(CODE[37]), STR_10(CODE[37]), 
		 -> STR_9(CODE[38]), STR_8(CODE[36]), STR_7(CODE[36]), STR_6(CODE[52]), 
		 -> STR_5(CODE[27]), add_component@add_componnt(COMRAM[2]), STR_4(CODE[40]), STR_3(CODE[27]), 
		 -> sequence(BANK0[4]), STR_2(CODE[21]), input_str(BANK0[10]), STR_1(CODE[112]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(BANK0[4]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(BANK0[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 


Critical Paths under _main in COMRAM

    _start_up_menu->_pick_and_place
    _return_to_initial->_Z_axis
    _remove_component->_strrchr
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _pick_and_place->___flge
    _check_component->_print_string
    ___fldiv->___xxtofl
    _Z_axis->_ms_delay
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _change_sequence->_print_string
    _add_component->_atoi
    _strcat->_strcpy
    _strcpy->_strlen
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    _Rx_char_USART->_set_new_pos

Critical Paths under _main in BANK0

    _start_up_menu->_pick_and_place
    _init_USART->___fltol

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   70196
                         _init_PORTS
                        _init_Timers
                         _init_USART
                    _init_interrupts
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                        4     4      0   58963
                                             62 COMRAM     4     4      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
                  _return_to_initial
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _return_to_initial                                    9     9      0   14682
                                             18 COMRAM     9     9      0
                            _Tweezer
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
 ---------------------------------------------------------------------------------
 (2) _remove_component                                     5     5      0    5209
                                             27 COMRAM     5     5      0
                            _memmove
                       _print_string
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4    1018
                                             23 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     406
                                             13 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     592
                                             13 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _pick_and_place                                      35    35      0   25529
                                             60 COMRAM     2     2      0
                                              0 BANK0     33    33      0
                            _Tweezer
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
                            ___fldiv
                             ___flge
                           ___xxtofl
                          __delay_ms
                    _check_component
                  _fetch_coordinates
                         _print_char
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _fetch_coordinates                                    1     1      0     124
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_component                                      5     5      0    3109
                                             15 COMRAM     5     5      0
                         _print_char
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _print_char                                           1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __delay_ms                                            2     0      2       0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2183
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Z_axis                                               3     3      0    3618
                                             15 COMRAM     3     3      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Y_axis                                               1     1      0    3618
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _X_axis                                               1     1      0    3618
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Twister                                              1     1      0    3618
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _ms_delay                                             6     4      2    3556
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _Tweezer                                              1     1      0      62
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                      5     5      0    3106
                                             15 COMRAM     5     5      0
                       _print_string
 ---------------------------------------------------------------------------------
 (2) _add_component                                        2     2      0    6965
                                             31 COMRAM     2     2      0
                               _atoi
                       _print_string
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     0      4     866
                                             21 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     394
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               8     4      4     248
                                             13 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2    3010
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    3009
                                             16 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     207
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     161
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1628
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11233
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10806
                                             60 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              9 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              9 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                             48 COMRAM    12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             86 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Rx_char_USART                                        7     7      0     165
                                              2 COMRAM     7     7      0
                        _set_new_pos
 ---------------------------------------------------------------------------------
 (6) _set_new_pos                                          2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_Timers
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _print_string
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
     _change_sequence
       _print_string
     _pick_and_place
       _Tweezer
       _Twister
         _ms_delay
       _X_axis
         _ms_delay
       _Y_axis
         _ms_delay
       _Z_axis
         _ms_delay
       ___fldiv
       ___flge
       ___xxtofl
       __delay_ms
       _check_component
         _print_char
         _print_string
       _fetch_coordinates
       _print_char
       _print_string
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _print_string
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen
     _return_to_initial
       _Tweezer
       _Twister
       _X_axis
       _Y_axis
       _Z_axis
     _strlen

 _Rx_char_USART (ROOT)
   _set_new_pos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      59       5       69.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5A      75       1       92.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE      15        0.0%
DATA                 0      0      CE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jul 18 18:46:06 2021

                                                               ___fldiv@aexp 00002F  
                                                               ___fldiv@bexp 00002E  
                                                               ___fldiv@sign 000027  
                                                                         l50 000026  
                                                                         l53 00001C  
                                                                         l47 000024  
                                                        ___wmul@multiplicand 00000B  
                                                     __size_of_start_up_menu 000000  
                                                                        l302 0000F4  
                                                                        l231 000154  
                                                                        l240 000094  
                                                                        l321 000036  
                                                                        l305 000060  
                                                                        l401 00059A  
                                                                        l323 000070  
                                                                        l315 000058  
                                                                        l307 0000BC  
                                                                        l340 0000CA  
                                                                        l333 000132  
                                                                        l421 00078E  
                                                                        l422 0007A8  
                                                                        l430 000092  
                                                                        l344 0000DE  
                                                                        l329 000132  
                                                                        l433 0000D6  
                                                                        l354 000116  
                                                                        l275 00025E  
                                                                        l363 0001C2  
                                                                        l427 00004E  
                                                                        l292 0000DC  
                                                                        l437 000120  
                                                                        l287 0000EA  
                                                                        l480 000040  
                                                                        l392 0004EE  
                                                                        l297 0000DC  
                                                                        l490 00001C  
                                                                        l475 00003C  
                                                                        l484 00009C  
                                                                        l493 000026  
                                                                        l487 000008  
                                                                        l763 000122  
                                                                        l790 000132  
                                                                        l758 0000D4  
                                                                        l767 00003E  
                                                          ??_init_interrupts 000009  
                                                                        wreg 000FE8  
                                                               ___flmul@aexp 00001A  
                                                               ___flmul@bexp 00001B  
                                                               ___flmul@sign 000015  
                                                               ___flmul@temp 000020  
                                                               ___flmul@prod 00001C  
                                                           _Fosc@serial$F926 00000D  
                                                               ___fltol@exp1 000005  
                                                                       l1021 000248  
                                                                       l1030 0005A2  
                                                                       l1022 000232  
                                                                       l1111 00049E  
                                                                       l1023 0001E8  
                                                                       l1114 0002F8  
                                                                       l1107 0000EC  
                                                                       l1124 000456  
                                                                       l1116 000388  
                                                                       l1117 000370  
                                                                       l1038 00038C  
                                                                       l1206 00005C  
                                                                       l1047 000490  
                                                                       l1063 000046  
                                                                       l1151 0001F2  
                                                                       l1048 000478  
                                                                       l1080 0001FE  
                                                                       l3001 0004B2  
                                                                       l1241 000026  
                                                                       l1162 000178  
                                                                       l3011 00052C  
                                                                       l3003 0004C4  
                                                                       l1227 0003E0  
                                                                       l1075 00042C  
                                                                       l1155 00010C  
                                                                       l1219 0000F4  
                                                                       l1148 000060  
                                                                       l1260 000036  
                                                                       l3021 000574  
                                                                       l3013 000552  
                                                                       l3005 000502  
                                                                       l1253 00003E  
                                                                       l1077 000244  
                                                                       l1086 00029A  
                                                                       l3023 00057C  
                                                                       l3015 000556  
                                                                       l3007 000504  
                                                                       l3031 000000  
                                                                       l1247 000044  
                                                                       l1192 0001AE  
                                                                       l1088 00032A  
                                                                       l3025 00058E  
                                                                       l3017 00056A  
                                                                       l3009 00051A  
                                                                       l3033 000006  
                                                                       l1089 000312  
                                                                       l3121 000052  
                                                                       l3113 000002  
                                                                       l1266 00007C  
                                                                       l3027 000590  
                                                                       l3019 000570  
                                                                       l3043 000000  
                                                                       l3035 00001E  
                                                                       l1195 0001B8  
                                                                       l3131 0000D2  
                                                                       l3123 000062  
                                                                       l3051 000002  
                                                                       l3037 000050  
                                                                       l3109 000002  
                                                                       l3133 0000D6  
                                                                       l3125 000084  
                                                                       l3117 000002  
                                                                       l3061 000054  
                                                                       l3053 00000A  
                                                                       l1198 00003E  
                                                                       l3039 000054  
                                                                       l3047 000002  
                                                                       l3135 0000DA  
                                                                       l3119 00002C  
                                                                       l3127 0000A4  
                                                                       l3063 000074  
                                                                       l3055 000014  
                                                                       l3049 000012  
                                                                       l5001 000062  
                                                                       l3129 0000BC  
                                                                       l3057 000044  
                                                                       l2611 000016  
                                                                       l2603 000002  
                                                                       l5011 000044  
                                                                       l5003 000090  
                                                                       l2613 000018  
                                                                       l2605 00000A  
                                                                       l3501 00000E  
                                                                       l2621 000002  
                                                                       l4301 000058  
                                                                       l5021 000086  
                                                                       l5013 00005C  
                                                                       l5005 000002  
                                                                       l5101 000038  
                                                                       l2615 00001A  
                                                                       l2607 000012  
                                                                       l3511 00005C  
                                                                       l3503 000020  
                                                                       l2631 00001A  
                                                                       l2623 00000C  
                                                                       l5031 0000CC  
                                                                       l5023 00009A  
                                                                       l5015 000060  
                                                                       l5007 00000A  
                                                                       l4303 000002  
                                                                       l5111 0000B4  
                                                                       l5103 000052  
                                                                       l2617 00001C  
                                                                       l2609 000014  
                                                                       l3601 0003AA  
                                                                       l3521 000096  
                                                                       l3513 000064  
                                                                       l3505 000022  
                                                                       l5121 000002  
                                                                       l5201 00002E  
                                                                       l2625 000014  
                                                                       l4321 000002  
                                                                       l2801 000032  
                                                                       l5041 000112  
                                                                       l5033 0000E0  
                                                                       l5025 0000A6  
                                                                       l5017 000064  
                                                                       l5009 00002E  
                                                                       l4305 00000E  
                                                                       l4401 0000A6  
                                                                       l5105 000068  
                                                                       l3611 00041E  
                                                                       l3603 0003BC  
                                                                       l3531 0000DA  
                                                                       l3523 000098  
                                                                       l3515 000076  
                                                                       l3507 000038  
                                                                       l5131 0000F0  
                                                                       l5123 000022  
                                                                       l5211 000038  
                                                                       l5203 000030  
                                                                       l2627 000016  
                                                                       l4323 00001E  
                                                                       l4331 00001C  
                                                                       l5051 000158  
                                                                       l5043 000126  
                                                                       l5035 0000EC  
                                                                       l5027 0000AA  
                                                                       l5019 000070  
                                                                       l4315 000038  
                                                                       l4307 000014  
                                                                       l4403 0000AA  
                                                                       l4411 000004  
                                                                       l5107 000074  
                                                                       l5115 0000BC  
                                                                       l3621 000480  
                                                                       l3613 00043E  
                                                                       l3605 0003E6  
                                                                       l3541 000138  
                                                                       l3533 000102  
                                                                       l3525 0000AE  
                                                                       l3517 00007E  
                                                                       l3509 00004C  
                                                                       l2901 00016E  
                                                                       l5141 00028A  
                                                                       l5133 000112  
                                                                       l5125 000072  
                                                                       l5213 00003A  
                                                                       l5205 000032  
                                                                       l2629 000018  
                                                                       l4333 000022  
                                                                       l5061 00019E  
                                                                       l5053 00016C  
                                                                       l5045 000132  
                                                                       l5037 0000F0  
                                                                       l5029 0000B6  
                                                                       l4317 00003E  
                                                                       l4309 000030  
                                                                       l4501 00001C  
                                                                       l4405 0000BA  
                                                                       l4421 000038  
                                                                       l4413 000018  
                                                                       l5117 0000CA  
                                                                       l5109 0000A8  
                                                                       l5221 000028  
                                                                       l3615 00045C  
                                                                       l3623 000488  
                                                                       l3607 0003EA  
                                                                       l3551 000188  
                                                                       l3543 000142  
                                                                       l3535 000114  
                                                                       l3527 0000C2  
                                                                       l3519 000084  
                                                                       l2911 0001AE  
                                                                       l2903 000172  
                                                                       l2831 00000E  
                                                                       l3631 000012  
                                                                       l5151 0003CE  
                                                                       l5143 0002C2  
                                                                       l5127 000086  
                                                                       l5207 000034  
                                                                       l4351 0000E8  
                                                                       l4343 000084  
                                                                       l4335 000040  
                                                                       l4327 000002  
                                                                       l5071 0001E4  
                                                                       l5063 0001B2  
                                                                       l5055 000178  
                                                                       l5047 000136  
                                                                       l5039 0000FC  
                                                                       l4511 000048  
                                                                       l4503 000028  
                                                                       l4407 0000C6  
                                                                       l4431 00005C  
                                                                       l4423 00003C  
                                                                       l4415 00001C  
                                                                       l4319 000004  
                                                                       l5119 0000E4  
                                                                       l5231 00005E  
                                                                       l5223 000030  
                                                                       l5215 000002  
                                                                       l2593 000002  
                                                                       l5161 000034  
                                                                       l3625 00048E  
                                                                       l3617 00046C  
                                                                       l3609 00040A  
                                                                       l3561 0001CA  
                                                                       l3553 000194  
                                                                       l3545 000158  
                                                                       l3529 0000D2  
                                                                       l2921 00020E  
                                                                       l2913 0001D0  
                                                                       l2905 000176  
                                                                       l2841 00005C  
                                                                       l2833 000020  
                                                                       l5145 00032E  
                                                                       l5137 00014A  
                                                                       l5129 0000CC  
                                                                       l5209 000036  
                                                                       l4361 00017C  
                                                                       l4345 00009E  
                                                                       l4337 000078  
                                                                       l4329 000016  
                                                                       l5081 000224  
                                                                       l5073 0001F8  
                                                                       l5065 0001BE  
                                                                       l5057 00017C  
                                                                       l5049 000142  
                                                                       l4521 000086  
                                                                       l4513 00004C  
                                                                       l4505 00002C  
                                                                       l4409 0000D6  
                                                                       l4441 000096  
                                                                       l4433 000068  
                                                                       l4425 000048  
                                                                       l4417 000028  
                                                                       l4601 000038  
                                                                       l5321 000124  
                                                                       l5241 0000B8  
                                                                       l5233 00006A  
                                                                       l5225 00004A  
                                                                       l5217 00000E  
                                                                       l2595 00001E  
                                                                       l5171 00008C  
                                                                       l5163 000064  
                                                                       l5155 000002  
                                                                       l3619 00047E  
                                                                       l3571 00022C  
                                                                       l3563 0001DA  
                                                                       l3555 0001A2  
                                                                       l3547 000164  
                                                                       l3539 00012A  
                                                                       l2931 000270  
                                                                       l2923 000222  
                                                                       l2915 0001E0  
                                                                       l2907 00017A  
                                                                       l2851 000098  
                                                                       l2843 000060  
                                                                       l2835 000022  
                                                                       l5147 000364  
                                                                       l5139 00021E  
                                                                       l4363 000192  
                                                                       l5323 0000D0  
                                                                       l4355 000122  
                                                                       l4347 0000A8  
                                                                       l4339 00007C  
                                                                       l5091 00025A  
                                                                       l5075 000204  
                                                                       l5067 0001C2  
                                                                       l5059 000188  
                                                                       l4531 000004  
                                                                       l4523 000096  
                                                                       l4515 000058  
                                                                       l4507 000038  
                                                                       l4371 000018  
                                                                       l4451 0000D6  
                                                                       l4443 0000A6  
                                                                       l4427 00004C  
                                                                       l4419 00002C  
                                                                       l4435 000070  
                                                                       l4611 00007A  
                                                                       l4603 00004C  
                                                                       l5251 000102  
                                                                       l5235 000078  
                                                                       l5243 0000CA  
                                                                       l5227 00004E  
                                                                       l5219 000024  
                                                                       l2597 000020  
                                                                       l5181 0000BE  
                                                                       l5165 000066  
                                                                       l5157 00001E  
                                                                       l3581 0002D8  
                                                                       l3573 000248  
                                                                       l3565 0001F4  
                                                                       l3557 0001AE  
                                                                       l3549 00017C  
                                                                       l3661 00002C  
                                                                       l2941 0002BA  
                                                                       l2925 000224  
                                                                       l2917 0001FC  
                                                                       l2909 000180  
                                                                       l2861 0000CC  
                                                                       l2853 00009A  
                                                                       l2837 000038  
                                                                       l2845 000068  
                                                                       l2829 000002  
                                                                       l3629 000002  
                                                                       l5149 0003AA  
                                                                       l4349 0000B2  
                                                                       l5085 00022C  
                                                                       l5069 0001CE  
                                                                       l4541 00006A  
                                                                       l4533 000018  
                                                                       l4525 00009A  
                                                                       l4517 000076  
                                                                       l4509 00003C  
                                                                       l4381 00003C  
                                                                       l4373 00001C  
                                                                       l4445 0000AA  
                                                                       l4437 000086  
                                                                       l4429 000058  
                                                                       l4461 000040  
                                                                       l4453 000004  
                                                                       l4701 00034C  
                                                                       l4621 0000B2  
                                                                       l4613 000082  
                                                                       l4605 00005C  
                                                                       l5093 000002  
                                                                       l5245 0000E4  
                                                                       l5237 00008C  
                                                                       l5229 000056  
                                                                       l5261 000000  
                                                                       l2599 000022  
                                                                       l5191 0000FA  
                                                                       l5167 000076  
                                                                       l3591 000322  
                                                                       l3583 0002E4  
                                                                       l3575 000272  
                                                                       l3567 000204  
                                                                       l3559 0001BE  
                                                                       l2951 0002EE  
                                                                       l2943 0002C6  
                                                                       l2935 000284  
                                                                       l2927 000230  
                                                                       l2919 000208  
                                                                       l2871 00010E  
                                                                       l2863 0000E0  
                                                                       l2855 0000A2  
                                                                       l2847 00007A  
                                                                       l2839 00004C  
                                                                       l4359 000166  
                                                                       l4295 000002  
                                                                       l5087 000242  
                                                                       l5079 00020E  
                                                                       l4543 00006E  
                                                                       l4535 00002C  
                                                                       l4527 0000AA  
                                                                       l4519 00007A  
                                                                       l4391 000068  
                                                                       l4383 000048  
                                                                       l4375 000028  
                                                                       l4447 0000BA  
                                                                       l4439 00008A  
                                                                       l4471 000064  
                                                                       l4463 000044  
                                                                       l4455 00001C  
                                                                       l4711 0003C2  
                                                                       l4703 00035E  
                                                                       l4631 0000F4  
                                                                       l4623 0000C6  
                                                                       l4615 000088  
                                                                       l4607 000060  
                                                                       l4551 000066  
                                                                       l5095 00001A  
                                                                       l5247 0000EE  
                                                                       l5239 000090  
                                                                       l5255 00010C  
                                                                       l5271 000014  
                                                                       l5263 000006  
                                                                       l5193 000110  
                                                                       l5177 0000A8  
                                                                       l5169 00007A  
                                                                       l3593 000334  
                                                                       l3585 0002F6  
                                                                       l3577 0002AC  
                                                                       l3569 000220  
                                                                       l3657 000002  
                                                                       l2961 00036A  
                                                                       l2945 0002CC  
                                                                       l2937 000296  
                                                                       l2929 00025C  
                                                                       l2953 0002F4  
                                                                       l2881 000146  
                                                                       l2873 000126  
                                                                       l2865 0000F0  
                                                                       l2857 0000B4  
                                                                       l2849 000082  
                                                                       l4297 00000E  
                                                                       l5089 00024E  
                                                                       l4537 00004C  
                                                                       l4529 0000B6  
                                                                       l4385 00004C  
                                                                       l4377 00002C  
                                                                       l4393 000070  
                                                                       l4369 000004  
                                                                       l4449 0000C6  
                                                                       l4481 00009E  
                                                                       l4473 000070  
                                                                       l4465 000050  
                                                                       l4457 000030  
                                                                       l4721 00041C  
                                                                       l4713 0003E2  
                                                                       l4705 000388  
                                                                       l4633 000110  
                                                                       l4625 0000D6  
                                                                       l4617 00009A  
                                                                       l4609 000068  
                                                                       l4561 000004  
                                                                       l4553 00009A  
                                                                       l4545 000004  
                                                                       l5097 000030  
                                                                       l4801 00000A  
                                                                       l5249 0000F8  
                                                                       l5273 000016  
                                                                       l5265 00000A  
                                                                       l5195 000120  
                                                                       l5187 0000D8  
                                                                       l5179 0000B4  
                                                                       l4731 000002  
                                                                       l3595 000366  
                                                                       l3587 00030A  
                                                                       l3579 0002BA  
                                                                       l3499 000002  
                                                                       l3659 00001C  
                                                                       l2971 0003D0  
                                                                       l2955 000320  
                                                                       l2963 00037A  
                                                                       l2947 0002E0  
                                                                       l2939 0002A8  
                                                                       l2891 00015A  
                                                                       l2883 00014A  
                                                                       l2875 000138  
                                                                       l2867 0000F4  
                                                                       l2859 0000B6  
                                                                       l4299 000054  
                                                                       l2795 000002  
                                                                       l4539 000060  
                                                                       l4395 000086  
                                                                       l4387 000058  
                                                                       l4379 000038  
                                                                       l4491 0000D2  
                                                                       l4483 0000A2  
                                                                       l4475 000074  
                                                                       l4467 000054  
                                                                       l4459 000034  
                                                                       l4723 000420  
                                                                       l4715 0003FE  
                                                                       l4707 00038C  
                                                                       l4651 00016C  
                                                                       l4635 000120  
                                                                       l4643 000142  
                                                                       l4627 0000DA  
                                                                       l4619 00009C  
                                                                       l4571 00004E  
                                                                       l4563 000010  
                                                                       l4555 0000B2  
                                                                       l4547 00001A  
                                                                       l5099 000034  
                                                                       l4811 000062  
                                                                       l4803 00001E  
                                                                       l5275 000018  
                                                                       l5267 00000E  
                                                                       l5189 0000E6  
                                                                       l4741 00009C  
                                                                       l4733 000034  
                                                                       l3589 00031E  
                                                                       l2981 00040C  
                                                                       l2973 0003DC  
                                                                       l2965 0003A8  
                                                                       l2957 000354  
                                                                       l2949 0002E2  
                                                                       l2893 00015E  
                                                                       l2885 00014E  
                                                                       l2877 00013C  
                                                                       l2869 0000FC  
                                                                       l2797 00000E  
                                                                       l4397 00008A  
                                                                       l4389 00005C  
                                                                       l4493 0000DE  
                                                                       l4485 0000AE  
                                                                       l4477 000080  
                                                                       l4469 000060  
                                                                       l4717 000404  
                                                                       l4709 0003AC  
                                                                       l4661 0001C0  
                                                                       l4653 000188  
                                                                       l4645 000158  
                                                                       l4637 000128  
                                                                       l4629 0000E2  
                                                                       l4573 000062  
                                                                       l4565 000026  
                                                                       l4557 0000E6  
                                                                       l4549 00004E  
                                                                       l4901 00033C  
                                                                       l4821 0000AE  
                                                                       l4813 00006A  
                                                                       l4805 000026  
                                                                       l5277 00001A  
                                                                       l5269 000012  
                                                                       l4743 0000AE  
                                                                       l4735 000044  
                                                                       l3599 00039E  
                                                                       l2991 000442  
                                                                       l2983 000412  
                                                                       l2975 0003EE  
                                                                       l2967 0003BC  
                                                                       l2959 000356  
                                                                       l2895 000162  
                                                                       l2887 000152  
                                                                       l2879 000142  
                                                                       l5199 000002  
                                                                       l2799 000014  
                                                                       l4399 000096  
                                                                       l4495 0000EE  
                                                                       l4487 0000BE  
                                                                       l4479 000088  
                                                                       l4719 000416  
                                                                       l4671 00022E  
                                                                       l4663 0001D6  
                                                                       l4655 000198  
                                                                       l4647 000158  
                                                                       l4639 00012E  
                                                                       l4575 00006E  
                                                                       l4583 000088  
                                                                       l4591 0000CA  
                                                                       l4559 0000FE  
                                                                       l4911 00038C  
                                                                       l4903 00035E  
                                                                       l4831 0000F6  
                                                                       l4823 0000B2  
                                                                       l4815 00006E  
                                                                       l4807 00002A  
                                                                       l5279 000020  
                                                                       l4745 0000C2  
                                                                       l4737 000078  
                                                                       l2993 000454  
                                                                       l2985 000428  
                                                                       l2977 0003F0  
                                                                       l2897 000166  
                                                                       l2889 000156  
                                                                       l4497 000004  
                                                                       l4489 0000C2  
                                                                       l4681 00027A  
                                                                       l4673 000230  
                                                                       l4665 0001EA  
                                                                       l4657 0001A8  
                                                                       l4593 000002  
                                                                       l4761 00008E  
                                                                       l4753 000004  
                                                                       l4585 00009E  
                                                                       l4577 000074  
                                                                       l4569 00002E  
                                                                       l4921 00044E  
                                                                       l4913 000394  
                                                                       l4905 000370  
                                                                       l4841 000022  
                                                                       l4833 00011A  
                                                                       l4825 0000DE  
                                                                       l4817 00009A  
                                                                       l4809 000056  
                                                                       l4747 000118  
                                                                       l4739 000088  
                                                                       l2995 00046E  
                                                                       l2979 000404  
                                                                       l2987 00042A  
                                                                       l2899 00016A  
                                                                       l4499 000018  
                                                                       l4691 0002C4  
                                                                       l4683 000286  
                                                                       l4675 000240  
                                                                       l4667 0001FC  
                                                                       l4659 0001B8  
                                                                       l4595 00000E  
                                                                       l4771 0000F2  
                                                                       l4755 000018  
                                                                       l4587 0000AA  
                                                                       l4579 000080  
                                                                       l4931 00048E  
                                                                       l4923 000462  
                                                                       l4915 00039A  
                                                                       l4907 000378  
                                                                       l4851 0000B6  
                                                                       l4843 00004C  
                                                                       l4835 000006  
                                                                       l4827 0000EA  
                                                                       l4819 0000A6  
                                                                       l4749 00011E  
                                                                       l2989 00043C  
                                                                       l4693 0002D6  
                                                                       l4685 000298  
                                                                       l4677 00025A  
                                                                       l4669 00020A  
                                                                       l4597 000020  
                                                                       l4781 000166  
                                                                       l4773 0000F6  
                                                                       l4765 0000A2  
                                                                       l4757 00002A  
                                                                       l4589 0000C2  
                                                                       l4941 000524  
                                                                       l4933 000494  
                                                                       l4925 00046E  
                                                                       l4917 0003BC  
                                                                       l4909 00037E  
                                                                       l4861 00014C  
                                                                       l4853 0000BC  
                                                                       l4845 000076  
                                                                       l4837 00000E  
                                                                       l4829 0000F2  
                                                                       l2999 0004A6  
                                                                       l4695 000308  
                                                                       l4679 000274  
                                                                       l4687 0002AC  
                                                                       l4599 000022  
                                                                       l4791 0001CC  
                                                                       l4783 00018C  
                                                                       l4775 000102  
                                                                       l4767 0000AC  
                                                                       l4759 000072  
                                                                       l4951 00058C  
                                                                       l4943 000532  
                                                                       l4935 0004C0  
                                                                       l4927 000476  
                                                                       l4919 0003CE  
                                                                       l4871 0001B4  
                                                                       l4863 00015A  
                                                                       l4855 0000E8  
                                                                       l4847 0000A0  
                                                                       l4839 00001A  
                                                                       l4689 0002C0  
                                                                       l4793 0001DE  
                                                                       l4785 00018E  
                                                                       l4777 000144  
                                                                       l4769 0000BA  
                                                                       l4961 0005EC  
                                                                       l4953 0005BE  
                                                                       l4945 00053A  
                                                                       l4937 0004E0  
                                                                       l4929 000486  
                                                                       l4881 000214  
                                                                       l4873 0001E6  
                                                                       l4865 000162  
                                                                       l4857 000108  
                                                                       l4849 0000AE  
                                                                       l4699 000340  
                                                                       l4795 0001E0  
                                                                       l4787 000194  
                                                                       l4779 000152  
                                                                       l4971 0006E4  
                                                                       l4963 000618  
                                                                       l4955 0005D0  
                                                                       l4947 000540  
                                                                       l4939 000512  
                                                                       l4891 00030C  
                                                                       l4883 000240  
                                                                       l4875 0001F8  
                                                                       l4867 000168  
                                                                       l4859 00013A  
                                                                       l4789 0001B8  
                                                                       l4981 000736  
                                                                       l4973 0006F4  
                                                                       l4965 000638  
                                                                       l4957 0005DE  
                                                                       l4949 00056C  
                                                                       l4893 000314  
                                                                       l4885 000260  
                                                                       l4877 000206  
                                                                       l4869 000194  
                                                                       l4991 00077C  
                                                                       l4983 00073E  
                                                                       l4975 0006FC  
                                                                       l4967 000646  
                                                                       l4959 0005E6  
                                                                       l4895 000320  
                                                                       l4887 00026E  
                                                                       l4879 00020E  
                                                                       l4799 000002  
                                                                       l4993 000002  
                                                                       l4985 00074C  
                                                                       l4977 000702  
                                                                       l4969 0006D2  
                                                                       l4897 00032E  
                                                                       l4889 0002FA  
                                                                       l4995 000026  
                                                                       l4987 000754  
                                                                       l4979 000724  
                                                                       l4899 000336  
                                                                       l4997 00002E  
                                                                       l4989 00075A  
                                                                       l4999 000044  
                                                                       STR_1 000015  
                                                                       STR_2 0002D2  
                                                                       STR_3 000272  
                                                                       STR_4 00016B  
                                                                       STR_5 00028D  
                                                                       STR_6 00010A  
                                                                       STR_7 00022A  
                                                                       STR_8 00024E  
                                                                       STR_9 0001BA  
                                                                       u3000 00009E  
                                                                       u3001 000098  
                                                                       u3010 0000BA  
                                                                       u3011 0000B4  
                                                                       u3020 0000F4  
                                                                       u3021 0000EE  
                                                                       _LATC 000F8B  
                                                                       u2410 000030  
                                                                       u2411 00002A  
                                                                       u2500 0000CA  
                                                                       u2501 0000C4  
                                                                       u2510 0000DE  
                                                                       u2511 0000D8  
                                                                       u2600 00025A  
                                                                       u2520 000124  
                                                                       u5000 000064  
                                                                       u2601 000254  
                                                                       u2521 00011E  
                                                                       u5001 00005E  
                                                                       u2610 00026E  
                                                                       u2530 000136  
                                                                       u2450 00001E  
                                                                       u5010 0000B0  
                                                                       u2611 000268  
                                                                       u2531 000130  
                                                                       u2451 000018  
                                                                       u5011 0000AA  
                                                                       u3500 000094  
                                                                       u2700 000402  
                                                                       u2620 0002A6  
                                                                       u2540 0001AC  
                                                                       u2460 000036  
                                                                       u5100 00004A  
                                                                       u5020 0000FC  
                                                                       u3501 00008E  
                                                                       u2701 0003FC  
                                                                       u2621 0002A0  
                                                                       u2541 0001A6  
                                                                       u2461 000030  
                                                                       u5101 000044  
                                                                       u5021 0000F6  
                                                                       u3510 0000AC  
                                                                       u2710 000426  
                                                                       u2630 0002B8  
                                                                       u2550 0001C8  
                                                                       u2470 00004A  
                                                                       u5110 000098  
                                                                       u5030 000024  
                                                                       u3511 0000A6  
                                                                       u2711 000420  
                                                                       u2631 0002B2  
                                                                       u2551 0001C0  
                                                                       u2471 000044  
                                                                       u5111 000092  
                                                                       u5031 00001E  
                                                                       u3600 000382  
                                                                       u3520 0000C0  
                                                                       u2800 00052C  
                                                                       u2720 00043C  
                                                                       u2640 0002DE  
                                                                       u2560 0001CC  
                                                                       u2480 000096  
                                                                       u5200 000272  
                                                                       u5120 0000B0  
                                                                       u5040 00004C  
                                                                       u6000 00002E  
                                                                       u3601 00037C  
                                                                       u3521 0000BA  
                                                                       u2801 000526  
                                                                       u2721 000436  
                                                                       u2641 0002D8  
                                                                       u2481 000090  
                                                                       u5201 00026C  
                                                                       u5121 0000AA  
                                                                       u5041 000046  
                                                                       u6001 000028  
                                                                       u3610 00039C  
                                                                       u3530 000100  
                                                                       u2810 000550  
                                                                       u2730 000452  
                                                                       u2650 00031E  
                                                                       u2570 0001FA  
                                                                       u2490 0000B2  
                                                                       u5210 000296  
                                                                       u5130 0000C4  
                                                                       u5050 000060  
                                                                       u6010 000066  
                                                                       u3611 000396  
                                                                       u3531 0000FA  
                                                                       u2811 00054A  
                                                                       u2731 00044C  
                                                                       u2651 000318  
                                                                       u2571 0001F4  
                                                                       u2491 0000AC  
                                                                       u5211 000290  
                                                                       u5131 0000BE  
                                                                       u5051 00005A  
                                                                       u6011 000060  
                                                                       u3620 0003BA  
                                                                       u3540 000114  
                                                                       u2820 000568  
                                                                       u2740 00046C  
                                                                       u2660 000368  
                                                                       u2580 000220  
                                                                       u6100 000388  
                                                                       u5300 000414  
                                                                       u5220 0002BE  
                                                                       u5140 00010E  
                                                                       u5060 00009C  
                                                                       u2900 000072  
                                                                       u6020 0000DE  
                                                                       u3621 0003B4  
                                                                       u3541 00010E  
                                                                       u2821 000562  
                                                                       u2741 000466  
                                                                       u2661 000362  
                                                                       u2581 00021A  
                                                                       u5301 00040E  
                                                                       u5221 0002B8  
                                                                       u5141 000108  
                                                                       u5061 000096  
                                                                       u2901 00006C  
                                                                       u6021 0000D8  
                                                                       u5310 000032  
                                                                       u3630 000408  
                                                                       u3550 000294  
                                                                       u3470 00001E  
                                                                       u3710 00001A  
                                                                       u2830 00058C  
                                                                       u2750 00048A  
                                                                       u2670 0003A6  
                                                                       u2590 000248  
                                                                       u6110 0003A8  
                                                                       u6030 000044  
                                                                       u5230 0002D4  
                                                                       u5150 000156  
                                                                       u5070 0000DE  
                                                                       u5311 00002C  
                                                                       u3631 000402  
                                                                       u3471 000018  
                                                                       u3711 000014  
                                                                       u2831 000586  
                                                                       u2751 000484  
                                                                       u2671 0003A0  
                                                                       u2591 000242  
                                                                       u6111 0003A2  
                                                                       u5231 0002CE  
                                                                       u5151 000150  
                                                                       u5071 0000D8  
                                                                       u6120 00001C  
                                                                       u5320 000076  
                                                                       u3640 00043C  
                                                                       u3560 0002F4  
                                                                       u3480 000036  
                                                                       u2760 0004A4  
                                                                       u2680 0003BA  
                                                                       u6040 000070  
                                                                       u2840 00001C  
                                                                       u5240 000306  
                                                                       u5160 0001D4  
                                                                       u5080 00001E  
                                                                       u5400 00013E  
                                                                       u6200 0000B6  
                                                                       u6121 000016  
                                                                       u5321 000070  
                                                                       u3641 000436  
                                                                       u3561 0002EE  
                                                                       u3481 000030  
                                                                       u2761 00049E  
                                                                       u2681 0003B4  
                                                                       u6105 00037C  
                                                                       u6041 00006A  
                                                                       u2841 000016  
                                                                       u5241 000300  
                                                                       u5161 0001CE  
                                                                       u5081 000018  
                                                                       u5401 000138  
                                                                       u6201 0000B0  
                                                                       u6130 000058  
                                                                       u5330 00009A  
                                                                       u3650 00047C  
                                                                       u3570 00031C  
                                                                       u3490 00004A  
                                                                       u2770 0004C2  
                                                                       u2690 0003EC  
                                                                       u6050 0000AA  
                                                                       u2850 00004E  
                                                                       u5250 000324  
                                                                       u5170 0001FA  
                                                                       u5090 000036  
                                                                       u5410 000164  
                                                                       u6210 0000CA  
                                                                       u5331 000094  
                                                                       u3651 000476  
                                                                       u3571 000316  
                                                                       u3555 000288  
                                                                       u3491 000044  
                                                                       u2771 0004BC  
                                                                       u2691 0003E6  
                                                                       u6035 000038  
                                                                       u2851 000048  
                                                                       u5251 00031E  
                                                                       u5171 0001F4  
                                                                       u5091 000030  
                                                                       u5411 00015E  
                                                                       u6211 0000C4  
                                                                       u6140 00008A  
                                                                       u5340 0000C0  
                                                                       u3580 000332  
                                                                       u2780 000500  
                                                                       u6060 0000CA  
                                                                       u2860 000034  
                                                                       u5260 00033E  
                                                                       u5180 00022C  
                                                                       u5420 000178  
                                                                       u5500 000044  
                                                                       u6220 0000DE  
                                                                       u6141 000084  
                                                                       u5341 0000BA  
                                                                       u3581 00032C  
                                                                       u2781 0004FA  
                                                                       u6061 0000C4  
                                                                       u2861 00002C  
                                                                       u5261 000338  
                                                                       u5181 000226  
                                                                       u5421 000172  
                                                                       u5501 00003C  
                                                                       u6221 0000D8  
                                                                       u6150 0000A2  
                                                                       u5350 000116  
                                                                       u3590 000364  
                                                                       u2790 000518  
                                                                       u6070 000110  
                                                                       u2870 000038  
                                                                       u5270 00035C  
                                                                       u5190 000258  
                                                                       u5430 00018A  
                                                                       u5510 000048  
                                                                       u6151 00009C  
                                                                       u6135 00004C  
                                                                       u5351 000110  
                                                                       u3591 00035E  
                                                                       u2791 000512  
                                                                       u6071 00010A  
                                                                       u6055 00009E  
                                                                       u5271 000356  
                                                                       u5191 000252  
                                                                       u5431 000184  
                                                                       u6160 0000D2  
                                                                       u6080 00021C  
                                                                       u4800 00003E  
                                                                       u2880 000042  
                                                                       u5280 0003AA  
                                                                       u5440 0001CA  
                                                                       u5360 000016  
                                                                       u5600 0001E4  
                                                                       u5520 00006E  
                                                                       u6161 0000CC  
                                                                       u6081 000216  
                                                                       u4801 000038  
                                                                       u2881 00003C  
                                                                       u5281 0003A4  
                                                                       u5441 0001C4  
                                                                       u5361 000010  
                                                                       u5601 0001DE  
                                                                       u5521 000066  
                                                                       u6170 0000FA  
                                                                       u6090 0002C0  
                                                                       u4810 000076  
                                                                       u4730 00003E  
                                                                       u5290 0003E0  
                                                                       u5450 0001DC  
                                                                       u5370 000028  
                                                                       u5610 0001F8  
                                                                       u5530 000072  
                                                                       u2890 000042  
                                                                       u6171 0000F4  
                                                                       u6091 0002BA  
                                                                       u4811 000070  
                                                                       u5291 0003DA  
                                                                       u5451 0001D6  
                                                                       u5371 000022  
                                                                       u5611 0001F2  
                                                                       u2891 00003C  
                                                                       u6180 00010E  
                                                                       u4820 000098  
                                                                       u4740 000052  
                                                                       u4900 000084  
                                                                       u5380 00008C  
                                                                       u5700 0003F6  
                                                                       u5620 00023E  
                                                                       u5540 000098  
                                                                       u2980 00002A  
                                                                       u5460 00004C  
                                                                       _RCIF 007CF5  
                                                                       u6181 000108  
                                                                       u4821 000092  
                                                                       u4741 00004C  
                                                                       u4901 00007E  
                                                                       u5381 000086  
                                                                       u6237 0000B4  
                                                                       u5621 000238  
                                                                       u5541 000090  
                                                                       u2981 000024  
                                                                       u5461 000046  
                                                                       u4830 00015C  
                                                                       u4750 000088  
                                                                       u4910 00002E  
                                                                       u5390 0000EC  
                                                                       u5710 00041C  
                                                                       u5630 0002F8  
                                                                       u5550 00009C  
                                                                       u2990 000050  
                                                                       u5470 000090  
                                                                       u6190 000022  
                                                                       u4831 000154  
                                                                       u4911 000028  
                                                                       u6247 00000E  
                                                                       u5391 0000E6  
                                                                       u5711 000414  
                                                                       u5631 0002F2  
                                                                       u2991 00004A  
                                                                       u5471 00008A  
                                                                       u6191 00001C  
                                                                       u4840 000160  
                                                                       u4760 00009A  
                                                                       u4920 00009C  
                                                                       u5800 0005BC  
                                                                       u5720 000420  
                                                                       u5640 00030C  
                                                                       u5560 0000E6  
                                                                       u5480 0000D4  
                                                                       u4761 000094  
                                                                       u4737 000034  
                                                                       u4921 000096  
                                                                       u5801 0005B6  
                                                                       u5641 000306  
                                                                       u5561 0000E0  
                                                                       u5481 0000CE  
                                                                       u4850 00017A  
                                                                       u4770 00002E  
                                                                       u4930 000016  
                                                                       u5810 0005D0  
                                                                       u5730 000446  
                                                                       u5650 00035C  
                                                                       u5570 000138  
                                                                       u5490 000118  
                                                                       u4851 000174  
                                                                       u4771 000028  
                                                                       u4931 000010  
                                                                       u5811 0005CA  
                                                                       u5731 00043E  
                                                                       u5651 000356  
                                                                       u5571 000132  
                                                                       u5491 000112  
                                                                       u4860 000190  
                                                                       u5900 00008E  
                                                                       u4780 000056  
                                                                       u4940 000074  
                                                                       u5820 000616  
                                                                       u5740 00044A  
                                                                       u5660 000370  
                                                                       u5580 00014C  
                                                                       u4861 00018A  
                                                                       u4757 00007E  
                                                                       u5901 000088  
                                                                       u4781 000050  
                                                                       u4941 00006E  
                                                                       u5821 000610  
                                                                       u5661 00036A  
                                                                       u5581 000146  
                                                                       u5910 000042  
                                                                       u4950 000016  
                                                                       u4870 000016  
                                                                       u4790 00001A  
                                                                       u5830 0006D0  
                                                                       u5750 000460  
                                                                       u5670 0003BA  
                                                                       u5590 000192  
                                                                       u5911 00003C  
                                                                       u4951 000010  
                                                                       u4871 000010  
                                                                       u4791 000014  
                                                                       u5831 0006CA  
                                                                       u5751 00045A  
                                                                       u5671 0003B4  
                                                                       u5591 00018C  
                                                                       u5920 00005A  
                                                                       u4960 00002A  
                                                                       u4880 000084  
                                                                       u5840 0006E4  
                                                                       u5760 0004BE  
                                                                       u5680 0003CE  
                                                                       u5921 000054  
                                                                       u4961 000024  
                                                                       u4881 00007E  
                                                                       u5841 0006DE  
                                                                       u5761 0004B8  
                                                                       u5681 0003C8  
                                                                       u5930 000084  
                                                                       u4970 00004A  
                                                                       u4890 000016  
                                                                       u5850 000722  
                                                                       u5770 000510  
                                                                       u5690 0003F2  
                                                                       u5931 00007E  
                                                                       u4971 000044  
                                                                       u4891 000010  
                                                                       u5851 00071C  
                                                                       u5771 00050A  
                                                                       u5691 0003EA  
                                                                       u5940 0000CA  
                                                                       u4980 00005E  
                                                                       u5860 000736  
                                                                       u5780 000524  
                                                                       u5941 0000C4  
                                                                       u4981 000058  
                                                                       u5861 000730  
                                                                       u5781 00051E  
                                                                       u5950 000110  
                                                                       u4990 000018  
                                                                       u5870 00077A  
                                                                       u5790 00056A  
                                                                       u5951 00010A  
                                                                       u4991 000012  
                                                                       u5871 000774  
                                                                       u5791 000564  
                                                                       u5960 000156  
                                                                       u5880 00078E  
                                                                       u5961 000150  
                                                                       u5881 000788  
                                                                       u5970 00019C  
                                                                       u5890 000042  
                                                                       u5971 000196  
                                                                       u5891 00003C  
                                                                       u5980 0001E2  
                                                                       u5981 0001DC  
                                                                       u5990 000222  
                                                                       u5991 00021C  
                                                            _check_component 000000  
                                                                       _Fosc 000011  
                                                                       _Tosc 000004  
                                                                       _atoi 000000  
                                                                       _main 000000  
                                                                       _func 00000C  
                                                                       fsr0h 000FEA  
                                                                       fsr1h 000FE2  
                                                                       indf0 000FEF  
                                                                       fsr2h 000FDA  
                                                                       fsr0l 000FE9  
                                                                       indf1 000FE7  
                                                                       indf2 000FDF  
                                                                       fsr1l 000FE1  
                                                                       fsr2l 000FD9  
                                                                       btemp 000000  
                                                                       _stop 000017  
                                                                       prodh 000FF4  
                                                                       prodl 000FF3  
                                                                       start 000000* 
                                                                 _Angle_diff 000002  
                                                            ___fldiv@new_exp 000028  
                                                               ___param_bank 000000  
                                                               ?_init_Timers 000000  
                                                              ___fltol@sign1 000004  
                                                                      ?_atoi 000010  
                                                            __end_of___fladd 0005A8  
                                                                      ?_main 000000  
                                                            __end_of___fldiv 000432  
                                                            __end_of___flneg 000042  
                                                                      STR_10 0001E0  
                                                                      STR_11 000205  
                                                                      STR_20 0002BD  
                                                                      STR_12 000193  
                                                                      STR_13 0002E7  
                                                                      STR_21 0002A8  
                                                                      STR_14 0000CB  
                                                                      STR_15 0002FB  
                                                                      STR_16 000085  
                                                                      STR_17 00030E  
                                                                      STR_18 00031A  
                                                                      STR_19 00013E  
                                                            __end_of___flmul 0004A4  
                                                            __end_of___flsub 00004A  
                                                            __end_of___fltol 000138  
                                                            __end_of_Tweezer 000074  
                                                            __end_of_Twister 0000C2  
                                                                      i2l318 000010  
                                                                      i2l451 0000AC  
                                                                      i2l444 000038  
                                                                      i2l456 000176  
                                                                      _RCREG 000FAE  
                                                                      _TMR0H 000FD7  
                                                                      _TMR1H 000FCF  
                                                                      _TMR0L 000FD6  
                                                                      _TMR1L 000FCE  
                                                                      _SPBRG 000FAF  
                                                                      _PORTA 000F80  
                                                                      _PORTB 000F81  
                                                                      _PORTC 000F82  
                                                                      _PORTD 000F83  
                                                                      _TRISA 000F92  
                                                                      _TRISB 000F93  
                                                                      _TRISD 000F95  
                                                                      _TXREG 000FAD  
                                                           Twister@direction 00000F  
                                                                      _X_dir 000016  
                                                                      _Y_dir 000015  
                                                                      _Steps 000000  
                                                     __size_of_add_component 000000  
                                                            __end_of_isdigit 000042  
                                                            __end_of_memmove 0000FA  
                                                                      atoi@n 00001D  
                                                                      atoi@s 000010  
                                                              print_char@chr 000009  
                                                                      _toint 000001  
                                                            __end_of_isspace 000060  
                                                                      tablat 000FF5  
                                                              _start_up_menu 000000  
                                                            _change_sequence 000000  
                                                                      ttemp5 000001  
                                                                      ttemp6 000004  
                                                            Y_axis@direction 00000F  
                                                                      ttemp7 000008  
                                                                      status 000FD8  
                                                                      wtemp8 000001  
                                                            __end_of_strrchr 00003A  
                                                               __end_of_Fosc 000015  
                                                            __initialization 000000  
                                                               __end_of_atoi 0001BE  
                                                               __end_of_main 00002C  
                                                                 _Pick_Angle 00000A  
                                                                     ??_atoi 000012  
                                                                     ??_main 00005A  
                                                              __activetblptr 000002  
                                                    __end_of_check_component 0000E4  
                                                              print_string@i 00000D  
                                                             ?_start_up_menu 000000  
                                                                     i2l4211 00005C  
                                                                     i2l4203 00000C  
                                                                     i2l4221 0000C8  
                                                                     i2l4213 00006E  
                                                                     i2l4205 00001E  
                                                                     i2l4231 000106  
                                                                     i2l4223 0000DA  
                                                                     i2l4215 000080  
                                                                     i2l4207 000030  
                                                                     i2l4241 00013A  
                                                                     i2l4233 000108  
                                                                     i2l4225 0000DC  
                                                                     i2l4217 0000B0  
                                                                     i2l4209 00004C  
                                                                     i2l4251 00015E  
                                                                     i2l4243 000144  
                                                                     i2l4235 00010C  
                                                                     i2l4227 0000E0  
                                                                     i2l4219 0000B4  
                                                                     i2l4173 000004  
                                                                     i2l4253 000170  
                                                                     i2l4245 000146  
                                                                     i2l4237 000120  
                                                                     i2l4229 0000F4  
                                                                     i2l4175 000008  
                                                                     i2l4247 000148  
                                                                     i2l4239 000132  
                                                                     i2l4177 00000C  
                                                                     i2l4249 00014A  
                                                                     i2l4179 00000E  
                                                           __end_of___xxtofl 0001F8  
                                                    remove_component@rm_comp 00001B  
                                                                     _X_Pick 000012  
                                                                     _Y_Pick 00000E  
                                                                     _X_diff 000006  
                                                                     _Y_diff 000004  
                                                                     _X_axis 000000  
                                                                     _Y_axis 000000  
                                                                     _Z_axis 000000  
                                                              _add_component 000000  
                                                          ?_remove_component 000000  
                                                                     _Step_X 000018  
                                                                     _Step_Y 000016  
                                                                     _Step_Z 000014  
                                                                     ___flge 000000  
                                                               ?_set_new_pos 000000  
                                                                  ??___fladd 000011  
                                                                     ___wmul 000000  
                                                                  ??___fldiv 00001F  
                                                                  ??___flneg 00000D  
                                                                  ??___flmul 000011  
                                                                  ??___flsub 000021  
                                                                  ??___fltol 000000  
                                                                  ??_Tweezer 000009  
                                                           ??_pick_and_place 00003C  
                                                         ??_remove_component 00001B  
                                                                  ??_Twister 00000F  
                                                                     clear_0 000038  
                                                                     clear_1 000044  
                                                                     isa$std 000001  
                                                           __end_of_ms_delay 00005C  
                                                                     _roundf 000000  
                                                                     _strcat 000000  
                                                                     _strcpy 000000  
                                                                     _strlen 000000  
                                                               __pdataCOMRAM 000000  
                                                                  ??_isdigit 00000B  
                                                                  ??_memmove 000013  
                                                              _Place_Angle_D 000006  
                                                                 _Step_Angle 000012  
                                                               __mediumconst 000000* 
                                                                  ??_isspace 00000B  
                                                                     tblptrh 000FF7  
                                                                     tblptrl 000FF6  
                                                                     tblptru 000FF8  
                                                    __end_of_change_sequence 000098  
                                                                  ??_strrchr 00001B  
                                                          _return_to_initial 000000  
                                                                 ___flge@ff1 000030  
                                                                 ___flge@ff2 000034  
                                                               ___xxtofl@arg 000013  
                                                               ___xxtofl@exp 000012  
                                                               ___xxtofl@val 000009  
                                                                 __accesstop 000000* 
                                                    __end_of__initialization 00004A  
                                                         __size_of___memrchr 000000  
                                                         ?_return_to_initial 000000  
                                                                 ___flneg@f1 000009  
                                                              ___rparam_used 000001  
                                                                 ___fltol@f1 000056  
                                                         _pick_and_place$771 00000A  
                                                         _pick_and_place$781 000016  
                                                         _pick_and_place$765 000002  
                                                         _pick_and_place$783 00001A  
                                                         _pick_and_place$768 000006  
                                                         _pick_and_place$779 000012  
                                                             ?_add_component 000000  
                                                  fetch_coordinates@Componnt 000009  
                                                            _init_interrupts 000000  
                                                        ??_return_to_initial 000012  
                                                             __pcstackCOMRAM 000000  
                                                        _new_TMR1H@main$F655 000000  
                                                   __end_of_Fosc@serial$F926 000011  
                                                               __pidataBANK0 000000  
                                                              __end_of_toint 000005  
                                                       __size_of_init_Timers 000000  
                                                                ms_delay@val 000009  
                                                           _desired_BaudRate 000009  
                                                           ?_check_component 000000  
                                                  __end_of_return_to_initial 000124  
                                                            ??_start_up_menu 00003E  
                                                                _Place_Angle 000008  
                                                             _steps_per_unit 00000A  
                                                                _New_char_RX 000000  
                                                                 __pbssBANK0 000000  
                                                      __end_of_Rx_char_USART 000186  
                                                  remove_component@indxToDel 00001E  
                                                                 __pnvCOMRAM 000000  
                                                                 _angle_diff 000004  
                                                      check_component@Compnt 000011  
                                                                    ?_X_axis 000000  
                                                                    ?_Y_axis 000000  
                                                                    ?_Z_axis 000000  
                                                                    ?___flge 000030  
                                                        _new_TMR1L@main$F656 00000D  
                                                                    ?___wmul 000009  
                                                                    ?_roundf 00003C  
                                                                    ?_strcat 000015  
                                                          __end_of___memrchr 000082  
                                                                    ?_strcpy 00000D  
                                                                    ?_strlen 000009  
                                                           check_component@j 000012  
                                                          set_new_pos@nTMR1H 000001  
                                                          set_new_pos@nTMR1L 000000  
                                                                    _INTCON2 000FF1  
                                                                    _INTCON3 000FF0  
                                                                  ?___xxtofl 000009  
                                                        pick_and_place@i_780 000014  
                                                        pick_and_place@i_773 00000C  
                                                        pick_and_place@i_782 000018  
                                                        pick_and_place@i_766 000004  
                                                        pick_and_place@i_784 00001C  
                                                        pick_and_place@i_776 00000E  
                                                        pick_and_place@i_785 00001E  
                                                        pick_and_place@i_769 000008  
                                                        pick_and_place@i_778 000010  
                                                           ?_change_sequence 000000  
                                                    __end_of_init_interrupts 000020  
                                                            ??_add_component 00001F  
                                                                  ?_ms_delay 000009  
                                                                    _X_Place 000010  
                                                                    _Y_Place 00000C  
                                                                    __Hparam 000000  
                                                                    __Lparam 000000  
                                                            pick_and_place@i 000000  
                                                                 _init_PORTS 000000  
                                                                 _init_USART 000000  
                                                            __size_of_X_axis 000000  
                                                            __size_of_Y_axis 000000  
                                                            __size_of_Z_axis 000000  
                                                            __size_of___flge 000000  
                                                                    ___fladd 000000  
                                                                    ___fldiv 000000  
                                                                    ___flneg 000000  
                                                                    ___flmul 000000  
                                                                    ___flsub 000000  
                                                                    ___fltol 000000  
                                                                    _Tweezer 000000  
                                                            __size_of___wmul 000000  
                                                                    _Twister 000000  
                                                       __size_of_set_new_pos 000000  
                                                                    __pcinit 000000  
                                                                    __ramtop 000000* 
                                                                    __ptext0 000000  
                                                                    __ptext1 000000  
                                                                    __ptext2 000000  
                                                                    __ptext3 000000  
                                                                    __ptext4 000000  
                                                                    __ptext5 000000  
                                                                    __ptext6 000000  
                                                                    __ptext7 000000  
                                                                    __ptext8 000000  
                                                                    __ptext9 000000  
                                                                  _T0CONbits 000FD5  
                                                            __size_of_roundf 000000  
                                                            __size_of_strcat 000000  
                                                            __size_of_strcpy 000000  
                                                            __size_of_strlen 000000  
                                                                  _T1CONbits 000FCD  
                                                                    _isdigit 000000  
                                                                    _memmove 000000  
                                                                 ??___xxtofl 00000D  
                                                                    _isspace 000000  
                                                 __size_of_return_to_initial 000000  
                                                                    atoi@neg 000016  
                                                              Tweezer@action 000009  
                                                                    _strrchr 000000  
                                                       end_of_initialization 00004A  
                                                        remove_component@ptr 00001C  
                                                              __Lmediumconst 000000* 
                                                                 ??_ms_delay 00000B  
                                                                  _RCSTAbits 000FAB  
                                                                    postdec1 000FE5  
                                                                    postinc0 000FEE  
                                                                    postinc2 000FDE  
                                                                    roundf@e 000048  
                                                                    roundf@u 00004E  
                                                                    roundf@x 00003C  
                                                                    roundf@y 000052  
                                                                    strcpy@d 000013  
                                                                    strlen@a 00000B  
                                                                    strcpy@s 000011  
                                                                    strlen@s 000009  
                                                                 _print_char 000000  
                                                         add_component@F3136 000008  
                                                                ___fladd@grs 000018  
                                                              ___xxtofl@sign 000011  
                                                  __size_of_remove_component 000000  
                                                                  _TRISCbits 000F94  
                                                                ___fldiv@grs 00002A  
                                                                ___fldiv@rem 000023  
                                                              ?_print_string 000009  
                                                                ___flmul@grs 000016  
                                                           ?_init_interrupts 000000  
                                                                  _TXSTAbits 000FAC  
                                                                ___memrchr@c 00000F  
                                                                ___memrchr@m 00000D  
                                                                ___memrchr@n 000011  
                                                                ___memrchr@s 000015  
                                                   __end_of_desired_BaudRate 00000D  
                                                                ?_init_PORTS 000000  
                                                                ?_init_USART 000000  
                                                             __end_of_X_axis 0000E2  
                                                             __end_of_Y_axis 0000E2  
                                                             __end_of_Z_axis 0000FA  
                                                             __end_of___flge 000128  
                                                             __end_of___wmul 00002A  
                                                              __pidataCOMRAM 000000  
                                                             __end_of_roundf 0003E6  
                                                             __end_of_strcat 00002A  
                                                             __end_of_strcpy 000048  
                                                             __end_of_strlen 000042  
                                                        start_initialization 000000  
                                                             ??_print_string 00000B  
                                                                  _X_Place_D 00000A  
                                                                  _Y_Place_D 000008  
                                                            X_axis@direction 00000F  
                                                               _Pick_Angle_D 00000C  
                                                                   ??_X_axis 00000F  
                                                                   ??_Y_axis 00000F  
                                                                   ??_Z_axis 00000F  
                                                                   ??___flge 000038  
                                                                   ??___wmul 00000D  
                                                                __pdataBANK0 000000  
                                                              ??_init_Timers 000009  
                                                         return_to_initial@i 000013  
                                                                   ??_roundf 000040  
                                                                   ??_strcat 000019  
                                                           _Tosc@serial$F927 000000  
                                                                   ??_strcpy 000011  
                                                                   ??_strlen 00000B  
                                                                  ___fladd@a 00000D  
                                                                  ___fladd@b 000009  
                                                                ?_print_char 000000  
                                                                  ___fldiv@a 00001B  
                                                                  ___fldiv@b 000017  
                                                                  ___flmul@a 00000D  
                                                                  ___flmul@b 000009  
                                                                __pbssCOMRAM 000000  
                                                           change_sequence@i 000012  
                                                                  ___flsub@a 00001D  
                                                                  ___flsub@b 000019  
                                                              __pcstackBANK0 000000  
                                                    __size_of_pick_and_place 000000  
                                                                  ___memrchr 000000  
                                                                  __delay_ms 000000* 
                                                          __size_of___xxtofl 000000  
                                                        __size_of_init_PORTS 000000  
                                                        __size_of_init_USART 000000  
                                                                  _Twist_dir 000014  
                                                      __end_of_start_up_menu 00015A  
                                                   __size_of_check_component 000000  
                                                                  _atoi$1403 000018  
                                                                  _atoi$1404 00001C  
                                                                  _atoi$1405 00001A  
                                                            Z_axis@direction 000011  
                                                          __size_of_ms_delay 000000  
                                                                  __pintcode 000000  
                                                              __pmediumconst 000000  
                                                                   ?___fladd 000009  
                                                                   ?___fldiv 000017  
                                                                   ?___flneg 000009  
                                                                   ?___flmul 000009  
                                                                   ?___flsub 000019  
                                                                   ?___fltol 000056  
                                                                   ?_Tweezer 000000  
                                                                   ?_Twister 000000  
                                                          _fetch_coordinates 000000  
                                       __end_of_desired_BaudRate@serial$F928 000009  
                                               _desired_BaudRate@serial$F928 000005  
                                                             Rx_char_USART@i 000007  
                                                     __size_of_Rx_char_USART 000000  
                                                         ?_fetch_coordinates 000000  
                                                          print_string@strng 000009  
                                                                   ?_isdigit 000009  
                                                                   ?_memmove 00000D  
                                                                   ?_isspace 000009  
                                                        __end_of_init_Timers 00002A  
                                                           _remove_component 000000  
                                                                 ?___memrchr 00000D  
                                                                  _new_TMR1H 00000F  
                                                                  _new_TMR1L 00000E  
                                                        ??_fetch_coordinates 000009  
                                                                 ?__delay_ms 000000  
                                                                   ?_strrchr 000017  
                                                          _component_present 000018  
                                                                  _input_str 000010  
                                                             ___wmul@product 00000D  
                                                                   _LATCbits 000F8B  
                                                   __size_of_change_sequence 000000  
                                                                   _PIE1bits 000F9D  
                                                        __size_of_print_char 000000  
                                                      __end_of_add_component 000262  
                                                                   _PIR1bits 000F9E  
                                                                   i2u460_40 00002E  
                                                                   i2u460_41 000028  
                                                                   i2u461_40 00004A  
                                                                   i2u461_41 000044  
                                                                   i2u470_40 000130  
                                                                   i2u462_40 00005C  
                                                                   i2u470_41 00012A  
                                                                   i2u462_41 000056  
                                                                   i2u471_40 00015C  
                                                                   i2u463_40 00007E  
                                                                   i2u471_41 000156  
                                                                   i2u463_41 000078  
                                                                   i2u472_40 00016E  
                                                                   i2u464_40 0000AC  
                                                                   i2u472_41 000168  
                                                                   i2u464_41 0000A6  
                                                                   i2u465_40 0000C6  
                                                                   i2u465_41 0000C0  
                                                                   i2u466_40 0000D8  
                                                                   i2u466_41 0000D2  
                                                                   i2u467_40 0000F2  
                                                                   i2u459_40 00001C  
                                                                   i2u467_41 0000EC  
                                                                   i2u459_41 000016  
                                                                   i2u468_40 000104  
                                                                   i2u468_41 0000FE  
                                                                   i2u469_40 00011E  
                                                                   i2u469_41 000118  
                                                              ??_set_new_pos 000001  
                                                  __end_of_fetch_coordinates 000138  
                                                       __end_of_print_string 0000A0  
                                                          ___wmul@multiplier 000009  
                                                               _isspace$1421 00000F  
                                                                _INTCON3bits 000FF0  
                                                                  copy_data0 000014  
                                                                   _X_Pick_D 000010  
                                                              _Rx_char_USART 000000  
                                                                   _Y_Pick_D 00000E  
                                                                 roundf@F528 000000  
                                                                   __Hrparam 000000* 
                                                               ??_init_PORTS 000009  
                                                               ??_init_USART 00005A  
                                                                   __Lrparam 000000* 
                                                          ??_check_component 00000F  
                                                                  memmove@d1 00000D  
                                                                  memmove@s1 00000F  
                                                           __size_of___fladd 000000  
                                                           __size_of___fldiv 000000  
                                                           __size_of___flneg 000000  
                                                           __size_of___flmul 000000  
                                                           __size_of___flsub 000000  
                                                           __size_of___fltol 000000  
                                                           __size_of_Tweezer 000000  
                                                           __size_of_Twister 000000  
                                                                _init_Timers 000000  
                                                        __end_of_set_new_pos 000014  
                                                                  ms_delay@i 00000B  
                                                                  ms_delay@j 00000D  
                                                                   ___xxtofl 000000  
                                                                 strcat@dest 000015  
                                                             _pick_and_place 000000  
                                                           __size_of_isdigit 000000  
                                                           __size_of_memmove 000000  
                                                                ??___memrchr 000013  
                                                           __size_of_isspace 000000  
                                                                ??__delay_ms 000000  
                                                                   __ptext10 000000  
                                                                   __ptext11 000000  
                                                                   __ptext20 000000  
                                                                   __ptext12 000000  
                                                                   __ptext21 000000  
                                                                   __ptext13 000000  
                                                                   __ptext30 000000  
                                                                   __ptext22 000000  
                                                                   __ptext14 000000  
                                                                   __ptext31 000000  
                                                                   __ptext23 000000  
                                                                   __ptext15 000000  
                                                                   __ptext32 000000  
                                                                   __ptext24 000000  
                                                                   __ptext16 000000  
                                                                   __ptext41 000000  
                                                                   __ptext33 000000  
                                                                   __ptext25 000000  
                                                                   __ptext17 000000  
                                                                   __ptext34 000000  
                                                                   __ptext26 000000  
                                                                   __ptext18 000000  
                                                                   __ptext35 000000  
                                                                   __ptext27 000000  
                                                                   __ptext19 000000  
                                                                   __ptext36 000000  
                                                                   __ptext28 000000  
                                                                   __ptext37 000000  
                                                                   __ptext29 000000  
                                                                   __ptext38 000000  
                                                                   __ptext39 000000  
                                                         __end_of_init_PORTS 000028  
                                                         __end_of_init_USART 000040  
                                                                 strcpy@dest 00000D  
                                                           __size_of_strrchr 000000  
                                                             ?_Rx_char_USART 000000  
                                                              __size_of_atoi 000000  
                                                              __size_of_main 000000  
                                                                   _ms_delay 000000  
                                                                   isa$xinst 000000  
                                                                   _sequence 00001A  
                                                 __size_of_fetch_coordinates 000000  
                                                   __size_of_init_interrupts 000000  
                                                          ??_change_sequence 00000F  
                                                                   int$flags 000000  
                                                     __end_of_pick_and_place 0007AC  
                                                               ??_print_char 000009  
                                                                 _INTCONbits 000FF2  
                                                     return_to_initial@i_790 000019  
                                                     return_to_initial@i_788 000015  
                                                     return_to_initial@i_789 000017  
                                                                   isdigit@c 000009  
                                                                   memmove@d 000015  
                                                                   memmove@n 000011  
                                                                   memmove@s 000017  
                                                                   intlevel2 000000* 
                                                                  strcat@src 000017  
                                                                   isspace@c 000009  
                                                                  strcpy@src 00000F  
                                                      __size_of_print_string 000000  
                                                         __end_of_print_char 000020  
                                                   __end_of_remove_component 0000EE  
                                                                _set_new_pos 000000  
                                                     pick_and_place@Componnt 000020  
                                                            ?_pick_and_place 000000  
                                                                   strrchr@c 000019  
                                                                   strrchr@s 000017  
                                                              ___fladd@signs 000015  
                                                            ??_Rx_char_USART 000002  
                                                               _print_string 000000  
                                                               ___fladd@aexp 000016  
                                                               ___fladd@bexp 000017  
                                                  add_component@add_componnt 00001F  
                                                             start_up_menu@i 000040  
                                                                _roundf$1683 00004A  
                                                                _roundf$1684 000044  
