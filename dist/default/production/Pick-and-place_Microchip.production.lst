

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun  7 16:26:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F452 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  002EA8                     __pidataCOMRAM:
    97                           	callstack 0
    98                           
    99                           ;initializer for _input_str
   100  002EA8  20                 	db	32
   101  002EA9  00                 	db	0
   102                           
   103                           	psect	idataBANK0
   104  002E8C                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _Tosc@main$F494
   108  002E8C  37BD               	dw	14269
   109  002E8E  3486               	dw	13446
   110                           
   111                           ;initializer for _Tosc
   112  002E90  37BD               	dw	14269
   113  002E92  3486               	dw	13446
   114                           
   115                           ;initializer for add_component@F3133
   116  002E94  44                 	db	68
   117  002E95  00                 	db	0
   118                           
   119                           ;initializer for _lenth_of_array
   120  002E96  001E               	dw	30
   121                           
   122                           ;initializer for _sequence
   123  002E98  43                 	db	67
   124  002E99  41                 	db	65
   125  002E9A  42                 	db	66
   126  002E9B  00                 	db	0
   127                           
   128                           	psect	mediumconst
   129  007E2E                     __pmediumconst:
   130                           	callstack 0
   131  007E2E  00                 	db	0
   132  007E2F                     change_sequence@F3126:
   133                           	callstack 0
   134  007E2F  50                 	db	80
   135  007E30  6C                 	db	108
   136  007E31  65                 	db	101
   137  007E32  61                 	db	97
   138  007E33  73                 	db	115
   139  007E34  65                 	db	101
   140  007E35  20                 	db	32
   141  007E36  67                 	db	103
   142  007E37  69                 	db	105
   143  007E38  76                 	db	118
   144  007E39  65                 	db	101
   145  007E3A  20                 	db	32
   146  007E3B  74                 	db	116
   147  007E3C  68                 	db	104
   148  007E3D  65                 	db	101
   149  007E3E  20                 	db	32
   150  007E3F  6E                 	db	110
   151  007E40  65                 	db	101
   152  007E41  77                 	db	119
   153  007E42  20                 	db	32
   154  007E43  73                 	db	115
   155  007E44  65                 	db	101
   156  007E45  71                 	db	113
   157  007E46  75                 	db	117
   158  007E47  65                 	db	101
   159  007E48  6E                 	db	110
   160  007E49  63                 	db	99
   161  007E4A  65                 	db	101
   162  007E4B  20                 	db	32
   163  007E4C  61                 	db	97
   164  007E4D  73                 	db	115
   165  007E4E  20                 	db	32
   166  007E4F  69                 	db	105
   167  007E50  6E                 	db	110
   168  007E51  70                 	db	112
   169  007E52  75                 	db	117
   170  007E53  74                 	db	116
   171  007E54  0D                 	db	13
   172  007E55  20                 	db	32
   173  007E56  54                 	db	84
   174  007E57  68                 	db	104
   175  007E58  65                 	db	101
   176  007E59  20                 	db	32
   177  007E5A  63                 	db	99
   178  007E5B  75                 	db	117
   179  007E5C  72                 	db	114
   180  007E5D  72                 	db	114
   181  007E5E  65                 	db	101
   182  007E5F  6E                 	db	110
   183  007E60  74                 	db	116
   184  007E61  20                 	db	32
   185  007E62  73                 	db	115
   186  007E63  65                 	db	101
   187  007E64  71                 	db	113
   188  007E65  75                 	db	117
   189  007E66  65                 	db	101
   190  007E67  6E                 	db	110
   191  007E68  63                 	db	99
   192  007E69  65                 	db	101
   193  007E6A  20                 	db	32
   194  007E6B  69                 	db	105
   195  007E6C  73                 	db	115
   196  007E6D  3A                 	db	58
   197  007E6E  20                 	db	32
   198  007E6F  0A                 	db	10
   199  007E70  00                 	db	0
   200  007E71                     __end_ofchange_sequence@F3126:
   201                           	callstack 0
   202  007E71  0000               	dw	0
   203  007E73  4B00               	dw	19200
   204  007E75                     __end_of_toint:
   205                           	callstack 0
   206  007E75  0000               	dw	0
   207  007E77  4616               	dw	17942
   208  007E79                     __end_of_desired_BaudRate@main$F495:
   209                           	callstack 0
   210  007E79  0000               	dw	0
   211  007E7B  4616               	dw	17942
   212  007E7D                     __end_of_desired_BaudRate:
   213                           	callstack 0
   214  007E7D  2400               	dw	9216
   215  007E7F  4A74               	dw	19060
   216  007E81                     __end_of_Fosc@main$F493:
   217                           	callstack 0
   218  007E81  2400               	dw	9216
   219  007E83  4A74               	dw	19060
   220  007E85                     __end_of_Fosc:
   221                           	callstack 0
   222  0000                     _RCREG	set	4014
   223  0000                     _TXREG	set	4013
   224  0000                     _RCSTAbits	set	4011
   225  0000                     _TXSTAbits	set	4012
   226  0000                     _SPBRG	set	4015
   227  0000                     _INTCONbits	set	4082
   228  0000                     _PIE1bits	set	3997
   229  0000                     _PIR1bits	set	3998
   230  0000                     _TRISCbits	set	3988
   231  0000                     _PORTC	set	3970
   232  0000                     _LATC	set	3979
   233  0000                     _PORTD	set	3971
   234  0000                     _PORTB	set	3969
   235  0000                     _TRISD	set	3989
   236  0000                     _TRISB	set	3987
   237  0000                     _RCIF	set	31989
   238  007E85                     STR_1:
   239  007E85  0A                 	db	10
   240  007E86  31                 	db	49	;'1'
   241  007E87  2E                 	db	46
   242  007E88  20                 	db	32
   243  007E89  44                 	db	68	;'D'
   244  007E8A  65                 	db	101	;'e'
   245  007E8B  66                 	db	102	;'f'
   246  007E8C  61                 	db	97	;'a'
   247  007E8D  75                 	db	117	;'u'
   248  007E8E  6C                 	db	108	;'l'
   249  007E8F  74                 	db	116	;'t'
   250  007E90  20                 	db	32
   251  007E91  53                 	db	83	;'S'
   252  007E92  65                 	db	101	;'e'
   253  007E93  71                 	db	113	;'q'
   254  007E94  75                 	db	117	;'u'
   255  007E95  65                 	db	101	;'e'
   256  007E96  6E                 	db	110	;'n'
   257  007E97  63                 	db	99	;'c'
   258  007E98  65                 	db	101	;'e'
   259  007E99  0A                 	db	10
   260  007E9A  32                 	db	50	;'2'
   261  007E9B  2E                 	db	46
   262  007E9C  20                 	db	32
   263  007E9D  43                 	db	67	;'C'
   264  007E9E  68                 	db	104	;'h'
   265  007E9F  61                 	db	97	;'a'
   266  007EA0  6E                 	db	110	;'n'
   267  007EA1  67                 	db	103	;'g'
   268  007EA2  65                 	db	101	;'e'
   269  007EA3  20                 	db	32
   270  007EA4  73                 	db	115	;'s'
   271  007EA5  65                 	db	101	;'e'
   272  007EA6  71                 	db	113	;'q'
   273  007EA7  75                 	db	117	;'u'
   274  007EA8  65                 	db	101	;'e'
   275  007EA9  6E                 	db	110	;'n'
   276  007EAA  63                 	db	99	;'c'
   277  007EAB  65                 	db	101	;'e'
   278  007EAC  0A                 	db	10
   279  007EAD  33                 	db	51	;'3'
   280  007EAE  2E                 	db	46
   281  007EAF  20                 	db	32
   282  007EB0  41                 	db	65	;'A'
   283  007EB1  64                 	db	100	;'d'
   284  007EB2  64                 	db	100	;'d'
   285  007EB3  20                 	db	32
   286  007EB4  6E                 	db	110	;'n'
   287  007EB5  65                 	db	101	;'e'
   288  007EB6  77                 	db	119	;'w'
   289  007EB7  20                 	db	32
   290  007EB8  63                 	db	99	;'c'
   291  007EB9  6F                 	db	111	;'o'
   292  007EBA  6D                 	db	109	;'m'
   293  007EBB  70                 	db	112	;'p'
   294  007EBC  6F                 	db	111	;'o'
   295  007EBD  6E                 	db	110	;'n'
   296  007EBE  65                 	db	101	;'e'
   297  007EBF  6E                 	db	110	;'n'
   298  007EC0  74                 	db	116	;'t'
   299  007EC1  0A                 	db	10
   300  007EC2  34                 	db	52	;'4'
   301  007EC3  2E                 	db	46
   302  007EC4  20                 	db	32
   303  007EC5  52                 	db	82	;'R'
   304  007EC6  65                 	db	101	;'e'
   305  007EC7  6D                 	db	109	;'m'
   306  007EC8  6F                 	db	111	;'o'
   307  007EC9  76                 	db	118	;'v'
   308  007ECA  65                 	db	101	;'e'
   309  007ECB  20                 	db	32
   310  007ECC  61                 	db	97	;'a'
   311  007ECD  20                 	db	32
   312  007ECE  63                 	db	99	;'c'
   313  007ECF  6F                 	db	111	;'o'
   314  007ED0  6D                 	db	109	;'m'
   315  007ED1  70                 	db	112	;'p'
   316  007ED2  6F                 	db	111	;'o'
   317  007ED3  6E                 	db	110	;'n'
   318  007ED4  65                 	db	101	;'e'
   319  007ED5  6E                 	db	110	;'n'
   320  007ED6  74                 	db	116	;'t'
   321  007ED7  00                 	db	0
   322  007ED8                     STR_9:
   323  007ED8  63                 	db	99	;'c'
   324  007ED9  6F                 	db	111	;'o'
   325  007EDA  6D                 	db	109	;'m'
   326  007EDB  70                 	db	112	;'p'
   327  007EDC  6F                 	db	111	;'o'
   328  007EDD  6E                 	db	110	;'n'
   329  007EDE  65                 	db	101	;'e'
   330  007EDF  6E                 	db	110	;'n'
   331  007EE0  74                 	db	116	;'t'
   332  007EE1  20                 	db	32
   333  007EE2  69                 	db	105	;'i'
   334  007EE3  73                 	db	115	;'s'
   335  007EE4  20                 	db	32
   336  007EE5  6E                 	db	110	;'n'
   337  007EE6  6F                 	db	111	;'o'
   338  007EE7  74                 	db	116	;'t'
   339  007EE8  20                 	db	32
   340  007EE9  69                 	db	105	;'i'
   341  007EEA  6E                 	db	110	;'n'
   342  007EEB  20                 	db	32
   343  007EEC  74                 	db	116	;'t'
   344  007EED  68                 	db	104	;'h'
   345  007EEE  65                 	db	101	;'e'
   346  007EEF  20                 	db	32
   347  007EF0  73                 	db	115	;'s'
   348  007EF1  65                 	db	101	;'e'
   349  007EF2  71                 	db	113	;'q'
   350  007EF3  75                 	db	117	;'u'
   351  007EF4  65                 	db	101	;'e'
   352  007EF5  6E                 	db	110	;'n'
   353  007EF6  63                 	db	99	;'c'
   354  007EF7  65                 	db	101	;'e'
   355  007EF8  2E                 	db	46
   356  007EF9  20                 	db	32
   357  007EFA  0A                 	db	10
   358  007EFB  54                 	db	84	;'T'
   359  007EFC  72                 	db	114	;'r'
   360  007EFD  79                 	db	121	;'y'
   361  007EFE  20                 	db	32
   362  007EFF  73                 	db	115	;'s'
   363  007F00  65                 	db	101	;'e'
   364  007F01  6C                 	db	108	;'l'
   365  007F02  65                 	db	101	;'e'
   366  007F03  63                 	db	99	;'c'
   367  007F04  74                 	db	116	;'t'
   368  007F05  69                 	db	105	;'i'
   369  007F06  6E                 	db	110	;'n'
   370  007F07  67                 	db	103	;'g'
   371  007F08  20                 	db	32
   372  007F09  61                 	db	97	;'a'
   373  007F0A  6E                 	db	110	;'n'
   374  007F0B  6F                 	db	111	;'o'
   375  007F0C  74                 	db	116	;'t'
   376  007F0D  68                 	db	104	;'h'
   377  007F0E  65                 	db	101	;'e'
   378  007F0F  72                 	db	114	;'r'
   379  007F10  20                 	db	32
   380  007F11  63                 	db	99	;'c'
   381  007F12  6F                 	db	111	;'o'
   382  007F13  6D                 	db	109	;'m'
   383  007F14  70                 	db	112	;'p'
   384  007F15  6F                 	db	111	;'o'
   385  007F16  6E                 	db	110	;'n'
   386  007F17  65                 	db	101	;'e'
   387  007F18  6E                 	db	110	;'n'
   388  007F19  74                 	db	116	;'t'
   389  007F1A  00                 	db	0
   390  007F1B                     STR_8:
   391  007F1B  57                 	db	87	;'W'
   392  007F1C  68                 	db	104	;'h'
   393  007F1D  69                 	db	105	;'i'
   394  007F1E  63                 	db	99	;'c'
   395  007F1F  68                 	db	104	;'h'
   396  007F20  20                 	db	32
   397  007F21  63                 	db	99	;'c'
   398  007F22  6F                 	db	111	;'o'
   399  007F23  6D                 	db	109	;'m'
   400  007F24  70                 	db	112	;'p'
   401  007F25  6F                 	db	111	;'o'
   402  007F26  6E                 	db	110	;'n'
   403  007F27  65                 	db	101	;'e'
   404  007F28  6E                 	db	110	;'n'
   405  007F29  74                 	db	116	;'t'
   406  007F2A  20                 	db	32
   407  007F2B  77                 	db	119	;'w'
   408  007F2C  6F                 	db	111	;'o'
   409  007F2D  75                 	db	117	;'u'
   410  007F2E  6C                 	db	108	;'l'
   411  007F2F  64                 	db	100	;'d'
   412  007F30  20                 	db	32
   413  007F31  79                 	db	121	;'y'
   414  007F32  6F                 	db	111	;'o'
   415  007F33  75                 	db	117	;'u'
   416  007F34  20                 	db	32
   417  007F35  6C                 	db	108	;'l'
   418  007F36  69                 	db	105	;'i'
   419  007F37  6B                 	db	107	;'k'
   420  007F38  65                 	db	101	;'e'
   421  007F39  20                 	db	32
   422  007F3A  74                 	db	116	;'t'
   423  007F3B  6F                 	db	111	;'o'
   424  007F3C  20                 	db	32
   425  007F3D  72                 	db	114	;'r'
   426  007F3E  65                 	db	101	;'e'
   427  007F3F  6D                 	db	109	;'m'
   428  007F40  6F                 	db	111	;'o'
   429  007F41  76                 	db	118	;'v'
   430  007F42  65                 	db	101	;'e'
   431  007F43  20                 	db	32
   432  007F44  66                 	db	102	;'f'
   433  007F45  72                 	db	114	;'r'
   434  007F46  6F                 	db	111	;'o'
   435  007F47  6D                 	db	109	;'m'
   436  007F48  20                 	db	32
   437  007F49  74                 	db	116	;'t'
   438  007F4A  68                 	db	104	;'h'
   439  007F4B  65                 	db	101	;'e'
   440  007F4C  20                 	db	32
   441  007F4D  20                 	db	32
   442  007F4E  73                 	db	115	;'s'
   443  007F4F  65                 	db	101	;'e'
   444  007F50  71                 	db	113	;'q'
   445  007F51  75                 	db	117	;'u'
   446  007F52  65                 	db	101	;'e'
   447  007F53  6E                 	db	110	;'n'
   448  007F54  63                 	db	99	;'c'
   449  007F55  65                 	db	101	;'e'
   450  007F56  00                 	db	0
   451  007F57                     STR_7:
   452  007F57  45                 	db	69	;'E'
   453  007F58  6E                 	db	110	;'n'
   454  007F59  74                 	db	116	;'t'
   455  007F5A  65                 	db	101	;'e'
   456  007F5B  72                 	db	114	;'r'
   457  007F5C  20                 	db	32
   458  007F5D  74                 	db	116	;'t'
   459  007F5E  68                 	db	104	;'h'
   460  007F5F  65                 	db	101	;'e'
   461  007F60  20                 	db	32
   462  007F61  70                 	db	112	;'p'
   463  007F62  6C                 	db	108	;'l'
   464  007F63  61                 	db	97	;'a'
   465  007F64  63                 	db	99	;'c'
   466  007F65  65                 	db	101	;'e'
   467  007F66  20                 	db	32
   468  007F67  6F                 	db	111	;'o'
   469  007F68  72                 	db	114	;'r'
   470  007F69  69                 	db	105	;'i'
   471  007F6A  65                 	db	101	;'e'
   472  007F6B  6E                 	db	110	;'n'
   473  007F6C  74                 	db	116	;'t'
   474  007F6D  61                 	db	97	;'a'
   475  007F6E  74                 	db	116	;'t'
   476  007F6F  69                 	db	105	;'i'
   477  007F70  6F                 	db	111	;'o'
   478  007F71  6E                 	db	110	;'n'
   479  007F72  3A                 	db	58	;':'
   480  007F73  00                 	db	0
   481  007F74                     STR_5:
   482  007F74  45                 	db	69	;'E'
   483  007F75  6E                 	db	110	;'n'
   484  007F76  74                 	db	116	;'t'
   485  007F77  65                 	db	101	;'e'
   486  007F78  72                 	db	114	;'r'
   487  007F79  20                 	db	32
   488  007F7A  74                 	db	116	;'t'
   489  007F7B  68                 	db	104	;'h'
   490  007F7C  65                 	db	101	;'e'
   491  007F7D  20                 	db	32
   492  007F7E  70                 	db	112	;'p'
   493  007F7F  6C                 	db	108	;'l'
   494  007F80  61                 	db	97	;'a'
   495  007F81  63                 	db	99	;'c'
   496  007F82  65                 	db	101	;'e'
   497  007F83  20                 	db	32
   498  007F84  70                 	db	112	;'p'
   499  007F85  6F                 	db	111	;'o'
   500  007F86  73                 	db	115	;'s'
   501  007F87  69                 	db	105	;'i'
   502  007F88  74                 	db	116	;'t'
   503  007F89  69                 	db	105	;'i'
   504  007F8A  6F                 	db	111	;'o'
   505  007F8B  6E                 	db	110	;'n'
   506  007F8C  20                 	db	32
   507  007F8D  58                 	db	88	;'X'
   508  007F8E  3A                 	db	58	;':'
   509  007F8F  00                 	db	0
   510  007F90                     STR_6:
   511  007F90  45                 	db	69	;'E'
   512  007F91  6E                 	db	110	;'n'
   513  007F92  74                 	db	116	;'t'
   514  007F93  65                 	db	101	;'e'
   515  007F94  72                 	db	114	;'r'
   516  007F95  20                 	db	32
   517  007F96  74                 	db	116	;'t'
   518  007F97  68                 	db	104	;'h'
   519  007F98  65                 	db	101	;'e'
   520  007F99  20                 	db	32
   521  007F9A  70                 	db	112	;'p'
   522  007F9B  6C                 	db	108	;'l'
   523  007F9C  61                 	db	97	;'a'
   524  007F9D  63                 	db	99	;'c'
   525  007F9E  65                 	db	101	;'e'
   526  007F9F  20                 	db	32
   527  007FA0  70                 	db	112	;'p'
   528  007FA1  6F                 	db	111	;'o'
   529  007FA2  73                 	db	115	;'s'
   530  007FA3  69                 	db	105	;'i'
   531  007FA4  74                 	db	116	;'t'
   532  007FA5  69                 	db	105	;'i'
   533  007FA6  6F                 	db	111	;'o'
   534  007FA7  6E                 	db	110	;'n'
   535  007FA8  20                 	db	32
   536  007FA9  59                 	db	89	;'Y'
   537  007FAA  3A                 	db	58	;':'
   538  007FAB  00                 	db	0
   539  007FAC                     STR_4:
   540  007FAC  45                 	db	69	;'E'
   541  007FAD  6E                 	db	110	;'n'
   542  007FAE  74                 	db	116	;'t'
   543  007FAF  65                 	db	101	;'e'
   544  007FB0  72                 	db	114	;'r'
   545  007FB1  20                 	db	32
   546  007FB2  74                 	db	116	;'t'
   547  007FB3  68                 	db	104	;'h'
   548  007FB4  65                 	db	101	;'e'
   549  007FB5  20                 	db	32
   550  007FB6  70                 	db	112	;'p'
   551  007FB7  69                 	db	105	;'i'
   552  007FB8  63                 	db	99	;'c'
   553  007FB9  6B                 	db	107	;'k'
   554  007FBA  20                 	db	32
   555  007FBB  6F                 	db	111	;'o'
   556  007FBC  72                 	db	114	;'r'
   557  007FBD  69                 	db	105	;'i'
   558  007FBE  65                 	db	101	;'e'
   559  007FBF  6E                 	db	110	;'n'
   560  007FC0  74                 	db	116	;'t'
   561  007FC1  61                 	db	97	;'a'
   562  007FC2  74                 	db	116	;'t'
   563  007FC3  69                 	db	105	;'i'
   564  007FC4  6F                 	db	111	;'o'
   565  007FC5  6E                 	db	110	;'n'
   566  007FC6  3A                 	db	58	;':'
   567  007FC7  00                 	db	0
   568  007FC8                     STR_2:
   569  007FC8  45                 	db	69	;'E'
   570  007FC9  6E                 	db	110	;'n'
   571  007FCA  74                 	db	116	;'t'
   572  007FCB  65                 	db	101	;'e'
   573  007FCC  72                 	db	114	;'r'
   574  007FCD  20                 	db	32
   575  007FCE  74                 	db	116	;'t'
   576  007FCF  68                 	db	104	;'h'
   577  007FD0  65                 	db	101	;'e'
   578  007FD1  20                 	db	32
   579  007FD2  70                 	db	112	;'p'
   580  007FD3  69                 	db	105	;'i'
   581  007FD4  63                 	db	99	;'c'
   582  007FD5  6B                 	db	107	;'k'
   583  007FD6  20                 	db	32
   584  007FD7  70                 	db	112	;'p'
   585  007FD8  6F                 	db	111	;'o'
   586  007FD9  73                 	db	115	;'s'
   587  007FDA  69                 	db	105	;'i'
   588  007FDB  74                 	db	116	;'t'
   589  007FDC  69                 	db	105	;'i'
   590  007FDD  6F                 	db	111	;'o'
   591  007FDE  6E                 	db	110	;'n'
   592  007FDF  20                 	db	32
   593  007FE0  58                 	db	88	;'X'
   594  007FE1  3A                 	db	58	;':'
   595  007FE2  00                 	db	0
   596  007FE3                     STR_3:
   597  007FE3  45                 	db	69	;'E'
   598  007FE4  6E                 	db	110	;'n'
   599  007FE5  74                 	db	116	;'t'
   600  007FE6  65                 	db	101	;'e'
   601  007FE7  72                 	db	114	;'r'
   602  007FE8  20                 	db	32
   603  007FE9  74                 	db	116	;'t'
   604  007FEA  68                 	db	104	;'h'
   605  007FEB  65                 	db	101	;'e'
   606  007FEC  20                 	db	32
   607  007FED  70                 	db	112	;'p'
   608  007FEE  69                 	db	105	;'i'
   609  007FEF  63                 	db	99	;'c'
   610  007FF0  6B                 	db	107	;'k'
   611  007FF1  20                 	db	32
   612  007FF2  70                 	db	112	;'p'
   613  007FF3  6F                 	db	111	;'o'
   614  007FF4  73                 	db	115	;'s'
   615  007FF5  69                 	db	105	;'i'
   616  007FF6  74                 	db	116	;'t'
   617  007FF7  69                 	db	105	;'i'
   618  007FF8  6F                 	db	111	;'o'
   619  007FF9  6E                 	db	110	;'n'
   620  007FFA  20                 	db	32
   621  007FFB  59                 	db	89	;'Y'
   622  007FFC  3A                 	db	58	;':'
   623  007FFD  00                 	db	0
   624  007FFE  00                 	db	0	; dummy byte at the end
   625  0000                     
   626                           ; #config settings
   627                           
   628                           	psect	cinit
   629  002AAA                     __pcinit:
   630                           	callstack 0
   631  002AAA                     start_initialization:
   632                           	callstack 0
   633  002AAA                     __initialization:
   634                           	callstack 0
   635                           
   636                           ; Initialize objects allocated to BANK0 (16 bytes)
   637                           ; load TBLPTR registers with __pidataBANK0
   638  002AAA  0E8C               	movlw	low __pidataBANK0
   639  002AAC  6EF6               	movwf	tblptrl,c
   640  002AAE  0E2E               	movlw	high __pidataBANK0
   641  002AB0  6EF7               	movwf	tblptrh,c
   642  002AB2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   643  002AB4  6EF8               	movwf	tblptru,c
   644  002AB6  EE00  F0E3         	lfsr	0,__pdataBANK0
   645  002ABA  EE10 F010          	lfsr	1,16
   646  002ABE                     copy_data0:
   647  002ABE  0009               	tblrd		*+
   648  002AC0  CFF5 FFEE          	movff	tablat,postinc0
   649  002AC4  50E5               	movf	postdec1,w,c
   650  002AC6  50E1               	movf	fsr1l,w,c
   651  002AC8  E1FA               	bnz	copy_data0
   652                           
   653                           ; Initialize objects allocated to COMRAM (2 bytes)
   654                           ; load TBLPTR registers with __pidataCOMRAM
   655  002ACA  0EA8               	movlw	low __pidataCOMRAM
   656  002ACC  6EF6               	movwf	tblptrl,c
   657  002ACE  0E2E               	movlw	high __pidataCOMRAM
   658  002AD0  6EF7               	movwf	tblptrh,c
   659  002AD2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   660  002AD4  6EF8               	movwf	tblptru,c
   661  002AD6  0009               	tblrd		*+	;fetch initializer
   662  002AD8  CFF5 F075          	movff	tablat,__pdataCOMRAM
   663  002ADC  0009               	tblrd		*+	;fetch initializer
   664  002ADE  CFF5 F076          	movff	tablat,__pdataCOMRAM+1
   665                           
   666                           ; Clear objects allocated to BANK1 (30 bytes)
   667  002AE2  EE01  F000         	lfsr	0,__pbssBANK1
   668  002AE6  0E1E               	movlw	30
   669  002AE8                     clear_0:
   670  002AE8  6AEE               	clrf	postinc0,c
   671  002AEA  06E8               	decf	wreg,f,c
   672  002AEC  E1FD               	bnz	clear_0
   673                           
   674                           ; Clear objects allocated to BANK0 (22 bytes)
   675  002AEE  EE00  F0CD         	lfsr	0,__pbssBANK0
   676  002AF2  0E16               	movlw	22
   677  002AF4                     clear_1:
   678  002AF4  6AEE               	clrf	postinc0,c
   679  002AF6  06E8               	decf	wreg,f,c
   680  002AF8  E1FD               	bnz	clear_1
   681                           
   682                           ; Clear objects allocated to COMRAM (26 bytes)
   683  002AFA  EE00  F05B         	lfsr	0,__pbssCOMRAM
   684  002AFE  0E1A               	movlw	26
   685  002B00                     clear_2:
   686  002B00  6AEE               	clrf	postinc0,c
   687  002B02  06E8               	decf	wreg,f,c
   688  002B04  E1FD               	bnz	clear_2
   689  002B06                     end_of_initialization:
   690                           	callstack 0
   691  002B06                     __end_of__initialization:
   692                           	callstack 0
   693  002B06  9077               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   694  002B08  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   695  002B0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   696  002B0C  6EF8               	movwf	tblptru,c
   697  002B0E  0100               	movlb	0
   698  002B10  EF43  F014         	goto	_main	;jump to C main() function
   699                           
   700                           	psect	bssCOMRAM
   701  00005B                     __pbssCOMRAM:
   702                           	callstack 0
   703  00005B                     _X_Pick_D:
   704                           	callstack 0
   705  00005B                     	ds	2
   706  00005D                     _Angle_diff:
   707                           	callstack 0
   708  00005D                     	ds	2
   709  00005F                     _Y_diff:
   710                           	callstack 0
   711  00005F                     	ds	2
   712  000061                     _X_diff:
   713                           	callstack 0
   714  000061                     	ds	2
   715  000063                     _Place_Angle:
   716                           	callstack 0
   717  000063                     	ds	2
   718  000065                     _Pick_Angle:
   719                           	callstack 0
   720  000065                     	ds	2
   721  000067                     _Y_Place:
   722                           	callstack 0
   723  000067                     	ds	2
   724  000069                     _Y_Pick:
   725                           	callstack 0
   726  000069                     	ds	2
   727  00006B                     _X_Place:
   728                           	callstack 0
   729  00006B                     	ds	2
   730  00006D                     _X_Pick:
   731                           	callstack 0
   732  00006D                     	ds	2
   733  00006F                     _my_flag_rx:
   734                           	callstack 0
   735  00006F                     	ds	1
   736  000070                     _RX_Char:
   737                           	callstack 0
   738  000070                     	ds	1
   739  000071                     _Rot_dir:
   740                           	callstack 0
   741  000071                     	ds	1
   742  000072                     _Y_dir:
   743                           	callstack 0
   744  000072                     	ds	1
   745  000073                     _X_dir:
   746                           	callstack 0
   747  000073                     	ds	1
   748  000074                     _New_char_RX:
   749                           	callstack 0
   750  000074                     	ds	1
   751                           
   752                           	psect	dataCOMRAM
   753  000075                     __pdataCOMRAM:
   754                           	callstack 0
   755  000075                     _input_str:
   756                           	callstack 0
   757  000075                     	ds	2
   758                           
   759                           	psect	bssBANK0
   760  0000CD                     __pbssBANK0:
   761                           	callstack 0
   762  0000CD                     roundf@F528:
   763                           	callstack 0
   764  0000CD                     	ds	4
   765  0000D1                     _angle_diff:
   766                           	callstack 0
   767  0000D1                     	ds	2
   768  0000D3                     _Place_Angle_D:
   769                           	callstack 0
   770  0000D3                     	ds	2
   771  0000D5                     _Y_Place_D:
   772                           	callstack 0
   773  0000D5                     	ds	2
   774  0000D7                     _X_Place_D:
   775                           	callstack 0
   776  0000D7                     	ds	2
   777  0000D9                     _Pick_Angle_D:
   778                           	callstack 0
   779  0000D9                     	ds	2
   780  0000DB                     _Y_Pick_D:
   781                           	callstack 0
   782  0000DB                     	ds	2
   783  0000DD                     _rotation:
   784                           	callstack 0
   785  0000DD                     	ds	2
   786  0000DF                     _displacement_Y:
   787                           	callstack 0
   788  0000DF                     	ds	2
   789  0000E1                     _displacement_X:
   790                           	callstack 0
   791  0000E1                     	ds	2
   792                           
   793                           	psect	dataBANK0
   794  0000E3                     __pdataBANK0:
   795                           	callstack 0
   796  0000E3                     	ds	4
   797  0000E7                     	ds	4
   798  0000EB                     add_component@F3133:
   799                           	callstack 0
   800  0000EB                     	ds	2
   801  0000ED                     _lenth_of_array:
   802                           	callstack 0
   803  0000ED                     	ds	2
   804  0000EF                     _sequence:
   805                           	callstack 0
   806  0000EF                     	ds	4
   807                           
   808                           	psect	bssBANK1
   809  000100                     __pbssBANK1:
   810                           	callstack 0
   811  000100                     _testarray:
   812                           	callstack 0
   813  000100                     	ds	30
   814                           
   815                           	psect	cstackBANK0
   816  000080                     __pcstackBANK0:
   817                           	callstack 0
   818  000080                     ??___fltol:
   819  000080                     remove_component@rm_comp:
   820                           	callstack 0
   821  000080                     change_sequence@Help_1:
   822                           	callstack 0
   823                           
   824                           ; 66 bytes @ 0x0
   825  000080                     	ds	1
   826  000081                     remove_component@ptr:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x1
   830  000081                     	ds	2
   831  000083                     remove_component@i:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x3
   835  000083                     	ds	1
   836  000084                     ___fltol@sign1:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x4
   840  000084                     	ds	1
   841  000085                     ___fltol@exp1:
   842                           	callstack 0
   843  000085                     remove_component@indxToDel:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x5
   847  000085                     	ds	61
   848  0000C2                     change_sequence@j:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x42
   852  0000C2                     	ds	2
   853  0000C4                     change_sequence@i_546:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x44
   857  0000C4                     	ds	2
   858  0000C6                     change_sequence@i:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x46
   862  0000C6                     	ds	2
   863  0000C8                     change_sequence@i_545:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x48
   867  0000C8                     	ds	2
   868  0000CA                     ??_start_up_menu:
   869                           
   870                           ; 1 bytes @ 0x4A
   871  0000CA                     	ds	2
   872  0000CC                     main@RX_Char:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x4C
   876  0000CC                     	ds	1
   877                           
   878                           	psect	cstackCOMRAM
   879  000001                     __pcstackCOMRAM:
   880                           	callstack 0
   881  000001                     i2serial_tx_char@val:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x0
   885  000001                     	ds	1
   886  000002                     ??_Rx_char_USART:
   887                           
   888                           ; 1 bytes @ 0x1
   889  000002                     	ds	5
   890  000007                     Rx_char_USART@i:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x6
   894  000007                     	ds	2
   895  000009                     ?_strlen:
   896                           	callstack 0
   897  000009                     ?_direct:
   898                           	callstack 0
   899  000009                     ?_isspace:
   900                           	callstack 0
   901  000009                     ?_isdigit:
   902                           	callstack 0
   903  000009                     ?___wmul:
   904                           	callstack 0
   905  000009                     ?___fladd:
   906                           	callstack 0
   907  000009                     ?___flmul:
   908                           	callstack 0
   909  000009                     ?___flneg:
   910                           	callstack 0
   911  000009                     ?___xxtofl:
   912                           	callstack 0
   913  000009                     serial_tx_char@val:
   914                           	callstack 0
   915  000009                     ms_delay@val:
   916                           	callstack 0
   917  000009                     direct@prev:
   918                           	callstack 0
   919  000009                     ___wmul@multiplier:
   920                           	callstack 0
   921  000009                     isdigit@c:
   922                           	callstack 0
   923  000009                     isspace@c:
   924                           	callstack 0
   925  000009                     strlen@s:
   926                           	callstack 0
   927  000009                     ___flneg@f1:
   928                           	callstack 0
   929  000009                     ___fladd@b:
   930                           	callstack 0
   931  000009                     ___flmul@b:
   932                           	callstack 0
   933  000009                     ___xxtofl@val:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x8
   937  000009                     	ds	1
   938  00000A                     print_string@strng:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x9
   942  00000A                     	ds	1
   943  00000B                     ??_isspace:
   944  00000B                     ??_isdigit:
   945  00000B                     ms_delay@i:
   946                           	callstack 0
   947  00000B                     direct@next:
   948                           	callstack 0
   949  00000B                     ___wmul@multiplicand:
   950                           	callstack 0
   951  00000B                     strlen@a:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0xA
   955  00000B                     	ds	1
   956  00000C                     ??_print_string:
   957                           
   958                           ; 1 bytes @ 0xB
   959  00000C                     	ds	1
   960  00000D                     ??_direct:
   961  00000D                     ??___xxtofl:
   962  00000D                     ?___memrchr:
   963                           	callstack 0
   964  00000D                     ms_delay@j:
   965                           	callstack 0
   966  00000D                     ___wmul@product:
   967                           	callstack 0
   968  00000D                     memmove@d1:
   969                           	callstack 0
   970  00000D                     strncat@d:
   971                           	callstack 0
   972  00000D                     ___memrchr@m:
   973                           	callstack 0
   974  00000D                     ___fladd@a:
   975                           	callstack 0
   976  00000D                     ___flmul@a:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0xC
   980  00000D                     	ds	1
   981  00000E                     print_string@i:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0xD
   985  00000E                     	ds	1
   986  00000F                     X_axis@direction:
   987                           	callstack 0
   988  00000F                     Y_axis@direction:
   989                           	callstack 0
   990  00000F                     Z_axis@direction:
   991                           	callstack 0
   992  00000F                     Twister@direction:
   993                           	callstack 0
   994  00000F                     _isspace$1081:
   995                           	callstack 0
   996  00000F                     memmove@s1:
   997                           	callstack 0
   998  00000F                     strncat@s:
   999                           	callstack 0
  1000  00000F                     ___memrchr@c:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0xE
  1004  00000F                     	ds	1
  1005  000010                     ?_atoi:
  1006                           	callstack 0
  1007  000010                     Z_axis_and_Tweezer@i:
  1008                           	callstack 0
  1009  000010                     atoi@s:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0xF
  1013  000010                     	ds	1
  1014  000011                     ??___fladd:
  1015  000011                     ??___flmul:
  1016  000011                     ___xxtofl@sign:
  1017                           	callstack 0
  1018  000011                     memmove@n:
  1019                           	callstack 0
  1020  000011                     strncat@n:
  1021                           	callstack 0
  1022  000011                     ___memrchr@n:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x10
  1026  000011                     	ds	1
  1027  000012                     ??_atoi:
  1028  000012                     ___xxtofl@exp:
  1029                           	callstack 0
  1030  000012                     Z_axis_and_Tweezer@i_605:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x11
  1034  000012                     	ds	1
  1035  000013                     ??_memmove:
  1036  000013                     ??___memrchr:
  1037  000013                     ___xxtofl@arg:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x12
  1041  000013                     	ds	2
  1042  000015                     ___fladd@signs:
  1043                           	callstack 0
  1044  000015                     ___flmul@sign:
  1045                           	callstack 0
  1046  000015                     memmove@d:
  1047                           	callstack 0
  1048  000015                     ___memrchr@s:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x14
  1052  000015                     	ds	1
  1053  000016                     ___fladd@aexp:
  1054                           	callstack 0
  1055  000016                     ___flmul@aexp:
  1056                           	callstack 0
  1057  000016                     atoi@neg:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x15
  1061  000016                     	ds	1
  1062  000017                     ?_strrchr:
  1063                           	callstack 0
  1064  000017                     ?___fldiv:
  1065                           	callstack 0
  1066  000017                     ___fladd@bexp:
  1067                           	callstack 0
  1068  000017                     memmove@s:
  1069                           	callstack 0
  1070  000017                     strrchr@s:
  1071                           	callstack 0
  1072  000017                     ___fldiv@b:
  1073                           	callstack 0
  1074  000017                     ___flmul@grs:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x16
  1078  000017                     	ds	1
  1079  000018                     ___fladd@grs:
  1080                           	callstack 0
  1081  000018                     _atoi$1063:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x17
  1085  000018                     	ds	1
  1086  000019                     ?___flsub:
  1087                           	callstack 0
  1088  000019                     strrchr@c:
  1089                           	callstack 0
  1090  000019                     ___flsub@b:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x18
  1094  000019                     	ds	1
  1095  00001A                     _atoi$1065:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x19
  1099  00001A                     	ds	1
  1100  00001B                     ___flmul@bexp:
  1101                           	callstack 0
  1102  00001B                     ___fldiv@a:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x1A
  1106  00001B                     	ds	1
  1107  00001C                     _atoi$1064:
  1108                           	callstack 0
  1109  00001C                     ___flmul@prod:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x1B
  1113  00001C                     	ds	1
  1114  00001D                     atoi@n:
  1115                           	callstack 0
  1116  00001D                     ___flsub@a:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x1C
  1120  00001D                     	ds	2
  1121  00001F                     ??___fldiv:
  1122                           
  1123                           ; 1 bytes @ 0x1E
  1124  00001F                     	ds	1
  1125  000020                     ___flmul@temp:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x1F
  1129  000020                     	ds	1
  1130  000021                     
  1131                           ; 1 bytes @ 0x20
  1132  000021                     	ds	2
  1133  000023                     ___fldiv@rem:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x22
  1137  000023                     	ds	4
  1138  000027                     ___fldiv@sign:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x26
  1142  000027                     	ds	1
  1143  000028                     ___fldiv@new_exp:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x27
  1147  000028                     	ds	2
  1148  00002A                     ___fldiv@grs:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x29
  1152  00002A                     	ds	4
  1153  00002E                     ___fldiv@bexp:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x2D
  1157  00002E                     	ds	1
  1158  00002F                     ___fldiv@aexp:
  1159                           	callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x2E
  1162  00002F                     	ds	1
  1163  000030                     ___flge@ff1:
  1164                           	callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x2F
  1167  000030                     	ds	4
  1168  000034                     ___flge@ff2:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x33
  1172  000034                     	ds	4
  1173  000038                     ??___flge:
  1174                           
  1175                           ; 1 bytes @ 0x37
  1176  000038                     	ds	4
  1177  00003C                     ??_pick_and_place:
  1178  00003C                     ?_roundf:
  1179                           	callstack 0
  1180  00003C                     roundf@x:
  1181                           	callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x3B
  1184  00003C                     	ds	2
  1185  00003E                     pick_and_place@i:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x3D
  1189  00003E                     	ds	2
  1190  000040                     ??_roundf:
  1191  000040                     _pick_and_place$584:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x3F
  1195  000040                     	ds	2
  1196  000042                     pick_and_place@i_585:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x41
  1200  000042                     	ds	2
  1201  000044                     _pick_and_place$587:
  1202                           	callstack 0
  1203  000044                     _roundf$1330:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x43
  1207  000044                     	ds	2
  1208  000046                     pick_and_place@i_588:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x45
  1212  000046                     	ds	2
  1213  000048                     pick_and_place@i_590:
  1214                           	callstack 0
  1215  000048                     roundf@e:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x47
  1219  000048                     	ds	2
  1220  00004A                     _pick_and_place$591:
  1221                           	callstack 0
  1222  00004A                     _roundf$1329:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x49
  1226  00004A                     	ds	2
  1227  00004C                     pick_and_place@i_592:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x4B
  1231  00004C                     	ds	2
  1232  00004E                     _pick_and_place$593:
  1233                           	callstack 0
  1234  00004E                     roundf@u:
  1235                           	callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x4D
  1238  00004E                     	ds	2
  1239  000050                     pick_and_place@i_594:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x4F
  1243  000050                     	ds	2
  1244  000052                     pick_and_place@Componnt:
  1245                           	callstack 0
  1246  000052                     roundf@y:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x51
  1250  000052                     	ds	1
  1251  000053                     ??_change_sequence:
  1252  000053                     ??_add_component:
  1253  000053                     ??_remove_component:
  1254                           
  1255                           ; 1 bytes @ 0x52
  1256  000053                     	ds	3
  1257  000056                     ?___fltol:
  1258                           	callstack 0
  1259  000056                     add_component@add_to_sequence:
  1260                           	callstack 0
  1261  000056                     ___fltol@f1:
  1262                           	callstack 0
  1263                           
  1264                           ; 4 bytes @ 0x55
  1265  000056                     	ds	2
  1266  000058                     add_component@i:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x57
  1270  000058                     	ds	2
  1271  00005A                     start_up_menu@ip:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x59
  1275  00005A                     	ds	1
  1276  00005B                     
  1277                           ; 1 bytes @ 0x5A
  1278 ;;
  1279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1280 ;;
  1281 ;; *************** function _main *****************
  1282 ;; Defined at:
  1283 ;;		line 215 in file "main.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  RX_Char         1   76[BANK0 ] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1297 ;;      Params:         0       0       0       0       0       0       0
  1298 ;;      Locals:         0       1       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0
  1300 ;;      Totals:         0       1       0       0       0       0       0
  1301 ;;Total ram usage:        1 bytes
  1302 ;; Hardware stack levels required when called: 8
  1303 ;; This function calls:
  1304 ;;		_init_PORTS
  1305 ;;		_init_USART
  1306 ;;		_init_interrupts
  1307 ;;		_serial_tx_char
  1308 ;;		_start_up_menu
  1309 ;; This function is called by:
  1310 ;;		Startup code after reset
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text0
  1315  002886                     __ptext0:
  1316                           	callstack 0
  1317  002886                     _main:
  1318                           	callstack 23
  1319  002886  FFFF               	dw	65535	; assembler added errata NOP
  1320                           
  1321                           ;main.c: 219:     init_PORTS();
  1322  002888  EC15  F017         	call	_init_PORTS	;wreg free
  1323  00288C                     
  1324                           ;main.c: 220:     init_USART();
  1325  00288C  ECC3  F016         	call	_init_USART	;wreg free
  1326  002890                     
  1327                           ;main.c: 221:     init_interrupts();
  1328  002890  EC4E  F017         	call	_init_interrupts	;wreg free
  1329  002894                     
  1330                           ;main.c: 223:     (INTCONbits.GIE = 1);
  1331  002894  8EF2               	bsf	242,7,c	;volatile
  1332  002896                     
  1333                           ;main.c: 224:     start_up_menu();
  1334  002896  EC83  F013         	call	_start_up_menu	;wreg free
  1335  00289A                     l5151:
  1336  00289A  FFFF               	dw	65535	; assembler added errata NOP
  1337                           
  1338                           ;main.c: 228:         if (New_char_RX)
  1339  00289C  5074               	movf	_New_char_RX^0,w,c
  1340  00289E  B4D8               	btfsc	status,2,c
  1341  0028A0  EF54  F014         	goto	u5701
  1342  0028A4  EF57  F014         	goto	u5700
  1343  0028A8                     u5701:
  1344  0028A8  FFFF               	dw	65535	; assembler added errata NOP
  1345  0028AA  EF4D  F014         	goto	l5151
  1346  0028AE                     u5700:
  1347  0028AE  FFFF               	dw	65535	; assembler added errata NOP
  1348  0028B0                     
  1349                           ;main.c: 229:         {;main.c: 230:             RX_Char = RCREG;
  1350  0028B0  CFAE F0CC          	movff	4014,main@RX_Char	;volatile
  1351  0028B4                     
  1352                           ;main.c: 231:             serial_tx_char(RX_Char);
  1353  0028B4  0100               	movlb	0	; () banked
  1354  0028B6  51CC               	movf	main@RX_Char& (0+255),w,b
  1355  0028B8  EC26  F017         	call	_serial_tx_char
  1356  0028BC                     
  1357                           ;main.c: 232:             serial_tx_char('\r');
  1358  0028BC  0E0D               	movlw	13
  1359  0028BE  EC26  F017         	call	_serial_tx_char
  1360  0028C2                     
  1361                           ;main.c: 233:             serial_tx_char('\n');
  1362  0028C2  0E0A               	movlw	10
  1363  0028C4  EC26  F017         	call	_serial_tx_char
  1364  0028C8                     
  1365                           ;main.c: 236:             serial_tx_char('H');
  1366  0028C8  0E48               	movlw	72
  1367  0028CA  EC26  F017         	call	_serial_tx_char
  1368  0028CE                     
  1369                           ;main.c: 237:             serial_tx_char('e');
  1370  0028CE  0E65               	movlw	101
  1371  0028D0  EC26  F017         	call	_serial_tx_char
  1372  0028D4                     
  1373                           ;main.c: 238:             serial_tx_char('l');
  1374  0028D4  0E6C               	movlw	108
  1375  0028D6  EC26  F017         	call	_serial_tx_char
  1376  0028DA                     
  1377                           ;main.c: 239:             serial_tx_char('l');
  1378  0028DA  0E6C               	movlw	108
  1379  0028DC  EC26  F017         	call	_serial_tx_char
  1380  0028E0                     
  1381                           ;main.c: 240:             serial_tx_char('o');
  1382  0028E0  0E6F               	movlw	111
  1383  0028E2  EC26  F017         	call	_serial_tx_char
  1384  0028E6                     
  1385                           ;main.c: 241:             serial_tx_char(' ');
  1386  0028E6  0E20               	movlw	32
  1387  0028E8  EC26  F017         	call	_serial_tx_char
  1388  0028EC                     
  1389                           ;main.c: 242:             serial_tx_char('W');
  1390  0028EC  0E57               	movlw	87
  1391  0028EE  EC26  F017         	call	_serial_tx_char
  1392  0028F2                     
  1393                           ;main.c: 243:             serial_tx_char('o');
  1394  0028F2  0E6F               	movlw	111
  1395  0028F4  EC26  F017         	call	_serial_tx_char
  1396  0028F8                     
  1397                           ;main.c: 244:             serial_tx_char('r');
  1398  0028F8  0E72               	movlw	114
  1399  0028FA  EC26  F017         	call	_serial_tx_char
  1400  0028FE                     
  1401                           ;main.c: 245:             serial_tx_char('l');
  1402  0028FE  0E6C               	movlw	108
  1403  002900  EC26  F017         	call	_serial_tx_char
  1404  002904                     
  1405                           ;main.c: 246:             serial_tx_char('d');
  1406  002904  0E64               	movlw	100
  1407  002906  EC26  F017         	call	_serial_tx_char
  1408  00290A                     
  1409                           ;main.c: 247:             serial_tx_char('!');
  1410  00290A  0E21               	movlw	33
  1411  00290C  EC26  F017         	call	_serial_tx_char
  1412  002910                     
  1413                           ;main.c: 248:             serial_tx_char('\r');
  1414  002910  0E0D               	movlw	13
  1415  002912  EC26  F017         	call	_serial_tx_char
  1416  002916                     
  1417                           ;main.c: 249:             serial_tx_char('\n');
  1418  002916  0E0A               	movlw	10
  1419  002918  EC26  F017         	call	_serial_tx_char
  1420  00291C                     
  1421                           ;main.c: 256:             serial_tx_char('\r');
  1422  00291C  0E0D               	movlw	13
  1423  00291E  EC26  F017         	call	_serial_tx_char
  1424  002922                     
  1425                           ;main.c: 257:             serial_tx_char('\n');
  1426  002922  0E0A               	movlw	10
  1427  002924  EC26  F017         	call	_serial_tx_char
  1428  002928                     
  1429                           ;main.c: 260:             New_char_RX = 0;
  1430  002928  0E00               	movlw	0
  1431  00292A  6E74               	movwf	_New_char_RX^0,c
  1432  00292C  EF4D  F014         	goto	l5151
  1433  002930  EF4A  F000         	goto	start
  1434  002934                     __end_of_main:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function _start_up_menu *****************
  1438 ;; Defined at:
  1439 ;;		line 270 in file "main.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  ip              1   89[COMRAM] const unsigned char 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1453 ;;      Params:         0       0       0       0       0       0       0
  1454 ;;      Locals:         1       0       0       0       0       0       0
  1455 ;;      Temps:          0       2       0       0       0       0       0
  1456 ;;      Totals:         1       2       0       0       0       0       0
  1457 ;;Total ram usage:        3 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 7
  1460 ;; This function calls:
  1461 ;;		_add_component
  1462 ;;		_change_sequence
  1463 ;;		_pick_and_place
  1464 ;;		_print_string
  1465 ;;		_remove_component
  1466 ;;		_serial_tx_char
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text1
  1473  002706                     __ptext1:
  1474                           	callstack 0
  1475  002706                     _start_up_menu:
  1476                           	callstack 0
  1477  002706  FFFF               	dw	65535	; assembler added errata NOP
  1478  002708                     
  1479                           ;main.c: 274:     print_string("\n1. Default Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component");
  1480  002708  0E85               	movlw	low STR_1
  1481  00270A  6E0A               	movwf	print_string@strng^0,c
  1482  00270C  0E7E               	movlw	high STR_1
  1483  00270E  6E0B               	movwf	(print_string@strng+1)^0,c
  1484  002710  EC8A  F015         	call	_print_string	;wreg free
  1485  002714                     l5111:
  1486  002714  FFFF               	dw	65535	; assembler added errata NOP
  1487                           
  1488                           ;main.c: 279:         if(New_char_RX){
  1489  002716  5074               	movf	_New_char_RX^0,w,c
  1490  002718  B4D8               	btfsc	status,2,c
  1491  00271A  EF91  F013         	goto	u5681
  1492  00271E  EF94  F013         	goto	u5680
  1493  002722                     u5681:
  1494  002722  FFFF               	dw	65535	; assembler added errata NOP
  1495  002724  EF8A  F013         	goto	l5111
  1496  002728                     u5680:
  1497  002728  FFFF               	dw	65535	; assembler added errata NOP
  1498  00272A                     
  1499                           ;main.c: 281:             const char ip = input_str[0];
  1500  00272A  C075  F05A         	movff	_input_str,start_up_menu@ip	;volatile
  1501  00272E                     
  1502                           ;main.c: 282:             serial_tx_char(RX_Char);
  1503  00272E  0E00               	movlw	0
  1504  002730  EC26  F017         	call	_serial_tx_char
  1505  002734                     
  1506                           ;main.c: 283:             New_char_RX=0;
  1507  002734  0E00               	movlw	0
  1508  002736  6E74               	movwf	_New_char_RX^0,c
  1509                           
  1510                           ;main.c: 284:             switch(ip){
  1511  002738  EFC4  F013         	goto	l5131
  1512  00273C                     l5119:
  1513  00273C  FFFF               	dw	65535	; assembler added errata NOP
  1514                           
  1515                           ;main.c: 287:                     pick_and_place('C');
  1516  00273E  0E43               	movlw	67
  1517  002740  EC20  F003         	call	_pick_and_place
  1518                           
  1519                           ;main.c: 288:                     pick_and_place('A');
  1520  002744  0E41               	movlw	65
  1521  002746  EC20  F003         	call	_pick_and_place
  1522                           
  1523                           ;main.c: 289:                     pick_and_place('B');
  1524  00274A  0E42               	movlw	66
  1525  00274C  EC20  F003         	call	_pick_and_place
  1526  002750                     l5121:
  1527  002750  FFFF               	dw	65535	; assembler added errata NOP
  1528                           
  1529                           ;main.c: 286:                 while(!New_char_RX){
  1530  002752  5074               	movf	_New_char_RX^0,w,c
  1531  002754  B4D8               	btfsc	status,2,c
  1532  002756  EFAF  F013         	goto	u5691
  1533  00275A  EFB2  F013         	goto	u5690
  1534  00275E                     u5691:
  1535  00275E  FFFF               	dw	65535	; assembler added errata NOP
  1536  002760  EF9E  F013         	goto	l5119
  1537  002764                     u5690:
  1538  002764  FFFF               	dw	65535	; assembler added errata NOP
  1539  002766  EFE4  F013         	goto	l5133
  1540  00276A                     l5123:
  1541  00276A  FFFF               	dw	65535	; assembler added errata NOP
  1542                           
  1543                           ; BSR set to: 0
  1544  00276C  EC20  F00F         	call	_change_sequence	;wreg free
  1545                           
  1546                           ;main.c: 293:                     break;
  1547  002770  EFE4  F013         	goto	l5133
  1548  002774                     l5125:
  1549  002774  FFFF               	dw	65535	; assembler added errata NOP
  1550                           
  1551                           ; BSR set to: 0
  1552  002776  EC4A  F00D         	call	_add_component	;wreg free
  1553                           
  1554                           ;main.c: 295:                     break;
  1555  00277A  EFE4  F013         	goto	l5133
  1556  00277E                     l5127:
  1557  00277E  FFFF               	dw	65535	; assembler added errata NOP
  1558                           
  1559                           ; BSR set to: 0
  1560  002780  ECEA  F00F         	call	_remove_component	;wreg free
  1561                           
  1562                           ;main.c: 297:                     break;
  1563  002784  EFE4  F013         	goto	l5133
  1564  002788                     l5131:
  1565  002788  FFFF               	dw	65535	; assembler added errata NOP
  1566  00278A  505A               	movf	start_up_menu@ip^0,w,c
  1567  00278C  0100               	movlb	0	; () banked
  1568  00278E  6FCA               	movwf	??_start_up_menu& (0+255),b
  1569  002790  6BCB               	clrf	(??_start_up_menu+1)& (0+255),b
  1570                           
  1571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1572                           ; Switch size 1, requested type "simple"
  1573                           ; Number of cases is 1, Range of values is 0 to 0
  1574                           ; switch strategies available:
  1575                           ; Name         Instructions Cycles
  1576                           ; simple_byte            4     3 (average)
  1577                           ;	Chosen strategy is simple_byte
  1578  002792  51CB               	movf	(??_start_up_menu+1)& (0+255),w,b
  1579  002794  0A00               	xorlw	0	; case 0
  1580  002796  B4D8               	btfsc	status,2,c
  1581  002798  EFD0  F013         	goto	l5259
  1582  00279C  EFE4  F013         	goto	l5133
  1583  0027A0                     l5259:
  1584  0027A0  FFFF               	dw	65535	; assembler added errata NOP
  1585                           
  1586                           ; BSR set to: 0
  1587                           ; Switch size 1, requested type "simple"
  1588                           ; Number of cases is 4, Range of values is 49 to 52
  1589                           ; switch strategies available:
  1590                           ; Name         Instructions Cycles
  1591                           ; simple_byte           13     7 (average)
  1592                           ;	Chosen strategy is simple_byte
  1593  0027A2  51CA               	movf	??_start_up_menu& (0+255),w,b
  1594  0027A4  0A31               	xorlw	49	; case 49
  1595  0027A6  B4D8               	btfsc	status,2,c
  1596  0027A8  EFA8  F013         	goto	l5121
  1597  0027AC  0A03               	xorlw	3	; case 50
  1598  0027AE  B4D8               	btfsc	status,2,c
  1599  0027B0  EFB5  F013         	goto	l5123
  1600  0027B4  0A01               	xorlw	1	; case 51
  1601  0027B6  B4D8               	btfsc	status,2,c
  1602  0027B8  EFBA  F013         	goto	l5125
  1603  0027BC  0A07               	xorlw	7	; case 52
  1604  0027BE  B4D8               	btfsc	status,2,c
  1605  0027C0  EFBF  F013         	goto	l5127
  1606  0027C4  EFE4  F013         	goto	l5133
  1607  0027C8                     l5133:
  1608  0027C8  FFFF               	dw	65535	; assembler added errata NOP
  1609                           
  1610                           ;main.c: 300:             New_char_RX=0;
  1611  0027CA  0E00               	movlw	0
  1612  0027CC  6E74               	movwf	_New_char_RX^0,c
  1613  0027CE  0012               	return		;funcret
  1614  0027D0  FFFF               	dw	65535	; errata NOP
  1615  0027D2                     __end_of_start_up_menu:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _remove_component *****************
  1619 ;; Defined at:
  1620 ;;		line 360 in file "main.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  indxToDel       2    5[BANK0 ] int 
  1625 ;;  ptr             2    1[BANK0 ] PTR unsigned char 
  1626 ;;		 -> NULL(0), sequence(4), 
  1627 ;;  rm_comp         1    0[BANK0 ] unsigned char 
  1628 ;;  i               2    3[BANK0 ] int 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1638 ;;      Params:         0       0       0       0       0       0       0
  1639 ;;      Locals:         0       7       0       0       0       0       0
  1640 ;;      Temps:          4       0       0       0       0       0       0
  1641 ;;      Totals:         4       7       0       0       0       0       0
  1642 ;;Total ram usage:       11 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 6
  1645 ;; This function calls:
  1646 ;;		_memmove
  1647 ;;		_pick_and_place
  1648 ;;		_print_string
  1649 ;;		_strlen
  1650 ;;		_strrchr
  1651 ;; This function is called by:
  1652 ;;		_start_up_menu
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text2
  1657  001FD4                     __ptext2:
  1658                           	callstack 0
  1659  001FD4                     _remove_component:
  1660                           	callstack 0
  1661  001FD4  FFFF               	dw	65535	; assembler added errata NOP
  1662  001FD6                     
  1663                           ;main.c: 361:     print_string("Which component would you like to remove from the  seque
      +                          nce");
  1664  001FD6  0E1B               	movlw	low STR_8
  1665  001FD8  6E0A               	movwf	print_string@strng^0,c
  1666  001FDA  0E7F               	movlw	high STR_8
  1667  001FDC  6E0B               	movwf	(print_string@strng+1)^0,c
  1668  001FDE  EC8A  F015         	call	_print_string	;wreg free
  1669                           
  1670                           ;main.c: 362:     while(!New_char_RX){
  1671  001FE2  EF53  F010         	goto	l5025
  1672  001FE6                     l5009:
  1673  001FE6  FFFF               	dw	65535	; assembler added errata NOP
  1674                           
  1675                           ;main.c: 363:     if(New_char_RX){
  1676  001FE8  5074               	movf	_New_char_RX^0,w,c
  1677  001FEA  B4D8               	btfsc	status,2,c
  1678  001FEC  EFFA  F00F         	goto	u5561
  1679  001FF0  EFFD  F00F         	goto	u5560
  1680  001FF4                     u5561:
  1681  001FF4  FFFF               	dw	65535	; assembler added errata NOP
  1682  001FF6  EF53  F010         	goto	l5025
  1683  001FFA                     u5560:
  1684  001FFA  FFFF               	dw	65535	; assembler added errata NOP
  1685  001FFC                     
  1686                           ;main.c: 364:         char rm_comp = RCREG;
  1687  001FFC  CFAE F080          	movff	4014,remove_component@rm_comp	;volatile
  1688  002000                     
  1689                           ;main.c: 365:         char *ptr;;main.c: 366:         int indxToDel;;main.c: 367:       
      +                            ptr=strrchr(sequence,rm_comp);
  1690  002000  0EEF               	movlw	low _sequence
  1691  002002  6E17               	movwf	strrchr@s^0,c
  1692  002004  0E00               	movlw	high _sequence
  1693  002006  6E18               	movwf	(strrchr@s+1)^0,c
  1694  002008  C080  F019         	movff	remove_component@rm_comp,strrchr@c
  1695  00200C  6A1A               	clrf	(strrchr@c+1)^0,c
  1696  00200E  ECE3  F016         	call	_strrchr	;wreg free
  1697  002012  C017  F081         	movff	?_strrchr,remove_component@ptr
  1698  002016  C018  F082         	movff	?_strrchr+1,remove_component@ptr+1
  1699  00201A                     
  1700                           ;main.c: 368:         if(ptr != ((void*)0)){
  1701  00201A  0100               	movlb	0	; () banked
  1702  00201C  5181               	movf	remove_component@ptr& (0+255),w,b
  1703  00201E  1182               	iorwf	(remove_component@ptr+1)& (0+255),w,b
  1704  002020  B4D8               	btfsc	status,2,c
  1705  002022  EF15  F010         	goto	u5571
  1706  002026  EF18  F010         	goto	u5570
  1707  00202A                     u5571:
  1708  00202A  FFFF               	dw	65535	; assembler added errata NOP
  1709  00202C  EF2D  F010         	goto	l5019
  1710  002030                     u5570:
  1711  002030  FFFF               	dw	65535	; assembler added errata NOP
  1712  002032                     
  1713                           ; BSR set to: 0
  1714                           ;main.c: 369:             indxToDel = ptr - sequence + 1;
  1715  002032  0EEF               	movlw	low _sequence
  1716  002034  6E53               	movwf	??_remove_component^0,c
  1717  002036  0E00               	movlw	high _sequence
  1718  002038  6E54               	movwf	(??_remove_component+1)^0,c
  1719  00203A  0E01               	movlw	1
  1720  00203C  6E55               	movwf	(??_remove_component+2)^0,c
  1721  00203E  0E00               	movlw	0
  1722  002040  6E56               	movwf	(??_remove_component+3)^0,c
  1723  002042  5053               	movf	??_remove_component^0,w,c
  1724  002044  5E55               	subwf	(??_remove_component+2)^0,f,c
  1725  002046  5054               	movf	(??_remove_component+1)^0,w,c
  1726  002048  5A56               	subwfb	(??_remove_component+3)^0,f,c
  1727  00204A  5181               	movf	remove_component@ptr& (0+255),w,b
  1728  00204C  2455               	addwf	(??_remove_component+2)^0,w,c
  1729  00204E  6F85               	movwf	remove_component@indxToDel& (0+255),b
  1730  002050  5182               	movf	(remove_component@ptr+1)& (0+255),w,b
  1731  002052  2056               	addwfc	(??_remove_component+3)^0,w,c
  1732  002054  6F86               	movwf	(remove_component@indxToDel+1)& (0+255),b
  1733                           
  1734                           ;main.c: 370:         }
  1735  002056  EF36  F010         	goto	l5023
  1736  00205A                     l5019:
  1737  00205A  FFFF               	dw	65535	; assembler added errata NOP
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;main.c: 372:             print_string("component is not in the sequence. \nTry selectin
      +                          g another component");
  1741  00205C  0ED8               	movlw	low STR_9
  1742  00205E  6E0A               	movwf	print_string@strng^0,c
  1743  002060  0E7E               	movlw	high STR_9
  1744  002062  6E0B               	movwf	(print_string@strng+1)^0,c
  1745  002064  EC8A  F015         	call	_print_string	;wreg free
  1746  002068                     
  1747                           ;main.c: 373:             New_char_RX=0;
  1748  002068  0E00               	movlw	0
  1749  00206A  6E74               	movwf	_New_char_RX^0,c
  1750  00206C                     l5023:
  1751  00206C  FFFF               	dw	65535	; assembler added errata NOP
  1752                           
  1753                           ;main.c: 375:         memmove(&sequence[indxToDel], &sequence[indxToDel + 1], strlen(seq
      +                          uence) - indxToDel);
  1754  00206E  0EEF               	movlw	low _sequence
  1755  002070  0100               	movlb	0	; () banked
  1756  002072  2585               	addwf	remove_component@indxToDel& (0+255),w,b
  1757  002074  6E0D               	movwf	memmove@d1^0,c
  1758  002076  0E00               	movlw	high _sequence
  1759  002078  2186               	addwfc	(remove_component@indxToDel+1)& (0+255),w,b
  1760  00207A  6E0E               	movwf	(memmove@d1+1)^0,c
  1761  00207C  0EF0               	movlw	low (_sequence+1)
  1762  00207E  2585               	addwf	remove_component@indxToDel& (0+255),w,b
  1763  002080  6E0F               	movwf	memmove@s1^0,c
  1764  002082  0E00               	movlw	high (_sequence+1)
  1765  002084  2186               	addwfc	(remove_component@indxToDel+1)& (0+255),w,b
  1766  002086  6E10               	movwf	(memmove@s1+1)^0,c
  1767  002088  0EEF               	movlw	low _sequence
  1768  00208A  6E09               	movwf	strlen@s^0,c
  1769  00208C  0E00               	movlw	high _sequence
  1770  00208E  6E0A               	movwf	(strlen@s+1)^0,c
  1771  002090  EC40  F016         	call	_strlen	;wreg free
  1772  002094  0100               	movlb	0	; () banked
  1773  002096  5185               	movf	remove_component@indxToDel& (0+255),w,b
  1774  002098  5C09               	subwf	?_strlen^0,w,c
  1775  00209A  6E11               	movwf	memmove@n^0,c
  1776  00209C  5186               	movf	(remove_component@indxToDel+1)& (0+255),w,b
  1777  00209E  580A               	subwfb	(?_strlen+1)^0,w,c
  1778  0020A0  6E12               	movwf	(memmove@n+1)^0,c
  1779  0020A2  ECC8  F011         	call	_memmove	;wreg free
  1780  0020A6                     l5025:
  1781  0020A6  FFFF               	dw	65535	; assembler added errata NOP
  1782                           
  1783                           ;main.c: 362:     while(!New_char_RX){
  1784  0020A8  5074               	movf	_New_char_RX^0,w,c
  1785  0020AA  B4D8               	btfsc	status,2,c
  1786  0020AC  EF5A  F010         	goto	u5581
  1787  0020B0  EF5D  F010         	goto	u5580
  1788  0020B4                     u5581:
  1789  0020B4  FFFF               	dw	65535	; assembler added errata NOP
  1790  0020B6  EFF3  F00F         	goto	l5009
  1791  0020BA                     u5580:
  1792  0020BA  FFFF               	dw	65535	; assembler added errata NOP
  1793  0020BC                     
  1794                           ;main.c: 378:     New_char_RX=0;
  1795  0020BC  0E00               	movlw	0
  1796  0020BE  6E74               	movwf	_New_char_RX^0,c
  1797                           
  1798                           ;main.c: 379:     while(!New_char_RX){
  1799  0020C0  EF8B  F010         	goto	l5037
  1800  0020C4                     l5029:
  1801  0020C4  FFFF               	dw	65535	; assembler added errata NOP
  1802                           
  1803                           ;main.c: 380:         int i =0;
  1804  0020C6  0E00               	movlw	0
  1805  0020C8  0100               	movlb	0	; () banked
  1806  0020CA  6F84               	movwf	(remove_component@i+1)& (0+255),b
  1807  0020CC  0E00               	movlw	0
  1808  0020CE  6F83               	movwf	remove_component@i& (0+255),b
  1809  0020D0                     l5031:
  1810  0020D0  FFFF               	dw	65535	; assembler added errata NOP
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;main.c: 382:             pick_and_place(sequence[i]);
  1814  0020D2  0EEF               	movlw	low _sequence
  1815  0020D4  2583               	addwf	remove_component@i& (0+255),w,b
  1816  0020D6  6ED9               	movwf	fsr2l,c
  1817  0020D8  0E00               	movlw	high _sequence
  1818  0020DA  2184               	addwfc	(remove_component@i+1)& (0+255),w,b
  1819  0020DC  6EDA               	movwf	fsr2h,c
  1820  0020DE  50DF               	movf	indf2,w,c
  1821  0020E0  EC20  F003         	call	_pick_and_place
  1822  0020E4                     
  1823                           ;main.c: 383:             i++;
  1824  0020E4  0100               	movlb	0	; () banked
  1825  0020E6  4B83               	infsnz	remove_component@i& (0+255),f,b
  1826  0020E8  2B84               	incf	(remove_component@i+1)& (0+255),f,b
  1827  0020EA                     
  1828                           ; BSR set to: 0
  1829                           ;main.c: 384:         }while(sequence[i++]!='\n');
  1830  0020EA  5183               	movf	remove_component@i& (0+255),w,b
  1831  0020EC  6E53               	movwf	??_remove_component^0,c
  1832  0020EE  5184               	movf	(remove_component@i+1)& (0+255),w,b
  1833  0020F0  6E54               	movwf	(??_remove_component+1)^0,c
  1834  0020F2  4B83               	infsnz	remove_component@i& (0+255),f,b
  1835  0020F4  2B84               	incf	(remove_component@i+1)& (0+255),f,b
  1836  0020F6  0EEF               	movlw	low _sequence
  1837  0020F8  2453               	addwf	??_remove_component^0,w,c
  1838  0020FA  6ED9               	movwf	fsr2l,c
  1839  0020FC  0E00               	movlw	high _sequence
  1840  0020FE  2054               	addwfc	(??_remove_component+1)^0,w,c
  1841  002100  6EDA               	movwf	fsr2h,c
  1842  002102  0E0A               	movlw	10
  1843  002104  18DE               	xorwf	postinc2,w,c
  1844  002106  A4D8               	btfss	status,2,c
  1845  002108  EF88  F010         	goto	u5591
  1846  00210C  EF8B  F010         	goto	u5590
  1847  002110                     u5591:
  1848  002110  FFFF               	dw	65535	; assembler added errata NOP
  1849  002112  EF68  F010         	goto	l5031
  1850  002116                     u5590:
  1851  002116                     l5037:
  1852  002116  FFFF               	dw	65535	; assembler added errata NOP
  1853                           
  1854                           ;main.c: 379:     while(!New_char_RX){
  1855  002118  5074               	movf	_New_char_RX^0,w,c
  1856  00211A  B4D8               	btfsc	status,2,c
  1857  00211C  EF92  F010         	goto	u5601
  1858  002120  EF95  F010         	goto	u5600
  1859  002124                     u5601:
  1860  002124  FFFF               	dw	65535	; assembler added errata NOP
  1861  002126  EF62  F010         	goto	l5029
  1862  00212A                     u5600:
  1863  00212A  FFFF               	dw	65535	; assembler added errata NOP
  1864  00212C  0012               	return		;funcret
  1865  00212E  FFFF               	dw	65535	; errata NOP
  1866  002130                     __end_of_remove_component:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _strrchr *****************
  1870 ;; Defined at:
  1871 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  s               2   22[COMRAM] PTR const unsigned char 
  1874 ;;		 -> sequence(4), 
  1875 ;;  c               2   24[COMRAM] int 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  2   22[COMRAM] PTR unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1887 ;;      Params:         4       0       0       0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0
  1890 ;;      Totals:         4       0       0       0       0       0       0
  1891 ;;Total ram usage:        4 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 3
  1894 ;; This function calls:
  1895 ;;		___memrchr
  1896 ;;		_strlen
  1897 ;; This function is called by:
  1898 ;;		_remove_component
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text3
  1903  002DC6                     __ptext3:
  1904                           	callstack 0
  1905  002DC6                     _strrchr:
  1906                           	callstack 0
  1907  002DC6  FFFF               	dw	65535	; assembler added errata NOP
  1908  002DC8  C017  F00D         	movff	strrchr@s,___memrchr@m
  1909  002DCC  C018  F00E         	movff	strrchr@s+1,___memrchr@m+1
  1910  002DD0  C019  F00F         	movff	strrchr@c,___memrchr@c
  1911  002DD4  C01A  F010         	movff	strrchr@c+1,___memrchr@c+1
  1912  002DD8  C017  F009         	movff	strrchr@s,strlen@s
  1913  002DDC  C018  F00A         	movff	strrchr@s+1,strlen@s+1
  1914  002DE0  EC40  F016         	call	_strlen	;wreg free
  1915  002DE4  0E01               	movlw	1
  1916  002DE6  2409               	addwf	?_strlen^0,w,c
  1917  002DE8  6E11               	movwf	___memrchr@n^0,c
  1918  002DEA  0E00               	movlw	0
  1919  002DEC  200A               	addwfc	(?_strlen+1)^0,w,c
  1920  002DEE  6E12               	movwf	(___memrchr@n+1)^0,c
  1921  002DF0  ECDD  F014         	call	___memrchr	;wreg free
  1922  002DF4  C00D  F017         	movff	?___memrchr,?_strrchr
  1923  002DF8  C00E  F018         	movff	?___memrchr+1,?_strrchr+1
  1924  002DFC  0012               	return		;funcret
  1925  002DFE  FFFF               	dw	65535	; errata NOP
  1926  002E00                     __end_of_strrchr:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function ___memrchr *****************
  1930 ;; Defined at:
  1931 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  m               2   12[COMRAM] PTR const void 
  1934 ;;		 -> sequence(4), 
  1935 ;;  c               2   14[COMRAM] int 
  1936 ;;  n               2   16[COMRAM] unsigned int 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  s               2   20[COMRAM] PTR const unsigned char 
  1939 ;;		 -> sequence(4), 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  2   12[COMRAM] PTR void 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1949 ;;      Params:         6       0       0       0       0       0       0
  1950 ;;      Locals:         2       0       0       0       0       0       0
  1951 ;;      Temps:          2       0       0       0       0       0       0
  1952 ;;      Totals:        10       0       0       0       0       0       0
  1953 ;;Total ram usage:       10 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 2
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_strrchr
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text4
  1964  0029BA                     __ptext4:
  1965                           	callstack 0
  1966  0029BA                     ___memrchr:
  1967                           	callstack 0
  1968  0029BA  FFFF               	dw	65535	; assembler added errata NOP
  1969  0029BC  C00D  F015         	movff	___memrchr@m,___memrchr@s
  1970  0029C0  C00E  F016         	movff	___memrchr@m+1,___memrchr@s+1
  1971  0029C4  C00F  F00F         	movff	___memrchr@c,___memrchr@c
  1972  0029C8  6A10               	clrf	(___memrchr@c+1)^0,c
  1973  0029CA  EF07  F015         	goto	l4537
  1974  0029CE                     l4531:
  1975  0029CE  FFFF               	dw	65535	; assembler added errata NOP
  1976  0029D0  5011               	movf	___memrchr@n^0,w,c
  1977  0029D2  2415               	addwf	___memrchr@s^0,w,c
  1978  0029D4  6ED9               	movwf	fsr2l,c
  1979  0029D6  5012               	movf	(___memrchr@n+1)^0,w,c
  1980  0029D8  2016               	addwfc	(___memrchr@s+1)^0,w,c
  1981  0029DA  6EDA               	movwf	fsr2h,c
  1982  0029DC  50DF               	movf	indf2,w,c
  1983  0029DE  6E13               	movwf	??___memrchr^0,c
  1984  0029E0  6A14               	clrf	(??___memrchr+1)^0,c
  1985  0029E2  500F               	movf	___memrchr@c^0,w,c
  1986  0029E4  1813               	xorwf	??___memrchr^0,w,c
  1987  0029E6  E107               	bnz	u4811
  1988  0029E8  5010               	movf	(___memrchr@c+1)^0,w,c
  1989  0029EA  1814               	xorwf	(??___memrchr+1)^0,w,c
  1990  0029EC  A4D8               	btfss	status,2,c
  1991  0029EE  EFFB  F014         	goto	u4811
  1992  0029F2  EFFE  F014         	goto	u4810
  1993  0029F6                     u4811:
  1994  0029F6  FFFF               	dw	65535	; assembler added errata NOP
  1995  0029F8  EF07  F015         	goto	l4537
  1996  0029FC                     u4810:
  1997  0029FC  FFFF               	dw	65535	; assembler added errata NOP
  1998  0029FE  5011               	movf	___memrchr@n^0,w,c
  1999  002A00  2415               	addwf	___memrchr@s^0,w,c
  2000  002A02  6E0D               	movwf	?___memrchr^0,c
  2001  002A04  5012               	movf	(___memrchr@n+1)^0,w,c
  2002  002A06  2016               	addwfc	(___memrchr@s+1)^0,w,c
  2003  002A08  6E0E               	movwf	(?___memrchr+1)^0,c
  2004  002A0A  EF1B  F015         	goto	l1126
  2005  002A0E                     l4537:
  2006  002A0E  FFFF               	dw	65535	; assembler added errata NOP
  2007  002A10  0611               	decf	___memrchr@n^0,f,c
  2008  002A12  A0D8               	btfss	status,0,c
  2009  002A14  0612               	decf	(___memrchr@n+1)^0,f,c
  2010  002A16  2811               	incf	___memrchr@n^0,w,c
  2011  002A18  E106               	bnz	u4821
  2012  002A1A  2812               	incf	(___memrchr@n+1)^0,w,c
  2013  002A1C  A4D8               	btfss	status,2,c
  2014  002A1E  EF13  F015         	goto	u4821
  2015  002A22  EF16  F015         	goto	u4820
  2016  002A26                     u4821:
  2017  002A26  FFFF               	dw	65535	; assembler added errata NOP
  2018  002A28  EFE7  F014         	goto	l4531
  2019  002A2C                     u4820:
  2020  002A2C  FFFF               	dw	65535	; assembler added errata NOP
  2021  002A2E  0E00               	movlw	0
  2022  002A30  6E0D               	movwf	?___memrchr^0,c
  2023  002A32  0E00               	movlw	0
  2024  002A34  6E0E               	movwf	(?___memrchr+1)^0,c
  2025  002A36                     l1126:
  2026  002A36  FFFF               	dw	65535	; assembler added errata NOP
  2027  002A38  0012               	return		;funcret
  2028  002A3A  FFFF               	dw	65535	; errata NOP
  2029  002A3C                     __end_of___memrchr:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _memmove *****************
  2033 ;; Defined at:
  2034 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  d1              2   12[COMRAM] PTR void 
  2037 ;;		 -> sequence(4), 
  2038 ;;  s1              2   14[COMRAM] PTR const void 
  2039 ;;		 -> sequence(4), 
  2040 ;;  n               2   16[COMRAM] unsigned int 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  s               2   22[COMRAM] PTR const unsigned char 
  2043 ;;		 -> sequence(4), 
  2044 ;;  d               2   20[COMRAM] PTR unsigned char 
  2045 ;;		 -> sequence(4), 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  2   12[COMRAM] PTR void 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2055 ;;      Params:         6       0       0       0       0       0       0
  2056 ;;      Locals:         4       0       0       0       0       0       0
  2057 ;;      Temps:          2       0       0       0       0       0       0
  2058 ;;      Totals:        12       0       0       0       0       0       0
  2059 ;;Total ram usage:       12 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 2
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_remove_component
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text5
  2070  002390                     __ptext5:
  2071                           	callstack 0
  2072  002390                     _memmove:
  2073                           	callstack 0
  2074  002390  FFFF               	dw	65535	; assembler added errata NOP
  2075  002392  C00F  F017         	movff	memmove@s1,memmove@s
  2076  002396  C010  F018         	movff	memmove@s1+1,memmove@s+1
  2077  00239A  C00D  F015         	movff	memmove@d1,memmove@d
  2078  00239E  C00E  F016         	movff	memmove@d1+1,memmove@d+1
  2079  0023A2  5015               	movf	memmove@d^0,w,c
  2080  0023A4  5C17               	subwf	memmove@s^0,w,c
  2081  0023A6  5016               	movf	(memmove@d+1)^0,w,c
  2082  0023A8  5818               	subwfb	(memmove@s+1)^0,w,c
  2083  0023AA  B0D8               	btfsc	status,0,c
  2084  0023AC  EFDA  F011         	goto	u5071
  2085  0023B0  EFDD  F011         	goto	u5070
  2086  0023B4                     u5071:
  2087  0023B4  FFFF               	dw	65535	; assembler added errata NOP
  2088  0023B6  EF1A  F012         	goto	l4721
  2089  0023BA                     u5070:
  2090  0023BA  FFFF               	dw	65535	; assembler added errata NOP
  2091  0023BC  5011               	movf	memmove@n^0,w,c
  2092  0023BE  2417               	addwf	memmove@s^0,w,c
  2093  0023C0  6E13               	movwf	??_memmove^0,c
  2094  0023C2  5012               	movf	(memmove@n+1)^0,w,c
  2095  0023C4  2018               	addwfc	(memmove@s+1)^0,w,c
  2096  0023C6  6E14               	movwf	(??_memmove+1)^0,c
  2097  0023C8  5013               	movf	??_memmove^0,w,c
  2098  0023CA  5C15               	subwf	memmove@d^0,w,c
  2099  0023CC  5014               	movf	(??_memmove+1)^0,w,c
  2100  0023CE  5816               	subwfb	(memmove@d+1)^0,w,c
  2101  0023D0  B0D8               	btfsc	status,0,c
  2102  0023D2  EFED  F011         	goto	u5081
  2103  0023D6  EFF0  F011         	goto	u5080
  2104  0023DA                     u5081:
  2105  0023DA  FFFF               	dw	65535	; assembler added errata NOP
  2106  0023DC  EF1A  F012         	goto	l4721
  2107  0023E0                     u5080:
  2108  0023E0  FFFF               	dw	65535	; assembler added errata NOP
  2109  0023E2  5011               	movf	memmove@n^0,w,c
  2110  0023E4  2617               	addwf	memmove@s^0,f,c
  2111  0023E6  5012               	movf	(memmove@n+1)^0,w,c
  2112  0023E8  2218               	addwfc	(memmove@s+1)^0,f,c
  2113  0023EA  5011               	movf	memmove@n^0,w,c
  2114  0023EC  2615               	addwf	memmove@d^0,f,c
  2115  0023EE  5012               	movf	(memmove@n+1)^0,w,c
  2116  0023F0  2216               	addwfc	(memmove@d+1)^0,f,c
  2117  0023F2                     l4717:
  2118  0023F2  FFFF               	dw	65535	; assembler added errata NOP
  2119  0023F4  0617               	decf	memmove@s^0,f,c
  2120  0023F6  A0D8               	btfss	status,0,c
  2121  0023F8  0618               	decf	(memmove@s+1)^0,f,c
  2122  0023FA  C017  FFD9         	movff	memmove@s,fsr2l
  2123  0023FE  C018  FFDA         	movff	memmove@s+1,fsr2h
  2124  002402  0615               	decf	memmove@d^0,f,c
  2125  002404  A0D8               	btfss	status,0,c
  2126  002406  0616               	decf	(memmove@d+1)^0,f,c
  2127  002408  C015  FFE1         	movff	memmove@d,fsr1l
  2128  00240C  C016  FFE2         	movff	memmove@d+1,fsr1h
  2129  002410  CFDF FFE7          	movff	indf2,indf1
  2130  002414  0611               	decf	memmove@n^0,f,c
  2131  002416  A0D8               	btfss	status,0,c
  2132  002418  0612               	decf	(memmove@n+1)^0,f,c
  2133  00241A  5011               	movf	memmove@n^0,w,c
  2134  00241C  1012               	iorwf	(memmove@n+1)^0,w,c
  2135  00241E  A4D8               	btfss	status,2,c
  2136  002420  EF14  F012         	goto	u5091
  2137  002424  EF17  F012         	goto	u5090
  2138  002428                     u5091:
  2139  002428  FFFF               	dw	65535	; assembler added errata NOP
  2140  00242A  EFF9  F011         	goto	l4717
  2141  00242E                     u5090:
  2142  00242E  FFFF               	dw	65535	; assembler added errata NOP
  2143  002430  EF42  F012         	goto	l1082
  2144  002434                     l4721:
  2145  002434  FFFF               	dw	65535	; assembler added errata NOP
  2146  002436  5011               	movf	memmove@n^0,w,c
  2147  002438  1012               	iorwf	(memmove@n+1)^0,w,c
  2148  00243A  B4D8               	btfsc	status,2,c
  2149  00243C  EF22  F012         	goto	u5101
  2150  002440  EF25  F012         	goto	u5100
  2151  002444                     u5101:
  2152  002444  FFFF               	dw	65535	; assembler added errata NOP
  2153  002446  EF42  F012         	goto	l1082
  2154  00244A                     u5100:
  2155  00244A  FFFF               	dw	65535	; assembler added errata NOP
  2156  00244C                     l4723:
  2157  00244C  FFFF               	dw	65535	; assembler added errata NOP
  2158  00244E  C017  FFD9         	movff	memmove@s,fsr2l
  2159  002452  C018  FFDA         	movff	memmove@s+1,fsr2h
  2160  002456  C015  FFE1         	movff	memmove@d,fsr1l
  2161  00245A  C016  FFE2         	movff	memmove@d+1,fsr1h
  2162  00245E  CFDF FFE7          	movff	indf2,indf1
  2163  002462  4A17               	infsnz	memmove@s^0,f,c
  2164  002464  2A18               	incf	(memmove@s+1)^0,f,c
  2165  002466  4A15               	infsnz	memmove@d^0,f,c
  2166  002468  2A16               	incf	(memmove@d+1)^0,f,c
  2167  00246A  0611               	decf	memmove@n^0,f,c
  2168  00246C  A0D8               	btfss	status,0,c
  2169  00246E  0612               	decf	(memmove@n+1)^0,f,c
  2170  002470  5011               	movf	memmove@n^0,w,c
  2171  002472  1012               	iorwf	(memmove@n+1)^0,w,c
  2172  002474  A4D8               	btfss	status,2,c
  2173  002476  EF3F  F012         	goto	u5111
  2174  00247A  EF42  F012         	goto	u5110
  2175  00247E                     u5111:
  2176  00247E  FFFF               	dw	65535	; assembler added errata NOP
  2177  002480  EF26  F012         	goto	l4723
  2178  002484                     u5110:
  2179  002484                     l1082:
  2180  002484  FFFF               	dw	65535	; assembler added errata NOP
  2181  002486  0012               	return		;funcret
  2182  002488  FFFF               	dw	65535	; errata NOP
  2183  00248A                     __end_of_memmove:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _change_sequence *****************
  2187 ;; Defined at:
  2188 ;;		line 304 in file "main.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  i               2   68[BANK0 ] int 
  2193 ;;  i               2   70[BANK0 ] int 
  2194 ;;  Help_1         66    0[BANK0 ] const unsigned char [66]
  2195 ;;  i               2   72[BANK0 ] int 
  2196 ;;  j               2   66[BANK0 ] int 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2206 ;;      Params:         0       0       0       0       0       0       0
  2207 ;;      Locals:         0      74       0       0       0       0       0
  2208 ;;      Temps:          3       0       0       0       0       0       0
  2209 ;;      Totals:         3      74       0       0       0       0       0
  2210 ;;Total ram usage:       77 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 6
  2213 ;; This function calls:
  2214 ;;		_pick_and_place
  2215 ;;		_serial_tx_char
  2216 ;; This function is called by:
  2217 ;;		_start_up_menu
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text6
  2222  001E40                     __ptext6:
  2223                           	callstack 0
  2224  001E40                     _change_sequence:
  2225                           	callstack 0
  2226  001E40  FFFF               	dw	65535	; assembler added errata NOP
  2227  001E42                     
  2228                           ;main.c: 306:     const char Help_1[]="Please give the new sequence as input\r The curre
      +                          nt sequence is: \n";
  2229  001E42  0E2F               	movlw	low change_sequence@F3126
  2230  001E44  6EF6               	movwf	tblptrl,c
  2231  001E46                     	if	1	;There is more than 1 active tblptr byte
  2232  001E46  0E7E               	movlw	high change_sequence@F3126
  2233  001E48  6EF7               	movwf	tblptrh,c
  2234  001E4A                     	endif
  2235  001E4A                     	if	0	;There are less than 3 active tblptr bytes
  2236  001E4A                     	endif
  2237  001E4A  EE20  F080         	lfsr	2,change_sequence@Help_1
  2238  001E4E  0E41               	movlw	65
  2239  001E50                     u5410:
  2240  001E50  0009               	tblrd		*+
  2241  001E52  FFFF               	dw	65535	; errata NOP
  2242  001E54  CFF5 FFDE          	movff	tablat,postinc2
  2243  001E58  06E8               	decf	wreg,f,c
  2244  001E5A  E2FA               	bc	u5410
  2245  001E5C                     
  2246                           ;main.c: 307:     for(int i=0; i++;)
  2247  001E5C  0E00               	movlw	0
  2248  001E5E  0100               	movlb	0	; () banked
  2249  001E60  6FC7               	movwf	(change_sequence@i+1)& (0+255),b
  2250  001E62  0E00               	movlw	0
  2251  001E64  6FC6               	movwf	change_sequence@i& (0+255),b
  2252  001E66  EF50  F00F         	goto	l4917
  2253  001E6A                     l4913:
  2254  001E6A  FFFF               	dw	65535	; assembler added errata NOP
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;main.c: 308:     {;main.c: 309:         if(Help_1[i]!='\n'){
  2258  001E6C  0E80               	movlw	low change_sequence@Help_1
  2259  001E6E  25C6               	addwf	change_sequence@i& (0+255),w,b
  2260  001E70  6ED9               	movwf	fsr2l,c
  2261  001E72  0E00               	movlw	high change_sequence@Help_1
  2262  001E74  21C7               	addwfc	(change_sequence@i+1)& (0+255),w,b
  2263  001E76  6EDA               	movwf	fsr2h,c
  2264  001E78  0E0A               	movlw	10
  2265  001E7A  18DE               	xorwf	postinc2,w,c
  2266  001E7C  B4D8               	btfsc	status,2,c
  2267  001E7E  EF43  F00F         	goto	u5421
  2268  001E82  EF46  F00F         	goto	u5420
  2269  001E86                     u5421:
  2270  001E86  FFFF               	dw	65535	; assembler added errata NOP
  2271  001E88  EF50  F00F         	goto	l4917
  2272  001E8C                     u5420:
  2273  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  2274  001E8E                     
  2275                           ; BSR set to: 0
  2276                           ;main.c: 310:             serial_tx_char(Help_1[i]);
  2277  001E8E  0E80               	movlw	low change_sequence@Help_1
  2278  001E90  25C6               	addwf	change_sequence@i& (0+255),w,b
  2279  001E92  6ED9               	movwf	fsr2l,c
  2280  001E94  0E00               	movlw	high change_sequence@Help_1
  2281  001E96  21C7               	addwfc	(change_sequence@i+1)& (0+255),w,b
  2282  001E98  6EDA               	movwf	fsr2h,c
  2283  001E9A  50DF               	movf	indf2,w,c
  2284  001E9C  EC26  F017         	call	_serial_tx_char
  2285  001EA0                     l4917:
  2286  001EA0  FFFF               	dw	65535	; assembler added errata NOP
  2287  001EA2  0100               	movlb	0	; () banked
  2288  001EA4  4BC6               	infsnz	change_sequence@i& (0+255),f,b
  2289  001EA6  2BC7               	incf	(change_sequence@i+1)& (0+255),f,b
  2290  001EA8  05C6               	decf	change_sequence@i& (0+255),w,b
  2291  001EAA  11C7               	iorwf	(change_sequence@i+1)& (0+255),w,b
  2292  001EAC  A4D8               	btfss	status,2,c
  2293  001EAE  EF5B  F00F         	goto	u5431
  2294  001EB2  EF5E  F00F         	goto	u5430
  2295  001EB6                     u5431:
  2296  001EB6  FFFF               	dw	65535	; assembler added errata NOP
  2297  001EB8  EF35  F00F         	goto	l4913
  2298  001EBC                     u5430:
  2299  001EBC  FFFF               	dw	65535	; assembler added errata NOP
  2300  001EBE                     
  2301                           ; BSR set to: 0
  2302                           ;main.c: 314:     int j = 0;
  2303  001EBE  0E00               	movlw	0
  2304  001EC0  6FC3               	movwf	(change_sequence@j+1)& (0+255),b
  2305  001EC2  0E00               	movlw	0
  2306  001EC4  6FC2               	movwf	change_sequence@j& (0+255),b
  2307  001EC6                     l4921:
  2308  001EC6  FFFF               	dw	65535	; assembler added errata NOP
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;main.c: 316:         serial_tx_char(sequence[j]);
  2312  001EC8  0EEF               	movlw	low _sequence
  2313  001ECA  25C2               	addwf	change_sequence@j& (0+255),w,b
  2314  001ECC  6ED9               	movwf	fsr2l,c
  2315  001ECE  0E00               	movlw	high _sequence
  2316  001ED0  21C3               	addwfc	(change_sequence@j+1)& (0+255),w,b
  2317  001ED2  6EDA               	movwf	fsr2h,c
  2318  001ED4  50DF               	movf	indf2,w,c
  2319  001ED6  EC26  F017         	call	_serial_tx_char
  2320  001EDA                     
  2321                           ;main.c: 317:         j++;
  2322  001EDA  0100               	movlb	0	; () banked
  2323  001EDC  4BC2               	infsnz	change_sequence@j& (0+255),f,b
  2324  001EDE  2BC3               	incf	(change_sequence@j+1)& (0+255),f,b
  2325  001EE0                     
  2326                           ; BSR set to: 0
  2327                           ;main.c: 318:     }while(sequence[j++] != '\n');
  2328  001EE0  51C2               	movf	change_sequence@j& (0+255),w,b
  2329  001EE2  6E53               	movwf	??_change_sequence^0,c
  2330  001EE4  51C3               	movf	(change_sequence@j+1)& (0+255),w,b
  2331  001EE6  6E54               	movwf	(??_change_sequence+1)^0,c
  2332  001EE8  4BC2               	infsnz	change_sequence@j& (0+255),f,b
  2333  001EEA  2BC3               	incf	(change_sequence@j+1)& (0+255),f,b
  2334  001EEC  0EEF               	movlw	low _sequence
  2335  001EEE  2453               	addwf	??_change_sequence^0,w,c
  2336  001EF0  6ED9               	movwf	fsr2l,c
  2337  001EF2  0E00               	movlw	high _sequence
  2338  001EF4  2054               	addwfc	(??_change_sequence+1)^0,w,c
  2339  001EF6  6EDA               	movwf	fsr2h,c
  2340  001EF8  0E0A               	movlw	10
  2341  001EFA  18DE               	xorwf	postinc2,w,c
  2342  001EFC  A4D8               	btfss	status,2,c
  2343  001EFE  EF83  F00F         	goto	u5441
  2344  001F02  EF86  F00F         	goto	u5440
  2345  001F06                     u5441:
  2346  001F06  FFFF               	dw	65535	; assembler added errata NOP
  2347  001F08  EF63  F00F         	goto	l4921
  2348  001F0C                     u5440:
  2349  001F0C  FFFF               	dw	65535	; assembler added errata NOP
  2350  001F0E                     
  2351                           ; BSR set to: 0
  2352                           ;main.c: 320:     int i = 0;
  2353  001F0E  0E00               	movlw	0
  2354  001F10  6FC9               	movwf	(change_sequence@i_545+1)& (0+255),b
  2355  001F12  0E00               	movlw	0
  2356  001F14  6FC8               	movwf	change_sequence@i_545& (0+255),b
  2357  001F16                     l4929:
  2358  001F16  FFFF               	dw	65535	; assembler added errata NOP
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;main.c: 322:         sequence[i]=input_str[i];
  2362  001F18  0E75               	movlw	low _input_str
  2363  001F1A  25C8               	addwf	change_sequence@i_545& (0+255),w,b
  2364  001F1C  6ED9               	movwf	fsr2l,c
  2365  001F1E  0E00               	movlw	high _input_str
  2366  001F20  21C9               	addwfc	(change_sequence@i_545+1)& (0+255),w,b
  2367  001F22  6EDA               	movwf	fsr2h,c
  2368  001F24  0EEF               	movlw	low _sequence
  2369  001F26  25C8               	addwf	change_sequence@i_545& (0+255),w,b
  2370  001F28  6EE1               	movwf	fsr1l,c
  2371  001F2A  0E00               	movlw	high _sequence
  2372  001F2C  21C9               	addwfc	(change_sequence@i_545+1)& (0+255),w,b
  2373  001F2E  6EE2               	movwf	fsr1h,c
  2374  001F30  CFDF FFE7          	movff	indf2,indf1
  2375  001F34                     
  2376                           ; BSR set to: 0
  2377                           ;main.c: 323:         i++;
  2378  001F34  4BC8               	infsnz	change_sequence@i_545& (0+255),f,b
  2379  001F36  2BC9               	incf	(change_sequence@i_545+1)& (0+255),f,b
  2380  001F38                     
  2381                           ; BSR set to: 0
  2382                           ;main.c: 324:     }while(input_str[i++]!='\n');
  2383  001F38  51C8               	movf	change_sequence@i_545& (0+255),w,b
  2384  001F3A  6E53               	movwf	??_change_sequence^0,c
  2385  001F3C  51C9               	movf	(change_sequence@i_545+1)& (0+255),w,b
  2386  001F3E  6E54               	movwf	(??_change_sequence+1)^0,c
  2387  001F40  4BC8               	infsnz	change_sequence@i_545& (0+255),f,b
  2388  001F42  2BC9               	incf	(change_sequence@i_545+1)& (0+255),f,b
  2389  001F44  0E75               	movlw	low _input_str
  2390  001F46  2453               	addwf	??_change_sequence^0,w,c
  2391  001F48  6ED9               	movwf	fsr2l,c
  2392  001F4A  0E00               	movlw	high _input_str
  2393  001F4C  2054               	addwfc	(??_change_sequence+1)^0,w,c
  2394  001F4E  6EDA               	movwf	fsr2h,c
  2395  001F50  0E0A               	movlw	10
  2396  001F52  18DE               	xorwf	postinc2,w,c
  2397  001F54  A4D8               	btfss	status,2,c
  2398  001F56  EFAF  F00F         	goto	u5451
  2399  001F5A  EFB2  F00F         	goto	u5450
  2400  001F5E                     u5451:
  2401  001F5E  FFFF               	dw	65535	; assembler added errata NOP
  2402  001F60  EF8B  F00F         	goto	l4929
  2403  001F64                     u5450:
  2404  001F64  FFFF               	dw	65535	; assembler added errata NOP
  2405  001F66  EFDD  F00F         	goto	l4943
  2406  001F6A                     l4935:
  2407  001F6A  FFFF               	dw	65535	; assembler added errata NOP
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;main.c: 327:         int i =0;
  2411  001F6C  0E00               	movlw	0
  2412  001F6E  6FC5               	movwf	(change_sequence@i_546+1)& (0+255),b
  2413  001F70  0E00               	movlw	0
  2414  001F72  6FC4               	movwf	change_sequence@i_546& (0+255),b
  2415  001F74                     l4937:
  2416  001F74  FFFF               	dw	65535	; assembler added errata NOP
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;main.c: 329:             pick_and_place(sequence[i]);
  2420  001F76  0EEF               	movlw	low _sequence
  2421  001F78  25C4               	addwf	change_sequence@i_546& (0+255),w,b
  2422  001F7A  6ED9               	movwf	fsr2l,c
  2423  001F7C  0E00               	movlw	high _sequence
  2424  001F7E  21C5               	addwfc	(change_sequence@i_546+1)& (0+255),w,b
  2425  001F80  6EDA               	movwf	fsr2h,c
  2426  001F82  50DF               	movf	indf2,w,c
  2427  001F84  EC20  F003         	call	_pick_and_place
  2428  001F88                     
  2429                           ;main.c: 330:             i++;
  2430  001F88  0100               	movlb	0	; () banked
  2431  001F8A  4BC4               	infsnz	change_sequence@i_546& (0+255),f,b
  2432  001F8C  2BC5               	incf	(change_sequence@i_546+1)& (0+255),f,b
  2433  001F8E                     
  2434                           ; BSR set to: 0
  2435                           ;main.c: 331:         }while(sequence[i++]!='\n');
  2436  001F8E  51C4               	movf	change_sequence@i_546& (0+255),w,b
  2437  001F90  6E53               	movwf	??_change_sequence^0,c
  2438  001F92  51C5               	movf	(change_sequence@i_546+1)& (0+255),w,b
  2439  001F94  6E54               	movwf	(??_change_sequence+1)^0,c
  2440  001F96  4BC4               	infsnz	change_sequence@i_546& (0+255),f,b
  2441  001F98  2BC5               	incf	(change_sequence@i_546+1)& (0+255),f,b
  2442  001F9A  0EEF               	movlw	low _sequence
  2443  001F9C  2453               	addwf	??_change_sequence^0,w,c
  2444  001F9E  6ED9               	movwf	fsr2l,c
  2445  001FA0  0E00               	movlw	high _sequence
  2446  001FA2  2054               	addwfc	(??_change_sequence+1)^0,w,c
  2447  001FA4  6EDA               	movwf	fsr2h,c
  2448  001FA6  0E0A               	movlw	10
  2449  001FA8  18DE               	xorwf	postinc2,w,c
  2450  001FAA  A4D8               	btfss	status,2,c
  2451  001FAC  EFDA  F00F         	goto	u5461
  2452  001FB0  EFDD  F00F         	goto	u5460
  2453  001FB4                     u5461:
  2454  001FB4  FFFF               	dw	65535	; assembler added errata NOP
  2455  001FB6  EFBA  F00F         	goto	l4937
  2456  001FBA                     u5460:
  2457  001FBA                     l4943:
  2458  001FBA  FFFF               	dw	65535	; assembler added errata NOP
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;main.c: 326:     while(!New_char_RX){
  2462  001FBC  5074               	movf	_New_char_RX^0,w,c
  2463  001FBE  B4D8               	btfsc	status,2,c
  2464  001FC0  EFE4  F00F         	goto	u5471
  2465  001FC4  EFE7  F00F         	goto	u5470
  2466  001FC8                     u5471:
  2467  001FC8  FFFF               	dw	65535	; assembler added errata NOP
  2468  001FCA  EFB5  F00F         	goto	l4935
  2469  001FCE                     u5470:
  2470  001FCE  FFFF               	dw	65535	; assembler added errata NOP
  2471  001FD0                     
  2472                           ; BSR set to: 0
  2473  001FD0  0012               	return		;funcret
  2474  001FD2  FFFF               	dw	65535	; errata NOP
  2475  001FD4                     __end_of_change_sequence:
  2476                           	callstack 0
  2477                           
  2478 ;; *************** function _add_component *****************
  2479 ;; Defined at:
  2480 ;;		line 336 in file "main.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  i               2   87[COMRAM] int 
  2485 ;;  add_to_seque    2   85[COMRAM] unsigned char [2]
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2495 ;;      Params:         0       0       0       0       0       0       0
  2496 ;;      Locals:         4       0       0       0       0       0       0
  2497 ;;      Temps:          3       0       0       0       0       0       0
  2498 ;;      Totals:         7       0       0       0       0       0       0
  2499 ;;Total ram usage:        7 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 6
  2502 ;; This function calls:
  2503 ;;		_atoi
  2504 ;;		_pick_and_place
  2505 ;;		_print_string
  2506 ;;		_strncat
  2507 ;; This function is called by:
  2508 ;;		_start_up_menu
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text7
  2513  001A94                     __ptext7:
  2514                           	callstack 0
  2515  001A94                     _add_component:
  2516                           	callstack 0
  2517  001A94  FFFF               	dw	65535	; assembler added errata NOP
  2518  001A96                     
  2519                           ;main.c: 337:     print_string("Enter the pick position X:");
  2520  001A96  0EC8               	movlw	low STR_2
  2521  001A98  6E0A               	movwf	print_string@strng^0,c
  2522  001A9A  0E7F               	movlw	high STR_2
  2523  001A9C  6E0B               	movwf	(print_string@strng+1)^0,c
  2524  001A9E  EC8A  F015         	call	_print_string	;wreg free
  2525  001AA2                     
  2526                           ;main.c: 338:     if(New_char_RX){X_Pick_D=(atoi(input_str)); New_char_RX=0;}
  2527  001AA2  5074               	movf	_New_char_RX^0,w,c
  2528  001AA4  B4D8               	btfsc	status,2,c
  2529  001AA6  EF57  F00D         	goto	u5481
  2530  001AAA  EF5A  F00D         	goto	u5480
  2531  001AAE                     u5481:
  2532  001AAE  FFFF               	dw	65535	; assembler added errata NOP
  2533  001AB0  EF67  F00D         	goto	l4953
  2534  001AB4                     u5480:
  2535  001AB4  FFFF               	dw	65535	; assembler added errata NOP
  2536  001AB6  0E75               	movlw	low _input_str
  2537  001AB8  6E10               	movwf	atoi@s^0,c
  2538  001ABA  0E00               	movlw	high _input_str
  2539  001ABC  6E11               	movwf	(atoi@s+1)^0,c
  2540  001ABE  EC41  F00E         	call	_atoi	;wreg free
  2541  001AC2  C010  F05B         	movff	?_atoi,_X_Pick_D
  2542  001AC6  C011  F05C         	movff	?_atoi+1,_X_Pick_D+1
  2543  001ACA  0E00               	movlw	0
  2544  001ACC  6E74               	movwf	_New_char_RX^0,c
  2545  001ACE                     l4953:
  2546  001ACE  FFFF               	dw	65535	; assembler added errata NOP
  2547                           
  2548                           ;main.c: 339:     print_string("Enter the pick position Y:");
  2549  001AD0  0EE3               	movlw	low STR_3
  2550  001AD2  6E0A               	movwf	print_string@strng^0,c
  2551  001AD4  0E7F               	movlw	high STR_3
  2552  001AD6  6E0B               	movwf	(print_string@strng+1)^0,c
  2553  001AD8  EC8A  F015         	call	_print_string	;wreg free
  2554  001ADC                     
  2555                           ;main.c: 340:     if(New_char_RX){Y_Pick_D=(atoi(input_str));New_char_RX=0;}
  2556  001ADC  5074               	movf	_New_char_RX^0,w,c
  2557  001ADE  B4D8               	btfsc	status,2,c
  2558  001AE0  EF74  F00D         	goto	u5491
  2559  001AE4  EF77  F00D         	goto	u5490
  2560  001AE8                     u5491:
  2561  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  2562  001AEA  EF84  F00D         	goto	l4961
  2563  001AEE                     u5490:
  2564  001AEE  FFFF               	dw	65535	; assembler added errata NOP
  2565  001AF0  0E75               	movlw	low _input_str
  2566  001AF2  6E10               	movwf	atoi@s^0,c
  2567  001AF4  0E00               	movlw	high _input_str
  2568  001AF6  6E11               	movwf	(atoi@s+1)^0,c
  2569  001AF8  EC41  F00E         	call	_atoi	;wreg free
  2570  001AFC  C010  F0DB         	movff	?_atoi,_Y_Pick_D
  2571  001B00  C011  F0DC         	movff	?_atoi+1,_Y_Pick_D+1
  2572  001B04  0E00               	movlw	0
  2573  001B06  6E74               	movwf	_New_char_RX^0,c
  2574  001B08                     l4961:
  2575  001B08  FFFF               	dw	65535	; assembler added errata NOP
  2576                           
  2577                           ;main.c: 341:     print_string("Enter the pick orientation:");
  2578  001B0A  0EAC               	movlw	low STR_4
  2579  001B0C  6E0A               	movwf	print_string@strng^0,c
  2580  001B0E  0E7F               	movlw	high STR_4
  2581  001B10  6E0B               	movwf	(print_string@strng+1)^0,c
  2582  001B12  EC8A  F015         	call	_print_string	;wreg free
  2583  001B16                     
  2584                           ;main.c: 342:     if(New_char_RX){Pick_Angle_D=(atoi(input_str));New_char_RX=0;}
  2585  001B16  5074               	movf	_New_char_RX^0,w,c
  2586  001B18  B4D8               	btfsc	status,2,c
  2587  001B1A  EF91  F00D         	goto	u5501
  2588  001B1E  EF94  F00D         	goto	u5500
  2589  001B22                     u5501:
  2590  001B22  FFFF               	dw	65535	; assembler added errata NOP
  2591  001B24  EFA1  F00D         	goto	l4969
  2592  001B28                     u5500:
  2593  001B28  FFFF               	dw	65535	; assembler added errata NOP
  2594  001B2A  0E75               	movlw	low _input_str
  2595  001B2C  6E10               	movwf	atoi@s^0,c
  2596  001B2E  0E00               	movlw	high _input_str
  2597  001B30  6E11               	movwf	(atoi@s+1)^0,c
  2598  001B32  EC41  F00E         	call	_atoi	;wreg free
  2599  001B36  C010  F0D9         	movff	?_atoi,_Pick_Angle_D
  2600  001B3A  C011  F0DA         	movff	?_atoi+1,_Pick_Angle_D+1
  2601  001B3E  0E00               	movlw	0
  2602  001B40  6E74               	movwf	_New_char_RX^0,c
  2603  001B42                     l4969:
  2604  001B42  FFFF               	dw	65535	; assembler added errata NOP
  2605                           
  2606                           ;main.c: 343:     print_string("Enter the place position X:");
  2607  001B44  0E74               	movlw	low STR_5
  2608  001B46  6E0A               	movwf	print_string@strng^0,c
  2609  001B48  0E7F               	movlw	high STR_5
  2610  001B4A  6E0B               	movwf	(print_string@strng+1)^0,c
  2611  001B4C  EC8A  F015         	call	_print_string	;wreg free
  2612  001B50                     
  2613                           ;main.c: 344:     if(New_char_RX){X_Place_D=(atoi(input_str));New_char_RX=0;}
  2614  001B50  5074               	movf	_New_char_RX^0,w,c
  2615  001B52  B4D8               	btfsc	status,2,c
  2616  001B54  EFAE  F00D         	goto	u5511
  2617  001B58  EFB1  F00D         	goto	u5510
  2618  001B5C                     u5511:
  2619  001B5C  FFFF               	dw	65535	; assembler added errata NOP
  2620  001B5E  EFBE  F00D         	goto	l4977
  2621  001B62                     u5510:
  2622  001B62  FFFF               	dw	65535	; assembler added errata NOP
  2623  001B64  0E75               	movlw	low _input_str
  2624  001B66  6E10               	movwf	atoi@s^0,c
  2625  001B68  0E00               	movlw	high _input_str
  2626  001B6A  6E11               	movwf	(atoi@s+1)^0,c
  2627  001B6C  EC41  F00E         	call	_atoi	;wreg free
  2628  001B70  C010  F0D7         	movff	?_atoi,_X_Place_D
  2629  001B74  C011  F0D8         	movff	?_atoi+1,_X_Place_D+1
  2630  001B78  0E00               	movlw	0
  2631  001B7A  6E74               	movwf	_New_char_RX^0,c
  2632  001B7C                     l4977:
  2633  001B7C  FFFF               	dw	65535	; assembler added errata NOP
  2634                           
  2635                           ;main.c: 345:     print_string("Enter the place position Y:");
  2636  001B7E  0E90               	movlw	low STR_6
  2637  001B80  6E0A               	movwf	print_string@strng^0,c
  2638  001B82  0E7F               	movlw	high STR_6
  2639  001B84  6E0B               	movwf	(print_string@strng+1)^0,c
  2640  001B86  EC8A  F015         	call	_print_string	;wreg free
  2641  001B8A                     
  2642                           ;main.c: 346:     if(New_char_RX){Y_Place_D=(atoi(input_str));New_char_RX=0;}
  2643  001B8A  5074               	movf	_New_char_RX^0,w,c
  2644  001B8C  B4D8               	btfsc	status,2,c
  2645  001B8E  EFCB  F00D         	goto	u5521
  2646  001B92  EFCE  F00D         	goto	u5520
  2647  001B96                     u5521:
  2648  001B96  FFFF               	dw	65535	; assembler added errata NOP
  2649  001B98  EFDB  F00D         	goto	l4985
  2650  001B9C                     u5520:
  2651  001B9C  FFFF               	dw	65535	; assembler added errata NOP
  2652  001B9E  0E75               	movlw	low _input_str
  2653  001BA0  6E10               	movwf	atoi@s^0,c
  2654  001BA2  0E00               	movlw	high _input_str
  2655  001BA4  6E11               	movwf	(atoi@s+1)^0,c
  2656  001BA6  EC41  F00E         	call	_atoi	;wreg free
  2657  001BAA  C010  F0D5         	movff	?_atoi,_Y_Place_D
  2658  001BAE  C011  F0D6         	movff	?_atoi+1,_Y_Place_D+1
  2659  001BB2  0E00               	movlw	0
  2660  001BB4  6E74               	movwf	_New_char_RX^0,c
  2661  001BB6                     l4985:
  2662  001BB6  FFFF               	dw	65535	; assembler added errata NOP
  2663                           
  2664                           ;main.c: 347:     print_string("Enter the place orientation:");
  2665  001BB8  0E57               	movlw	low STR_7
  2666  001BBA  6E0A               	movwf	print_string@strng^0,c
  2667  001BBC  0E7F               	movlw	high STR_7
  2668  001BBE  6E0B               	movwf	(print_string@strng+1)^0,c
  2669  001BC0  EC8A  F015         	call	_print_string	;wreg free
  2670  001BC4                     
  2671                           ;main.c: 348:     if(New_char_RX){Place_Angle_D=(atoi(input_str));New_char_RX=0;}
  2672  001BC4  5074               	movf	_New_char_RX^0,w,c
  2673  001BC6  B4D8               	btfsc	status,2,c
  2674  001BC8  EFE8  F00D         	goto	u5531
  2675  001BCC  EFEB  F00D         	goto	u5530
  2676  001BD0                     u5531:
  2677  001BD0  FFFF               	dw	65535	; assembler added errata NOP
  2678  001BD2  EFF8  F00D         	goto	l4993
  2679  001BD6                     u5530:
  2680  001BD6  FFFF               	dw	65535	; assembler added errata NOP
  2681  001BD8  0E75               	movlw	low _input_str
  2682  001BDA  6E10               	movwf	atoi@s^0,c
  2683  001BDC  0E00               	movlw	high _input_str
  2684  001BDE  6E11               	movwf	(atoi@s+1)^0,c
  2685  001BE0  EC41  F00E         	call	_atoi	;wreg free
  2686  001BE4  C010  F0D3         	movff	?_atoi,_Place_Angle_D
  2687  001BE8  C011  F0D4         	movff	?_atoi+1,_Place_Angle_D+1
  2688  001BEC  0E00               	movlw	0
  2689  001BEE  6E74               	movwf	_New_char_RX^0,c
  2690  001BF0                     l4993:
  2691  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  2692                           
  2693                           ;main.c: 349:     char add_to_sequence[]="D";
  2694  001BF2  C0EB  F056         	movff	add_component@F3133,add_component@add_to_sequence
  2695  001BF6  C0EC  F057         	movff	add_component@F3133+1,add_component@add_to_sequence+1
  2696  001BFA                     
  2697                           ;main.c: 350:     strncat(sequence, add_to_sequence,1);
  2698  001BFA  0EEF               	movlw	low _sequence
  2699  001BFC  6E0D               	movwf	strncat@d^0,c
  2700  001BFE  0E00               	movlw	high _sequence
  2701  001C00  6E0E               	movwf	(strncat@d+1)^0,c
  2702  001C02  0E56               	movlw	low add_component@add_to_sequence
  2703  001C04  6E0F               	movwf	strncat@s^0,c
  2704  001C06  0E00               	movlw	high add_component@add_to_sequence
  2705  001C08  6E10               	movwf	(strncat@s+1)^0,c
  2706  001C0A  0E00               	movlw	0
  2707  001C0C  6E12               	movwf	(strncat@n+1)^0,c
  2708  001C0E  0E01               	movlw	1
  2709  001C10  6E11               	movwf	strncat@n^0,c
  2710  001C12  EC9A  F014         	call	_strncat	;wreg free
  2711                           
  2712                           ;main.c: 351:     while(!New_char_RX){
  2713  001C16  EF34  F00E         	goto	l5005
  2714  001C1A                     l4997:
  2715  001C1A  FFFF               	dw	65535	; assembler added errata NOP
  2716                           
  2717                           ;main.c: 352:         int i =0;
  2718  001C1C  0E00               	movlw	0
  2719  001C1E  6E59               	movwf	(add_component@i+1)^0,c
  2720  001C20  0E00               	movlw	0
  2721  001C22  6E58               	movwf	add_component@i^0,c
  2722  001C24                     l4999:
  2723  001C24  FFFF               	dw	65535	; assembler added errata NOP
  2724                           
  2725                           ;main.c: 354:             pick_and_place(sequence[i]);
  2726  001C26  0EEF               	movlw	low _sequence
  2727  001C28  2458               	addwf	add_component@i^0,w,c
  2728  001C2A  6ED9               	movwf	fsr2l,c
  2729  001C2C  0E00               	movlw	high _sequence
  2730  001C2E  2059               	addwfc	(add_component@i+1)^0,w,c
  2731  001C30  6EDA               	movwf	fsr2h,c
  2732  001C32  50DF               	movf	indf2,w,c
  2733  001C34  EC20  F003         	call	_pick_and_place
  2734  001C38                     
  2735                           ;main.c: 355:             i++;
  2736  001C38  4A58               	infsnz	add_component@i^0,f,c
  2737  001C3A  2A59               	incf	(add_component@i+1)^0,f,c
  2738  001C3C                     
  2739                           ;main.c: 356:         }while(sequence[i++]!='\n');
  2740  001C3C  5058               	movf	add_component@i^0,w,c
  2741  001C3E  6E53               	movwf	??_add_component^0,c
  2742  001C40  5059               	movf	(add_component@i+1)^0,w,c
  2743  001C42  6E54               	movwf	(??_add_component+1)^0,c
  2744  001C44  4A58               	infsnz	add_component@i^0,f,c
  2745  001C46  2A59               	incf	(add_component@i+1)^0,f,c
  2746  001C48  0EEF               	movlw	low _sequence
  2747  001C4A  2453               	addwf	??_add_component^0,w,c
  2748  001C4C  6ED9               	movwf	fsr2l,c
  2749  001C4E  0E00               	movlw	high _sequence
  2750  001C50  2054               	addwfc	(??_add_component+1)^0,w,c
  2751  001C52  6EDA               	movwf	fsr2h,c
  2752  001C54  0E0A               	movlw	10
  2753  001C56  18DE               	xorwf	postinc2,w,c
  2754  001C58  A4D8               	btfss	status,2,c
  2755  001C5A  EF31  F00E         	goto	u5541
  2756  001C5E  EF34  F00E         	goto	u5540
  2757  001C62                     u5541:
  2758  001C62  FFFF               	dw	65535	; assembler added errata NOP
  2759  001C64  EF12  F00E         	goto	l4999
  2760  001C68                     u5540:
  2761  001C68                     l5005:
  2762  001C68  FFFF               	dw	65535	; assembler added errata NOP
  2763                           
  2764                           ;main.c: 351:     while(!New_char_RX){
  2765  001C6A  5074               	movf	_New_char_RX^0,w,c
  2766  001C6C  B4D8               	btfsc	status,2,c
  2767  001C6E  EF3B  F00E         	goto	u5551
  2768  001C72  EF3E  F00E         	goto	u5550
  2769  001C76                     u5551:
  2770  001C76  FFFF               	dw	65535	; assembler added errata NOP
  2771  001C78  EF0D  F00E         	goto	l4997
  2772  001C7C                     u5550:
  2773  001C7C  FFFF               	dw	65535	; assembler added errata NOP
  2774  001C7E  0012               	return		;funcret
  2775  001C80  FFFF               	dw	65535	; errata NOP
  2776  001C82                     __end_of_add_component:
  2777                           	callstack 0
  2778                           
  2779 ;; *************** function _strncat *****************
  2780 ;; Defined at:
  2781 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strncat.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  d               2   12[COMRAM] PTR unsigned char 
  2784 ;;		 -> sequence(4), 
  2785 ;;  s               2   14[COMRAM] PTR const unsigned char 
  2786 ;;		 -> add_component@add_to_sequence(2), 
  2787 ;;  n               2   16[COMRAM] unsigned int 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  a               2    0        PTR unsigned char 
  2790 ;;		 -> sequence(4), 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  2   12[COMRAM] PTR unsigned char 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2800 ;;      Params:         6       0       0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0
  2803 ;;      Totals:         6       0       0       0       0       0       0
  2804 ;;Total ram usage:        6 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; Hardware stack levels required when called: 3
  2807 ;; This function calls:
  2808 ;;		_strlen
  2809 ;; This function is called by:
  2810 ;;		_add_component
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text8
  2815  002934                     __ptext8:
  2816                           	callstack 0
  2817  002934                     _strncat:
  2818                           	callstack 0
  2819  002934  FFFF               	dw	65535	; assembler added errata NOP
  2820  002936  C00D  F009         	movff	strncat@d,strlen@s
  2821  00293A  C00E  F00A         	movff	strncat@d+1,strlen@s+1
  2822  00293E  EC40  F016         	call	_strlen	;wreg free
  2823  002942  5009               	movf	?_strlen^0,w,c
  2824  002944  260D               	addwf	strncat@d^0,f,c
  2825  002946  500A               	movf	(?_strlen+1)^0,w,c
  2826  002948  220E               	addwfc	(strncat@d+1)^0,f,c
  2827  00294A  EFB9  F014         	goto	l4697
  2828  00294E                     l4689:
  2829  00294E  FFFF               	dw	65535	; assembler added errata NOP
  2830  002950  0611               	decf	strncat@n^0,f,c
  2831  002952  A0D8               	btfss	status,0,c
  2832  002954  0612               	decf	(strncat@n+1)^0,f,c
  2833  002956  C00F  FFD9         	movff	strncat@s,fsr2l
  2834  00295A  C010  FFDA         	movff	strncat@s+1,fsr2h
  2835  00295E  C00D  FFE1         	movff	strncat@d,fsr1l
  2836  002962  C00E  FFE2         	movff	strncat@d+1,fsr1h
  2837  002966  CFDF FFE7          	movff	indf2,indf1
  2838  00296A  4A0F               	infsnz	strncat@s^0,f,c
  2839  00296C  2A10               	incf	(strncat@s+1)^0,f,c
  2840  00296E  4A0D               	infsnz	strncat@d^0,f,c
  2841  002970  2A0E               	incf	(strncat@d+1)^0,f,c
  2842  002972                     l4697:
  2843  002972  FFFF               	dw	65535	; assembler added errata NOP
  2844  002974  5011               	movf	strncat@n^0,w,c
  2845  002976  1012               	iorwf	(strncat@n+1)^0,w,c
  2846  002978  B4D8               	btfsc	status,2,c
  2847  00297A  EFC1  F014         	goto	u5051
  2848  00297E  EFC4  F014         	goto	u5050
  2849  002982                     u5051:
  2850  002982  FFFF               	dw	65535	; assembler added errata NOP
  2851  002984  EFD2  F014         	goto	l4701
  2852  002988                     u5050:
  2853  002988  FFFF               	dw	65535	; assembler added errata NOP
  2854  00298A  C00F  FFD9         	movff	strncat@s,fsr2l
  2855  00298E  C010  FFDA         	movff	strncat@s+1,fsr2h
  2856  002992  50DF               	movf	indf2,w,c
  2857  002994  A4D8               	btfss	status,2,c
  2858  002996  EFCF  F014         	goto	u5061
  2859  00299A  EFD2  F014         	goto	u5060
  2860  00299E                     u5061:
  2861  00299E  FFFF               	dw	65535	; assembler added errata NOP
  2862  0029A0  EFA7  F014         	goto	l4689
  2863  0029A4                     u5060:
  2864  0029A4                     l4701:
  2865  0029A4  FFFF               	dw	65535	; assembler added errata NOP
  2866  0029A6  C00D  FFD9         	movff	strncat@d,fsr2l
  2867  0029AA  C00E  FFDA         	movff	strncat@d+1,fsr2h
  2868  0029AE  0E00               	movlw	0
  2869  0029B0  6EDF               	movwf	indf2,c
  2870  0029B2  4A0D               	infsnz	strncat@d^0,f,c
  2871  0029B4  2A0E               	incf	(strncat@d+1)^0,f,c
  2872  0029B6  0012               	return		;funcret
  2873  0029B8  FFFF               	dw	65535	; errata NOP
  2874  0029BA                     __end_of_strncat:
  2875                           	callstack 0
  2876                           
  2877 ;; *************** function _strlen *****************
  2878 ;; Defined at:
  2879 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2882 ;;		 -> sequence(4), 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  a               2   10[COMRAM] PTR const unsigned char 
  2885 ;;		 -> sequence(4), 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  2    8[COMRAM] unsigned int 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         2       0       0       0       0       0       0
  2896 ;;      Locals:         2       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0
  2898 ;;      Totals:         4       0       0       0       0       0       0
  2899 ;;Total ram usage:        4 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 2
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_remove_component
  2906 ;;		_strncat
  2907 ;;		_strrchr
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text9
  2912  002C80                     __ptext9:
  2913                           	callstack 0
  2914  002C80                     _strlen:
  2915                           	callstack 0
  2916  002C80  FFFF               	dw	65535	; assembler added errata NOP
  2917  002C82  C009  F00B         	movff	strlen@s,strlen@a
  2918  002C86  C00A  F00C         	movff	strlen@s+1,strlen@a+1
  2919  002C8A  EF4A  F016         	goto	l3947
  2920  002C8E                     l3945:
  2921  002C8E  FFFF               	dw	65535	; assembler added errata NOP
  2922  002C90  4A09               	infsnz	strlen@s^0,f,c
  2923  002C92  2A0A               	incf	(strlen@s+1)^0,f,c
  2924  002C94                     l3947:
  2925  002C94  FFFF               	dw	65535	; assembler added errata NOP
  2926  002C96  C009  FFD9         	movff	strlen@s,fsr2l
  2927  002C9A  C00A  FFDA         	movff	strlen@s+1,fsr2h
  2928  002C9E  50DF               	movf	indf2,w,c
  2929  002CA0  A4D8               	btfss	status,2,c
  2930  002CA2  EF55  F016         	goto	u3901
  2931  002CA6  EF58  F016         	goto	u3900
  2932  002CAA                     u3901:
  2933  002CAA  FFFF               	dw	65535	; assembler added errata NOP
  2934  002CAC  EF47  F016         	goto	l3945
  2935  002CB0                     u3900:
  2936  002CB0  FFFF               	dw	65535	; assembler added errata NOP
  2937  002CB2  500B               	movf	strlen@a^0,w,c
  2938  002CB4  5C09               	subwf	strlen@s^0,w,c
  2939  002CB6  6E09               	movwf	?_strlen^0,c
  2940  002CB8  500C               	movf	(strlen@a+1)^0,w,c
  2941  002CBA  580A               	subwfb	(strlen@s+1)^0,w,c
  2942  002CBC  6E0A               	movwf	(?_strlen+1)^0,c
  2943  002CBE  0012               	return		;funcret
  2944  002CC0  FFFF               	dw	65535	; errata NOP
  2945  002CC2                     __end_of_strlen:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _print_string *****************
  2949 ;; Defined at:
  2950 ;;		line 390 in file "main.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  strng           2    9[COMRAM] PTR unsigned char 
  2953 ;;		 -> STR_9(67), STR_8(60), STR_7(29), STR_6(28), 
  2954 ;;		 -> STR_5(28), STR_4(28), STR_3(27), STR_2(27), 
  2955 ;;		 -> STR_1(83), 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  i               2   13[COMRAM] int 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2967 ;;      Params:         2       0       0       0       0       0       0
  2968 ;;      Locals:         2       0       0       0       0       0       0
  2969 ;;      Temps:          2       0       0       0       0       0       0
  2970 ;;      Totals:         6       0       0       0       0       0       0
  2971 ;;Total ram usage:        6 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 3
  2974 ;; This function calls:
  2975 ;;		_serial_tx_char
  2976 ;; This function is called by:
  2977 ;;		_start_up_menu
  2978 ;;		_add_component
  2979 ;;		_remove_component
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text10
  2984  002B14                     __ptext10:
  2985                           	callstack 0
  2986  002B14                     _print_string:
  2987                           	callstack 0
  2988  002B14  FFFF               	dw	65535	; assembler added errata NOP
  2989  002B16                     
  2990                           ;main.c: 391:     for(int i =0; strng[i]!='\0'; i++){
  2991  002B16  0E00               	movlw	0
  2992  002B18  6E0F               	movwf	(print_string@i+1)^0,c
  2993  002B1A  0E00               	movlw	0
  2994  002B1C  6E0E               	movwf	print_string@i^0,c
  2995  002B1E  EFA3  F015         	goto	l4549
  2996  002B22                     l4545:
  2997  002B22  FFFF               	dw	65535	; assembler added errata NOP
  2998                           
  2999                           ;main.c: 392:         serial_tx_char(strng[i]);
  3000  002B24  500E               	movf	print_string@i^0,w,c
  3001  002B26  240A               	addwf	print_string@strng^0,w,c
  3002  002B28  6E0C               	movwf	??_print_string^0,c
  3003  002B2A  500F               	movf	(print_string@i+1)^0,w,c
  3004  002B2C  200B               	addwfc	(print_string@strng+1)^0,w,c
  3005  002B2E  6E0D               	movwf	(??_print_string+1)^0,c
  3006  002B30  C00C  FFF6         	movff	??_print_string,tblptrl
  3007  002B34  C00D  FFF7         	movff	??_print_string+1,tblptrh
  3008  002B38                     	if	0	;tblptru may be non-zero
  3009  002B38                     	endif
  3010  002B38                     	if	0	;tblptru may be non-zero
  3011  002B38                     	endif
  3012  002B38  0008               	tblrd		*
  3013  002B3A  FFFF               	dw	65535	; errata NOP
  3014  002B3C  50F5               	movf	tablat,w,c
  3015  002B3E  EC26  F017         	call	_serial_tx_char
  3016  002B42                     
  3017                           ;main.c: 393:     }
  3018  002B42  4A0E               	infsnz	print_string@i^0,f,c
  3019  002B44  2A0F               	incf	(print_string@i+1)^0,f,c
  3020  002B46                     l4549:
  3021  002B46  FFFF               	dw	65535	; assembler added errata NOP
  3022  002B48  500E               	movf	print_string@i^0,w,c
  3023  002B4A  240A               	addwf	print_string@strng^0,w,c
  3024  002B4C  6E0C               	movwf	??_print_string^0,c
  3025  002B4E  500F               	movf	(print_string@i+1)^0,w,c
  3026  002B50  200B               	addwfc	(print_string@strng+1)^0,w,c
  3027  002B52  6E0D               	movwf	(??_print_string+1)^0,c
  3028  002B54  C00C  FFF6         	movff	??_print_string,tblptrl
  3029  002B58  C00D  FFF7         	movff	??_print_string+1,tblptrh
  3030  002B5C                     	if	0	;tblptru may be non-zero
  3031  002B5C                     	endif
  3032  002B5C                     	if	0	;tblptru may be non-zero
  3033  002B5C                     	endif
  3034  002B5C  0008               	tblrd		*
  3035  002B5E  FFFF               	dw	65535	; errata NOP
  3036  002B60  50F5               	movf	tablat,w,c
  3037  002B62  0900               	iorlw	0
  3038  002B64  A4D8               	btfss	status,2,c
  3039  002B66  EFB7  F015         	goto	u4831
  3040  002B6A  EFBA  F015         	goto	u4830
  3041  002B6E                     u4831:
  3042  002B6E  FFFF               	dw	65535	; assembler added errata NOP
  3043  002B70  EF91  F015         	goto	l4545
  3044  002B74                     u4830:
  3045  002B74  FFFF               	dw	65535	; assembler added errata NOP
  3046  002B76  0012               	return		;funcret
  3047  002B78  FFFF               	dw	65535	; errata NOP
  3048  002B7A                     __end_of_print_string:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _serial_tx_char *****************
  3052 ;; Defined at:
  3053 ;;		line 44 in file "serial_rs232.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  val             1    wreg     unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  val             1    8[COMRAM] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3067 ;;      Params:         0       0       0       0       0       0       0
  3068 ;;      Locals:         1       0       0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0
  3070 ;;      Totals:         1       0       0       0       0       0       0
  3071 ;;Total ram usage:        1 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 2
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;;		_start_up_menu
  3079 ;;		_change_sequence
  3080 ;;		_print_string
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text11
  3085  002E4C                     __ptext11:
  3086                           	callstack 0
  3087  002E4C                     _serial_tx_char:
  3088                           	callstack 0
  3089  002E4C  FFFF               	dw	65535	; assembler added errata NOP
  3090                           
  3091                           ;incstack = 0
  3092                           ;serial_tx_char@val stored from wreg
  3093  002E4E  6E09               	movwf	serial_tx_char@val^0,c
  3094  002E50                     
  3095                           ;serial_rs232.c: 44: void serial_tx_char(unsigned char val);serial_rs232.c: 45: {;serial
      +                          _rs232.c: 46:   TXREG=val;
  3096  002E50  C009  FFAD         	movff	serial_tx_char@val,4013	;volatile
  3097  002E54                     l48:
  3098  002E54  FFFF               	dw	65535	; assembler added errata NOP
  3099  002E56  A2AC               	btfss	172,1,c	;volatile
  3100  002E58  EF30  F017         	goto	u3891
  3101  002E5C  EF33  F017         	goto	u3890
  3102  002E60                     u3891:
  3103  002E60  FFFF               	dw	65535	; assembler added errata NOP
  3104  002E62  EF2A  F017         	goto	l48
  3105  002E66                     u3890:
  3106  002E66  FFFF               	dw	65535	; assembler added errata NOP
  3107  002E68  0012               	return		;funcret
  3108  002E6A  FFFF               	dw	65535	; errata NOP
  3109  002E6C                     __end_of_serial_tx_char:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _pick_and_place *****************
  3113 ;; Defined at:
  3114 ;;		line 511 in file "main.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  Componnt        1    wreg     unsigned char 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  Componnt        1   81[COMRAM] unsigned char 
  3119 ;;  i               2   79[COMRAM] int 
  3120 ;;  i               2   75[COMRAM] int 
  3121 ;;  i               2   71[COMRAM] int 
  3122 ;;  i               2   69[COMRAM] int 
  3123 ;;  i               2   65[COMRAM] int 
  3124 ;;  i               2   61[COMRAM] int 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  2   69[None  ] int 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3134 ;;      Params:         0       0       0       0       0       0       0
  3135 ;;      Locals:        21       0       0       0       0       0       0
  3136 ;;      Temps:          2       0       0       0       0       0       0
  3137 ;;      Totals:        23       0       0       0       0       0       0
  3138 ;;Total ram usage:       23 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 5
  3141 ;; This function calls:
  3142 ;;		_Twister
  3143 ;;		_X_axis
  3144 ;;		_Y_axis
  3145 ;;		_Z_axis_and_Tweezer
  3146 ;;		___fldiv
  3147 ;;		___flge
  3148 ;;		___xxtofl
  3149 ;;		_direct
  3150 ;; This function is called by:
  3151 ;;		_start_up_menu
  3152 ;;		_change_sequence
  3153 ;;		_add_component
  3154 ;;		_remove_component
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text12
  3159  000640                     __ptext12:
  3160                           	callstack 0
  3161  000640                     _pick_and_place:
  3162                           	callstack 0
  3163  000640  FFFF               	dw	65535	; assembler added errata NOP
  3164                           
  3165                           ;incstack = 0
  3166                           ;pick_and_place@Componnt stored from wreg
  3167  000642  6E52               	movwf	pick_and_place@Componnt^0,c
  3168  000644                     
  3169                           ;main.c: 511: int pick_and_place(char Componnt);main.c: 512: {;main.c: 515:     if(Compo
      +                          nnt=='A')
  3170  000644  0E41               	movlw	65
  3171  000646  1852               	xorwf	pick_and_place@Componnt^0,w,c
  3172  000648  A4D8               	btfss	status,2,c
  3173  00064A  EF29  F003         	goto	u4841
  3174  00064E  EF2C  F003         	goto	u4840
  3175  000652                     u4841:
  3176  000652  FFFF               	dw	65535	; assembler added errata NOP
  3177  000654  EF47  F003         	goto	l4555
  3178  000658                     u4840:
  3179  000658  FFFF               	dw	65535	; assembler added errata NOP
  3180  00065A                     
  3181                           ;main.c: 516:     {;main.c: 517:         X_Pick=3;
  3182  00065A  0E00               	movlw	0
  3183  00065C  6E6E               	movwf	(_X_Pick+1)^0,c
  3184  00065E  0E03               	movlw	3
  3185  000660  6E6D               	movwf	_X_Pick^0,c
  3186                           
  3187                           ;main.c: 518:         Y_Pick=4;
  3188  000662  0E00               	movlw	0
  3189  000664  6E6A               	movwf	(_Y_Pick+1)^0,c
  3190  000666  0E04               	movlw	4
  3191  000668  6E69               	movwf	_Y_Pick^0,c
  3192                           
  3193                           ;main.c: 521:         Pick_Angle=0;
  3194  00066A  0E00               	movlw	0
  3195  00066C  6E66               	movwf	(_Pick_Angle+1)^0,c
  3196  00066E  0E00               	movlw	0
  3197  000670  6E65               	movwf	_Pick_Angle^0,c
  3198                           
  3199                           ;main.c: 524:         X_Place=17;
  3200  000672  0E00               	movlw	0
  3201  000674  6E6C               	movwf	(_X_Place+1)^0,c
  3202  000676  0E11               	movlw	17
  3203  000678  6E6B               	movwf	_X_Place^0,c
  3204                           
  3205                           ;main.c: 525:         Y_Place=5;
  3206  00067A  0E00               	movlw	0
  3207  00067C  6E68               	movwf	(_Y_Place+1)^0,c
  3208  00067E  0E05               	movlw	5
  3209  000680  6E67               	movwf	_Y_Place^0,c
  3210                           
  3211                           ;main.c: 528:         Place_Angle=270;
  3212  000682  0E01               	movlw	1
  3213  000684  6E64               	movwf	(_Place_Angle+1)^0,c
  3214  000686  0E0E               	movlw	14
  3215  000688  6E63               	movwf	_Place_Angle^0,c
  3216                           
  3217                           ;main.c: 530:     }
  3218  00068A  EFB9  F003         	goto	l4567
  3219  00068E                     l4555:
  3220  00068E  FFFF               	dw	65535	; assembler added errata NOP
  3221  000690  0E42               	movlw	66
  3222  000692  1852               	xorwf	pick_and_place@Componnt^0,w,c
  3223  000694  A4D8               	btfss	status,2,c
  3224  000696  EF4F  F003         	goto	u4851
  3225  00069A  EF52  F003         	goto	u4850
  3226  00069E                     u4851:
  3227  00069E  FFFF               	dw	65535	; assembler added errata NOP
  3228  0006A0  EF6D  F003         	goto	l4559
  3229  0006A4                     u4850:
  3230  0006A4  FFFF               	dw	65535	; assembler added errata NOP
  3231  0006A6                     
  3232                           ;main.c: 532:         X_Pick=3;
  3233  0006A6  0E00               	movlw	0
  3234  0006A8  6E6E               	movwf	(_X_Pick+1)^0,c
  3235  0006AA  0E03               	movlw	3
  3236  0006AC  6E6D               	movwf	_X_Pick^0,c
  3237                           
  3238                           ;main.c: 533:         Y_Pick=10;
  3239  0006AE  0E00               	movlw	0
  3240  0006B0  6E6A               	movwf	(_Y_Pick+1)^0,c
  3241  0006B2  0E0A               	movlw	10
  3242  0006B4  6E69               	movwf	_Y_Pick^0,c
  3243                           
  3244                           ;main.c: 536:         Pick_Angle=90;
  3245  0006B6  0E00               	movlw	0
  3246  0006B8  6E66               	movwf	(_Pick_Angle+1)^0,c
  3247  0006BA  0E5A               	movlw	90
  3248  0006BC  6E65               	movwf	_Pick_Angle^0,c
  3249                           
  3250                           ;main.c: 539:         X_Place=10;
  3251  0006BE  0E00               	movlw	0
  3252  0006C0  6E6C               	movwf	(_X_Place+1)^0,c
  3253  0006C2  0E0A               	movlw	10
  3254  0006C4  6E6B               	movwf	_X_Place^0,c
  3255                           
  3256                           ;main.c: 540:         Y_Place=5;
  3257  0006C6  0E00               	movlw	0
  3258  0006C8  6E68               	movwf	(_Y_Place+1)^0,c
  3259  0006CA  0E05               	movlw	5
  3260  0006CC  6E67               	movwf	_Y_Place^0,c
  3261                           
  3262                           ;main.c: 543:         Place_Angle=180;
  3263  0006CE  0E00               	movlw	0
  3264  0006D0  6E64               	movwf	(_Place_Angle+1)^0,c
  3265  0006D2  0EB4               	movlw	180
  3266  0006D4  6E63               	movwf	_Place_Angle^0,c
  3267                           
  3268                           ;main.c: 545:     }
  3269  0006D6  EFB9  F003         	goto	l4567
  3270  0006DA                     l4559:
  3271  0006DA  FFFF               	dw	65535	; assembler added errata NOP
  3272  0006DC  0E43               	movlw	67
  3273  0006DE  1852               	xorwf	pick_and_place@Componnt^0,w,c
  3274  0006E0  A4D8               	btfss	status,2,c
  3275  0006E2  EF75  F003         	goto	u4861
  3276  0006E6  EF78  F003         	goto	u4860
  3277  0006EA                     u4861:
  3278  0006EA  FFFF               	dw	65535	; assembler added errata NOP
  3279  0006EC  EF93  F003         	goto	l4563
  3280  0006F0                     u4860:
  3281  0006F0  FFFF               	dw	65535	; assembler added errata NOP
  3282  0006F2                     
  3283                           ;main.c: 547:         X_Pick=3;
  3284  0006F2  0E00               	movlw	0
  3285  0006F4  6E6E               	movwf	(_X_Pick+1)^0,c
  3286  0006F6  0E03               	movlw	3
  3287  0006F8  6E6D               	movwf	_X_Pick^0,c
  3288                           
  3289                           ;main.c: 548:         Y_Pick=15;
  3290  0006FA  0E00               	movlw	0
  3291  0006FC  6E6A               	movwf	(_Y_Pick+1)^0,c
  3292  0006FE  0E0F               	movlw	15
  3293  000700  6E69               	movwf	_Y_Pick^0,c
  3294                           
  3295                           ;main.c: 551:         Pick_Angle=90;
  3296  000702  0E00               	movlw	0
  3297  000704  6E66               	movwf	(_Pick_Angle+1)^0,c
  3298  000706  0E5A               	movlw	90
  3299  000708  6E65               	movwf	_Pick_Angle^0,c
  3300                           
  3301                           ;main.c: 554:         X_Place=16;
  3302  00070A  0E00               	movlw	0
  3303  00070C  6E6C               	movwf	(_X_Place+1)^0,c
  3304  00070E  0E10               	movlw	16
  3305  000710  6E6B               	movwf	_X_Place^0,c
  3306                           
  3307                           ;main.c: 555:         Y_Place=14;
  3308  000712  0E00               	movlw	0
  3309  000714  6E68               	movwf	(_Y_Place+1)^0,c
  3310  000716  0E0E               	movlw	14
  3311  000718  6E67               	movwf	_Y_Place^0,c
  3312                           
  3313                           ;main.c: 558:         Place_Angle=270;
  3314  00071A  0E01               	movlw	1
  3315  00071C  6E64               	movwf	(_Place_Angle+1)^0,c
  3316  00071E  0E0E               	movlw	14
  3317  000720  6E63               	movwf	_Place_Angle^0,c
  3318                           
  3319                           ;main.c: 560:     }
  3320  000722  EFB9  F003         	goto	l4567
  3321  000726                     l4563:
  3322  000726  FFFF               	dw	65535	; assembler added errata NOP
  3323  000728  0E44               	movlw	68
  3324  00072A  1852               	xorwf	pick_and_place@Componnt^0,w,c
  3325  00072C  A4D8               	btfss	status,2,c
  3326  00072E  EF9B  F003         	goto	u4871
  3327  000732  EF9E  F003         	goto	u4870
  3328  000736                     u4871:
  3329  000736  FFFF               	dw	65535	; assembler added errata NOP
  3330  000738  EFB9  F003         	goto	l280
  3331  00073C                     u4870:
  3332  00073C  FFFF               	dw	65535	; assembler added errata NOP
  3333  00073E                     
  3334                           ;main.c: 562:         X_Pick=X_Pick_D;
  3335  00073E  C05B  F06D         	movff	_X_Pick_D,_X_Pick
  3336  000742  C05C  F06E         	movff	_X_Pick_D+1,_X_Pick+1
  3337                           
  3338                           ;main.c: 563:         Y_Pick=Y_Pick_D;
  3339  000746  C0DB  F069         	movff	_Y_Pick_D,_Y_Pick
  3340  00074A  C0DC  F06A         	movff	_Y_Pick_D+1,_Y_Pick+1
  3341                           
  3342                           ;main.c: 566:         Pick_Angle=Pick_Angle_D;
  3343  00074E  C0D9  F065         	movff	_Pick_Angle_D,_Pick_Angle
  3344  000752  C0DA  F066         	movff	_Pick_Angle_D+1,_Pick_Angle+1
  3345                           
  3346                           ;main.c: 569:         X_Place=X_Place_D;
  3347  000756  C0D7  F06B         	movff	_X_Place_D,_X_Place
  3348  00075A  C0D8  F06C         	movff	_X_Place_D+1,_X_Place+1
  3349                           
  3350                           ;main.c: 570:         Y_Place=Y_Place_D;
  3351  00075E  C0D5  F067         	movff	_Y_Place_D,_Y_Place
  3352  000762  C0D6  F068         	movff	_Y_Place_D+1,_Y_Place+1
  3353                           
  3354                           ;main.c: 573:         Place_Angle=Place_Angle_D;
  3355  000766  C0D3  F063         	movff	_Place_Angle_D,_Place_Angle
  3356  00076A  C0D4  F064         	movff	_Place_Angle_D+1,_Place_Angle+1
  3357                           
  3358                           ;main.c: 575:     }
  3359  00076E  EFB9  F003         	goto	l4567
  3360  000772                     l280:
  3361  000772                     l4567:
  3362  000772  FFFF               	dw	65535	; assembler added errata NOP
  3363                           
  3364                           ;main.c: 580:     X_dir=direct(X_diff,X_Pick);
  3365  000774  C061  F009         	movff	_X_diff,direct@prev
  3366  000778  C062  F00A         	movff	_X_diff+1,direct@prev+1
  3367  00077C  C06D  F00B         	movff	_X_Pick,direct@next
  3368  000780  C06E  F00C         	movff	_X_Pick+1,direct@next+1
  3369  000784  ECA3  F016         	call	_direct	;wreg free
  3370  000788  5009               	movf	?_direct^0,w,c
  3371  00078A  6E73               	movwf	_X_dir^0,c
  3372                           
  3373                           ;main.c: 581:     Y_dir=direct(Y_diff, Y_Pick);
  3374  00078C  C05F  F009         	movff	_Y_diff,direct@prev
  3375  000790  C060  F00A         	movff	_Y_diff+1,direct@prev+1
  3376  000794  C069  F00B         	movff	_Y_Pick,direct@next
  3377  000798  C06A  F00C         	movff	_Y_Pick+1,direct@next+1
  3378  00079C  ECA3  F016         	call	_direct	;wreg free
  3379  0007A0  5009               	movf	?_direct^0,w,c
  3380  0007A2  6E72               	movwf	_Y_dir^0,c
  3381                           
  3382                           ;main.c: 582:     Rot_dir = direct(Angle_diff,Pick_Angle);
  3383  0007A4  C05D  F009         	movff	_Angle_diff,direct@prev
  3384  0007A8  C05E  F00A         	movff	_Angle_diff+1,direct@prev+1
  3385  0007AC  C065  F00B         	movff	_Pick_Angle,direct@next
  3386  0007B0  C066  F00C         	movff	_Pick_Angle+1,direct@next+1
  3387  0007B4  ECA3  F016         	call	_direct	;wreg free
  3388  0007B8  5009               	movf	?_direct^0,w,c
  3389  0007BA  6E71               	movwf	_Rot_dir^0,c
  3390  0007BC                     
  3391                           ;main.c: 583:     for(int i = 0; i<(((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_Pick-X_
      +                          diff))); i++){X_axis(X_dir);}
  3392  0007BC  0E00               	movlw	0
  3393  0007BE  6E3F               	movwf	(pick_and_place@i+1)^0,c
  3394  0007C0  0E00               	movlw	0
  3395  0007C2  6E3E               	movwf	pick_and_place@i^0,c
  3396  0007C4  EFEA  F003         	goto	l4575
  3397  0007C8                     l4571:
  3398  0007C8  FFFF               	dw	65535	; assembler added errata NOP
  3399  0007CA  5073               	movf	_X_dir^0,w,c
  3400  0007CC  EC19  F013         	call	_X_axis
  3401  0007D0  4A3E               	infsnz	pick_and_place@i^0,f,c
  3402  0007D2  2A3F               	incf	(pick_and_place@i+1)^0,f,c
  3403  0007D4                     l4575:
  3404  0007D4  FFFF               	dw	65535	; assembler added errata NOP
  3405  0007D6  5061               	movf	_X_diff^0,w,c
  3406  0007D8  5C6D               	subwf	_X_Pick^0,w,c
  3407  0007DA  6E3C               	movwf	??_pick_and_place^0,c
  3408  0007DC  5062               	movf	(_X_diff+1)^0,w,c
  3409  0007DE  586E               	subwfb	(_X_Pick+1)^0,w,c
  3410  0007E0  6E3D               	movwf	(??_pick_and_place+1)^0,c
  3411  0007E2  BE3D               	btfsc	(??_pick_and_place+1)^0,7,c
  3412  0007E4  EFFF  F003         	goto	u4880
  3413  0007E8  503D               	movf	(??_pick_and_place+1)^0,w,c
  3414  0007EA  E106               	bnz	u4881
  3415  0007EC  043C               	decf	??_pick_and_place^0,w,c
  3416  0007EE  B0D8               	btfsc	status,0,c
  3417  0007F0  EFFC  F003         	goto	u4881
  3418  0007F4  EFFF  F003         	goto	u4880
  3419  0007F8                     u4881:
  3420  0007F8  FFFF               	dw	65535	; assembler added errata NOP
  3421  0007FA  EF10  F004         	goto	l4579
  3422  0007FE                     u4880:
  3423  0007FE  FFFF               	dw	65535	; assembler added errata NOP
  3424  000800  5061               	movf	_X_diff^0,w,c
  3425  000802  5C6D               	subwf	_X_Pick^0,w,c
  3426  000804  6E3C               	movwf	??_pick_and_place^0,c
  3427  000806  5062               	movf	(_X_diff+1)^0,w,c
  3428  000808  586E               	subwfb	(_X_Pick+1)^0,w,c
  3429  00080A  6E3D               	movwf	(??_pick_and_place+1)^0,c
  3430  00080C  1E3C               	comf	??_pick_and_place^0,f,c
  3431  00080E  1E3D               	comf	(??_pick_and_place+1)^0,f,c
  3432  000810  4A3C               	infsnz	??_pick_and_place^0,f,c
  3433  000812  2A3D               	incf	(??_pick_and_place+1)^0,f,c
  3434  000814  C03C  F040         	movff	??_pick_and_place,_pick_and_place$584
  3435  000818  C03D  F041         	movff	??_pick_and_place+1,_pick_and_place$584+1
  3436  00081C  EF17  F004         	goto	l290
  3437  000820                     l4579:
  3438  000820  FFFF               	dw	65535	; assembler added errata NOP
  3439  000822  5061               	movf	_X_diff^0,w,c
  3440  000824  5C6D               	subwf	_X_Pick^0,w,c
  3441  000826  6E40               	movwf	_pick_and_place$584^0,c
  3442  000828  5062               	movf	(_X_diff+1)^0,w,c
  3443  00082A  586E               	subwfb	(_X_Pick+1)^0,w,c
  3444  00082C  6E41               	movwf	(_pick_and_place$584+1)^0,c
  3445  00082E                     l290:
  3446  00082E  FFFF               	dw	65535	; assembler added errata NOP
  3447  000830  5040               	movf	_pick_and_place$584^0,w,c
  3448  000832  5C3E               	subwf	pick_and_place@i^0,w,c
  3449  000834  503F               	movf	(pick_and_place@i+1)^0,w,c
  3450  000836  0A80               	xorlw	128
  3451  000838  6E3C               	movwf	??_pick_and_place^0,c
  3452  00083A  5041               	movf	(_pick_and_place$584+1)^0,w,c
  3453  00083C  0A80               	xorlw	128
  3454  00083E  583C               	subwfb	??_pick_and_place^0,w,c
  3455  000840  A0D8               	btfss	status,0,c
  3456  000842  EF25  F004         	goto	u4891
  3457  000846  EF28  F004         	goto	u4890
  3458  00084A                     u4891:
  3459  00084A  FFFF               	dw	65535	; assembler added errata NOP
  3460  00084C  EFE4  F003         	goto	l4571
  3461  000850                     u4890:
  3462  000850  FFFF               	dw	65535	; assembler added errata NOP
  3463  000852                     
  3464                           ;main.c: 584:     for(int i = 0; i<(((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_Pick-Y_
      +                          diff))); i++){Y_axis(Y_dir);}
  3465  000852  0E00               	movlw	0
  3466  000854  6E43               	movwf	(pick_and_place@i_585+1)^0,c
  3467  000856  0E00               	movlw	0
  3468  000858  6E42               	movwf	pick_and_place@i_585^0,c
  3469  00085A  EF35  F004         	goto	l4587
  3470  00085E                     l4583:
  3471  00085E  FFFF               	dw	65535	; assembler added errata NOP
  3472  000860  5072               	movf	_Y_dir^0,w,c
  3473  000862  ECAF  F012         	call	_Y_axis
  3474  000866  4A42               	infsnz	pick_and_place@i_585^0,f,c
  3475  000868  2A43               	incf	(pick_and_place@i_585+1)^0,f,c
  3476  00086A                     l4587:
  3477  00086A  FFFF               	dw	65535	; assembler added errata NOP
  3478  00086C  505F               	movf	_Y_diff^0,w,c
  3479  00086E  5C69               	subwf	_Y_Pick^0,w,c
  3480  000870  6E3C               	movwf	??_pick_and_place^0,c
  3481  000872  5060               	movf	(_Y_diff+1)^0,w,c
  3482  000874  586A               	subwfb	(_Y_Pick+1)^0,w,c
  3483  000876  6E3D               	movwf	(??_pick_and_place+1)^0,c
  3484  000878  BE3D               	btfsc	(??_pick_and_place+1)^0,7,c
  3485  00087A  EF4A  F004         	goto	u4900
  3486  00087E  503D               	movf	(??_pick_and_place+1)^0,w,c
  3487  000880  E106               	bnz	u4901
  3488  000882  043C               	decf	??_pick_and_place^0,w,c
  3489  000884  B0D8               	btfsc	status,0,c
  3490  000886  EF47  F004         	goto	u4901
  3491  00088A  EF4A  F004         	goto	u4900
  3492  00088E                     u4901:
  3493  00088E  FFFF               	dw	65535	; assembler added errata NOP
  3494  000890  EF5B  F004         	goto	l4591
  3495  000894                     u4900:
  3496  000894  FFFF               	dw	65535	; assembler added errata NOP
  3497  000896  505F               	movf	_Y_diff^0,w,c
  3498  000898  5C69               	subwf	_Y_Pick^0,w,c
  3499  00089A  6E3C               	movwf	??_pick_and_place^0,c
  3500  00089C  5060               	movf	(_Y_diff+1)^0,w,c
  3501  00089E  586A               	subwfb	(_Y_Pick+1)^0,w,c
  3502  0008A0  6E3D               	movwf	(??_pick_and_place+1)^0,c
  3503  0008A2  1E3C               	comf	??_pick_and_place^0,f,c
  3504  0008A4  1E3D               	comf	(??_pick_and_place+1)^0,f,c
  3505  0008A6  4A3C               	infsnz	??_pick_and_place^0,f,c
  3506  0008A8  2A3D               	incf	(??_pick_and_place+1)^0,f,c
  3507  0008AA  C03C  F044         	movff	??_pick_and_place,_pick_and_place$587
  3508  0008AE  C03D  F045         	movff	??_pick_and_place+1,_pick_and_place$587+1
  3509  0008B2  EF62  F004         	goto	l297
  3510  0008B6                     l4591:
  3511  0008B6  FFFF               	dw	65535	; assembler added errata NOP
  3512  0008B8  505F               	movf	_Y_diff^0,w,c
  3513  0008BA  5C69               	subwf	_Y_Pick^0,w,c
  3514  0008BC  6E44               	movwf	_pick_and_place$587^0,c
  3515  0008BE  5060               	movf	(_Y_diff+1)^0,w,c
  3516  0008C0  586A               	subwfb	(_Y_Pick+1)^0,w,c
  3517  0008C2  6E45               	movwf	(_pick_and_place$587+1)^0,c
  3518  0008C4                     l297:
  3519  0008C4  FFFF               	dw	65535	; assembler added errata NOP
  3520  0008C6  5044               	movf	_pick_and_place$587^0,w,c
  3521  0008C8  5C42               	subwf	pick_and_place@i_585^0,w,c
  3522  0008CA  5043               	movf	(pick_and_place@i_585+1)^0,w,c
  3523  0008CC  0A80               	xorlw	128
  3524  0008CE  6E3C               	movwf	??_pick_and_place^0,c
  3525  0008D0  5045               	movf	(_pick_and_place$587+1)^0,w,c
  3526  0008D2  0A80               	xorlw	128
  3527  0008D4  583C               	subwfb	??_pick_and_place^0,w,c
  3528  0008D6  A0D8               	btfss	status,0,c
  3529  0008D8  EF70  F004         	goto	u4911
  3530  0008DC  EF73  F004         	goto	u4910
  3531  0008E0                     u4911:
  3532  0008E0  FFFF               	dw	65535	; assembler added errata NOP
  3533  0008E2  EF2F  F004         	goto	l4583
  3534  0008E6                     u4910:
  3535  0008E6  FFFF               	dw	65535	; assembler added errata NOP
  3536  0008E8                     
  3537                           ;main.c: 585:     for(int i = 0; i<((Angle_diff-Pick_Angle)/3.6); i++){Twister(Rot_dir);
      +                          }
  3538  0008E8  0E00               	movlw	0
  3539  0008EA  6E47               	movwf	(pick_and_place@i_588+1)^0,c
  3540  0008EC  0E00               	movlw	0
  3541  0008EE  6E46               	movwf	pick_and_place@i_588^0,c
  3542  0008F0  EF80  F004         	goto	l4599
  3543  0008F4                     l4595:
  3544  0008F4  FFFF               	dw	65535	; assembler added errata NOP
  3545  0008F6  5071               	movf	_Rot_dir^0,w,c
  3546  0008F8  ECE9  F013         	call	_Twister
  3547  0008FC  4A46               	infsnz	pick_and_place@i_588^0,f,c
  3548  0008FE  2A47               	incf	(pick_and_place@i_588+1)^0,f,c
  3549  000900                     l4599:
  3550  000900  FFFF               	dw	65535	; assembler added errata NOP
  3551  000902  C046  F009         	movff	pick_and_place@i_588,___xxtofl@val
  3552  000906  C047  F00A         	movff	pick_and_place@i_588+1,___xxtofl@val+1
  3553  00090A  0E00               	movlw	0
  3554  00090C  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  3555  00090E  0EFF               	movlw	-1
  3556  000910  6E0B               	movwf	(___xxtofl@val+2)^0,c
  3557  000912  6E0C               	movwf	(___xxtofl@val+3)^0,c
  3558  000914  0E01               	movlw	1
  3559  000916  EC4E  F00C         	call	___xxtofl
  3560  00091A  C009  F030         	movff	?___xxtofl,___flge@ff1
  3561  00091E  C00A  F031         	movff	?___xxtofl+1,___flge@ff1+1
  3562  000922  C00B  F032         	movff	?___xxtofl+2,___flge@ff1+2
  3563  000926  C00C  F033         	movff	?___xxtofl+3,___flge@ff1+3
  3564  00092A  0E66               	movlw	102
  3565  00092C  6E1B               	movwf	___fldiv@a^0,c
  3566  00092E  0E66               	movlw	102
  3567  000930  6E1C               	movwf	(___fldiv@a+1)^0,c
  3568  000932  0E66               	movlw	102
  3569  000934  6E1D               	movwf	(___fldiv@a+2)^0,c
  3570  000936  0E40               	movlw	64
  3571  000938  6E1E               	movwf	(___fldiv@a+3)^0,c
  3572  00093A  5065               	movf	_Pick_Angle^0,w,c
  3573  00093C  5C5D               	subwf	_Angle_diff^0,w,c
  3574  00093E  6E3C               	movwf	??_pick_and_place^0,c
  3575  000940  5066               	movf	(_Pick_Angle+1)^0,w,c
  3576  000942  585E               	subwfb	(_Angle_diff+1)^0,w,c
  3577  000944  6E3D               	movwf	(??_pick_and_place+1)^0,c
  3578  000946  C03C  F009         	movff	??_pick_and_place,___xxtofl@val
  3579  00094A  C03D  F00A         	movff	??_pick_and_place+1,___xxtofl@val+1
  3580  00094E  0E00               	movlw	0
  3581  000950  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  3582  000952  0EFF               	movlw	-1
  3583  000954  6E0B               	movwf	(___xxtofl@val+2)^0,c
  3584  000956  6E0C               	movwf	(___xxtofl@val+3)^0,c
  3585  000958  0E01               	movlw	1
  3586  00095A  EC4E  F00C         	call	___xxtofl
  3587  00095E  C009  F017         	movff	?___xxtofl,___fldiv@b
  3588  000962  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  3589  000966  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  3590  00096A  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  3591  00096E  EC42  F008         	call	___fldiv	;wreg free
  3592  000972  C017  F034         	movff	?___fldiv,___flge@ff2
  3593  000976  C018  F035         	movff	?___fldiv+1,___flge@ff2+1
  3594  00097A  C019  F036         	movff	?___fldiv+2,___flge@ff2+2
  3595  00097E  C01A  F037         	movff	?___fldiv+3,___flge@ff2+3
  3596  000982  EC34  F011         	call	___flge	;wreg free
  3597  000986  A0D8               	btfss	status,0,c
  3598  000988  EFC8  F004         	goto	u4921
  3599  00098C  EFCB  F004         	goto	u4920
  3600  000990                     u4921:
  3601  000990  FFFF               	dw	65535	; assembler added errata NOP
  3602  000992  EF7A  F004         	goto	l4595
  3603  000996                     u4920:
  3604  000996  FFFF               	dw	65535	; assembler added errata NOP
  3605  000998                     
  3606                           ;main.c: 587:         Z_axis_and_Tweezer();
  3607  000998  EC1E  F015         	call	_Z_axis_and_Tweezer	;wreg free
  3608                           
  3609                           ;main.c: 592:     X_dir=direct(X_Pick,X_Place);
  3610  00099C  C06D  F009         	movff	_X_Pick,direct@prev
  3611  0009A0  C06E  F00A         	movff	_X_Pick+1,direct@prev+1
  3612  0009A4  C06B  F00B         	movff	_X_Place,direct@next
  3613  0009A8  C06C  F00C         	movff	_X_Place+1,direct@next+1
  3614  0009AC  ECA3  F016         	call	_direct	;wreg free
  3615  0009B0  5009               	movf	?_direct^0,w,c
  3616  0009B2  6E73               	movwf	_X_dir^0,c
  3617                           
  3618                           ;main.c: 593:     Y_dir=direct(Y_Pick,Y_Place);
  3619  0009B4  C069  F009         	movff	_Y_Pick,direct@prev
  3620  0009B8  C06A  F00A         	movff	_Y_Pick+1,direct@prev+1
  3621  0009BC  C067  F00B         	movff	_Y_Place,direct@next
  3622  0009C0  C068  F00C         	movff	_Y_Place+1,direct@next+1
  3623  0009C4  ECA3  F016         	call	_direct	;wreg free
  3624  0009C8  5009               	movf	?_direct^0,w,c
  3625  0009CA  6E72               	movwf	_Y_dir^0,c
  3626                           
  3627                           ;main.c: 594:     Rot_dir=direct(Pick_Angle,Place_Angle);
  3628  0009CC  C065  F009         	movff	_Pick_Angle,direct@prev
  3629  0009D0  C066  F00A         	movff	_Pick_Angle+1,direct@prev+1
  3630  0009D4  C063  F00B         	movff	_Place_Angle,direct@next
  3631  0009D8  C064  F00C         	movff	_Place_Angle+1,direct@next+1
  3632  0009DC  ECA3  F016         	call	_direct	;wreg free
  3633  0009E0  5009               	movf	?_direct^0,w,c
  3634  0009E2  6E71               	movwf	_Rot_dir^0,c
  3635  0009E4                     
  3636                           ;main.c: 596:     for(int i = 0; i<(((X_Place-X_diff) > 0 ? (X_Place-X_diff) : -(X_Place
      +                          -X_diff))); i++){X_axis(X_dir);}
  3637  0009E4  0E00               	movlw	0
  3638  0009E6  6E49               	movwf	(pick_and_place@i_590+1)^0,c
  3639  0009E8  0E00               	movlw	0
  3640  0009EA  6E48               	movwf	pick_and_place@i_590^0,c
  3641  0009EC  EFFE  F004         	goto	l4609
  3642  0009F0                     l4605:
  3643  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  3644  0009F2  5073               	movf	_X_dir^0,w,c
  3645  0009F4  EC19  F013         	call	_X_axis
  3646  0009F8  4A48               	infsnz	pick_and_place@i_590^0,f,c
  3647  0009FA  2A49               	incf	(pick_and_place@i_590+1)^0,f,c
  3648  0009FC                     l4609:
  3649  0009FC  FFFF               	dw	65535	; assembler added errata NOP
  3650  0009FE  5061               	movf	_X_diff^0,w,c
  3651  000A00  5C6B               	subwf	_X_Place^0,w,c
  3652  000A02  6E3C               	movwf	??_pick_and_place^0,c
  3653  000A04  5062               	movf	(_X_diff+1)^0,w,c
  3654  000A06  586C               	subwfb	(_X_Place+1)^0,w,c
  3655  000A08  6E3D               	movwf	(??_pick_and_place+1)^0,c
  3656  000A0A  BE3D               	btfsc	(??_pick_and_place+1)^0,7,c
  3657  000A0C  EF13  F005         	goto	u4930
  3658  000A10  503D               	movf	(??_pick_and_place+1)^0,w,c
  3659  000A12  E106               	bnz	u4931
  3660  000A14  043C               	decf	??_pick_and_place^0,w,c
  3661  000A16  B0D8               	btfsc	status,0,c
  3662  000A18  EF10  F005         	goto	u4931
  3663  000A1C  EF13  F005         	goto	u4930
  3664  000A20                     u4931:
  3665  000A20  FFFF               	dw	65535	; assembler added errata NOP
  3666  000A22  EF24  F005         	goto	l4613
  3667  000A26                     u4930:
  3668  000A26  FFFF               	dw	65535	; assembler added errata NOP
  3669  000A28  5061               	movf	_X_diff^0,w,c
  3670  000A2A  5C6B               	subwf	_X_Place^0,w,c
  3671  000A2C  6E3C               	movwf	??_pick_and_place^0,c
  3672  000A2E  5062               	movf	(_X_diff+1)^0,w,c
  3673  000A30  586C               	subwfb	(_X_Place+1)^0,w,c
  3674  000A32  6E3D               	movwf	(??_pick_and_place+1)^0,c
  3675  000A34  1E3C               	comf	??_pick_and_place^0,f,c
  3676  000A36  1E3D               	comf	(??_pick_and_place+1)^0,f,c
  3677  000A38  4A3C               	infsnz	??_pick_and_place^0,f,c
  3678  000A3A  2A3D               	incf	(??_pick_and_place+1)^0,f,c
  3679  000A3C  C03C  F04A         	movff	??_pick_and_place,_pick_and_place$591
  3680  000A40  C03D  F04B         	movff	??_pick_and_place+1,_pick_and_place$591+1
  3681  000A44  EF2B  F005         	goto	l307
  3682  000A48                     l4613:
  3683  000A48  FFFF               	dw	65535	; assembler added errata NOP
  3684  000A4A  5061               	movf	_X_diff^0,w,c
  3685  000A4C  5C6B               	subwf	_X_Place^0,w,c
  3686  000A4E  6E4A               	movwf	_pick_and_place$591^0,c
  3687  000A50  5062               	movf	(_X_diff+1)^0,w,c
  3688  000A52  586C               	subwfb	(_X_Place+1)^0,w,c
  3689  000A54  6E4B               	movwf	(_pick_and_place$591+1)^0,c
  3690  000A56                     l307:
  3691  000A56  FFFF               	dw	65535	; assembler added errata NOP
  3692  000A58  504A               	movf	_pick_and_place$591^0,w,c
  3693  000A5A  5C48               	subwf	pick_and_place@i_590^0,w,c
  3694  000A5C  5049               	movf	(pick_and_place@i_590+1)^0,w,c
  3695  000A5E  0A80               	xorlw	128
  3696  000A60  6E3C               	movwf	??_pick_and_place^0,c
  3697  000A62  504B               	movf	(_pick_and_place$591+1)^0,w,c
  3698  000A64  0A80               	xorlw	128
  3699  000A66  583C               	subwfb	??_pick_and_place^0,w,c
  3700  000A68  A0D8               	btfss	status,0,c
  3701  000A6A  EF39  F005         	goto	u4941
  3702  000A6E  EF3C  F005         	goto	u4940
  3703  000A72                     u4941:
  3704  000A72  FFFF               	dw	65535	; assembler added errata NOP
  3705  000A74  EFF8  F004         	goto	l4605
  3706  000A78                     u4940:
  3707  000A78  FFFF               	dw	65535	; assembler added errata NOP
  3708  000A7A                     
  3709                           ;main.c: 597:     for(int i = 0; i<(((Y_Place-Y_diff) > 0 ? (Y_Place-Y_diff) : -(Y_Place
      +                          -Y_diff))); i++){Y_axis(Y_dir);}
  3710  000A7A  0E00               	movlw	0
  3711  000A7C  6E4D               	movwf	(pick_and_place@i_592+1)^0,c
  3712  000A7E  0E00               	movlw	0
  3713  000A80  6E4C               	movwf	pick_and_place@i_592^0,c
  3714  000A82  EF49  F005         	goto	l4621
  3715  000A86                     l4617:
  3716  000A86  FFFF               	dw	65535	; assembler added errata NOP
  3717  000A88  5072               	movf	_Y_dir^0,w,c
  3718  000A8A  ECAF  F012         	call	_Y_axis
  3719  000A8E  4A4C               	infsnz	pick_and_place@i_592^0,f,c
  3720  000A90  2A4D               	incf	(pick_and_place@i_592+1)^0,f,c
  3721  000A92                     l4621:
  3722  000A92  FFFF               	dw	65535	; assembler added errata NOP
  3723  000A94  505F               	movf	_Y_diff^0,w,c
  3724  000A96  5C67               	subwf	_Y_Place^0,w,c
  3725  000A98  6E3C               	movwf	??_pick_and_place^0,c
  3726  000A9A  5060               	movf	(_Y_diff+1)^0,w,c
  3727  000A9C  5868               	subwfb	(_Y_Place+1)^0,w,c
  3728  000A9E  6E3D               	movwf	(??_pick_and_place+1)^0,c
  3729  000AA0  BE3D               	btfsc	(??_pick_and_place+1)^0,7,c
  3730  000AA2  EF5E  F005         	goto	u4950
  3731  000AA6  503D               	movf	(??_pick_and_place+1)^0,w,c
  3732  000AA8  E106               	bnz	u4951
  3733  000AAA  043C               	decf	??_pick_and_place^0,w,c
  3734  000AAC  B0D8               	btfsc	status,0,c
  3735  000AAE  EF5B  F005         	goto	u4951
  3736  000AB2  EF5E  F005         	goto	u4950
  3737  000AB6                     u4951:
  3738  000AB6  FFFF               	dw	65535	; assembler added errata NOP
  3739  000AB8  EF6F  F005         	goto	l4625
  3740  000ABC                     u4950:
  3741  000ABC  FFFF               	dw	65535	; assembler added errata NOP
  3742  000ABE  505F               	movf	_Y_diff^0,w,c
  3743  000AC0  5C67               	subwf	_Y_Place^0,w,c
  3744  000AC2  6E3C               	movwf	??_pick_and_place^0,c
  3745  000AC4  5060               	movf	(_Y_diff+1)^0,w,c
  3746  000AC6  5868               	subwfb	(_Y_Place+1)^0,w,c
  3747  000AC8  6E3D               	movwf	(??_pick_and_place+1)^0,c
  3748  000ACA  1E3C               	comf	??_pick_and_place^0,f,c
  3749  000ACC  1E3D               	comf	(??_pick_and_place+1)^0,f,c
  3750  000ACE  4A3C               	infsnz	??_pick_and_place^0,f,c
  3751  000AD0  2A3D               	incf	(??_pick_and_place+1)^0,f,c
  3752  000AD2  C03C  F04E         	movff	??_pick_and_place,_pick_and_place$593
  3753  000AD6  C03D  F04F         	movff	??_pick_and_place+1,_pick_and_place$593+1
  3754  000ADA  EF76  F005         	goto	l314
  3755  000ADE                     l4625:
  3756  000ADE  FFFF               	dw	65535	; assembler added errata NOP
  3757  000AE0  505F               	movf	_Y_diff^0,w,c
  3758  000AE2  5C67               	subwf	_Y_Place^0,w,c
  3759  000AE4  6E4E               	movwf	_pick_and_place$593^0,c
  3760  000AE6  5060               	movf	(_Y_diff+1)^0,w,c
  3761  000AE8  5868               	subwfb	(_Y_Place+1)^0,w,c
  3762  000AEA  6E4F               	movwf	(_pick_and_place$593+1)^0,c
  3763  000AEC                     l314:
  3764  000AEC  FFFF               	dw	65535	; assembler added errata NOP
  3765  000AEE  504E               	movf	_pick_and_place$593^0,w,c
  3766  000AF0  5C4C               	subwf	pick_and_place@i_592^0,w,c
  3767  000AF2  504D               	movf	(pick_and_place@i_592+1)^0,w,c
  3768  000AF4  0A80               	xorlw	128
  3769  000AF6  6E3C               	movwf	??_pick_and_place^0,c
  3770  000AF8  504F               	movf	(_pick_and_place$593+1)^0,w,c
  3771  000AFA  0A80               	xorlw	128
  3772  000AFC  583C               	subwfb	??_pick_and_place^0,w,c
  3773  000AFE  A0D8               	btfss	status,0,c
  3774  000B00  EF84  F005         	goto	u4961
  3775  000B04  EF87  F005         	goto	u4960
  3776  000B08                     u4961:
  3777  000B08  FFFF               	dw	65535	; assembler added errata NOP
  3778  000B0A  EF43  F005         	goto	l4617
  3779  000B0E                     u4960:
  3780  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  3781  000B10                     
  3782                           ;main.c: 598:     for(int i = 0; i<((Pick_Angle-Place_Angle)/3.6); i++){Twister(Rot_dir)
      +                          ;}
  3783  000B10  0E00               	movlw	0
  3784  000B12  6E51               	movwf	(pick_and_place@i_594+1)^0,c
  3785  000B14  0E00               	movlw	0
  3786  000B16  6E50               	movwf	pick_and_place@i_594^0,c
  3787  000B18  EF94  F005         	goto	l4633
  3788  000B1C                     l4629:
  3789  000B1C  FFFF               	dw	65535	; assembler added errata NOP
  3790  000B1E  5071               	movf	_Rot_dir^0,w,c
  3791  000B20  ECE9  F013         	call	_Twister
  3792  000B24  4A50               	infsnz	pick_and_place@i_594^0,f,c
  3793  000B26  2A51               	incf	(pick_and_place@i_594+1)^0,f,c
  3794  000B28                     l4633:
  3795  000B28  FFFF               	dw	65535	; assembler added errata NOP
  3796  000B2A  C050  F009         	movff	pick_and_place@i_594,___xxtofl@val
  3797  000B2E  C051  F00A         	movff	pick_and_place@i_594+1,___xxtofl@val+1
  3798  000B32  0E00               	movlw	0
  3799  000B34  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  3800  000B36  0EFF               	movlw	-1
  3801  000B38  6E0B               	movwf	(___xxtofl@val+2)^0,c
  3802  000B3A  6E0C               	movwf	(___xxtofl@val+3)^0,c
  3803  000B3C  0E01               	movlw	1
  3804  000B3E  EC4E  F00C         	call	___xxtofl
  3805  000B42  C009  F030         	movff	?___xxtofl,___flge@ff1
  3806  000B46  C00A  F031         	movff	?___xxtofl+1,___flge@ff1+1
  3807  000B4A  C00B  F032         	movff	?___xxtofl+2,___flge@ff1+2
  3808  000B4E  C00C  F033         	movff	?___xxtofl+3,___flge@ff1+3
  3809  000B52  0E66               	movlw	102
  3810  000B54  6E1B               	movwf	___fldiv@a^0,c
  3811  000B56  0E66               	movlw	102
  3812  000B58  6E1C               	movwf	(___fldiv@a+1)^0,c
  3813  000B5A  0E66               	movlw	102
  3814  000B5C  6E1D               	movwf	(___fldiv@a+2)^0,c
  3815  000B5E  0E40               	movlw	64
  3816  000B60  6E1E               	movwf	(___fldiv@a+3)^0,c
  3817  000B62  5063               	movf	_Place_Angle^0,w,c
  3818  000B64  5C65               	subwf	_Pick_Angle^0,w,c
  3819  000B66  6E3C               	movwf	??_pick_and_place^0,c
  3820  000B68  5064               	movf	(_Place_Angle+1)^0,w,c
  3821  000B6A  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3822  000B6C  6E3D               	movwf	(??_pick_and_place+1)^0,c
  3823  000B6E  C03C  F009         	movff	??_pick_and_place,___xxtofl@val
  3824  000B72  C03D  F00A         	movff	??_pick_and_place+1,___xxtofl@val+1
  3825  000B76  0E00               	movlw	0
  3826  000B78  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  3827  000B7A  0EFF               	movlw	-1
  3828  000B7C  6E0B               	movwf	(___xxtofl@val+2)^0,c
  3829  000B7E  6E0C               	movwf	(___xxtofl@val+3)^0,c
  3830  000B80  0E01               	movlw	1
  3831  000B82  EC4E  F00C         	call	___xxtofl
  3832  000B86  C009  F017         	movff	?___xxtofl,___fldiv@b
  3833  000B8A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  3834  000B8E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  3835  000B92  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  3836  000B96  EC42  F008         	call	___fldiv	;wreg free
  3837  000B9A  C017  F034         	movff	?___fldiv,___flge@ff2
  3838  000B9E  C018  F035         	movff	?___fldiv+1,___flge@ff2+1
  3839  000BA2  C019  F036         	movff	?___fldiv+2,___flge@ff2+2
  3840  000BA6  C01A  F037         	movff	?___fldiv+3,___flge@ff2+3
  3841  000BAA  EC34  F011         	call	___flge	;wreg free
  3842  000BAE  A0D8               	btfss	status,0,c
  3843  000BB0  EFDC  F005         	goto	u4971
  3844  000BB4  EFDF  F005         	goto	u4970
  3845  000BB8                     u4971:
  3846  000BB8  FFFF               	dw	65535	; assembler added errata NOP
  3847  000BBA  EF8E  F005         	goto	l4629
  3848  000BBE                     u4970:
  3849  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  3850  000BC0                     
  3851                           ;main.c: 599:         Z_axis_and_Tweezer();
  3852  000BC0  EC1E  F015         	call	_Z_axis_and_Tweezer	;wreg free
  3853  000BC4                     
  3854                           ;main.c: 601:     Angle_diff= Place_Angle;
  3855  000BC4  C063  F05D         	movff	_Place_Angle,_Angle_diff
  3856  000BC8  C064  F05E         	movff	_Place_Angle+1,_Angle_diff+1
  3857  000BCC                     
  3858                           ;main.c: 602:     X_diff = X_Place;
  3859  000BCC  C06B  F061         	movff	_X_Place,_X_diff
  3860  000BD0  C06C  F062         	movff	_X_Place+1,_X_diff+1
  3861  000BD4                     
  3862                           ;main.c: 603:     Y_diff = Y_Place;
  3863  000BD4  C067  F05F         	movff	_Y_Place,_Y_diff
  3864  000BD8  C068  F060         	movff	_Y_Place+1,_Y_diff+1
  3865  000BDC  0012               	return		;funcret
  3866  000BDE  FFFF               	dw	65535	; errata NOP
  3867  000BE0                     __end_of_pick_and_place:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function _direct *****************
  3871 ;; Defined at:
  3872 ;;		line 616 in file "main.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  prev            2    8[COMRAM] int 
  3875 ;;  next            2   10[COMRAM] int 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  2    8[COMRAM] int 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3887 ;;      Params:         4       0       0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0
  3889 ;;      Temps:          1       0       0       0       0       0       0
  3890 ;;      Totals:         5       0       0       0       0       0       0
  3891 ;;Total ram usage:        5 bytes
  3892 ;; Hardware stack levels used: 1
  3893 ;; Hardware stack levels required when called: 2
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_pick_and_place
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text13
  3902  002D46                     __ptext13:
  3903                           	callstack 0
  3904  002D46                     _direct:
  3905                           	callstack 0
  3906  002D46  FFFF               	dw	65535	; assembler added errata NOP
  3907  002D48                     
  3908                           ;main.c: 617:     if(prev<next){
  3909  002D48  500B               	movf	direct@next^0,w,c
  3910  002D4A  5C09               	subwf	direct@prev^0,w,c
  3911  002D4C  500A               	movf	(direct@prev+1)^0,w,c
  3912  002D4E  0A80               	xorlw	128
  3913  002D50  6E0D               	movwf	??_direct^0,c
  3914  002D52  500C               	movf	(direct@next+1)^0,w,c
  3915  002D54  0A80               	xorlw	128
  3916  002D56  580D               	subwfb	??_direct^0,w,c
  3917  002D58  B0D8               	btfsc	status,0,c
  3918  002D5A  EFB1  F016         	goto	u3971
  3919  002D5E  EFB4  F016         	goto	u3970
  3920  002D62                     u3971:
  3921  002D62  FFFF               	dw	65535	; assembler added errata NOP
  3922  002D64  EFBB  F016         	goto	l4069
  3923  002D68                     u3970:
  3924  002D68  FFFF               	dw	65535	; assembler added errata NOP
  3925  002D6A                     
  3926                           ;main.c: 618:         return 0;
  3927  002D6A  0E00               	movlw	0
  3928  002D6C  6E0A               	movwf	(?_direct+1)^0,c
  3929  002D6E  0E00               	movlw	0
  3930  002D70  6E09               	movwf	?_direct^0,c
  3931  002D72  EFC0  F016         	goto	l335
  3932  002D76                     l4069:
  3933  002D76  FFFF               	dw	65535	; assembler added errata NOP
  3934                           
  3935                           ;main.c: 621:         return 1;
  3936  002D78  0E00               	movlw	0
  3937  002D7A  6E0A               	movwf	(?_direct+1)^0,c
  3938  002D7C  0E01               	movlw	1
  3939  002D7E  6E09               	movwf	?_direct^0,c
  3940  002D80                     l335:
  3941  002D80  FFFF               	dw	65535	; assembler added errata NOP
  3942  002D82  0012               	return		;funcret
  3943  002D84  FFFF               	dw	65535	; errata NOP
  3944  002D86                     __end_of_direct:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function ___xxtofl *****************
  3948 ;; Defined at:
  3949 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  sign            1    wreg     unsigned char 
  3952 ;;  val             4    8[COMRAM] long 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  sign            1   16[COMRAM] unsigned char 
  3955 ;;  arg             4   18[COMRAM] unsigned long 
  3956 ;;  exp             1   17[COMRAM] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  4    8[COMRAM] unsigned char 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3966 ;;      Params:         4       0       0       0       0       0       0
  3967 ;;      Locals:         6       0       0       0       0       0       0
  3968 ;;      Temps:          4       0       0       0       0       0       0
  3969 ;;      Totals:        14       0       0       0       0       0       0
  3970 ;;Total ram usage:       14 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; Hardware stack levels required when called: 2
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_pick_and_place
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text14
  3981  00189C                     __ptext14:
  3982                           	callstack 0
  3983  00189C                     ___xxtofl:
  3984                           	callstack 0
  3985  00189C  FFFF               	dw	65535	; assembler added errata NOP
  3986                           
  3987                           ;incstack = 0
  3988                           ;___xxtofl@sign stored from wreg
  3989  00189E  6E11               	movwf	___xxtofl@sign^0,c
  3990  0018A0  5011               	movf	___xxtofl@sign^0,w,c
  3991  0018A2  B4D8               	btfsc	status,2,c
  3992  0018A4  EF56  F00C         	goto	u4671
  3993  0018A8  EF59  F00C         	goto	u4670
  3994  0018AC                     u4671:
  3995  0018AC  FFFF               	dw	65535	; assembler added errata NOP
  3996  0018AE  EF7E  F00C         	goto	l1011
  3997  0018B2                     u4670:
  3998  0018B2  FFFF               	dw	65535	; assembler added errata NOP
  3999  0018B4  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  4000  0018B6  EF62  F00C         	goto	u4680
  4001  0018BA  EF5F  F00C         	goto	u4681
  4002  0018BE                     u4681:
  4003  0018BE  FFFF               	dw	65535	; assembler added errata NOP
  4004  0018C0  EF7E  F00C         	goto	l1011
  4005  0018C4                     u4680:
  4006  0018C4  FFFF               	dw	65535	; assembler added errata NOP
  4007  0018C6  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  4008  0018CA  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  4009  0018CE  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  4010  0018D2  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  4011  0018D6  1E0D               	comf	??___xxtofl^0,f,c
  4012  0018D8  1E0E               	comf	(??___xxtofl+1)^0,f,c
  4013  0018DA  1E0F               	comf	(??___xxtofl+2)^0,f,c
  4014  0018DC  1E10               	comf	(??___xxtofl+3)^0,f,c
  4015  0018DE  2A0D               	incf	??___xxtofl^0,f,c
  4016  0018E0  0E00               	movlw	0
  4017  0018E2  220E               	addwfc	(??___xxtofl+1)^0,f,c
  4018  0018E4  220F               	addwfc	(??___xxtofl+2)^0,f,c
  4019  0018E6  2210               	addwfc	(??___xxtofl+3)^0,f,c
  4020  0018E8  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  4021  0018EC  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  4022  0018F0  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  4023  0018F4  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  4024  0018F8  EF87  F00C         	goto	l4471
  4025  0018FC                     l1011:
  4026  0018FC  FFFF               	dw	65535	; assembler added errata NOP
  4027  0018FE  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  4028  001902  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4029  001906  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4030  00190A  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4031  00190E                     l4471:
  4032  00190E  FFFF               	dw	65535	; assembler added errata NOP
  4033  001910  5009               	movf	___xxtofl@val^0,w,c
  4034  001912  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  4035  001914  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  4036  001916  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  4037  001918  A4D8               	btfss	status,2,c
  4038  00191A  EF91  F00C         	goto	u4691
  4039  00191E  EF94  F00C         	goto	u4690
  4040  001922                     u4691:
  4041  001922  FFFF               	dw	65535	; assembler added errata NOP
  4042  001924  EF9F  F00C         	goto	l4477
  4043  001928                     u4690:
  4044  001928  FFFF               	dw	65535	; assembler added errata NOP
  4045  00192A  0E00               	movlw	0
  4046  00192C  6E09               	movwf	?___xxtofl^0,c
  4047  00192E  0E00               	movlw	0
  4048  001930  6E0A               	movwf	(?___xxtofl+1)^0,c
  4049  001932  0E00               	movlw	0
  4050  001934  6E0B               	movwf	(?___xxtofl+2)^0,c
  4051  001936  0E00               	movlw	0
  4052  001938  6E0C               	movwf	(?___xxtofl+3)^0,c
  4053  00193A  EF47  F00D         	goto	l1014
  4054  00193E                     l4477:
  4055  00193E  FFFF               	dw	65535	; assembler added errata NOP
  4056  001940  0E96               	movlw	150
  4057  001942  6E12               	movwf	___xxtofl@exp^0,c
  4058  001944  EFAB  F00C         	goto	l4481
  4059  001948                     l4479:
  4060  001948  FFFF               	dw	65535	; assembler added errata NOP
  4061  00194A  2A12               	incf	___xxtofl@exp^0,f,c
  4062  00194C  90D8               	bcf	status,0,c
  4063  00194E  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  4064  001950  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  4065  001952  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  4066  001954  3213               	rrcf	___xxtofl@arg^0,f,c
  4067  001956                     l4481:
  4068  001956  FFFF               	dw	65535	; assembler added errata NOP
  4069  001958  0E00               	movlw	0
  4070  00195A  1413               	andwf	___xxtofl@arg^0,w,c
  4071  00195C  6E0D               	movwf	??___xxtofl^0,c
  4072  00195E  0E00               	movlw	0
  4073  001960  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  4074  001962  6E0E               	movwf	(??___xxtofl+1)^0,c
  4075  001964  0E00               	movlw	0
  4076  001966  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  4077  001968  6E0F               	movwf	(??___xxtofl+2)^0,c
  4078  00196A  0EFE               	movlw	254
  4079  00196C  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  4080  00196E  6E10               	movwf	(??___xxtofl+3)^0,c
  4081  001970  500D               	movf	??___xxtofl^0,w,c
  4082  001972  100E               	iorwf	(??___xxtofl+1)^0,w,c
  4083  001974  100F               	iorwf	(??___xxtofl+2)^0,w,c
  4084  001976  1010               	iorwf	(??___xxtofl+3)^0,w,c
  4085  001978  A4D8               	btfss	status,2,c
  4086  00197A  EFC1  F00C         	goto	u4701
  4087  00197E  EFC4  F00C         	goto	u4700
  4088  001982                     u4701:
  4089  001982  FFFF               	dw	65535	; assembler added errata NOP
  4090  001984  EFA4  F00C         	goto	l4479
  4091  001988                     u4700:
  4092  001988  FFFF               	dw	65535	; assembler added errata NOP
  4093  00198A  EFD4  F00C         	goto	l1018
  4094  00198E                     l4483:
  4095  00198E  FFFF               	dw	65535	; assembler added errata NOP
  4096  001990  2A12               	incf	___xxtofl@exp^0,f,c
  4097  001992  0E01               	movlw	1
  4098  001994  2613               	addwf	___xxtofl@arg^0,f,c
  4099  001996  0E00               	movlw	0
  4100  001998  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  4101  00199A  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  4102  00199C  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  4103  00199E  90D8               	bcf	status,0,c
  4104  0019A0  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  4105  0019A2  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  4106  0019A4  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  4107  0019A6  3213               	rrcf	___xxtofl@arg^0,f,c
  4108  0019A8                     l1018:
  4109  0019A8  FFFF               	dw	65535	; assembler added errata NOP
  4110  0019AA  0E00               	movlw	0
  4111  0019AC  1413               	andwf	___xxtofl@arg^0,w,c
  4112  0019AE  6E0D               	movwf	??___xxtofl^0,c
  4113  0019B0  0E00               	movlw	0
  4114  0019B2  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  4115  0019B4  6E0E               	movwf	(??___xxtofl+1)^0,c
  4116  0019B6  0E00               	movlw	0
  4117  0019B8  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  4118  0019BA  6E0F               	movwf	(??___xxtofl+2)^0,c
  4119  0019BC  0EFF               	movlw	255
  4120  0019BE  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  4121  0019C0  6E10               	movwf	(??___xxtofl+3)^0,c
  4122  0019C2  500D               	movf	??___xxtofl^0,w,c
  4123  0019C4  100E               	iorwf	(??___xxtofl+1)^0,w,c
  4124  0019C6  100F               	iorwf	(??___xxtofl+2)^0,w,c
  4125  0019C8  1010               	iorwf	(??___xxtofl+3)^0,w,c
  4126  0019CA  A4D8               	btfss	status,2,c
  4127  0019CC  EFEA  F00C         	goto	u4711
  4128  0019D0  EFED  F00C         	goto	u4710
  4129  0019D4                     u4711:
  4130  0019D4  FFFF               	dw	65535	; assembler added errata NOP
  4131  0019D6  EFC7  F00C         	goto	l4483
  4132  0019DA                     u4710:
  4133  0019DA  FFFF               	dw	65535	; assembler added errata NOP
  4134  0019DC  EFF7  F00C         	goto	l4491
  4135  0019E0                     l4489:
  4136  0019E0  FFFF               	dw	65535	; assembler added errata NOP
  4137  0019E2  0612               	decf	___xxtofl@exp^0,f,c
  4138  0019E4  90D8               	bcf	status,0,c
  4139  0019E6  3613               	rlcf	___xxtofl@arg^0,f,c
  4140  0019E8  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  4141  0019EA  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  4142  0019EC  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  4143  0019EE                     l4491:
  4144  0019EE  FFFF               	dw	65535	; assembler added errata NOP
  4145  0019F0  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  4146  0019F2  EFFD  F00C         	goto	u4721
  4147  0019F6  EF00  F00D         	goto	u4720
  4148  0019FA                     u4721:
  4149  0019FA  FFFF               	dw	65535	; assembler added errata NOP
  4150  0019FC  EF0A  F00D         	goto	l1025
  4151  001A00                     u4720:
  4152  001A00  FFFF               	dw	65535	; assembler added errata NOP
  4153  001A02  0E02               	movlw	2
  4154  001A04  6012               	cpfslt	___xxtofl@exp^0,c
  4155  001A06  EF07  F00D         	goto	u4731
  4156  001A0A  EF0A  F00D         	goto	u4730
  4157  001A0E                     u4731:
  4158  001A0E  FFFF               	dw	65535	; assembler added errata NOP
  4159  001A10  EFF0  F00C         	goto	l4489
  4160  001A14                     u4730:
  4161  001A14                     l1025:
  4162  001A14  FFFF               	dw	65535	; assembler added errata NOP
  4163  001A16  B012               	btfsc	___xxtofl@exp^0,0,c
  4164  001A18  EF10  F00D         	goto	u4741
  4165  001A1C  EF13  F00D         	goto	u4740
  4166  001A20                     u4741:
  4167  001A20  FFFF               	dw	65535	; assembler added errata NOP
  4168  001A22  EF15  F00D         	goto	l4497
  4169  001A26                     u4740:
  4170  001A26  FFFF               	dw	65535	; assembler added errata NOP
  4171  001A28  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  4172  001A2A                     l4497:
  4173  001A2A  FFFF               	dw	65535	; assembler added errata NOP
  4174  001A2C  90D8               	bcf	status,0,c
  4175  001A2E  3212               	rrcf	___xxtofl@exp^0,f,c
  4176  001A30  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  4177  001A34  6A0E               	clrf	(??___xxtofl+1)^0,c
  4178  001A36  6A0F               	clrf	(??___xxtofl+2)^0,c
  4179  001A38  6A10               	clrf	(??___xxtofl+3)^0,c
  4180  001A3A  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  4181  001A3E  6A0F               	clrf	(??___xxtofl+2)^0,c
  4182  001A40  6A0E               	clrf	(??___xxtofl+1)^0,c
  4183  001A42  6A0D               	clrf	??___xxtofl^0,c
  4184  001A44  500D               	movf	??___xxtofl^0,w,c
  4185  001A46  1213               	iorwf	___xxtofl@arg^0,f,c
  4186  001A48  500E               	movf	(??___xxtofl+1)^0,w,c
  4187  001A4A  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  4188  001A4C  500F               	movf	(??___xxtofl+2)^0,w,c
  4189  001A4E  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  4190  001A50  5010               	movf	(??___xxtofl+3)^0,w,c
  4191  001A52  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  4192  001A54  5011               	movf	___xxtofl@sign^0,w,c
  4193  001A56  B4D8               	btfsc	status,2,c
  4194  001A58  EF30  F00D         	goto	u4751
  4195  001A5C  EF33  F00D         	goto	u4750
  4196  001A60                     u4751:
  4197  001A60  FFFF               	dw	65535	; assembler added errata NOP
  4198  001A62  EF3E  F00D         	goto	l4507
  4199  001A66                     u4750:
  4200  001A66  FFFF               	dw	65535	; assembler added errata NOP
  4201  001A68  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  4202  001A6A  EF3C  F00D         	goto	u4760
  4203  001A6E  EF39  F00D         	goto	u4761
  4204  001A72                     u4761:
  4205  001A72  FFFF               	dw	65535	; assembler added errata NOP
  4206  001A74  EF3E  F00D         	goto	l4507
  4207  001A78                     u4760:
  4208  001A78  FFFF               	dw	65535	; assembler added errata NOP
  4209  001A7A  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  4210  001A7C                     l4507:
  4211  001A7C  FFFF               	dw	65535	; assembler added errata NOP
  4212  001A7E  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  4213  001A82  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  4214  001A86  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  4215  001A8A  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  4216  001A8E                     l1014:
  4217  001A8E  FFFF               	dw	65535	; assembler added errata NOP
  4218  001A90  0012               	return		;funcret
  4219  001A92  FFFF               	dw	65535	; errata NOP
  4220  001A94                     __end_of___xxtofl:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function ___fldiv *****************
  4224 ;; Defined at:
  4225 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  b               4   22[COMRAM] unsigned char 
  4228 ;;  a               4   26[COMRAM] unsigned char 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  grs             4   41[COMRAM] unsigned long 
  4231 ;;  rem             4   34[COMRAM] unsigned long 
  4232 ;;  new_exp         2   39[COMRAM] short 
  4233 ;;  aexp            1   46[COMRAM] unsigned char 
  4234 ;;  bexp            1   45[COMRAM] unsigned char 
  4235 ;;  sign            1   38[COMRAM] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  4   22[COMRAM] unsigned char 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4245 ;;      Params:         8       0       0       0       0       0       0
  4246 ;;      Locals:        13       0       0       0       0       0       0
  4247 ;;      Temps:          4       0       0       0       0       0       0
  4248 ;;      Totals:        25       0       0       0       0       0       0
  4249 ;;Total ram usage:       25 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; Hardware stack levels required when called: 2
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_pick_and_place
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text15
  4260  001084                     __ptext15:
  4261                           	callstack 0
  4262  001084                     ___fldiv:
  4263                           	callstack 0
  4264  001084  FFFF               	dw	65535	; assembler added errata NOP
  4265  001086  501A               	movf	(___fldiv@b+3)^0,w,c
  4266  001088  0B80               	andlw	128
  4267  00108A  6E27               	movwf	___fldiv@sign^0,c
  4268  00108C  501A               	movf	(___fldiv@b+3)^0,w,c
  4269  00108E  241A               	addwf	(___fldiv@b+3)^0,w,c
  4270  001090  6E2E               	movwf	___fldiv@bexp^0,c
  4271  001092  AE19               	btfss	(___fldiv@b+2)^0,7,c
  4272  001094  EF4E  F008         	goto	u4391
  4273  001098  EF51  F008         	goto	u4390
  4274  00109C                     u4391:
  4275  00109C  FFFF               	dw	65535	; assembler added errata NOP
  4276  00109E  EF53  F008         	goto	l4311
  4277  0010A2                     u4390:
  4278  0010A2  FFFF               	dw	65535	; assembler added errata NOP
  4279  0010A4  802E               	bsf	___fldiv@bexp^0,0,c
  4280  0010A6                     l4311:
  4281  0010A6  FFFF               	dw	65535	; assembler added errata NOP
  4282  0010A8  502E               	movf	___fldiv@bexp^0,w,c
  4283  0010AA  B4D8               	btfsc	status,2,c
  4284  0010AC  EF5A  F008         	goto	u4401
  4285  0010B0  EF5D  F008         	goto	u4400
  4286  0010B4                     u4401:
  4287  0010B4  FFFF               	dw	65535	; assembler added errata NOP
  4288  0010B6  EF76  F008         	goto	l4321
  4289  0010BA                     u4400:
  4290  0010BA  FFFF               	dw	65535	; assembler added errata NOP
  4291  0010BC  282E               	incf	___fldiv@bexp^0,w,c
  4292  0010BE  A4D8               	btfss	status,2,c
  4293  0010C0  EF64  F008         	goto	u4411
  4294  0010C4  EF67  F008         	goto	u4410
  4295  0010C8                     u4411:
  4296  0010C8  FFFF               	dw	65535	; assembler added errata NOP
  4297  0010CA  EF70  F008         	goto	l4317
  4298  0010CE                     u4410:
  4299  0010CE  FFFF               	dw	65535	; assembler added errata NOP
  4300  0010D0  0E00               	movlw	0
  4301  0010D2  6E17               	movwf	___fldiv@b^0,c
  4302  0010D4  0E00               	movlw	0
  4303  0010D6  6E18               	movwf	(___fldiv@b+1)^0,c
  4304  0010D8  0E00               	movlw	0
  4305  0010DA  6E19               	movwf	(___fldiv@b+2)^0,c
  4306  0010DC  0E00               	movlw	0
  4307  0010DE  6E1A               	movwf	(___fldiv@b+3)^0,c
  4308  0010E0                     l4317:
  4309  0010E0  FFFF               	dw	65535	; assembler added errata NOP
  4310  0010E2  8E19               	bsf	(___fldiv@b+2)^0,7,c
  4311  0010E4  0E00               	movlw	0
  4312  0010E6  6E1A               	movwf	(___fldiv@b+3)^0,c
  4313  0010E8  EF7F  F008         	goto	l4323
  4314  0010EC                     l4321:
  4315  0010EC  FFFF               	dw	65535	; assembler added errata NOP
  4316  0010EE  0E00               	movlw	0
  4317  0010F0  6E17               	movwf	___fldiv@b^0,c
  4318  0010F2  0E00               	movlw	0
  4319  0010F4  6E18               	movwf	(___fldiv@b+1)^0,c
  4320  0010F6  0E00               	movlw	0
  4321  0010F8  6E19               	movwf	(___fldiv@b+2)^0,c
  4322  0010FA  0E00               	movlw	0
  4323  0010FC  6E1A               	movwf	(___fldiv@b+3)^0,c
  4324  0010FE                     l4323:
  4325  0010FE  FFFF               	dw	65535	; assembler added errata NOP
  4326  001100  501E               	movf	(___fldiv@a+3)^0,w,c
  4327  001102  0B80               	andlw	128
  4328  001104  1A27               	xorwf	___fldiv@sign^0,f,c
  4329  001106  501E               	movf	(___fldiv@a+3)^0,w,c
  4330  001108  241E               	addwf	(___fldiv@a+3)^0,w,c
  4331  00110A  6E2F               	movwf	___fldiv@aexp^0,c
  4332  00110C  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  4333  00110E  EF8B  F008         	goto	u4421
  4334  001112  EF8E  F008         	goto	u4420
  4335  001116                     u4421:
  4336  001116  FFFF               	dw	65535	; assembler added errata NOP
  4337  001118  EF90  F008         	goto	l4331
  4338  00111C                     u4420:
  4339  00111C  FFFF               	dw	65535	; assembler added errata NOP
  4340  00111E  802F               	bsf	___fldiv@aexp^0,0,c
  4341  001120                     l4331:
  4342  001120  FFFF               	dw	65535	; assembler added errata NOP
  4343  001122  502F               	movf	___fldiv@aexp^0,w,c
  4344  001124  B4D8               	btfsc	status,2,c
  4345  001126  EF97  F008         	goto	u4431
  4346  00112A  EF9A  F008         	goto	u4430
  4347  00112E                     u4431:
  4348  00112E  FFFF               	dw	65535	; assembler added errata NOP
  4349  001130  EFB3  F008         	goto	l4341
  4350  001134                     u4430:
  4351  001134  FFFF               	dw	65535	; assembler added errata NOP
  4352  001136  282F               	incf	___fldiv@aexp^0,w,c
  4353  001138  A4D8               	btfss	status,2,c
  4354  00113A  EFA1  F008         	goto	u4441
  4355  00113E  EFA4  F008         	goto	u4440
  4356  001142                     u4441:
  4357  001142  FFFF               	dw	65535	; assembler added errata NOP
  4358  001144  EFAD  F008         	goto	l4337
  4359  001148                     u4440:
  4360  001148  FFFF               	dw	65535	; assembler added errata NOP
  4361  00114A  0E00               	movlw	0
  4362  00114C  6E1B               	movwf	___fldiv@a^0,c
  4363  00114E  0E00               	movlw	0
  4364  001150  6E1C               	movwf	(___fldiv@a+1)^0,c
  4365  001152  0E00               	movlw	0
  4366  001154  6E1D               	movwf	(___fldiv@a+2)^0,c
  4367  001156  0E00               	movlw	0
  4368  001158  6E1E               	movwf	(___fldiv@a+3)^0,c
  4369  00115A                     l4337:
  4370  00115A  FFFF               	dw	65535	; assembler added errata NOP
  4371  00115C  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  4372  00115E  0E00               	movlw	0
  4373  001160  6E1E               	movwf	(___fldiv@a+3)^0,c
  4374  001162  EFBC  F008         	goto	l4343
  4375  001166                     l4341:
  4376  001166  FFFF               	dw	65535	; assembler added errata NOP
  4377  001168  0E00               	movlw	0
  4378  00116A  6E1B               	movwf	___fldiv@a^0,c
  4379  00116C  0E00               	movlw	0
  4380  00116E  6E1C               	movwf	(___fldiv@a+1)^0,c
  4381  001170  0E00               	movlw	0
  4382  001172  6E1D               	movwf	(___fldiv@a+2)^0,c
  4383  001174  0E00               	movlw	0
  4384  001176  6E1E               	movwf	(___fldiv@a+3)^0,c
  4385  001178                     l4343:
  4386  001178  FFFF               	dw	65535	; assembler added errata NOP
  4387  00117A  501B               	movf	___fldiv@a^0,w,c
  4388  00117C  101C               	iorwf	(___fldiv@a+1)^0,w,c
  4389  00117E  101D               	iorwf	(___fldiv@a+2)^0,w,c
  4390  001180  101E               	iorwf	(___fldiv@a+3)^0,w,c
  4391  001182  A4D8               	btfss	status,2,c
  4392  001184  EFC6  F008         	goto	u4451
  4393  001188  EFC9  F008         	goto	u4450
  4394  00118C                     u4451:
  4395  00118C  FFFF               	dw	65535	; assembler added errata NOP
  4396  00118E  EFE3  F008         	goto	l4355
  4397  001192                     u4450:
  4398  001192  FFFF               	dw	65535	; assembler added errata NOP
  4399  001194  0E00               	movlw	0
  4400  001196  6E17               	movwf	___fldiv@b^0,c
  4401  001198  0E00               	movlw	0
  4402  00119A  6E18               	movwf	(___fldiv@b+1)^0,c
  4403  00119C  0E00               	movlw	0
  4404  00119E  6E19               	movwf	(___fldiv@b+2)^0,c
  4405  0011A0  0E00               	movlw	0
  4406  0011A2  6E1A               	movwf	(___fldiv@b+3)^0,c
  4407  0011A4  0E80               	movlw	128
  4408  0011A6  1219               	iorwf	(___fldiv@b+2)^0,f,c
  4409  0011A8  0E7F               	movlw	127
  4410  0011AA  121A               	iorwf	(___fldiv@b+3)^0,f,c
  4411  0011AC                     l4349:
  4412  0011AC  FFFF               	dw	65535	; assembler added errata NOP
  4413  0011AE  5027               	movf	___fldiv@sign^0,w,c
  4414  0011B0  121A               	iorwf	(___fldiv@b+3)^0,f,c
  4415  0011B2  C017  F017         	movff	___fldiv@b,?___fldiv
  4416  0011B6  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  4417  0011BA  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  4418  0011BE  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  4419  0011C2  EF58  F00A         	goto	l938
  4420  0011C6                     l4355:
  4421  0011C6  FFFF               	dw	65535	; assembler added errata NOP
  4422  0011C8  502E               	movf	___fldiv@bexp^0,w,c
  4423  0011CA  A4D8               	btfss	status,2,c
  4424  0011CC  EFEA  F008         	goto	u4461
  4425  0011D0  EFED  F008         	goto	u4460
  4426  0011D4                     u4461:
  4427  0011D4  FFFF               	dw	65535	; assembler added errata NOP
  4428  0011D6  EFF8  F008         	goto	l4363
  4429  0011DA                     u4460:
  4430  0011DA  FFFF               	dw	65535	; assembler added errata NOP
  4431  0011DC  0E00               	movlw	0
  4432  0011DE  6E17               	movwf	?___fldiv^0,c
  4433  0011E0  0E00               	movlw	0
  4434  0011E2  6E18               	movwf	(?___fldiv+1)^0,c
  4435  0011E4  0E00               	movlw	0
  4436  0011E6  6E19               	movwf	(?___fldiv+2)^0,c
  4437  0011E8  0E00               	movlw	0
  4438  0011EA  6E1A               	movwf	(?___fldiv+3)^0,c
  4439  0011EC  EF58  F00A         	goto	l938
  4440  0011F0                     l4363:
  4441  0011F0  FFFF               	dw	65535	; assembler added errata NOP
  4442  0011F2  502F               	movf	___fldiv@aexp^0,w,c
  4443  0011F4  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  4444  0011F8  6A20               	clrf	(??___fldiv+1)^0,c
  4445  0011FA  5E1F               	subwf	??___fldiv^0,f,c
  4446  0011FC  0E00               	movlw	0
  4447  0011FE  5A20               	subwfb	(??___fldiv+1)^0,f,c
  4448  001200  0E7F               	movlw	127
  4449  001202  241F               	addwf	??___fldiv^0,w,c
  4450  001204  6E28               	movwf	___fldiv@new_exp^0,c
  4451  001206  0E00               	movlw	0
  4452  001208  2020               	addwfc	(??___fldiv+1)^0,w,c
  4453  00120A  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  4454  00120C  C017  F023         	movff	___fldiv@b,___fldiv@rem
  4455  001210  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  4456  001214  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  4457  001218  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  4458  00121C  0E00               	movlw	0
  4459  00121E  6E17               	movwf	___fldiv@b^0,c
  4460  001220  0E00               	movlw	0
  4461  001222  6E18               	movwf	(___fldiv@b+1)^0,c
  4462  001224  0E00               	movlw	0
  4463  001226  6E19               	movwf	(___fldiv@b+2)^0,c
  4464  001228  0E00               	movlw	0
  4465  00122A  6E1A               	movwf	(___fldiv@b+3)^0,c
  4466  00122C  0E00               	movlw	0
  4467  00122E  6E2A               	movwf	___fldiv@grs^0,c
  4468  001230  0E00               	movlw	0
  4469  001232  6E2B               	movwf	(___fldiv@grs+1)^0,c
  4470  001234  0E00               	movlw	0
  4471  001236  6E2C               	movwf	(___fldiv@grs+2)^0,c
  4472  001238  0E00               	movlw	0
  4473  00123A  6E2D               	movwf	(___fldiv@grs+3)^0,c
  4474  00123C  0E00               	movlw	0
  4475  00123E  6E2F               	movwf	___fldiv@aexp^0,c
  4476  001240  EF64  F009         	goto	l940
  4477  001244                     l4373:
  4478  001244  FFFF               	dw	65535	; assembler added errata NOP
  4479  001246  502F               	movf	___fldiv@aexp^0,w,c
  4480  001248  B4D8               	btfsc	status,2,c
  4481  00124A  EF29  F009         	goto	u4471
  4482  00124E  EF2C  F009         	goto	u4470
  4483  001252                     u4471:
  4484  001252  FFFF               	dw	65535	; assembler added errata NOP
  4485  001254  EF47  F009         	goto	l4381
  4486  001258                     u4470:
  4487  001258  FFFF               	dw	65535	; assembler added errata NOP
  4488  00125A  90D8               	bcf	status,0,c
  4489  00125C  3623               	rlcf	___fldiv@rem^0,f,c
  4490  00125E  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  4491  001260  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  4492  001262  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  4493  001264  90D8               	bcf	status,0,c
  4494  001266  3617               	rlcf	___fldiv@b^0,f,c
  4495  001268  3618               	rlcf	(___fldiv@b+1)^0,f,c
  4496  00126A  3619               	rlcf	(___fldiv@b+2)^0,f,c
  4497  00126C  361A               	rlcf	(___fldiv@b+3)^0,f,c
  4498  00126E  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  4499  001270  EF3C  F009         	goto	u4481
  4500  001274  EF3F  F009         	goto	u4480
  4501  001278                     u4481:
  4502  001278  FFFF               	dw	65535	; assembler added errata NOP
  4503  00127A  EF41  F009         	goto	l943
  4504  00127E                     u4480:
  4505  00127E  FFFF               	dw	65535	; assembler added errata NOP
  4506  001280  8017               	bsf	___fldiv@b^0,0,c
  4507  001282                     l943:
  4508  001282  FFFF               	dw	65535	; assembler added errata NOP
  4509  001284  90D8               	bcf	status,0,c
  4510  001286  362A               	rlcf	___fldiv@grs^0,f,c
  4511  001288  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  4512  00128A  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  4513  00128C  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  4514  00128E                     l4381:
  4515  00128E  FFFF               	dw	65535	; assembler added errata NOP
  4516  001290  501B               	movf	___fldiv@a^0,w,c
  4517  001292  5C23               	subwf	___fldiv@rem^0,w,c
  4518  001294  501C               	movf	(___fldiv@a+1)^0,w,c
  4519  001296  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  4520  001298  501D               	movf	(___fldiv@a+2)^0,w,c
  4521  00129A  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  4522  00129C  501E               	movf	(___fldiv@a+3)^0,w,c
  4523  00129E  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  4524  0012A0  A0D8               	btfss	status,0,c
  4525  0012A2  EF55  F009         	goto	u4491
  4526  0012A6  EF58  F009         	goto	u4490
  4527  0012AA                     u4491:
  4528  0012AA  FFFF               	dw	65535	; assembler added errata NOP
  4529  0012AC  EF62  F009         	goto	l4387
  4530  0012B0                     u4490:
  4531  0012B0  FFFF               	dw	65535	; assembler added errata NOP
  4532  0012B2  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  4533  0012B4  501B               	movf	___fldiv@a^0,w,c
  4534  0012B6  5E23               	subwf	___fldiv@rem^0,f,c
  4535  0012B8  501C               	movf	(___fldiv@a+1)^0,w,c
  4536  0012BA  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  4537  0012BC  501D               	movf	(___fldiv@a+2)^0,w,c
  4538  0012BE  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  4539  0012C0  501E               	movf	(___fldiv@a+3)^0,w,c
  4540  0012C2  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  4541  0012C4                     l4387:
  4542  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  4543  0012C6  2A2F               	incf	___fldiv@aexp^0,f,c
  4544  0012C8                     l940:
  4545  0012C8  FFFF               	dw	65535	; assembler added errata NOP
  4546  0012CA  0E19               	movlw	25
  4547  0012CC  642F               	cpfsgt	___fldiv@aexp^0,c
  4548  0012CE  EF6B  F009         	goto	u4501
  4549  0012D2  EF6E  F009         	goto	u4500
  4550  0012D6                     u4501:
  4551  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  4552  0012D8  EF22  F009         	goto	l4373
  4553  0012DC                     u4500:
  4554  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  4555  0012DE  5023               	movf	___fldiv@rem^0,w,c
  4556  0012E0  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  4557  0012E2  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  4558  0012E4  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  4559  0012E6  B4D8               	btfsc	status,2,c
  4560  0012E8  EF78  F009         	goto	u4511
  4561  0012EC  EF7B  F009         	goto	u4510
  4562  0012F0                     u4511:
  4563  0012F0  FFFF               	dw	65535	; assembler added errata NOP
  4564  0012F2  EF98  F009         	goto	l4399
  4565  0012F6                     u4510:
  4566  0012F6  FFFF               	dw	65535	; assembler added errata NOP
  4567  0012F8  802A               	bsf	___fldiv@grs^0,0,c
  4568  0012FA  EF98  F009         	goto	l4399
  4569  0012FE                     l4393:
  4570  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  4571  001300  90D8               	bcf	status,0,c
  4572  001302  3617               	rlcf	___fldiv@b^0,f,c
  4573  001304  3618               	rlcf	(___fldiv@b+1)^0,f,c
  4574  001306  3619               	rlcf	(___fldiv@b+2)^0,f,c
  4575  001308  361A               	rlcf	(___fldiv@b+3)^0,f,c
  4576  00130A  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  4577  00130C  EF8A  F009         	goto	u4521
  4578  001310  EF8D  F009         	goto	u4520
  4579  001314                     u4521:
  4580  001314  FFFF               	dw	65535	; assembler added errata NOP
  4581  001316  EF8F  F009         	goto	l949
  4582  00131A                     u4520:
  4583  00131A  FFFF               	dw	65535	; assembler added errata NOP
  4584  00131C  8017               	bsf	___fldiv@b^0,0,c
  4585  00131E                     l949:
  4586  00131E  FFFF               	dw	65535	; assembler added errata NOP
  4587  001320  90D8               	bcf	status,0,c
  4588  001322  362A               	rlcf	___fldiv@grs^0,f,c
  4589  001324  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  4590  001326  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  4591  001328  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  4592  00132A  0628               	decf	___fldiv@new_exp^0,f,c
  4593  00132C  A0D8               	btfss	status,0,c
  4594  00132E  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  4595  001330                     l4399:
  4596  001330  FFFF               	dw	65535	; assembler added errata NOP
  4597  001332  AE19               	btfss	(___fldiv@b+2)^0,7,c
  4598  001334  EF9E  F009         	goto	u4531
  4599  001338  EFA1  F009         	goto	u4530
  4600  00133C                     u4531:
  4601  00133C  FFFF               	dw	65535	; assembler added errata NOP
  4602  00133E  EF7F  F009         	goto	l4393
  4603  001342                     u4530:
  4604  001342  FFFF               	dw	65535	; assembler added errata NOP
  4605  001344  0E00               	movlw	0
  4606  001346  6E2F               	movwf	___fldiv@aexp^0,c
  4607  001348  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  4608  00134A  EFA9  F009         	goto	u4541
  4609  00134E  EFAC  F009         	goto	u4540
  4610  001352                     u4541:
  4611  001352  FFFF               	dw	65535	; assembler added errata NOP
  4612  001354  EFD7  F009         	goto	l951
  4613  001358                     u4540:
  4614  001358  FFFF               	dw	65535	; assembler added errata NOP
  4615  00135A  0EFF               	movlw	255
  4616  00135C  142A               	andwf	___fldiv@grs^0,w,c
  4617  00135E  6E1F               	movwf	??___fldiv^0,c
  4618  001360  0EFF               	movlw	255
  4619  001362  142B               	andwf	(___fldiv@grs+1)^0,w,c
  4620  001364  6E20               	movwf	(??___fldiv+1)^0,c
  4621  001366  0EFF               	movlw	255
  4622  001368  142C               	andwf	(___fldiv@grs+2)^0,w,c
  4623  00136A  6E21               	movwf	(??___fldiv+2)^0,c
  4624  00136C  0E7F               	movlw	127
  4625  00136E  142D               	andwf	(___fldiv@grs+3)^0,w,c
  4626  001370  6E22               	movwf	(??___fldiv+3)^0,c
  4627  001372  501F               	movf	??___fldiv^0,w,c
  4628  001374  1020               	iorwf	(??___fldiv+1)^0,w,c
  4629  001376  1021               	iorwf	(??___fldiv+2)^0,w,c
  4630  001378  1022               	iorwf	(??___fldiv+3)^0,w,c
  4631  00137A  B4D8               	btfsc	status,2,c
  4632  00137C  EFC2  F009         	goto	u4551
  4633  001380  EFC5  F009         	goto	u4550
  4634  001384                     u4551:
  4635  001384  FFFF               	dw	65535	; assembler added errata NOP
  4636  001386  EFCB  F009         	goto	l952
  4637  00138A                     u4550:
  4638  00138A  FFFF               	dw	65535	; assembler added errata NOP
  4639  00138C                     l4407:
  4640  00138C  FFFF               	dw	65535	; assembler added errata NOP
  4641  00138E  0E01               	movlw	1
  4642  001390  6E2F               	movwf	___fldiv@aexp^0,c
  4643  001392  EFD7  F009         	goto	l951
  4644  001396                     l952:
  4645  001396  FFFF               	dw	65535	; assembler added errata NOP
  4646  001398  A017               	btfss	___fldiv@b^0,0,c
  4647  00139A  EFD1  F009         	goto	u4561
  4648  00139E  EFD4  F009         	goto	u4560
  4649  0013A2                     u4561:
  4650  0013A2  FFFF               	dw	65535	; assembler added errata NOP
  4651  0013A4  EFD7  F009         	goto	l951
  4652  0013A8                     u4560:
  4653  0013A8  FFFF               	dw	65535	; assembler added errata NOP
  4654  0013AA  EFC6  F009         	goto	l4407
  4655  0013AE                     l951:
  4656  0013AE  FFFF               	dw	65535	; assembler added errata NOP
  4657  0013B0  502F               	movf	___fldiv@aexp^0,w,c
  4658  0013B2  B4D8               	btfsc	status,2,c
  4659  0013B4  EFDE  F009         	goto	u4571
  4660  0013B8  EFE1  F009         	goto	u4570
  4661  0013BC                     u4571:
  4662  0013BC  FFFF               	dw	65535	; assembler added errata NOP
  4663  0013BE  EF08  F00A         	goto	l4419
  4664  0013C2                     u4570:
  4665  0013C2  FFFF               	dw	65535	; assembler added errata NOP
  4666  0013C4  0E01               	movlw	1
  4667  0013C6  2617               	addwf	___fldiv@b^0,f,c
  4668  0013C8  0E00               	movlw	0
  4669  0013CA  2218               	addwfc	(___fldiv@b+1)^0,f,c
  4670  0013CC  2219               	addwfc	(___fldiv@b+2)^0,f,c
  4671  0013CE  221A               	addwfc	(___fldiv@b+3)^0,f,c
  4672  0013D0  A01A               	btfss	(___fldiv@b+3)^0,0,c
  4673  0013D2  EFED  F009         	goto	u4581
  4674  0013D6  EFF0  F009         	goto	u4580
  4675  0013DA                     u4581:
  4676  0013DA  FFFF               	dw	65535	; assembler added errata NOP
  4677  0013DC  EF08  F00A         	goto	l4419
  4678  0013E0                     u4580:
  4679  0013E0  FFFF               	dw	65535	; assembler added errata NOP
  4680  0013E2  C017  F01F         	movff	___fldiv@b,??___fldiv
  4681  0013E6  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  4682  0013EA  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  4683  0013EE  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  4684  0013F2  3422               	rlcf	(??___fldiv+3)^0,w,c
  4685  0013F4  3222               	rrcf	(??___fldiv+3)^0,f,c
  4686  0013F6  3221               	rrcf	(??___fldiv+2)^0,f,c
  4687  0013F8  3220               	rrcf	(??___fldiv+1)^0,f,c
  4688  0013FA  321F               	rrcf	??___fldiv^0,f,c
  4689  0013FC  C01F  F017         	movff	??___fldiv,___fldiv@b
  4690  001400  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  4691  001404  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  4692  001408  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  4693  00140C  4A28               	infsnz	___fldiv@new_exp^0,f,c
  4694  00140E  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  4695  001410                     l4419:
  4696  001410  FFFF               	dw	65535	; assembler added errata NOP
  4697  001412  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4698  001414  EF14  F00A         	goto	u4591
  4699  001418  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  4700  00141A  E109               	bnz	u4590
  4701  00141C  2828               	incf	___fldiv@new_exp^0,w,c
  4702  00141E  A0D8               	btfss	status,0,c
  4703  001420  EF14  F00A         	goto	u4591
  4704  001424  EF17  F00A         	goto	u4590
  4705  001428                     u4591:
  4706  001428  FFFF               	dw	65535	; assembler added errata NOP
  4707  00142A  EF23  F00A         	goto	l4423
  4708  00142E                     u4590:
  4709  00142E  FFFF               	dw	65535	; assembler added errata NOP
  4710  001430  0E00               	movlw	0
  4711  001432  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  4712  001434  6828               	setf	___fldiv@new_exp^0,c
  4713  001436  0E00               	movlw	0
  4714  001438  6E17               	movwf	___fldiv@b^0,c
  4715  00143A  0E00               	movlw	0
  4716  00143C  6E18               	movwf	(___fldiv@b+1)^0,c
  4717  00143E  0E00               	movlw	0
  4718  001440  6E19               	movwf	(___fldiv@b+2)^0,c
  4719  001442  0E00               	movlw	0
  4720  001444  6E1A               	movwf	(___fldiv@b+3)^0,c
  4721  001446                     l4423:
  4722  001446  FFFF               	dw	65535	; assembler added errata NOP
  4723  001448  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4724  00144A  EF32  F00A         	goto	u4600
  4725  00144E  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  4726  001450  E106               	bnz	u4601
  4727  001452  0428               	decf	___fldiv@new_exp^0,w,c
  4728  001454  B0D8               	btfsc	status,0,c
  4729  001456  EF2F  F00A         	goto	u4601
  4730  00145A  EF32  F00A         	goto	u4600
  4731  00145E                     u4601:
  4732  00145E  FFFF               	dw	65535	; assembler added errata NOP
  4733  001460  EF41  F00A         	goto	l4427
  4734  001464                     u4600:
  4735  001464  FFFF               	dw	65535	; assembler added errata NOP
  4736  001466  0E00               	movlw	0
  4737  001468  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  4738  00146A  0E00               	movlw	0
  4739  00146C  6E28               	movwf	___fldiv@new_exp^0,c
  4740  00146E  0E00               	movlw	0
  4741  001470  6E17               	movwf	___fldiv@b^0,c
  4742  001472  0E00               	movlw	0
  4743  001474  6E18               	movwf	(___fldiv@b+1)^0,c
  4744  001476  0E00               	movlw	0
  4745  001478  6E19               	movwf	(___fldiv@b+2)^0,c
  4746  00147A  0E00               	movlw	0
  4747  00147C  6E1A               	movwf	(___fldiv@b+3)^0,c
  4748  00147E  0E00               	movlw	0
  4749  001480  6E27               	movwf	___fldiv@sign^0,c
  4750  001482                     l4427:
  4751  001482  FFFF               	dw	65535	; assembler added errata NOP
  4752  001484  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  4753  001488  A02E               	btfss	___fldiv@bexp^0,0,c
  4754  00148A  EF49  F00A         	goto	u4611
  4755  00148E  EF4C  F00A         	goto	u4610
  4756  001492                     u4611:
  4757  001492  FFFF               	dw	65535	; assembler added errata NOP
  4758  001494  EF50  F00A         	goto	l4433
  4759  001498                     u4610:
  4760  001498  FFFF               	dw	65535	; assembler added errata NOP
  4761  00149A  8E19               	bsf	(___fldiv@b+2)^0,7,c
  4762  00149C  EF52  F00A         	goto	l4435
  4763  0014A0                     l4433:
  4764  0014A0  FFFF               	dw	65535	; assembler added errata NOP
  4765  0014A2  9E19               	bcf	(___fldiv@b+2)^0,7,c
  4766  0014A4                     l4435:
  4767  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  4768  0014A6  90D8               	bcf	status,0,c
  4769  0014A8  302E               	rrcf	___fldiv@bexp^0,w,c
  4770  0014AA  6E1A               	movwf	(___fldiv@b+3)^0,c
  4771  0014AC  EFD6  F008         	goto	l4349
  4772  0014B0                     l938:
  4773  0014B0  FFFF               	dw	65535	; assembler added errata NOP
  4774  0014B2  0012               	return		;funcret
  4775  0014B4  FFFF               	dw	65535	; errata NOP
  4776  0014B6                     __end_of___fldiv:
  4777                           	callstack 0
  4778                           
  4779 ;; *************** function _Z_axis_and_Tweezer *****************
  4780 ;; Defined at:
  4781 ;;		line 626 in file "main.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  i               2   17[COMRAM] int 
  4786 ;;  i               2   15[COMRAM] int 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4796 ;;      Params:         0       0       0       0       0       0       0
  4797 ;;      Locals:         4       0       0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0
  4799 ;;      Totals:         4       0       0       0       0       0       0
  4800 ;;Total ram usage:        4 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; Hardware stack levels required when called: 4
  4803 ;; This function calls:
  4804 ;;		_Z_axis
  4805 ;; This function is called by:
  4806 ;;		_pick_and_place
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text16
  4811  002A3C                     __ptext16:
  4812                           	callstack 0
  4813  002A3C                     _Z_axis_and_Tweezer:
  4814                           	callstack 0
  4815  002A3C  FFFF               	dw	65535	; assembler added errata NOP
  4816  002A3E                     
  4817                           ;main.c: 627:      for(int i = 0;i<15; i++){Z_axis(0);}
  4818  002A3E  0E00               	movlw	0
  4819  002A40  6E11               	movwf	(Z_axis_and_Tweezer@i+1)^0,c
  4820  002A42  0E00               	movlw	0
  4821  002A44  6E10               	movwf	Z_axis_and_Tweezer@i^0,c
  4822  002A46                     l4079:
  4823  002A46  FFFF               	dw	65535	; assembler added errata NOP
  4824  002A48  0E00               	movlw	0
  4825  002A4A  EC45  F012         	call	_Z_axis
  4826  002A4E  4A10               	infsnz	Z_axis_and_Tweezer@i^0,f,c
  4827  002A50  2A11               	incf	(Z_axis_and_Tweezer@i+1)^0,f,c
  4828  002A52  BE11               	btfsc	(Z_axis_and_Tweezer@i+1)^0,7,c
  4829  002A54  EF35  F015         	goto	u3981
  4830  002A58  5011               	movf	(Z_axis_and_Tweezer@i+1)^0,w,c
  4831  002A5A  E10A               	bnz	u3980
  4832  002A5C  0E0F               	movlw	15
  4833  002A5E  5C10               	subwf	Z_axis_and_Tweezer@i^0,w,c
  4834  002A60  A0D8               	btfss	status,0,c
  4835  002A62  EF35  F015         	goto	u3981
  4836  002A66  EF38  F015         	goto	u3980
  4837  002A6A                     u3981:
  4838  002A6A  FFFF               	dw	65535	; assembler added errata NOP
  4839  002A6C  EF23  F015         	goto	l4079
  4840  002A70                     u3980:
  4841  002A70  FFFF               	dw	65535	; assembler added errata NOP
  4842  002A72                     
  4843                           ;main.c: 629:      for(int i = 0; i<15; i++){Z_axis(1);}
  4844  002A72  0E00               	movlw	0
  4845  002A74  6E13               	movwf	(Z_axis_and_Tweezer@i_605+1)^0,c
  4846  002A76  0E00               	movlw	0
  4847  002A78  6E12               	movwf	Z_axis_and_Tweezer@i_605^0,c
  4848  002A7A                     l4091:
  4849  002A7A  FFFF               	dw	65535	; assembler added errata NOP
  4850  002A7C  0E01               	movlw	1
  4851  002A7E  EC45  F012         	call	_Z_axis
  4852  002A82  4A12               	infsnz	Z_axis_and_Tweezer@i_605^0,f,c
  4853  002A84  2A13               	incf	(Z_axis_and_Tweezer@i_605+1)^0,f,c
  4854  002A86  BE13               	btfsc	(Z_axis_and_Tweezer@i_605+1)^0,7,c
  4855  002A88  EF4F  F015         	goto	u3991
  4856  002A8C  5013               	movf	(Z_axis_and_Tweezer@i_605+1)^0,w,c
  4857  002A8E  E10A               	bnz	u3990
  4858  002A90  0E0F               	movlw	15
  4859  002A92  5C12               	subwf	Z_axis_and_Tweezer@i_605^0,w,c
  4860  002A94  A0D8               	btfss	status,0,c
  4861  002A96  EF4F  F015         	goto	u3991
  4862  002A9A  EF52  F015         	goto	u3990
  4863  002A9E                     u3991:
  4864  002A9E  FFFF               	dw	65535	; assembler added errata NOP
  4865  002AA0  EF3D  F015         	goto	l4091
  4866  002AA4                     u3990:
  4867  002AA4  FFFF               	dw	65535	; assembler added errata NOP
  4868  002AA6  0012               	return		;funcret
  4869  002AA8  FFFF               	dw	65535	; errata NOP
  4870  002AAA                     __end_of_Z_axis_and_Tweezer:
  4871                           	callstack 0
  4872                           
  4873 ;; *************** function _Z_axis *****************
  4874 ;; Defined at:
  4875 ;;		line 452 in file "main.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  direction       1    wreg     unsigned char 
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;  direction       1   14[COMRAM] unsigned char 
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  1    wreg      void 
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0, cstack
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4889 ;;      Params:         0       0       0       0       0       0       0
  4890 ;;      Locals:         1       0       0       0       0       0       0
  4891 ;;      Temps:          0       0       0       0       0       0       0
  4892 ;;      Totals:         1       0       0       0       0       0       0
  4893 ;;Total ram usage:        1 bytes
  4894 ;; Hardware stack levels used: 1
  4895 ;; Hardware stack levels required when called: 3
  4896 ;; This function calls:
  4897 ;;		_ms_delay
  4898 ;; This function is called by:
  4899 ;;		_Z_axis_and_Tweezer
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text17
  4904  00248A                     __ptext17:
  4905                           	callstack 0
  4906  00248A                     _Z_axis:
  4907                           	callstack 0
  4908  00248A  FFFF               	dw	65535	; assembler added errata NOP
  4909                           
  4910                           ;incstack = 0
  4911                           ;Z_axis@direction stored from wreg
  4912  00248C  6E0F               	movwf	Z_axis@direction^0,c
  4913  00248E                     
  4914                           ;main.c: 453:     if (direction == 1){
  4915  00248E  040F               	decf	Z_axis@direction^0,w,c
  4916  002490  A4D8               	btfss	status,2,c
  4917  002492  EF4D  F012         	goto	u3871
  4918  002496  EF50  F012         	goto	u3870
  4919  00249A                     u3871:
  4920  00249A  FFFF               	dw	65535	; assembler added errata NOP
  4921  00249C  EF79  F012         	goto	l3925
  4922  0024A0                     u3870:
  4923  0024A0  FFFF               	dw	65535	; assembler added errata NOP
  4924  0024A2                     
  4925                           ;main.c: 454:         PORTD = 0b00000011;
  4926  0024A2  0E03               	movlw	3
  4927  0024A4  6E83               	movwf	131,c	;volatile
  4928  0024A6                     
  4929                           ;main.c: 455:         ms_delay(1);
  4930  0024A6  0E00               	movlw	0
  4931  0024A8  6E0A               	movwf	(ms_delay@val+1)^0,c
  4932  0024AA  0E01               	movlw	1
  4933  0024AC  6E09               	movwf	ms_delay@val^0,c
  4934  0024AE  ECED  F015         	call	_ms_delay	;wreg free
  4935  0024B2                     
  4936                           ;main.c: 456:         PORTD = 0b00000110;
  4937  0024B2  0E06               	movlw	6
  4938  0024B4  6E83               	movwf	131,c	;volatile
  4939  0024B6                     
  4940                           ;main.c: 457:         ms_delay(1);
  4941  0024B6  0E00               	movlw	0
  4942  0024B8  6E0A               	movwf	(ms_delay@val+1)^0,c
  4943  0024BA  0E01               	movlw	1
  4944  0024BC  6E09               	movwf	ms_delay@val^0,c
  4945  0024BE  ECED  F015         	call	_ms_delay	;wreg free
  4946  0024C2                     
  4947                           ;main.c: 458:         PORTD = 0b00001100;
  4948  0024C2  0E0C               	movlw	12
  4949  0024C4  6E83               	movwf	131,c	;volatile
  4950  0024C6                     
  4951                           ;main.c: 459:         ms_delay(1);
  4952  0024C6  0E00               	movlw	0
  4953  0024C8  6E0A               	movwf	(ms_delay@val+1)^0,c
  4954  0024CA  0E01               	movlw	1
  4955  0024CC  6E09               	movwf	ms_delay@val^0,c
  4956  0024CE  ECED  F015         	call	_ms_delay	;wreg free
  4957  0024D2                     
  4958                           ;main.c: 460:         PORTD = 0b00001001;
  4959  0024D2  0E09               	movlw	9
  4960  0024D4  6E83               	movwf	131,c	;volatile
  4961  0024D6                     
  4962                           ;main.c: 461:         ms_delay(1);
  4963  0024D6  0E00               	movlw	0
  4964  0024D8  6E0A               	movwf	(ms_delay@val+1)^0,c
  4965  0024DA  0E01               	movlw	1
  4966  0024DC  6E09               	movwf	ms_delay@val^0,c
  4967  0024DE  ECED  F015         	call	_ms_delay	;wreg free
  4968  0024E2                     
  4969                           ;main.c: 462:         PORTD = 0b00000011;
  4970  0024E2  0E03               	movlw	3
  4971  0024E4  6E83               	movwf	131,c	;volatile
  4972  0024E6                     
  4973                           ;main.c: 463:         ms_delay(1);
  4974  0024E6  0E00               	movlw	0
  4975  0024E8  6E0A               	movwf	(ms_delay@val+1)^0,c
  4976  0024EA  0E01               	movlw	1
  4977  0024EC  6E09               	movwf	ms_delay@val^0,c
  4978  0024EE  ECED  F015         	call	_ms_delay	;wreg free
  4979  0024F2                     l3925:
  4980  0024F2  FFFF               	dw	65535	; assembler added errata NOP
  4981                           
  4982                           ;main.c: 465:     if (direction == 0){
  4983  0024F4  500F               	movf	Z_axis@direction^0,w,c
  4984  0024F6  A4D8               	btfss	status,2,c
  4985  0024F8  EF80  F012         	goto	u3881
  4986  0024FC  EF83  F012         	goto	u3880
  4987  002500                     u3881:
  4988  002500  FFFF               	dw	65535	; assembler added errata NOP
  4989  002502  EFAC  F012         	goto	l261
  4990  002506                     u3880:
  4991  002506  FFFF               	dw	65535	; assembler added errata NOP
  4992  002508                     
  4993                           ;main.c: 466:         PORTD = 0b00001001;
  4994  002508  0E09               	movlw	9
  4995  00250A  6E83               	movwf	131,c	;volatile
  4996  00250C                     
  4997                           ;main.c: 467:         ms_delay(1);
  4998  00250C  0E00               	movlw	0
  4999  00250E  6E0A               	movwf	(ms_delay@val+1)^0,c
  5000  002510  0E01               	movlw	1
  5001  002512  6E09               	movwf	ms_delay@val^0,c
  5002  002514  ECED  F015         	call	_ms_delay	;wreg free
  5003  002518                     
  5004                           ;main.c: 468:         PORTD = 0b00001100;
  5005  002518  0E0C               	movlw	12
  5006  00251A  6E83               	movwf	131,c	;volatile
  5007                           
  5008                           ;main.c: 469:         ms_delay(1);
  5009  00251C  0E00               	movlw	0
  5010  00251E  6E0A               	movwf	(ms_delay@val+1)^0,c
  5011  002520  0E01               	movlw	1
  5012  002522  6E09               	movwf	ms_delay@val^0,c
  5013  002524  ECED  F015         	call	_ms_delay	;wreg free
  5014  002528                     
  5015                           ;main.c: 470:         PORTD = 0b00000110;
  5016  002528  0E06               	movlw	6
  5017  00252A  6E83               	movwf	131,c	;volatile
  5018  00252C                     
  5019                           ;main.c: 471:         ms_delay(1);
  5020  00252C  0E00               	movlw	0
  5021  00252E  6E0A               	movwf	(ms_delay@val+1)^0,c
  5022  002530  0E01               	movlw	1
  5023  002532  6E09               	movwf	ms_delay@val^0,c
  5024  002534  ECED  F015         	call	_ms_delay	;wreg free
  5025                           
  5026                           ;main.c: 472:         PORTD = 0b00000011;
  5027  002538  0E03               	movlw	3
  5028  00253A  6E83               	movwf	131,c	;volatile
  5029  00253C                     
  5030                           ;main.c: 473:         ms_delay(1);
  5031  00253C  0E00               	movlw	0
  5032  00253E  6E0A               	movwf	(ms_delay@val+1)^0,c
  5033  002540  0E01               	movlw	1
  5034  002542  6E09               	movwf	ms_delay@val^0,c
  5035  002544  ECED  F015         	call	_ms_delay	;wreg free
  5036  002548                     
  5037                           ;main.c: 474:         PORTD = 0b00001001;
  5038  002548  0E09               	movlw	9
  5039  00254A  6E83               	movwf	131,c	;volatile
  5040                           
  5041                           ;main.c: 475:         ms_delay(1);
  5042  00254C  0E00               	movlw	0
  5043  00254E  6E0A               	movwf	(ms_delay@val+1)^0,c
  5044  002550  0E01               	movlw	1
  5045  002552  6E09               	movwf	ms_delay@val^0,c
  5046  002554  ECED  F015         	call	_ms_delay	;wreg free
  5047  002558                     l261:
  5048  002558  FFFF               	dw	65535	; assembler added errata NOP
  5049  00255A  0012               	return		;funcret
  5050  00255C  FFFF               	dw	65535	; errata NOP
  5051  00255E                     __end_of_Z_axis:
  5052                           	callstack 0
  5053                           
  5054 ;; *************** function _Y_axis *****************
  5055 ;; Defined at:
  5056 ;;		line 424 in file "main.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  direction       1    wreg     unsigned char 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  direction       1   14[COMRAM] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5070 ;;      Params:         0       0       0       0       0       0       0
  5071 ;;      Locals:         1       0       0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0
  5073 ;;      Totals:         1       0       0       0       0       0       0
  5074 ;;Total ram usage:        1 bytes
  5075 ;; Hardware stack levels used: 1
  5076 ;; Hardware stack levels required when called: 3
  5077 ;; This function calls:
  5078 ;;		_ms_delay
  5079 ;; This function is called by:
  5080 ;;		_pick_and_place
  5081 ;;		_return_to_initial
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text18
  5086  00255E                     __ptext18:
  5087                           	callstack 0
  5088  00255E                     _Y_axis:
  5089                           	callstack 0
  5090  00255E  FFFF               	dw	65535	; assembler added errata NOP
  5091                           
  5092                           ;incstack = 0
  5093                           ;Y_axis@direction stored from wreg
  5094  002560  6E0F               	movwf	Y_axis@direction^0,c
  5095  002562                     
  5096                           ;main.c: 425:     if (direction == 1){
  5097  002562  040F               	decf	Y_axis@direction^0,w,c
  5098  002564  A4D8               	btfss	status,2,c
  5099  002566  EFB7  F012         	goto	u3931
  5100  00256A  EFBA  F012         	goto	u3930
  5101  00256E                     u3931:
  5102  00256E  FFFF               	dw	65535	; assembler added errata NOP
  5103  002570  EFE3  F012         	goto	l4013
  5104  002574                     u3930:
  5105  002574  FFFF               	dw	65535	; assembler added errata NOP
  5106  002576                     
  5107                           ;main.c: 426:         PORTB = 0b00110000;
  5108  002576  0E30               	movlw	48
  5109  002578  6E81               	movwf	129,c	;volatile
  5110  00257A                     
  5111                           ;main.c: 427:         ms_delay(1);
  5112  00257A  0E00               	movlw	0
  5113  00257C  6E0A               	movwf	(ms_delay@val+1)^0,c
  5114  00257E  0E01               	movlw	1
  5115  002580  6E09               	movwf	ms_delay@val^0,c
  5116  002582  ECED  F015         	call	_ms_delay	;wreg free
  5117  002586                     
  5118                           ;main.c: 428:         PORTB = 0b01100000;
  5119  002586  0E60               	movlw	96
  5120  002588  6E81               	movwf	129,c	;volatile
  5121  00258A                     
  5122                           ;main.c: 429:         ms_delay(1);
  5123  00258A  0E00               	movlw	0
  5124  00258C  6E0A               	movwf	(ms_delay@val+1)^0,c
  5125  00258E  0E01               	movlw	1
  5126  002590  6E09               	movwf	ms_delay@val^0,c
  5127  002592  ECED  F015         	call	_ms_delay	;wreg free
  5128  002596                     
  5129                           ;main.c: 430:         PORTB = 0b11000000;
  5130  002596  0EC0               	movlw	192
  5131  002598  6E81               	movwf	129,c	;volatile
  5132  00259A                     
  5133                           ;main.c: 431:         ms_delay(1);
  5134  00259A  0E00               	movlw	0
  5135  00259C  6E0A               	movwf	(ms_delay@val+1)^0,c
  5136  00259E  0E01               	movlw	1
  5137  0025A0  6E09               	movwf	ms_delay@val^0,c
  5138  0025A2  ECED  F015         	call	_ms_delay	;wreg free
  5139  0025A6                     
  5140                           ;main.c: 432:         PORTB = 0b10010000;
  5141  0025A6  0E90               	movlw	144
  5142  0025A8  6E81               	movwf	129,c	;volatile
  5143  0025AA                     
  5144                           ;main.c: 433:         ms_delay(1);
  5145  0025AA  0E00               	movlw	0
  5146  0025AC  6E0A               	movwf	(ms_delay@val+1)^0,c
  5147  0025AE  0E01               	movlw	1
  5148  0025B0  6E09               	movwf	ms_delay@val^0,c
  5149  0025B2  ECED  F015         	call	_ms_delay	;wreg free
  5150  0025B6                     
  5151                           ;main.c: 434:         PORTB = 0b00110000;
  5152  0025B6  0E30               	movlw	48
  5153  0025B8  6E81               	movwf	129,c	;volatile
  5154  0025BA                     
  5155                           ;main.c: 435:         ms_delay(1);
  5156  0025BA  0E00               	movlw	0
  5157  0025BC  6E0A               	movwf	(ms_delay@val+1)^0,c
  5158  0025BE  0E01               	movlw	1
  5159  0025C0  6E09               	movwf	ms_delay@val^0,c
  5160  0025C2  ECED  F015         	call	_ms_delay	;wreg free
  5161  0025C6                     l4013:
  5162  0025C6  FFFF               	dw	65535	; assembler added errata NOP
  5163                           
  5164                           ;main.c: 437:     if (direction == 0){
  5165  0025C8  500F               	movf	Y_axis@direction^0,w,c
  5166  0025CA  A4D8               	btfss	status,2,c
  5167  0025CC  EFEA  F012         	goto	u3941
  5168  0025D0  EFED  F012         	goto	u3940
  5169  0025D4                     u3941:
  5170  0025D4  FFFF               	dw	65535	; assembler added errata NOP
  5171  0025D6  EF16  F013         	goto	l256
  5172  0025DA                     u3940:
  5173  0025DA  FFFF               	dw	65535	; assembler added errata NOP
  5174  0025DC                     
  5175                           ;main.c: 438:         PORTB = 0b10010000;
  5176  0025DC  0E90               	movlw	144
  5177  0025DE  6E81               	movwf	129,c	;volatile
  5178  0025E0                     
  5179                           ;main.c: 439:         ms_delay(1);
  5180  0025E0  0E00               	movlw	0
  5181  0025E2  6E0A               	movwf	(ms_delay@val+1)^0,c
  5182  0025E4  0E01               	movlw	1
  5183  0025E6  6E09               	movwf	ms_delay@val^0,c
  5184  0025E8  ECED  F015         	call	_ms_delay	;wreg free
  5185  0025EC                     
  5186                           ;main.c: 440:         PORTB = 0b11000000;
  5187  0025EC  0EC0               	movlw	192
  5188  0025EE  6E81               	movwf	129,c	;volatile
  5189                           
  5190                           ;main.c: 441:         ms_delay(1);
  5191  0025F0  0E00               	movlw	0
  5192  0025F2  6E0A               	movwf	(ms_delay@val+1)^0,c
  5193  0025F4  0E01               	movlw	1
  5194  0025F6  6E09               	movwf	ms_delay@val^0,c
  5195  0025F8  ECED  F015         	call	_ms_delay	;wreg free
  5196  0025FC                     
  5197                           ;main.c: 442:         PORTB = 0b01100000;
  5198  0025FC  0E60               	movlw	96
  5199  0025FE  6E81               	movwf	129,c	;volatile
  5200  002600                     
  5201                           ;main.c: 443:         ms_delay(1);
  5202  002600  0E00               	movlw	0
  5203  002602  6E0A               	movwf	(ms_delay@val+1)^0,c
  5204  002604  0E01               	movlw	1
  5205  002606  6E09               	movwf	ms_delay@val^0,c
  5206  002608  ECED  F015         	call	_ms_delay	;wreg free
  5207                           
  5208                           ;main.c: 444:         PORTB = 0b00110000;
  5209  00260C  0E30               	movlw	48
  5210  00260E  6E81               	movwf	129,c	;volatile
  5211  002610                     
  5212                           ;main.c: 445:         ms_delay(1);
  5213  002610  0E00               	movlw	0
  5214  002612  6E0A               	movwf	(ms_delay@val+1)^0,c
  5215  002614  0E01               	movlw	1
  5216  002616  6E09               	movwf	ms_delay@val^0,c
  5217  002618  ECED  F015         	call	_ms_delay	;wreg free
  5218  00261C                     
  5219                           ;main.c: 446:         PORTB = 0b10010000;
  5220  00261C  0E90               	movlw	144
  5221  00261E  6E81               	movwf	129,c	;volatile
  5222                           
  5223                           ;main.c: 447:         ms_delay(1);
  5224  002620  0E00               	movlw	0
  5225  002622  6E0A               	movwf	(ms_delay@val+1)^0,c
  5226  002624  0E01               	movlw	1
  5227  002626  6E09               	movwf	ms_delay@val^0,c
  5228  002628  ECED  F015         	call	_ms_delay	;wreg free
  5229  00262C                     l256:
  5230  00262C  FFFF               	dw	65535	; assembler added errata NOP
  5231  00262E  0012               	return		;funcret
  5232  002630  FFFF               	dw	65535	; errata NOP
  5233  002632                     __end_of_Y_axis:
  5234                           	callstack 0
  5235                           
  5236 ;; *************** function _X_axis *****************
  5237 ;; Defined at:
  5238 ;;		line 396 in file "main.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  direction       1    wreg     unsigned char 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  direction       1   14[COMRAM] unsigned char 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		wreg, status,2, status,0, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5252 ;;      Params:         0       0       0       0       0       0       0
  5253 ;;      Locals:         1       0       0       0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0
  5255 ;;      Totals:         1       0       0       0       0       0       0
  5256 ;;Total ram usage:        1 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; Hardware stack levels required when called: 3
  5259 ;; This function calls:
  5260 ;;		_ms_delay
  5261 ;; This function is called by:
  5262 ;;		_pick_and_place
  5263 ;;		_return_to_initial
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text19
  5268  002632                     __ptext19:
  5269                           	callstack 0
  5270  002632                     _X_axis:
  5271                           	callstack 0
  5272  002632  FFFF               	dw	65535	; assembler added errata NOP
  5273                           
  5274                           ;incstack = 0
  5275                           ;X_axis@direction stored from wreg
  5276  002634  6E0F               	movwf	X_axis@direction^0,c
  5277  002636                     
  5278                           ;main.c: 397:     if (direction == 1){
  5279  002636  040F               	decf	X_axis@direction^0,w,c
  5280  002638  A4D8               	btfss	status,2,c
  5281  00263A  EF21  F013         	goto	u3911
  5282  00263E  EF24  F013         	goto	u3910
  5283  002642                     u3911:
  5284  002642  FFFF               	dw	65535	; assembler added errata NOP
  5285  002644  EF4D  F013         	goto	l3975
  5286  002648                     u3910:
  5287  002648  FFFF               	dw	65535	; assembler added errata NOP
  5288  00264A                     
  5289                           ;main.c: 398:         PORTB = 0b00000011;
  5290  00264A  0E03               	movlw	3
  5291  00264C  6E81               	movwf	129,c	;volatile
  5292  00264E                     
  5293                           ;main.c: 399:         ms_delay(1);
  5294  00264E  0E00               	movlw	0
  5295  002650  6E0A               	movwf	(ms_delay@val+1)^0,c
  5296  002652  0E01               	movlw	1
  5297  002654  6E09               	movwf	ms_delay@val^0,c
  5298  002656  ECED  F015         	call	_ms_delay	;wreg free
  5299  00265A                     
  5300                           ;main.c: 400:         PORTB = 0b00000110;
  5301  00265A  0E06               	movlw	6
  5302  00265C  6E81               	movwf	129,c	;volatile
  5303  00265E                     
  5304                           ;main.c: 401:         ms_delay(1);
  5305  00265E  0E00               	movlw	0
  5306  002660  6E0A               	movwf	(ms_delay@val+1)^0,c
  5307  002662  0E01               	movlw	1
  5308  002664  6E09               	movwf	ms_delay@val^0,c
  5309  002666  ECED  F015         	call	_ms_delay	;wreg free
  5310  00266A                     
  5311                           ;main.c: 402:         PORTB = 0b00001100;
  5312  00266A  0E0C               	movlw	12
  5313  00266C  6E81               	movwf	129,c	;volatile
  5314  00266E                     
  5315                           ;main.c: 403:         ms_delay(1);
  5316  00266E  0E00               	movlw	0
  5317  002670  6E0A               	movwf	(ms_delay@val+1)^0,c
  5318  002672  0E01               	movlw	1
  5319  002674  6E09               	movwf	ms_delay@val^0,c
  5320  002676  ECED  F015         	call	_ms_delay	;wreg free
  5321  00267A                     
  5322                           ;main.c: 404:         PORTB = 0b00001001;
  5323  00267A  0E09               	movlw	9
  5324  00267C  6E81               	movwf	129,c	;volatile
  5325  00267E                     
  5326                           ;main.c: 405:         ms_delay(1);
  5327  00267E  0E00               	movlw	0
  5328  002680  6E0A               	movwf	(ms_delay@val+1)^0,c
  5329  002682  0E01               	movlw	1
  5330  002684  6E09               	movwf	ms_delay@val^0,c
  5331  002686  ECED  F015         	call	_ms_delay	;wreg free
  5332  00268A                     
  5333                           ;main.c: 406:         PORTB = 0b00000011;
  5334  00268A  0E03               	movlw	3
  5335  00268C  6E81               	movwf	129,c	;volatile
  5336  00268E                     
  5337                           ;main.c: 407:         ms_delay(1);
  5338  00268E  0E00               	movlw	0
  5339  002690  6E0A               	movwf	(ms_delay@val+1)^0,c
  5340  002692  0E01               	movlw	1
  5341  002694  6E09               	movwf	ms_delay@val^0,c
  5342  002696  ECED  F015         	call	_ms_delay	;wreg free
  5343  00269A                     l3975:
  5344  00269A  FFFF               	dw	65535	; assembler added errata NOP
  5345                           
  5346                           ;main.c: 409:     if (direction == 0){
  5347  00269C  500F               	movf	X_axis@direction^0,w,c
  5348  00269E  A4D8               	btfss	status,2,c
  5349  0026A0  EF54  F013         	goto	u3921
  5350  0026A4  EF57  F013         	goto	u3920
  5351  0026A8                     u3921:
  5352  0026A8  FFFF               	dw	65535	; assembler added errata NOP
  5353  0026AA  EF80  F013         	goto	l251
  5354  0026AE                     u3920:
  5355  0026AE  FFFF               	dw	65535	; assembler added errata NOP
  5356  0026B0                     
  5357                           ;main.c: 410:         PORTB = 0b00001001;
  5358  0026B0  0E09               	movlw	9
  5359  0026B2  6E81               	movwf	129,c	;volatile
  5360  0026B4                     
  5361                           ;main.c: 411:         ms_delay(1);
  5362  0026B4  0E00               	movlw	0
  5363  0026B6  6E0A               	movwf	(ms_delay@val+1)^0,c
  5364  0026B8  0E01               	movlw	1
  5365  0026BA  6E09               	movwf	ms_delay@val^0,c
  5366  0026BC  ECED  F015         	call	_ms_delay	;wreg free
  5367  0026C0                     
  5368                           ;main.c: 412:         PORTB = 0b00001100;
  5369  0026C0  0E0C               	movlw	12
  5370  0026C2  6E81               	movwf	129,c	;volatile
  5371                           
  5372                           ;main.c: 413:         ms_delay(1);
  5373  0026C4  0E00               	movlw	0
  5374  0026C6  6E0A               	movwf	(ms_delay@val+1)^0,c
  5375  0026C8  0E01               	movlw	1
  5376  0026CA  6E09               	movwf	ms_delay@val^0,c
  5377  0026CC  ECED  F015         	call	_ms_delay	;wreg free
  5378  0026D0                     
  5379                           ;main.c: 414:         PORTB = 0b00000110;
  5380  0026D0  0E06               	movlw	6
  5381  0026D2  6E81               	movwf	129,c	;volatile
  5382  0026D4                     
  5383                           ;main.c: 415:         ms_delay(1);
  5384  0026D4  0E00               	movlw	0
  5385  0026D6  6E0A               	movwf	(ms_delay@val+1)^0,c
  5386  0026D8  0E01               	movlw	1
  5387  0026DA  6E09               	movwf	ms_delay@val^0,c
  5388  0026DC  ECED  F015         	call	_ms_delay	;wreg free
  5389                           
  5390                           ;main.c: 416:         PORTB = 0b00000011;
  5391  0026E0  0E03               	movlw	3
  5392  0026E2  6E81               	movwf	129,c	;volatile
  5393  0026E4                     
  5394                           ;main.c: 417:         ms_delay(1);
  5395  0026E4  0E00               	movlw	0
  5396  0026E6  6E0A               	movwf	(ms_delay@val+1)^0,c
  5397  0026E8  0E01               	movlw	1
  5398  0026EA  6E09               	movwf	ms_delay@val^0,c
  5399  0026EC  ECED  F015         	call	_ms_delay	;wreg free
  5400  0026F0                     
  5401                           ;main.c: 418:         PORTB = 0b00001001;
  5402  0026F0  0E09               	movlw	9
  5403  0026F2  6E81               	movwf	129,c	;volatile
  5404                           
  5405                           ;main.c: 419:         ms_delay(1);
  5406  0026F4  0E00               	movlw	0
  5407  0026F6  6E0A               	movwf	(ms_delay@val+1)^0,c
  5408  0026F8  0E01               	movlw	1
  5409  0026FA  6E09               	movwf	ms_delay@val^0,c
  5410  0026FC  ECED  F015         	call	_ms_delay	;wreg free
  5411  002700                     l251:
  5412  002700  FFFF               	dw	65535	; assembler added errata NOP
  5413  002702  0012               	return		;funcret
  5414  002704  FFFF               	dw	65535	; errata NOP
  5415  002706                     __end_of_X_axis:
  5416                           	callstack 0
  5417                           
  5418 ;; *************** function _Twister *****************
  5419 ;; Defined at:
  5420 ;;		line 480 in file "main.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  direction       1    wreg     unsigned char 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  direction       1   14[COMRAM] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5434 ;;      Params:         0       0       0       0       0       0       0
  5435 ;;      Locals:         1       0       0       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0
  5437 ;;      Totals:         1       0       0       0       0       0       0
  5438 ;;Total ram usage:        1 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 3
  5441 ;; This function calls:
  5442 ;;		_ms_delay
  5443 ;; This function is called by:
  5444 ;;		_pick_and_place
  5445 ;;		_return_to_initial
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text20
  5450  0027D2                     __ptext20:
  5451                           	callstack 0
  5452  0027D2                     _Twister:
  5453                           	callstack 0
  5454  0027D2  FFFF               	dw	65535	; assembler added errata NOP
  5455                           
  5456                           ;incstack = 0
  5457                           ;Twister@direction stored from wreg
  5458  0027D4  6E0F               	movwf	Twister@direction^0,c
  5459  0027D6                     
  5460                           ;main.c: 481:     if (direction == 1){
  5461  0027D6  040F               	decf	Twister@direction^0,w,c
  5462  0027D8  A4D8               	btfss	status,2,c
  5463  0027DA  EFF1  F013         	goto	u3951
  5464  0027DE  EFF4  F013         	goto	u3950
  5465  0027E2                     u3951:
  5466  0027E2  FFFF               	dw	65535	; assembler added errata NOP
  5467  0027E4  EF15  F014         	goto	l4047
  5468  0027E8                     u3950:
  5469  0027E8  FFFF               	dw	65535	; assembler added errata NOP
  5470  0027EA                     
  5471                           ;main.c: 482:         PORTD = 0b00110000;
  5472  0027EA  0E30               	movlw	48
  5473  0027EC  6E83               	movwf	131,c	;volatile
  5474  0027EE                     
  5475                           ;main.c: 483:         ms_delay(1);
  5476  0027EE  0E00               	movlw	0
  5477  0027F0  6E0A               	movwf	(ms_delay@val+1)^0,c
  5478  0027F2  0E01               	movlw	1
  5479  0027F4  6E09               	movwf	ms_delay@val^0,c
  5480  0027F6  ECED  F015         	call	_ms_delay	;wreg free
  5481  0027FA                     
  5482                           ;main.c: 484:         PORTD = 0b11000000;
  5483  0027FA  0EC0               	movlw	192
  5484  0027FC  6E83               	movwf	131,c	;volatile
  5485  0027FE                     
  5486                           ;main.c: 485:         ms_delay(1);
  5487  0027FE  0E00               	movlw	0
  5488  002800  6E0A               	movwf	(ms_delay@val+1)^0,c
  5489  002802  0E01               	movlw	1
  5490  002804  6E09               	movwf	ms_delay@val^0,c
  5491  002806  ECED  F015         	call	_ms_delay	;wreg free
  5492  00280A                     
  5493                           ;main.c: 486:         PORTD = 0b10010000;
  5494  00280A  0E90               	movlw	144
  5495  00280C  6E83               	movwf	131,c	;volatile
  5496  00280E                     
  5497                           ;main.c: 487:         ms_delay(1);
  5498  00280E  0E00               	movlw	0
  5499  002810  6E0A               	movwf	(ms_delay@val+1)^0,c
  5500  002812  0E01               	movlw	1
  5501  002814  6E09               	movwf	ms_delay@val^0,c
  5502  002816  ECED  F015         	call	_ms_delay	;wreg free
  5503  00281A                     
  5504                           ;main.c: 488:         PORTD = 0b00110000;
  5505  00281A  0E30               	movlw	48
  5506  00281C  6E83               	movwf	131,c	;volatile
  5507  00281E                     
  5508                           ;main.c: 489:         ms_delay(1);
  5509  00281E  0E00               	movlw	0
  5510  002820  6E0A               	movwf	(ms_delay@val+1)^0,c
  5511  002822  0E01               	movlw	1
  5512  002824  6E09               	movwf	ms_delay@val^0,c
  5513  002826  ECED  F015         	call	_ms_delay	;wreg free
  5514  00282A                     l4047:
  5515  00282A  FFFF               	dw	65535	; assembler added errata NOP
  5516                           
  5517                           ;main.c: 491:     if (direction == 0){
  5518  00282C  500F               	movf	Twister@direction^0,w,c
  5519  00282E  A4D8               	btfss	status,2,c
  5520  002830  EF1C  F014         	goto	u3961
  5521  002834  EF1F  F014         	goto	u3960
  5522  002838                     u3961:
  5523  002838  FFFF               	dw	65535	; assembler added errata NOP
  5524  00283A  EF40  F014         	goto	l266
  5525  00283E                     u3960:
  5526  00283E  FFFF               	dw	65535	; assembler added errata NOP
  5527  002840                     
  5528                           ;main.c: 492:         PORTD = 0b10010000;
  5529  002840  0E90               	movlw	144
  5530  002842  6E83               	movwf	131,c	;volatile
  5531  002844                     
  5532                           ;main.c: 493:         ms_delay(1);
  5533  002844  0E00               	movlw	0
  5534  002846  6E0A               	movwf	(ms_delay@val+1)^0,c
  5535  002848  0E01               	movlw	1
  5536  00284A  6E09               	movwf	ms_delay@val^0,c
  5537  00284C  ECED  F015         	call	_ms_delay	;wreg free
  5538  002850                     
  5539                           ;main.c: 494:         PORTD = 0b01100000;
  5540  002850  0E60               	movlw	96
  5541  002852  6E83               	movwf	131,c	;volatile
  5542                           
  5543                           ;main.c: 495:         ms_delay(1);
  5544  002854  0E00               	movlw	0
  5545  002856  6E0A               	movwf	(ms_delay@val+1)^0,c
  5546  002858  0E01               	movlw	1
  5547  00285A  6E09               	movwf	ms_delay@val^0,c
  5548  00285C  ECED  F015         	call	_ms_delay	;wreg free
  5549  002860                     
  5550                           ;main.c: 496:         PORTD = 0b00110000;
  5551  002860  0E30               	movlw	48
  5552  002862  6E83               	movwf	131,c	;volatile
  5553  002864                     
  5554                           ;main.c: 497:         ms_delay(1);
  5555  002864  0E00               	movlw	0
  5556  002866  6E0A               	movwf	(ms_delay@val+1)^0,c
  5557  002868  0E01               	movlw	1
  5558  00286A  6E09               	movwf	ms_delay@val^0,c
  5559  00286C  ECED  F015         	call	_ms_delay	;wreg free
  5560                           
  5561                           ;main.c: 498:         PORTD = 0b10010000;
  5562  002870  0E90               	movlw	144
  5563  002872  6E83               	movwf	131,c	;volatile
  5564  002874                     
  5565                           ;main.c: 499:         ms_delay(1);
  5566  002874  0E00               	movlw	0
  5567  002876  6E0A               	movwf	(ms_delay@val+1)^0,c
  5568  002878  0E01               	movlw	1
  5569  00287A  6E09               	movwf	ms_delay@val^0,c
  5570  00287C  ECED  F015         	call	_ms_delay	;wreg free
  5571  002880                     l266:
  5572  002880  FFFF               	dw	65535	; assembler added errata NOP
  5573  002882  0012               	return		;funcret
  5574  002884  FFFF               	dw	65535	; errata NOP
  5575  002886                     __end_of_Twister:
  5576                           	callstack 0
  5577                           
  5578 ;; *************** function _ms_delay *****************
  5579 ;; Defined at:
  5580 ;;		line 504 in file "main.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  val             2    8[COMRAM] unsigned int 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  j               2   12[COMRAM] unsigned int 
  5585 ;;  i               2   10[COMRAM] unsigned int 
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      void 
  5588 ;; Registers used:
  5589 ;;		wreg, status,2, status,0
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5595 ;;      Params:         2       0       0       0       0       0       0
  5596 ;;      Locals:         4       0       0       0       0       0       0
  5597 ;;      Temps:          0       0       0       0       0       0       0
  5598 ;;      Totals:         6       0       0       0       0       0       0
  5599 ;;Total ram usage:        6 bytes
  5600 ;; Hardware stack levels used: 1
  5601 ;; Hardware stack levels required when called: 2
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		_X_axis
  5606 ;;		_Y_axis
  5607 ;;		_Z_axis
  5608 ;;		_Twister
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text21
  5613  002BDA                     __ptext21:
  5614                           	callstack 0
  5615  002BDA                     _ms_delay:
  5616                           	callstack 0
  5617  002BDA  FFFF               	dw	65535	; assembler added errata NOP
  5618  002BDC                     
  5619                           ;main.c: 504: void ms_delay(unsigned int val);main.c: 505: {;main.c: 506:      unsigned 
      +                          int i,j;;main.c: 507:         for(i=0;i<val;i++)
  5620  002BDC  0E00               	movlw	0
  5621  002BDE  6E0C               	movwf	(ms_delay@i+1)^0,c
  5622  002BE0  0E00               	movlw	0
  5623  002BE2  6E0B               	movwf	ms_delay@i^0,c
  5624  002BE4  EF0B  F016         	goto	l3901
  5625  002BE8                     l3889:
  5626  002BE8  FFFF               	dw	65535	; assembler added errata NOP
  5627                           
  5628                           ;main.c: 508:             for(j=0;j<1650;j++);
  5629  002BEA  0E00               	movlw	0
  5630  002BEC  6E0E               	movwf	(ms_delay@j+1)^0,c
  5631  002BEE  0E00               	movlw	0
  5632  002BF0  6E0D               	movwf	ms_delay@j^0,c
  5633  002BF2                     l3895:
  5634  002BF2  FFFF               	dw	65535	; assembler added errata NOP
  5635  002BF4  4A0D               	infsnz	ms_delay@j^0,f,c
  5636  002BF6  2A0E               	incf	(ms_delay@j+1)^0,f,c
  5637  002BF8  0E72               	movlw	114
  5638  002BFA  5C0D               	subwf	ms_delay@j^0,w,c
  5639  002BFC  0E06               	movlw	6
  5640  002BFE  580E               	subwfb	(ms_delay@j+1)^0,w,c
  5641  002C00  A0D8               	btfss	status,0,c
  5642  002C02  EF05  F016         	goto	u3851
  5643  002C06  EF08  F016         	goto	u3850
  5644  002C0A                     u3851:
  5645  002C0A  FFFF               	dw	65535	; assembler added errata NOP
  5646  002C0C  EFF9  F015         	goto	l3895
  5647  002C10                     u3850:
  5648  002C10  FFFF               	dw	65535	; assembler added errata NOP
  5649  002C12  4A0B               	infsnz	ms_delay@i^0,f,c
  5650  002C14  2A0C               	incf	(ms_delay@i+1)^0,f,c
  5651  002C16                     l3901:
  5652  002C16  FFFF               	dw	65535	; assembler added errata NOP
  5653  002C18  5009               	movf	ms_delay@val^0,w,c
  5654  002C1A  5C0B               	subwf	ms_delay@i^0,w,c
  5655  002C1C  500A               	movf	(ms_delay@val+1)^0,w,c
  5656  002C1E  580C               	subwfb	(ms_delay@i+1)^0,w,c
  5657  002C20  A0D8               	btfss	status,0,c
  5658  002C22  EF15  F016         	goto	u3861
  5659  002C26  EF18  F016         	goto	u3860
  5660  002C2A                     u3861:
  5661  002C2A  FFFF               	dw	65535	; assembler added errata NOP
  5662  002C2C  EFF4  F015         	goto	l3889
  5663  002C30                     u3860:
  5664  002C30  FFFF               	dw	65535	; assembler added errata NOP
  5665  002C32  0012               	return		;funcret
  5666  002C34  FFFF               	dw	65535	; errata NOP
  5667  002C36                     __end_of_ms_delay:
  5668                           	callstack 0
  5669                           
  5670 ;; *************** function _atoi *****************
  5671 ;; Defined at:
  5672 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  s               2   15[COMRAM] PTR const unsigned char 
  5675 ;;		 -> input_str(2), 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  n               2   28[COMRAM] int 
  5678 ;;  neg             2   21[COMRAM] int 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  2   15[COMRAM] int 
  5681 ;; Registers used:
  5682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5688 ;;      Params:         2       0       0       0       0       0       0
  5689 ;;      Locals:         9       0       0       0       0       0       0
  5690 ;;      Temps:          4       0       0       0       0       0       0
  5691 ;;      Totals:        15       0       0       0       0       0       0
  5692 ;;Total ram usage:       15 bytes
  5693 ;; Hardware stack levels used: 1
  5694 ;; Hardware stack levels required when called: 3
  5695 ;; This function calls:
  5696 ;;		___wmul
  5697 ;;		_isdigit
  5698 ;;		_isspace
  5699 ;; This function is called by:
  5700 ;;		_add_component
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text22
  5705  001C82                     __ptext22:
  5706                           	callstack 0
  5707  001C82                     _atoi:
  5708                           	callstack 0
  5709  001C82  FFFF               	dw	65535	; assembler added errata NOP
  5710  001C84  0E00               	movlw	0
  5711  001C86  6E1E               	movwf	(atoi@n+1)^0,c
  5712  001C88  0E00               	movlw	0
  5713  001C8A  6E1D               	movwf	atoi@n^0,c
  5714  001C8C  0E00               	movlw	0
  5715  001C8E  6E17               	movwf	(atoi@neg+1)^0,c
  5716  001C90  0E00               	movlw	0
  5717  001C92  6E16               	movwf	atoi@neg^0,c
  5718  001C94  EF4F  F00E         	goto	l4647
  5719  001C98                     l4645:
  5720  001C98  FFFF               	dw	65535	; assembler added errata NOP
  5721  001C9A  4A10               	infsnz	atoi@s^0,f,c
  5722  001C9C  2A11               	incf	(atoi@s+1)^0,f,c
  5723  001C9E                     l4647:
  5724  001C9E  FFFF               	dw	65535	; assembler added errata NOP
  5725  001CA0  0E01               	movlw	1
  5726  001CA2  6E1C               	movwf	_atoi$1064^0,c
  5727  001CA4  C010  FFD9         	movff	atoi@s,fsr2l
  5728  001CA8  C011  FFDA         	movff	atoi@s+1,fsr2h
  5729  001CAC  0E20               	movlw	32
  5730  001CAE  18DE               	xorwf	postinc2,w,c
  5731  001CB0  B4D8               	btfsc	status,2,c
  5732  001CB2  EF5D  F00E         	goto	u4981
  5733  001CB6  EF60  F00E         	goto	u4980
  5734  001CBA                     u4981:
  5735  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  5736  001CBC  EF7F  F00E         	goto	l4655
  5737  001CC0                     u4980:
  5738  001CC0  FFFF               	dw	65535	; assembler added errata NOP
  5739  001CC2  0EF7               	movlw	247
  5740  001CC4  6E12               	movwf	??_atoi^0,c
  5741  001CC6  0EFF               	movlw	255
  5742  001CC8  6E13               	movwf	(??_atoi+1)^0,c
  5743  001CCA  C010  FFD9         	movff	atoi@s,fsr2l
  5744  001CCE  C011  FFDA         	movff	atoi@s+1,fsr2h
  5745  001CD2  50DF               	movf	indf2,w,c
  5746  001CD4  6E14               	movwf	(??_atoi+2)^0,c
  5747  001CD6  6A15               	clrf	(??_atoi+3)^0,c
  5748  001CD8  5012               	movf	??_atoi^0,w,c
  5749  001CDA  2614               	addwf	(??_atoi+2)^0,f,c
  5750  001CDC  5013               	movf	(??_atoi+1)^0,w,c
  5751  001CDE  2215               	addwfc	(??_atoi+3)^0,f,c
  5752  001CE0  5015               	movf	(??_atoi+3)^0,w,c
  5753  001CE2  E10A               	bnz	u4990
  5754  001CE4  0E05               	movlw	5
  5755  001CE6  5C14               	subwf	(??_atoi+2)^0,w,c
  5756  001CE8  A0D8               	btfss	status,0,c
  5757  001CEA  EF79  F00E         	goto	u4991
  5758  001CEE  EF7C  F00E         	goto	u4990
  5759  001CF2                     u4991:
  5760  001CF2  FFFF               	dw	65535	; assembler added errata NOP
  5761  001CF4  EF7F  F00E         	goto	l4655
  5762  001CF8                     u4990:
  5763  001CF8  FFFF               	dw	65535	; assembler added errata NOP
  5764  001CFA  0E00               	movlw	0
  5765  001CFC  6E1C               	movwf	_atoi$1064^0,c
  5766  001CFE                     l4655:
  5767  001CFE  FFFF               	dw	65535	; assembler added errata NOP
  5768  001D00  C01C  F018         	movff	_atoi$1064,_atoi$1063
  5769  001D04  6A19               	clrf	(_atoi$1063+1)^0,c
  5770  001D06  5018               	movf	_atoi$1063^0,w,c
  5771  001D08  1019               	iorwf	(_atoi$1063+1)^0,w,c
  5772  001D0A  A4D8               	btfss	status,2,c
  5773  001D0C  EF8A  F00E         	goto	u5001
  5774  001D10  EF8D  F00E         	goto	u5000
  5775  001D14                     u5001:
  5776  001D14  FFFF               	dw	65535	; assembler added errata NOP
  5777  001D16  EF4C  F00E         	goto	l4645
  5778  001D1A                     u5000:
  5779  001D1A  FFFF               	dw	65535	; assembler added errata NOP
  5780  001D1C  EF9A  F00E         	goto	l4665
  5781  001D20                     l4661:
  5782  001D20  FFFF               	dw	65535	; assembler added errata NOP
  5783  001D22  0E00               	movlw	0
  5784  001D24  6E17               	movwf	(atoi@neg+1)^0,c
  5785  001D26  0E01               	movlw	1
  5786  001D28  6E16               	movwf	atoi@neg^0,c
  5787  001D2A                     l4663:
  5788  001D2A  FFFF               	dw	65535	; assembler added errata NOP
  5789  001D2C  4A10               	infsnz	atoi@s^0,f,c
  5790  001D2E  2A11               	incf	(atoi@s+1)^0,f,c
  5791  001D30  EFD2  F00E         	goto	l4671
  5792  001D34                     l4665:
  5793  001D34  FFFF               	dw	65535	; assembler added errata NOP
  5794  001D36  C010  FFD9         	movff	atoi@s,fsr2l
  5795  001D3A  C011  FFDA         	movff	atoi@s+1,fsr2h
  5796  001D3E  50DF               	movf	indf2,w,c
  5797  001D40  6E12               	movwf	??_atoi^0,c
  5798  001D42  6A13               	clrf	(??_atoi+1)^0,c
  5799                           
  5800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5801                           ; Switch size 1, requested type "simple"
  5802                           ; Number of cases is 1, Range of values is 0 to 0
  5803                           ; switch strategies available:
  5804                           ; Name         Instructions Cycles
  5805                           ; simple_byte            4     3 (average)
  5806                           ;	Chosen strategy is simple_byte
  5807  001D44  5013               	movf	(??_atoi+1)^0,w,c
  5808  001D46  0A00               	xorlw	0	; case 0
  5809  001D48  B4D8               	btfsc	status,2,c
  5810  001D4A  EFA9  F00E         	goto	l5261
  5811  001D4E  EFD2  F00E         	goto	l4671
  5812  001D52                     l5261:
  5813  001D52  FFFF               	dw	65535	; assembler added errata NOP
  5814                           
  5815                           ; Switch size 1, requested type "simple"
  5816                           ; Number of cases is 2, Range of values is 43 to 45
  5817                           ; switch strategies available:
  5818                           ; Name         Instructions Cycles
  5819                           ; simple_byte            7     4 (average)
  5820                           ;	Chosen strategy is simple_byte
  5821  001D54  5012               	movf	??_atoi^0,w,c
  5822  001D56  0A2B               	xorlw	43	; case 43
  5823  001D58  B4D8               	btfsc	status,2,c
  5824  001D5A  EF95  F00E         	goto	l4663
  5825  001D5E  0A06               	xorlw	6	; case 45
  5826  001D60  B4D8               	btfsc	status,2,c
  5827  001D62  EF90  F00E         	goto	l4661
  5828  001D66  EFD2  F00E         	goto	l4671
  5829  001D6A                     l4667:
  5830  001D6A  FFFF               	dw	65535	; assembler added errata NOP
  5831  001D6C  C01D  F009         	movff	atoi@n,___wmul@multiplier
  5832  001D70  C01E  F00A         	movff	atoi@n+1,___wmul@multiplier+1
  5833  001D74  0E00               	movlw	0
  5834  001D76  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  5835  001D78  0E0A               	movlw	10
  5836  001D7A  6E0B               	movwf	___wmul@multiplicand^0,c
  5837  001D7C  EC00  F017         	call	___wmul	;wreg free
  5838  001D80  C010  FFD9         	movff	atoi@s,fsr2l
  5839  001D84  C011  FFDA         	movff	atoi@s+1,fsr2h
  5840  001D88  50DF               	movf	indf2,w,c
  5841  001D8A  6E12               	movwf	??_atoi^0,c
  5842  001D8C  5012               	movf	??_atoi^0,w,c
  5843  001D8E  5E09               	subwf	?___wmul^0,f,c
  5844  001D90  0E00               	movlw	0
  5845  001D92  5A0A               	subwfb	(?___wmul+1)^0,f,c
  5846  001D94  0E30               	movlw	48
  5847  001D96  2409               	addwf	?___wmul^0,w,c
  5848  001D98  6E1D               	movwf	atoi@n^0,c
  5849  001D9A  0E00               	movlw	0
  5850  001D9C  200A               	addwfc	(?___wmul+1)^0,w,c
  5851  001D9E  6E1E               	movwf	(atoi@n+1)^0,c
  5852  001DA0  EF95  F00E         	goto	l4663
  5853  001DA4                     l4671:
  5854  001DA4  FFFF               	dw	65535	; assembler added errata NOP
  5855  001DA6  0ED0               	movlw	208
  5856  001DA8  6E12               	movwf	??_atoi^0,c
  5857  001DAA  0EFF               	movlw	255
  5858  001DAC  6E13               	movwf	(??_atoi+1)^0,c
  5859  001DAE  C010  FFD9         	movff	atoi@s,fsr2l
  5860  001DB2  C011  FFDA         	movff	atoi@s+1,fsr2h
  5861  001DB6  50DF               	movf	indf2,w,c
  5862  001DB8  6E14               	movwf	(??_atoi+2)^0,c
  5863  001DBA  6A15               	clrf	(??_atoi+3)^0,c
  5864  001DBC  5012               	movf	??_atoi^0,w,c
  5865  001DBE  2614               	addwf	(??_atoi+2)^0,f,c
  5866  001DC0  5013               	movf	(??_atoi+1)^0,w,c
  5867  001DC2  2215               	addwfc	(??_atoi+3)^0,f,c
  5868  001DC4  5015               	movf	(??_atoi+3)^0,w,c
  5869  001DC6  E10B               	bnz	u5010
  5870  001DC8  0E0A               	movlw	10
  5871  001DCA  5C14               	subwf	(??_atoi+2)^0,w,c
  5872  001DCC  A0D8               	btfss	status,0,c
  5873  001DCE  EFEB  F00E         	goto	u5011
  5874  001DD2  EFEF  F00E         	goto	u5010
  5875  001DD6                     u5011:
  5876  001DD6  FFFF               	dw	65535	; assembler added errata NOP
  5877  001DD8  0E01               	movlw	1
  5878  001DDA  EFF1  F00E         	goto	u5020
  5879  001DDE                     u5010:
  5880  001DDE  FFFF               	dw	65535	; assembler added errata NOP
  5881  001DE0  0E00               	movlw	0
  5882  001DE2                     u5020:
  5883  001DE2  FFFF               	dw	65535	; assembler added errata NOP
  5884  001DE4  6E1A               	movwf	_atoi$1065^0,c
  5885  001DE6  6A1B               	clrf	(_atoi$1065+1)^0,c
  5886  001DE8  501A               	movf	_atoi$1065^0,w,c
  5887  001DEA  101B               	iorwf	(_atoi$1065+1)^0,w,c
  5888  001DEC  A4D8               	btfss	status,2,c
  5889  001DEE  EFFB  F00E         	goto	u5031
  5890  001DF2  EFFE  F00E         	goto	u5030
  5891  001DF6                     u5031:
  5892  001DF6  FFFF               	dw	65535	; assembler added errata NOP
  5893  001DF8  EFB5  F00E         	goto	l4667
  5894  001DFC                     u5030:
  5895  001DFC  FFFF               	dw	65535	; assembler added errata NOP
  5896  001DFE  5016               	movf	atoi@neg^0,w,c
  5897  001E00  1017               	iorwf	(atoi@neg+1)^0,w,c
  5898  001E02  A4D8               	btfss	status,2,c
  5899  001E04  EF06  F00F         	goto	u5041
  5900  001E08  EF09  F00F         	goto	u5040
  5901  001E0C                     u5041:
  5902  001E0C  FFFF               	dw	65535	; assembler added errata NOP
  5903  001E0E  EF18  F00F         	goto	l1055
  5904  001E12                     u5040:
  5905  001E12  FFFF               	dw	65535	; assembler added errata NOP
  5906  001E14  C01D  F012         	movff	atoi@n,??_atoi
  5907  001E18  C01E  F013         	movff	atoi@n+1,??_atoi+1
  5908  001E1C  1E12               	comf	??_atoi^0,f,c
  5909  001E1E  1E13               	comf	(??_atoi+1)^0,f,c
  5910  001E20  4A12               	infsnz	??_atoi^0,f,c
  5911  001E22  2A13               	incf	(??_atoi+1)^0,f,c
  5912  001E24  C012  F010         	movff	??_atoi,?_atoi
  5913  001E28  C013  F011         	movff	??_atoi+1,?_atoi+1
  5914  001E2C  EF1D  F00F         	goto	l1058
  5915  001E30                     l1055:
  5916  001E30  FFFF               	dw	65535	; assembler added errata NOP
  5917  001E32  C01D  F010         	movff	atoi@n,?_atoi
  5918  001E36  C01E  F011         	movff	atoi@n+1,?_atoi+1
  5919  001E3A                     l1058:
  5920  001E3A  FFFF               	dw	65535	; assembler added errata NOP
  5921  001E3C  0012               	return		;funcret
  5922  001E3E  FFFF               	dw	65535	; errata NOP
  5923  001E40                     __end_of_atoi:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _isspace *****************
  5927 ;; Defined at:
  5928 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  c               2    8[COMRAM] int 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  2    8[COMRAM] int 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5942 ;;      Params:         2       0       0       0       0       0       0
  5943 ;;      Locals:         1       0       0       0       0       0       0
  5944 ;;      Temps:          4       0       0       0       0       0       0
  5945 ;;      Totals:         7       0       0       0       0       0       0
  5946 ;;Total ram usage:        7 bytes
  5947 ;; Hardware stack levels used: 1
  5948 ;; Hardware stack levels required when called: 2
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_atoi
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text23
  5957  002B7A                     __ptext23:
  5958                           	callstack 0
  5959  002B7A                     _isspace:
  5960                           	callstack 25
  5961  002B7A  FFFF               	dw	65535	; assembler added errata NOP
  5962  002B7C  0E01               	movlw	1
  5963  002B7E  6E0F               	movwf	_isspace$1081^0,c
  5964  002B80  0E20               	movlw	32
  5965  002B82  1809               	xorwf	isspace@c^0,w,c
  5966  002B84  100A               	iorwf	(isspace@c+1)^0,w,c
  5967  002B86  B4D8               	btfsc	status,2,c
  5968  002B88  EFC8  F015         	goto	u4771
  5969  002B8C  EFCB  F015         	goto	u4770
  5970  002B90                     u4771:
  5971  002B90  FFFF               	dw	65535	; assembler added errata NOP
  5972  002B92  EFE7  F015         	goto	l4519
  5973  002B96                     u4770:
  5974  002B96  FFFF               	dw	65535	; assembler added errata NOP
  5975  002B98  0EF7               	movlw	247
  5976  002B9A  6E0B               	movwf	??_isspace^0,c
  5977  002B9C  0EFF               	movlw	255
  5978  002B9E  6E0C               	movwf	(??_isspace+1)^0,c
  5979  002BA0  C009  F00D         	movff	isspace@c,??_isspace+2
  5980  002BA4  C00A  F00E         	movff	isspace@c+1,??_isspace+3
  5981  002BA8  500B               	movf	??_isspace^0,w,c
  5982  002BAA  260D               	addwf	(??_isspace+2)^0,f,c
  5983  002BAC  500C               	movf	(??_isspace+1)^0,w,c
  5984  002BAE  220E               	addwfc	(??_isspace+3)^0,f,c
  5985  002BB0  500E               	movf	(??_isspace+3)^0,w,c
  5986  002BB2  E10A               	bnz	u4780
  5987  002BB4  0E05               	movlw	5
  5988  002BB6  5C0D               	subwf	(??_isspace+2)^0,w,c
  5989  002BB8  A0D8               	btfss	status,0,c
  5990  002BBA  EFE1  F015         	goto	u4781
  5991  002BBE  EFE4  F015         	goto	u4780
  5992  002BC2                     u4781:
  5993  002BC2  FFFF               	dw	65535	; assembler added errata NOP
  5994  002BC4  EFE7  F015         	goto	l4519
  5995  002BC8                     u4780:
  5996  002BC8  FFFF               	dw	65535	; assembler added errata NOP
  5997  002BCA  0E00               	movlw	0
  5998  002BCC  6E0F               	movwf	_isspace$1081^0,c
  5999  002BCE                     l4519:
  6000  002BCE  FFFF               	dw	65535	; assembler added errata NOP
  6001  002BD0  C00F  F009         	movff	_isspace$1081,?_isspace
  6002  002BD4  6A0A               	clrf	(?_isspace+1)^0,c
  6003  002BD6  0012               	return		;funcret
  6004  002BD8  FFFF               	dw	65535	; errata NOP
  6005  002BDA                     __end_of_isspace:
  6006                           	callstack 0
  6007                           
  6008 ;; *************** function _isdigit *****************
  6009 ;; Defined at:
  6010 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  c               2    8[COMRAM] int 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  2    8[COMRAM] int 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6024 ;;      Params:         2       0       0       0       0       0       0
  6025 ;;      Locals:         0       0       0       0       0       0       0
  6026 ;;      Temps:          4       0       0       0       0       0       0
  6027 ;;      Totals:         6       0       0       0       0       0       0
  6028 ;;Total ram usage:        6 bytes
  6029 ;; Hardware stack levels used: 1
  6030 ;; Hardware stack levels required when called: 2
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_atoi
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text24
  6039  002CC2                     __ptext24:
  6040                           	callstack 0
  6041  002CC2                     _isdigit:
  6042                           	callstack 25
  6043  002CC2  FFFF               	dw	65535	; assembler added errata NOP
  6044  002CC4  0ED0               	movlw	208
  6045  002CC6  6E0B               	movwf	??_isdigit^0,c
  6046  002CC8  0EFF               	movlw	255
  6047  002CCA  6E0C               	movwf	(??_isdigit+1)^0,c
  6048  002CCC  C009  F00D         	movff	isdigit@c,??_isdigit+2
  6049  002CD0  C00A  F00E         	movff	isdigit@c+1,??_isdigit+3
  6050  002CD4  500B               	movf	??_isdigit^0,w,c
  6051  002CD6  260D               	addwf	(??_isdigit+2)^0,f,c
  6052  002CD8  500C               	movf	(??_isdigit+1)^0,w,c
  6053  002CDA  220E               	addwfc	(??_isdigit+3)^0,f,c
  6054  002CDC  500E               	movf	(??_isdigit+3)^0,w,c
  6055  002CDE  E10B               	bnz	u4790
  6056  002CE0  0E0A               	movlw	10
  6057  002CE2  5C0D               	subwf	(??_isdigit+2)^0,w,c
  6058  002CE4  A0D8               	btfss	status,0,c
  6059  002CE6  EF77  F016         	goto	u4791
  6060  002CEA  EF7B  F016         	goto	u4790
  6061  002CEE                     u4791:
  6062  002CEE  FFFF               	dw	65535	; assembler added errata NOP
  6063  002CF0  0E01               	movlw	1
  6064  002CF2  EF7D  F016         	goto	u4800
  6065  002CF6                     u4790:
  6066  002CF6  FFFF               	dw	65535	; assembler added errata NOP
  6067  002CF8  0E00               	movlw	0
  6068  002CFA                     u4800:
  6069  002CFA  FFFF               	dw	65535	; assembler added errata NOP
  6070  002CFC  6E09               	movwf	?_isdigit^0,c
  6071  002CFE  6A0A               	clrf	(?_isdigit+1)^0,c
  6072  002D00  0012               	return		;funcret
  6073  002D02  FFFF               	dw	65535	; errata NOP
  6074  002D04                     __end_of_isdigit:
  6075                           	callstack 0
  6076                           
  6077 ;; *************** function ___wmul *****************
  6078 ;; Defined at:
  6079 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  multiplier      2    8[COMRAM] unsigned int 
  6082 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  product         2   12[COMRAM] unsigned int 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  2    8[COMRAM] unsigned int 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0, prodl, prodh
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6094 ;;      Params:         4       0       0       0       0       0       0
  6095 ;;      Locals:         2       0       0       0       0       0       0
  6096 ;;      Temps:          0       0       0       0       0       0       0
  6097 ;;      Totals:         6       0       0       0       0       0       0
  6098 ;;Total ram usage:        6 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; Hardware stack levels required when called: 2
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_atoi
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text25
  6109  002E00                     __ptext25:
  6110                           	callstack 0
  6111  002E00                     ___wmul:
  6112                           	callstack 0
  6113  002E00  FFFF               	dw	65535	; assembler added errata NOP
  6114  002E02  5009               	movf	___wmul@multiplier^0,w,c
  6115  002E04  020B               	mulwf	___wmul@multiplicand^0,c
  6116  002E06  CFF3 F00D          	movff	prodl,___wmul@product
  6117  002E0A  CFF4 F00E          	movff	prodh,___wmul@product+1
  6118  002E0E  5009               	movf	___wmul@multiplier^0,w,c
  6119  002E10  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  6120  002E12  50F3               	movf	243,w,c
  6121  002E14  260E               	addwf	(___wmul@product+1)^0,f,c
  6122  002E16  500A               	movf	(___wmul@multiplier+1)^0,w,c
  6123  002E18  020B               	mulwf	___wmul@multiplicand^0,c
  6124  002E1A  50F3               	movf	243,w,c
  6125  002E1C  260E               	addwf	(___wmul@product+1)^0,f,c
  6126  002E1E  C00D  F009         	movff	___wmul@product,?___wmul
  6127  002E22  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6128  002E26  0012               	return		;funcret
  6129  002E28  FFFF               	dw	65535	; errata NOP
  6130  002E2A                     __end_of___wmul:
  6131                           	callstack 0
  6132                           
  6133 ;; *************** function _init_interrupts *****************
  6134 ;; Defined at:
  6135 ;;		line 27 in file "init_PIC.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;		None
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		None
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6149 ;;      Params:         0       0       0       0       0       0       0
  6150 ;;      Locals:         0       0       0       0       0       0       0
  6151 ;;      Temps:          0       0       0       0       0       0       0
  6152 ;;      Totals:         0       0       0       0       0       0       0
  6153 ;;Total ram usage:        0 bytes
  6154 ;; Hardware stack levels used: 1
  6155 ;; Hardware stack levels required when called: 2
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_main
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text26
  6164  002E9C                     __ptext26:
  6165                           	callstack 0
  6166  002E9C                     _init_interrupts:
  6167                           	callstack 0
  6168  002E9C  FFFF               	dw	65535	; assembler added errata NOP
  6169  002E9E                     
  6170                           ;init_PIC.c: 29:     PIR1bits.RCIF = 0;
  6171  002E9E  9A9E               	bcf	158,5,c	;volatile
  6172                           
  6173                           ;init_PIC.c: 30:  PIE1bits.RCIE = 1;
  6174  002EA0  8A9D               	bsf	157,5,c	;volatile
  6175                           
  6176                           ;init_PIC.c: 31:  INTCONbits.PEIE = 1;
  6177  002EA2  8CF2               	bsf	242,6,c	;volatile
  6178  002EA4  0012               	return		;funcret
  6179  002EA6  FFFF               	dw	65535	; errata NOP
  6180  002EA8                     __end_of_init_interrupts:
  6181                           	callstack 0
  6182                           
  6183 ;; *************** function _init_USART *****************
  6184 ;; Defined at:
  6185 ;;		line 17 in file "serial_rs232.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6199 ;;      Params:         0       0       0       0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used: 1
  6205 ;; Hardware stack levels required when called: 5
  6206 ;; This function calls:
  6207 ;;		___fltol
  6208 ;;		_roundf
  6209 ;; This function is called by:
  6210 ;;		_main
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text27
  6215  002D86                     __ptext27:
  6216                           	callstack 0
  6217  002D86                     _init_USART:
  6218                           	callstack 0
  6219  002D86  FFFF               	dw	65535	; assembler added errata NOP
  6220  002D88                     
  6221                           ;serial_rs232.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  6222  002D88  0E55               	movlw	85
  6223  002D8A  6E3C               	movwf	roundf@x^0,c
  6224  002D8C  0E55               	movlw	85
  6225  002D8E  6E3D               	movwf	(roundf@x+1)^0,c
  6226  002D90  0EC8               	movlw	200
  6227  002D92  6E3E               	movwf	(roundf@x+2)^0,c
  6228  002D94  0E41               	movlw	65
  6229  002D96  6E3F               	movwf	(roundf@x+3)^0,c
  6230  002D98  EC5B  F00A         	call	_roundf	;wreg free
  6231  002D9C  C03C  F056         	movff	?_roundf,___fltol@f1
  6232  002DA0  C03D  F057         	movff	?_roundf+1,___fltol@f1+1
  6233  002DA4  C03E  F058         	movff	?_roundf+2,___fltol@f1+2
  6234  002DA8  C03F  F059         	movff	?_roundf+3,___fltol@f1+3
  6235  002DAC  EC98  F010         	call	___fltol	;wreg free
  6236  002DB0  5056               	movf	?___fltol^0,w,c
  6237  002DB2  6EAF               	movwf	175,c	;volatile
  6238  002DB4                     
  6239                           ;serial_rs232.c: 35:  TXSTAbits.TX9=0;
  6240  002DB4  9CAC               	bcf	172,6,c	;volatile
  6241  002DB6                     
  6242                           ;serial_rs232.c: 36:     TXSTAbits.TXEN=1;
  6243  002DB6  8AAC               	bsf	172,5,c	;volatile
  6244  002DB8                     
  6245                           ;serial_rs232.c: 37:     TXSTAbits.SYNC=0;
  6246  002DB8  98AC               	bcf	172,4,c	;volatile
  6247  002DBA                     
  6248                           ;serial_rs232.c: 38:     TXSTAbits.BRGH=1;
  6249  002DBA  84AC               	bsf	172,2,c	;volatile
  6250  002DBC                     
  6251                           ;serial_rs232.c: 39:     RCSTAbits.SPEN=1;
  6252  002DBC  8EAB               	bsf	171,7,c	;volatile
  6253  002DBE                     
  6254                           ;serial_rs232.c: 40:     RCSTAbits.RX9=0;
  6255  002DBE  9CAB               	bcf	171,6,c	;volatile
  6256  002DC0                     
  6257                           ;serial_rs232.c: 41:     RCSTAbits.CREN=1;
  6258  002DC0  88AB               	bsf	171,4,c	;volatile
  6259  002DC2  0012               	return		;funcret
  6260  002DC4  FFFF               	dw	65535	; errata NOP
  6261  002DC6                     __end_of_init_USART:
  6262                           	callstack 0
  6263                           
  6264 ;; *************** function _roundf *****************
  6265 ;; Defined at:
  6266 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  x               4   59[COMRAM] float 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;  y               4   81[COMRAM] float 
  6271 ;;  u               4   77[COMRAM] struct .
  6272 ;;  e               2   71[COMRAM] int 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  4   59[COMRAM] float 
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6282 ;;      Params:         4       0       0       0       0       0       0
  6283 ;;      Locals:        18       0       0       0       0       0       0
  6284 ;;      Temps:          4       0       0       0       0       0       0
  6285 ;;      Totals:        26       0       0       0       0       0       0
  6286 ;;Total ram usage:       26 bytes
  6287 ;; Hardware stack levels used: 1
  6288 ;; Hardware stack levels required when called: 4
  6289 ;; This function calls:
  6290 ;;		___fladd
  6291 ;;		___flge
  6292 ;;		___flmul
  6293 ;;		___flneg
  6294 ;;		___flsub
  6295 ;; This function is called by:
  6296 ;;		_init_USART
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text28
  6301  0014B6                     __ptext28:
  6302                           	callstack 0
  6303  0014B6                     _roundf:
  6304                           	callstack 0
  6305  0014B6  FFFF               	dw	65535	; assembler added errata NOP
  6306  0014B8  C0CD  F04E         	movff	roundf@F528,roundf@u
  6307  0014BC  C0CE  F04F         	movff	roundf@F528+1,roundf@u+1
  6308  0014C0  C0CF  F050         	movff	roundf@F528+2,roundf@u+2
  6309  0014C4  C0D0  F051         	movff	roundf@F528+3,roundf@u+3
  6310  0014C8  C03C  F04E         	movff	roundf@x,roundf@u
  6311  0014CC  C03D  F04F         	movff	roundf@x+1,roundf@u+1
  6312  0014D0  C03E  F050         	movff	roundf@x+2,roundf@u+2
  6313  0014D4  C03F  F051         	movff	roundf@x+3,roundf@u+3
  6314  0014D8  C04E  F040         	movff	roundf@u,??_roundf
  6315  0014DC  C04F  F041         	movff	roundf@u+1,??_roundf+1
  6316  0014E0  C050  F042         	movff	roundf@u+2,??_roundf+2
  6317  0014E4  C051  F043         	movff	roundf@u+3,??_roundf+3
  6318  0014E8  0E18               	movlw	24
  6319  0014EA  EF7D  F00A         	goto	u5320
  6320  0014EE                     u5325:
  6321  0014EE  FFFF               	dw	65535	; assembler added errata NOP
  6322  0014F0  90D8               	bcf	status,0,c
  6323  0014F2  3243               	rrcf	(??_roundf+3)^0,f,c
  6324  0014F4  3242               	rrcf	(??_roundf+2)^0,f,c
  6325  0014F6  3241               	rrcf	(??_roundf+1)^0,f,c
  6326  0014F8  3240               	rrcf	??_roundf^0,f,c
  6327  0014FA                     u5320:
  6328  0014FA  FFFF               	dw	65535	; assembler added errata NOP
  6329  0014FC  2EE8               	decfsz	wreg,f,c
  6330  0014FE  EF77  F00A         	goto	u5325
  6331  001502  5040               	movf	??_roundf^0,w,c
  6332  001504  6E48               	movwf	roundf@e^0,c
  6333  001506  6A49               	clrf	(roundf@e+1)^0,c
  6334  001508  BE49               	btfsc	(roundf@e+1)^0,7,c
  6335  00150A  EF90  F00A         	goto	u5331
  6336  00150E  5049               	movf	(roundf@e+1)^0,w,c
  6337  001510  E10A               	bnz	u5330
  6338  001512  0E96               	movlw	150
  6339  001514  5C48               	subwf	roundf@e^0,w,c
  6340  001516  A0D8               	btfss	status,0,c
  6341  001518  EF90  F00A         	goto	u5331
  6342  00151C  EF93  F00A         	goto	u5330
  6343  001520                     u5331:
  6344  001520  FFFF               	dw	65535	; assembler added errata NOP
  6345  001522  EF9E  F00A         	goto	l4881
  6346  001526                     u5330:
  6347  001526  FFFF               	dw	65535	; assembler added errata NOP
  6348  001528  C03C  F03C         	movff	roundf@x,?_roundf
  6349  00152C  C03D  F03D         	movff	roundf@x+1,?_roundf+1
  6350  001530  C03E  F03E         	movff	roundf@x+2,?_roundf+2
  6351  001534  C03F  F03F         	movff	roundf@x+3,?_roundf+3
  6352  001538  EF4B  F00C         	goto	l1090
  6353  00153C                     l4881:
  6354  00153C  FFFF               	dw	65535	; assembler added errata NOP
  6355  00153E  C04E  F040         	movff	roundf@u,??_roundf
  6356  001542  C04F  F041         	movff	roundf@u+1,??_roundf+1
  6357  001546  C050  F042         	movff	roundf@u+2,??_roundf+2
  6358  00154A  C051  F043         	movff	roundf@u+3,??_roundf+3
  6359  00154E  0E20               	movlw	32
  6360  001550  EFB0  F00A         	goto	u5340
  6361  001554                     u5345:
  6362  001554  FFFF               	dw	65535	; assembler added errata NOP
  6363  001556  90D8               	bcf	status,0,c
  6364  001558  3243               	rrcf	(??_roundf+3)^0,f,c
  6365  00155A  3242               	rrcf	(??_roundf+2)^0,f,c
  6366  00155C  3241               	rrcf	(??_roundf+1)^0,f,c
  6367  00155E  3240               	rrcf	??_roundf^0,f,c
  6368  001560                     u5340:
  6369  001560  FFFF               	dw	65535	; assembler added errata NOP
  6370  001562  2EE8               	decfsz	wreg,f,c
  6371  001564  EFAA  F00A         	goto	u5345
  6372  001568  5040               	movf	??_roundf^0,w,c
  6373  00156A  1041               	iorwf	(??_roundf+1)^0,w,c
  6374  00156C  1042               	iorwf	(??_roundf+2)^0,w,c
  6375  00156E  1043               	iorwf	(??_roundf+3)^0,w,c
  6376  001570  B4D8               	btfsc	status,2,c
  6377  001572  EFBD  F00A         	goto	u5351
  6378  001576  EFC0  F00A         	goto	u5350
  6379  00157A                     u5351:
  6380  00157A  FFFF               	dw	65535	; assembler added errata NOP
  6381  00157C  EFD3  F00A         	goto	l4885
  6382  001580                     u5350:
  6383  001580  FFFF               	dw	65535	; assembler added errata NOP
  6384  001582  C03C  F009         	movff	roundf@x,___flneg@f1
  6385  001586  C03D  F00A         	movff	roundf@x+1,___flneg@f1+1
  6386  00158A  C03E  F00B         	movff	roundf@x+2,___flneg@f1+2
  6387  00158E  C03F  F00C         	movff	roundf@x+3,___flneg@f1+3
  6388  001592  EC82  F016         	call	___flneg	;wreg free
  6389  001596  C009  F03C         	movff	?___flneg,roundf@x
  6390  00159A  C00A  F03D         	movff	?___flneg+1,roundf@x+1
  6391  00159E  C00B  F03E         	movff	?___flneg+2,roundf@x+2
  6392  0015A2  C00C  F03F         	movff	?___flneg+3,roundf@x+3
  6393  0015A6                     l4885:
  6394  0015A6  FFFF               	dw	65535	; assembler added errata NOP
  6395  0015A8  BE49               	btfsc	(roundf@e+1)^0,7,c
  6396  0015AA  EFE3  F00A         	goto	u5360
  6397  0015AE  5049               	movf	(roundf@e+1)^0,w,c
  6398  0015B0  E107               	bnz	u5361
  6399  0015B2  0E7E               	movlw	126
  6400  0015B4  5C48               	subwf	roundf@e^0,w,c
  6401  0015B6  B0D8               	btfsc	status,0,c
  6402  0015B8  EFE0  F00A         	goto	u5361
  6403  0015BC  EFE3  F00A         	goto	u5360
  6404  0015C0                     u5361:
  6405  0015C0  FFFF               	dw	65535	; assembler added errata NOP
  6406  0015C2  EF00  F00B         	goto	l4891
  6407  0015C6                     u5360:
  6408  0015C6  FFFF               	dw	65535	; assembler added errata NOP
  6409  0015C8  C04E  F009         	movff	roundf@u,___flmul@b
  6410  0015CC  C04F  F00A         	movff	roundf@u+1,___flmul@b+1
  6411  0015D0  C050  F00B         	movff	roundf@u+2,___flmul@b+2
  6412  0015D4  C051  F00C         	movff	roundf@u+3,___flmul@b+3
  6413  0015D8  0E00               	movlw	0
  6414  0015DA  6E0D               	movwf	___flmul@a^0,c
  6415  0015DC  0E00               	movlw	0
  6416  0015DE  6E0E               	movwf	(___flmul@a+1)^0,c
  6417  0015E0  0E00               	movlw	0
  6418  0015E2  6E0F               	movwf	(___flmul@a+2)^0,c
  6419  0015E4  0E00               	movlw	0
  6420  0015E6  6E10               	movwf	(___flmul@a+3)^0,c
  6421  0015E8  ECF0  F005         	call	___flmul	;wreg free
  6422  0015EC  C009  F03C         	movff	?___flmul,?_roundf
  6423  0015F0  C00A  F03D         	movff	?___flmul+1,?_roundf+1
  6424  0015F4  C00B  F03E         	movff	?___flmul+2,?_roundf+2
  6425  0015F8  C00C  F03F         	movff	?___flmul+3,?_roundf+3
  6426  0015FC  EF4B  F00C         	goto	l1090
  6427  001600                     l4891:
  6428  001600  FFFF               	dw	65535	; assembler added errata NOP
  6429  001602  0E00               	movlw	0
  6430  001604  6E0D               	movwf	___fladd@a^0,c
  6431  001606  0E00               	movlw	0
  6432  001608  6E0E               	movwf	(___fladd@a+1)^0,c
  6433  00160A  0E00               	movlw	0
  6434  00160C  6E0F               	movwf	(___fladd@a+2)^0,c
  6435  00160E  0E4B               	movlw	75
  6436  001610  6E10               	movwf	(___fladd@a+3)^0,c
  6437  001612  C03C  F009         	movff	roundf@x,___fladd@b
  6438  001616  C03D  F00A         	movff	roundf@x+1,___fladd@b+1
  6439  00161A  C03E  F00B         	movff	roundf@x+2,___fladd@b+2
  6440  00161E  C03F  F00C         	movff	roundf@x+3,___fladd@b+3
  6441  001622  EC4C  F000         	call	___fladd	;wreg free
  6442  001626  C009  F04A         	movff	?___fladd,_roundf$1329
  6443  00162A  C00A  F04B         	movff	?___fladd+1,_roundf$1329+1
  6444  00162E  C00B  F04C         	movff	?___fladd+2,_roundf$1329+2
  6445  001632  C00C  F04D         	movff	?___fladd+3,_roundf$1329+3
  6446  001636  0E00               	movlw	0
  6447  001638  6E0D               	movwf	___fladd@a^0,c
  6448  00163A  0E00               	movlw	0
  6449  00163C  6E0E               	movwf	(___fladd@a+1)^0,c
  6450  00163E  0E00               	movlw	0
  6451  001640  6E0F               	movwf	(___fladd@a+2)^0,c
  6452  001642  0ECB               	movlw	203
  6453  001644  6E10               	movwf	(___fladd@a+3)^0,c
  6454  001646  C04A  F009         	movff	_roundf$1329,___fladd@b
  6455  00164A  C04B  F00A         	movff	_roundf$1329+1,___fladd@b+1
  6456  00164E  C04C  F00B         	movff	_roundf$1329+2,___fladd@b+2
  6457  001652  C04D  F00C         	movff	_roundf$1329+3,___fladd@b+3
  6458  001656  EC4C  F000         	call	___fladd	;wreg free
  6459  00165A  C009  F044         	movff	?___fladd,_roundf$1330
  6460  00165E  C00A  F045         	movff	?___fladd+1,_roundf$1330+1
  6461  001662  C00B  F046         	movff	?___fladd+2,_roundf$1330+2
  6462  001666  C00C  F047         	movff	?___fladd+3,_roundf$1330+3
  6463  00166A  C044  F019         	movff	_roundf$1330,___flsub@b
  6464  00166E  C045  F01A         	movff	_roundf$1330+1,___flsub@b+1
  6465  001672  C046  F01B         	movff	_roundf$1330+2,___flsub@b+2
  6466  001676  C047  F01C         	movff	_roundf$1330+3,___flsub@b+3
  6467  00167A  C03C  F01D         	movff	roundf@x,___flsub@a
  6468  00167E  C03D  F01E         	movff	roundf@x+1,___flsub@a+1
  6469  001682  C03E  F01F         	movff	roundf@x+2,___flsub@a+2
  6470  001686  C03F  F020         	movff	roundf@x+3,___flsub@a+3
  6471  00168A  EC1B  F016         	call	___flsub	;wreg free
  6472  00168E  C019  F052         	movff	?___flsub,roundf@y
  6473  001692  C01A  F053         	movff	?___flsub+1,roundf@y+1
  6474  001696  C01B  F054         	movff	?___flsub+2,roundf@y+2
  6475  00169A  C01C  F055         	movff	?___flsub+3,roundf@y+3
  6476  00169E  0E00               	movlw	0
  6477  0016A0  6E30               	movwf	___flge@ff1^0,c
  6478  0016A2  0E00               	movlw	0
  6479  0016A4  6E31               	movwf	(___flge@ff1+1)^0,c
  6480  0016A6  0E00               	movlw	0
  6481  0016A8  6E32               	movwf	(___flge@ff1+2)^0,c
  6482  0016AA  0E3F               	movlw	63
  6483  0016AC  6E33               	movwf	(___flge@ff1+3)^0,c
  6484  0016AE  C052  F034         	movff	roundf@y,___flge@ff2
  6485  0016B2  C053  F035         	movff	roundf@y+1,___flge@ff2+1
  6486  0016B6  C054  F036         	movff	roundf@y+2,___flge@ff2+2
  6487  0016BA  C055  F037         	movff	roundf@y+3,___flge@ff2+3
  6488  0016BE  EC34  F011         	call	___flge	;wreg free
  6489  0016C2  B0D8               	btfsc	status,0,c
  6490  0016C4  EF66  F00B         	goto	u5371
  6491  0016C8  EF69  F00B         	goto	u5370
  6492  0016CC                     u5371:
  6493  0016CC  FFFF               	dw	65535	; assembler added errata NOP
  6494  0016CE  EFA0  F00B         	goto	l4895
  6495  0016D2                     u5370:
  6496  0016D2  FFFF               	dw	65535	; assembler added errata NOP
  6497  0016D4  C03C  F00D         	movff	roundf@x,___fladd@a
  6498  0016D8  C03D  F00E         	movff	roundf@x+1,___fladd@a+1
  6499  0016DC  C03E  F00F         	movff	roundf@x+2,___fladd@a+2
  6500  0016E0  C03F  F010         	movff	roundf@x+3,___fladd@a+3
  6501  0016E4  C052  F009         	movff	roundf@y,___fladd@b
  6502  0016E8  C053  F00A         	movff	roundf@y+1,___fladd@b+1
  6503  0016EC  C054  F00B         	movff	roundf@y+2,___fladd@b+2
  6504  0016F0  C055  F00C         	movff	roundf@y+3,___fladd@b+3
  6505  0016F4  EC4C  F000         	call	___fladd	;wreg free
  6506  0016F8  C009  F04A         	movff	?___fladd,_roundf$1329
  6507  0016FC  C00A  F04B         	movff	?___fladd+1,_roundf$1329+1
  6508  001700  C00B  F04C         	movff	?___fladd+2,_roundf$1329+2
  6509  001704  C00C  F04D         	movff	?___fladd+3,_roundf$1329+3
  6510  001708  C04A  F009         	movff	_roundf$1329,___fladd@b
  6511  00170C  C04B  F00A         	movff	_roundf$1329+1,___fladd@b+1
  6512  001710  C04C  F00B         	movff	_roundf$1329+2,___fladd@b+2
  6513  001714  C04D  F00C         	movff	_roundf$1329+3,___fladd@b+3
  6514  001718  0E00               	movlw	0
  6515  00171A  6E0D               	movwf	___fladd@a^0,c
  6516  00171C  0E00               	movlw	0
  6517  00171E  6E0E               	movwf	(___fladd@a+1)^0,c
  6518  001720  0E80               	movlw	128
  6519  001722  6E0F               	movwf	(___fladd@a+2)^0,c
  6520  001724  0EBF               	movlw	191
  6521  001726  6E10               	movwf	(___fladd@a+3)^0,c
  6522  001728  EC4C  F000         	call	___fladd	;wreg free
  6523  00172C  C009  F052         	movff	?___fladd,roundf@y
  6524  001730  C00A  F053         	movff	?___fladd+1,roundf@y+1
  6525  001734  C00B  F054         	movff	?___fladd+2,roundf@y+2
  6526  001738  C00C  F055         	movff	?___fladd+3,roundf@y+3
  6527  00173C  EF0D  F00C         	goto	l4901
  6528  001740                     l4895:
  6529  001740  FFFF               	dw	65535	; assembler added errata NOP
  6530  001742  0E00               	movlw	0
  6531  001744  6E30               	movwf	___flge@ff1^0,c
  6532  001746  0E00               	movlw	0
  6533  001748  6E31               	movwf	(___flge@ff1+1)^0,c
  6534  00174A  0E00               	movlw	0
  6535  00174C  6E32               	movwf	(___flge@ff1+2)^0,c
  6536  00174E  0EBF               	movlw	191
  6537  001750  6E33               	movwf	(___flge@ff1+3)^0,c
  6538  001752  C052  F034         	movff	roundf@y,___flge@ff2
  6539  001756  C053  F035         	movff	roundf@y+1,___flge@ff2+1
  6540  00175A  C054  F036         	movff	roundf@y+2,___flge@ff2+2
  6541  00175E  C055  F037         	movff	roundf@y+3,___flge@ff2+3
  6542  001762  EC34  F011         	call	___flge	;wreg free
  6543  001766  A0D8               	btfss	status,0,c
  6544  001768  EFB8  F00B         	goto	u5381
  6545  00176C  EFBB  F00B         	goto	u5380
  6546  001770                     u5381:
  6547  001770  FFFF               	dw	65535	; assembler added errata NOP
  6548  001772  EFF2  F00B         	goto	l4899
  6549  001776                     u5380:
  6550  001776  FFFF               	dw	65535	; assembler added errata NOP
  6551  001778  C03C  F00D         	movff	roundf@x,___fladd@a
  6552  00177C  C03D  F00E         	movff	roundf@x+1,___fladd@a+1
  6553  001780  C03E  F00F         	movff	roundf@x+2,___fladd@a+2
  6554  001784  C03F  F010         	movff	roundf@x+3,___fladd@a+3
  6555  001788  C052  F009         	movff	roundf@y,___fladd@b
  6556  00178C  C053  F00A         	movff	roundf@y+1,___fladd@b+1
  6557  001790  C054  F00B         	movff	roundf@y+2,___fladd@b+2
  6558  001794  C055  F00C         	movff	roundf@y+3,___fladd@b+3
  6559  001798  EC4C  F000         	call	___fladd	;wreg free
  6560  00179C  C009  F04A         	movff	?___fladd,_roundf$1329
  6561  0017A0  C00A  F04B         	movff	?___fladd+1,_roundf$1329+1
  6562  0017A4  C00B  F04C         	movff	?___fladd+2,_roundf$1329+2
  6563  0017A8  C00C  F04D         	movff	?___fladd+3,_roundf$1329+3
  6564  0017AC  C04A  F009         	movff	_roundf$1329,___fladd@b
  6565  0017B0  C04B  F00A         	movff	_roundf$1329+1,___fladd@b+1
  6566  0017B4  C04C  F00B         	movff	_roundf$1329+2,___fladd@b+2
  6567  0017B8  C04D  F00C         	movff	_roundf$1329+3,___fladd@b+3
  6568  0017BC  0E00               	movlw	0
  6569  0017BE  6E0D               	movwf	___fladd@a^0,c
  6570  0017C0  0E00               	movlw	0
  6571  0017C2  6E0E               	movwf	(___fladd@a+1)^0,c
  6572  0017C4  0E80               	movlw	128
  6573  0017C6  6E0F               	movwf	(___fladd@a+2)^0,c
  6574  0017C8  0E3F               	movlw	63
  6575  0017CA  6E10               	movwf	(___fladd@a+3)^0,c
  6576  0017CC  EC4C  F000         	call	___fladd	;wreg free
  6577  0017D0  C009  F052         	movff	?___fladd,roundf@y
  6578  0017D4  C00A  F053         	movff	?___fladd+1,roundf@y+1
  6579  0017D8  C00B  F054         	movff	?___fladd+2,roundf@y+2
  6580  0017DC  C00C  F055         	movff	?___fladd+3,roundf@y+3
  6581  0017E0  EF0D  F00C         	goto	l4901
  6582  0017E4                     l4899:
  6583  0017E4  FFFF               	dw	65535	; assembler added errata NOP
  6584  0017E6  C052  F009         	movff	roundf@y,___fladd@b
  6585  0017EA  C053  F00A         	movff	roundf@y+1,___fladd@b+1
  6586  0017EE  C054  F00B         	movff	roundf@y+2,___fladd@b+2
  6587  0017F2  C055  F00C         	movff	roundf@y+3,___fladd@b+3
  6588  0017F6  C03C  F00D         	movff	roundf@x,___fladd@a
  6589  0017FA  C03D  F00E         	movff	roundf@x+1,___fladd@a+1
  6590  0017FE  C03E  F00F         	movff	roundf@x+2,___fladd@a+2
  6591  001802  C03F  F010         	movff	roundf@x+3,___fladd@a+3
  6592  001806  EC4C  F000         	call	___fladd	;wreg free
  6593  00180A  C009  F052         	movff	?___fladd,roundf@y
  6594  00180E  C00A  F053         	movff	?___fladd+1,roundf@y+1
  6595  001812  C00B  F054         	movff	?___fladd+2,roundf@y+2
  6596  001816  C00C  F055         	movff	?___fladd+3,roundf@y+3
  6597  00181A                     l4901:
  6598  00181A  FFFF               	dw	65535	; assembler added errata NOP
  6599  00181C  C04E  F040         	movff	roundf@u,??_roundf
  6600  001820  C04F  F041         	movff	roundf@u+1,??_roundf+1
  6601  001824  C050  F042         	movff	roundf@u+2,??_roundf+2
  6602  001828  C051  F043         	movff	roundf@u+3,??_roundf+3
  6603  00182C  0E20               	movlw	32
  6604  00182E  EF1F  F00C         	goto	u5390
  6605  001832                     u5395:
  6606  001832  FFFF               	dw	65535	; assembler added errata NOP
  6607  001834  90D8               	bcf	status,0,c
  6608  001836  3243               	rrcf	(??_roundf+3)^0,f,c
  6609  001838  3242               	rrcf	(??_roundf+2)^0,f,c
  6610  00183A  3241               	rrcf	(??_roundf+1)^0,f,c
  6611  00183C  3240               	rrcf	??_roundf^0,f,c
  6612  00183E                     u5390:
  6613  00183E  FFFF               	dw	65535	; assembler added errata NOP
  6614  001840  2EE8               	decfsz	wreg,f,c
  6615  001842  EF19  F00C         	goto	u5395
  6616  001846  5040               	movf	??_roundf^0,w,c
  6617  001848  1041               	iorwf	(??_roundf+1)^0,w,c
  6618  00184A  1042               	iorwf	(??_roundf+2)^0,w,c
  6619  00184C  1043               	iorwf	(??_roundf+3)^0,w,c
  6620  00184E  B4D8               	btfsc	status,2,c
  6621  001850  EF2C  F00C         	goto	u5401
  6622  001854  EF2F  F00C         	goto	u5400
  6623  001858                     u5401:
  6624  001858  FFFF               	dw	65535	; assembler added errata NOP
  6625  00185A  EF42  F00C         	goto	l4905
  6626  00185E                     u5400:
  6627  00185E  FFFF               	dw	65535	; assembler added errata NOP
  6628  001860  C052  F009         	movff	roundf@y,___flneg@f1
  6629  001864  C053  F00A         	movff	roundf@y+1,___flneg@f1+1
  6630  001868  C054  F00B         	movff	roundf@y+2,___flneg@f1+2
  6631  00186C  C055  F00C         	movff	roundf@y+3,___flneg@f1+3
  6632  001870  EC82  F016         	call	___flneg	;wreg free
  6633  001874  C009  F052         	movff	?___flneg,roundf@y
  6634  001878  C00A  F053         	movff	?___flneg+1,roundf@y+1
  6635  00187C  C00B  F054         	movff	?___flneg+2,roundf@y+2
  6636  001880  C00C  F055         	movff	?___flneg+3,roundf@y+3
  6637  001884                     l4905:
  6638  001884  FFFF               	dw	65535	; assembler added errata NOP
  6639  001886  C052  F03C         	movff	roundf@y,?_roundf
  6640  00188A  C053  F03D         	movff	roundf@y+1,?_roundf+1
  6641  00188E  C054  F03E         	movff	roundf@y+2,?_roundf+2
  6642  001892  C055  F03F         	movff	roundf@y+3,?_roundf+3
  6643  001896                     l1090:
  6644  001896  FFFF               	dw	65535	; assembler added errata NOP
  6645  001898  0012               	return		;funcret
  6646  00189A  FFFF               	dw	65535	; errata NOP
  6647  00189C                     __end_of_roundf:
  6648                           	callstack 0
  6649                           
  6650 ;; *************** function ___flsub *****************
  6651 ;; Defined at:
  6652 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  b               4   24[COMRAM] float 
  6655 ;;  a               4   28[COMRAM] float 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  4   24[COMRAM] float 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6667 ;;      Params:         8       0       0       0       0       0       0
  6668 ;;      Locals:         0       0       0       0       0       0       0
  6669 ;;      Temps:          0       0       0       0       0       0       0
  6670 ;;      Totals:         8       0       0       0       0       0       0
  6671 ;;Total ram usage:        8 bytes
  6672 ;; Hardware stack levels used: 1
  6673 ;; Hardware stack levels required when called: 3
  6674 ;; This function calls:
  6675 ;;		___fladd
  6676 ;; This function is called by:
  6677 ;;		_roundf
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           	psect	text29
  6682  002C36                     __ptext29:
  6683                           	callstack 0
  6684  002C36                     ___flsub:
  6685                           	callstack 0
  6686  002C36  FFFF               	dw	65535	; assembler added errata NOP
  6687  002C38  0E00               	movlw	0
  6688  002C3A  1A1D               	xorwf	___flsub@a^0,f,c
  6689  002C3C  0E00               	movlw	0
  6690  002C3E  1A1E               	xorwf	(___flsub@a+1)^0,f,c
  6691  002C40  0E00               	movlw	0
  6692  002C42  1A1F               	xorwf	(___flsub@a+2)^0,f,c
  6693  002C44  0E80               	movlw	128
  6694  002C46  1A20               	xorwf	(___flsub@a+3)^0,f,c
  6695  002C48  C019  F009         	movff	___flsub@b,___fladd@b
  6696  002C4C  C01A  F00A         	movff	___flsub@b+1,___fladd@b+1
  6697  002C50  C01B  F00B         	movff	___flsub@b+2,___fladd@b+2
  6698  002C54  C01C  F00C         	movff	___flsub@b+3,___fladd@b+3
  6699  002C58  C01D  F00D         	movff	___flsub@a,___fladd@a
  6700  002C5C  C01E  F00E         	movff	___flsub@a+1,___fladd@a+1
  6701  002C60  C01F  F00F         	movff	___flsub@a+2,___fladd@a+2
  6702  002C64  C020  F010         	movff	___flsub@a+3,___fladd@a+3
  6703  002C68  EC4C  F000         	call	___fladd	;wreg free
  6704  002C6C  C009  F019         	movff	?___fladd,?___flsub
  6705  002C70  C00A  F01A         	movff	?___fladd+1,?___flsub+1
  6706  002C74  C00B  F01B         	movff	?___fladd+2,?___flsub+2
  6707  002C78  C00C  F01C         	movff	?___fladd+3,?___flsub+3
  6708  002C7C  0012               	return		;funcret
  6709  002C7E  FFFF               	dw	65535	; errata NOP
  6710  002C80                     __end_of___flsub:
  6711                           	callstack 0
  6712                           
  6713 ;; *************** function ___fladd *****************
  6714 ;; Defined at:
  6715 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  b               4    8[COMRAM] float 
  6718 ;;  a               4   12[COMRAM] float 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  grs             1   23[COMRAM] unsigned char 
  6721 ;;  bexp            1   22[COMRAM] unsigned char 
  6722 ;;  aexp            1   21[COMRAM] unsigned char 
  6723 ;;  signs           1   20[COMRAM] unsigned char 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  4    8[COMRAM] unsigned char 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6733 ;;      Params:         8       0       0       0       0       0       0
  6734 ;;      Locals:         4       0       0       0       0       0       0
  6735 ;;      Temps:          4       0       0       0       0       0       0
  6736 ;;      Totals:        16       0       0       0       0       0       0
  6737 ;;Total ram usage:       16 bytes
  6738 ;; Hardware stack levels used: 1
  6739 ;; Hardware stack levels required when called: 2
  6740 ;; This function calls:
  6741 ;;		Nothing
  6742 ;; This function is called by:
  6743 ;;		___flsub
  6744 ;;		_roundf
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text30
  6749  000098                     __ptext30:
  6750                           	callstack 0
  6751  000098                     ___fladd:
  6752                           	callstack 0
  6753  000098  FFFF               	dw	65535	; assembler added errata NOP
  6754  00009A  500C               	movf	(___fladd@b+3)^0,w,c
  6755  00009C  0B80               	andlw	128
  6756  00009E  6E15               	movwf	___fladd@signs^0,c
  6757  0000A0  500C               	movf	(___fladd@b+3)^0,w,c
  6758  0000A2  240C               	addwf	(___fladd@b+3)^0,w,c
  6759  0000A4  6E17               	movwf	___fladd@bexp^0,c
  6760  0000A6  AE0B               	btfss	(___fladd@b+2)^0,7,c
  6761  0000A8  EF58  F000         	goto	u4001
  6762  0000AC  EF5B  F000         	goto	u4000
  6763  0000B0                     u4001:
  6764  0000B0  FFFF               	dw	65535	; assembler added errata NOP
  6765  0000B2  EF5D  F000         	goto	l4109
  6766  0000B6                     u4000:
  6767  0000B6  FFFF               	dw	65535	; assembler added errata NOP
  6768  0000B8  8017               	bsf	___fladd@bexp^0,0,c
  6769  0000BA                     l4109:
  6770  0000BA  FFFF               	dw	65535	; assembler added errata NOP
  6771  0000BC  5017               	movf	___fladd@bexp^0,w,c
  6772  0000BE  B4D8               	btfsc	status,2,c
  6773  0000C0  EF64  F000         	goto	u4011
  6774  0000C4  EF67  F000         	goto	u4010
  6775  0000C8                     u4011:
  6776  0000C8  FFFF               	dw	65535	; assembler added errata NOP
  6777  0000CA  EF80  F000         	goto	l4119
  6778  0000CE                     u4010:
  6779  0000CE  FFFF               	dw	65535	; assembler added errata NOP
  6780  0000D0  2817               	incf	___fladd@bexp^0,w,c
  6781  0000D2  A4D8               	btfss	status,2,c
  6782  0000D4  EF6E  F000         	goto	u4021
  6783  0000D8  EF71  F000         	goto	u4020
  6784  0000DC                     u4021:
  6785  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  6786  0000DE  EF7A  F000         	goto	l4115
  6787  0000E2                     u4020:
  6788  0000E2  FFFF               	dw	65535	; assembler added errata NOP
  6789  0000E4  0E00               	movlw	0
  6790  0000E6  6E09               	movwf	___fladd@b^0,c
  6791  0000E8  0E00               	movlw	0
  6792  0000EA  6E0A               	movwf	(___fladd@b+1)^0,c
  6793  0000EC  0E00               	movlw	0
  6794  0000EE  6E0B               	movwf	(___fladd@b+2)^0,c
  6795  0000F0  0E00               	movlw	0
  6796  0000F2  6E0C               	movwf	(___fladd@b+3)^0,c
  6797  0000F4                     l4115:
  6798  0000F4  FFFF               	dw	65535	; assembler added errata NOP
  6799  0000F6  8E0B               	bsf	(___fladd@b+2)^0,7,c
  6800  0000F8  0E00               	movlw	0
  6801  0000FA  6E0C               	movwf	(___fladd@b+3)^0,c
  6802  0000FC  EF89  F000         	goto	l4121
  6803  000100                     l4119:
  6804  000100  FFFF               	dw	65535	; assembler added errata NOP
  6805  000102  0E00               	movlw	0
  6806  000104  6E09               	movwf	___fladd@b^0,c
  6807  000106  0E00               	movlw	0
  6808  000108  6E0A               	movwf	(___fladd@b+1)^0,c
  6809  00010A  0E00               	movlw	0
  6810  00010C  6E0B               	movwf	(___fladd@b+2)^0,c
  6811  00010E  0E00               	movlw	0
  6812  000110  6E0C               	movwf	(___fladd@b+3)^0,c
  6813  000112                     l4121:
  6814  000112  FFFF               	dw	65535	; assembler added errata NOP
  6815  000114  5010               	movf	(___fladd@a+3)^0,w,c
  6816  000116  0B80               	andlw	128
  6817  000118  6E16               	movwf	___fladd@aexp^0,c
  6818  00011A  5015               	movf	___fladd@signs^0,w,c
  6819  00011C  1816               	xorwf	___fladd@aexp^0,w,c
  6820  00011E  B4D8               	btfsc	status,2,c
  6821  000120  EF94  F000         	goto	u4031
  6822  000124  EF97  F000         	goto	u4030
  6823  000128                     u4031:
  6824  000128  FFFF               	dw	65535	; assembler added errata NOP
  6825  00012A  EF99  F000         	goto	l4127
  6826  00012E                     u4030:
  6827  00012E  FFFF               	dw	65535	; assembler added errata NOP
  6828  000130  8C15               	bsf	___fladd@signs^0,6,c
  6829  000132                     l4127:
  6830  000132  FFFF               	dw	65535	; assembler added errata NOP
  6831  000134  5010               	movf	(___fladd@a+3)^0,w,c
  6832  000136  2410               	addwf	(___fladd@a+3)^0,w,c
  6833  000138  6E16               	movwf	___fladd@aexp^0,c
  6834  00013A  AE0F               	btfss	(___fladd@a+2)^0,7,c
  6835  00013C  EFA2  F000         	goto	u4041
  6836  000140  EFA5  F000         	goto	u4040
  6837  000144                     u4041:
  6838  000144  FFFF               	dw	65535	; assembler added errata NOP
  6839  000146  EFA7  F000         	goto	l4133
  6840  00014A                     u4040:
  6841  00014A  FFFF               	dw	65535	; assembler added errata NOP
  6842  00014C  8016               	bsf	___fladd@aexp^0,0,c
  6843  00014E                     l4133:
  6844  00014E  FFFF               	dw	65535	; assembler added errata NOP
  6845  000150  5016               	movf	___fladd@aexp^0,w,c
  6846  000152  B4D8               	btfsc	status,2,c
  6847  000154  EFAE  F000         	goto	u4051
  6848  000158  EFB1  F000         	goto	u4050
  6849  00015C                     u4051:
  6850  00015C  FFFF               	dw	65535	; assembler added errata NOP
  6851  00015E  EFCA  F000         	goto	l4143
  6852  000162                     u4050:
  6853  000162  FFFF               	dw	65535	; assembler added errata NOP
  6854  000164  2816               	incf	___fladd@aexp^0,w,c
  6855  000166  A4D8               	btfss	status,2,c
  6856  000168  EFB8  F000         	goto	u4061
  6857  00016C  EFBB  F000         	goto	u4060
  6858  000170                     u4061:
  6859  000170  FFFF               	dw	65535	; assembler added errata NOP
  6860  000172  EFC4  F000         	goto	l4139
  6861  000176                     u4060:
  6862  000176  FFFF               	dw	65535	; assembler added errata NOP
  6863  000178  0E00               	movlw	0
  6864  00017A  6E0D               	movwf	___fladd@a^0,c
  6865  00017C  0E00               	movlw	0
  6866  00017E  6E0E               	movwf	(___fladd@a+1)^0,c
  6867  000180  0E00               	movlw	0
  6868  000182  6E0F               	movwf	(___fladd@a+2)^0,c
  6869  000184  0E00               	movlw	0
  6870  000186  6E10               	movwf	(___fladd@a+3)^0,c
  6871  000188                     l4139:
  6872  000188  FFFF               	dw	65535	; assembler added errata NOP
  6873  00018A  8E0F               	bsf	(___fladd@a+2)^0,7,c
  6874  00018C  0E00               	movlw	0
  6875  00018E  6E10               	movwf	(___fladd@a+3)^0,c
  6876  000190  EFD3  F000         	goto	l4145
  6877  000194                     l4143:
  6878  000194  FFFF               	dw	65535	; assembler added errata NOP
  6879  000196  0E00               	movlw	0
  6880  000198  6E0D               	movwf	___fladd@a^0,c
  6881  00019A  0E00               	movlw	0
  6882  00019C  6E0E               	movwf	(___fladd@a+1)^0,c
  6883  00019E  0E00               	movlw	0
  6884  0001A0  6E0F               	movwf	(___fladd@a+2)^0,c
  6885  0001A2  0E00               	movlw	0
  6886  0001A4  6E10               	movwf	(___fladd@a+3)^0,c
  6887  0001A6                     l4145:
  6888  0001A6  FFFF               	dw	65535	; assembler added errata NOP
  6889  0001A8  5017               	movf	___fladd@bexp^0,w,c
  6890  0001AA  5C16               	subwf	___fladd@aexp^0,w,c
  6891  0001AC  B0D8               	btfsc	status,0,c
  6892  0001AE  EFDB  F000         	goto	u4071
  6893  0001B2  EFDE  F000         	goto	u4070
  6894  0001B6                     u4071:
  6895  0001B6  FFFF               	dw	65535	; assembler added errata NOP
  6896  0001B8  EF09  F001         	goto	l4181
  6897  0001BC                     u4070:
  6898  0001BC  FFFF               	dw	65535	; assembler added errata NOP
  6899  0001BE  AC15               	btfss	___fladd@signs^0,6,c
  6900  0001C0  EFE4  F000         	goto	u4081
  6901  0001C4  EFE7  F000         	goto	u4080
  6902  0001C8                     u4081:
  6903  0001C8  FFFF               	dw	65535	; assembler added errata NOP
  6904  0001CA  EFEA  F000         	goto	l4151
  6905  0001CE                     u4080:
  6906  0001CE  FFFF               	dw	65535	; assembler added errata NOP
  6907  0001D0  0E80               	movlw	128
  6908  0001D2  1A15               	xorwf	___fladd@signs^0,f,c
  6909  0001D4                     l4151:
  6910  0001D4  FFFF               	dw	65535	; assembler added errata NOP
  6911  0001D6  C017  F018         	movff	___fladd@bexp,___fladd@grs
  6912  0001DA  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  6913  0001DE  C018  F016         	movff	___fladd@grs,___fladd@aexp
  6914  0001E2  C009  F018         	movff	___fladd@b,___fladd@grs
  6915  0001E6  C00D  F009         	movff	___fladd@a,___fladd@b
  6916  0001EA  C018  F00D         	movff	___fladd@grs,___fladd@a
  6917  0001EE  C00A  F018         	movff	___fladd@b+1,___fladd@grs
  6918  0001F2  C00E  F00A         	movff	___fladd@a+1,___fladd@b+1
  6919  0001F6  C018  F00E         	movff	___fladd@grs,___fladd@a+1
  6920  0001FA  C00B  F018         	movff	___fladd@b+2,___fladd@grs
  6921  0001FE  C00F  F00B         	movff	___fladd@a+2,___fladd@b+2
  6922  000202  C018  F00F         	movff	___fladd@grs,___fladd@a+2
  6923  000206  C00C  F018         	movff	___fladd@b+3,___fladd@grs
  6924  00020A  C010  F00C         	movff	___fladd@a+3,___fladd@b+3
  6925  00020E  C018  F010         	movff	___fladd@grs,___fladd@a+3
  6926  000212                     l4181:
  6927  000212  FFFF               	dw	65535	; assembler added errata NOP
  6928  000214  0E00               	movlw	0
  6929  000216  6E18               	movwf	___fladd@grs^0,c
  6930  000218  5017               	movf	___fladd@bexp^0,w,c
  6931  00021A  C016  F011         	movff	___fladd@aexp,??___fladd
  6932  00021E  6A12               	clrf	(??___fladd+1)^0,c
  6933  000220  5E11               	subwf	??___fladd^0,f,c
  6934  000222  0E00               	movlw	0
  6935  000224  5A12               	subwfb	(??___fladd+1)^0,f,c
  6936  000226  BE12               	btfsc	(??___fladd+1)^0,7,c
  6937  000228  EF1F  F001         	goto	u4091
  6938  00022C  5012               	movf	(??___fladd+1)^0,w,c
  6939  00022E  E10A               	bnz	u4090
  6940  000230  0E1A               	movlw	26
  6941  000232  5C11               	subwf	??___fladd^0,w,c
  6942  000234  A0D8               	btfss	status,0,c
  6943  000236  EF1F  F001         	goto	u4091
  6944  00023A  EF22  F001         	goto	u4090
  6945  00023E                     u4091:
  6946  00023E  FFFF               	dw	65535	; assembler added errata NOP
  6947  000240  EF65  F001         	goto	l885
  6948  000244                     u4090:
  6949  000244  FFFF               	dw	65535	; assembler added errata NOP
  6950  000246  5009               	movf	___fladd@b^0,w,c
  6951  000248  100A               	iorwf	(___fladd@b+1)^0,w,c
  6952  00024A  100B               	iorwf	(___fladd@b+2)^0,w,c
  6953  00024C  100C               	iorwf	(___fladd@b+3)^0,w,c
  6954  00024E  A4D8               	btfss	status,2,c
  6955  000250  EF2C  F001         	goto	u4101
  6956  000254  EF30  F001         	goto	u4100
  6957  000258                     u4101:
  6958  000258  FFFF               	dw	65535	; assembler added errata NOP
  6959  00025A  0E01               	movlw	1
  6960  00025C  EF32  F001         	goto	u4110
  6961  000260                     u4100:
  6962  000260  FFFF               	dw	65535	; assembler added errata NOP
  6963  000262  0E00               	movlw	0
  6964  000264                     u4110:
  6965  000264  FFFF               	dw	65535	; assembler added errata NOP
  6966  000266  6E18               	movwf	___fladd@grs^0,c
  6967  000268  0E00               	movlw	0
  6968  00026A  6E09               	movwf	___fladd@b^0,c
  6969  00026C  0E00               	movlw	0
  6970  00026E  6E0A               	movwf	(___fladd@b+1)^0,c
  6971  000270  0E00               	movlw	0
  6972  000272  6E0B               	movwf	(___fladd@b+2)^0,c
  6973  000274  0E00               	movlw	0
  6974  000276  6E0C               	movwf	(___fladd@b+3)^0,c
  6975  000278  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  6976  00027C  EF70  F001         	goto	l884
  6977  000280                     l886:
  6978  000280  FFFF               	dw	65535	; assembler added errata NOP
  6979  000282  A018               	btfss	___fladd@grs^0,0,c
  6980  000284  EF46  F001         	goto	u4121
  6981  000288  EF49  F001         	goto	u4120
  6982  00028C                     u4121:
  6983  00028C  FFFF               	dw	65535	; assembler added errata NOP
  6984  00028E  EF50  F001         	goto	l4193
  6985  000292                     u4120:
  6986  000292  FFFF               	dw	65535	; assembler added errata NOP
  6987  000294  90D8               	bcf	status,0,c
  6988  000296  3018               	rrcf	___fladd@grs^0,w,c
  6989  000298  0901               	iorlw	1
  6990  00029A  6E18               	movwf	___fladd@grs^0,c
  6991  00029C  EF53  F001         	goto	l4195
  6992  0002A0                     l4193:
  6993  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  6994  0002A2  90D8               	bcf	status,0,c
  6995  0002A4  3218               	rrcf	___fladd@grs^0,f,c
  6996  0002A6                     l4195:
  6997  0002A6  FFFF               	dw	65535	; assembler added errata NOP
  6998  0002A8  A009               	btfss	___fladd@b^0,0,c
  6999  0002AA  EF59  F001         	goto	u4131
  7000  0002AE  EF5C  F001         	goto	u4130
  7001  0002B2                     u4131:
  7002  0002B2  FFFF               	dw	65535	; assembler added errata NOP
  7003  0002B4  EF5E  F001         	goto	l4199
  7004  0002B8                     u4130:
  7005  0002B8  FFFF               	dw	65535	; assembler added errata NOP
  7006  0002BA  8E18               	bsf	___fladd@grs^0,7,c
  7007  0002BC                     l4199:
  7008  0002BC  FFFF               	dw	65535	; assembler added errata NOP
  7009  0002BE  340C               	rlcf	(___fladd@b+3)^0,w,c
  7010  0002C0  320C               	rrcf	(___fladd@b+3)^0,f,c
  7011  0002C2  320B               	rrcf	(___fladd@b+2)^0,f,c
  7012  0002C4  320A               	rrcf	(___fladd@b+1)^0,f,c
  7013  0002C6  3209               	rrcf	___fladd@b^0,f,c
  7014  0002C8  2A17               	incf	___fladd@bexp^0,f,c
  7015  0002CA                     l885:
  7016  0002CA  FFFF               	dw	65535	; assembler added errata NOP
  7017  0002CC  5016               	movf	___fladd@aexp^0,w,c
  7018  0002CE  5C17               	subwf	___fladd@bexp^0,w,c
  7019  0002D0  A0D8               	btfss	status,0,c
  7020  0002D2  EF6D  F001         	goto	u4141
  7021  0002D6  EF70  F001         	goto	u4140
  7022  0002DA                     u4141:
  7023  0002DA  FFFF               	dw	65535	; assembler added errata NOP
  7024  0002DC  EF40  F001         	goto	l886
  7025  0002E0                     u4140:
  7026  0002E0                     l884:
  7027  0002E0  FFFF               	dw	65535	; assembler added errata NOP
  7028  0002E2  BC15               	btfsc	___fladd@signs^0,6,c
  7029  0002E4  EF76  F001         	goto	u4151
  7030  0002E8  EF79  F001         	goto	u4150
  7031  0002EC                     u4151:
  7032  0002EC  FFFF               	dw	65535	; assembler added errata NOP
  7033  0002EE  EFC6  F001         	goto	l4227
  7034  0002F2                     u4150:
  7035  0002F2  FFFF               	dw	65535	; assembler added errata NOP
  7036  0002F4  5017               	movf	___fladd@bexp^0,w,c
  7037  0002F6  A4D8               	btfss	status,2,c
  7038  0002F8  EF80  F001         	goto	u4161
  7039  0002FC  EF83  F001         	goto	u4160
  7040  000300                     u4161:
  7041  000300  FFFF               	dw	65535	; assembler added errata NOP
  7042  000302  EF8E  F001         	goto	l4209
  7043  000306                     u4160:
  7044  000306  FFFF               	dw	65535	; assembler added errata NOP
  7045  000308  0E00               	movlw	0
  7046  00030A  6E09               	movwf	?___fladd^0,c
  7047  00030C  0E00               	movlw	0
  7048  00030E  6E0A               	movwf	(?___fladd+1)^0,c
  7049  000310  0E00               	movlw	0
  7050  000312  6E0B               	movwf	(?___fladd+2)^0,c
  7051  000314  0E00               	movlw	0
  7052  000316  6E0C               	movwf	(?___fladd+3)^0,c
  7053  000318  EF1D  F003         	goto	l893
  7054  00031C                     l4209:
  7055  00031C  FFFF               	dw	65535	; assembler added errata NOP
  7056  00031E  500D               	movf	___fladd@a^0,w,c
  7057  000320  2609               	addwf	___fladd@b^0,f,c
  7058  000322  500E               	movf	(___fladd@a+1)^0,w,c
  7059  000324  220A               	addwfc	(___fladd@b+1)^0,f,c
  7060  000326  500F               	movf	(___fladd@a+2)^0,w,c
  7061  000328  220B               	addwfc	(___fladd@b+2)^0,f,c
  7062  00032A  5010               	movf	(___fladd@a+3)^0,w,c
  7063  00032C  220C               	addwfc	(___fladd@b+3)^0,f,c
  7064  00032E  A00C               	btfss	(___fladd@b+3)^0,0,c
  7065  000330  EF9C  F001         	goto	u4171
  7066  000334  EF9F  F001         	goto	u4170
  7067  000338                     u4171:
  7068  000338  FFFF               	dw	65535	; assembler added errata NOP
  7069  00033A  EF6A  F002         	goto	l4263
  7070  00033E                     u4170:
  7071  00033E  FFFF               	dw	65535	; assembler added errata NOP
  7072  000340  A018               	btfss	___fladd@grs^0,0,c
  7073  000342  EFA5  F001         	goto	u4181
  7074  000346  EFA8  F001         	goto	u4180
  7075  00034A                     u4181:
  7076  00034A  FFFF               	dw	65535	; assembler added errata NOP
  7077  00034C  EFAF  F001         	goto	l4217
  7078  000350                     u4180:
  7079  000350  FFFF               	dw	65535	; assembler added errata NOP
  7080  000352  90D8               	bcf	status,0,c
  7081  000354  3018               	rrcf	___fladd@grs^0,w,c
  7082  000356  0901               	iorlw	1
  7083  000358  6E18               	movwf	___fladd@grs^0,c
  7084  00035A  EFB2  F001         	goto	l4219
  7085  00035E                     l4217:
  7086  00035E  FFFF               	dw	65535	; assembler added errata NOP
  7087  000360  90D8               	bcf	status,0,c
  7088  000362  3218               	rrcf	___fladd@grs^0,f,c
  7089  000364                     l4219:
  7090  000364  FFFF               	dw	65535	; assembler added errata NOP
  7091  000366  A009               	btfss	___fladd@b^0,0,c
  7092  000368  EFB8  F001         	goto	u4191
  7093  00036C  EFBB  F001         	goto	u4190
  7094  000370                     u4191:
  7095  000370  FFFF               	dw	65535	; assembler added errata NOP
  7096  000372  EFBD  F001         	goto	l4223
  7097  000376                     u4190:
  7098  000376  FFFF               	dw	65535	; assembler added errata NOP
  7099  000378  8E18               	bsf	___fladd@grs^0,7,c
  7100  00037A                     l4223:
  7101  00037A  FFFF               	dw	65535	; assembler added errata NOP
  7102  00037C  340C               	rlcf	(___fladd@b+3)^0,w,c
  7103  00037E  320C               	rrcf	(___fladd@b+3)^0,f,c
  7104  000380  320B               	rrcf	(___fladd@b+2)^0,f,c
  7105  000382  320A               	rrcf	(___fladd@b+1)^0,f,c
  7106  000384  3209               	rrcf	___fladd@b^0,f,c
  7107  000386  2A17               	incf	___fladd@bexp^0,f,c
  7108  000388  EF6A  F002         	goto	l4263
  7109  00038C                     l4227:
  7110  00038C  FFFF               	dw	65535	; assembler added errata NOP
  7111  00038E  500D               	movf	___fladd@a^0,w,c
  7112  000390  5C09               	subwf	___fladd@b^0,w,c
  7113  000392  500E               	movf	(___fladd@a+1)^0,w,c
  7114  000394  580A               	subwfb	(___fladd@b+1)^0,w,c
  7115  000396  500F               	movf	(___fladd@a+2)^0,w,c
  7116  000398  580B               	subwfb	(___fladd@b+2)^0,w,c
  7117  00039A  500C               	movf	(___fladd@b+3)^0,w,c
  7118  00039C  0A80               	xorlw	128
  7119  00039E  6E11               	movwf	??___fladd^0,c
  7120  0003A0  5010               	movf	(___fladd@a+3)^0,w,c
  7121  0003A2  0A80               	xorlw	128
  7122  0003A4  5811               	subwfb	??___fladd^0,w,c
  7123  0003A6  B0D8               	btfsc	status,0,c
  7124  0003A8  EFD8  F001         	goto	u4201
  7125  0003AC  EFDB  F001         	goto	u4200
  7126  0003B0                     u4201:
  7127  0003B0  FFFF               	dw	65535	; assembler added errata NOP
  7128  0003B2  EF09  F002         	goto	l4237
  7129  0003B6                     u4200:
  7130  0003B6  FFFF               	dw	65535	; assembler added errata NOP
  7131  0003B8  5009               	movf	___fladd@b^0,w,c
  7132  0003BA  5C0D               	subwf	___fladd@a^0,w,c
  7133  0003BC  6E11               	movwf	??___fladd^0,c
  7134  0003BE  500A               	movf	(___fladd@b+1)^0,w,c
  7135  0003C0  580E               	subwfb	(___fladd@a+1)^0,w,c
  7136  0003C2  6E12               	movwf	(??___fladd+1)^0,c
  7137  0003C4  500B               	movf	(___fladd@b+2)^0,w,c
  7138  0003C6  580F               	subwfb	(___fladd@a+2)^0,w,c
  7139  0003C8  6E13               	movwf	(??___fladd+2)^0,c
  7140  0003CA  500C               	movf	(___fladd@b+3)^0,w,c
  7141  0003CC  5810               	subwfb	(___fladd@a+3)^0,w,c
  7142  0003CE  6E14               	movwf	(??___fladd+3)^0,c
  7143  0003D0  0EFF               	movlw	255
  7144  0003D2  2411               	addwf	??___fladd^0,w,c
  7145  0003D4  6E09               	movwf	___fladd@b^0,c
  7146  0003D6  0EFF               	movlw	255
  7147  0003D8  2012               	addwfc	(??___fladd+1)^0,w,c
  7148  0003DA  6E0A               	movwf	(___fladd@b+1)^0,c
  7149  0003DC  0EFF               	movlw	255
  7150  0003DE  2013               	addwfc	(??___fladd+2)^0,w,c
  7151  0003E0  6E0B               	movwf	(___fladd@b+2)^0,c
  7152  0003E2  0EFF               	movlw	255
  7153  0003E4  2014               	addwfc	(??___fladd+3)^0,w,c
  7154  0003E6  6E0C               	movwf	(___fladd@b+3)^0,c
  7155  0003E8  0E80               	movlw	128
  7156  0003EA  1A15               	xorwf	___fladd@signs^0,f,c
  7157  0003EC  6C18               	negf	___fladd@grs^0,c
  7158  0003EE  5018               	movf	___fladd@grs^0,w,c
  7159  0003F0  A4D8               	btfss	status,2,c
  7160  0003F2  EFFD  F001         	goto	u4211
  7161  0003F6  EF00  F002         	goto	u4210
  7162  0003FA                     u4211:
  7163  0003FA  FFFF               	dw	65535	; assembler added errata NOP
  7164  0003FC  EF12  F002         	goto	l901
  7165  000400                     u4210:
  7166  000400  FFFF               	dw	65535	; assembler added errata NOP
  7167  000402  0E01               	movlw	1
  7168  000404  2609               	addwf	___fladd@b^0,f,c
  7169  000406  0E00               	movlw	0
  7170  000408  220A               	addwfc	(___fladd@b+1)^0,f,c
  7171  00040A  220B               	addwfc	(___fladd@b+2)^0,f,c
  7172  00040C  220C               	addwfc	(___fladd@b+3)^0,f,c
  7173  00040E  EF12  F002         	goto	l901
  7174  000412                     l4237:
  7175  000412  FFFF               	dw	65535	; assembler added errata NOP
  7176  000414  500D               	movf	___fladd@a^0,w,c
  7177  000416  5E09               	subwf	___fladd@b^0,f,c
  7178  000418  500E               	movf	(___fladd@a+1)^0,w,c
  7179  00041A  5A0A               	subwfb	(___fladd@b+1)^0,f,c
  7180  00041C  500F               	movf	(___fladd@a+2)^0,w,c
  7181  00041E  5A0B               	subwfb	(___fladd@b+2)^0,f,c
  7182  000420  5010               	movf	(___fladd@a+3)^0,w,c
  7183  000422  5A0C               	subwfb	(___fladd@b+3)^0,f,c
  7184  000424                     l901:
  7185  000424  FFFF               	dw	65535	; assembler added errata NOP
  7186  000426  5009               	movf	___fladd@b^0,w,c
  7187  000428  100A               	iorwf	(___fladd@b+1)^0,w,c
  7188  00042A  100B               	iorwf	(___fladd@b+2)^0,w,c
  7189  00042C  100C               	iorwf	(___fladd@b+3)^0,w,c
  7190  00042E  A4D8               	btfss	status,2,c
  7191  000430  EF1C  F002         	goto	u4221
  7192  000434  EF1F  F002         	goto	u4220
  7193  000438                     u4221:
  7194  000438  FFFF               	dw	65535	; assembler added errata NOP
  7195  00043A  EF61  F002         	goto	l4261
  7196  00043E                     u4220:
  7197  00043E  FFFF               	dw	65535	; assembler added errata NOP
  7198  000440  5018               	movf	___fladd@grs^0,w,c
  7199  000442  A4D8               	btfss	status,2,c
  7200  000444  EF26  F002         	goto	u4231
  7201  000448  EF29  F002         	goto	u4230
  7202  00044C                     u4231:
  7203  00044C  FFFF               	dw	65535	; assembler added errata NOP
  7204  00044E  EF61  F002         	goto	l4261
  7205  000452                     u4230:
  7206  000452  FFFF               	dw	65535	; assembler added errata NOP
  7207  000454  0E00               	movlw	0
  7208  000456  6E09               	movwf	?___fladd^0,c
  7209  000458  0E00               	movlw	0
  7210  00045A  6E0A               	movwf	(?___fladd+1)^0,c
  7211  00045C  0E00               	movlw	0
  7212  00045E  6E0B               	movwf	(?___fladd+2)^0,c
  7213  000460  0E00               	movlw	0
  7214  000462  6E0C               	movwf	(?___fladd+3)^0,c
  7215  000464  EF1D  F003         	goto	l893
  7216  000468                     l4245:
  7217  000468  FFFF               	dw	65535	; assembler added errata NOP
  7218  00046A  90D8               	bcf	status,0,c
  7219  00046C  3609               	rlcf	___fladd@b^0,f,c
  7220  00046E  360A               	rlcf	(___fladd@b+1)^0,f,c
  7221  000470  360B               	rlcf	(___fladd@b+2)^0,f,c
  7222  000472  360C               	rlcf	(___fladd@b+3)^0,f,c
  7223  000474  AE18               	btfss	___fladd@grs^0,7,c
  7224  000476  EF3F  F002         	goto	u4241
  7225  00047A  EF42  F002         	goto	u4240
  7226  00047E                     u4241:
  7227  00047E  FFFF               	dw	65535	; assembler added errata NOP
  7228  000480  EF44  F002         	goto	l4251
  7229  000484                     u4240:
  7230  000484  FFFF               	dw	65535	; assembler added errata NOP
  7231  000486  8009               	bsf	___fladd@b^0,0,c
  7232  000488                     l4251:
  7233  000488  FFFF               	dw	65535	; assembler added errata NOP
  7234  00048A  A018               	btfss	___fladd@grs^0,0,c
  7235  00048C  EF4A  F002         	goto	u4251
  7236  000490  EF4D  F002         	goto	u4250
  7237  000494                     u4251:
  7238  000494  FFFF               	dw	65535	; assembler added errata NOP
  7239  000496  EF52  F002         	goto	l4255
  7240  00049A                     u4250:
  7241  00049A  FFFF               	dw	65535	; assembler added errata NOP
  7242  00049C  80D8               	bsf	status,0,c
  7243  00049E  3618               	rlcf	___fladd@grs^0,f,c
  7244  0004A0  EF55  F002         	goto	l4257
  7245  0004A4                     l4255:
  7246  0004A4  FFFF               	dw	65535	; assembler added errata NOP
  7247  0004A6  90D8               	bcf	status,0,c
  7248  0004A8  3618               	rlcf	___fladd@grs^0,f,c
  7249  0004AA                     l4257:
  7250  0004AA  FFFF               	dw	65535	; assembler added errata NOP
  7251  0004AC  5017               	movf	___fladd@bexp^0,w,c
  7252  0004AE  B4D8               	btfsc	status,2,c
  7253  0004B0  EF5C  F002         	goto	u4261
  7254  0004B4  EF5F  F002         	goto	u4260
  7255  0004B8                     u4261:
  7256  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  7257  0004BA  EF61  F002         	goto	l4261
  7258  0004BE                     u4260:
  7259  0004BE  FFFF               	dw	65535	; assembler added errata NOP
  7260  0004C0  0617               	decf	___fladd@bexp^0,f,c
  7261  0004C2                     l4261:
  7262  0004C2  FFFF               	dw	65535	; assembler added errata NOP
  7263  0004C4  AE0B               	btfss	(___fladd@b+2)^0,7,c
  7264  0004C6  EF67  F002         	goto	u4271
  7265  0004CA  EF6A  F002         	goto	u4270
  7266  0004CE                     u4271:
  7267  0004CE  FFFF               	dw	65535	; assembler added errata NOP
  7268  0004D0  EF34  F002         	goto	l4245
  7269  0004D4                     u4270:
  7270  0004D4                     l4263:
  7271  0004D4  FFFF               	dw	65535	; assembler added errata NOP
  7272  0004D6  0E00               	movlw	0
  7273  0004D8  6E16               	movwf	___fladd@aexp^0,c
  7274  0004DA  AE18               	btfss	___fladd@grs^0,7,c
  7275  0004DC  EF72  F002         	goto	u4281
  7276  0004E0  EF75  F002         	goto	u4280
  7277  0004E4                     u4281:
  7278  0004E4  FFFF               	dw	65535	; assembler added errata NOP
  7279  0004E6  EF94  F002         	goto	l910
  7280  0004EA                     u4280:
  7281  0004EA  FFFF               	dw	65535	; assembler added errata NOP
  7282  0004EC  C018  F011         	movff	___fladd@grs,??___fladd
  7283  0004F0  0E7F               	movlw	127
  7284  0004F2  1611               	andwf	??___fladd^0,f,c
  7285  0004F4  B4D8               	btfsc	status,2,c
  7286  0004F6  EF7F  F002         	goto	u4291
  7287  0004FA  EF82  F002         	goto	u4290
  7288  0004FE                     u4291:
  7289  0004FE  FFFF               	dw	65535	; assembler added errata NOP
  7290  000500  EF88  F002         	goto	l911
  7291  000504                     u4290:
  7292  000504  FFFF               	dw	65535	; assembler added errata NOP
  7293  000506                     l4269:
  7294  000506  FFFF               	dw	65535	; assembler added errata NOP
  7295  000508  0E01               	movlw	1
  7296  00050A  6E16               	movwf	___fladd@aexp^0,c
  7297  00050C  EF94  F002         	goto	l910
  7298  000510                     l911:
  7299  000510  FFFF               	dw	65535	; assembler added errata NOP
  7300  000512  A009               	btfss	___fladd@b^0,0,c
  7301  000514  EF8E  F002         	goto	u4301
  7302  000518  EF91  F002         	goto	u4300
  7303  00051C                     u4301:
  7304  00051C  FFFF               	dw	65535	; assembler added errata NOP
  7305  00051E  EF94  F002         	goto	l910
  7306  000522                     u4300:
  7307  000522  FFFF               	dw	65535	; assembler added errata NOP
  7308  000524  EF83  F002         	goto	l4269
  7309  000528                     l910:
  7310  000528  FFFF               	dw	65535	; assembler added errata NOP
  7311  00052A  5016               	movf	___fladd@aexp^0,w,c
  7312  00052C  B4D8               	btfsc	status,2,c
  7313  00052E  EF9B  F002         	goto	u4311
  7314  000532  EF9E  F002         	goto	u4310
  7315  000536                     u4311:
  7316  000536  FFFF               	dw	65535	; assembler added errata NOP
  7317  000538  EFCE  F002         	goto	l4281
  7318  00053C                     u4310:
  7319  00053C  FFFF               	dw	65535	; assembler added errata NOP
  7320  00053E  0E01               	movlw	1
  7321  000540  2609               	addwf	___fladd@b^0,f,c
  7322  000542  0E00               	movlw	0
  7323  000544  220A               	addwfc	(___fladd@b+1)^0,f,c
  7324  000546  220B               	addwfc	(___fladd@b+2)^0,f,c
  7325  000548  220C               	addwfc	(___fladd@b+3)^0,f,c
  7326  00054A  A00C               	btfss	(___fladd@b+3)^0,0,c
  7327  00054C  EFAA  F002         	goto	u4321
  7328  000550  EFAD  F002         	goto	u4320
  7329  000554                     u4321:
  7330  000554  FFFF               	dw	65535	; assembler added errata NOP
  7331  000556  EFCE  F002         	goto	l4281
  7332  00055A                     u4320:
  7333  00055A  FFFF               	dw	65535	; assembler added errata NOP
  7334  00055C  C009  F011         	movff	___fladd@b,??___fladd
  7335  000560  C00A  F012         	movff	___fladd@b+1,??___fladd+1
  7336  000564  C00B  F013         	movff	___fladd@b+2,??___fladd+2
  7337  000568  C00C  F014         	movff	___fladd@b+3,??___fladd+3
  7338  00056C  3414               	rlcf	(??___fladd+3)^0,w,c
  7339  00056E  3214               	rrcf	(??___fladd+3)^0,f,c
  7340  000570  3213               	rrcf	(??___fladd+2)^0,f,c
  7341  000572  3212               	rrcf	(??___fladd+1)^0,f,c
  7342  000574  3211               	rrcf	??___fladd^0,f,c
  7343  000576  C011  F009         	movff	??___fladd,___fladd@b
  7344  00057A  C012  F00A         	movff	??___fladd+1,___fladd@b+1
  7345  00057E  C013  F00B         	movff	??___fladd+2,___fladd@b+2
  7346  000582  C014  F00C         	movff	??___fladd+3,___fladd@b+3
  7347  000586  2817               	incf	___fladd@bexp^0,w,c
  7348  000588  B4D8               	btfsc	status,2,c
  7349  00058A  EFC9  F002         	goto	u4331
  7350  00058E  EFCC  F002         	goto	u4330
  7351  000592                     u4331:
  7352  000592  FFFF               	dw	65535	; assembler added errata NOP
  7353  000594  EFCE  F002         	goto	l4281
  7354  000598                     u4330:
  7355  000598  FFFF               	dw	65535	; assembler added errata NOP
  7356  00059A  2A17               	incf	___fladd@bexp^0,f,c
  7357  00059C                     l4281:
  7358  00059C  FFFF               	dw	65535	; assembler added errata NOP
  7359  00059E  2817               	incf	___fladd@bexp^0,w,c
  7360  0005A0  B4D8               	btfsc	status,2,c
  7361  0005A2  EFD5  F002         	goto	u4341
  7362  0005A6  EFD8  F002         	goto	u4340
  7363  0005AA                     u4341:
  7364  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  7365  0005AC  EFE2  F002         	goto	l4285
  7366  0005B0                     u4340:
  7367  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  7368  0005B2  5017               	movf	___fladd@bexp^0,w,c
  7369  0005B4  A4D8               	btfss	status,2,c
  7370  0005B6  EFDF  F002         	goto	u4351
  7371  0005BA  EFE2  F002         	goto	u4350
  7372  0005BE                     u4351:
  7373  0005BE  FFFF               	dw	65535	; assembler added errata NOP
  7374  0005C0  EFF7  F002         	goto	l4289
  7375  0005C4                     u4350:
  7376  0005C4                     l4285:
  7377  0005C4  FFFF               	dw	65535	; assembler added errata NOP
  7378  0005C6  0E00               	movlw	0
  7379  0005C8  6E09               	movwf	___fladd@b^0,c
  7380  0005CA  0E00               	movlw	0
  7381  0005CC  6E0A               	movwf	(___fladd@b+1)^0,c
  7382  0005CE  0E00               	movlw	0
  7383  0005D0  6E0B               	movwf	(___fladd@b+2)^0,c
  7384  0005D2  0E00               	movlw	0
  7385  0005D4  6E0C               	movwf	(___fladd@b+3)^0,c
  7386  0005D6  5017               	movf	___fladd@bexp^0,w,c
  7387  0005D8  A4D8               	btfss	status,2,c
  7388  0005DA  EFF1  F002         	goto	u4361
  7389  0005DE  EFF4  F002         	goto	u4360
  7390  0005E2                     u4361:
  7391  0005E2  FFFF               	dw	65535	; assembler added errata NOP
  7392  0005E4  EFF7  F002         	goto	l4289
  7393  0005E8                     u4360:
  7394  0005E8  FFFF               	dw	65535	; assembler added errata NOP
  7395  0005EA  0E00               	movlw	0
  7396  0005EC  6E15               	movwf	___fladd@signs^0,c
  7397  0005EE                     l4289:
  7398  0005EE  FFFF               	dw	65535	; assembler added errata NOP
  7399  0005F0  A017               	btfss	___fladd@bexp^0,0,c
  7400  0005F2  EFFD  F002         	goto	u4371
  7401  0005F6  EF00  F003         	goto	u4370
  7402  0005FA                     u4371:
  7403  0005FA  FFFF               	dw	65535	; assembler added errata NOP
  7404  0005FC  EF04  F003         	goto	l4293
  7405  000600                     u4370:
  7406  000600  FFFF               	dw	65535	; assembler added errata NOP
  7407  000602  8E0B               	bsf	(___fladd@b+2)^0,7,c
  7408  000604  EF06  F003         	goto	l4295
  7409  000608                     l4293:
  7410  000608  FFFF               	dw	65535	; assembler added errata NOP
  7411  00060A  9E0B               	bcf	(___fladd@b+2)^0,7,c
  7412  00060C                     l4295:
  7413  00060C  FFFF               	dw	65535	; assembler added errata NOP
  7414  00060E  90D8               	bcf	status,0,c
  7415  000610  3017               	rrcf	___fladd@bexp^0,w,c
  7416  000612  6E0C               	movwf	(___fladd@b+3)^0,c
  7417  000614  AE15               	btfss	___fladd@signs^0,7,c
  7418  000616  EF0F  F003         	goto	u4381
  7419  00061A  EF12  F003         	goto	u4380
  7420  00061E                     u4381:
  7421  00061E  FFFF               	dw	65535	; assembler added errata NOP
  7422  000620  EF14  F003         	goto	l4301
  7423  000624                     u4380:
  7424  000624  FFFF               	dw	65535	; assembler added errata NOP
  7425  000626  8E0C               	bsf	(___fladd@b+3)^0,7,c
  7426  000628                     l4301:
  7427  000628  FFFF               	dw	65535	; assembler added errata NOP
  7428  00062A  C009  F009         	movff	___fladd@b,?___fladd
  7429  00062E  C00A  F00A         	movff	___fladd@b+1,?___fladd+1
  7430  000632  C00B  F00B         	movff	___fladd@b+2,?___fladd+2
  7431  000636  C00C  F00C         	movff	___fladd@b+3,?___fladd+3
  7432  00063A                     l893:
  7433  00063A  FFFF               	dw	65535	; assembler added errata NOP
  7434  00063C  0012               	return		;funcret
  7435  00063E  FFFF               	dw	65535	; errata NOP
  7436  000640                     __end_of___fladd:
  7437                           	callstack 0
  7438                           
  7439 ;; *************** function ___flneg *****************
  7440 ;; Defined at:
  7441 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  f1              4    8[COMRAM] unsigned char 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;		None
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  4    8[COMRAM] unsigned char 
  7448 ;; Registers used:
  7449 ;;		wreg, status,2, status,0
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7455 ;;      Params:         4       0       0       0       0       0       0
  7456 ;;      Locals:         0       0       0       0       0       0       0
  7457 ;;      Temps:          0       0       0       0       0       0       0
  7458 ;;      Totals:         4       0       0       0       0       0       0
  7459 ;;Total ram usage:        4 bytes
  7460 ;; Hardware stack levels used: 1
  7461 ;; Hardware stack levels required when called: 2
  7462 ;; This function calls:
  7463 ;;		Nothing
  7464 ;; This function is called by:
  7465 ;;		_roundf
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           	psect	text31
  7470  002D04                     __ptext31:
  7471                           	callstack 0
  7472  002D04                     ___flneg:
  7473                           	callstack 0
  7474  002D04  FFFF               	dw	65535	; assembler added errata NOP
  7475  002D06  5009               	movf	___flneg@f1^0,w,c
  7476  002D08  100A               	iorwf	(___flneg@f1+1)^0,w,c
  7477  002D0A  100B               	iorwf	(___flneg@f1+2)^0,w,c
  7478  002D0C  100C               	iorwf	(___flneg@f1+3)^0,w,c
  7479  002D0E  B4D8               	btfsc	status,2,c
  7480  002D10  EF8C  F016         	goto	u5311
  7481  002D14  EF8F  F016         	goto	u5310
  7482  002D18                     u5311:
  7483  002D18  FFFF               	dw	65535	; assembler added errata NOP
  7484  002D1A  EF98  F016         	goto	l4871
  7485  002D1E                     u5310:
  7486  002D1E  FFFF               	dw	65535	; assembler added errata NOP
  7487  002D20  0E00               	movlw	0
  7488  002D22  1A09               	xorwf	___flneg@f1^0,f,c
  7489  002D24  0E00               	movlw	0
  7490  002D26  1A0A               	xorwf	(___flneg@f1+1)^0,f,c
  7491  002D28  0E00               	movlw	0
  7492  002D2A  1A0B               	xorwf	(___flneg@f1+2)^0,f,c
  7493  002D2C  0E80               	movlw	128
  7494  002D2E  1A0C               	xorwf	(___flneg@f1+3)^0,f,c
  7495  002D30                     l4871:
  7496  002D30  FFFF               	dw	65535	; assembler added errata NOP
  7497  002D32  C009  F009         	movff	___flneg@f1,?___flneg
  7498  002D36  C00A  F00A         	movff	___flneg@f1+1,?___flneg+1
  7499  002D3A  C00B  F00B         	movff	___flneg@f1+2,?___flneg+2
  7500  002D3E  C00C  F00C         	movff	___flneg@f1+3,?___flneg+3
  7501  002D42  0012               	return		;funcret
  7502  002D44  FFFF               	dw	65535	; errata NOP
  7503  002D46                     __end_of___flneg:
  7504                           	callstack 0
  7505                           
  7506 ;; *************** function ___flmul *****************
  7507 ;; Defined at:
  7508 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  b               4    8[COMRAM] unsigned char 
  7511 ;;  a               4   12[COMRAM] unsigned char 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  prod            4   27[COMRAM] struct .
  7514 ;;  grs             4   22[COMRAM] unsigned long 
  7515 ;;  temp            2   31[COMRAM] struct .
  7516 ;;  bexp            1   26[COMRAM] unsigned char 
  7517 ;;  aexp            1   21[COMRAM] unsigned char 
  7518 ;;  sign            1   20[COMRAM] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  4    8[COMRAM] unsigned char 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0, prodl, prodh
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7528 ;;      Params:         8       0       0       0       0       0       0
  7529 ;;      Locals:        13       0       0       0       0       0       0
  7530 ;;      Temps:          4       0       0       0       0       0       0
  7531 ;;      Totals:        25       0       0       0       0       0       0
  7532 ;;Total ram usage:       25 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; Hardware stack levels required when called: 2
  7535 ;; This function calls:
  7536 ;;		Nothing
  7537 ;; This function is called by:
  7538 ;;		_roundf
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text32
  7543  000BE0                     __ptext32:
  7544                           	callstack 0
  7545  000BE0                     ___flmul:
  7546                           	callstack 0
  7547  000BE0  FFFF               	dw	65535	; assembler added errata NOP
  7548  000BE2  500C               	movf	(___flmul@b+3)^0,w,c
  7549  000BE4  0B80               	andlw	128
  7550  000BE6  6E15               	movwf	___flmul@sign^0,c
  7551  000BE8  500C               	movf	(___flmul@b+3)^0,w,c
  7552  000BEA  240C               	addwf	(___flmul@b+3)^0,w,c
  7553  000BEC  6E1B               	movwf	___flmul@bexp^0,c
  7554  000BEE  AE0B               	btfss	(___flmul@b+2)^0,7,c
  7555  000BF0  EFFC  F005         	goto	u5121
  7556  000BF4  EFFF  F005         	goto	u5120
  7557  000BF8                     u5121:
  7558  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  7559  000BFA  EF01  F006         	goto	l4737
  7560  000BFE                     u5120:
  7561  000BFE  FFFF               	dw	65535	; assembler added errata NOP
  7562  000C00  801B               	bsf	___flmul@bexp^0,0,c
  7563  000C02                     l4737:
  7564  000C02  FFFF               	dw	65535	; assembler added errata NOP
  7565  000C04  501B               	movf	___flmul@bexp^0,w,c
  7566  000C06  B4D8               	btfsc	status,2,c
  7567  000C08  EF08  F006         	goto	u5131
  7568  000C0C  EF0B  F006         	goto	u5130
  7569  000C10                     u5131:
  7570  000C10  FFFF               	dw	65535	; assembler added errata NOP
  7571  000C12  EF22  F006         	goto	l4745
  7572  000C16                     u5130:
  7573  000C16  FFFF               	dw	65535	; assembler added errata NOP
  7574  000C18  281B               	incf	___flmul@bexp^0,w,c
  7575  000C1A  A4D8               	btfss	status,2,c
  7576  000C1C  EF12  F006         	goto	u5141
  7577  000C20  EF15  F006         	goto	u5140
  7578  000C24                     u5141:
  7579  000C24  FFFF               	dw	65535	; assembler added errata NOP
  7580  000C26  EF1E  F006         	goto	l4743
  7581  000C2A                     u5140:
  7582  000C2A  FFFF               	dw	65535	; assembler added errata NOP
  7583  000C2C  0E00               	movlw	0
  7584  000C2E  6E09               	movwf	___flmul@b^0,c
  7585  000C30  0E00               	movlw	0
  7586  000C32  6E0A               	movwf	(___flmul@b+1)^0,c
  7587  000C34  0E00               	movlw	0
  7588  000C36  6E0B               	movwf	(___flmul@b+2)^0,c
  7589  000C38  0E00               	movlw	0
  7590  000C3A  6E0C               	movwf	(___flmul@b+3)^0,c
  7591  000C3C                     l4743:
  7592  000C3C  FFFF               	dw	65535	; assembler added errata NOP
  7593  000C3E  8E0B               	bsf	(___flmul@b+2)^0,7,c
  7594  000C40  EF2B  F006         	goto	l4747
  7595  000C44                     l4745:
  7596  000C44  FFFF               	dw	65535	; assembler added errata NOP
  7597  000C46  0E00               	movlw	0
  7598  000C48  6E09               	movwf	___flmul@b^0,c
  7599  000C4A  0E00               	movlw	0
  7600  000C4C  6E0A               	movwf	(___flmul@b+1)^0,c
  7601  000C4E  0E00               	movlw	0
  7602  000C50  6E0B               	movwf	(___flmul@b+2)^0,c
  7603  000C52  0E00               	movlw	0
  7604  000C54  6E0C               	movwf	(___flmul@b+3)^0,c
  7605  000C56                     l4747:
  7606  000C56  FFFF               	dw	65535	; assembler added errata NOP
  7607  000C58  5010               	movf	(___flmul@a+3)^0,w,c
  7608  000C5A  0B80               	andlw	128
  7609  000C5C  1A15               	xorwf	___flmul@sign^0,f,c
  7610  000C5E  5010               	movf	(___flmul@a+3)^0,w,c
  7611  000C60  2410               	addwf	(___flmul@a+3)^0,w,c
  7612  000C62  6E16               	movwf	___flmul@aexp^0,c
  7613  000C64  AE0F               	btfss	(___flmul@a+2)^0,7,c
  7614  000C66  EF37  F006         	goto	u5151
  7615  000C6A  EF3A  F006         	goto	u5150
  7616  000C6E                     u5151:
  7617  000C6E  FFFF               	dw	65535	; assembler added errata NOP
  7618  000C70  EF3C  F006         	goto	l4755
  7619  000C74                     u5150:
  7620  000C74  FFFF               	dw	65535	; assembler added errata NOP
  7621  000C76  8016               	bsf	___flmul@aexp^0,0,c
  7622  000C78                     l4755:
  7623  000C78  FFFF               	dw	65535	; assembler added errata NOP
  7624  000C7A  5016               	movf	___flmul@aexp^0,w,c
  7625  000C7C  B4D8               	btfsc	status,2,c
  7626  000C7E  EF43  F006         	goto	u5161
  7627  000C82  EF46  F006         	goto	u5160
  7628  000C86                     u5161:
  7629  000C86  FFFF               	dw	65535	; assembler added errata NOP
  7630  000C88  EF5D  F006         	goto	l4763
  7631  000C8C                     u5160:
  7632  000C8C  FFFF               	dw	65535	; assembler added errata NOP
  7633  000C8E  2816               	incf	___flmul@aexp^0,w,c
  7634  000C90  A4D8               	btfss	status,2,c
  7635  000C92  EF4D  F006         	goto	u5171
  7636  000C96  EF50  F006         	goto	u5170
  7637  000C9A                     u5171:
  7638  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  7639  000C9C  EF59  F006         	goto	l4761
  7640  000CA0                     u5170:
  7641  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  7642  000CA2  0E00               	movlw	0
  7643  000CA4  6E0D               	movwf	___flmul@a^0,c
  7644  000CA6  0E00               	movlw	0
  7645  000CA8  6E0E               	movwf	(___flmul@a+1)^0,c
  7646  000CAA  0E00               	movlw	0
  7647  000CAC  6E0F               	movwf	(___flmul@a+2)^0,c
  7648  000CAE  0E00               	movlw	0
  7649  000CB0  6E10               	movwf	(___flmul@a+3)^0,c
  7650  000CB2                     l4761:
  7651  000CB2  FFFF               	dw	65535	; assembler added errata NOP
  7652  000CB4  8E0F               	bsf	(___flmul@a+2)^0,7,c
  7653  000CB6  EF66  F006         	goto	l970
  7654  000CBA                     l4763:
  7655  000CBA  FFFF               	dw	65535	; assembler added errata NOP
  7656  000CBC  0E00               	movlw	0
  7657  000CBE  6E0D               	movwf	___flmul@a^0,c
  7658  000CC0  0E00               	movlw	0
  7659  000CC2  6E0E               	movwf	(___flmul@a+1)^0,c
  7660  000CC4  0E00               	movlw	0
  7661  000CC6  6E0F               	movwf	(___flmul@a+2)^0,c
  7662  000CC8  0E00               	movlw	0
  7663  000CCA  6E10               	movwf	(___flmul@a+3)^0,c
  7664  000CCC                     l970:
  7665  000CCC  FFFF               	dw	65535	; assembler added errata NOP
  7666  000CCE  5016               	movf	___flmul@aexp^0,w,c
  7667  000CD0  B4D8               	btfsc	status,2,c
  7668  000CD2  EF6D  F006         	goto	u5181
  7669  000CD6  EF70  F006         	goto	u5180
  7670  000CDA                     u5181:
  7671  000CDA  FFFF               	dw	65535	; assembler added errata NOP
  7672  000CDC  EF7A  F006         	goto	l4767
  7673  000CE0                     u5180:
  7674  000CE0  FFFF               	dw	65535	; assembler added errata NOP
  7675  000CE2  501B               	movf	___flmul@bexp^0,w,c
  7676  000CE4  A4D8               	btfss	status,2,c
  7677  000CE6  EF77  F006         	goto	u5191
  7678  000CEA  EF7A  F006         	goto	u5190
  7679  000CEE                     u5191:
  7680  000CEE  FFFF               	dw	65535	; assembler added errata NOP
  7681  000CF0  EF85  F006         	goto	l4771
  7682  000CF4                     u5190:
  7683  000CF4                     l4767:
  7684  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  7685  000CF6  0E00               	movlw	0
  7686  000CF8  6E09               	movwf	?___flmul^0,c
  7687  000CFA  0E00               	movlw	0
  7688  000CFC  6E0A               	movwf	(?___flmul+1)^0,c
  7689  000CFE  0E00               	movlw	0
  7690  000D00  6E0B               	movwf	(?___flmul+2)^0,c
  7691  000D02  0E00               	movlw	0
  7692  000D04  6E0C               	movwf	(?___flmul+3)^0,c
  7693  000D06  EF3F  F008         	goto	l974
  7694  000D0A                     l4771:
  7695  000D0A  FFFF               	dw	65535	; assembler added errata NOP
  7696  000D0C  500F               	movf	(___flmul@a+2)^0,w,c
  7697  000D0E  0209               	mulwf	___flmul@b^0,c
  7698  000D10  CFF3 F020          	movff	prodl,___flmul@temp
  7699  000D14  CFF4 F021          	movff	prodh,___flmul@temp+1
  7700  000D18  5020               	movf	___flmul@temp^0,w,c
  7701  000D1A  6E17               	movwf	___flmul@grs^0,c
  7702  000D1C  6A18               	clrf	(___flmul@grs+1)^0,c
  7703  000D1E  6A19               	clrf	(___flmul@grs+2)^0,c
  7704  000D20  6A1A               	clrf	(___flmul@grs+3)^0,c
  7705  000D22  5021               	movf	(___flmul@temp+1)^0,w,c
  7706  000D24  6E1C               	movwf	___flmul@prod^0,c
  7707  000D26  6A1D               	clrf	(___flmul@prod+1)^0,c
  7708  000D28  6A1E               	clrf	(___flmul@prod+2)^0,c
  7709  000D2A  6A1F               	clrf	(___flmul@prod+3)^0,c
  7710  000D2C  500E               	movf	(___flmul@a+1)^0,w,c
  7711  000D2E  020A               	mulwf	(___flmul@b+1)^0,c
  7712  000D30  CFF3 F020          	movff	prodl,___flmul@temp
  7713  000D34  CFF4 F021          	movff	prodh,___flmul@temp+1
  7714  000D38  5020               	movf	___flmul@temp^0,w,c
  7715  000D3A  2617               	addwf	___flmul@grs^0,f,c
  7716  000D3C  0E00               	movlw	0
  7717  000D3E  2218               	addwfc	(___flmul@grs+1)^0,f,c
  7718  000D40  2219               	addwfc	(___flmul@grs+2)^0,f,c
  7719  000D42  221A               	addwfc	(___flmul@grs+3)^0,f,c
  7720  000D44  5021               	movf	(___flmul@temp+1)^0,w,c
  7721  000D46  261C               	addwf	___flmul@prod^0,f,c
  7722  000D48  0E00               	movlw	0
  7723  000D4A  221D               	addwfc	(___flmul@prod+1)^0,f,c
  7724  000D4C  221E               	addwfc	(___flmul@prod+2)^0,f,c
  7725  000D4E  221F               	addwfc	(___flmul@prod+3)^0,f,c
  7726  000D50  500D               	movf	___flmul@a^0,w,c
  7727  000D52  020B               	mulwf	(___flmul@b+2)^0,c
  7728  000D54  CFF3 F020          	movff	prodl,___flmul@temp
  7729  000D58  CFF4 F021          	movff	prodh,___flmul@temp+1
  7730  000D5C  5020               	movf	___flmul@temp^0,w,c
  7731  000D5E  2617               	addwf	___flmul@grs^0,f,c
  7732  000D60  0E00               	movlw	0
  7733  000D62  2218               	addwfc	(___flmul@grs+1)^0,f,c
  7734  000D64  2219               	addwfc	(___flmul@grs+2)^0,f,c
  7735  000D66  221A               	addwfc	(___flmul@grs+3)^0,f,c
  7736  000D68  5021               	movf	(___flmul@temp+1)^0,w,c
  7737  000D6A  261C               	addwf	___flmul@prod^0,f,c
  7738  000D6C  0E00               	movlw	0
  7739  000D6E  221D               	addwfc	(___flmul@prod+1)^0,f,c
  7740  000D70  221E               	addwfc	(___flmul@prod+2)^0,f,c
  7741  000D72  221F               	addwfc	(___flmul@prod+3)^0,f,c
  7742  000D74  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  7743  000D78  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  7744  000D7C  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  7745  000D80  6A17               	clrf	___flmul@grs^0,c
  7746  000D82  500D               	movf	___flmul@a^0,w,c
  7747  000D84  020A               	mulwf	(___flmul@b+1)^0,c
  7748  000D86  CFF3 F020          	movff	prodl,___flmul@temp
  7749  000D8A  CFF4 F021          	movff	prodh,___flmul@temp+1
  7750  000D8E  5020               	movf	___flmul@temp^0,w,c
  7751  000D90  2617               	addwf	___flmul@grs^0,f,c
  7752  000D92  5021               	movf	(___flmul@temp+1)^0,w,c
  7753  000D94  2218               	addwfc	(___flmul@grs+1)^0,f,c
  7754  000D96  0E00               	movlw	0
  7755  000D98  2219               	addwfc	(___flmul@grs+2)^0,f,c
  7756  000D9A  0E00               	movlw	0
  7757  000D9C  221A               	addwfc	(___flmul@grs+3)^0,f,c
  7758  000D9E  500E               	movf	(___flmul@a+1)^0,w,c
  7759  000DA0  0209               	mulwf	___flmul@b^0,c
  7760  000DA2  CFF3 F020          	movff	prodl,___flmul@temp
  7761  000DA6  CFF4 F021          	movff	prodh,___flmul@temp+1
  7762  000DAA  5020               	movf	___flmul@temp^0,w,c
  7763  000DAC  2617               	addwf	___flmul@grs^0,f,c
  7764  000DAE  5021               	movf	(___flmul@temp+1)^0,w,c
  7765  000DB0  2218               	addwfc	(___flmul@grs+1)^0,f,c
  7766  000DB2  0E00               	movlw	0
  7767  000DB4  2219               	addwfc	(___flmul@grs+2)^0,f,c
  7768  000DB6  0E00               	movlw	0
  7769  000DB8  221A               	addwfc	(___flmul@grs+3)^0,f,c
  7770  000DBA  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  7771  000DBE  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  7772  000DC2  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  7773  000DC6  6A17               	clrf	___flmul@grs^0,c
  7774  000DC8  500D               	movf	___flmul@a^0,w,c
  7775  000DCA  0209               	mulwf	___flmul@b^0,c
  7776  000DCC  CFF3 F020          	movff	prodl,___flmul@temp
  7777  000DD0  CFF4 F021          	movff	prodh,___flmul@temp+1
  7778  000DD4  5020               	movf	___flmul@temp^0,w,c
  7779  000DD6  2617               	addwf	___flmul@grs^0,f,c
  7780  000DD8  5021               	movf	(___flmul@temp+1)^0,w,c
  7781  000DDA  2218               	addwfc	(___flmul@grs+1)^0,f,c
  7782  000DDC  0E00               	movlw	0
  7783  000DDE  2219               	addwfc	(___flmul@grs+2)^0,f,c
  7784  000DE0  0E00               	movlw	0
  7785  000DE2  221A               	addwfc	(___flmul@grs+3)^0,f,c
  7786  000DE4  500F               	movf	(___flmul@a+2)^0,w,c
  7787  000DE6  020A               	mulwf	(___flmul@b+1)^0,c
  7788  000DE8  CFF3 F020          	movff	prodl,___flmul@temp
  7789  000DEC  CFF4 F021          	movff	prodh,___flmul@temp+1
  7790  000DF0  5020               	movf	___flmul@temp^0,w,c
  7791  000DF2  261C               	addwf	___flmul@prod^0,f,c
  7792  000DF4  5021               	movf	(___flmul@temp+1)^0,w,c
  7793  000DF6  221D               	addwfc	(___flmul@prod+1)^0,f,c
  7794  000DF8  0E00               	movlw	0
  7795  000DFA  221E               	addwfc	(___flmul@prod+2)^0,f,c
  7796  000DFC  0E00               	movlw	0
  7797  000DFE  221F               	addwfc	(___flmul@prod+3)^0,f,c
  7798  000E00  500E               	movf	(___flmul@a+1)^0,w,c
  7799  000E02  020B               	mulwf	(___flmul@b+2)^0,c
  7800  000E04  CFF3 F020          	movff	prodl,___flmul@temp
  7801  000E08  CFF4 F021          	movff	prodh,___flmul@temp+1
  7802  000E0C  5020               	movf	___flmul@temp^0,w,c
  7803  000E0E  261C               	addwf	___flmul@prod^0,f,c
  7804  000E10  5021               	movf	(___flmul@temp+1)^0,w,c
  7805  000E12  221D               	addwfc	(___flmul@prod+1)^0,f,c
  7806  000E14  0E00               	movlw	0
  7807  000E16  221E               	addwfc	(___flmul@prod+2)^0,f,c
  7808  000E18  0E00               	movlw	0
  7809  000E1A  221F               	addwfc	(___flmul@prod+3)^0,f,c
  7810  000E1C  500F               	movf	(___flmul@a+2)^0,w,c
  7811  000E1E  020B               	mulwf	(___flmul@b+2)^0,c
  7812  000E20  CFF3 F020          	movff	prodl,___flmul@temp
  7813  000E24  CFF4 F021          	movff	prodh,___flmul@temp+1
  7814  000E28  5020               	movf	___flmul@temp^0,w,c
  7815  000E2A  6E11               	movwf	??___flmul^0,c
  7816  000E2C  5021               	movf	(___flmul@temp+1)^0,w,c
  7817  000E2E  6E12               	movwf	(??___flmul+1)^0,c
  7818  000E30  6A13               	clrf	(??___flmul+2)^0,c
  7819  000E32  6A14               	clrf	(??___flmul+3)^0,c
  7820  000E34  C013  F014         	movff	??___flmul+2,??___flmul+3
  7821  000E38  C012  F013         	movff	??___flmul+1,??___flmul+2
  7822  000E3C  C011  F012         	movff	??___flmul,??___flmul+1
  7823  000E40  6A11               	clrf	??___flmul^0,c
  7824  000E42  5011               	movf	??___flmul^0,w,c
  7825  000E44  261C               	addwf	___flmul@prod^0,f,c
  7826  000E46  5012               	movf	(??___flmul+1)^0,w,c
  7827  000E48  221D               	addwfc	(___flmul@prod+1)^0,f,c
  7828  000E4A  5013               	movf	(??___flmul+2)^0,w,c
  7829  000E4C  221E               	addwfc	(___flmul@prod+2)^0,f,c
  7830  000E4E  5014               	movf	(??___flmul+3)^0,w,c
  7831  000E50  221F               	addwfc	(___flmul@prod+3)^0,f,c
  7832  000E52  C017  F011         	movff	___flmul@grs,??___flmul
  7833  000E56  C018  F012         	movff	___flmul@grs+1,??___flmul+1
  7834  000E5A  C019  F013         	movff	___flmul@grs+2,??___flmul+2
  7835  000E5E  C01A  F014         	movff	___flmul@grs+3,??___flmul+3
  7836  000E62  0E19               	movlw	25
  7837  000E64  EF3A  F007         	goto	u5200
  7838  000E68                     u5205:
  7839  000E68  FFFF               	dw	65535	; assembler added errata NOP
  7840  000E6A  90D8               	bcf	status,0,c
  7841  000E6C  3214               	rrcf	(??___flmul+3)^0,f,c
  7842  000E6E  3213               	rrcf	(??___flmul+2)^0,f,c
  7843  000E70  3212               	rrcf	(??___flmul+1)^0,f,c
  7844  000E72  3211               	rrcf	??___flmul^0,f,c
  7845  000E74                     u5200:
  7846  000E74  FFFF               	dw	65535	; assembler added errata NOP
  7847  000E76  2EE8               	decfsz	wreg,f,c
  7848  000E78  EF34  F007         	goto	u5205
  7849  000E7C  5011               	movf	??___flmul^0,w,c
  7850  000E7E  261C               	addwf	___flmul@prod^0,f,c
  7851  000E80  5012               	movf	(??___flmul+1)^0,w,c
  7852  000E82  221D               	addwfc	(___flmul@prod+1)^0,f,c
  7853  000E84  5013               	movf	(??___flmul+2)^0,w,c
  7854  000E86  221E               	addwfc	(___flmul@prod+2)^0,f,c
  7855  000E88  5014               	movf	(??___flmul+3)^0,w,c
  7856  000E8A  221F               	addwfc	(___flmul@prod+3)^0,f,c
  7857  000E8C  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  7858  000E90  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  7859  000E94  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  7860  000E98  6A17               	clrf	___flmul@grs^0,c
  7861  000E9A  5016               	movf	___flmul@aexp^0,w,c
  7862  000E9C  C01B  F011         	movff	___flmul@bexp,??___flmul
  7863  000EA0  6A12               	clrf	(??___flmul+1)^0,c
  7864  000EA2  2611               	addwf	??___flmul^0,f,c
  7865  000EA4  0E00               	movlw	0
  7866  000EA6  2212               	addwfc	(??___flmul+1)^0,f,c
  7867  000EA8  0E82               	movlw	130
  7868  000EAA  2411               	addwf	??___flmul^0,w,c
  7869  000EAC  6E20               	movwf	___flmul@temp^0,c
  7870  000EAE  0EFF               	movlw	255
  7871  000EB0  2012               	addwfc	(??___flmul+1)^0,w,c
  7872  000EB2  6E21               	movwf	(___flmul@temp+1)^0,c
  7873  000EB4  EF75  F007         	goto	l4819
  7874  000EB8                     l4813:
  7875  000EB8  FFFF               	dw	65535	; assembler added errata NOP
  7876  000EBA  90D8               	bcf	status,0,c
  7877  000EBC  361C               	rlcf	___flmul@prod^0,f,c
  7878  000EBE  361D               	rlcf	(___flmul@prod+1)^0,f,c
  7879  000EC0  361E               	rlcf	(___flmul@prod+2)^0,f,c
  7880  000EC2  361F               	rlcf	(___flmul@prod+3)^0,f,c
  7881  000EC4  AE1A               	btfss	(___flmul@grs+3)^0,7,c
  7882  000EC6  EF67  F007         	goto	u5211
  7883  000ECA  EF6A  F007         	goto	u5210
  7884  000ECE                     u5211:
  7885  000ECE  FFFF               	dw	65535	; assembler added errata NOP
  7886  000ED0  EF6C  F007         	goto	l977
  7887  000ED4                     u5210:
  7888  000ED4  FFFF               	dw	65535	; assembler added errata NOP
  7889  000ED6  801C               	bsf	___flmul@prod^0,0,c
  7890  000ED8                     l977:
  7891  000ED8  FFFF               	dw	65535	; assembler added errata NOP
  7892  000EDA  90D8               	bcf	status,0,c
  7893  000EDC  3617               	rlcf	___flmul@grs^0,f,c
  7894  000EDE  3618               	rlcf	(___flmul@grs+1)^0,f,c
  7895  000EE0  3619               	rlcf	(___flmul@grs+2)^0,f,c
  7896  000EE2  361A               	rlcf	(___flmul@grs+3)^0,f,c
  7897  000EE4  0620               	decf	___flmul@temp^0,f,c
  7898  000EE6  A0D8               	btfss	status,0,c
  7899  000EE8  0621               	decf	(___flmul@temp+1)^0,f,c
  7900  000EEA                     l4819:
  7901  000EEA  FFFF               	dw	65535	; assembler added errata NOP
  7902  000EEC  AE1E               	btfss	(___flmul@prod+2)^0,7,c
  7903  000EEE  EF7B  F007         	goto	u5221
  7904  000EF2  EF7E  F007         	goto	u5220
  7905  000EF6                     u5221:
  7906  000EF6  FFFF               	dw	65535	; assembler added errata NOP
  7907  000EF8  EF5C  F007         	goto	l4813
  7908  000EFC                     u5220:
  7909  000EFC  FFFF               	dw	65535	; assembler added errata NOP
  7910  000EFE  0E00               	movlw	0
  7911  000F00  6E16               	movwf	___flmul@aexp^0,c
  7912  000F02  AE1A               	btfss	(___flmul@grs+3)^0,7,c
  7913  000F04  EF86  F007         	goto	u5231
  7914  000F08  EF89  F007         	goto	u5230
  7915  000F0C                     u5231:
  7916  000F0C  FFFF               	dw	65535	; assembler added errata NOP
  7917  000F0E  EFB4  F007         	goto	l979
  7918  000F12                     u5230:
  7919  000F12  FFFF               	dw	65535	; assembler added errata NOP
  7920  000F14  0EFF               	movlw	255
  7921  000F16  1417               	andwf	___flmul@grs^0,w,c
  7922  000F18  6E11               	movwf	??___flmul^0,c
  7923  000F1A  0EFF               	movlw	255
  7924  000F1C  1418               	andwf	(___flmul@grs+1)^0,w,c
  7925  000F1E  6E12               	movwf	(??___flmul+1)^0,c
  7926  000F20  0EFF               	movlw	255
  7927  000F22  1419               	andwf	(___flmul@grs+2)^0,w,c
  7928  000F24  6E13               	movwf	(??___flmul+2)^0,c
  7929  000F26  0E7F               	movlw	127
  7930  000F28  141A               	andwf	(___flmul@grs+3)^0,w,c
  7931  000F2A  6E14               	movwf	(??___flmul+3)^0,c
  7932  000F2C  5011               	movf	??___flmul^0,w,c
  7933  000F2E  1012               	iorwf	(??___flmul+1)^0,w,c
  7934  000F30  1013               	iorwf	(??___flmul+2)^0,w,c
  7935  000F32  1014               	iorwf	(??___flmul+3)^0,w,c
  7936  000F34  B4D8               	btfsc	status,2,c
  7937  000F36  EF9F  F007         	goto	u5241
  7938  000F3A  EFA2  F007         	goto	u5240
  7939  000F3E                     u5241:
  7940  000F3E  FFFF               	dw	65535	; assembler added errata NOP
  7941  000F40  EFA8  F007         	goto	l980
  7942  000F44                     u5240:
  7943  000F44  FFFF               	dw	65535	; assembler added errata NOP
  7944  000F46                     l4827:
  7945  000F46  FFFF               	dw	65535	; assembler added errata NOP
  7946  000F48  0E01               	movlw	1
  7947  000F4A  6E16               	movwf	___flmul@aexp^0,c
  7948  000F4C  EFB4  F007         	goto	l979
  7949  000F50                     l980:
  7950  000F50  FFFF               	dw	65535	; assembler added errata NOP
  7951  000F52  A01C               	btfss	___flmul@prod^0,0,c
  7952  000F54  EFAE  F007         	goto	u5251
  7953  000F58  EFB1  F007         	goto	u5250
  7954  000F5C                     u5251:
  7955  000F5C  FFFF               	dw	65535	; assembler added errata NOP
  7956  000F5E  EFB4  F007         	goto	l979
  7957  000F62                     u5250:
  7958  000F62  FFFF               	dw	65535	; assembler added errata NOP
  7959  000F64  EFA3  F007         	goto	l4827
  7960  000F68                     l979:
  7961  000F68  FFFF               	dw	65535	; assembler added errata NOP
  7962  000F6A  5016               	movf	___flmul@aexp^0,w,c
  7963  000F6C  B4D8               	btfsc	status,2,c
  7964  000F6E  EFBB  F007         	goto	u5261
  7965  000F72  EFBE  F007         	goto	u5260
  7966  000F76                     u5261:
  7967  000F76  FFFF               	dw	65535	; assembler added errata NOP
  7968  000F78  EFE5  F007         	goto	l4839
  7969  000F7C                     u5260:
  7970  000F7C  FFFF               	dw	65535	; assembler added errata NOP
  7971  000F7E  0E01               	movlw	1
  7972  000F80  261C               	addwf	___flmul@prod^0,f,c
  7973  000F82  0E00               	movlw	0
  7974  000F84  221D               	addwfc	(___flmul@prod+1)^0,f,c
  7975  000F86  221E               	addwfc	(___flmul@prod+2)^0,f,c
  7976  000F88  221F               	addwfc	(___flmul@prod+3)^0,f,c
  7977  000F8A  A01F               	btfss	(___flmul@prod+3)^0,0,c
  7978  000F8C  EFCA  F007         	goto	u5271
  7979  000F90  EFCD  F007         	goto	u5270
  7980  000F94                     u5271:
  7981  000F94  FFFF               	dw	65535	; assembler added errata NOP
  7982  000F96  EFE5  F007         	goto	l4839
  7983  000F9A                     u5270:
  7984  000F9A  FFFF               	dw	65535	; assembler added errata NOP
  7985  000F9C  C01C  F011         	movff	___flmul@prod,??___flmul
  7986  000FA0  C01D  F012         	movff	___flmul@prod+1,??___flmul+1
  7987  000FA4  C01E  F013         	movff	___flmul@prod+2,??___flmul+2
  7988  000FA8  C01F  F014         	movff	___flmul@prod+3,??___flmul+3
  7989  000FAC  3414               	rlcf	(??___flmul+3)^0,w,c
  7990  000FAE  3214               	rrcf	(??___flmul+3)^0,f,c
  7991  000FB0  3213               	rrcf	(??___flmul+2)^0,f,c
  7992  000FB2  3212               	rrcf	(??___flmul+1)^0,f,c
  7993  000FB4  3211               	rrcf	??___flmul^0,f,c
  7994  000FB6  C011  F01C         	movff	??___flmul,___flmul@prod
  7995  000FBA  C012  F01D         	movff	??___flmul+1,___flmul@prod+1
  7996  000FBE  C013  F01E         	movff	??___flmul+2,___flmul@prod+2
  7997  000FC2  C014  F01F         	movff	??___flmul+3,___flmul@prod+3
  7998  000FC6  4A20               	infsnz	___flmul@temp^0,f,c
  7999  000FC8  2A21               	incf	(___flmul@temp+1)^0,f,c
  8000  000FCA                     l4839:
  8001  000FCA  FFFF               	dw	65535	; assembler added errata NOP
  8002  000FCC  BE21               	btfsc	(___flmul@temp+1)^0,7,c
  8003  000FCE  EFF1  F007         	goto	u5281
  8004  000FD2  5021               	movf	(___flmul@temp+1)^0,w,c
  8005  000FD4  E109               	bnz	u5280
  8006  000FD6  2820               	incf	___flmul@temp^0,w,c
  8007  000FD8  A0D8               	btfss	status,0,c
  8008  000FDA  EFF1  F007         	goto	u5281
  8009  000FDE  EFF4  F007         	goto	u5280
  8010  000FE2                     u5281:
  8011  000FE2  FFFF               	dw	65535	; assembler added errata NOP
  8012  000FE4  EFFF  F007         	goto	l4843
  8013  000FE8                     u5280:
  8014  000FE8  FFFF               	dw	65535	; assembler added errata NOP
  8015  000FEA  0E00               	movlw	0
  8016  000FEC  6E1C               	movwf	___flmul@prod^0,c
  8017  000FEE  0E00               	movlw	0
  8018  000FF0  6E1D               	movwf	(___flmul@prod+1)^0,c
  8019  000FF2  0E80               	movlw	128
  8020  000FF4  6E1E               	movwf	(___flmul@prod+2)^0,c
  8021  000FF6  0E7F               	movlw	127
  8022  000FF8  6E1F               	movwf	(___flmul@prod+3)^0,c
  8023  000FFA  EF34  F008         	goto	l4855
  8024  000FFE                     l4843:
  8025  000FFE  FFFF               	dw	65535	; assembler added errata NOP
  8026  001000  BE21               	btfsc	(___flmul@temp+1)^0,7,c
  8027  001002  EF0E  F008         	goto	u5290
  8028  001006  5021               	movf	(___flmul@temp+1)^0,w,c
  8029  001008  E106               	bnz	u5291
  8030  00100A  0420               	decf	___flmul@temp^0,w,c
  8031  00100C  B0D8               	btfsc	status,0,c
  8032  00100E  EF0B  F008         	goto	u5291
  8033  001012  EF0E  F008         	goto	u5290
  8034  001016                     u5291:
  8035  001016  FFFF               	dw	65535	; assembler added errata NOP
  8036  001018  EF1B  F008         	goto	l987
  8037  00101C                     u5290:
  8038  00101C  FFFF               	dw	65535	; assembler added errata NOP
  8039  00101E  0E00               	movlw	0
  8040  001020  6E1C               	movwf	___flmul@prod^0,c
  8041  001022  0E00               	movlw	0
  8042  001024  6E1D               	movwf	(___flmul@prod+1)^0,c
  8043  001026  0E00               	movlw	0
  8044  001028  6E1E               	movwf	(___flmul@prod+2)^0,c
  8045  00102A  0E00               	movlw	0
  8046  00102C  6E1F               	movwf	(___flmul@prod+3)^0,c
  8047  00102E  0E00               	movlw	0
  8048  001030  6E15               	movwf	___flmul@sign^0,c
  8049  001032  EF34  F008         	goto	l4855
  8050  001036                     l987:
  8051  001036  FFFF               	dw	65535	; assembler added errata NOP
  8052  001038  C020  F01B         	movff	___flmul@temp,___flmul@bexp
  8053  00103C  0EFF               	movlw	255
  8054  00103E  161C               	andwf	___flmul@prod^0,f,c
  8055  001040  0EFF               	movlw	255
  8056  001042  161D               	andwf	(___flmul@prod+1)^0,f,c
  8057  001044  0E7F               	movlw	127
  8058  001046  161E               	andwf	(___flmul@prod+2)^0,f,c
  8059  001048  0E00               	movlw	0
  8060  00104A  161F               	andwf	(___flmul@prod+3)^0,f,c
  8061  00104C  A01B               	btfss	___flmul@bexp^0,0,c
  8062  00104E  EF2B  F008         	goto	u5301
  8063  001052  EF2E  F008         	goto	u5300
  8064  001056                     u5301:
  8065  001056  FFFF               	dw	65535	; assembler added errata NOP
  8066  001058  EF30  F008         	goto	l4853
  8067  00105C                     u5300:
  8068  00105C  FFFF               	dw	65535	; assembler added errata NOP
  8069  00105E  8E1E               	bsf	(___flmul@prod+2)^0,7,c
  8070  001060                     l4853:
  8071  001060  FFFF               	dw	65535	; assembler added errata NOP
  8072  001062  90D8               	bcf	status,0,c
  8073  001064  301B               	rrcf	___flmul@bexp^0,w,c
  8074  001066  6E1F               	movwf	(___flmul@prod+3)^0,c
  8075  001068                     l4855:
  8076  001068  FFFF               	dw	65535	; assembler added errata NOP
  8077  00106A  5015               	movf	___flmul@sign^0,w,c
  8078  00106C  121F               	iorwf	(___flmul@prod+3)^0,f,c
  8079  00106E  C01C  F009         	movff	___flmul@prod,?___flmul
  8080  001072  C01D  F00A         	movff	___flmul@prod+1,?___flmul+1
  8081  001076  C01E  F00B         	movff	___flmul@prod+2,?___flmul+2
  8082  00107A  C01F  F00C         	movff	___flmul@prod+3,?___flmul+3
  8083  00107E                     l974:
  8084  00107E  FFFF               	dw	65535	; assembler added errata NOP
  8085  001080  0012               	return		;funcret
  8086  001082  FFFF               	dw	65535	; errata NOP
  8087  001084                     __end_of___flmul:
  8088                           	callstack 0
  8089                           
  8090 ;; *************** function ___flge *****************
  8091 ;; Defined at:
  8092 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  ff1             4   47[COMRAM] unsigned char 
  8095 ;;  ff2             4   51[COMRAM] unsigned char 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;		None
  8098 ;; Return value:  Size  Location     Type
  8099 ;;		None               void
  8100 ;; Registers used:
  8101 ;;		wreg, status,2, status,0
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8107 ;;      Params:         8       0       0       0       0       0       0
  8108 ;;      Locals:         0       0       0       0       0       0       0
  8109 ;;      Temps:          4       0       0       0       0       0       0
  8110 ;;      Totals:        12       0       0       0       0       0       0
  8111 ;;Total ram usage:       12 bytes
  8112 ;; Hardware stack levels used: 1
  8113 ;; Hardware stack levels required when called: 2
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		_pick_and_place
  8118 ;;		_roundf
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text33
  8123  002268                     __ptext33:
  8124                           	callstack 0
  8125  002268                     ___flge:
  8126                           	callstack 0
  8127  002268  FFFF               	dw	65535	; assembler added errata NOP
  8128  00226A  0E00               	movlw	0
  8129  00226C  1430               	andwf	___flge@ff1^0,w,c
  8130  00226E  6E38               	movwf	??___flge^0,c
  8131  002270  0E00               	movlw	0
  8132  002272  1431               	andwf	(___flge@ff1+1)^0,w,c
  8133  002274  6E39               	movwf	(??___flge+1)^0,c
  8134  002276  0E80               	movlw	128
  8135  002278  1432               	andwf	(___flge@ff1+2)^0,w,c
  8136  00227A  6E3A               	movwf	(??___flge+2)^0,c
  8137  00227C  0E7F               	movlw	127
  8138  00227E  1433               	andwf	(___flge@ff1+3)^0,w,c
  8139  002280  6E3B               	movwf	(??___flge+3)^0,c
  8140  002282  5038               	movf	??___flge^0,w,c
  8141  002284  1039               	iorwf	(??___flge+1)^0,w,c
  8142  002286  103A               	iorwf	(??___flge+2)^0,w,c
  8143  002288  103B               	iorwf	(??___flge+3)^0,w,c
  8144  00228A  A4D8               	btfss	status,2,c
  8145  00228C  EF4A  F011         	goto	u4621
  8146  002290  EF4D  F011         	goto	u4620
  8147  002294                     u4621:
  8148  002294  FFFF               	dw	65535	; assembler added errata NOP
  8149  002296  EF56  F011         	goto	l4447
  8150  00229A                     u4620:
  8151  00229A  FFFF               	dw	65535	; assembler added errata NOP
  8152  00229C  0E00               	movlw	0
  8153  00229E  6E30               	movwf	___flge@ff1^0,c
  8154  0022A0  0E00               	movlw	0
  8155  0022A2  6E31               	movwf	(___flge@ff1+1)^0,c
  8156  0022A4  0E00               	movlw	0
  8157  0022A6  6E32               	movwf	(___flge@ff1+2)^0,c
  8158  0022A8  0E00               	movlw	0
  8159  0022AA  6E33               	movwf	(___flge@ff1+3)^0,c
  8160  0022AC                     l4447:
  8161  0022AC  FFFF               	dw	65535	; assembler added errata NOP
  8162  0022AE  0E00               	movlw	0
  8163  0022B0  1434               	andwf	___flge@ff2^0,w,c
  8164  0022B2  6E38               	movwf	??___flge^0,c
  8165  0022B4  0E00               	movlw	0
  8166  0022B6  1435               	andwf	(___flge@ff2+1)^0,w,c
  8167  0022B8  6E39               	movwf	(??___flge+1)^0,c
  8168  0022BA  0E80               	movlw	128
  8169  0022BC  1436               	andwf	(___flge@ff2+2)^0,w,c
  8170  0022BE  6E3A               	movwf	(??___flge+2)^0,c
  8171  0022C0  0E7F               	movlw	127
  8172  0022C2  1437               	andwf	(___flge@ff2+3)^0,w,c
  8173  0022C4  6E3B               	movwf	(??___flge+3)^0,c
  8174  0022C6  5038               	movf	??___flge^0,w,c
  8175  0022C8  1039               	iorwf	(??___flge+1)^0,w,c
  8176  0022CA  103A               	iorwf	(??___flge+2)^0,w,c
  8177  0022CC  103B               	iorwf	(??___flge+3)^0,w,c
  8178  0022CE  A4D8               	btfss	status,2,c
  8179  0022D0  EF6C  F011         	goto	u4631
  8180  0022D4  EF6F  F011         	goto	u4630
  8181  0022D8                     u4631:
  8182  0022D8  FFFF               	dw	65535	; assembler added errata NOP
  8183  0022DA  EF78  F011         	goto	l4451
  8184  0022DE                     u4630:
  8185  0022DE  FFFF               	dw	65535	; assembler added errata NOP
  8186  0022E0  0E00               	movlw	0
  8187  0022E2  6E34               	movwf	___flge@ff2^0,c
  8188  0022E4  0E00               	movlw	0
  8189  0022E6  6E35               	movwf	(___flge@ff2+1)^0,c
  8190  0022E8  0E00               	movlw	0
  8191  0022EA  6E36               	movwf	(___flge@ff2+2)^0,c
  8192  0022EC  0E00               	movlw	0
  8193  0022EE  6E37               	movwf	(___flge@ff2+3)^0,c
  8194  0022F0                     l4451:
  8195  0022F0  FFFF               	dw	65535	; assembler added errata NOP
  8196  0022F2  AE33               	btfss	(___flge@ff1+3)^0,7,c
  8197  0022F4  EF7E  F011         	goto	u4641
  8198  0022F8  EF81  F011         	goto	u4640
  8199  0022FC                     u4641:
  8200  0022FC  FFFF               	dw	65535	; assembler added errata NOP
  8201  0022FE  EF8B  F011         	goto	l4455
  8202  002302                     u4640:
  8203  002302  FFFF               	dw	65535	; assembler added errata NOP
  8204  002304  6C30               	negf	___flge@ff1^0,c
  8205  002306  1E31               	comf	(___flge@ff1+1)^0,f,c
  8206  002308  B0D8               	btfsc	status,0,c
  8207  00230A  2A31               	incf	(___flge@ff1+1)^0,f,c
  8208  00230C  1E32               	comf	(___flge@ff1+2)^0,f,c
  8209  00230E  B0D8               	btfsc	status,0,c
  8210  002310  2A32               	incf	(___flge@ff1+2)^0,f,c
  8211  002312  0E80               	movlw	128
  8212  002314  5633               	subfwb	(___flge@ff1+3)^0,f,c
  8213  002316                     l4455:
  8214  002316  FFFF               	dw	65535	; assembler added errata NOP
  8215  002318  AE37               	btfss	(___flge@ff2+3)^0,7,c
  8216  00231A  EF91  F011         	goto	u4651
  8217  00231E  EF94  F011         	goto	u4650
  8218  002322                     u4651:
  8219  002322  FFFF               	dw	65535	; assembler added errata NOP
  8220  002324  EF9E  F011         	goto	l621
  8221  002328                     u4650:
  8222  002328  FFFF               	dw	65535	; assembler added errata NOP
  8223  00232A  6C34               	negf	___flge@ff2^0,c
  8224  00232C  1E35               	comf	(___flge@ff2+1)^0,f,c
  8225  00232E  B0D8               	btfsc	status,0,c
  8226  002330  2A35               	incf	(___flge@ff2+1)^0,f,c
  8227  002332  1E36               	comf	(___flge@ff2+2)^0,f,c
  8228  002334  B0D8               	btfsc	status,0,c
  8229  002336  2A36               	incf	(___flge@ff2+2)^0,f,c
  8230  002338  0E80               	movlw	128
  8231  00233A  5637               	subfwb	(___flge@ff2+3)^0,f,c
  8232  00233C                     l621:
  8233  00233C  FFFF               	dw	65535	; assembler added errata NOP
  8234  00233E  0E00               	movlw	0
  8235  002340  1A30               	xorwf	___flge@ff1^0,f,c
  8236  002342  0E00               	movlw	0
  8237  002344  1A31               	xorwf	(___flge@ff1+1)^0,f,c
  8238  002346  0E00               	movlw	0
  8239  002348  1A32               	xorwf	(___flge@ff1+2)^0,f,c
  8240  00234A  0E80               	movlw	128
  8241  00234C  1A33               	xorwf	(___flge@ff1+3)^0,f,c
  8242  00234E  0E00               	movlw	0
  8243  002350  1A34               	xorwf	___flge@ff2^0,f,c
  8244  002352  0E00               	movlw	0
  8245  002354  1A35               	xorwf	(___flge@ff2+1)^0,f,c
  8246  002356  0E00               	movlw	0
  8247  002358  1A36               	xorwf	(___flge@ff2+2)^0,f,c
  8248  00235A  0E80               	movlw	128
  8249  00235C  1A37               	xorwf	(___flge@ff2+3)^0,f,c
  8250  00235E  5034               	movf	___flge@ff2^0,w,c
  8251  002360  5C30               	subwf	___flge@ff1^0,w,c
  8252  002362  5035               	movf	(___flge@ff2+1)^0,w,c
  8253  002364  5831               	subwfb	(___flge@ff1+1)^0,w,c
  8254  002366  5036               	movf	(___flge@ff2+2)^0,w,c
  8255  002368  5832               	subwfb	(___flge@ff1+2)^0,w,c
  8256  00236A  5037               	movf	(___flge@ff2+3)^0,w,c
  8257  00236C  5833               	subwfb	(___flge@ff1+3)^0,w,c
  8258  00236E  B0D8               	btfsc	status,0,c
  8259  002370  EFBC  F011         	goto	u4661
  8260  002374  EFBF  F011         	goto	u4660
  8261  002378                     u4661:
  8262  002378  FFFF               	dw	65535	; assembler added errata NOP
  8263  00237A  EFC3  F011         	goto	l4461
  8264  00237E                     u4660:
  8265  00237E  FFFF               	dw	65535	; assembler added errata NOP
  8266  002380  90D8               	bcf	status,0,c
  8267  002382  EFC5  F011         	goto	l626
  8268  002386                     l4461:
  8269  002386  FFFF               	dw	65535	; assembler added errata NOP
  8270  002388  80D8               	bsf	status,0,c
  8271  00238A                     l626:
  8272  00238A  FFFF               	dw	65535	; assembler added errata NOP
  8273  00238C  0012               	return		;funcret
  8274  00238E  FFFF               	dw	65535	; errata NOP
  8275  002390                     __end_of___flge:
  8276                           	callstack 0
  8277                           
  8278 ;; *************** function ___fltol *****************
  8279 ;; Defined at:
  8280 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;  f1              4   85[COMRAM] unsigned char 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;  exp1            1    5[BANK0 ] unsigned char 
  8285 ;;  sign1           1    4[BANK0 ] unsigned char 
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  4   85[COMRAM] long 
  8288 ;; Registers used:
  8289 ;;		wreg, status,2, status,0
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8295 ;;      Params:         4       0       0       0       0       0       0
  8296 ;;      Locals:         0       2       0       0       0       0       0
  8297 ;;      Temps:          0       4       0       0       0       0       0
  8298 ;;      Totals:         4       6       0       0       0       0       0
  8299 ;;Total ram usage:       10 bytes
  8300 ;; Hardware stack levels used: 1
  8301 ;; Hardware stack levels required when called: 2
  8302 ;; This function calls:
  8303 ;;		Nothing
  8304 ;; This function is called by:
  8305 ;;		_init_USART
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text34
  8310  002130                     __ptext34:
  8311                           	callstack 0
  8312  002130                     ___fltol:
  8313                           	callstack 0
  8314  002130  FFFF               	dw	65535	; assembler added errata NOP
  8315  002132  3458               	rlcf	(___fltol@f1+2)^0,w,c
  8316  002134  3459               	rlcf	(___fltol@f1+3)^0,w,c
  8317  002136  0100               	movlb	0	; () banked
  8318  002138  6F85               	movwf	___fltol@exp1& (0+255),b
  8319  00213A  5185               	movf	___fltol@exp1& (0+255),w,b
  8320  00213C  A4D8               	btfss	status,2,c
  8321  00213E  EFA3  F010         	goto	u5611
  8322  002142  EFA6  F010         	goto	u5610
  8323  002146                     u5611:
  8324  002146  FFFF               	dw	65535	; assembler added errata NOP
  8325  002148  EFB2  F010         	goto	l5045
  8326  00214C                     u5610:
  8327  00214C  FFFF               	dw	65535	; assembler added errata NOP
  8328  00214E                     l5041:
  8329  00214E  FFFF               	dw	65535	; assembler added errata NOP
  8330                           
  8331                           ; BSR set to: 0
  8332  002150  0E00               	movlw	0
  8333  002152  6E56               	movwf	?___fltol^0,c
  8334  002154  0E00               	movlw	0
  8335  002156  6E57               	movwf	(?___fltol+1)^0,c
  8336  002158  0E00               	movlw	0
  8337  00215A  6E58               	movwf	(?___fltol+2)^0,c
  8338  00215C  0E00               	movlw	0
  8339  00215E  6E59               	movwf	(?___fltol+3)^0,c
  8340  002160  EF31  F011         	goto	l653
  8341  002164                     l5045:
  8342  002164  FFFF               	dw	65535	; assembler added errata NOP
  8343                           
  8344                           ; BSR set to: 0
  8345  002166  C056  F080         	movff	___fltol@f1,??___fltol
  8346  00216A  C057  F081         	movff	___fltol@f1+1,??___fltol+1
  8347  00216E  C058  F082         	movff	___fltol@f1+2,??___fltol+2
  8348  002172  C059  F083         	movff	___fltol@f1+3,??___fltol+3
  8349  002176  0E20               	movlw	32
  8350  002178  EFC4  F010         	goto	u5620
  8351  00217C                     u5625:
  8352  00217C  FFFF               	dw	65535	; assembler added errata NOP
  8353  00217E  90D8               	bcf	status,0,c
  8354  002180  3383               	rrcf	(??___fltol+3)& (0+255),f,b
  8355  002182  3382               	rrcf	(??___fltol+2)& (0+255),f,b
  8356  002184  3381               	rrcf	(??___fltol+1)& (0+255),f,b
  8357  002186  3380               	rrcf	??___fltol& (0+255),f,b
  8358  002188                     u5620:
  8359  002188  FFFF               	dw	65535	; assembler added errata NOP
  8360  00218A  2EE8               	decfsz	wreg,f,c
  8361  00218C  EFBE  F010         	goto	u5625
  8362  002190  5180               	movf	??___fltol& (0+255),w,b
  8363  002192  6F84               	movwf	___fltol@sign1& (0+255),b
  8364  002194                     
  8365                           ; BSR set to: 0
  8366  002194  8E58               	bsf	(___fltol@f1+2)^0,7,c
  8367  002196                     
  8368                           ; BSR set to: 0
  8369  002196  0EFF               	movlw	255
  8370  002198  1656               	andwf	___fltol@f1^0,f,c
  8371  00219A  0EFF               	movlw	255
  8372  00219C  1657               	andwf	(___fltol@f1+1)^0,f,c
  8373  00219E  0EFF               	movlw	255
  8374  0021A0  1658               	andwf	(___fltol@f1+2)^0,f,c
  8375  0021A2  0E00               	movlw	0
  8376  0021A4  1659               	andwf	(___fltol@f1+3)^0,f,c
  8377  0021A6                     
  8378                           ; BSR set to: 0
  8379  0021A6  0E96               	movlw	150
  8380  0021A8  5F85               	subwf	___fltol@exp1& (0+255),f,b
  8381  0021AA                     
  8382                           ; BSR set to: 0
  8383  0021AA  BF85               	btfsc	___fltol@exp1& (0+255),7,b
  8384  0021AC  EFDD  F010         	goto	u5630
  8385  0021B0  EFDA  F010         	goto	u5631
  8386  0021B4                     u5631:
  8387  0021B4  FFFF               	dw	65535	; assembler added errata NOP
  8388  0021B6  EFF7  F010         	goto	l5065
  8389  0021BA                     u5630:
  8390  0021BA  FFFF               	dw	65535	; assembler added errata NOP
  8391  0021BC                     
  8392                           ; BSR set to: 0
  8393  0021BC  5185               	movf	___fltol@exp1& (0+255),w,b
  8394  0021BE  0A80               	xorlw	128
  8395  0021C0  0F97               	addlw	151
  8396  0021C2  B0D8               	btfsc	status,0,c
  8397  0021C4  EFE6  F010         	goto	u5641
  8398  0021C8  EFE9  F010         	goto	u5640
  8399  0021CC                     u5641:
  8400  0021CC  FFFF               	dw	65535	; assembler added errata NOP
  8401  0021CE  EFEC  F010         	goto	l5061
  8402  0021D2                     u5640:
  8403  0021D2  FFFF               	dw	65535	; assembler added errata NOP
  8404  0021D4  EFA7  F010         	goto	l5041
  8405  0021D8                     l5061:
  8406  0021D8  FFFF               	dw	65535	; assembler added errata NOP
  8407                           
  8408                           ; BSR set to: 0
  8409  0021DA  90D8               	bcf	status,0,c
  8410  0021DC  3259               	rrcf	(___fltol@f1+3)^0,f,c
  8411  0021DE  3258               	rrcf	(___fltol@f1+2)^0,f,c
  8412  0021E0  3257               	rrcf	(___fltol@f1+1)^0,f,c
  8413  0021E2  3256               	rrcf	___fltol@f1^0,f,c
  8414  0021E4                     
  8415                           ; BSR set to: 0
  8416  0021E4  3F85               	incfsz	___fltol@exp1& (0+255),f,b
  8417  0021E6  EFEC  F010         	goto	l5061
  8418  0021EA  EF15  F011         	goto	l5075
  8419  0021EE                     l5065:
  8420  0021EE  FFFF               	dw	65535	; assembler added errata NOP
  8421                           
  8422                           ; BSR set to: 0
  8423  0021F0  0E1F               	movlw	31
  8424  0021F2  6585               	cpfsgt	___fltol@exp1& (0+255),b
  8425  0021F4  EFFE  F010         	goto	u5651
  8426  0021F8  EF01  F011         	goto	u5650
  8427  0021FC                     u5651:
  8428  0021FC  FFFF               	dw	65535	; assembler added errata NOP
  8429  0021FE  EF0B  F011         	goto	l5073
  8430  002202                     u5650:
  8431  002202  FFFF               	dw	65535	; assembler added errata NOP
  8432  002204  EFA7  F010         	goto	l5041
  8433  002208                     l5071:
  8434  002208  FFFF               	dw	65535	; assembler added errata NOP
  8435                           
  8436                           ; BSR set to: 0
  8437  00220A  90D8               	bcf	status,0,c
  8438  00220C  3656               	rlcf	___fltol@f1^0,f,c
  8439  00220E  3657               	rlcf	(___fltol@f1+1)^0,f,c
  8440  002210  3658               	rlcf	(___fltol@f1+2)^0,f,c
  8441  002212  3659               	rlcf	(___fltol@f1+3)^0,f,c
  8442  002214  0785               	decf	___fltol@exp1& (0+255),f,b
  8443  002216                     l5073:
  8444  002216  FFFF               	dw	65535	; assembler added errata NOP
  8445                           
  8446                           ; BSR set to: 0
  8447  002218  5185               	movf	___fltol@exp1& (0+255),w,b
  8448  00221A  A4D8               	btfss	status,2,c
  8449  00221C  EF12  F011         	goto	u5661
  8450  002220  EF15  F011         	goto	u5660
  8451  002224                     u5661:
  8452  002224  FFFF               	dw	65535	; assembler added errata NOP
  8453  002226  EF04  F011         	goto	l5071
  8454  00222A                     u5660:
  8455  00222A                     l5075:
  8456  00222A  FFFF               	dw	65535	; assembler added errata NOP
  8457                           
  8458                           ; BSR set to: 0
  8459  00222C  5184               	movf	___fltol@sign1& (0+255),w,b
  8460  00222E  B4D8               	btfsc	status,2,c
  8461  002230  EF1C  F011         	goto	u5671
  8462  002234  EF1F  F011         	goto	u5670
  8463  002238                     u5671:
  8464  002238  FFFF               	dw	65535	; assembler added errata NOP
  8465  00223A  EF28  F011         	goto	l5079
  8466  00223E                     u5670:
  8467  00223E  FFFF               	dw	65535	; assembler added errata NOP
  8468  002240                     
  8469                           ; BSR set to: 0
  8470  002240  1E59               	comf	(___fltol@f1+3)^0,f,c
  8471  002242  1E58               	comf	(___fltol@f1+2)^0,f,c
  8472  002244  1E57               	comf	(___fltol@f1+1)^0,f,c
  8473  002246  6C56               	negf	___fltol@f1^0,c
  8474  002248  0E00               	movlw	0
  8475  00224A  2257               	addwfc	(___fltol@f1+1)^0,f,c
  8476  00224C  2258               	addwfc	(___fltol@f1+2)^0,f,c
  8477  00224E  2259               	addwfc	(___fltol@f1+3)^0,f,c
  8478  002250                     l5079:
  8479  002250  FFFF               	dw	65535	; assembler added errata NOP
  8480                           
  8481                           ; BSR set to: 0
  8482  002252  C056  F056         	movff	___fltol@f1,?___fltol
  8483  002256  C057  F057         	movff	___fltol@f1+1,?___fltol+1
  8484  00225A  C058  F058         	movff	___fltol@f1+2,?___fltol+2
  8485  00225E  C059  F059         	movff	___fltol@f1+3,?___fltol+3
  8486  002262                     l653:
  8487  002262  FFFF               	dw	65535	; assembler added errata NOP
  8488                           
  8489                           ; BSR set to: 0
  8490  002264  0012               	return		;funcret
  8491  002266  FFFF               	dw	65535	; errata NOP
  8492  002268                     __end_of___fltol:
  8493                           	callstack 0
  8494                           
  8495 ;; *************** function _init_PORTS *****************
  8496 ;; Defined at:
  8497 ;;		line 9 in file "init_PIC.c"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;		None
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;		None
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  1    wreg      void 
  8504 ;; Registers used:
  8505 ;;		wreg, status,2
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8511 ;;      Params:         0       0       0       0       0       0       0
  8512 ;;      Locals:         0       0       0       0       0       0       0
  8513 ;;      Temps:          0       0       0       0       0       0       0
  8514 ;;      Totals:         0       0       0       0       0       0       0
  8515 ;;Total ram usage:        0 bytes
  8516 ;; Hardware stack levels used: 1
  8517 ;; Hardware stack levels required when called: 2
  8518 ;; This function calls:
  8519 ;;		Nothing
  8520 ;; This function is called by:
  8521 ;;		_main
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text35
  8526  002E2A                     __ptext35:
  8527                           	callstack 0
  8528  002E2A                     _init_PORTS:
  8529                           	callstack 0
  8530  002E2A  FFFF               	dw	65535	; assembler added errata NOP
  8531  002E2C                     
  8532                           ;init_PIC.c: 11:     TRISB = 0x00;
  8533  002E2C  0E00               	movlw	0
  8534  002E2E  6E93               	movwf	147,c	;volatile
  8535                           
  8536                           ;init_PIC.c: 12:     TRISD = 0x00;
  8537  002E30  0E00               	movlw	0
  8538  002E32  6E95               	movwf	149,c	;volatile
  8539                           
  8540                           ;init_PIC.c: 13:     PORTB = 0x0F;
  8541  002E34  0E0F               	movlw	15
  8542  002E36  6E81               	movwf	129,c	;volatile
  8543                           
  8544                           ;init_PIC.c: 14:     PORTD = 0x0F;
  8545  002E38  0E0F               	movlw	15
  8546  002E3A  6E83               	movwf	131,c	;volatile
  8547                           
  8548                           ;init_PIC.c: 17:     LATC = 0;
  8549  002E3C  0E00               	movlw	0
  8550  002E3E  6E8B               	movwf	139,c	;volatile
  8551                           
  8552                           ;init_PIC.c: 18:     PORTC = 0;
  8553  002E40  0E00               	movlw	0
  8554  002E42  6E82               	movwf	130,c	;volatile
  8555  002E44                     
  8556                           ;init_PIC.c: 19:     TRISCbits.RC7 = 1;
  8557  002E44  8E94               	bsf	148,7,c	;volatile
  8558  002E46                     
  8559                           ;init_PIC.c: 20:     TRISCbits.RC6 = 0;
  8560  002E46  9C94               	bcf	148,6,c	;volatile
  8561  002E48  0012               	return		;funcret
  8562  002E4A  FFFF               	dw	65535	; errata NOP
  8563  002E4C                     __end_of_init_PORTS:
  8564                           	callstack 0
  8565                           
  8566 ;; *************** function _Rx_char_USART *****************
  8567 ;; Defined at:
  8568 ;;		line 632 in file "main.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;		None
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;  i               2    6[COMRAM] int 
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1    wreg      void 
  8575 ;; Registers used:
  8576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8582 ;;      Params:         0       0       0       0       0       0       0
  8583 ;;      Locals:         2       0       0       0       0       0       0
  8584 ;;      Temps:          5       0       0       0       0       0       0
  8585 ;;      Totals:         7       0       0       0       0       0       0
  8586 ;;Total ram usage:        7 bytes
  8587 ;; Hardware stack levels used: 1
  8588 ;; Hardware stack levels required when called: 1
  8589 ;; This function calls:
  8590 ;;		i2_serial_tx_char
  8591 ;; This function is called by:
  8592 ;;		Interrupt level 2
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	intcode
  8597  000008                     __pintcode:
  8598                           	callstack 0
  8599  000008                     _Rx_char_USART:
  8600                           	callstack 0
  8601  000008  FFFF               	dw	65535	; assembler added errata NOP
  8602                           
  8603                           ;incstack = 0
  8604  00000A  8277               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8605  00000C  CFD9 F005          	movff	fsr2l,??_Rx_char_USART+3
  8606  000010  CFDA F006          	movff	fsr2h,??_Rx_char_USART+4
  8607  000014                     
  8608                           ;main.c: 635:     int i=0;
  8609  000014  0E00               	movlw	0
  8610  000016  6E08               	movwf	(Rx_char_USART@i+1)^0,c
  8611  000018  0E00               	movlw	0
  8612  00001A  6E07               	movwf	Rx_char_USART@i^0,c
  8613  00001C                     i2l349:
  8614  00001C  FFFF               	dw	65535	; assembler added errata NOP
  8615  00001E  AA9E               	btfss	3998,5,c	;volatile
  8616  000020  EF14  F000         	goto	i2u383_41
  8617  000024  EF17  F000         	goto	i2u383_40
  8618  000028                     i2u383_41:
  8619  000028  FFFF               	dw	65535	; assembler added errata NOP
  8620  00002A  EF0E  F000         	goto	i2l349
  8621  00002E                     i2u383_40:
  8622  00002E  FFFF               	dw	65535	; assembler added errata NOP
  8623  000030                     
  8624                           ;main.c: 638:         input_str[i]=RCREG;
  8625  000030  0E75               	movlw	low _input_str
  8626  000032  2407               	addwf	Rx_char_USART@i^0,w,c
  8627  000034  6ED9               	movwf	fsr2l,c
  8628  000036  0E00               	movlw	high _input_str
  8629  000038  2008               	addwfc	(Rx_char_USART@i+1)^0,w,c
  8630  00003A  6EDA               	movwf	fsr2h,c
  8631  00003C  CFAE FFDF          	movff	4014,indf2	;volatile
  8632                           
  8633                           ;main.c: 640:     }while(input_str[i++]!= '\n');
  8634  000040  5007               	movf	Rx_char_USART@i^0,w,c
  8635  000042  6E02               	movwf	??_Rx_char_USART^0,c
  8636  000044  5008               	movf	(Rx_char_USART@i+1)^0,w,c
  8637  000046  6E03               	movwf	(??_Rx_char_USART+1)^0,c
  8638  000048  4A07               	infsnz	Rx_char_USART@i^0,f,c
  8639  00004A  2A08               	incf	(Rx_char_USART@i+1)^0,f,c
  8640  00004C  0E75               	movlw	low _input_str
  8641  00004E  2402               	addwf	??_Rx_char_USART^0,w,c
  8642  000050  6ED9               	movwf	fsr2l,c
  8643  000052  0E00               	movlw	high _input_str
  8644  000054  2003               	addwfc	(??_Rx_char_USART+1)^0,w,c
  8645  000056  6EDA               	movwf	fsr2h,c
  8646  000058  0E0A               	movlw	10
  8647  00005A  18DE               	xorwf	postinc2,w,c
  8648  00005C  A4D8               	btfss	status,2,c
  8649  00005E  EF33  F000         	goto	i2u384_41
  8650  000062  EF36  F000         	goto	i2u384_40
  8651  000066                     i2u384_41:
  8652  000066  FFFF               	dw	65535	; assembler added errata NOP
  8653  000068  EF0E  F000         	goto	i2l349
  8654  00006C                     i2u384_40:
  8655  00006C  FFFF               	dw	65535	; assembler added errata NOP
  8656  00006E                     
  8657                           ;main.c: 641:     serial_tx_char(input_str[0]);
  8658  00006E  5075               	movf	_input_str^0,w,c	;volatile
  8659  000070  EC36  F017         	call	i2_serial_tx_char
  8660                           
  8661                           ;main.c: 642:     serial_tx_char(input_str[1]);
  8662  000074  5076               	movf	(_input_str+1)^0,w,c	;volatile
  8663  000076  EC36  F017         	call	i2_serial_tx_char
  8664                           
  8665                           ;main.c: 643:     serial_tx_char(input_str[2]);
  8666  00007A  5077               	movf	(_input_str+2)^0,w,c	;volatile
  8667  00007C  EC36  F017         	call	i2_serial_tx_char
  8668  000080                     
  8669                           ;main.c: 645:     PIR1bits.RCIF = 0;
  8670  000080  9A9E               	bcf	158,5,c	;volatile
  8671  000082                     
  8672                           ;main.c: 646:     New_char_RX = 1;
  8673  000082  0E01               	movlw	1
  8674  000084  6E74               	movwf	_New_char_RX^0,c
  8675  000086  C006  FFDA         	movff	??_Rx_char_USART+4,fsr2h
  8676  00008A  C005  FFD9         	movff	??_Rx_char_USART+3,fsr2l
  8677  00008E  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8678  000090  0011               	retfie		f
  8679  000092  FFFF               	dw	65535	; errata NOP
  8680  000094                     __end_of_Rx_char_USART:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function i2_serial_tx_char *****************
  8684 ;; Defined at:
  8685 ;;		line 44 in file "serial_rs232.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  val             1    wreg     unsigned char 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;  val             1    0[COMRAM] unsigned char 
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8699 ;;      Params:         0       0       0       0       0       0       0
  8700 ;;      Locals:         1       0       0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0
  8702 ;;      Totals:         1       0       0       0       0       0       0
  8703 ;;Total ram usage:        1 bytes
  8704 ;; Hardware stack levels used: 1
  8705 ;; This function calls:
  8706 ;;		Nothing
  8707 ;; This function is called by:
  8708 ;;		_Rx_char_USART
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           	psect	text37
  8713  002E6C                     __ptext37:
  8714                           	callstack 0
  8715  002E6C                     i2_serial_tx_char:
  8716                           	callstack 0
  8717  002E6C  FFFF               	dw	65535	; assembler added errata NOP
  8718                           
  8719                           ;incstack = 0
  8720                           ;i2serial_tx_char@val stored from wreg
  8721  002E6E  6E01               	movwf	i2serial_tx_char@val^0,c
  8722  002E70                     
  8723                           ;serial_rs232.c: 44: void serial_tx_char(unsigned char val);serial_rs232.c: 45: {;serial
      +                          _rs232.c: 46:   TXREG=val;
  8724  002E70  C001  FFAD         	movff	i2serial_tx_char@val,4013	;volatile
  8725  002E74                     i2l48:
  8726  002E74  FFFF               	dw	65535	; assembler added errata NOP
  8727  002E76  A2AC               	btfss	172,1,c	;volatile
  8728  002E78  EF40  F017         	goto	i2u378_41
  8729  002E7C  EF43  F017         	goto	i2u378_40
  8730  002E80                     i2u378_41:
  8731  002E80  FFFF               	dw	65535	; assembler added errata NOP
  8732  002E82  EF3A  F017         	goto	i2l48
  8733  002E86                     i2u378_40:
  8734  002E86  FFFF               	dw	65535	; assembler added errata NOP
  8735  002E88  0012               	return		;funcret
  8736  002E8A  FFFF               	dw	65535	; errata NOP
  8737  002E8C                     __end_ofi2_serial_tx_char:
  8738                           	callstack 0
  8739                           
  8740                           	psect	rparam
  8741  0000                     
  8742                           	psect	temp
  8743  000077                     btemp:
  8744                           	callstack 0
  8745  000077                     	ds	1
  8746  0000                     int$flags	set	btemp
  8747  0000                     wtemp8	set	btemp+1
  8748  0000                     ttemp5	set	btemp+1
  8749  0000                     ttemp6	set	btemp+4
  8750  0000                     ttemp7	set	btemp+8
  8751                           
  8752                           	psect	idloc
  8753                           
  8754                           ;Config register IDLOC0 @ 0x200000
  8755                           ;	unspecified, using default values
  8756  200000                     	org	2097152
  8757  200000  FF                 	db	255
  8758                           
  8759                           ;Config register IDLOC1 @ 0x200001
  8760                           ;	unspecified, using default values
  8761  200001                     	org	2097153
  8762  200001  FF                 	db	255
  8763                           
  8764                           ;Config register IDLOC2 @ 0x200002
  8765                           ;	unspecified, using default values
  8766  200002                     	org	2097154
  8767  200002  FF                 	db	255
  8768                           
  8769                           ;Config register IDLOC3 @ 0x200003
  8770                           ;	unspecified, using default values
  8771  200003                     	org	2097155
  8772  200003  FF                 	db	255
  8773                           
  8774                           ;Config register IDLOC4 @ 0x200004
  8775                           ;	unspecified, using default values
  8776  200004                     	org	2097156
  8777  200004  FF                 	db	255
  8778                           
  8779                           ;Config register IDLOC5 @ 0x200005
  8780                           ;	unspecified, using default values
  8781  200005                     	org	2097157
  8782  200005  FF                 	db	255
  8783                           
  8784                           ;Config register IDLOC6 @ 0x200006
  8785                           ;	unspecified, using default values
  8786  200006                     	org	2097158
  8787  200006  FF                 	db	255
  8788                           
  8789                           ;Config register IDLOC7 @ 0x200007
  8790                           ;	unspecified, using default values
  8791  200007                     	org	2097159
  8792  200007  FF                 	db	255
  8793                           
  8794                           	psect	config
  8795                           
  8796                           ; Padding undefined space
  8797  300000                     	org	3145728
  8798  300000  FF                 	db	255
  8799                           
  8800                           ;Config register CONFIG1H @ 0x300001
  8801                           ;	Oscillator Selection bits
  8802                           ;	OSC = XT, XT oscillator
  8803                           ;	Oscillator System Clock Switch Enable bit
  8804                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  8805  300001                     	org	3145729
  8806  300001  21                 	db	33
  8807                           
  8808                           ;Config register CONFIG2L @ 0x300002
  8809                           ;	Power-up Timer Enable bit
  8810                           ;	PWRT = OFF, PWRT disabled
  8811                           ;	Brown-out Reset Enable bit
  8812                           ;	BOR = OFF, Brown-out Reset disabled
  8813                           ;	Brown-out Reset Voltage bits
  8814                           ;	BORV = 20, VBOR set to 2.0V
  8815  300002                     	org	3145730
  8816  300002  0D                 	db	13
  8817                           
  8818                           ;Config register CONFIG2H @ 0x300003
  8819                           ;	Watchdog Timer Enable bit
  8820                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8821                           ;	Watchdog Timer Postscale Select bits
  8822                           ;	WDTPS = 128, 1:128
  8823  300003                     	org	3145731
  8824  300003  0E                 	db	14
  8825                           
  8826                           ; Padding undefined space
  8827  300004                     	org	3145732
  8828  300004  FF                 	db	255
  8829                           
  8830                           ;Config register CONFIG3H @ 0x300005
  8831                           ;	CCP2 Mux bit
  8832                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  8833  300005                     	org	3145733
  8834  300005  00                 	db	0
  8835                           
  8836                           ;Config register CONFIG4L @ 0x300006
  8837                           ;	Stack Full/Underflow Reset Enable bit
  8838                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  8839                           ;	Low Voltage ICSP Enable bit
  8840                           ;	LVP = OFF, Low Voltage ICSP disabled
  8841                           ;	Background Debugger Enable bit
  8842                           ;	DEBUG = 0x1, unprogrammed default
  8843  300006                     	org	3145734
  8844  300006  80                 	db	128
  8845                           
  8846                           ; Padding undefined space
  8847  300007                     	org	3145735
  8848  300007  FF                 	db	255
  8849                           
  8850                           ;Config register CONFIG5L @ 0x300008
  8851                           ;	Code Protection bit
  8852                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  8853                           ;	Code Protection bit
  8854                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  8855                           ;	Code Protection bit
  8856                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  8857                           ;	Code Protection bit
  8858                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  8859  300008                     	org	3145736
  8860  300008  0F                 	db	15
  8861                           
  8862                           ;Config register CONFIG5H @ 0x300009
  8863                           ;	Boot Block Code Protection bit
  8864                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  8865                           ;	Data EEPROM Code Protection bit
  8866                           ;	CPD = OFF, Data EEPROM not code protected
  8867  300009                     	org	3145737
  8868  300009  C0                 	db	192
  8869                           
  8870                           ;Config register CONFIG6L @ 0x30000A
  8871                           ;	Write Protection bit
  8872                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  8873                           ;	Write Protection bit
  8874                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  8875                           ;	Write Protection bit
  8876                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  8877                           ;	Write Protection bit
  8878                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  8879  30000A                     	org	3145738
  8880  30000A  0F                 	db	15
  8881                           
  8882                           ;Config register CONFIG6H @ 0x30000B
  8883                           ;	Configuration Register Write Protection bit
  8884                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  8885                           ;	Boot Block Write Protection bit
  8886                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  8887                           ;	Data EEPROM Write Protection bit
  8888                           ;	WRTD = OFF, Data EEPROM not write protected
  8889  30000B                     	org	3145739
  8890  30000B  E0                 	db	224
  8891                           
  8892                           ;Config register CONFIG7L @ 0x30000C
  8893                           ;	Table Read Protection bit
  8894                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  8895                           ;	Table Read Protection bit
  8896                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  8897                           ;	Table Read Protection bit
  8898                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  8899                           ;	Table Read Protection bit
  8900                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  8901  30000C                     	org	3145740
  8902  30000C  0F                 	db	15
  8903                           
  8904                           ;Config register CONFIG7H @ 0x30000D
  8905                           ;	Boot Block Table Read Protection bit
  8906                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  8907  30000D                     	org	3145741
  8908  30000D  40                 	db	64
  8909                           tosu	equ	0xFFF
  8910                           tosh	equ	0xFFE
  8911                           tosl	equ	0xFFD
  8912                           stkptr	equ	0xFFC
  8913                           pclatu	equ	0xFFB
  8914                           pclath	equ	0xFFA
  8915                           pcl	equ	0xFF9
  8916                           tblptru	equ	0xFF8
  8917                           tblptrh	equ	0xFF7
  8918                           tblptrl	equ	0xFF6
  8919                           tablat	equ	0xFF5
  8920                           prodh	equ	0xFF4
  8921                           prodl	equ	0xFF3
  8922                           indf0	equ	0xFEF
  8923                           postinc0	equ	0xFEE
  8924                           postdec0	equ	0xFED
  8925                           preinc0	equ	0xFEC
  8926                           plusw0	equ	0xFEB
  8927                           fsr0h	equ	0xFEA
  8928                           fsr0l	equ	0xFE9
  8929                           wreg	equ	0xFE8
  8930                           indf1	equ	0xFE7
  8931                           postinc1	equ	0xFE6
  8932                           postdec1	equ	0xFE5
  8933                           preinc1	equ	0xFE4
  8934                           plusw1	equ	0xFE3
  8935                           fsr1h	equ	0xFE2
  8936                           fsr1l	equ	0xFE1
  8937                           bsr	equ	0xFE0
  8938                           indf2	equ	0xFDF
  8939                           postinc2	equ	0xFDE
  8940                           postdec2	equ	0xFDD
  8941                           preinc2	equ	0xFDC
  8942                           plusw2	equ	0xFDB
  8943                           fsr2h	equ	0xFDA
  8944                           fsr2l	equ	0xFD9
  8945                           status	equ	0xFD8

Data Sizes:
    Strings     377
    Constant    86
    Data        18
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     90     118
    BANK0           128     77     115
    BANK1           256      0      30
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(BANK0[4]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strncat@s	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_to_sequence(COMRAM[2]), 

    strncat@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strncat@a	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 2
		 -> input_str(COMRAM[2]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 83
		 -> STR_9(CODE[67]), STR_8(CODE[60]), STR_7(CODE[29]), STR_6(CODE[28]), 
		 -> STR_5(CODE[28]), STR_4(CODE[28]), STR_3(CODE[27]), STR_2(CODE[27]), 
		 -> STR_1(CODE[83]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(BANK0[4]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(BANK0[4]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 


Critical Paths under _main in COMRAM

    _main->_start_up_menu
    _start_up_menu->_add_component
    _remove_component->_pick_and_place
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _change_sequence->_pick_and_place
    _add_component->_pick_and_place
    _strncat->_strlen
    _print_string->_serial_tx_char
    _pick_and_place->___flge
    ___fldiv->___xxtofl
    _Z_axis_and_Tweezer->_Z_axis
    _Z_axis->_ms_delay
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    _Rx_char_USART->i2_serial_tx_char

Critical Paths under _main in BANK0

    _main->_start_up_menu
    _start_up_menu->_change_sequence
    _init_USART->___fltol

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  104525
                                             76 BANK0      1     1      0
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                     _serial_tx_char
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                        3     3      0   89953
                                             89 COMRAM     1     1      0
                                             74 BANK0      2     2      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
                     _serial_tx_char
 ---------------------------------------------------------------------------------
 (2) _remove_component                                    11    11      0   23871
                                             82 COMRAM     4     4      0
                                              0 BANK0      7     7      0
                            _memmove
                     _pick_and_place
                       _print_string
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4    1197
                                             22 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     524
                                             12 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     791
                                             12 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                     77    77      0   20682
                                             82 COMRAM     3     3      0
                                              0 BANK0     74    74      0
                     _pick_and_place
                     _serial_tx_char
 ---------------------------------------------------------------------------------
 (2) _add_component                                        7     7      0   24115
                                             82 COMRAM     7     7      0
                               _atoi
                     _pick_and_place
                       _print_string
                            _strncat
 ---------------------------------------------------------------------------------
 (3) _strncat                                              8     2      6     912
                                             12 COMRAM     6     0      6
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     400
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2     971
                                              9 COMRAM     6     4      2
                     _serial_tx_char
 ---------------------------------------------------------------------------------
 (2) _serial_tx_char                                       1     1      0      31
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _pick_and_place                                      23    23      0   20249
                                             59 COMRAM    23    23      0
                            _Twister
                             _X_axis
                             _Y_axis
                 _Z_axis_and_Tweezer
                            ___fldiv
                             ___flge
                           ___xxtofl
                             _direct
 ---------------------------------------------------------------------------------
 (4) _direct                                               5     1      4    1142
                                              8 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2183
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _Z_axis_and_Tweezer                                   4     4      0    3754
                                             15 COMRAM     4     4      0
                             _Z_axis
 ---------------------------------------------------------------------------------
 (5) _Z_axis                                               1     1      0    3618
                                             14 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _Y_axis                                               1     1      0    3618
                                             14 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _X_axis                                               1     1      0    3618
                                             14 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _Twister                                              1     1      0    3618
                                             14 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (6) _ms_delay                                             6     4      2    3556
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    1875
                                             15 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     259
                                              8 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     191
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   14504
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   14077
                                             59 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4907
                                             24 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    4522
                                              8 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     245
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2513
                                              8 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     986
                                             47 COMRAM    12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             85 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Rx_char_USART                                        7     7      0      67
                                              1 COMRAM     7     7      0
                   i2_serial_tx_char
 ---------------------------------------------------------------------------------
 (8) i2_serial_tx_char                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _serial_tx_char
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _pick_and_place
         _Twister
           _ms_delay
         _X_axis
           _ms_delay
         _Y_axis
           _ms_delay
         _Z_axis_and_Tweezer
           _Z_axis
             _ms_delay
         ___fldiv
         ___flge
         ___xxtofl
         _direct
       _print_string
         _serial_tx_char
       _strncat
         _strlen
     _change_sequence
       _pick_and_place
       _serial_tx_char
     _pick_and_place
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _pick_and_place
       _print_string
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen
     _serial_tx_char

 _Rx_char_USART (ROOT)
   i2_serial_tx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      1E       7       11.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4D      73       5       89.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5A      76       1       93.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     107      15        0.0%
DATA                 0      0     107       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun  7 16:26:41 2021

                                                                main@RX_Char 00CC  
                                                               ___fldiv@aexp 002F  
                                                               ___fldiv@bexp 002E  
                                                               ___fldiv@sign 0027  
                                                                         l23 2E48  
                                                                         l26 2EA4  
                                                                         l51 2E68  
                                                                         l45 2DC2  
                                                                         l48 2E54  
                                                        ___wmul@multiplicand 000B  
                                                     __size_of_start_up_menu 00CC  
                                                                        l210 1FD0  
                                                                        l240 212C  
                                                                        l314 0AEC  
                                                                        l226 1C7E  
                                                                        l251 2700  
                                                                        l307 0A56  
                                                                        l261 2558  
                                                                        l246 2B76  
                                                                        l343 2AA6  
                                                                        l335 2D80  
                                                                        l319 0BDC  
                                                                        l256 262C  
                                                                        l280 0772  
                                                                        l192 27CE  
                                                                        l274 2C32  
                                                                        l266 2880  
                                                                        l290 082E  
                                                                        l356 2E26  
                                                                        l621 233C  
                                                                        l630 2D42  
                                                                        l297 08C4  
                                                                        l626 238A  
                                                                        l653 2262  
                                                                        l901 0424  
                                                                        l910 0528  
                                                                        l911 0510  
                                                                        l940 12C8  
                                                                        l926 2C7C  
                                                                        l951 13AE  
                                                                        l943 1282  
                                                                        l952 1396  
                                                                        l970 0CCC  
                                                                        l938 14B0  
                                                                        l980 0F50  
                                                                        l884 02E0  
                                                                        l893 063A  
                                                                        l885 02CA  
                                                                        l949 131E  
                                                                        l974 107E  
                                                                        l886 0280  
                                                                        l977 0ED8  
                                                                        l987 1036  
                                                                        l979 0F68  
                                                          ??_init_interrupts 0009  
                                                                        wreg 000FE8  
                                                               ___flmul@aexp 0016  
                                                               ___flmul@bexp 001B  
                                                               ___flmul@sign 0015  
                                                               ___flmul@temp 0020  
                                                               ___flmul@prod 001C  
                                                               ___fltol@exp1 0085  
                                                                       l1011 18FC  
                                                                       l1014 1A8E  
                                                                       l1103 2CBE  
                                                                       l1120 2DFC  
                                                                       l1025 1A14  
                                                                       l1113 29B6  
                                                                       l1018 19A8  
                                                                       l1061 2D00  
                                                                       l1126 2A36  
                                                                       l1055 1E30  
                                                                       l1090 1896  
                                                                       l1058 1E3A  
                                                                       l1082 2484  
                                                                       l1069 2BD6  
                                                                       l4001 2596  
                                                                       l4011 25BA  
                                                                       l4003 259A  
                                                                       l4021 25FC  
                                                                       l4005 25A6  
                                                                       l4013 25C6  
                                                                       l4111 00D0  
                                                                       l4103 009A  
                                                                       l4031 27EA  
                                                                       l4023 2600  
                                                                       l4015 25DC  
                                                                       l4007 25AA  
                                                                       l4201 02C8  
                                                                       l4121 0112  
                                                                       l4113 00E4  
                                                                       l4105 00A6  
                                                                       l4041 280E  
                                                                       l4033 27EE  
                                                                       l4025 2610  
                                                                       l4017 25E0  
                                                                       l4009 25B6  
                                                                       l5001 1C38  
                                                                       l4211 032E  
                                                                       l4203 02F4  
                                                                       l4131 014C  
                                                                       l4123 011A  
                                                                       l4115 00F4  
                                                                       l4107 00B8  
                                                                       l4051 2844  
                                                                       l4043 281A  
                                                                       l4035 27FA  
                                                                       l4027 261C  
                                                                       l4019 25EC  
                                                                       l5003 1C3C  
                                                                       l5011 1FFC  
                                                                       l4301 0628  
                                                                       l4221 0378  
                                                                       l4213 0340  
                                                                       l4205 0308  
                                                                       l4141 018C  
                                                                       l4133 014E  
                                                                       l4125 0130  
                                                                       l4117 00F8  
                                                                       l4109 00BA  
                                                                       l5101 2DBA  
                                                                       l4053 2850  
                                                                       l4045 281E  
                                                                       l4037 27FE  
                                                                       l4029 27D6  
                                                                       l4061 2D48  
                                                                       l5005 1C68  
                                                                       l5021 2068  
                                                                       l5013 2000  
                                                                       l4231 03EC  
                                                                       l4223 037A  
                                                                       l4215 0352  
                                                                       l4151 01D4  
                                                                       l4135 0164  
                                                                       l4143 0194  
                                                                       l4127 0132  
                                                                       l4119 0100  
                                                                       l5103 2DBC  
                                                                       l4055 2860  
                                                                       l4039 280A  
                                                                       l4047 282A  
                                                                       l4311 10A6  
                                                                       l4063 2D6A  
                                                                       l5031 20D0  
                                                                       l5023 206C  
                                                                       l5015 201A  
                                                                       l5007 1FD6  
                                                                       l5111 2714  
                                                                       l5041 214E  
                                                                       l4241 0454  
                                                                       l4233 03EE  
                                                                       l4225 0386  
                                                                       l4217 035E  
                                                                       l4209 031C  
                                                                       l4161 01EA  
                                                                       l4153 01DA  
                                                                       l4145 01A6  
                                                                       l4137 0178  
                                                                       l4129 013A  
                                                                       l5105 2DBE  
                                                                       l4057 2864  
                                                                       l4049 2840  
                                                                       l4081 2A4E  
                                                                       l4073 2A3E  
                                                                       l4401 1344  
                                                                       l4313 10BC  
                                                                       l4321 10EC  
                                                                       l4305 1086  
                                                                       l5033 20E4  
                                                                       l5017 2032  
                                                                       l5009 1FE6  
                                                                       l5025 20A6  
                                                                       l5121 2750  
                                                                       l5113 272A  
                                                                       l5051 21A6  
                                                                       l4251 0488  
                                                                       l4235 0402  
                                                                       l4219 0364  
                                                                       l4227 038C  
                                                                       l4171 01FE  
                                                                       l4163 01EE  
                                                                       l4155 01DE  
                                                                       l4147 01BE  
                                                                       l4139 0188  
                                                                       l5107 2DC0  
                                                                       l4059 2874  
                                                                       l4091 2A7A  
                                                                       l4083 2A52  
                                                                       l4411 13C4  
                                                                       l4403 1348  
                                                                       l4331 1120  
                                                                       l4323 10FE  
                                                                       l4315 10D0  
                                                                       l4307 1092  
                                                                       l5035 20EA  
                                                                       l5027 20BC  
                                                                       l5019 205A  
                                                                       l5123 276A  
                                                                       l5131 2788  
                                                                       l5115 272E  
                                                                       l5061 21D8  
                                                                       l5053 21AA  
                                                                       l5045 2164  
                                                                       l4253 049C  
                                                                       l4245 0468  
                                                                       l4261 04C2  
                                                                       l4229 03B8  
                                                                       l4237 0412  
                                                                       l4173 0202  
                                                                       l4165 01F2  
                                                                       l4157 01E2  
                                                                       l4149 01D0  
                                                                       l4181 0212  
                                                                       l4093 2A82  
                                                                       l4085 2A72  
                                                                       l4421 1430  
                                                                       l4413 13D0  
                                                                       l4405 135A  
                                                                       l4333 1136  
                                                                       l4341 1166  
                                                                       l4325 1106  
                                                                       l4317 10E0  
                                                                       l4309 10A4  
                                                                       l4501 1A54  
                                                                       l4069 2D76  
                                                                       l5029 20C4  
                                                                       l5037 2116  
                                                                       l5125 2774  
                                                                       l5133 27C8  
                                                                       l5117 2734  
                                                                       l5109 2708  
                                                                       l5141 2886  
                                                                       l5071 2208  
                                                                       l5063 21E4  
                                                                       l5055 21BC  
                                                                       l5047 2194  
                                                                       l5039 2132  
                                                                       l4255 04A4  
                                                                       l4247 0474  
                                                                       l4239 0440  
                                                                       l4263 04D4  
                                                                       l4191 0294  
                                                                       l4183 0218  
                                                                       l4175 0206  
                                                                       l4167 01F6  
                                                                       l4159 01E6  
                                                                       l4511 2B7A  
                                                                       l4095 2A86  
                                                                       l4079 2A46  
                                                                       l4431 149A  
                                                                       l4423 1446  
                                                                       l4415 13E2  
                                                                       l4407 138C  
                                                                       l4351 11B2  
                                                                       l4343 1178  
                                                                       l4335 114A  
                                                                       l4327 110C  
                                                                       l4319 10E4  
                                                                       l4503 1A68  
                                                                       l5127 277E  
                                                                       l5119 273C  
                                                                       l5151 289A  
                                                                       l5143 288C  
                                                                       l5073 2216  
                                                                       l5065 21EE  
                                                                       l5049 2196  
                                                                       l4273 053E  
                                                                       l4281 059C  
                                                                       l4265 04DA  
                                                                       l4257 04AA  
                                                                       l4249 0486  
                                                                       l4193 02A0  
                                                                       l4185 0246  
                                                                       l4177 020A  
                                                                       l4169 01FA  
                                                                       l4097 2E02  
                                                                       l4513 2B80  
                                                                       l4433 14A0  
                                                                       l4425 1466  
                                                                       l4417 140C  
                                                                       l4345 1194  
                                                                       l4337 115A  
                                                                       l4329 111E  
                                                                       l4505 1A7A  
                                                                       l4601 0998  
                                                                       l5161 28C8  
                                                                       l5153 28B0  
                                                                       l5145 2890  
                                                                       l5083 2E2C  
                                                                       l5075 222A  
                                                                       l4451 22F0  
                                                                       l4443 226A  
                                                                       l4291 0602  
                                                                       l4283 05B2  
                                                                       l4275 054A  
                                                                       l4267 04EC  
                                                                       l4259 04C0  
                                                                       l4195 02A6  
                                                                       l4187 0268  
                                                                       l4179 020E  
                                                                       l5091 2E9E  
                                                                       l4099 2E1E  
                                                                       l4523 2CC2  
                                                                       l4515 2B98  
                                                                       l4435 14A4  
                                                                       l4427 1482  
                                                                       l4419 1410  
                                                                       l4371 123C  
                                                                       l4363 11F0  
                                                                       l4347 11A4  
                                                                       l4355 11C6  
                                                                       l4339 115E  
                                                                       l4507 1A7C  
                                                                       l4611 0A28  
                                                                       l4603 09E4  
                                                                       l4531 29CE  
                                                                       l5171 28E6  
                                                                       l5163 28CE  
                                                                       l5155 28B4  
                                                                       l5147 2894  
                                                                       l5139 2886  
                                                                       l5085 2E44  
                                                                       l5077 2240  
                                                                       l4461 2386  
                                                                       l4453 2304  
                                                                       l4445 229C  
                                                                       l4293 0608  
                                                                       l4285 05C4  
                                                                       l4277 055C  
                                                                       l4269 0506  
                                                                       l4197 02BA  
                                                                       l4189 0278  
                                                                       l5093 2D88  
                                                                       l4517 2BCA  
                                                                       l5261 1D52  
                                                                       l3901 2C16  
                                                                       l4429 1488  
                                                                       l4381 128E  
                                                                       l4373 1244  
                                                                       l4365 120C  
                                                                       l4357 11DC  
                                                                       l4349 11AC  
                                                                       l4621 0A92  
                                                                       l4613 0A48  
                                                                       l4605 09F0  
                                                                       l4701 29A4  
                                                                       l4533 29FE  
                                                                       l5181 2904  
                                                                       l5173 28EC  
                                                                       l5165 28D4  
                                                                       l5157 28BC  
                                                                       l5149 2896  
                                                                       l5087 2E46  
                                                                       l5079 2250  
                                                                       l4455 2316  
                                                                       l4447 22AC  
                                                                       l4295 060C  
                                                                       l4287 05EA  
                                                                       l4279 059A  
                                                                       l4199 02BC  
                                                                       l5095 2DB4  
                                                                       l4519 2BCE  
                                                                       l3911 24B6  
                                                                       l3903 248E  
                                                                       l4391 12F8  
                                                                       l4383 12B2  
                                                                       l4375 125A  
                                                                       l4367 121C  
                                                                       l4359 11DC  
                                                                       l4471 190E  
                                                                       l4631 0B24  
                                                                       l4623 0ABE  
                                                                       l4615 0A7A  
                                                                       l4607 09F8  
                                                                       l4551 0644  
                                                                       l4543 2B16  
                                                                       l4703 29B2  
                                                                       l4711 2392  
                                                                       l4527 29BC  
                                                                       l5191 2922  
                                                                       l5183 290A  
                                                                       l5175 28F2  
                                                                       l5167 28DA  
                                                                       l5159 28C2  
                                                                       l4457 232A  
                                                                       l4449 22E0  
                                                                       l4801 0E00  
                                                                       l4297 0614  
                                                                       l4289 05EE  
                                                                       l5097 2DB6  
                                                                       l3921 24E2  
                                                                       l3913 24C2  
                                                                       l3905 24A2  
                                                                       l4393 12FE  
                                                                       l4385 12B4  
                                                                       l4377 126E  
                                                                       l4369 122C  
                                                                       l4481 1956  
                                                                       l4473 192A  
                                                                       l4465 18A0  
                                                                       l4641 0BD4  
                                                                       l4633 0B28  
                                                                       l4625 0ADE  
                                                                       l4617 0A86  
                                                                       l4609 09FC  
                                                                       l4561 06F2  
                                                                       l4553 065A  
                                                                       l4545 2B22  
                                                                       l4713 23BC  
                                                                       l4721 2434  
                                                                       l4537 2A0E  
                                                                       l4529 29C4  
                                                                       l5193 2928  
                                                                       l5185 2910  
                                                                       l5177 28F8  
                                                                       l5169 28E0  
                                                                       l4459 2380  
                                                                       l4811 0E9A  
                                                                       l4803 0E0C  
                                                                       l4731 0BE2  
                                                                       l4299 0626  
                                                                       l5099 2DB8  
                                                                       l4651 1CC2  
                                                                       l4643 1C84  
                                                                       l3931 2518  
                                                                       l3923 24E6  
                                                                       l3915 24C6  
                                                                       l3907 24A6  
                                                                       l4395 130A  
                                                                       l4387 12C4  
                                                                       l4379 1280  
                                                                       l4491 19EE  
                                                                       l4483 198E  
                                                                       l4467 18B4  
                                                                       l4635 0BC0  
                                                                       l4627 0B10  
                                                                       l4619 0A8E  
                                                                       l4571 07C8  
                                                                       l4563 0726  
                                                                       l4555 068E  
                                                                       l4547 2B42  
                                                                       l4723 244C  
                                                                       l4715 23E2  
                                                                       l4539 2A2E  
                                                                       l4707 2DC8  
                                                                       l5259 27A0  
                                                                       l5187 2916  
                                                                       l5179 28FE  
                                                                       l4821 0EFE  
                                                                       l4813 0EB8  
                                                                       l4805 0E28  
                                                                       l4741 0C2C  
                                                                       l4733 0BEE  
                                                                       l4901 181A  
                                                                       l4661 1D20  
                                                                       l4653 1CFA  
                                                                       l4645 1C98  
                                                                       l3933 2528  
                                                                       l3917 24D2  
                                                                       l3909 24B2  
                                                                       l3925 24F2  
                                                                       l4397 131C  
                                                                       l4389 12DE  
                                                                       l4493 1A02  
                                                                       l4485 1992  
                                                                       l4477 193E  
                                                                       l4469 18C6  
                                                                       l4637 0BC4  
                                                                       l4629 0B1C  
                                                                       l4581 0852  
                                                                       l4573 07D0  
                                                                       l4565 073E  
                                                                       l4557 06A6  
                                                                       l3941 2E50  
                                                                       l4549 2B46  
                                                                       l4725 2462  
                                                                       l4717 23F2  
                                                                       l5189 291C  
                                                                       l4831 0F7E  
                                                                       l4823 0F02  
                                                                       l4815 0EC4  
                                                                       l4807 0E52  
                                                                       l4751 0C64  
                                                                       l4743 0C3C  
                                                                       l4735 0C00  
                                                                       l4903 1860  
                                                                       l4671 1DA4  
                                                                       l4663 1D2A  
                                                                       l4655 1CFE  
                                                                       l4647 1C9E  
                                                                       l3935 252C  
                                                                       l3927 2508  
                                                                       l3919 24D6  
                                                                       l4399 1330  
                                                                       l4495 1A28  
                                                                       l4487 199E  
                                                                       l4479 1948  
                                                                       l4639 0BCC  
                                                                       l4591 08B6  
                                                                       l4583 085E  
                                                                       l4575 07D4  
                                                                       l4559 06DA  
                                                                       l4567 0772  
                                                                       l3943 2C82  
                                                                       l4911 1E5C  
                                                                       l4727 2466  
                                                                       l4719 2414  
                                                                       l4841 0FEA  
                                                                       l4833 0F8A  
                                                                       l4825 0F14  
                                                                       l4817 0ED6  
                                                                       l4809 0E8C  
                                                                       l4761 0CB2  
                                                                       l4753 0C76  
                                                                       l4745 0C44  
                                                                       l4737 0C02  
                                                                       l4905 1884  
                                                                       l4665 1D34  
                                                                       l4649 1CA4  
                                                                       l3961 265E  
                                                                       l3953 2636  
                                                                       l3937 253C  
                                                                       l3929 250C  
                                                                       l4497 1A2A  
                                                                       l4489 19E0  
                                                                       l4593 08E8  
                                                                       l4585 0866  
                                                                       l4577 0800  
                                                                       l4569 07BC  
                                                                       l3945 2C8E  
                                                                       l4921 1EC6  
                                                                       l4913 1E6A  
                                                                       l4729 246A  
                                                                       l4851 105E  
                                                                       l4843 0FFE  
                                                                       l4835 0F9C  
                                                                       l4827 0F46  
                                                                       l4819 0EEA  
                                                                       l4771 0D0A  
                                                                       l4763 0CBA  
                                                                       l4755 0C78  
                                                                       l4747 0C56  
                                                                       l4739 0C18  
                                                                       l4675 1DE8  
                                                                       l4667 1D6A  
                                                                       l4659 1D06  
                                                                       l3971 268A  
                                                                       l3963 266A  
                                                                       l3955 264A  
                                                                       l3939 2548  
                                                                       l4499 1A30  
                                                                       l4595 08F4  
                                                                       l4587 086A  
                                                                       l4579 0820  
                                                                       l3947 2C94  
                                                                       l4691 2956  
                                                                       l4931 1F34  
                                                                       l4923 1EDA  
                                                                       l4915 1E8E  
                                                                       l4853 1060  
                                                                       l4845 101E  
                                                                       l4837 0FC6  
                                                                       l4781 0D5C  
                                                                       l4773 0D18  
                                                                       l4765 0CE2  
                                                                       l4757 0C8E  
                                                                       l4749 0C5E  
                                                                       l4861 2C38  
                                                                       l4677 1DFE  
                                                                       l3981 26C0  
                                                                       l3973 268E  
                                                                       l3965 266E  
                                                                       l3957 264E  
                                                                       l4597 08FC  
                                                                       l4589 0896  
                                                                       l3949 2CB2  
                                                                       l4693 296A  
                                                                       l4685 2936  
                                                                       l4941 1F8E  
                                                                       l4933 1F38  
                                                                       l4925 1EE0  
                                                                       l4917 1EA0  
                                                                       l4909 1E42  
                                                                       l4847 103C  
                                                                       l4855 1068  
                                                                       l4839 0FCA  
                                                                       l4791 0D9E  
                                                                       l4783 0D68  
                                                                       l4775 0D22  
                                                                       l4767 0CF4  
                                                                       l4759 0CA2  
                                                                       l4871 2D30  
                                                                       l4863 2C48  
                                                                       l4679 1E14  
                                                                       l3895 2BF2  
                                                                       l3887 2BDC  
                                                                       l3983 26D0  
                                                                       l3967 267A  
                                                                       l3959 265A  
                                                                       l3975 269A  
                                                                       l3991 2562  
                                                                       l4599 0900  
                                                                       l4695 296E  
                                                                       l4687 2936  
                                                                       l4951 1ACA  
                                                                       l4935 1F6A  
                                                                       l4943 1FBA  
                                                                       l4927 1F0E  
                                                                       l4919 1EBE  
                                                                       l4857 106E  
                                                                       l4849 104C  
                                                                       l4793 0DAA  
                                                                       l4785 0D74  
                                                                       l4777 0D38  
                                                                       l4881 153C  
                                                                       l3897 2BF8  
                                                                       l3889 2BE8  
                                                                       l3985 26D4  
                                                                       l3977 26B0  
                                                                       l3969 267E  
                                                                       l3993 2576  
                                                                       l4689 294E  
                                                                       l4697 2972  
                                                                       l4961 1B08  
                                                                       l4953 1ACE  
                                                                       l4945 1A96  
                                                                       l4937 1F74  
                                                                       l4929 1F16  
                                                                       l4795 0DBA  
                                                                       l4787 0D82  
                                                                       l4779 0D44  
                                                                       l4867 2D06  
                                                                       l4891 1600  
                                                                       l4883 1582  
                                                                       l4875 14B8  
                                                                       l3899 2C12  
                                                                       l3987 26E4  
                                                                       l3979 26B4  
                                                                       l3995 257A  
                                                                       l4699 298A  
                                                                       l4971 1B50  
                                                                       l4963 1B16  
                                                                       l4955 1ADC  
                                                                       l4947 1AA2  
                                                                       l4939 1F88  
                                                                       l4797 0DD4  
                                                                       l4789 0D8E  
                                                                       l4869 2D20  
                                                                       l4893 16D4  
                                                                       l4885 15A6  
                                                                       l4877 14D8  
                                                                       l3989 26F0  
                                                                       l3997 2586  
                                                                       l4981 1B9E  
                                                                       l4973 1B64  
                                                                       l4965 1B2A  
                                                                       l4957 1AF0  
                                                                       l4949 1AB6  
                                                                       l4799 0DE4  
                                                                       l4895 1740  
                                                                       l4887 15C8  
                                                                       l4879 1528  
                                                                       l3999 258A  
                                                                       l4991 1BEC  
                                                                       l4983 1BB2  
                                                                       l4975 1B78  
                                                                       l4967 1B3E  
                                                                       l4959 1B04  
                                                                       l4897 1778  
                                                                       l4993 1BF0  
                                                                       l4985 1BB6  
                                                                       l4977 1B7C  
                                                                       l4969 1B42  
                                                                       l4899 17E4  
                                                                       l4995 1BFA  
                                                                       l4987 1BC4  
                                                                       l4979 1B8A  
                                                                       l4997 1C1A  
                                                                       l4989 1BD8  
                                                                       l4999 1C24  
                                                       change_sequence@F3126 7E2F  
                                                                       STR_1 7E85  
                                                                       STR_2 7FC8  
                                                                       STR_3 7FE3  
                                                                       STR_4 7FAC  
                                                                       STR_5 7F74  
                                                                       STR_6 7F90  
                                                                       STR_7 7F57  
                                                                       STR_8 7F1B  
                                                                       STR_9 7ED8  
                                                                       _LATC 000F8B  
                                                                       u4000 00B6  
                                                                       u4001 00B0  
                                                                       u4010 00CE  
                                                                       u4011 00C8  
                                                                       u4100 0260  
                                                                       u4020 00E2  
                                                                       u4101 0258  
                                                                       u4021 00DC  
                                                                       u4110 0264  
                                                                       u4030 012E  
                                                                       u4031 0128  
                                                                       u4200 03B6  
                                                                       u4120 0292  
                                                                       u4040 014A  
                                                                       u5000 1D1A  
                                                                       u4201 03B0  
                                                                       u4121 028C  
                                                                       u4041 0144  
                                                                       u5001 1D14  
                                                                       u4210 0400  
                                                                       u4130 02B8  
                                                                       u4050 0162  
                                                                       u5010 1DDE  
                                                                       u4211 03FA  
                                                                       u4131 02B2  
                                                                       u4051 015C  
                                                                       u5011 1DD6  
                                                                       u4300 0522  
                                                                       u4220 043E  
                                                                       u4140 02E0  
                                                                       u4060 0176  
                                                                       u5020 1DE2  
                                                                       u5100 244A  
                                                                       u4301 051C  
                                                                       u4221 0438  
                                                                       u4141 02DA  
                                                                       u4061 0170  
                                                                       u5101 2444  
                                                                       u4310 053C  
                                                                       u4230 0452  
                                                                       u4150 02F2  
                                                                       u4070 01BC  
                                                                       u5030 1DFC  
                                                                       u5110 2484  
                                                                       u4311 0536  
                                                                       u4231 044C  
                                                                       u4151 02EC  
                                                                       u4071 01B6  
                                                                       u5031 1DF6  
                                                                       u5111 247E  
                                                                       u5200 0E74  
                                                                       u5120 0BFE  
                                                                       u4320 055A  
                                                                       u4240 0484  
                                                                       u4160 0306  
                                                                       u4080 01CE  
                                                                       u5040 1E12  
                                                                       u4400 10BA  
                                                                       u5121 0BF8  
                                                                       u4321 0554  
                                                                       u4241 047E  
                                                                       u4161 0300  
                                                                       u4081 01C8  
                                                                       u5041 1E0C  
                                                                       u4401 10B4  
                                                                       u5210 0ED4  
                                                                       u5130 0C16  
                                                                       u4330 0598  
                                                                       u4250 049A  
                                                                       u4170 033E  
                                                                       u4090 0244  
                                                                       u4410 10CE  
                                                                       u5050 2988  
                                                                       u5211 0ECE  
                                                                       u5131 0C10  
                                                                       u4331 0592  
                                                                       u4251 0494  
                                                                       u4171 0338  
                                                                       u4091 023E  
                                                                       u4411 10C8  
                                                                       u5051 2982  
                                                                       u5300 105C  
                                                                       u5220 0EFC  
                                                                       u5140 0C2A  
                                                                       u4340 05B0  
                                                                       u4260 04BE  
                                                                       u4180 0350  
                                                                       u4500 12DC  
                                                                       u4420 111C  
                                                                       u5060 29A4  
                                                                       u5301 1056  
                                                                       u5221 0EF6  
                                                                       u5205 0E68  
                                                                       u5141 0C24  
                                                                       u4341 05AA  
                                                                       u4261 04B8  
                                                                       u4181 034A  
                                                                       u4501 12D6  
                                                                       u4421 1116  
                                                                       u5061 299E  
                                                                       u5230 0F12  
                                                                       u5150 0C74  
                                                                       u5310 2D1E  
                                                                       u4350 05C4  
                                                                       u4270 04D4  
                                                                       u4190 0376  
                                                                       u4510 12F6  
                                                                       u4430 1134  
                                                                       u5070 23BA  
                                                                       u5231 0F0C  
                                                                       u5151 0C6E  
                                                                       u5311 2D18  
                                                                       u4351 05BE  
                                                                       u4271 04CE  
                                                                       u4191 0370  
                                                                       u4511 12F0  
                                                                       u4431 112E  
                                                                       u5071 23B4  
                                                                       u5240 0F44  
                                                                       u5160 0C8C  
                                                                       u4360 05E8  
                                                                       u4280 04EA  
                                                                       u5400 185E  
                                                                       u5320 14FA  
                                                                       u4600 1464  
                                                                       u4520 131A  
                                                                       u4440 1148  
                                                                       u5080 23E0  
                                                                       u5241 0F3E  
                                                                       u5161 0C86  
                                                                       u4361 05E2  
                                                                       u4281 04E4  
                                                                       u5401 1858  
                                                                       u4601 145E  
                                                                       u4521 1314  
                                                                       u4441 1142  
                                                                       u5081 23DA  
                                                                       u5250 0F62  
                                                                       u5170 0CA0  
                                                                       u4370 0600  
                                                                       u4290 0504  
                                                                       u5330 1526  
                                                                       u4610 1498  
                                                                       u4530 1342  
                                                                       u4450 1192  
                                                                       u5410 1E50  
                                                                       u5090 242E  
                                                                       u5251 0F5C  
                                                                       u5171 0C9A  
                                                                       u4371 05FA  
                                                                       u4291 04FE  
                                                                       u5331 1520  
                                                                       u4611 1492  
                                                                       u4531 133C  
                                                                       u4451 118C  
                                                                       u5091 2428  
                                                                       u4620 229A  
                                                                       u5260 0F7C  
                                                                       u5180 0CE0  
                                                                       u4380 0624  
                                                                       u5340 1560  
                                                                       u4540 1358  
                                                                       u4460 11DA  
                                                                       u4700 1988  
                                                                       u3900 2CB0  
                                                                       u5500 1B28  
                                                                       u5420 1E8C  
                                                                       u4621 2294  
                                                                       u5261 0F76  
                                                                       u5181 0CDA  
                                                                       u4381 061E  
                                                                       u5325 14EE  
                                                                       u4541 1352  
                                                                       u4461 11D4  
                                                                       u4701 1982  
                                                                       u3901 2CAA  
                                                                       u5501 1B22  
                                                                       u5421 1E86  
                                                                       u4630 22DE  
                                                                       u5270 0F9A  
                                                                       u5190 0CF4  
                                                                       u5350 1580  
                                                                       u3910 2648  
                                                                       u4550 138A  
                                                                       u4470 1258  
                                                                       u4390 10A2  
                                                                       u4710 19DA  
                                                                       u5510 1B62  
                                                                       u5430 1EBC  
                                                                       u4631 22D8  
                                                                       u5271 0F94  
                                                                       u5191 0CEE  
                                                                       u5351 157A  
                                                                       u3911 2642  
                                                                       u4551 1384  
                                                                       u4471 1252  
                                                                       u4391 109C  
                                                                       u4711 19D4  
                                                                       u5511 1B5C  
                                                                       u5431 1EB6  
                                                                       u4640 2302  
                                                                       u5280 0FE8  
                                                                       u5360 15C6  
                                                                       u4800 2CFA  
                                                                       u3920 26AE  
                                                                       u4560 13A8  
                                                                       u4480 127E  
                                                                       u4720 1A00  
                                                                       u5520 1B9C  
                                                                       u5440 1F0C  
                                                                       u5600 212A  
                                                                       u4641 22FC  
                                                                       u5281 0FE2  
                                                                       u5361 15C0  
                                                                       u5345 1554  
                                                                       u3921 26A8  
                                                                       u4561 13A2  
                                                                       u4481 1278  
                                                                       u4721 19FA  
                                                                       u5521 1B96  
                                                                       u5441 1F06  
                                                                       u5601 2124  
                                                                       u5610 214C  
                                                                       u4650 2328  
                                                                       u5290 101C  
                                                                       u5370 16D2  
                                                                       u3850 2C10  
                                                                       u3930 2574  
                                                                       u4570 13C2  
                                                                       u4490 12B0  
                                                                       u4730 1A14  
                                                                       u5530 1BD6  
                                                                       u5450 1F64  
                                                                       u4810 29FC  
                                                                       u5611 2146  
                                                                       u4651 2322  
                                                                       u5291 1016  
                                                                       u5371 16CC  
                                                                       u3851 2C0A  
                                                                       u3931 256E  
                                                                       u4571 13BC  
                                                                       u4491 12AA  
                                                                       u4731 1A0E  
                                                                       u5531 1BD0  
                                                                       u5451 1F5E  
                                                                       u4811 29F6  
                                                                       u5620 2188  
                                                                       u4660 237E  
                                                                       u5380 1776  
                                                                       u3860 2C30  
                                                                       u3940 25DA  
                                                                       u4580 13E0  
                                                                       u4740 1A26  
                                                                       u4900 0894  
                                                                       u5540 1C68  
                                                                       u5460 1FBA  
                                                                       u4820 2A2C  
                                                                       u5700 28AE  
                                                                       _RCIF 007CF5  
                                                                       u4661 2378  
                                                                       u5381 1770  
                                                                       u3861 2C2A  
                                                                       u3941 25D4  
                                                                       u4581 13DA  
                                                                       u4741 1A20  
                                                                       u4901 088E  
                                                                       u5541 1C62  
                                                                       u5461 1FB4  
                                                                       u4821 2A26  
                                                                       u5701 28A8  
                                                                       u5630 21BA  
                                                                       u5390 183E  
                                                                       u3950 27E8  
                                                                       u3870 24A0  
                                                                       u4590 142E  
                                                                       u4750 1A66  
                                                                       u4670 18B2  
                                                                       u4910 08E6  
                                                                       u4830 2B74  
                                                                       u5550 1C7C  
                                                                       u5470 1FCE  
                                                                       u5631 21B4  
                                                                       u3951 27E2  
                                                                       u3871 249A  
                                                                       u4591 1428  
                                                                       u4751 1A60  
                                                                       u4671 18AC  
                                                                       u4911 08E0  
                                                                       u4831 2B6E  
                                                                       u5551 1C76  
                                                                       u5471 1FC8  
                                                                       u5640 21D2  
                                                                       u3960 283E  
                                                                       u3880 2506  
                                                                       u4760 1A78  
                                                                       u4680 18C4  
                                                                       u4920 0996  
                                                                       u4840 0658  
                                                                       u5480 1AB4  
                                                                       u5560 1FFA  
                                                                       u5641 21CC  
                                                                       u5625 217C  
                                                                       u3961 2838  
                                                                       u3881 2500  
                                                                       u4761 1A72  
                                                                       u4681 18BE  
                                                                       u4921 0990  
                                                                       u4841 0652  
                                                                       u5481 1AAE  
                                                                       u5561 1FF4  
                                                                       u5650 2202  
                                                                       u4770 2B96  
                                                                       u4690 1928  
                                                                       u3970 2D68  
                                                                       u4930 0A26  
                                                                       u4850 06A4  
                                                                       u3890 2E66  
                                                                       u5490 1AEE  
                                                                       u5570 2030  
                                                                       i2l51 2E88  
                                                                       u5651 21FC  
                                                                       u5395 1832  
                                                                       u4771 2B90  
                                                                       u4691 1922  
                                                                       u3971 2D62  
                                                                       u4931 0A20  
                                                                       u4851 069E  
                                                                       u3891 2E60  
                                                                       u5491 1AE8  
                                                                       u5571 202A  
                                                                       u5660 222A  
                                                                       u4780 2BC8  
                                                                       u3980 2A70  
                                                                       u4940 0A78  
                                                                       u4860 06F0  
                                                                       u5580 20BA  
                                                                       u5661 2224  
                                                                       u4781 2BC2  
                                                                       u3981 2A6A  
                                                                       u4941 0A72  
                                                                       u4861 06EA  
                                                                       u5581 20B4  
                                                                       u5670 223E  
                                                                       u4790 2CF6  
                                                                       u3990 2AA4  
                                                                       u4950 0ABC  
                                                                       u4870 073C  
                                                                       u5590 2116  
                                                                       u5671 2238  
                                                                       u4791 2CEE  
                                                                       u3991 2A9E  
                                                                       u4951 0AB6  
                                                                       u4871 0736  
                                                                       u5591 2110  
                                                                       i2l48 2E74  
                                                                       u4960 0B0E  
                                                                       u4880 07FE  
                                                                       u5680 2728  
                                                                       u4961 0B08  
                                                                       u4881 07F8  
                                                                       u5681 2722  
                                                                       u4970 0BBE  
                                                                       u4890 0850  
                                                                       u5690 2764  
                                                                       u4971 0BB8  
                                                                       u4891 084A  
                                                                       u5691 275E  
                                                                       u4980 1CC0  
                                                                       u4981 1CBA  
                                                                       u4990 1CF8  
                                                                       u4991 1CF2  
                                                                       _Fosc 7E81  
                                                                       _Tosc 00E7  
                                                                       _atoi 1C82  
                                                                       _main 2886  
                                                                       fsr1h 000FE2  
                                                                       fsr2h 000FDA  
                                                                       indf1 000FE7  
                                                                       indf2 000FDF  
                                                                       fsr1l 000FE1  
                                                                       fsr2l 000FD9  
                                                                       btemp 0077  
                                                                       prodh 000FF4  
                                                                       prodl 000FF3  
                                                       change_sequence@i_545 00C8  
                                                       change_sequence@i_546 00C4  
                                                                       start 0094  
                                                                 _Angle_diff 005D  
                                                            ___fldiv@new_exp 0028  
                                                               ___param_bank 000000  
                                                              ___fltol@sign1 0084  
                                                                      ?_atoi 0010  
                                                            __end_of___fladd 0640  
                                                                      ?_main 0001  
                                                            __end_of___fldiv 14B6  
                                                            __end_of___flneg 2D46  
                                                            __end_of___flmul 1084  
                                                            __end_of___flsub 2C80  
                                                            __end_of___fltol 2268  
                                                            __end_of_Twister 2886  
                                                                      i2l353 0086  
                                                                      i2l349 001C  
                                                                      _RCREG 000FAE  
                                                                      _SPBRG 000FAF  
                                                                      _PORTB 000F81  
                                                                      _PORTC 000F82  
                                                                      _PORTD 000F83  
                                                                      _TRISB 000F93  
                                                                      _TRISD 000F95  
                                                                      _TXREG 000FAD  
                                                           Twister@direction 000F  
                                                    Z_axis_and_Tweezer@i_605 0012  
                                                                      _X_dir 0073  
                                                                      _Y_dir 0072  
                                                     __size_of_add_component 01EE  
                                                            __end_of_isdigit 2D04  
                                                            __end_of_memmove 248A  
                                                                      atoi@n 001D  
                                                                      atoi@s 0010  
                                         __end_of_desired_BaudRate@main$F495 7E79  
                                                 _desired_BaudRate@main$F495 7E75  
                                                                      _toint 7E71  
                                                            __end_of_isspace 2BDA  
                                                          remove_component@i 0083  
                                                                      tablat 000FF5  
                                                              _start_up_menu 2706  
                                                      change_sequence@Help_1 0080  
                                                            _change_sequence 1E40  
                                                                      ttemp5 0078  
                                                                      ttemp6 007B  
                                                            Y_axis@direction 000F  
                                                                      ttemp7 007F  
                                                                      status 000FD8  
                                                                      wtemp8 0078  
                                                            __end_of_strncat 29BA  
                                                            __end_of_strrchr 2E00  
                                                               __end_of_Fosc 7E85  
                                                            __initialization 2AAA  
                                                  __size_ofi2_serial_tx_char 0020  
                                                               __end_of_atoi 1E40  
                                                               __end_of_main 2934  
                                                                 _Pick_Angle 0065  
                                                                     ??_atoi 0012  
                                                                     ??_main 005B  
                                                              __activetblptr 000002  
                                                              print_string@i 000E  
                                                             ?_start_up_menu 0001  
                                                                     i2l3841 006E  
                                                                     i2l3755 2E70  
                                                                     i2l3843 0080  
                                                                     i2l3845 0082  
                                                                     i2l3837 0014  
                                                                     i2l3839 0030  
                                                           __end_of___xxtofl 1A94  
                                                    remove_component@rm_comp 0080  
                                                                     _X_Pick 006D  
                                                                     _Y_Pick 0069  
                                                                     _X_diff 0061  
                                                                     _Y_diff 005F  
                                                                     _X_axis 2632  
                                                                     _Y_axis 255E  
                                                                     _Z_axis 248A  
                                                              _add_component 1A94  
                                                          ?_remove_component 0001  
                                                                     ___flge 2268  
                                                                  ??___fladd 0011  
                                                                     ___wmul 2E00  
                                                                  ??___fldiv 001F  
                                                                  ??___flneg 000D  
                                                                  ??___flmul 0011  
                                                                  ??___flsub 0021  
                                                                  ??___fltol 0080  
                                                           ??_pick_and_place 003C  
                                                                     _direct 2D46  
                                                         ??_remove_component 0053  
                                                                  ??_Twister 000F  
                                                                     clear_0 2AE8  
                                                                     clear_1 2AF4  
                                                                     clear_2 2B00  
                                                                     isa$std 000001  
                                                           __end_of_ms_delay 2C36  
                                                                     _roundf 14B6  
                                                                     _strlen 2C80  
                                                               __pdataCOMRAM 0075  
                                                                  ??_isdigit 000B  
                                                                  ??_memmove 0013  
                                                              _Place_Angle_D 00D3  
                                                               __mediumconst 7E2E  
                                                                  ??_isspace 000B  
                                                                     tblptrh 000FF7  
                                                                     tblptrl 000FF6  
                                                                     tblptru 000FF8  
                                                    __end_of_change_sequence 1FD4  
                                                                  ??_strncat 0013  
                                                                  ??_strrchr 001B  
                                                                 ___flge@ff1 0030  
                                                                 ___flge@ff2 0034  
                                                               ___xxtofl@arg 0013  
                                                               ___xxtofl@exp 0012  
                                                               ___xxtofl@val 0009  
                                                                 __accesstop 0080  
                                                    __end_of__initialization 2B06  
                                                         __size_of___memrchr 0082  
                                                                 ___flneg@f1 0009  
                                                          serial_tx_char@val 0009  
                                                              ___rparam_used 000001  
                                                                 ___fltol@f1 0056  
                                                         _pick_and_place$591 004A  
                                                         _pick_and_place$584 0040  
                                                         _pick_and_place$593 004E  
                                                         _pick_and_place$587 0044  
                                                             ?_add_component 0001  
                                                            _init_interrupts 2E9C  
                                                             __pcstackCOMRAM 0001  
                                                               __pidataBANK0 2E8C  
                                                         _Z_axis_and_Tweezer 2A3C  
                                                              __end_of_toint 7E75  
                                                        ?_Z_axis_and_Tweezer 0001  
                                                                ms_delay@val 0009  
                                                           _desired_BaudRate 7E79  
                                                    __size_of_serial_tx_char 0020  
                                                            ??_start_up_menu 00CA  
                                                                _Place_Angle 0063  
                                                                _New_char_RX 0074  
                                                                 __pbssBANK0 00CD  
                                                                 __pbssBANK1 0100  
                                                      __end_of_Rx_char_USART 0094  
                                                  remove_component@indxToDel 0085  
                                                       ??_Z_axis_and_Tweezer 0010  
                                                                 _angle_diff 00D1  
                                                                    ?_X_axis 0001  
                                                           i2_serial_tx_char 2E6C  
                                                                    ?_Y_axis 0001  
                                                                    ?_Z_axis 0001  
                                                                    ?___flge 0030  
                                                                    ?___wmul 0009  
                                                                    ?_direct 0009  
                                                             add_component@i 0058  
                                                                    ?_roundf 003C  
                                                          __end_of___memrchr 2A3C  
                                                                    ?_strlen 0009  
                                                                  ?___xxtofl 0009  
                                                        pick_and_place@i_590 0048  
                                                        pick_and_place@i_592 004C  
                                                        pick_and_place@i_585 0042  
                                                        pick_and_place@i_594 0050  
                                                        pick_and_place@i_588 0046  
                                                           ?_change_sequence 0001  
                                                        Z_axis_and_Tweezer@i 0010  
                                                                    _RX_Char 0070  
                                                    __end_of_init_interrupts 2EA8  
                                                            ??_add_component 0053  
                                                                  ?_ms_delay 0009  
                                                                    _X_Place 006B  
                                                                    _Y_Place 0067  
                                                                    __Hparam 0000  
                                                                    __Lparam 0000  
                                                            pick_and_place@i 003E  
                                                                 _init_PORTS 2E2A  
                                                                 _init_USART 2D86  
                                                            __size_of_X_axis 00D4  
                                                            __size_of_Y_axis 00D4  
                                                                    _Rot_dir 0071  
                                                            __size_of_Z_axis 00D4  
                                                            __size_of___flge 0128  
                                                                    ___fladd 0098  
                                                                    ___fldiv 1084  
                                                                    ___flneg 2D04  
                                                                    ___flmul 0BE0  
                                                                    ___flsub 2C36  
                                                                    ___fltol 2130  
                                                            __size_of___wmul 002A  
                                                                    _Twister 27D2  
                                                            __size_of_direct 0040  
                                                                    __pcinit 2AAA  
                                                                    __ramtop 0600  
                                                                    __ptext0 2886  
                                                                    __ptext1 2706  
                                                                    __ptext2 1FD4  
                                                                    __ptext3 2DC6  
                                                                    __ptext4 29BA  
                                                                    __ptext5 2390  
                                                                    __ptext6 1E40  
                                                                    __ptext7 1A94  
                                                                    __ptext8 2934  
                                                                    __ptext9 2C80  
                                                            __size_of_roundf 03E6  
                                                            __size_of_strlen 0042  
                                                                    _isdigit 2CC2  
                                                                    _memmove 2390  
                                                                 ??___xxtofl 000D  
                                                                    _isspace 2B7A  
                                                                    atoi@neg 0016  
                                                                    _strncat 2934  
                                                                    _strrchr 2DC6  
                                                       end_of_initialization 2B06  
                                                        remove_component@ptr 0081  
                                                              __Lmediumconst 7E2E  
                                                                 ??_ms_delay 000B  
                                                                 _my_flag_rx 006F  
                                                                  _RCSTAbits 000FAB  
                                                                    postdec1 000FE5  
                                                                    postinc0 000FEE  
                                                                    postinc2 000FDE  
                                                                    roundf@e 0048  
                                                                    roundf@u 004E  
                                                                    roundf@x 003C  
                                                                    roundf@y 0052  
                                                                    strlen@a 000B  
                                                                    strlen@s 0009  
                                                                 direct@next 000B  
                                                                 direct@prev 0009  
                                                         add_component@F3133 00EB  
                                                                ___fladd@grs 0018  
                                                             _serial_tx_char 2E4C  
                                                              ___xxtofl@sign 0011  
                                                  __size_of_remove_component 015C  
                                                                  _TRISCbits 000F94  
                                                                ___fldiv@grs 002A  
                                                                ___fldiv@rem 0023  
                                                              ?_print_string 000A  
                                                                ___flmul@grs 0017  
                                                           ?_init_interrupts 0001  
                                                                  _TXSTAbits 000FAC  
                                                                ___memrchr@c 000F  
                                                                ___memrchr@m 000D  
                                                                ___memrchr@n 0011  
                                                                ___memrchr@s 0015  
                                                   __end_of_desired_BaudRate 7E7D  
                                                                ?_init_PORTS 0001  
                                                                ?_init_USART 0001  
                                                             __end_of_X_axis 2706  
                                                             __end_of_Y_axis 2632  
                                                             __end_of_Z_axis 255E  
                                                             __end_of___flge 2390  
                                                             __end_of___wmul 2E2A  
                                                              __pidataCOMRAM 2EA8  
                                               add_component@add_to_sequence 0056  
                                                             __end_of_direct 2D86  
                                                     __end_of_serial_tx_char 2E6C  
                                                             __end_of_roundf 189C  
                                                             __end_of_strlen 2CC2  
                                                        start_initialization 2AAA  
                                                   __end_ofi2_serial_tx_char 2E8C  
                                                             ??_print_string 000C  
                                                                  _X_Place_D 00D7  
                                                                  _Y_Place_D 00D5  
                                                            X_axis@direction 000F  
                                                               _Pick_Angle_D 00D9  
                                                             _Tosc@main$F494 00E3  
                                                                   ??_X_axis 000F  
                                                                   ??_Y_axis 000F  
                                                                   ??_Z_axis 000F  
                                                                   ??___flge 0038  
                                                                   ??___wmul 000D  
                                                                   ??_direct 000D  
                                                                __pdataBANK0 00E3  
                                                             _lenth_of_array 00ED  
                                                                   ??_roundf 0040  
                                                                   ??_strlen 000B  
                                                            ?_serial_tx_char 0001  
                                                                  ___fladd@a 000D  
                                                                  ___fladd@b 0009  
                                                                  ___fldiv@a 001B  
                                                                  ___fldiv@b 0017  
                                                                  ___flmul@a 000D  
                                                                  ___flmul@b 0009  
                                                                __pbssCOMRAM 005B  
                                                           change_sequence@i 00C6  
                                                           change_sequence@j 00C2  
                                                                  ___flsub@a 001D  
                                                                  ___flsub@b 0019  
                                                              __pcstackBANK0 0080  
                                                    __size_of_pick_and_place 05A0  
                                                                  ___memrchr 29BA  
                                                          __size_of___xxtofl 01F8  
                                                        __size_of_init_PORTS 0022  
                                                        __size_of_init_USART 0040  
                                                      __end_of_start_up_menu 27D2  
                                                                  _atoi$1063 0018  
                                                                  _atoi$1064 001C  
                                                                  _atoi$1065 001A  
                                                __size_of_Z_axis_and_Tweezer 006E  
                                                            Z_axis@direction 000F  
                                                          __size_of_ms_delay 005C  
                                                                  __pintcode 0008  
                                                              __pmediumconst 7E2E  
                                                                   ?___fladd 0009  
                                                                   ?___fldiv 0017  
                                                                   ?___flneg 0009  
                                                                   ?___flmul 0009  
                                                                   ?___flsub 0019  
                                                                   ?___fltol 0056  
                                                                   ?_Twister 0001  
                                                             Rx_char_USART@i 0007  
                                                     __size_of_Rx_char_USART 008C  
                                                          print_string@strng 000A  
                                                                   ?_isdigit 0009  
                                                                   ?_memmove 000D  
                                                                   ?_isspace 0009  
                                                           _remove_component 1FD4  
                                                             _Fosc@main$F493 7E7D  
                                                                 ?___memrchr 000D  
                                                                   ?_strncat 000D  
                                                                   ?_strrchr 0017  
                                                                  _input_str 0075  
                                                             ___wmul@product 000D  
                                                   __size_of_change_sequence 0194  
                                                                   _PIE1bits 000F9D  
                                                      __end_of_add_component 1C82  
                                                                   _PIR1bits 000F9E  
                                                                   i2u383_40 002E  
                                                                   i2u383_41 0028  
                                                                   i2u384_40 006C  
                                                                   i2u384_41 0066  
                                                                   i2u378_40 2E86  
                                                                   i2u378_41 2E80  
                                                       __end_of_print_string 2B7A  
                                                                  _testarray 0100  
                                                          ___wmul@multiplier 0009  
                                                     __end_of_Fosc@main$F493 7E81  
                                                               _isspace$1081 000F  
                                                                  copy_data0 2ABE  
                                                                   _X_Pick_D 005B  
                                                              _Rx_char_USART 0008  
                                                                   _Y_Pick_D 00DB  
                                                                 roundf@F528 00CD  
                                                                   __Hrparam 0000  
                                                               ??_init_PORTS 0009  
                                                               ??_init_USART 005A  
                                                                   __Lrparam 0000  
                                                                  memmove@d1 000D  
                                                                  memmove@s1 000F  
                                                           __size_of___fladd 05A8  
                                                           __size_of___fldiv 0432  
                                                           __size_of___flneg 0042  
                                                           __size_of___flmul 04A4  
                                                           __size_of___flsub 004A  
                                                           __size_of___fltol 0138  
                                                           __size_of_Twister 00B4  
                                                                  ms_delay@i 000B  
                                                                  ms_delay@j 000D  
                                                                   ___xxtofl 189C  
                                                             _pick_and_place 0640  
                                                           __size_of_isdigit 0042  
                                                           __size_of_memmove 00FA  
                                                                ??___memrchr 0013  
                                                           __size_of_isspace 0060  
                                                                   __ptext10 2B14  
                                                                   __ptext11 2E4C  
                                                                   __ptext20 27D2  
                                                                   __ptext12 0640  
                                                                   __ptext21 2BDA  
                                                                   __ptext13 2D46  
                                                                   __ptext30 0098  
                                                                   __ptext22 1C82  
                                                                   __ptext14 189C  
                                                                   __ptext31 2D04  
                                                                   __ptext23 2B7A  
                                                                   __ptext15 1084  
                                                                   __ptext32 0BE0  
                                                                   __ptext24 2CC2  
                                                                   __ptext16 2A3C  
                                                                   __ptext33 2268  
                                                                   __ptext25 2E00  
                                                                   __ptext17 248A  
                                                                   __ptext34 2130  
                                                                   __ptext26 2E9C  
                                                                   __ptext18 255E  
                                                                   __ptext35 2E2A  
                                                                   __ptext27 2D86  
                                                                   __ptext19 2632  
                                                                   __ptext28 14B6  
                                                                   __ptext37 2E6C  
                                                                   __ptext29 2C36  
                                                          ?i2_serial_tx_char 0001  
                                                         __end_of_init_PORTS 2E4C  
                                                         __end_of_init_USART 2DC6  
                                                         ??i2_serial_tx_char 0001  
                                                           __size_of_strncat 0086  
                                                           __size_of_strrchr 003A  
                                                             ?_Rx_char_USART 0001  
                                                              __size_of_atoi 01BE  
                                                              __size_of_main 00AE  
                                                                   _ms_delay 2BDA  
                                                                   isa$xinst 000000  
                                                                   _sequence 00EF  
                                                   __size_of_init_interrupts 000C  
                                               __end_ofchange_sequence@F3126 7E71  
                                                          ??_change_sequence 0053  
                                                                   int$flags 0077  
                                                           ??_serial_tx_char 0009  
                                                                   _rotation 00DD  
                                                     __end_of_pick_and_place 0BE0  
                                                                 _INTCONbits 000FF2  
                                                                   isdigit@c 0009  
                                                                   memmove@d 0015  
                                                                   memmove@n 0011  
                                                                   memmove@s 0017  
                                                                   intlevel2 2EAA  
                                                                   isspace@c 0009  
                                                             _displacement_X 00E1  
                                                             _displacement_Y 00DF  
                                                      __size_of_print_string 0066  
                                                   __end_of_remove_component 2130  
                                                     pick_and_place@Componnt 0052  
                                                        i2serial_tx_char@val 0001  
                                                            ?_pick_and_place 0001  
                                                                   strncat@d 000D  
                                                                   strncat@n 0011  
                                                                   strncat@s 000F  
                                                                   strrchr@c 0019  
                                                                   strrchr@s 0017  
                                                              ___fladd@signs 0015  
                                                            ??_Rx_char_USART 0002  
                                                               _print_string 2B14  
                                                 __end_of_Z_axis_and_Tweezer 2AAA  
                                                               ___fladd@aexp 0016  
                                                               ___fladd@bexp 0017  
                                                            start_up_menu@ip 005A  
                                                                _roundf$1330 0044  
                                                                _roundf$1329 004A  
