

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 18 12:44:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F452 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  0030B8                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for add_component@F3128
    98  0030B8  20                 	db	32
    99                           
   100                           ;initializer for _State
   101  0030B9  30                 	db	48
   102                           
   103                           	psect	idataBANK0
   104  003094                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _Tosc@main$F488
   108  003094  37BD               	dw	14269
   109  003096  3486               	dw	13446
   110                           
   111                           ;initializer for _Tosc
   112  003098  37BD               	dw	14269
   113  00309A  3486               	dw	13446
   114                           
   115                           ;initializer for _lenth_of_array
   116  00309C  001E               	dw	30
   117                           
   118                           ;initializer for _input_str
   119  00309E  20                 	db	32
   120  00309F  00                 	db	0
   121  0030A0  00                 	db	0
   122  0030A1  00                 	db	0
   123  0030A2  00                 	db	0
   124  0030A3  00                 	db	0
   125  0030A4  00                 	db	0
   126  0030A5  00                 	db	0
   127  0030A6  00                 	db	0
   128  0030A7  00                 	db	0
   129                           
   130                           ;initializer for _sequence
   131  0030A8  43                 	db	67
   132  0030A9  41                 	db	65
   133  0030AA  42                 	db	66
   134  0030AB  00                 	db	0
   135                           
   136                           	psect	mediumconst
   137  007D78                     __pmediumconst:
   138                           	callstack 0
   139  007D78  00                 	db	0
   140  007D79  0000               	dw	0
   141  007D7B  4B00               	dw	19200
   142  007D7D                     __end_of_toint:
   143                           	callstack 0
   144  007D7D  0000               	dw	0
   145  007D7F  4616               	dw	17942
   146  007D81                     __end_of_desired_BaudRate@main$F489:
   147                           	callstack 0
   148  007D81  0000               	dw	0
   149  007D83  4616               	dw	17942
   150  007D85                     __end_of_desired_BaudRate:
   151                           	callstack 0
   152  007D85  2400               	dw	9216
   153  007D87  4A74               	dw	19060
   154  007D89                     __end_of_Fosc@main$F487:
   155                           	callstack 0
   156  007D89  2400               	dw	9216
   157  007D8B  4A74               	dw	19060
   158  007D8D                     __end_of_Fosc:
   159                           	callstack 0
   160  0000                     _RCREG	set	4014
   161  0000                     _TXREG	set	4013
   162  0000                     _RCSTAbits	set	4011
   163  0000                     _TXSTAbits	set	4012
   164  0000                     _SPBRG	set	4015
   165  0000                     _INTCONbits	set	4082
   166  0000                     _PIE1bits	set	3997
   167  0000                     _PIR1bits	set	3998
   168  0000                     _TRISCbits	set	3988
   169  0000                     _PORTC	set	3970
   170  0000                     _LATC	set	3979
   171  0000                     _PORTD	set	3971
   172  0000                     _PORTB	set	3969
   173  0000                     _TRISD	set	3989
   174  0000                     _TRISB	set	3987
   175  0000                     _RCIF	set	31989
   176  007D8D                     STR_1:
   177  007D8D  0A                 	db	10
   178  007D8E  0A                 	db	10
   179  007D8F  31                 	db	49	;'1'
   180  007D90  2E                 	db	46
   181  007D91  20                 	db	32
   182  007D92  53                 	db	83	;'S'
   183  007D93  74                 	db	116	;'t'
   184  007D94  61                 	db	97	;'a'
   185  007D95  72                 	db	114	;'r'
   186  007D96  74                 	db	116	;'t'
   187  007D97  20                 	db	32
   188  007D98  53                 	db	83	;'S'
   189  007D99  65                 	db	101	;'e'
   190  007D9A  71                 	db	113	;'q'
   191  007D9B  75                 	db	117	;'u'
   192  007D9C  65                 	db	101	;'e'
   193  007D9D  6E                 	db	110	;'n'
   194  007D9E  63                 	db	99	;'c'
   195  007D9F  65                 	db	101	;'e'
   196  007DA0  0A                 	db	10
   197  007DA1  32                 	db	50	;'2'
   198  007DA2  2E                 	db	46
   199  007DA3  20                 	db	32
   200  007DA4  43                 	db	67	;'C'
   201  007DA5  68                 	db	104	;'h'
   202  007DA6  61                 	db	97	;'a'
   203  007DA7  6E                 	db	110	;'n'
   204  007DA8  67                 	db	103	;'g'
   205  007DA9  65                 	db	101	;'e'
   206  007DAA  20                 	db	32
   207  007DAB  73                 	db	115	;'s'
   208  007DAC  65                 	db	101	;'e'
   209  007DAD  71                 	db	113	;'q'
   210  007DAE  75                 	db	117	;'u'
   211  007DAF  65                 	db	101	;'e'
   212  007DB0  6E                 	db	110	;'n'
   213  007DB1  63                 	db	99	;'c'
   214  007DB2  65                 	db	101	;'e'
   215  007DB3  0A                 	db	10
   216  007DB4  33                 	db	51	;'3'
   217  007DB5  2E                 	db	46
   218  007DB6  20                 	db	32
   219  007DB7  41                 	db	65	;'A'
   220  007DB8  64                 	db	100	;'d'
   221  007DB9  64                 	db	100	;'d'
   222  007DBA  20                 	db	32
   223  007DBB  6E                 	db	110	;'n'
   224  007DBC  65                 	db	101	;'e'
   225  007DBD  77                 	db	119	;'w'
   226  007DBE  20                 	db	32
   227  007DBF  63                 	db	99	;'c'
   228  007DC0  6F                 	db	111	;'o'
   229  007DC1  6D                 	db	109	;'m'
   230  007DC2  70                 	db	112	;'p'
   231  007DC3  6F                 	db	111	;'o'
   232  007DC4  6E                 	db	110	;'n'
   233  007DC5  65                 	db	101	;'e'
   234  007DC6  6E                 	db	110	;'n'
   235  007DC7  74                 	db	116	;'t'
   236  007DC8  0A                 	db	10
   237  007DC9  34                 	db	52	;'4'
   238  007DCA  2E                 	db	46
   239  007DCB  20                 	db	32
   240  007DCC  52                 	db	82	;'R'
   241  007DCD  65                 	db	101	;'e'
   242  007DCE  6D                 	db	109	;'m'
   243  007DCF  6F                 	db	111	;'o'
   244  007DD0  76                 	db	118	;'v'
   245  007DD1  65                 	db	101	;'e'
   246  007DD2  20                 	db	32
   247  007DD3  61                 	db	97	;'a'
   248  007DD4  20                 	db	32
   249  007DD5  63                 	db	99	;'c'
   250  007DD6  6F                 	db	111	;'o'
   251  007DD7  6D                 	db	109	;'m'
   252  007DD8  70                 	db	112	;'p'
   253  007DD9  6F                 	db	111	;'o'
   254  007DDA  6E                 	db	110	;'n'
   255  007DDB  65                 	db	101	;'e'
   256  007DDC  6E                 	db	110	;'n'
   257  007DDD  74                 	db	116	;'t'
   258  007DDE  00                 	db	0
   259  007DDF                     STR_17:
   260  007DDF  0A                 	db	10
   261  007DE0  63                 	db	99	;'c'
   262  007DE1  6F                 	db	111	;'o'
   263  007DE2  6D                 	db	109	;'m'
   264  007DE3  70                 	db	112	;'p'
   265  007DE4  6F                 	db	111	;'o'
   266  007DE5  6E                 	db	110	;'n'
   267  007DE6  65                 	db	101	;'e'
   268  007DE7  6E                 	db	110	;'n'
   269  007DE8  74                 	db	116	;'t'
   270  007DE9  20                 	db	32
   271  007DEA  69                 	db	105	;'i'
   272  007DEB  73                 	db	115	;'s'
   273  007DEC  20                 	db	32
   274  007DED  6E                 	db	110	;'n'
   275  007DEE  6F                 	db	111	;'o'
   276  007DEF  74                 	db	116	;'t'
   277  007DF0  20                 	db	32
   278  007DF1  69                 	db	105	;'i'
   279  007DF2  6E                 	db	110	;'n'
   280  007DF3  20                 	db	32
   281  007DF4  74                 	db	116	;'t'
   282  007DF5  68                 	db	104	;'h'
   283  007DF6  65                 	db	101	;'e'
   284  007DF7  20                 	db	32
   285  007DF8  73                 	db	115	;'s'
   286  007DF9  65                 	db	101	;'e'
   287  007DFA  71                 	db	113	;'q'
   288  007DFB  75                 	db	117	;'u'
   289  007DFC  65                 	db	101	;'e'
   290  007DFD  6E                 	db	110	;'n'
   291  007DFE  63                 	db	99	;'c'
   292  007DFF  65                 	db	101	;'e'
   293  007E00  2E                 	db	46
   294  007E01  20                 	db	32
   295  007E02  54                 	db	84	;'T'
   296  007E03  72                 	db	114	;'r'
   297  007E04  79                 	db	121	;'y'
   298  007E05  20                 	db	32
   299  007E06  73                 	db	115	;'s'
   300  007E07  65                 	db	101	;'e'
   301  007E08  6C                 	db	108	;'l'
   302  007E09  65                 	db	101	;'e'
   303  007E0A  63                 	db	99	;'c'
   304  007E0B  74                 	db	116	;'t'
   305  007E0C  69                 	db	105	;'i'
   306  007E0D  6E                 	db	110	;'n'
   307  007E0E  67                 	db	103	;'g'
   308  007E0F  20                 	db	32
   309  007E10  61                 	db	97	;'a'
   310  007E11  6E                 	db	110	;'n'
   311  007E12  6F                 	db	111	;'o'
   312  007E13  74                 	db	116	;'t'
   313  007E14  68                 	db	104	;'h'
   314  007E15  65                 	db	101	;'e'
   315  007E16  72                 	db	114	;'r'
   316  007E17  20                 	db	32
   317  007E18  63                 	db	99	;'c'
   318  007E19  6F                 	db	111	;'o'
   319  007E1A  6D                 	db	109	;'m'
   320  007E1B  70                 	db	112	;'p'
   321  007E1C  6F                 	db	111	;'o'
   322  007E1D  6E                 	db	110	;'n'
   323  007E1E  65                 	db	101	;'e'
   324  007E1F  6E                 	db	110	;'n'
   325  007E20  74                 	db	116	;'t'
   326  007E21  3A                 	db	58	;':'
   327  007E22  20                 	db	32
   328  007E23  0A                 	db	10
   329  007E24  00                 	db	0
   330  007E25                     STR_15:
   331  007E25  0A                 	db	10
   332  007E26  57                 	db	87	;'W'
   333  007E27  68                 	db	104	;'h'
   334  007E28  69                 	db	105	;'i'
   335  007E29  63                 	db	99	;'c'
   336  007E2A  68                 	db	104	;'h'
   337  007E2B  20                 	db	32
   338  007E2C  63                 	db	99	;'c'
   339  007E2D  6F                 	db	111	;'o'
   340  007E2E  6D                 	db	109	;'m'
   341  007E2F  70                 	db	112	;'p'
   342  007E30  6F                 	db	111	;'o'
   343  007E31  6E                 	db	110	;'n'
   344  007E32  65                 	db	101	;'e'
   345  007E33  6E                 	db	110	;'n'
   346  007E34  74                 	db	116	;'t'
   347  007E35  20                 	db	32
   348  007E36  77                 	db	119	;'w'
   349  007E37  6F                 	db	111	;'o'
   350  007E38  75                 	db	117	;'u'
   351  007E39  6C                 	db	108	;'l'
   352  007E3A  64                 	db	100	;'d'
   353  007E3B  20                 	db	32
   354  007E3C  79                 	db	121	;'y'
   355  007E3D  6F                 	db	111	;'o'
   356  007E3E  75                 	db	117	;'u'
   357  007E3F  20                 	db	32
   358  007E40  6C                 	db	108	;'l'
   359  007E41  69                 	db	105	;'i'
   360  007E42  6B                 	db	107	;'k'
   361  007E43  65                 	db	101	;'e'
   362  007E44  20                 	db	32
   363  007E45  74                 	db	116	;'t'
   364  007E46  6F                 	db	111	;'o'
   365  007E47  20                 	db	32
   366  007E48  72                 	db	114	;'r'
   367  007E49  65                 	db	101	;'e'
   368  007E4A  6D                 	db	109	;'m'
   369  007E4B  6F                 	db	111	;'o'
   370  007E4C  76                 	db	118	;'v'
   371  007E4D  65                 	db	101	;'e'
   372  007E4E  20                 	db	32
   373  007E4F  66                 	db	102	;'f'
   374  007E50  72                 	db	114	;'r'
   375  007E51  6F                 	db	111	;'o'
   376  007E52  6D                 	db	109	;'m'
   377  007E53  20                 	db	32
   378  007E54  74                 	db	116	;'t'
   379  007E55  68                 	db	104	;'h'
   380  007E56  65                 	db	101	;'e'
   381  007E57  20                 	db	32
   382  007E58  20                 	db	32
   383  007E59  73                 	db	115	;'s'
   384  007E5A  65                 	db	101	;'e'
   385  007E5B  71                 	db	113	;'q'
   386  007E5C  75                 	db	117	;'u'
   387  007E5D  65                 	db	101	;'e'
   388  007E5E  6E                 	db	110	;'n'
   389  007E5F  63                 	db	99	;'c'
   390  007E60  65                 	db	101	;'e'
   391  007E61  3F                 	db	63	;'?'
   392  007E62  0A                 	db	10
   393  007E63  00                 	db	0
   394  007E64                     STR_7:
   395  007E64  0A                 	db	10
   396  007E65  45                 	db	69	;'E'
   397  007E66  6E                 	db	110	;'n'
   398  007E67  74                 	db	116	;'t'
   399  007E68  65                 	db	101	;'e'
   400  007E69  72                 	db	114	;'r'
   401  007E6A  20                 	db	32
   402  007E6B  74                 	db	116	;'t'
   403  007E6C  68                 	db	104	;'h'
   404  007E6D  65                 	db	101	;'e'
   405  007E6E  20                 	db	32
   406  007E6F  63                 	db	99	;'c'
   407  007E70  6F                 	db	111	;'o'
   408  007E71  6D                 	db	109	;'m'
   409  007E72  70                 	db	112	;'p'
   410  007E73  6F                 	db	111	;'o'
   411  007E74  6E                 	db	110	;'n'
   412  007E75  65                 	db	101	;'e'
   413  007E76  6E                 	db	110	;'n'
   414  007E77  74                 	db	116	;'t'
   415  007E78  20                 	db	32
   416  007E79  79                 	db	121	;'y'
   417  007E7A  6F                 	db	111	;'o'
   418  007E7B  75                 	db	117	;'u'
   419  007E7C  20                 	db	32
   420  007E7D  77                 	db	119	;'w'
   421  007E7E  61                 	db	97	;'a'
   422  007E7F  6E                 	db	110	;'n'
   423  007E80  74                 	db	116	;'t'
   424  007E81  20                 	db	32
   425  007E82  74                 	db	116	;'t'
   426  007E83  6F                 	db	111	;'o'
   427  007E84  20                 	db	32
   428  007E85  61                 	db	97	;'a'
   429  007E86  64                 	db	100	;'d'
   430  007E87  64                 	db	100	;'d'
   431  007E88  3A                 	db	58	;':'
   432  007E89  20                 	db	32
   433  007E8A  41                 	db	65	;'A'
   434  007E8B  2C                 	db	44
   435  007E8C  20                 	db	32
   436  007E8D  42                 	db	66	;'B'
   437  007E8E  2C                 	db	44
   438  007E8F  20                 	db	32
   439  007E90  43                 	db	67	;'C'
   440  007E91  20                 	db	32
   441  007E92  6F                 	db	111	;'o'
   442  007E93  72                 	db	114	;'r'
   443  007E94  20                 	db	32
   444  007E95  44                 	db	68	;'D'
   445  007E96  3F                 	db	63	;'?'
   446  007E97  00                 	db	0
   447  007E98                     STR_5:
   448  007E98  0A                 	db	10
   449  007E99  50                 	db	80	;'P'
   450  007E9A  6C                 	db	108	;'l'
   451  007E9B  65                 	db	101	;'e'
   452  007E9C  61                 	db	97	;'a'
   453  007E9D  73                 	db	115	;'s'
   454  007E9E  65                 	db	101	;'e'
   455  007E9F  20                 	db	32
   456  007EA0  67                 	db	103	;'g'
   457  007EA1  69                 	db	105	;'i'
   458  007EA2  76                 	db	118	;'v'
   459  007EA3  65                 	db	101	;'e'
   460  007EA4  20                 	db	32
   461  007EA5  74                 	db	116	;'t'
   462  007EA6  68                 	db	104	;'h'
   463  007EA7  65                 	db	101	;'e'
   464  007EA8  20                 	db	32
   465  007EA9  6E                 	db	110	;'n'
   466  007EAA  65                 	db	101	;'e'
   467  007EAB  77                 	db	119	;'w'
   468  007EAC  20                 	db	32
   469  007EAD  73                 	db	115	;'s'
   470  007EAE  65                 	db	101	;'e'
   471  007EAF  71                 	db	113	;'q'
   472  007EB0  75                 	db	117	;'u'
   473  007EB1  65                 	db	101	;'e'
   474  007EB2  6E                 	db	110	;'n'
   475  007EB3  63                 	db	99	;'c'
   476  007EB4  65                 	db	101	;'e'
   477  007EB5  20                 	db	32
   478  007EB6  61                 	db	97	;'a'
   479  007EB7  73                 	db	115	;'s'
   480  007EB8  20                 	db	32
   481  007EB9  69                 	db	105	;'i'
   482  007EBA  6E                 	db	110	;'n'
   483  007EBB  70                 	db	112	;'p'
   484  007EBC  75                 	db	117	;'u'
   485  007EBD  74                 	db	116	;'t'
   486  007EBE  0D                 	db	13
   487  007EBF  00                 	db	0
   488  007EC0                     STR_3:
   489  007EC0  0A                 	db	10
   490  007EC1  45                 	db	69	;'E'
   491  007EC2  6E                 	db	110	;'n'
   492  007EC3  74                 	db	116	;'t'
   493  007EC4  65                 	db	101	;'e'
   494  007EC5  72                 	db	114	;'r'
   495  007EC6  20                 	db	32
   496  007EC7  27                 	db	39
   497  007EC8  51                 	db	81	;'Q'
   498  007EC9  27                 	db	39
   499  007ECA  20                 	db	32
   500  007ECB  74                 	db	116	;'t'
   501  007ECC  6F                 	db	111	;'o'
   502  007ECD  20                 	db	32
   503  007ECE  65                 	db	101	;'e'
   504  007ECF  78                 	db	120	;'x'
   505  007ED0  69                 	db	105	;'i'
   506  007ED1  74                 	db	116	;'t'
   507  007ED2  20                 	db	32
   508  007ED3  74                 	db	116	;'t'
   509  007ED4  6F                 	db	111	;'o'
   510  007ED5  20                 	db	32
   511  007ED6  4D                 	db	77	;'M'
   512  007ED7  41                 	db	65	;'A'
   513  007ED8  49                 	db	73	;'I'
   514  007ED9  4E                 	db	78	;'N'
   515  007EDA  20                 	db	32
   516  007EDB  4D                 	db	77	;'M'
   517  007EDC  45                 	db	69	;'E'
   518  007EDD  4E                 	db	78	;'N'
   519  007EDE  55                 	db	85	;'U'
   520  007EDF  00                 	db	0
   521  007EE0                     STR_13:
   522  007EE0  0A                 	db	10
   523  007EE1  45                 	db	69	;'E'
   524  007EE2  6E                 	db	110	;'n'
   525  007EE3  74                 	db	116	;'t'
   526  007EE4  65                 	db	101	;'e'
   527  007EE5  72                 	db	114	;'r'
   528  007EE6  20                 	db	32
   529  007EE7  74                 	db	116	;'t'
   530  007EE8  68                 	db	104	;'h'
   531  007EE9  65                 	db	101	;'e'
   532  007EEA  20                 	db	32
   533  007EEB  70                 	db	112	;'p'
   534  007EEC  6C                 	db	108	;'l'
   535  007EED  61                 	db	97	;'a'
   536  007EEE  63                 	db	99	;'c'
   537  007EEF  65                 	db	101	;'e'
   538  007EF0  20                 	db	32
   539  007EF1  6F                 	db	111	;'o'
   540  007EF2  72                 	db	114	;'r'
   541  007EF3  69                 	db	105	;'i'
   542  007EF4  65                 	db	101	;'e'
   543  007EF5  6E                 	db	110	;'n'
   544  007EF6  74                 	db	116	;'t'
   545  007EF7  61                 	db	97	;'a'
   546  007EF8  74                 	db	116	;'t'
   547  007EF9  69                 	db	105	;'i'
   548  007EFA  6F                 	db	111	;'o'
   549  007EFB  6E                 	db	110	;'n'
   550  007EFC  3A                 	db	58	;':'
   551  007EFD  00                 	db	0
   552  007EFE                     STR_11:
   553  007EFE  0A                 	db	10
   554  007EFF  45                 	db	69	;'E'
   555  007F00  6E                 	db	110	;'n'
   556  007F01  74                 	db	116	;'t'
   557  007F02  65                 	db	101	;'e'
   558  007F03  72                 	db	114	;'r'
   559  007F04  20                 	db	32
   560  007F05  74                 	db	116	;'t'
   561  007F06  68                 	db	104	;'h'
   562  007F07  65                 	db	101	;'e'
   563  007F08  20                 	db	32
   564  007F09  70                 	db	112	;'p'
   565  007F0A  6C                 	db	108	;'l'
   566  007F0B  61                 	db	97	;'a'
   567  007F0C  63                 	db	99	;'c'
   568  007F0D  65                 	db	101	;'e'
   569  007F0E  20                 	db	32
   570  007F0F  70                 	db	112	;'p'
   571  007F10  6F                 	db	111	;'o'
   572  007F11  73                 	db	115	;'s'
   573  007F12  69                 	db	105	;'i'
   574  007F13  74                 	db	116	;'t'
   575  007F14  69                 	db	105	;'i'
   576  007F15  6F                 	db	111	;'o'
   577  007F16  6E                 	db	110	;'n'
   578  007F17  20                 	db	32
   579  007F18  58                 	db	88	;'X'
   580  007F19  3A                 	db	58	;':'
   581  007F1A  00                 	db	0
   582  007F1B                     STR_12:
   583  007F1B  0A                 	db	10
   584  007F1C  45                 	db	69	;'E'
   585  007F1D  6E                 	db	110	;'n'
   586  007F1E  74                 	db	116	;'t'
   587  007F1F  65                 	db	101	;'e'
   588  007F20  72                 	db	114	;'r'
   589  007F21  20                 	db	32
   590  007F22  74                 	db	116	;'t'
   591  007F23  68                 	db	104	;'h'
   592  007F24  65                 	db	101	;'e'
   593  007F25  20                 	db	32
   594  007F26  70                 	db	112	;'p'
   595  007F27  6C                 	db	108	;'l'
   596  007F28  61                 	db	97	;'a'
   597  007F29  63                 	db	99	;'c'
   598  007F2A  65                 	db	101	;'e'
   599  007F2B  20                 	db	32
   600  007F2C  70                 	db	112	;'p'
   601  007F2D  6F                 	db	111	;'o'
   602  007F2E  73                 	db	115	;'s'
   603  007F2F  69                 	db	105	;'i'
   604  007F30  74                 	db	116	;'t'
   605  007F31  69                 	db	105	;'i'
   606  007F32  6F                 	db	111	;'o'
   607  007F33  6E                 	db	110	;'n'
   608  007F34  20                 	db	32
   609  007F35  59                 	db	89	;'Y'
   610  007F36  3A                 	db	58	;':'
   611  007F37  00                 	db	0
   612  007F38                     STR_10:
   613  007F38  0A                 	db	10
   614  007F39  45                 	db	69	;'E'
   615  007F3A  6E                 	db	110	;'n'
   616  007F3B  74                 	db	116	;'t'
   617  007F3C  65                 	db	101	;'e'
   618  007F3D  72                 	db	114	;'r'
   619  007F3E  20                 	db	32
   620  007F3F  74                 	db	116	;'t'
   621  007F40  68                 	db	104	;'h'
   622  007F41  65                 	db	101	;'e'
   623  007F42  20                 	db	32
   624  007F43  70                 	db	112	;'p'
   625  007F44  69                 	db	105	;'i'
   626  007F45  63                 	db	99	;'c'
   627  007F46  6B                 	db	107	;'k'
   628  007F47  20                 	db	32
   629  007F48  6F                 	db	111	;'o'
   630  007F49  72                 	db	114	;'r'
   631  007F4A  69                 	db	105	;'i'
   632  007F4B  65                 	db	101	;'e'
   633  007F4C  6E                 	db	110	;'n'
   634  007F4D  74                 	db	116	;'t'
   635  007F4E  61                 	db	97	;'a'
   636  007F4F  74                 	db	116	;'t'
   637  007F50  69                 	db	105	;'i'
   638  007F51  6F                 	db	111	;'o'
   639  007F52  6E                 	db	110	;'n'
   640  007F53  3A                 	db	58	;':'
   641  007F54  00                 	db	0
   642  007F55                     STR_8:
   643  007F55  0A                 	db	10
   644  007F56  45                 	db	69	;'E'
   645  007F57  6E                 	db	110	;'n'
   646  007F58  74                 	db	116	;'t'
   647  007F59  65                 	db	101	;'e'
   648  007F5A  72                 	db	114	;'r'
   649  007F5B  20                 	db	32
   650  007F5C  74                 	db	116	;'t'
   651  007F5D  68                 	db	104	;'h'
   652  007F5E  65                 	db	101	;'e'
   653  007F5F  20                 	db	32
   654  007F60  70                 	db	112	;'p'
   655  007F61  69                 	db	105	;'i'
   656  007F62  63                 	db	99	;'c'
   657  007F63  6B                 	db	107	;'k'
   658  007F64  20                 	db	32
   659  007F65  70                 	db	112	;'p'
   660  007F66  6F                 	db	111	;'o'
   661  007F67  73                 	db	115	;'s'
   662  007F68  69                 	db	105	;'i'
   663  007F69  74                 	db	116	;'t'
   664  007F6A  69                 	db	105	;'i'
   665  007F6B  6F                 	db	111	;'o'
   666  007F6C  6E                 	db	110	;'n'
   667  007F6D  20                 	db	32
   668  007F6E  58                 	db	88	;'X'
   669  007F6F  3A                 	db	58	;':'
   670  007F70  00                 	db	0
   671  007F71                     STR_9:
   672  007F71  0A                 	db	10
   673  007F72  45                 	db	69	;'E'
   674  007F73  6E                 	db	110	;'n'
   675  007F74  74                 	db	116	;'t'
   676  007F75  65                 	db	101	;'e'
   677  007F76  72                 	db	114	;'r'
   678  007F77  20                 	db	32
   679  007F78  74                 	db	116	;'t'
   680  007F79  68                 	db	104	;'h'
   681  007F7A  65                 	db	101	;'e'
   682  007F7B  20                 	db	32
   683  007F7C  70                 	db	112	;'p'
   684  007F7D  69                 	db	105	;'i'
   685  007F7E  63                 	db	99	;'c'
   686  007F7F  6B                 	db	107	;'k'
   687  007F80  20                 	db	32
   688  007F81  70                 	db	112	;'p'
   689  007F82  6F                 	db	111	;'o'
   690  007F83  73                 	db	115	;'s'
   691  007F84  69                 	db	105	;'i'
   692  007F85  74                 	db	116	;'t'
   693  007F86  69                 	db	105	;'i'
   694  007F87  6F                 	db	111	;'o'
   695  007F88  6E                 	db	110	;'n'
   696  007F89  20                 	db	32
   697  007F8A  59                 	db	89	;'Y'
   698  007F8B  3A                 	db	58	;':'
   699  007F8C  00                 	db	0
   700  007F8D                     STR_4:
   701  007F8D  0A                 	db	10
   702  007F8E  54                 	db	84	;'T'
   703  007F8F  68                 	db	104	;'h'
   704  007F90  65                 	db	101	;'e'
   705  007F91  20                 	db	32
   706  007F92  63                 	db	99	;'c'
   707  007F93  75                 	db	117	;'u'
   708  007F94  72                 	db	114	;'r'
   709  007F95  72                 	db	114	;'r'
   710  007F96  65                 	db	101	;'e'
   711  007F97  6E                 	db	110	;'n'
   712  007F98  74                 	db	116	;'t'
   713  007F99  20                 	db	32
   714  007F9A  73                 	db	115	;'s'
   715  007F9B  65                 	db	101	;'e'
   716  007F9C  71                 	db	113	;'q'
   717  007F9D  75                 	db	117	;'u'
   718  007F9E  65                 	db	101	;'e'
   719  007F9F  6E                 	db	110	;'n'
   720  007FA0  63                 	db	99	;'c'
   721  007FA1  65                 	db	101	;'e'
   722  007FA2  20                 	db	32
   723  007FA3  69                 	db	105	;'i'
   724  007FA4  73                 	db	115	;'s'
   725  007FA5  3A                 	db	58	;':'
   726  007FA6  20                 	db	32
   727  007FA7  00                 	db	0
   728  007FA8                     STR_6:
   729  007FA8  0A                 	db	10
   730  007FA9  54                 	db	84	;'T'
   731  007FAA  68                 	db	104	;'h'
   732  007FAB  65                 	db	101	;'e'
   733  007FAC  20                 	db	32
   734  007FAD  43                 	db	67	;'C'
   735  007FAE  75                 	db	117	;'u'
   736  007FAF  72                 	db	114	;'r'
   737  007FB0  72                 	db	114	;'r'
   738  007FB1  65                 	db	101	;'e'
   739  007FB2  6E                 	db	110	;'n'
   740  007FB3  74                 	db	116	;'t'
   741  007FB4  20                 	db	32
   742  007FB5  73                 	db	115	;'s'
   743  007FB6  65                 	db	101	;'e'
   744  007FB7  71                 	db	113	;'q'
   745  007FB8  75                 	db	117	;'u'
   746  007FB9  65                 	db	101	;'e'
   747  007FBA  6E                 	db	110	;'n'
   748  007FBB  63                 	db	99	;'c'
   749  007FBC  65                 	db	101	;'e'
   750  007FBD  20                 	db	32
   751  007FBE  69                 	db	105	;'i'
   752  007FBF  73                 	db	115	;'s'
   753  007FC0  3A                 	db	58	;':'
   754  007FC1  00                 	db	0
   755  007FC2                     STR_16:
   756  007FC2  0A                 	db	10
   757  007FC3  63                 	db	99	;'c'
   758  007FC4  6F                 	db	111	;'o'
   759  007FC5  6D                 	db	109	;'m'
   760  007FC6  70                 	db	112	;'p'
   761  007FC7  6F                 	db	111	;'o'
   762  007FC8  6E                 	db	110	;'n'
   763  007FC9  65                 	db	101	;'e'
   764  007FCA  6E                 	db	110	;'n'
   765  007FCB  74                 	db	116	;'t'
   766  007FCC  20                 	db	32
   767  007FCD  72                 	db	114	;'r'
   768  007FCE  65                 	db	101	;'e'
   769  007FCF  6D                 	db	109	;'m'
   770  007FD0  6F                 	db	111	;'o'
   771  007FD1  76                 	db	118	;'v'
   772  007FD2  65                 	db	101	;'e'
   773  007FD3  64                 	db	100	;'d'
   774  007FD4  3A                 	db	58	;':'
   775  007FD5  20                 	db	32
   776  007FD6  00                 	db	0
   777  007FD7                     STR_14:
   778  007FD7  0A                 	db	10
   779  007FD8  0A                 	db	10
   780  007FD9  43                 	db	67	;'C'
   781  007FDA  6F                 	db	111	;'o'
   782  007FDB  6D                 	db	109	;'m'
   783  007FDC  70                 	db	112	;'p'
   784  007FDD  6F                 	db	111	;'o'
   785  007FDE  6E                 	db	110	;'n'
   786  007FDF  65                 	db	101	;'e'
   787  007FE0  6E                 	db	110	;'n'
   788  007FE1  74                 	db	116	;'t'
   789  007FE2  20                 	db	32
   790  007FE3  41                 	db	65	;'A'
   791  007FE4  64                 	db	100	;'d'
   792  007FE5  64                 	db	100	;'d'
   793  007FE6  65                 	db	101	;'e'
   794  007FE7  64                 	db	100	;'d'
   795  007FE8  3A                 	db	58	;':'
   796  007FE9  20                 	db	32
   797  007FEA  00                 	db	0
   798  007FEB                     STR_2:
   799  007FEB  0A                 	db	10
   800  007FEC  53                 	db	83	;'S'
   801  007FED  74                 	db	116	;'t'
   802  007FEE  61                 	db	97	;'a'
   803  007FEF  72                 	db	114	;'r'
   804  007FF0  74                 	db	116	;'t'
   805  007FF1  69                 	db	105	;'i'
   806  007FF2  6E                 	db	110	;'n'
   807  007FF3  67                 	db	103	;'g'
   808  007FF4  20                 	db	32
   809  007FF5  73                 	db	115	;'s'
   810  007FF6  65                 	db	101	;'e'
   811  007FF7  71                 	db	113	;'q'
   812  007FF8  75                 	db	117	;'u'
   813  007FF9  65                 	db	101	;'e'
   814  007FFA  6E                 	db	110	;'n'
   815  007FFB  63                 	db	99	;'c'
   816  007FFC  65                 	db	101	;'e'
   817  007FFD  3A                 	db	58	;':'
   818  007FFE  00                 	db	0
   819  007FFF  00                 	db	0	; dummy byte at the end
   820  0000                     
   821                           ; #config settings
   822                           
   823                           	psect	cinit
   824  002DC6                     __pcinit:
   825                           	callstack 0
   826  002DC6                     start_initialization:
   827                           	callstack 0
   828  002DC6                     __initialization:
   829                           	callstack 0
   830                           
   831                           ; Initialize objects allocated to BANK0 (24 bytes)
   832                           ; load TBLPTR registers with __pidataBANK0
   833  002DC6  0E94               	movlw	low __pidataBANK0
   834  002DC8  6EF6               	movwf	tblptrl,c
   835  002DCA  0E30               	movlw	high __pidataBANK0
   836  002DCC  6EF7               	movwf	tblptrh,c
   837  002DCE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   838  002DD0  6EF8               	movwf	tblptru,c
   839  002DD2  EE00  F0D5         	lfsr	0,__pdataBANK0
   840  002DD6  EE10 F018          	lfsr	1,24
   841  002DDA                     copy_data0:
   842  002DDA  0009               	tblrd		*+
   843  002DDC  CFF5 FFEE          	movff	tablat,postinc0
   844  002DE0  50E5               	movf	postdec1,w,c
   845  002DE2  50E1               	movf	fsr1l,w,c
   846  002DE4  E1FA               	bnz	copy_data0
   847                           
   848                           ; Initialize objects allocated to COMRAM (2 bytes)
   849                           ; load TBLPTR registers with __pidataCOMRAM
   850  002DE6  0EB8               	movlw	low __pidataCOMRAM
   851  002DE8  6EF6               	movwf	tblptrl,c
   852  002DEA  0E30               	movlw	high __pidataCOMRAM
   853  002DEC  6EF7               	movwf	tblptrh,c
   854  002DEE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   855  002DF0  6EF8               	movwf	tblptru,c
   856  002DF2  0009               	tblrd		*+	;fetch initializer
   857  002DF4  CFF5 F075          	movff	tablat,__pdataCOMRAM
   858  002DF8  0009               	tblrd		*+	;fetch initializer
   859  002DFA  CFF5 F076          	movff	tablat,__pdataCOMRAM+1
   860                           
   861                           ; Clear objects allocated to BANK0 (52 bytes)
   862  002DFE  EE00  F080         	lfsr	0,__pbssBANK0
   863  002E02  0E34               	movlw	52
   864  002E04                     clear_0:
   865  002E04  6AEE               	clrf	postinc0,c
   866  002E06  06E8               	decf	wreg,f,c
   867  002E08  E1FD               	bnz	clear_0
   868                           
   869                           ; Clear objects allocated to COMRAM (26 bytes)
   870  002E0A  EE00  F05B         	lfsr	0,__pbssCOMRAM
   871  002E0E  0E1A               	movlw	26
   872  002E10                     clear_1:
   873  002E10  6AEE               	clrf	postinc0,c
   874  002E12  06E8               	decf	wreg,f,c
   875  002E14  E1FD               	bnz	clear_1
   876  002E16                     end_of_initialization:
   877                           	callstack 0
   878  002E16                     __end_of__initialization:
   879                           	callstack 0
   880  002E16  9077               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   881  002E18  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   882  002E1A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   883  002E1C  6EF8               	movwf	tblptru,c
   884  002E1E  0100               	movlb	0
   885  002E20  EF3B  F018         	goto	_main	;jump to C main() function
   886                           
   887                           	psect	bssCOMRAM
   888  00005B                     __pbssCOMRAM:
   889                           	callstack 0
   890  00005B                     _X_Pick_D:
   891                           	callstack 0
   892  00005B                     	ds	2
   893  00005D                     _Angle_diff:
   894                           	callstack 0
   895  00005D                     	ds	2
   896  00005F                     _Y_diff:
   897                           	callstack 0
   898  00005F                     	ds	2
   899  000061                     _X_diff:
   900                           	callstack 0
   901  000061                     	ds	2
   902  000063                     _Place_Angle:
   903                           	callstack 0
   904  000063                     	ds	2
   905  000065                     _Pick_Angle:
   906                           	callstack 0
   907  000065                     	ds	2
   908  000067                     _Y_Place:
   909                           	callstack 0
   910  000067                     	ds	2
   911  000069                     _Y_Pick:
   912                           	callstack 0
   913  000069                     	ds	2
   914  00006B                     _X_Place:
   915                           	callstack 0
   916  00006B                     	ds	2
   917  00006D                     _X_Pick:
   918                           	callstack 0
   919  00006D                     	ds	2
   920  00006F                     _RX_Char:
   921                           	callstack 0
   922  00006F                     	ds	1
   923  000070                     _Rot_dir:
   924                           	callstack 0
   925  000070                     	ds	1
   926  000071                     _Y_dir:
   927                           	callstack 0
   928  000071                     	ds	1
   929  000072                     _X_dir:
   930                           	callstack 0
   931  000072                     	ds	1
   932  000073                     _stop:
   933                           	callstack 0
   934  000073                     	ds	1
   935  000074                     _New_char_RX:
   936                           	callstack 0
   937  000074                     	ds	1
   938                           
   939                           	psect	dataCOMRAM
   940  000075                     __pdataCOMRAM:
   941                           	callstack 0
   942  000075                     add_component@F3128:
   943                           	callstack 0
   944  000075                     	ds	1
   945  000076                     _State:
   946                           	callstack 0
   947  000076                     	ds	1
   948                           
   949                           	psect	bssBANK0
   950  000080                     __pbssBANK0:
   951                           	callstack 0
   952  000080                     _testarray:
   953                           	callstack 0
   954  000080                     	ds	30
   955  00009E                     roundf@F528:
   956                           	callstack 0
   957  00009E                     	ds	4
   958  0000A2                     _angle_diff:
   959                           	callstack 0
   960  0000A2                     	ds	2
   961  0000A4                     _Place_Angle_D:
   962                           	callstack 0
   963  0000A4                     	ds	2
   964  0000A6                     _Y_Place_D:
   965                           	callstack 0
   966  0000A6                     	ds	2
   967  0000A8                     _X_Place_D:
   968                           	callstack 0
   969  0000A8                     	ds	2
   970  0000AA                     _Pick_Angle_D:
   971                           	callstack 0
   972  0000AA                     	ds	2
   973  0000AC                     _Y_Pick_D:
   974                           	callstack 0
   975  0000AC                     	ds	2
   976  0000AE                     _rotation:
   977                           	callstack 0
   978  0000AE                     	ds	2
   979  0000B0                     _displacement_Y:
   980                           	callstack 0
   981  0000B0                     	ds	2
   982  0000B2                     _displacement_X:
   983                           	callstack 0
   984  0000B2                     	ds	2
   985                           
   986                           	psect	dataBANK0
   987  0000D5                     __pdataBANK0:
   988                           	callstack 0
   989  0000D5                     	ds	4
   990  0000D9                     	ds	4
   991  0000DD                     _lenth_of_array:
   992                           	callstack 0
   993  0000DD                     	ds	2
   994  0000DF                     _input_str:
   995                           	callstack 0
   996  0000DF                     	ds	10
   997  0000E9                     _sequence:
   998                           	callstack 0
   999  0000E9                     	ds	4
  1000                           
  1001                           	psect	cstackBANK0
  1002  0000B4                     __pcstackBANK0:
  1003                           	callstack 0
  1004  0000B4                     ??___fltol:
  1005  0000B4                     pick_and_place@Componnt:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x0
  1009  0000B4                     	ds	1
  1010  0000B5                     pick_and_place@i:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x1
  1014  0000B5                     	ds	2
  1015  0000B7                     _pick_and_place$584:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x3
  1019  0000B7                     	ds	2
  1020  0000B9                     pick_and_place@i_585:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x5
  1024  0000B9                     	ds	2
  1025  0000BB                     _pick_and_place$587:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x7
  1029  0000BB                     	ds	2
  1030  0000BD                     pick_and_place@i_588:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x9
  1034  0000BD                     	ds	2
  1035  0000BF                     _pick_and_place$590:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0xB
  1039  0000BF                     	ds	2
  1040  0000C1                     pick_and_place@i_594:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xD
  1044  0000C1                     	ds	2
  1045  0000C3                     _pick_and_place$595:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0xF
  1049  0000C3                     	ds	2
  1050  0000C5                     pick_and_place@i_596:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x11
  1054  0000C5                     	ds	2
  1055  0000C7                     _pick_and_place$597:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x13
  1059  0000C7                     	ds	2
  1060  0000C9                     pick_and_place@i_598:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x15
  1064  0000C9                     	ds	2
  1065  0000CB                     _pick_and_place$599:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x17
  1069  0000CB                     	ds	2
  1070  0000CD                     pick_and_place@i_591:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x19
  1074  0000CD                     	ds	2
  1075  0000CF                     pick_and_place@i_593:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x1B
  1079  0000CF                     	ds	2
  1080  0000D1                     pick_and_place@i_600:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x1D
  1084  0000D1                     	ds	2
  1085  0000D3                     pick_and_place@i_601:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x1F
  1089  0000D3                     	ds	2
  1090                           
  1091                           	psect	cstackCOMRAM
  1092  000001                     __pcstackCOMRAM:
  1093                           	callstack 0
  1094  000001                     ??_Rx_char_USART:
  1095  000001                     
  1096                           ; 2 bytes @ 0x0
  1097  000001                     	ds	5
  1098  000006                     Rx_char_USART@i:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x5
  1102  000006                     	ds	2
  1103  000008                     ?_strlen:
  1104                           	callstack 0
  1105  000008                     ?_isspace:
  1106                           	callstack 0
  1107  000008                     ?_isdigit:
  1108                           	callstack 0
  1109  000008                     ?___wmul:
  1110                           	callstack 0
  1111  000008                     ?___fladd:
  1112                           	callstack 0
  1113  000008                     ?___flmul:
  1114                           	callstack 0
  1115  000008                     ?___flneg:
  1116                           	callstack 0
  1117  000008                     ?___xxtofl:
  1118                           	callstack 0
  1119  000008                     serial_tx_char@val:
  1120                           	callstack 0
  1121  000008                     fetch_parameters@Componnt:
  1122                           	callstack 0
  1123  000008                     ms_delay@val:
  1124                           	callstack 0
  1125  000008                     ___wmul@multiplier:
  1126                           	callstack 0
  1127  000008                     isdigit@c:
  1128                           	callstack 0
  1129  000008                     isspace@c:
  1130                           	callstack 0
  1131  000008                     strlen@s:
  1132                           	callstack 0
  1133  000008                     ___flneg@f1:
  1134                           	callstack 0
  1135  000008                     ___fladd@b:
  1136                           	callstack 0
  1137  000008                     ___flmul@b:
  1138                           	callstack 0
  1139  000008                     ___xxtofl@val:
  1140                           	callstack 0
  1141                           
  1142                           ; 4 bytes @ 0x7
  1143  000008                     	ds	1
  1144  000009                     print_string@strng:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x8
  1148  000009                     	ds	1
  1149  00000A                     ??_isspace:
  1150  00000A                     ??_isdigit:
  1151  00000A                     ms_delay@i:
  1152                           	callstack 0
  1153  00000A                     ___wmul@multiplicand:
  1154                           	callstack 0
  1155  00000A                     strlen@a:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x9
  1159  00000A                     	ds	1
  1160  00000B                     ??_print_string:
  1161                           
  1162                           ; 1 bytes @ 0xA
  1163  00000B                     	ds	1
  1164  00000C                     ??___xxtofl:
  1165  00000C                     ?___memrchr:
  1166                           	callstack 0
  1167  00000C                     ms_delay@j:
  1168                           	callstack 0
  1169  00000C                     ___wmul@product:
  1170                           	callstack 0
  1171  00000C                     memmove@d1:
  1172                           	callstack 0
  1173  00000C                     strncat@d:
  1174                           	callstack 0
  1175  00000C                     ___memrchr@m:
  1176                           	callstack 0
  1177  00000C                     ___fladd@a:
  1178                           	callstack 0
  1179  00000C                     ___flmul@a:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0xB
  1183  00000C                     	ds	1
  1184  00000D                     print_string@i:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0xC
  1188  00000D                     	ds	1
  1189  00000E                     X_axis@direction:
  1190                           	callstack 0
  1191  00000E                     Y_axis@direction:
  1192                           	callstack 0
  1193  00000E                     Z_axis@direction:
  1194                           	callstack 0
  1195  00000E                     Twister@direction:
  1196                           	callstack 0
  1197  00000E                     _isspace$1085:
  1198                           	callstack 0
  1199  00000E                     memmove@s1:
  1200                           	callstack 0
  1201  00000E                     strncat@s:
  1202                           	callstack 0
  1203  00000E                     ___memrchr@c:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0xD
  1207  00000E                     	ds	1
  1208  00000F                     ??_change_sequence:
  1209  00000F                     ??_return_to_initial:
  1210  00000F                     ?_atoi:
  1211                           	callstack 0
  1212  00000F                     atoi@s:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0xE
  1216  00000F                     	ds	1
  1217  000010                     ??___fladd:
  1218  000010                     ??___flmul:
  1219  000010                     ___xxtofl@sign:
  1220                           	callstack 0
  1221  000010                     return_to_initial@i:
  1222                           	callstack 0
  1223  000010                     memmove@n:
  1224                           	callstack 0
  1225  000010                     strncat@n:
  1226                           	callstack 0
  1227  000010                     ___memrchr@n:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0xF
  1231  000010                     	ds	1
  1232  000011                     ??_atoi:
  1233  000011                     ___xxtofl@exp:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x10
  1237  000011                     	ds	1
  1238  000012                     ??_memmove:
  1239  000012                     ??___memrchr:
  1240  000012                     change_sequence@i:
  1241                           	callstack 0
  1242  000012                     return_to_initial@i_604:
  1243                           	callstack 0
  1244  000012                     ___xxtofl@arg:
  1245                           	callstack 0
  1246                           
  1247                           ; 4 bytes @ 0x11
  1248  000012                     	ds	2
  1249  000014                     ___fladd@signs:
  1250                           	callstack 0
  1251  000014                     ___flmul@sign:
  1252                           	callstack 0
  1253  000014                     return_to_initial@i_605:
  1254                           	callstack 0
  1255  000014                     memmove@d:
  1256                           	callstack 0
  1257  000014                     ___memrchr@s:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x13
  1261  000014                     	ds	1
  1262  000015                     ___fladd@aexp:
  1263                           	callstack 0
  1264  000015                     atoi@neg:
  1265                           	callstack 0
  1266  000015                     ___flmul@grs:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x14
  1270  000015                     	ds	1
  1271  000016                     ?_strrchr:
  1272                           	callstack 0
  1273  000016                     ?___fldiv:
  1274                           	callstack 0
  1275  000016                     ___fladd@bexp:
  1276                           	callstack 0
  1277  000016                     return_to_initial@i_606:
  1278                           	callstack 0
  1279  000016                     memmove@s:
  1280                           	callstack 0
  1281  000016                     strrchr@s:
  1282                           	callstack 0
  1283  000016                     ___fldiv@b:
  1284                           	callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x15
  1287  000016                     	ds	1
  1288  000017                     ___fladd@grs:
  1289                           	callstack 0
  1290  000017                     _atoi$1067:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x16
  1294  000017                     	ds	1
  1295  000018                     ?___flsub:
  1296                           	callstack 0
  1297  000018                     strrchr@c:
  1298                           	callstack 0
  1299  000018                     ___flsub@b:
  1300                           	callstack 0
  1301                           
  1302                           ; 4 bytes @ 0x17
  1303  000018                     	ds	1
  1304  000019                     ___flmul@aexp:
  1305                           	callstack 0
  1306  000019                     _atoi$1069:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x18
  1310  000019                     	ds	1
  1311  00001A                     ___flmul@bexp:
  1312                           	callstack 0
  1313  00001A                     remove_component@ptr:
  1314                           	callstack 0
  1315  00001A                     ___fldiv@a:
  1316                           	callstack 0
  1317                           
  1318                           ; 4 bytes @ 0x19
  1319  00001A                     	ds	1
  1320  00001B                     _atoi$1068:
  1321                           	callstack 0
  1322  00001B                     ___flmul@prod:
  1323                           	callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x1A
  1326  00001B                     	ds	1
  1327  00001C                     remove_component@indxToDel:
  1328                           	callstack 0
  1329  00001C                     atoi@n:
  1330                           	callstack 0
  1331  00001C                     ___flsub@a:
  1332                           	callstack 0
  1333                           
  1334                           ; 4 bytes @ 0x1B
  1335  00001C                     	ds	2
  1336  00001E                     ??___fldiv:
  1337  00001E                     add_component@add_componnt:
  1338                           	callstack 0
  1339  00001E                     remove_component@rm_comp:
  1340                           	callstack 0
  1341                           
  1342                           ; 1 bytes @ 0x1D
  1343  00001E                     	ds	1
  1344  00001F                     ___flmul@temp:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x1E
  1348  00001F                     	ds	1
  1349  000020                     
  1350                           ; 1 bytes @ 0x1F
  1351  000020                     	ds	2
  1352  000022                     ___fldiv@rem:
  1353                           	callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x21
  1356  000022                     	ds	4
  1357  000026                     ___fldiv@sign:
  1358                           	callstack 0
  1359                           
  1360                           ; 1 bytes @ 0x25
  1361  000026                     	ds	1
  1362  000027                     ___fldiv@new_exp:
  1363                           	callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x26
  1366  000027                     	ds	2
  1367  000029                     ___fldiv@grs:
  1368                           	callstack 0
  1369                           
  1370                           ; 4 bytes @ 0x28
  1371  000029                     	ds	4
  1372  00002D                     ___fldiv@bexp:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x2C
  1376  00002D                     	ds	1
  1377  00002E                     ___fldiv@aexp:
  1378                           	callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x2D
  1381  00002E                     	ds	1
  1382  00002F                     ___flge@ff1:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x2E
  1386  00002F                     	ds	4
  1387  000033                     ___flge@ff2:
  1388                           	callstack 0
  1389                           
  1390                           ; 4 bytes @ 0x32
  1391  000033                     	ds	4
  1392  000037                     ??___flge:
  1393                           
  1394                           ; 1 bytes @ 0x36
  1395  000037                     	ds	4
  1396  00003B                     ??_pick_and_place:
  1397  00003B                     ?_roundf:
  1398                           	callstack 0
  1399  00003B                     roundf@x:
  1400                           	callstack 0
  1401                           
  1402                           ; 4 bytes @ 0x3A
  1403  00003B                     	ds	2
  1404  00003D                     ??_start_up_menu:
  1405                           
  1406                           ; 1 bytes @ 0x3C
  1407  00003D                     	ds	2
  1408  00003F                     ??_roundf:
  1409                           
  1410                           ; 1 bytes @ 0x3E
  1411  00003F                     	ds	1
  1412  000040                     start_up_menu@i:
  1413                           	callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x3F
  1416  000040                     	ds	3
  1417  000043                     _roundf$1336:
  1418                           	callstack 0
  1419                           
  1420                           ; 4 bytes @ 0x42
  1421  000043                     	ds	4
  1422  000047                     roundf@e:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x46
  1426  000047                     	ds	2
  1427  000049                     _roundf$1335:
  1428                           	callstack 0
  1429                           
  1430                           ; 4 bytes @ 0x48
  1431  000049                     	ds	4
  1432  00004D                     roundf@u:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x4C
  1436  00004D                     	ds	4
  1437  000051                     roundf@y:
  1438                           	callstack 0
  1439                           
  1440                           ; 4 bytes @ 0x50
  1441  000051                     	ds	4
  1442  000055                     ?___fltol:
  1443                           	callstack 0
  1444  000055                     ___fltol@f1:
  1445                           	callstack 0
  1446                           
  1447                           ; 4 bytes @ 0x54
  1448  000055                     	ds	4
  1449  000059                     ___fltol@sign1:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x58
  1453  000059                     	ds	1
  1454  00005A                     ___fltol@exp1:
  1455                           	callstack 0
  1456                           
  1457                           ; 1 bytes @ 0x59
  1458  00005A                     	ds	1
  1459  00005B                     
  1460                           ; 1 bytes @ 0x5A
  1461 ;;
  1462 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1463 ;;
  1464 ;; *************** function _main *****************
  1465 ;; Defined at:
  1466 ;;		line 188 in file "main.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  RX_Char         1    0        unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1480 ;;      Params:         0       0       0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels required when called: 5
  1486 ;; This function calls:
  1487 ;;		_init_PORTS
  1488 ;;		_init_USART
  1489 ;;		_init_interrupts
  1490 ;;		_start_up_menu
  1491 ;; This function is called by:
  1492 ;;		Startup code after reset
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text0
  1497  003076                     __ptext0:
  1498                           	callstack 0
  1499  003076                     _main:
  1500                           	callstack 26
  1501  003076  FFFF               	dw	65535	; assembler added errata NOP
  1502                           
  1503                           ;main.c: 192:     init_PORTS();
  1504  003078  EC1A  F018         	call	_init_PORTS	;wreg free
  1505  00307C                     
  1506                           ;main.c: 193:     init_USART();
  1507  00307C  ECC8  F017         	call	_init_USART	;wreg free
  1508  003080                     
  1509                           ;main.c: 194:     init_interrupts();
  1510  003080  EC56  F018         	call	_init_interrupts	;wreg free
  1511  003084                     
  1512                           ;main.c: 196:     (INTCONbits.GIE = 1);
  1513  003084  8EF2               	bsf	242,7,c	;volatile
  1514  003086                     l4609:
  1515  003086  FFFF               	dw	65535	; assembler added errata NOP
  1516                           
  1517                           ;main.c: 199:         start_up_menu();
  1518  003088  ECCD  F00F         	call	_start_up_menu	;wreg free
  1519  00308C  EF43  F018         	goto	l4609
  1520  003090  EF43  F000         	goto	start
  1521  003094                     __end_of_main:
  1522                           	callstack 0
  1523                           
  1524 ;; *************** function _start_up_menu *****************
  1525 ;; Defined at:
  1526 ;;		line 207 in file "main.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  i               2   63[COMRAM] int 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1540 ;;      Params:         0       0       0       0       0       0       0
  1541 ;;      Locals:         2       0       0       0       0       0       0
  1542 ;;      Temps:          3       0       0       0       0       0       0
  1543 ;;      Totals:         5       0       0       0       0       0       0
  1544 ;;Total ram usage:        5 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 4
  1547 ;; This function calls:
  1548 ;;		_add_component
  1549 ;;		_change_sequence
  1550 ;;		_pick_and_place
  1551 ;;		_print_string
  1552 ;;		_remove_component
  1553 ;;		_return_to_initial
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text1
  1560  001F9A                     __ptext1:
  1561                           	callstack 0
  1562  001F9A                     _start_up_menu:
  1563                           	callstack 0
  1564  001F9A  FFFF               	dw	65535	; assembler added errata NOP
  1565  001F9C                     
  1566                           ;main.c: 209:     print_string("\n\n1. Start Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component");
  1567  001F9C  0E8D               	movlw	low STR_1
  1568  001F9E  6E09               	movwf	print_string@strng^0,c
  1569  001FA0  0E7D               	movlw	high STR_1
  1570  001FA2  6E0A               	movwf	(print_string@strng+1)^0,c
  1571  001FA4  ECE8  F015         	call	_print_string	;wreg free
  1572  001FA8                     l4561:
  1573  001FA8  FFFF               	dw	65535	; assembler added errata NOP
  1574                           
  1575                           ;main.c: 212:         if(New_char_RX){
  1576  001FAA  5074               	movf	_New_char_RX^0,w,c
  1577  001FAC  B4D8               	btfsc	status,2,c
  1578  001FAE  EFDB  F00F         	goto	u5461
  1579  001FB2  EFDE  F00F         	goto	u5460
  1580  001FB6                     u5461:
  1581  001FB6  FFFF               	dw	65535	; assembler added errata NOP
  1582  001FB8  EFD4  F00F         	goto	l4561
  1583  001FBC                     u5460:
  1584  001FBC  FFFF               	dw	65535	; assembler added errata NOP
  1585  001FBE                     
  1586                           ;main.c: 213:             New_char_RX=0;
  1587  001FBE  0E00               	movlw	0
  1588  001FC0  6E74               	movwf	_New_char_RX^0,c
  1589                           
  1590                           ;main.c: 214:             switch(State){
  1591  001FC2  EF4D  F010         	goto	l4593
  1592  001FC6                     l4565:
  1593  001FC6  FFFF               	dw	65535	; assembler added errata NOP
  1594                           
  1595                           ;main.c: 216:                     print_string("\nStarting sequence:");
  1596  001FC8  0EEB               	movlw	low STR_2
  1597  001FCA  6E09               	movwf	print_string@strng^0,c
  1598  001FCC  0E7F               	movlw	high STR_2
  1599  001FCE  6E0A               	movwf	(print_string@strng+1)^0,c
  1600  001FD0  ECE8  F015         	call	_print_string	;wreg free
  1601                           
  1602                           ;main.c: 217:                     print_string(sequence);
  1603  001FD4  0EE9               	movlw	low _sequence
  1604  001FD6  6E09               	movwf	print_string@strng^0,c
  1605  001FD8  0E00               	movlw	high _sequence
  1606  001FDA  6E0A               	movwf	(print_string@strng+1)^0,c
  1607  001FDC  ECE8  F015         	call	_print_string	;wreg free
  1608                           
  1609                           ;main.c: 218:                     print_string("\nEnter 'Q' to exit to MAIN MENU");
  1610  001FE0  0EC0               	movlw	low STR_3
  1611  001FE2  6E09               	movwf	print_string@strng^0,c
  1612  001FE4  0E7E               	movlw	high STR_3
  1613  001FE6  6E0A               	movwf	(print_string@strng+1)^0,c
  1614  001FE8  ECE8  F015         	call	_print_string	;wreg free
  1615                           
  1616                           ;main.c: 219:                     while(!New_char_RX){
  1617  001FEC  EF27  F010         	goto	l4575
  1618  001FF0                     l4567:
  1619  001FF0  FFFF               	dw	65535	; assembler added errata NOP
  1620                           
  1621                           ;main.c: 220:                         int i =0;
  1622  001FF2  0E00               	movlw	0
  1623  001FF4  6E41               	movwf	(start_up_menu@i+1)^0,c
  1624  001FF6  0E00               	movlw	0
  1625  001FF8  6E40               	movwf	start_up_menu@i^0,c
  1626  001FFA                     l4569:
  1627  001FFA  FFFF               	dw	65535	; assembler added errata NOP
  1628                           
  1629                           ;main.c: 222:                             pick_and_place(sequence[i]);
  1630  001FFC  0EE9               	movlw	low _sequence
  1631  001FFE  2440               	addwf	start_up_menu@i^0,w,c
  1632  002000  6ED9               	movwf	fsr2l,c
  1633  002002  0E00               	movlw	high _sequence
  1634  002004  2041               	addwfc	(start_up_menu@i+1)^0,w,c
  1635  002006  6EDA               	movwf	fsr2h,c
  1636  002008  50DF               	movf	indf2,w,c
  1637  00200A  EC45  F000         	call	_pick_and_place
  1638  00200E                     
  1639                           ;main.c: 223:                         }while(sequence[i++]!='\n'&& !stop);
  1640  00200E  5040               	movf	start_up_menu@i^0,w,c
  1641  002010  6E3D               	movwf	??_start_up_menu^0,c
  1642  002012  5041               	movf	(start_up_menu@i+1)^0,w,c
  1643  002014  6E3E               	movwf	(??_start_up_menu+1)^0,c
  1644  002016  4A40               	infsnz	start_up_menu@i^0,f,c
  1645  002018  2A41               	incf	(start_up_menu@i+1)^0,f,c
  1646  00201A  0EE9               	movlw	low _sequence
  1647  00201C  243D               	addwf	??_start_up_menu^0,w,c
  1648  00201E  6ED9               	movwf	fsr2l,c
  1649  002020  0E00               	movlw	high _sequence
  1650  002022  203E               	addwfc	(??_start_up_menu+1)^0,w,c
  1651  002024  6EDA               	movwf	fsr2h,c
  1652  002026  0E0A               	movlw	10
  1653  002028  18DE               	xorwf	postinc2,w,c
  1654  00202A  B4D8               	btfsc	status,2,c
  1655  00202C  EF1A  F010         	goto	u5471
  1656  002030  EF1D  F010         	goto	u5470
  1657  002034                     u5471:
  1658  002034  FFFF               	dw	65535	; assembler added errata NOP
  1659  002036  EF27  F010         	goto	l4575
  1660  00203A                     u5470:
  1661  00203A  FFFF               	dw	65535	; assembler added errata NOP
  1662  00203C  5073               	movf	_stop^0,w,c
  1663  00203E  B4D8               	btfsc	status,2,c
  1664  002040  EF24  F010         	goto	u5481
  1665  002044  EF27  F010         	goto	u5480
  1666  002048                     u5481:
  1667  002048  FFFF               	dw	65535	; assembler added errata NOP
  1668  00204A  EFFD  F00F         	goto	l4569
  1669  00204E                     u5480:
  1670  00204E                     l4575:
  1671  00204E  FFFF               	dw	65535	; assembler added errata NOP
  1672                           
  1673                           ;main.c: 219:                     while(!New_char_RX){
  1674  002050  5074               	movf	_New_char_RX^0,w,c
  1675  002052  B4D8               	btfsc	status,2,c
  1676  002054  EF2E  F010         	goto	u5491
  1677  002058  EF31  F010         	goto	u5490
  1678  00205C                     u5491:
  1679  00205C  FFFF               	dw	65535	; assembler added errata NOP
  1680  00205E  EFF8  F00F         	goto	l4567
  1681  002062                     u5490:
  1682  002062  FFFF               	dw	65535	; assembler added errata NOP
  1683  002064  EF70  F010         	goto	l196
  1684  002068                     l4577:
  1685  002068  FFFF               	dw	65535	; assembler added errata NOP
  1686                           
  1687                           ;main.c: 228:                     change_sequence();
  1688  00206A  EC9C  F015         	call	_change_sequence	;wreg free
  1689  00206E                     l4579:
  1690  00206E  FFFF               	dw	65535	; assembler added errata NOP
  1691                           
  1692                           ;main.c: 229:                     return_to_initial();
  1693  002070  ECC7  F012         	call	_return_to_initial	;wreg free
  1694                           
  1695                           ;main.c: 230:                     break;
  1696  002074  EF70  F010         	goto	l196
  1697  002078                     l4581:
  1698  002078  FFFF               	dw	65535	; assembler added errata NOP
  1699                           
  1700                           ;main.c: 233:                     add_component();
  1701  00207A  ECF3  F00D         	call	_add_component	;wreg free
  1702  00207E  EF37  F010         	goto	l4579
  1703  002082                     l4585:
  1704  002082  FFFF               	dw	65535	; assembler added errata NOP
  1705                           
  1706                           ;main.c: 238:                     remove_component();
  1707  002084  EC3F  F012         	call	_remove_component	;wreg free
  1708  002088  EF37  F010         	goto	l4579
  1709  00208C                     l4589:
  1710  00208C  FFFF               	dw	65535	; assembler added errata NOP
  1711                           
  1712                           ;main.c: 243:                     New_char_RX=0;
  1713  00208E  0E00               	movlw	0
  1714  002090  6E74               	movwf	_New_char_RX^0,c
  1715                           
  1716                           ;main.c: 244:                     stop=0;
  1717  002092  0E00               	movlw	0
  1718  002094  6E73               	movwf	_stop^0,c
  1719                           
  1720                           ;main.c: 245:                     break;
  1721  002096  EF70  F010         	goto	l196
  1722  00209A                     l4593:
  1723  00209A  FFFF               	dw	65535	; assembler added errata NOP
  1724  00209C  5076               	movf	_State^0,w,c
  1725  00209E  6E3D               	movwf	??_start_up_menu^0,c
  1726  0020A0  6A3E               	clrf	(??_start_up_menu+1)^0,c
  1727                           
  1728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1729                           ; Switch size 1, requested type "simple"
  1730                           ; Number of cases is 1, Range of values is 0 to 0
  1731                           ; switch strategies available:
  1732                           ; Name         Instructions Cycles
  1733                           ; simple_byte            4     3 (average)
  1734                           ;	Chosen strategy is simple_byte
  1735  0020A2  503E               	movf	(??_start_up_menu+1)^0,w,c
  1736  0020A4  0A00               	xorlw	0	; case 0
  1737  0020A6  B4D8               	btfsc	status,2,c
  1738  0020A8  EF58  F010         	goto	l4675
  1739  0020AC  EF70  F010         	goto	l196
  1740  0020B0                     l4675:
  1741  0020B0  FFFF               	dw	65535	; assembler added errata NOP
  1742                           
  1743                           ; Switch size 1, requested type "simple"
  1744                           ; Number of cases is 5, Range of values is 49 to 81
  1745                           ; switch strategies available:
  1746                           ; Name         Instructions Cycles
  1747                           ; simple_byte           16     9 (average)
  1748                           ;	Chosen strategy is simple_byte
  1749  0020B2  503D               	movf	??_start_up_menu^0,w,c
  1750  0020B4  0A31               	xorlw	49	; case 49
  1751  0020B6  B4D8               	btfsc	status,2,c
  1752  0020B8  EFE3  F00F         	goto	l4565
  1753  0020BC  0A03               	xorlw	3	; case 50
  1754  0020BE  B4D8               	btfsc	status,2,c
  1755  0020C0  EF34  F010         	goto	l4577
  1756  0020C4  0A01               	xorlw	1	; case 51
  1757  0020C6  B4D8               	btfsc	status,2,c
  1758  0020C8  EF3C  F010         	goto	l4581
  1759  0020CC  0A07               	xorlw	7	; case 52
  1760  0020CE  B4D8               	btfsc	status,2,c
  1761  0020D0  EF41  F010         	goto	l4585
  1762  0020D4  0A65               	xorlw	101	; case 81
  1763  0020D6  B4D8               	btfsc	status,2,c
  1764  0020D8  EF46  F010         	goto	l4589
  1765  0020DC  EF70  F010         	goto	l196
  1766  0020E0                     l196:
  1767  0020E0  FFFF               	dw	65535	; assembler added errata NOP
  1768  0020E2  0012               	return		;funcret
  1769  0020E4  FFFF               	dw	65535	; errata NOP
  1770  0020E6                     __end_of_start_up_menu:
  1771                           	callstack 0
  1772                           
  1773 ;; *************** function _return_to_initial *****************
  1774 ;; Defined at:
  1775 ;;		line 592 in file "main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  i               2   21[COMRAM] int 
  1780 ;;  i               2   19[COMRAM] int 
  1781 ;;  i               2   17[COMRAM] int 
  1782 ;;  i               2   15[COMRAM] int 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1792 ;;      Params:         0       0       0       0       0       0       0
  1793 ;;      Locals:         8       0       0       0       0       0       0
  1794 ;;      Temps:          1       0       0       0       0       0       0
  1795 ;;      Totals:         9       0       0       0       0       0       0
  1796 ;;Total ram usage:        9 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 3
  1799 ;; This function calls:
  1800 ;;		_Twister
  1801 ;;		_X_axis
  1802 ;;		_Y_axis
  1803 ;;		_Z_axis
  1804 ;; This function is called by:
  1805 ;;		_start_up_menu
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text2
  1810  00258E                     __ptext2:
  1811                           	callstack 0
  1812  00258E                     _return_to_initial:
  1813                           	callstack 0
  1814  00258E  FFFF               	dw	65535	; assembler added errata NOP
  1815  002590                     
  1816                           ;main.c: 594:     for(int i = 0; i<X_diff; i++){X_axis(1);}
  1817  002590  0E00               	movlw	0
  1818  002592  6E11               	movwf	(return_to_initial@i+1)^0,c
  1819  002594  0E00               	movlw	0
  1820  002596  6E10               	movwf	return_to_initial@i^0,c
  1821  002598  EFD4  F012         	goto	l4471
  1822  00259C                     l4467:
  1823  00259C  FFFF               	dw	65535	; assembler added errata NOP
  1824  00259E  0E01               	movlw	1
  1825  0025A0  ECBA  F014         	call	_X_axis
  1826  0025A4  4A10               	infsnz	return_to_initial@i^0,f,c
  1827  0025A6  2A11               	incf	(return_to_initial@i+1)^0,f,c
  1828  0025A8                     l4471:
  1829  0025A8  FFFF               	dw	65535	; assembler added errata NOP
  1830  0025AA  5061               	movf	_X_diff^0,w,c
  1831  0025AC  5C10               	subwf	return_to_initial@i^0,w,c
  1832  0025AE  5011               	movf	(return_to_initial@i+1)^0,w,c
  1833  0025B0  0A80               	xorlw	128
  1834  0025B2  6E0F               	movwf	??_return_to_initial^0,c
  1835  0025B4  5062               	movf	(_X_diff+1)^0,w,c
  1836  0025B6  0A80               	xorlw	128
  1837  0025B8  580F               	subwfb	??_return_to_initial^0,w,c
  1838  0025BA  A0D8               	btfss	status,0,c
  1839  0025BC  EFE2  F012         	goto	u5341
  1840  0025C0  EFE5  F012         	goto	u5340
  1841  0025C4                     u5341:
  1842  0025C4  FFFF               	dw	65535	; assembler added errata NOP
  1843  0025C6  EFCE  F012         	goto	l4467
  1844  0025CA                     u5340:
  1845  0025CA  FFFF               	dw	65535	; assembler added errata NOP
  1846  0025CC                     
  1847                           ;main.c: 595:     for(int i = 0; i<Y_diff; i++){Y_axis(1);}
  1848  0025CC  0E00               	movlw	0
  1849  0025CE  6E13               	movwf	(return_to_initial@i_604+1)^0,c
  1850  0025D0  0E00               	movlw	0
  1851  0025D2  6E12               	movwf	return_to_initial@i_604^0,c
  1852  0025D4  EFF2  F012         	goto	l4479
  1853  0025D8                     l4475:
  1854  0025D8  FFFF               	dw	65535	; assembler added errata NOP
  1855  0025DA  0E01               	movlw	1
  1856  0025DC  EC41  F014         	call	_Y_axis
  1857  0025E0  4A12               	infsnz	return_to_initial@i_604^0,f,c
  1858  0025E2  2A13               	incf	(return_to_initial@i_604+1)^0,f,c
  1859  0025E4                     l4479:
  1860  0025E4  FFFF               	dw	65535	; assembler added errata NOP
  1861  0025E6  505F               	movf	_Y_diff^0,w,c
  1862  0025E8  5C12               	subwf	return_to_initial@i_604^0,w,c
  1863  0025EA  5013               	movf	(return_to_initial@i_604+1)^0,w,c
  1864  0025EC  0A80               	xorlw	128
  1865  0025EE  6E0F               	movwf	??_return_to_initial^0,c
  1866  0025F0  5060               	movf	(_Y_diff+1)^0,w,c
  1867  0025F2  0A80               	xorlw	128
  1868  0025F4  580F               	subwfb	??_return_to_initial^0,w,c
  1869  0025F6  A0D8               	btfss	status,0,c
  1870  0025F8  EF00  F013         	goto	u5351
  1871  0025FC  EF03  F013         	goto	u5350
  1872  002600                     u5351:
  1873  002600  FFFF               	dw	65535	; assembler added errata NOP
  1874  002602  EFEC  F012         	goto	l4475
  1875  002606                     u5350:
  1876  002606  FFFF               	dw	65535	; assembler added errata NOP
  1877  002608                     
  1878                           ;main.c: 596:     for(int i = 0; i<Angle_diff; i++){Twister(1);}
  1879  002608  0E00               	movlw	0
  1880  00260A  6E15               	movwf	(return_to_initial@i_605+1)^0,c
  1881  00260C  0E00               	movlw	0
  1882  00260E  6E14               	movwf	return_to_initial@i_605^0,c
  1883  002610  EF10  F013         	goto	l4487
  1884  002614                     l4483:
  1885  002614  FFFF               	dw	65535	; assembler added errata NOP
  1886  002616  0E01               	movlw	1
  1887  002618  EC33  F015         	call	_Twister
  1888  00261C  4A14               	infsnz	return_to_initial@i_605^0,f,c
  1889  00261E  2A15               	incf	(return_to_initial@i_605+1)^0,f,c
  1890  002620                     l4487:
  1891  002620  FFFF               	dw	65535	; assembler added errata NOP
  1892  002622  505D               	movf	_Angle_diff^0,w,c
  1893  002624  5C14               	subwf	return_to_initial@i_605^0,w,c
  1894  002626  5015               	movf	(return_to_initial@i_605+1)^0,w,c
  1895  002628  0A80               	xorlw	128
  1896  00262A  6E0F               	movwf	??_return_to_initial^0,c
  1897  00262C  505E               	movf	(_Angle_diff+1)^0,w,c
  1898  00262E  0A80               	xorlw	128
  1899  002630  580F               	subwfb	??_return_to_initial^0,w,c
  1900  002632  A0D8               	btfss	status,0,c
  1901  002634  EF1E  F013         	goto	u5361
  1902  002638  EF21  F013         	goto	u5360
  1903  00263C                     u5361:
  1904  00263C  FFFF               	dw	65535	; assembler added errata NOP
  1905  00263E  EF0A  F013         	goto	l4483
  1906  002642                     u5360:
  1907  002642  FFFF               	dw	65535	; assembler added errata NOP
  1908  002644                     
  1909                           ;main.c: 597:     for(int i=0; i<3 && !stop; i++){Z_axis(0);}
  1910  002644  0E00               	movlw	0
  1911  002646  6E17               	movwf	(return_to_initial@i_606+1)^0,c
  1912  002648  0E00               	movlw	0
  1913  00264A  6E16               	movwf	return_to_initial@i_606^0,c
  1914  00264C  EF2E  F013         	goto	l4495
  1915  002650                     l4491:
  1916  002650  FFFF               	dw	65535	; assembler added errata NOP
  1917  002652  0E00               	movlw	0
  1918  002654  ECC8  F013         	call	_Z_axis
  1919  002658  4A16               	infsnz	return_to_initial@i_606^0,f,c
  1920  00265A  2A17               	incf	(return_to_initial@i_606+1)^0,f,c
  1921  00265C                     l4495:
  1922  00265C  FFFF               	dw	65535	; assembler added errata NOP
  1923  00265E  BE17               	btfsc	(return_to_initial@i_606+1)^0,7,c
  1924  002660  EF3E  F013         	goto	u5370
  1925  002664  5017               	movf	(return_to_initial@i_606+1)^0,w,c
  1926  002666  E107               	bnz	u5371
  1927  002668  0E03               	movlw	3
  1928  00266A  5C16               	subwf	return_to_initial@i_606^0,w,c
  1929  00266C  B0D8               	btfsc	status,0,c
  1930  00266E  EF3B  F013         	goto	u5371
  1931  002672  EF3E  F013         	goto	u5370
  1932  002676                     u5371:
  1933  002676  FFFF               	dw	65535	; assembler added errata NOP
  1934  002678  EF48  F013         	goto	l388
  1935  00267C                     u5370:
  1936  00267C  FFFF               	dw	65535	; assembler added errata NOP
  1937  00267E  5073               	movf	_stop^0,w,c
  1938  002680  B4D8               	btfsc	status,2,c
  1939  002682  EF45  F013         	goto	u5381
  1940  002686  EF48  F013         	goto	u5380
  1941  00268A                     u5381:
  1942  00268A  FFFF               	dw	65535	; assembler added errata NOP
  1943  00268C  EF28  F013         	goto	l4491
  1944  002690                     u5380:
  1945  002690                     l388:
  1946  002690  FFFF               	dw	65535	; assembler added errata NOP
  1947  002692  0012               	return		;funcret
  1948  002694  FFFF               	dw	65535	; errata NOP
  1949  002696                     __end_of_return_to_initial:
  1950                           	callstack 0
  1951                           
  1952 ;; *************** function _remove_component *****************
  1953 ;; Defined at:
  1954 ;;		line 341 in file "main.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  indxToDel       2   27[COMRAM] int 
  1959 ;;  ptr             2   25[COMRAM] PTR unsigned char 
  1960 ;;		 -> NULL(0), sequence(4), 
  1961 ;;  rm_comp         1   29[COMRAM] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1971 ;;      Params:         0       0       0       0       0       0       0
  1972 ;;      Locals:         5       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0
  1974 ;;      Totals:         5       0       0       0       0       0       0
  1975 ;;Total ram usage:        5 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 3
  1978 ;; This function calls:
  1979 ;;		_memmove
  1980 ;;		_print_string
  1981 ;;		_serial_tx_char
  1982 ;;		_strlen
  1983 ;;		_strrchr
  1984 ;; This function is called by:
  1985 ;;		_start_up_menu
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text3
  1990  00247E                     __ptext3:
  1991                           	callstack 0
  1992  00247E                     _remove_component:
  1993                           	callstack 0
  1994  00247E  FFFF               	dw	65535	; assembler added errata NOP
  1995  002480                     
  1996                           ;main.c: 342:     print_string("\nWhich component would you like to remove from the  seq
      +                          uence?\n");
  1997  002480  0E25               	movlw	low STR_15
  1998  002482  6E09               	movwf	print_string@strng^0,c
  1999  002484  0E7E               	movlw	high STR_15
  2000  002486  6E0A               	movwf	(print_string@strng+1)^0,c
  2001  002488  ECE8  F015         	call	_print_string	;wreg free
  2002                           
  2003                           ;main.c: 343:     print_string(sequence);
  2004  00248C  0EE9               	movlw	low _sequence
  2005  00248E  6E09               	movwf	print_string@strng^0,c
  2006  002490  0E00               	movlw	high _sequence
  2007  002492  6E0A               	movwf	(print_string@strng+1)^0,c
  2008  002494  ECE8  F015         	call	_print_string	;wreg free
  2009  002498                     l3721:
  2010  002498  FFFF               	dw	65535	; assembler added errata NOP
  2011                           
  2012                           ;main.c: 345:         if(New_char_RX){
  2013  00249A  5074               	movf	_New_char_RX^0,w,c
  2014  00249C  B4D8               	btfsc	status,2,c
  2015  00249E  EF53  F012         	goto	u4161
  2016  0024A2  EF56  F012         	goto	u4160
  2017  0024A6                     u4161:
  2018  0024A6  FFFF               	dw	65535	; assembler added errata NOP
  2019  0024A8  EF4C  F012         	goto	l3721
  2020  0024AC                     u4160:
  2021  0024AC  FFFF               	dw	65535	; assembler added errata NOP
  2022  0024AE                     
  2023                           ;main.c: 346:             New_char_RX=0;
  2024  0024AE  0E00               	movlw	0
  2025  0024B0  6E74               	movwf	_New_char_RX^0,c
  2026  0024B2                     
  2027                           ;main.c: 347:             char rm_comp = input_str[0];
  2028  0024B2  C0DF  F01E         	movff	_input_str,remove_component@rm_comp	;volatile
  2029  0024B6                     
  2030                           ;main.c: 348:             char *ptr;;main.c: 349:             int indxToDel;;main.c: 350
      +                          :             ptr=strrchr(sequence,rm_comp);
  2031  0024B6  0EE9               	movlw	low _sequence
  2032  0024B8  6E16               	movwf	strrchr@s^0,c
  2033  0024BA  0E00               	movlw	high _sequence
  2034  0024BC  6E17               	movwf	(strrchr@s+1)^0,c
  2035  0024BE  C01E  F018         	movff	remove_component@rm_comp,strrchr@c
  2036  0024C2  6A19               	clrf	(strrchr@c+1)^0,c
  2037  0024C4  ECE8  F017         	call	_strrchr	;wreg free
  2038  0024C8  C016  F01A         	movff	?_strrchr,remove_component@ptr
  2039  0024CC  C017  F01B         	movff	?_strrchr+1,remove_component@ptr+1
  2040  0024D0                     
  2041                           ;main.c: 352:             if (rm_comp=='Q'){
  2042  0024D0  0E51               	movlw	81
  2043  0024D2  181E               	xorwf	remove_component@rm_comp^0,w,c
  2044  0024D4  A4D8               	btfss	status,2,c
  2045  0024D6  EF6F  F012         	goto	u4171
  2046  0024DA  EF72  F012         	goto	u4170
  2047  0024DE                     u4171:
  2048  0024DE  FFFF               	dw	65535	; assembler added errata NOP
  2049  0024E0  EF75  F012         	goto	l3735
  2050  0024E4                     u4170:
  2051  0024E4  FFFF               	dw	65535	; assembler added errata NOP
  2052  0024E6  EFC2  F012         	goto	l3753
  2053  0024EA                     l3735:
  2054  0024EA  FFFF               	dw	65535	; assembler added errata NOP
  2055  0024EC  501A               	movf	remove_component@ptr^0,w,c
  2056  0024EE  101B               	iorwf	(remove_component@ptr+1)^0,w,c
  2057  0024F0  B4D8               	btfsc	status,2,c
  2058  0024F2  EF7D  F012         	goto	u4181
  2059  0024F6  EF80  F012         	goto	u4180
  2060  0024FA                     u4181:
  2061  0024FA  FFFF               	dw	65535	; assembler added errata NOP
  2062  0024FC  EFAE  F012         	goto	l3749
  2063  002500                     u4180:
  2064  002500  FFFF               	dw	65535	; assembler added errata NOP
  2065  002502                     
  2066                           ;main.c: 356:                 indxToDel = ptr - sequence;
  2067  002502  0EE9               	movlw	low _sequence
  2068  002504  5C1A               	subwf	remove_component@ptr^0,w,c
  2069  002506  6E1C               	movwf	remove_component@indxToDel^0,c
  2070  002508  0E00               	movlw	high _sequence
  2071  00250A  581B               	subwfb	(remove_component@ptr+1)^0,w,c
  2072  00250C  6E1D               	movwf	(remove_component@indxToDel+1)^0,c
  2073  00250E                     
  2074                           ;main.c: 357:                 memmove(&sequence[indxToDel], &sequence[indxToDel + 1], st
      +                          rlen(sequence) - indxToDel);
  2075  00250E  0EE9               	movlw	low _sequence
  2076  002510  241C               	addwf	remove_component@indxToDel^0,w,c
  2077  002512  6E0C               	movwf	memmove@d1^0,c
  2078  002514  0E00               	movlw	high _sequence
  2079  002516  201D               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2080  002518  6E0D               	movwf	(memmove@d1+1)^0,c
  2081  00251A  0EEA               	movlw	low (_sequence+1)
  2082  00251C  241C               	addwf	remove_component@indxToDel^0,w,c
  2083  00251E  6E0E               	movwf	memmove@s1^0,c
  2084  002520  0E00               	movlw	high (_sequence+1)
  2085  002522  201D               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2086  002524  6E0F               	movwf	(memmove@s1+1)^0,c
  2087  002526  0EE9               	movlw	low _sequence
  2088  002528  6E08               	movwf	strlen@s^0,c
  2089  00252A  0E00               	movlw	high _sequence
  2090  00252C  6E09               	movwf	(strlen@s+1)^0,c
  2091  00252E  EC65  F017         	call	_strlen	;wreg free
  2092  002532  501C               	movf	remove_component@indxToDel^0,w,c
  2093  002534  5C08               	subwf	?_strlen^0,w,c
  2094  002536  6E10               	movwf	memmove@n^0,c
  2095  002538  501D               	movf	(remove_component@indxToDel+1)^0,w,c
  2096  00253A  5809               	subwfb	(?_strlen+1)^0,w,c
  2097  00253C  6E11               	movwf	(memmove@n+1)^0,c
  2098  00253E  EC4B  F013         	call	_memmove	;wreg free
  2099  002542                     
  2100                           ;main.c: 358:                 print_string("\ncomponent removed: ");
  2101  002542  0EC2               	movlw	low STR_16
  2102  002544  6E09               	movwf	print_string@strng^0,c
  2103  002546  0E7F               	movlw	high STR_16
  2104  002548  6E0A               	movwf	(print_string@strng+1)^0,c
  2105  00254A  ECE8  F015         	call	_print_string	;wreg free
  2106  00254E                     
  2107                           ;main.c: 359:                 serial_tx_char(rm_comp);
  2108  00254E  501E               	movf	remove_component@rm_comp^0,w,c
  2109  002550  EC2B  F018         	call	_serial_tx_char
  2110  002554                     
  2111                           ;main.c: 360:                 stop=0;
  2112  002554  0E00               	movlw	0
  2113  002556  6E73               	movwf	_stop^0,c
  2114                           
  2115                           ;main.c: 361:                 break;
  2116  002558  EFC2  F012         	goto	l3753
  2117  00255C                     l3749:
  2118  00255C  FFFF               	dw	65535	; assembler added errata NOP
  2119                           
  2120                           ;main.c: 365:                 print_string("\ncomponent is not in the sequence. Try sele
      +                          cting another component: \n");
  2121  00255E  0EDF               	movlw	low STR_17
  2122  002560  6E09               	movwf	print_string@strng^0,c
  2123  002562  0E7D               	movlw	high STR_17
  2124  002564  6E0A               	movwf	(print_string@strng+1)^0,c
  2125  002566  ECE8  F015         	call	_print_string	;wreg free
  2126  00256A                     l3751:
  2127  00256A  FFFF               	dw	65535	; assembler added errata NOP
  2128  00256C  5074               	movf	_New_char_RX^0,w,c
  2129  00256E  B4D8               	btfsc	status,2,c
  2130  002570  EFBC  F012         	goto	u4191
  2131  002574  EFBF  F012         	goto	u4190
  2132  002578                     u4191:
  2133  002578  FFFF               	dw	65535	; assembler added errata NOP
  2134  00257A  EFB5  F012         	goto	l3751
  2135  00257E                     u4190:
  2136  00257E  FFFF               	dw	65535	; assembler added errata NOP
  2137  002580  EF4C  F012         	goto	l3721
  2138  002584                     l3753:
  2139  002584  FFFF               	dw	65535	; assembler added errata NOP
  2140                           
  2141                           ;main.c: 370:     New_char_RX=0;
  2142  002586  0E00               	movlw	0
  2143  002588  6E74               	movwf	_New_char_RX^0,c
  2144  00258A  0012               	return		;funcret
  2145  00258C  FFFF               	dw	65535	; errata NOP
  2146  00258E                     __end_of_remove_component:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _strrchr *****************
  2150 ;; Defined at:
  2151 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2154 ;;		 -> sequence(4), 
  2155 ;;  c               2   23[COMRAM] int 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  2   21[COMRAM] PTR unsigned char 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2167 ;;      Params:         4       0       0       0       0       0       0
  2168 ;;      Locals:         0       0       0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0
  2170 ;;      Totals:         4       0       0       0       0       0       0
  2171 ;;Total ram usage:        4 bytes
  2172 ;; Hardware stack levels used: 1
  2173 ;; Hardware stack levels required when called: 2
  2174 ;; This function calls:
  2175 ;;		___memrchr
  2176 ;;		_strlen
  2177 ;; This function is called by:
  2178 ;;		_remove_component
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text4
  2183  002FD0                     __ptext4:
  2184                           	callstack 0
  2185  002FD0                     _strrchr:
  2186                           	callstack 0
  2187  002FD0  FFFF               	dw	65535	; assembler added errata NOP
  2188  002FD2  C016  F00C         	movff	strrchr@s,___memrchr@m
  2189  002FD6  C017  F00D         	movff	strrchr@s+1,___memrchr@m+1
  2190  002FDA  C018  F00E         	movff	strrchr@c,___memrchr@c
  2191  002FDE  C019  F00F         	movff	strrchr@c+1,___memrchr@c+1
  2192  002FE2  C016  F008         	movff	strrchr@s,strlen@s
  2193  002FE6  C017  F009         	movff	strrchr@s+1,strlen@s+1
  2194  002FEA  EC65  F017         	call	_strlen	;wreg free
  2195  002FEE  0E01               	movlw	1
  2196  002FF0  2408               	addwf	?_strlen^0,w,c
  2197  002FF2  6E10               	movwf	___memrchr@n^0,c
  2198  002FF4  0E00               	movlw	0
  2199  002FF6  2009               	addwfc	(?_strlen+1)^0,w,c
  2200  002FF8  6E11               	movwf	(___memrchr@n+1)^0,c
  2201  002FFA  EC72  F016         	call	___memrchr	;wreg free
  2202  002FFE  C00C  F016         	movff	?___memrchr,?_strrchr
  2203  003002  C00D  F017         	movff	?___memrchr+1,?_strrchr+1
  2204  003006  0012               	return		;funcret
  2205  003008  FFFF               	dw	65535	; errata NOP
  2206  00300A                     __end_of_strrchr:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function ___memrchr *****************
  2210 ;; Defined at:
  2211 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  m               2   11[COMRAM] PTR const void 
  2214 ;;		 -> sequence(4), 
  2215 ;;  c               2   13[COMRAM] int 
  2216 ;;  n               2   15[COMRAM] unsigned int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  s               2   19[COMRAM] PTR const unsigned char 
  2219 ;;		 -> sequence(4), 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  2   11[COMRAM] PTR void 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2229 ;;      Params:         6       0       0       0       0       0       0
  2230 ;;      Locals:         2       0       0       0       0       0       0
  2231 ;;      Temps:          2       0       0       0       0       0       0
  2232 ;;      Totals:        10       0       0       0       0       0       0
  2233 ;;Total ram usage:       10 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 1
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_strrchr
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text5
  2244  002CE4                     __ptext5:
  2245                           	callstack 0
  2246  002CE4                     ___memrchr:
  2247                           	callstack 0
  2248  002CE4  FFFF               	dw	65535	; assembler added errata NOP
  2249  002CE6  C00C  F014         	movff	___memrchr@m,___memrchr@s
  2250  002CEA  C00D  F015         	movff	___memrchr@m+1,___memrchr@s+1
  2251  002CEE  C00E  F00E         	movff	___memrchr@c,___memrchr@c
  2252  002CF2  6A0F               	clrf	(___memrchr@c+1)^0,c
  2253  002CF4  EF9C  F016         	goto	l2811
  2254  002CF8                     l2805:
  2255  002CF8  FFFF               	dw	65535	; assembler added errata NOP
  2256  002CFA  5010               	movf	___memrchr@n^0,w,c
  2257  002CFC  2414               	addwf	___memrchr@s^0,w,c
  2258  002CFE  6ED9               	movwf	fsr2l,c
  2259  002D00  5011               	movf	(___memrchr@n+1)^0,w,c
  2260  002D02  2015               	addwfc	(___memrchr@s+1)^0,w,c
  2261  002D04  6EDA               	movwf	fsr2h,c
  2262  002D06  50DF               	movf	indf2,w,c
  2263  002D08  6E12               	movwf	??___memrchr^0,c
  2264  002D0A  6A13               	clrf	(??___memrchr+1)^0,c
  2265  002D0C  500E               	movf	___memrchr@c^0,w,c
  2266  002D0E  1812               	xorwf	??___memrchr^0,w,c
  2267  002D10  E107               	bnz	u2651
  2268  002D12  500F               	movf	(___memrchr@c+1)^0,w,c
  2269  002D14  1813               	xorwf	(??___memrchr+1)^0,w,c
  2270  002D16  A4D8               	btfss	status,2,c
  2271  002D18  EF90  F016         	goto	u2651
  2272  002D1C  EF93  F016         	goto	u2650
  2273  002D20                     u2651:
  2274  002D20  FFFF               	dw	65535	; assembler added errata NOP
  2275  002D22  EF9C  F016         	goto	l2811
  2276  002D26                     u2650:
  2277  002D26  FFFF               	dw	65535	; assembler added errata NOP
  2278  002D28  5010               	movf	___memrchr@n^0,w,c
  2279  002D2A  2414               	addwf	___memrchr@s^0,w,c
  2280  002D2C  6E0C               	movwf	?___memrchr^0,c
  2281  002D2E  5011               	movf	(___memrchr@n+1)^0,w,c
  2282  002D30  2015               	addwfc	(___memrchr@s+1)^0,w,c
  2283  002D32  6E0D               	movwf	(?___memrchr+1)^0,c
  2284  002D34  EFB0  F016         	goto	l1178
  2285  002D38                     l2811:
  2286  002D38  FFFF               	dw	65535	; assembler added errata NOP
  2287  002D3A  0610               	decf	___memrchr@n^0,f,c
  2288  002D3C  A0D8               	btfss	status,0,c
  2289  002D3E  0611               	decf	(___memrchr@n+1)^0,f,c
  2290  002D40  2810               	incf	___memrchr@n^0,w,c
  2291  002D42  E106               	bnz	u2661
  2292  002D44  2811               	incf	(___memrchr@n+1)^0,w,c
  2293  002D46  A4D8               	btfss	status,2,c
  2294  002D48  EFA8  F016         	goto	u2661
  2295  002D4C  EFAB  F016         	goto	u2660
  2296  002D50                     u2661:
  2297  002D50  FFFF               	dw	65535	; assembler added errata NOP
  2298  002D52  EF7C  F016         	goto	l2805
  2299  002D56                     u2660:
  2300  002D56  FFFF               	dw	65535	; assembler added errata NOP
  2301  002D58  0E00               	movlw	0
  2302  002D5A  6E0C               	movwf	?___memrchr^0,c
  2303  002D5C  0E00               	movlw	0
  2304  002D5E  6E0D               	movwf	(?___memrchr+1)^0,c
  2305  002D60                     l1178:
  2306  002D60  FFFF               	dw	65535	; assembler added errata NOP
  2307  002D62  0012               	return		;funcret
  2308  002D64  FFFF               	dw	65535	; errata NOP
  2309  002D66                     __end_of___memrchr:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _memmove *****************
  2313 ;; Defined at:
  2314 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  d1              2   11[COMRAM] PTR void 
  2317 ;;		 -> sequence(4), 
  2318 ;;  s1              2   13[COMRAM] PTR const void 
  2319 ;;		 -> sequence(4), 
  2320 ;;  n               2   15[COMRAM] unsigned int 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2323 ;;		 -> sequence(4), 
  2324 ;;  d               2   19[COMRAM] PTR unsigned char 
  2325 ;;		 -> sequence(4), 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  2   11[COMRAM] PTR void 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2335 ;;      Params:         6       0       0       0       0       0       0
  2336 ;;      Locals:         4       0       0       0       0       0       0
  2337 ;;      Temps:          2       0       0       0       0       0       0
  2338 ;;      Totals:        12       0       0       0       0       0       0
  2339 ;;Total ram usage:       12 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_remove_component
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text6
  2350  002696                     __ptext6:
  2351                           	callstack 0
  2352  002696                     _memmove:
  2353                           	callstack 0
  2354  002696  FFFF               	dw	65535	; assembler added errata NOP
  2355  002698  C00E  F016         	movff	memmove@s1,memmove@s
  2356  00269C  C00F  F017         	movff	memmove@s1+1,memmove@s+1
  2357  0026A0  C00C  F014         	movff	memmove@d1,memmove@d
  2358  0026A4  C00D  F015         	movff	memmove@d1+1,memmove@d+1
  2359  0026A8  5014               	movf	memmove@d^0,w,c
  2360  0026AA  5C16               	subwf	memmove@s^0,w,c
  2361  0026AC  5015               	movf	(memmove@d+1)^0,w,c
  2362  0026AE  5817               	subwfb	(memmove@s+1)^0,w,c
  2363  0026B0  B0D8               	btfsc	status,0,c
  2364  0026B2  EF5D  F013         	goto	u2791
  2365  0026B6  EF60  F013         	goto	u2790
  2366  0026BA                     u2791:
  2367  0026BA  FFFF               	dw	65535	; assembler added errata NOP
  2368  0026BC  EF9D  F013         	goto	l2903
  2369  0026C0                     u2790:
  2370  0026C0  FFFF               	dw	65535	; assembler added errata NOP
  2371  0026C2  5010               	movf	memmove@n^0,w,c
  2372  0026C4  2416               	addwf	memmove@s^0,w,c
  2373  0026C6  6E12               	movwf	??_memmove^0,c
  2374  0026C8  5011               	movf	(memmove@n+1)^0,w,c
  2375  0026CA  2017               	addwfc	(memmove@s+1)^0,w,c
  2376  0026CC  6E13               	movwf	(??_memmove+1)^0,c
  2377  0026CE  5012               	movf	??_memmove^0,w,c
  2378  0026D0  5C14               	subwf	memmove@d^0,w,c
  2379  0026D2  5013               	movf	(??_memmove+1)^0,w,c
  2380  0026D4  5815               	subwfb	(memmove@d+1)^0,w,c
  2381  0026D6  B0D8               	btfsc	status,0,c
  2382  0026D8  EF70  F013         	goto	u2801
  2383  0026DC  EF73  F013         	goto	u2800
  2384  0026E0                     u2801:
  2385  0026E0  FFFF               	dw	65535	; assembler added errata NOP
  2386  0026E2  EF9D  F013         	goto	l2903
  2387  0026E6                     u2800:
  2388  0026E6  FFFF               	dw	65535	; assembler added errata NOP
  2389  0026E8  5010               	movf	memmove@n^0,w,c
  2390  0026EA  2616               	addwf	memmove@s^0,f,c
  2391  0026EC  5011               	movf	(memmove@n+1)^0,w,c
  2392  0026EE  2217               	addwfc	(memmove@s+1)^0,f,c
  2393  0026F0  5010               	movf	memmove@n^0,w,c
  2394  0026F2  2614               	addwf	memmove@d^0,f,c
  2395  0026F4  5011               	movf	(memmove@n+1)^0,w,c
  2396  0026F6  2215               	addwfc	(memmove@d+1)^0,f,c
  2397  0026F8                     l2899:
  2398  0026F8  FFFF               	dw	65535	; assembler added errata NOP
  2399  0026FA  0616               	decf	memmove@s^0,f,c
  2400  0026FC  A0D8               	btfss	status,0,c
  2401  0026FE  0617               	decf	(memmove@s+1)^0,f,c
  2402  002700  C016  FFD9         	movff	memmove@s,fsr2l
  2403  002704  C017  FFDA         	movff	memmove@s+1,fsr2h
  2404  002708  0614               	decf	memmove@d^0,f,c
  2405  00270A  A0D8               	btfss	status,0,c
  2406  00270C  0615               	decf	(memmove@d+1)^0,f,c
  2407  00270E  C014  FFE1         	movff	memmove@d,fsr1l
  2408  002712  C015  FFE2         	movff	memmove@d+1,fsr1h
  2409  002716  CFDF FFE7          	movff	indf2,indf1
  2410  00271A  0610               	decf	memmove@n^0,f,c
  2411  00271C  A0D8               	btfss	status,0,c
  2412  00271E  0611               	decf	(memmove@n+1)^0,f,c
  2413  002720  5010               	movf	memmove@n^0,w,c
  2414  002722  1011               	iorwf	(memmove@n+1)^0,w,c
  2415  002724  A4D8               	btfss	status,2,c
  2416  002726  EF97  F013         	goto	u2811
  2417  00272A  EF9A  F013         	goto	u2810
  2418  00272E                     u2811:
  2419  00272E  FFFF               	dw	65535	; assembler added errata NOP
  2420  002730  EF7C  F013         	goto	l2899
  2421  002734                     u2810:
  2422  002734  FFFF               	dw	65535	; assembler added errata NOP
  2423  002736  EFC5  F013         	goto	l1134
  2424  00273A                     l2903:
  2425  00273A  FFFF               	dw	65535	; assembler added errata NOP
  2426  00273C  5010               	movf	memmove@n^0,w,c
  2427  00273E  1011               	iorwf	(memmove@n+1)^0,w,c
  2428  002740  B4D8               	btfsc	status,2,c
  2429  002742  EFA5  F013         	goto	u2821
  2430  002746  EFA8  F013         	goto	u2820
  2431  00274A                     u2821:
  2432  00274A  FFFF               	dw	65535	; assembler added errata NOP
  2433  00274C  EFC5  F013         	goto	l1134
  2434  002750                     u2820:
  2435  002750  FFFF               	dw	65535	; assembler added errata NOP
  2436  002752                     l2905:
  2437  002752  FFFF               	dw	65535	; assembler added errata NOP
  2438  002754  C016  FFD9         	movff	memmove@s,fsr2l
  2439  002758  C017  FFDA         	movff	memmove@s+1,fsr2h
  2440  00275C  C014  FFE1         	movff	memmove@d,fsr1l
  2441  002760  C015  FFE2         	movff	memmove@d+1,fsr1h
  2442  002764  CFDF FFE7          	movff	indf2,indf1
  2443  002768  4A16               	infsnz	memmove@s^0,f,c
  2444  00276A  2A17               	incf	(memmove@s+1)^0,f,c
  2445  00276C  4A14               	infsnz	memmove@d^0,f,c
  2446  00276E  2A15               	incf	(memmove@d+1)^0,f,c
  2447  002770  0610               	decf	memmove@n^0,f,c
  2448  002772  A0D8               	btfss	status,0,c
  2449  002774  0611               	decf	(memmove@n+1)^0,f,c
  2450  002776  5010               	movf	memmove@n^0,w,c
  2451  002778  1011               	iorwf	(memmove@n+1)^0,w,c
  2452  00277A  A4D8               	btfss	status,2,c
  2453  00277C  EFC2  F013         	goto	u2831
  2454  002780  EFC5  F013         	goto	u2830
  2455  002784                     u2831:
  2456  002784  FFFF               	dw	65535	; assembler added errata NOP
  2457  002786  EFA9  F013         	goto	l2905
  2458  00278A                     u2830:
  2459  00278A                     l1134:
  2460  00278A  FFFF               	dw	65535	; assembler added errata NOP
  2461  00278C  0012               	return		;funcret
  2462  00278E  FFFF               	dw	65535	; errata NOP
  2463  002790                     __end_of_memmove:
  2464                           	callstack 0
  2465                           
  2466 ;; *************** function _pick_and_place *****************
  2467 ;; Defined at:
  2468 ;;		line 552 in file "main.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  Componnt        1    wreg     unsigned char 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  Componnt        1    0[BANK0 ] unsigned char 
  2473 ;;  i               2   31[BANK0 ] int 
  2474 ;;  i               2   29[BANK0 ] int 
  2475 ;;  i               2   21[BANK0 ] int 
  2476 ;;  i               2   17[BANK0 ] int 
  2477 ;;  i               2   13[BANK0 ] int 
  2478 ;;  i               2   27[BANK0 ] int 
  2479 ;;  i               2   25[BANK0 ] int 
  2480 ;;  i               2    9[BANK0 ] int 
  2481 ;;  i               2    5[BANK0 ] int 
  2482 ;;  i               2    1[BANK0 ] int 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  2   65[None  ] int 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2492 ;;      Params:         0       0       0       0       0       0       0
  2493 ;;      Locals:         0      33       0       0       0       0       0
  2494 ;;      Temps:          2       0       0       0       0       0       0
  2495 ;;      Totals:         2      33       0       0       0       0       0
  2496 ;;Total ram usage:       35 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 3
  2499 ;; This function calls:
  2500 ;;		_Twister
  2501 ;;		_X_axis
  2502 ;;		_Y_axis
  2503 ;;		_Z_axis
  2504 ;;		___fldiv
  2505 ;;		___flge
  2506 ;;		___xxtofl
  2507 ;;		_fetch_parameters
  2508 ;; This function is called by:
  2509 ;;		_start_up_menu
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text7
  2514  00008A                     __ptext7:
  2515                           	callstack 0
  2516  00008A                     _pick_and_place:
  2517                           	callstack 0
  2518  00008A  FFFF               	dw	65535	; assembler added errata NOP
  2519                           
  2520                           ;incstack = 0
  2521                           ;pick_and_place@Componnt stored from wreg
  2522  00008C  0100               	movlb	0	; () banked
  2523  00008E  6FB4               	movwf	pick_and_place@Componnt& (0+255),b
  2524  000090                     
  2525                           ;main.c: 552: int pick_and_place(char Componnt);main.c: 553: {;main.c: 556:     fetch_pa
      +                          rameters(Componnt);
  2526  000090  0100               	movlb	0	; () banked
  2527  000092  51B4               	movf	pick_and_place@Componnt& (0+255),w,b
  2528  000094  EC73  F010         	call	_fetch_parameters
  2529  000098                     
  2530                           ;main.c: 558:         X_dir=((X_diff<X_Pick)? 1:0);
  2531  000098  506D               	movf	_X_Pick^0,w,c
  2532  00009A  5C61               	subwf	_X_diff^0,w,c
  2533  00009C  5062               	movf	(_X_diff+1)^0,w,c
  2534  00009E  0A80               	xorlw	128
  2535  0000A0  6E3B               	movwf	??_pick_and_place^0,c
  2536  0000A2  506E               	movf	(_X_Pick+1)^0,w,c
  2537  0000A4  0A80               	xorlw	128
  2538  0000A6  583B               	subwfb	??_pick_and_place^0,w,c
  2539  0000A8  A0D8               	btfss	status,0,c
  2540  0000AA  EF59  F000         	goto	u5001
  2541  0000AE  EF5D  F000         	goto	u5000
  2542  0000B2                     u5001:
  2543  0000B2  FFFF               	dw	65535	; assembler added errata NOP
  2544  0000B4  0E01               	movlw	1
  2545  0000B6  EF5F  F000         	goto	u5010
  2546  0000BA                     u5000:
  2547  0000BA  FFFF               	dw	65535	; assembler added errata NOP
  2548  0000BC  0E00               	movlw	0
  2549  0000BE                     u5010:
  2550  0000BE  FFFF               	dw	65535	; assembler added errata NOP
  2551  0000C0  6E72               	movwf	_X_dir^0,c
  2552  0000C2                     
  2553                           ;main.c: 559:         Y_dir=((Y_diff<Y_Pick)? 1:0);
  2554  0000C2  5069               	movf	_Y_Pick^0,w,c
  2555  0000C4  5C5F               	subwf	_Y_diff^0,w,c
  2556  0000C6  5060               	movf	(_Y_diff+1)^0,w,c
  2557  0000C8  0A80               	xorlw	128
  2558  0000CA  6E3B               	movwf	??_pick_and_place^0,c
  2559  0000CC  506A               	movf	(_Y_Pick+1)^0,w,c
  2560  0000CE  0A80               	xorlw	128
  2561  0000D0  583B               	subwfb	??_pick_and_place^0,w,c
  2562  0000D2  A0D8               	btfss	status,0,c
  2563  0000D4  EF6E  F000         	goto	u5021
  2564  0000D8  EF72  F000         	goto	u5020
  2565  0000DC                     u5021:
  2566  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  2567  0000DE  0E01               	movlw	1
  2568  0000E0  EF74  F000         	goto	u5030
  2569  0000E4                     u5020:
  2570  0000E4  FFFF               	dw	65535	; assembler added errata NOP
  2571  0000E6  0E00               	movlw	0
  2572  0000E8                     u5030:
  2573  0000E8  FFFF               	dw	65535	; assembler added errata NOP
  2574  0000EA  6E71               	movwf	_Y_dir^0,c
  2575  0000EC                     
  2576                           ;main.c: 560:         Rot_dir=((Angle_diff<Pick_Angle)? 1:0);
  2577  0000EC  5065               	movf	_Pick_Angle^0,w,c
  2578  0000EE  5C5D               	subwf	_Angle_diff^0,w,c
  2579  0000F0  505E               	movf	(_Angle_diff+1)^0,w,c
  2580  0000F2  0A80               	xorlw	128
  2581  0000F4  6E3B               	movwf	??_pick_and_place^0,c
  2582  0000F6  5066               	movf	(_Pick_Angle+1)^0,w,c
  2583  0000F8  0A80               	xorlw	128
  2584  0000FA  583B               	subwfb	??_pick_and_place^0,w,c
  2585  0000FC  A0D8               	btfss	status,0,c
  2586  0000FE  EF83  F000         	goto	u5041
  2587  000102  EF87  F000         	goto	u5040
  2588  000106                     u5041:
  2589  000106  FFFF               	dw	65535	; assembler added errata NOP
  2590  000108  0E01               	movlw	1
  2591  00010A  EF89  F000         	goto	u5050
  2592  00010E                     u5040:
  2593  00010E  FFFF               	dw	65535	; assembler added errata NOP
  2594  000110  0E00               	movlw	0
  2595  000112                     u5050:
  2596  000112  FFFF               	dw	65535	; assembler added errata NOP
  2597  000114  6E70               	movwf	_Rot_dir^0,c
  2598  000116                     
  2599                           ;main.c: 562:         for(int i = 0; (i<(((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_Pi
      +                          ck-X_diff)))) && !stop; i++){X_axis(X_dir);}
  2600  000116  0E00               	movlw	0
  2601  000118  0100               	movlb	0	; () banked
  2602  00011A  6FB6               	movwf	(pick_and_place@i+1)& (0+255),b
  2603  00011C  0E00               	movlw	0
  2604  00011E  6FB5               	movwf	pick_and_place@i& (0+255),b
  2605  000120  EF99  F000         	goto	l4333
  2606  000124                     l4329:
  2607  000124  FFFF               	dw	65535	; assembler added errata NOP
  2608                           
  2609                           ; BSR set to: 0
  2610  000126  5072               	movf	_X_dir^0,w,c
  2611  000128  ECBA  F014         	call	_X_axis
  2612  00012C  0100               	movlb	0	; () banked
  2613  00012E  4BB5               	infsnz	pick_and_place@i& (0+255),f,b
  2614  000130  2BB6               	incf	(pick_and_place@i+1)& (0+255),f,b
  2615  000132                     l4333:
  2616  000132  FFFF               	dw	65535	; assembler added errata NOP
  2617                           
  2618                           ; BSR set to: 0
  2619  000134  5061               	movf	_X_diff^0,w,c
  2620  000136  5C6D               	subwf	_X_Pick^0,w,c
  2621  000138  6E3B               	movwf	??_pick_and_place^0,c
  2622  00013A  5062               	movf	(_X_diff+1)^0,w,c
  2623  00013C  586E               	subwfb	(_X_Pick+1)^0,w,c
  2624  00013E  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2625  000140  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2626  000142  EFAE  F000         	goto	u5060
  2627  000146  503C               	movf	(??_pick_and_place+1)^0,w,c
  2628  000148  E106               	bnz	u5061
  2629  00014A  043B               	decf	??_pick_and_place^0,w,c
  2630  00014C  B0D8               	btfsc	status,0,c
  2631  00014E  EFAB  F000         	goto	u5061
  2632  000152  EFAE  F000         	goto	u5060
  2633  000156                     u5061:
  2634  000156  FFFF               	dw	65535	; assembler added errata NOP
  2635  000158  EFBF  F000         	goto	l4337
  2636  00015C                     u5060:
  2637  00015C  FFFF               	dw	65535	; assembler added errata NOP
  2638  00015E                     
  2639                           ; BSR set to: 0
  2640  00015E  5061               	movf	_X_diff^0,w,c
  2641  000160  5C6D               	subwf	_X_Pick^0,w,c
  2642  000162  6E3B               	movwf	??_pick_and_place^0,c
  2643  000164  5062               	movf	(_X_diff+1)^0,w,c
  2644  000166  586E               	subwfb	(_X_Pick+1)^0,w,c
  2645  000168  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2646  00016A  1E3B               	comf	??_pick_and_place^0,f,c
  2647  00016C  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2648  00016E  4A3B               	infsnz	??_pick_and_place^0,f,c
  2649  000170  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2650  000172  C03B  F0B7         	movff	??_pick_and_place,_pick_and_place$584
  2651  000176  C03C  F0B8         	movff	??_pick_and_place+1,_pick_and_place$584+1
  2652  00017A  EFC6  F000         	goto	l316
  2653  00017E                     l4337:
  2654  00017E  FFFF               	dw	65535	; assembler added errata NOP
  2655                           
  2656                           ; BSR set to: 0
  2657  000180  5061               	movf	_X_diff^0,w,c
  2658  000182  5C6D               	subwf	_X_Pick^0,w,c
  2659  000184  6FB7               	movwf	_pick_and_place$584& (0+255),b
  2660  000186  5062               	movf	(_X_diff+1)^0,w,c
  2661  000188  586E               	subwfb	(_X_Pick+1)^0,w,c
  2662  00018A  6FB8               	movwf	(_pick_and_place$584+1)& (0+255),b
  2663  00018C                     l316:
  2664  00018C  FFFF               	dw	65535	; assembler added errata NOP
  2665                           
  2666                           ; BSR set to: 0
  2667  00018E  51B7               	movf	_pick_and_place$584& (0+255),w,b
  2668  000190  5DB5               	subwf	pick_and_place@i& (0+255),w,b
  2669  000192  51B6               	movf	(pick_and_place@i+1)& (0+255),w,b
  2670  000194  0A80               	xorlw	128
  2671  000196  6E3B               	movwf	??_pick_and_place^0,c
  2672  000198  51B8               	movf	(_pick_and_place$584+1)& (0+255),w,b
  2673  00019A  0A80               	xorlw	128
  2674  00019C  583B               	subwfb	??_pick_and_place^0,w,c
  2675  00019E  B0D8               	btfsc	status,0,c
  2676  0001A0  EFD4  F000         	goto	u5071
  2677  0001A4  EFD7  F000         	goto	u5070
  2678  0001A8                     u5071:
  2679  0001A8  FFFF               	dw	65535	; assembler added errata NOP
  2680  0001AA  EFE1  F000         	goto	l4341
  2681  0001AE                     u5070:
  2682  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  2683  0001B0                     
  2684                           ; BSR set to: 0
  2685  0001B0  5073               	movf	_stop^0,w,c
  2686  0001B2  B4D8               	btfsc	status,2,c
  2687  0001B4  EFDE  F000         	goto	u5081
  2688  0001B8  EFE1  F000         	goto	u5080
  2689  0001BC                     u5081:
  2690  0001BC  FFFF               	dw	65535	; assembler added errata NOP
  2691  0001BE  EF92  F000         	goto	l4329
  2692  0001C2                     u5080:
  2693  0001C2                     l4341:
  2694  0001C2  FFFF               	dw	65535	; assembler added errata NOP
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;main.c: 563:         for(int i = 0; (i<(((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_Pi
      +                          ck-Y_diff)))) && !stop; i++){Y_axis(Y_dir);}
  2698  0001C4  0E00               	movlw	0
  2699  0001C6  6FBA               	movwf	(pick_and_place@i_585+1)& (0+255),b
  2700  0001C8  0E00               	movlw	0
  2701  0001CA  6FB9               	movwf	pick_and_place@i_585& (0+255),b
  2702  0001CC  EFEF  F000         	goto	l4347
  2703  0001D0                     l4343:
  2704  0001D0  FFFF               	dw	65535	; assembler added errata NOP
  2705                           
  2706                           ; BSR set to: 0
  2707  0001D2  5071               	movf	_Y_dir^0,w,c
  2708  0001D4  EC41  F014         	call	_Y_axis
  2709  0001D8  0100               	movlb	0	; () banked
  2710  0001DA  4BB9               	infsnz	pick_and_place@i_585& (0+255),f,b
  2711  0001DC  2BBA               	incf	(pick_and_place@i_585+1)& (0+255),f,b
  2712  0001DE                     l4347:
  2713  0001DE  FFFF               	dw	65535	; assembler added errata NOP
  2714                           
  2715                           ; BSR set to: 0
  2716  0001E0  505F               	movf	_Y_diff^0,w,c
  2717  0001E2  5C69               	subwf	_Y_Pick^0,w,c
  2718  0001E4  6E3B               	movwf	??_pick_and_place^0,c
  2719  0001E6  5060               	movf	(_Y_diff+1)^0,w,c
  2720  0001E8  586A               	subwfb	(_Y_Pick+1)^0,w,c
  2721  0001EA  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2722  0001EC  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2723  0001EE  EF04  F001         	goto	u5090
  2724  0001F2  503C               	movf	(??_pick_and_place+1)^0,w,c
  2725  0001F4  E106               	bnz	u5091
  2726  0001F6  043B               	decf	??_pick_and_place^0,w,c
  2727  0001F8  B0D8               	btfsc	status,0,c
  2728  0001FA  EF01  F001         	goto	u5091
  2729  0001FE  EF04  F001         	goto	u5090
  2730  000202                     u5091:
  2731  000202  FFFF               	dw	65535	; assembler added errata NOP
  2732  000204  EF15  F001         	goto	l4351
  2733  000208                     u5090:
  2734  000208  FFFF               	dw	65535	; assembler added errata NOP
  2735  00020A                     
  2736                           ; BSR set to: 0
  2737  00020A  505F               	movf	_Y_diff^0,w,c
  2738  00020C  5C69               	subwf	_Y_Pick^0,w,c
  2739  00020E  6E3B               	movwf	??_pick_and_place^0,c
  2740  000210  5060               	movf	(_Y_diff+1)^0,w,c
  2741  000212  586A               	subwfb	(_Y_Pick+1)^0,w,c
  2742  000214  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2743  000216  1E3B               	comf	??_pick_and_place^0,f,c
  2744  000218  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2745  00021A  4A3B               	infsnz	??_pick_and_place^0,f,c
  2746  00021C  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2747  00021E  C03B  F0BB         	movff	??_pick_and_place,_pick_and_place$587
  2748  000222  C03C  F0BC         	movff	??_pick_and_place+1,_pick_and_place$587+1
  2749  000226  EF1C  F001         	goto	l325
  2750  00022A                     l4351:
  2751  00022A  FFFF               	dw	65535	; assembler added errata NOP
  2752                           
  2753                           ; BSR set to: 0
  2754  00022C  505F               	movf	_Y_diff^0,w,c
  2755  00022E  5C69               	subwf	_Y_Pick^0,w,c
  2756  000230  6FBB               	movwf	_pick_and_place$587& (0+255),b
  2757  000232  5060               	movf	(_Y_diff+1)^0,w,c
  2758  000234  586A               	subwfb	(_Y_Pick+1)^0,w,c
  2759  000236  6FBC               	movwf	(_pick_and_place$587+1)& (0+255),b
  2760  000238                     l325:
  2761  000238  FFFF               	dw	65535	; assembler added errata NOP
  2762                           
  2763                           ; BSR set to: 0
  2764  00023A  51BB               	movf	_pick_and_place$587& (0+255),w,b
  2765  00023C  5DB9               	subwf	pick_and_place@i_585& (0+255),w,b
  2766  00023E  51BA               	movf	(pick_and_place@i_585+1)& (0+255),w,b
  2767  000240  0A80               	xorlw	128
  2768  000242  6E3B               	movwf	??_pick_and_place^0,c
  2769  000244  51BC               	movf	(_pick_and_place$587+1)& (0+255),w,b
  2770  000246  0A80               	xorlw	128
  2771  000248  583B               	subwfb	??_pick_and_place^0,w,c
  2772  00024A  B0D8               	btfsc	status,0,c
  2773  00024C  EF2A  F001         	goto	u5101
  2774  000250  EF2D  F001         	goto	u5100
  2775  000254                     u5101:
  2776  000254  FFFF               	dw	65535	; assembler added errata NOP
  2777  000256  EF37  F001         	goto	l4355
  2778  00025A                     u5100:
  2779  00025A  FFFF               	dw	65535	; assembler added errata NOP
  2780  00025C                     
  2781                           ; BSR set to: 0
  2782  00025C  5073               	movf	_stop^0,w,c
  2783  00025E  B4D8               	btfsc	status,2,c
  2784  000260  EF34  F001         	goto	u5111
  2785  000264  EF37  F001         	goto	u5110
  2786  000268                     u5111:
  2787  000268  FFFF               	dw	65535	; assembler added errata NOP
  2788  00026A  EFE8  F000         	goto	l4343
  2789  00026E                     u5110:
  2790  00026E                     l4355:
  2791  00026E  FFFF               	dw	65535	; assembler added errata NOP
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;main.c: 564:         for(int i = 0; (i<(((Angle_diff-Pick_Angle) > 0 ? (Angle_diff-Pick
      +                          _Angle) : -(Angle_diff-Pick_Angle))/3.6)) && !stop; i++){Twister(Rot_dir);}
  2795  000270  0E00               	movlw	0
  2796  000272  6FBE               	movwf	(pick_and_place@i_588+1)& (0+255),b
  2797  000274  0E00               	movlw	0
  2798  000276  6FBD               	movwf	pick_and_place@i_588& (0+255),b
  2799  000278  EF45  F001         	goto	l4361
  2800  00027C                     l4357:
  2801  00027C  FFFF               	dw	65535	; assembler added errata NOP
  2802  00027E  5070               	movf	_Rot_dir^0,w,c
  2803  000280  EC33  F015         	call	_Twister
  2804  000284  0100               	movlb	0	; () banked
  2805  000286  4BBD               	infsnz	pick_and_place@i_588& (0+255),f,b
  2806  000288  2BBE               	incf	(pick_and_place@i_588+1)& (0+255),f,b
  2807  00028A                     l4361:
  2808  00028A  FFFF               	dw	65535	; assembler added errata NOP
  2809                           
  2810                           ; BSR set to: 0
  2811  00028C  5065               	movf	_Pick_Angle^0,w,c
  2812  00028E  5C5D               	subwf	_Angle_diff^0,w,c
  2813  000290  6E3B               	movwf	??_pick_and_place^0,c
  2814  000292  5066               	movf	(_Pick_Angle+1)^0,w,c
  2815  000294  585E               	subwfb	(_Angle_diff+1)^0,w,c
  2816  000296  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2817  000298  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2818  00029A  EF5A  F001         	goto	u5120
  2819  00029E  503C               	movf	(??_pick_and_place+1)^0,w,c
  2820  0002A0  E106               	bnz	u5121
  2821  0002A2  043B               	decf	??_pick_and_place^0,w,c
  2822  0002A4  B0D8               	btfsc	status,0,c
  2823  0002A6  EF57  F001         	goto	u5121
  2824  0002AA  EF5A  F001         	goto	u5120
  2825  0002AE                     u5121:
  2826  0002AE  FFFF               	dw	65535	; assembler added errata NOP
  2827  0002B0  EF6B  F001         	goto	l4365
  2828  0002B4                     u5120:
  2829  0002B4  FFFF               	dw	65535	; assembler added errata NOP
  2830  0002B6                     
  2831                           ; BSR set to: 0
  2832  0002B6  5065               	movf	_Pick_Angle^0,w,c
  2833  0002B8  5C5D               	subwf	_Angle_diff^0,w,c
  2834  0002BA  6E3B               	movwf	??_pick_and_place^0,c
  2835  0002BC  5066               	movf	(_Pick_Angle+1)^0,w,c
  2836  0002BE  585E               	subwfb	(_Angle_diff+1)^0,w,c
  2837  0002C0  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2838  0002C2  1E3B               	comf	??_pick_and_place^0,f,c
  2839  0002C4  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2840  0002C6  4A3B               	infsnz	??_pick_and_place^0,f,c
  2841  0002C8  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2842  0002CA  C03B  F0BF         	movff	??_pick_and_place,_pick_and_place$590
  2843  0002CE  C03C  F0C0         	movff	??_pick_and_place+1,_pick_and_place$590+1
  2844  0002D2  EF72  F001         	goto	l4367
  2845  0002D6                     l4365:
  2846  0002D6  FFFF               	dw	65535	; assembler added errata NOP
  2847                           
  2848                           ; BSR set to: 0
  2849  0002D8  5065               	movf	_Pick_Angle^0,w,c
  2850  0002DA  5C5D               	subwf	_Angle_diff^0,w,c
  2851  0002DC  6FBF               	movwf	_pick_and_place$590& (0+255),b
  2852  0002DE  5066               	movf	(_Pick_Angle+1)^0,w,c
  2853  0002E0  585E               	subwfb	(_Angle_diff+1)^0,w,c
  2854  0002E2  6FC0               	movwf	(_pick_and_place$590+1)& (0+255),b
  2855  0002E4                     l4367:
  2856  0002E4  FFFF               	dw	65535	; assembler added errata NOP
  2857                           
  2858                           ; BSR set to: 0
  2859  0002E6  C0BD  F008         	movff	pick_and_place@i_588,___xxtofl@val
  2860  0002EA  C0BE  F009         	movff	pick_and_place@i_588+1,___xxtofl@val+1
  2861  0002EE  0E00               	movlw	0
  2862  0002F0  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  2863  0002F2  0EFF               	movlw	-1
  2864  0002F4  6E0A               	movwf	(___xxtofl@val+2)^0,c
  2865  0002F6  6E0B               	movwf	(___xxtofl@val+3)^0,c
  2866  0002F8  0E01               	movlw	1
  2867  0002FA  ECF7  F00C         	call	___xxtofl
  2868  0002FE  C008  F02F         	movff	?___xxtofl,___flge@ff1
  2869  000302  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
  2870  000306  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
  2871  00030A  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
  2872  00030E  0E66               	movlw	102
  2873  000310  6E1A               	movwf	___fldiv@a^0,c
  2874  000312  0E66               	movlw	102
  2875  000314  6E1B               	movwf	(___fldiv@a+1)^0,c
  2876  000316  0E66               	movlw	102
  2877  000318  6E1C               	movwf	(___fldiv@a+2)^0,c
  2878  00031A  0E40               	movlw	64
  2879  00031C  6E1D               	movwf	(___fldiv@a+3)^0,c
  2880  00031E  C0BF  F008         	movff	_pick_and_place$590,___xxtofl@val
  2881  000322  C0C0  F009         	movff	_pick_and_place$590+1,___xxtofl@val+1
  2882  000326  0E00               	movlw	0
  2883  000328  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  2884  00032A  0EFF               	movlw	-1
  2885  00032C  6E0A               	movwf	(___xxtofl@val+2)^0,c
  2886  00032E  6E0B               	movwf	(___xxtofl@val+3)^0,c
  2887  000330  0E01               	movlw	1
  2888  000332  ECF7  F00C         	call	___xxtofl
  2889  000336  C008  F016         	movff	?___xxtofl,___fldiv@b
  2890  00033A  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  2891  00033E  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  2892  000342  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  2893  000346  ECEB  F008         	call	___fldiv	;wreg free
  2894  00034A  C016  F033         	movff	?___fldiv,___flge@ff2
  2895  00034E  C017  F034         	movff	?___fldiv+1,___flge@ff2+1
  2896  000352  C018  F035         	movff	?___fldiv+2,___flge@ff2+2
  2897  000356  C019  F036         	movff	?___fldiv+3,___flge@ff2+3
  2898  00035A  ECAB  F011         	call	___flge	;wreg free
  2899  00035E  B0D8               	btfsc	status,0,c
  2900  000360  EFB4  F001         	goto	u5131
  2901  000364  EFB7  F001         	goto	u5130
  2902  000368                     u5131:
  2903  000368  FFFF               	dw	65535	; assembler added errata NOP
  2904  00036A  EFC1  F001         	goto	l4371
  2905  00036E                     u5130:
  2906  00036E  FFFF               	dw	65535	; assembler added errata NOP
  2907  000370  5073               	movf	_stop^0,w,c
  2908  000372  B4D8               	btfsc	status,2,c
  2909  000374  EFBE  F001         	goto	u5141
  2910  000378  EFC1  F001         	goto	u5140
  2911  00037C                     u5141:
  2912  00037C  FFFF               	dw	65535	; assembler added errata NOP
  2913  00037E  EF3E  F001         	goto	l4357
  2914  000382                     u5140:
  2915  000382                     l4371:
  2916  000382  FFFF               	dw	65535	; assembler added errata NOP
  2917                           
  2918                           ;main.c: 566:         for(int i=0; i<3; i++){Z_axis(1);}
  2919  000384  0E00               	movlw	0
  2920  000386  0100               	movlb	0	; () banked
  2921  000388  6FCE               	movwf	(pick_and_place@i_591+1)& (0+255),b
  2922  00038A  0E00               	movlw	0
  2923  00038C  6FCD               	movwf	pick_and_place@i_591& (0+255),b
  2924  00038E                     l4377:
  2925  00038E  FFFF               	dw	65535	; assembler added errata NOP
  2926                           
  2927                           ; BSR set to: 0
  2928  000390  0E01               	movlw	1
  2929  000392  ECC8  F013         	call	_Z_axis
  2930  000396  0100               	movlb	0	; () banked
  2931  000398  4BCD               	infsnz	pick_and_place@i_591& (0+255),f,b
  2932  00039A  2BCE               	incf	(pick_and_place@i_591+1)& (0+255),f,b
  2933  00039C                     
  2934                           ; BSR set to: 0
  2935  00039C  BFCE               	btfsc	(pick_and_place@i_591+1)& (0+255),7,b
  2936  00039E  EFDA  F001         	goto	u5151
  2937  0003A2  51CE               	movf	(pick_and_place@i_591+1)& (0+255),w,b
  2938  0003A4  E10A               	bnz	u5150
  2939  0003A6  0E03               	movlw	3
  2940  0003A8  5DCD               	subwf	pick_and_place@i_591& (0+255),w,b
  2941  0003AA  A0D8               	btfss	status,0,c
  2942  0003AC  EFDA  F001         	goto	u5151
  2943  0003B0  EFDD  F001         	goto	u5150
  2944  0003B4                     u5151:
  2945  0003B4  FFFF               	dw	65535	; assembler added errata NOP
  2946  0003B6  EFC7  F001         	goto	l4377
  2947  0003BA                     u5150:
  2948  0003BA  FFFF               	dw	65535	; assembler added errata NOP
  2949  0003BC                     
  2950                           ; BSR set to: 0
  2951                           ;main.c: 569:         for(int i=0; i<3; i++){Z_axis(0);}
  2952  0003BC  0E00               	movlw	0
  2953  0003BE  6FD0               	movwf	(pick_and_place@i_593+1)& (0+255),b
  2954  0003C0  0E00               	movlw	0
  2955  0003C2  6FCF               	movwf	pick_and_place@i_593& (0+255),b
  2956  0003C4                     l4385:
  2957  0003C4  FFFF               	dw	65535	; assembler added errata NOP
  2958                           
  2959                           ; BSR set to: 0
  2960  0003C6  BFD0               	btfsc	(pick_and_place@i_593+1)& (0+255),7,b
  2961  0003C8  EFEF  F001         	goto	u5161
  2962  0003CC  51D0               	movf	(pick_and_place@i_593+1)& (0+255),w,b
  2963  0003CE  E10A               	bnz	u5160
  2964  0003D0  0E03               	movlw	3
  2965  0003D2  5DCF               	subwf	pick_and_place@i_593& (0+255),w,b
  2966  0003D4  A0D8               	btfss	status,0,c
  2967  0003D6  EFEF  F001         	goto	u5161
  2968  0003DA  EFF2  F001         	goto	u5160
  2969  0003DE                     u5161:
  2970  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  2971  0003E0  EFF5  F001         	goto	l4389
  2972  0003E4                     u5160:
  2973  0003E4  FFFF               	dw	65535	; assembler added errata NOP
  2974  0003E6  EFFE  F001         	goto	l4395
  2975  0003EA                     l4389:
  2976  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  2977                           
  2978                           ; BSR set to: 0
  2979  0003EC  0E00               	movlw	0
  2980  0003EE  ECC8  F013         	call	_Z_axis
  2981  0003F2  0100               	movlb	0	; () banked
  2982  0003F4  4BCF               	infsnz	pick_and_place@i_593& (0+255),f,b
  2983  0003F6  2BD0               	incf	(pick_and_place@i_593+1)& (0+255),f,b
  2984  0003F8  EFE2  F001         	goto	l4385
  2985  0003FC                     l4395:
  2986  0003FC  FFFF               	dw	65535	; assembler added errata NOP
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;main.c: 573:         X_dir=((X_Pick<X_Place)? 1:0);
  2990  0003FE  506B               	movf	_X_Place^0,w,c
  2991  000400  5C6D               	subwf	_X_Pick^0,w,c
  2992  000402  506E               	movf	(_X_Pick+1)^0,w,c
  2993  000404  0A80               	xorlw	128
  2994  000406  6E3B               	movwf	??_pick_and_place^0,c
  2995  000408  506C               	movf	(_X_Place+1)^0,w,c
  2996  00040A  0A80               	xorlw	128
  2997  00040C  583B               	subwfb	??_pick_and_place^0,w,c
  2998  00040E  A0D8               	btfss	status,0,c
  2999  000410  EF0C  F002         	goto	u5171
  3000  000414  EF10  F002         	goto	u5170
  3001  000418                     u5171:
  3002  000418  FFFF               	dw	65535	; assembler added errata NOP
  3003  00041A  0E01               	movlw	1
  3004  00041C  EF12  F002         	goto	u5180
  3005  000420                     u5170:
  3006  000420  FFFF               	dw	65535	; assembler added errata NOP
  3007  000422  0E00               	movlw	0
  3008  000424                     u5180:
  3009  000424  FFFF               	dw	65535	; assembler added errata NOP
  3010  000426  6E72               	movwf	_X_dir^0,c
  3011                           
  3012                           ;main.c: 574:         Y_dir=((Y_Pick<Y_Place)? 1:0);
  3013  000428  5067               	movf	_Y_Place^0,w,c
  3014  00042A  5C69               	subwf	_Y_Pick^0,w,c
  3015  00042C  506A               	movf	(_Y_Pick+1)^0,w,c
  3016  00042E  0A80               	xorlw	128
  3017  000430  6E3B               	movwf	??_pick_and_place^0,c
  3018  000432  5068               	movf	(_Y_Place+1)^0,w,c
  3019  000434  0A80               	xorlw	128
  3020  000436  583B               	subwfb	??_pick_and_place^0,w,c
  3021  000438  A0D8               	btfss	status,0,c
  3022  00043A  EF21  F002         	goto	u5191
  3023  00043E  EF25  F002         	goto	u5190
  3024  000442                     u5191:
  3025  000442  FFFF               	dw	65535	; assembler added errata NOP
  3026  000444  0E01               	movlw	1
  3027  000446  EF27  F002         	goto	u5200
  3028  00044A                     u5190:
  3029  00044A  FFFF               	dw	65535	; assembler added errata NOP
  3030  00044C  0E00               	movlw	0
  3031  00044E                     u5200:
  3032  00044E  FFFF               	dw	65535	; assembler added errata NOP
  3033  000450  6E71               	movwf	_Y_dir^0,c
  3034                           
  3035                           ;main.c: 575:         Rot_dir=((Pick_Angle<Place_Angle)? 1:0);
  3036  000452  5063               	movf	_Place_Angle^0,w,c
  3037  000454  5C65               	subwf	_Pick_Angle^0,w,c
  3038  000456  5066               	movf	(_Pick_Angle+1)^0,w,c
  3039  000458  0A80               	xorlw	128
  3040  00045A  6E3B               	movwf	??_pick_and_place^0,c
  3041  00045C  5064               	movf	(_Place_Angle+1)^0,w,c
  3042  00045E  0A80               	xorlw	128
  3043  000460  583B               	subwfb	??_pick_and_place^0,w,c
  3044  000462  A0D8               	btfss	status,0,c
  3045  000464  EF36  F002         	goto	u5211
  3046  000468  EF3A  F002         	goto	u5210
  3047  00046C                     u5211:
  3048  00046C  FFFF               	dw	65535	; assembler added errata NOP
  3049  00046E  0E01               	movlw	1
  3050  000470  EF3C  F002         	goto	u5220
  3051  000474                     u5210:
  3052  000474  FFFF               	dw	65535	; assembler added errata NOP
  3053  000476  0E00               	movlw	0
  3054  000478                     u5220:
  3055  000478  FFFF               	dw	65535	; assembler added errata NOP
  3056  00047A  6E70               	movwf	_Rot_dir^0,c
  3057  00047C                     
  3058                           ; BSR set to: 0
  3059                           ;main.c: 577:         for(int i = 0; (i<(((X_Place-X_diff) > 0 ? (X_Place-X_diff) : -(X_
      +                          Place-X_diff)))) && !stop; i++){X_axis(X_dir);}
  3060  00047C  0E00               	movlw	0
  3061  00047E  6FC2               	movwf	(pick_and_place@i_594+1)& (0+255),b
  3062  000480  0E00               	movlw	0
  3063  000482  6FC1               	movwf	pick_and_place@i_594& (0+255),b
  3064  000484  EF4B  F002         	goto	l4403
  3065  000488                     l4399:
  3066  000488  FFFF               	dw	65535	; assembler added errata NOP
  3067                           
  3068                           ; BSR set to: 0
  3069  00048A  5072               	movf	_X_dir^0,w,c
  3070  00048C  ECBA  F014         	call	_X_axis
  3071  000490  0100               	movlb	0	; () banked
  3072  000492  4BC1               	infsnz	pick_and_place@i_594& (0+255),f,b
  3073  000494  2BC2               	incf	(pick_and_place@i_594+1)& (0+255),f,b
  3074  000496                     l4403:
  3075  000496  FFFF               	dw	65535	; assembler added errata NOP
  3076                           
  3077                           ; BSR set to: 0
  3078  000498  5061               	movf	_X_diff^0,w,c
  3079  00049A  5C6B               	subwf	_X_Place^0,w,c
  3080  00049C  6E3B               	movwf	??_pick_and_place^0,c
  3081  00049E  5062               	movf	(_X_diff+1)^0,w,c
  3082  0004A0  586C               	subwfb	(_X_Place+1)^0,w,c
  3083  0004A2  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3084  0004A4  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3085  0004A6  EF60  F002         	goto	u5230
  3086  0004AA  503C               	movf	(??_pick_and_place+1)^0,w,c
  3087  0004AC  E106               	bnz	u5231
  3088  0004AE  043B               	decf	??_pick_and_place^0,w,c
  3089  0004B0  B0D8               	btfsc	status,0,c
  3090  0004B2  EF5D  F002         	goto	u5231
  3091  0004B6  EF60  F002         	goto	u5230
  3092  0004BA                     u5231:
  3093  0004BA  FFFF               	dw	65535	; assembler added errata NOP
  3094  0004BC  EF71  F002         	goto	l4407
  3095  0004C0                     u5230:
  3096  0004C0  FFFF               	dw	65535	; assembler added errata NOP
  3097  0004C2                     
  3098                           ; BSR set to: 0
  3099  0004C2  5061               	movf	_X_diff^0,w,c
  3100  0004C4  5C6B               	subwf	_X_Place^0,w,c
  3101  0004C6  6E3B               	movwf	??_pick_and_place^0,c
  3102  0004C8  5062               	movf	(_X_diff+1)^0,w,c
  3103  0004CA  586C               	subwfb	(_X_Place+1)^0,w,c
  3104  0004CC  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3105  0004CE  1E3B               	comf	??_pick_and_place^0,f,c
  3106  0004D0  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3107  0004D2  4A3B               	infsnz	??_pick_and_place^0,f,c
  3108  0004D4  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3109  0004D6  C03B  F0C3         	movff	??_pick_and_place,_pick_and_place$595
  3110  0004DA  C03C  F0C4         	movff	??_pick_and_place+1,_pick_and_place$595+1
  3111  0004DE  EF78  F002         	goto	l347
  3112  0004E2                     l4407:
  3113  0004E2  FFFF               	dw	65535	; assembler added errata NOP
  3114                           
  3115                           ; BSR set to: 0
  3116  0004E4  5061               	movf	_X_diff^0,w,c
  3117  0004E6  5C6B               	subwf	_X_Place^0,w,c
  3118  0004E8  6FC3               	movwf	_pick_and_place$595& (0+255),b
  3119  0004EA  5062               	movf	(_X_diff+1)^0,w,c
  3120  0004EC  586C               	subwfb	(_X_Place+1)^0,w,c
  3121  0004EE  6FC4               	movwf	(_pick_and_place$595+1)& (0+255),b
  3122  0004F0                     l347:
  3123  0004F0  FFFF               	dw	65535	; assembler added errata NOP
  3124                           
  3125                           ; BSR set to: 0
  3126  0004F2  51C3               	movf	_pick_and_place$595& (0+255),w,b
  3127  0004F4  5DC1               	subwf	pick_and_place@i_594& (0+255),w,b
  3128  0004F6  51C2               	movf	(pick_and_place@i_594+1)& (0+255),w,b
  3129  0004F8  0A80               	xorlw	128
  3130  0004FA  6E3B               	movwf	??_pick_and_place^0,c
  3131  0004FC  51C4               	movf	(_pick_and_place$595+1)& (0+255),w,b
  3132  0004FE  0A80               	xorlw	128
  3133  000500  583B               	subwfb	??_pick_and_place^0,w,c
  3134  000502  B0D8               	btfsc	status,0,c
  3135  000504  EF86  F002         	goto	u5241
  3136  000508  EF89  F002         	goto	u5240
  3137  00050C                     u5241:
  3138  00050C  FFFF               	dw	65535	; assembler added errata NOP
  3139  00050E  EF93  F002         	goto	l4411
  3140  000512                     u5240:
  3141  000512  FFFF               	dw	65535	; assembler added errata NOP
  3142  000514                     
  3143                           ; BSR set to: 0
  3144  000514  5073               	movf	_stop^0,w,c
  3145  000516  B4D8               	btfsc	status,2,c
  3146  000518  EF90  F002         	goto	u5251
  3147  00051C  EF93  F002         	goto	u5250
  3148  000520                     u5251:
  3149  000520  FFFF               	dw	65535	; assembler added errata NOP
  3150  000522  EF44  F002         	goto	l4399
  3151  000526                     u5250:
  3152  000526                     l4411:
  3153  000526  FFFF               	dw	65535	; assembler added errata NOP
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;main.c: 578:         for(int i = 0; (i<(((Y_Place-Y_diff) > 0 ? (Y_Place-Y_diff) : -(Y_
      +                          Place-Y_diff)))) && !stop; i++){Y_axis(Y_dir);}
  3157  000528  0E00               	movlw	0
  3158  00052A  6FC6               	movwf	(pick_and_place@i_596+1)& (0+255),b
  3159  00052C  0E00               	movlw	0
  3160  00052E  6FC5               	movwf	pick_and_place@i_596& (0+255),b
  3161  000530  EFA1  F002         	goto	l4417
  3162  000534                     l4413:
  3163  000534  FFFF               	dw	65535	; assembler added errata NOP
  3164                           
  3165                           ; BSR set to: 0
  3166  000536  5071               	movf	_Y_dir^0,w,c
  3167  000538  EC41  F014         	call	_Y_axis
  3168  00053C  0100               	movlb	0	; () banked
  3169  00053E  4BC5               	infsnz	pick_and_place@i_596& (0+255),f,b
  3170  000540  2BC6               	incf	(pick_and_place@i_596+1)& (0+255),f,b
  3171  000542                     l4417:
  3172  000542  FFFF               	dw	65535	; assembler added errata NOP
  3173                           
  3174                           ; BSR set to: 0
  3175  000544  505F               	movf	_Y_diff^0,w,c
  3176  000546  5C67               	subwf	_Y_Place^0,w,c
  3177  000548  6E3B               	movwf	??_pick_and_place^0,c
  3178  00054A  5060               	movf	(_Y_diff+1)^0,w,c
  3179  00054C  5868               	subwfb	(_Y_Place+1)^0,w,c
  3180  00054E  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3181  000550  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3182  000552  EFB6  F002         	goto	u5260
  3183  000556  503C               	movf	(??_pick_and_place+1)^0,w,c
  3184  000558  E106               	bnz	u5261
  3185  00055A  043B               	decf	??_pick_and_place^0,w,c
  3186  00055C  B0D8               	btfsc	status,0,c
  3187  00055E  EFB3  F002         	goto	u5261
  3188  000562  EFB6  F002         	goto	u5260
  3189  000566                     u5261:
  3190  000566  FFFF               	dw	65535	; assembler added errata NOP
  3191  000568  EFC7  F002         	goto	l4421
  3192  00056C                     u5260:
  3193  00056C  FFFF               	dw	65535	; assembler added errata NOP
  3194  00056E                     
  3195                           ; BSR set to: 0
  3196  00056E  505F               	movf	_Y_diff^0,w,c
  3197  000570  5C67               	subwf	_Y_Place^0,w,c
  3198  000572  6E3B               	movwf	??_pick_and_place^0,c
  3199  000574  5060               	movf	(_Y_diff+1)^0,w,c
  3200  000576  5868               	subwfb	(_Y_Place+1)^0,w,c
  3201  000578  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3202  00057A  1E3B               	comf	??_pick_and_place^0,f,c
  3203  00057C  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3204  00057E  4A3B               	infsnz	??_pick_and_place^0,f,c
  3205  000580  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3206  000582  C03B  F0C7         	movff	??_pick_and_place,_pick_and_place$597
  3207  000586  C03C  F0C8         	movff	??_pick_and_place+1,_pick_and_place$597+1
  3208  00058A  EFCE  F002         	goto	l356
  3209  00058E                     l4421:
  3210  00058E  FFFF               	dw	65535	; assembler added errata NOP
  3211                           
  3212                           ; BSR set to: 0
  3213  000590  505F               	movf	_Y_diff^0,w,c
  3214  000592  5C67               	subwf	_Y_Place^0,w,c
  3215  000594  6FC7               	movwf	_pick_and_place$597& (0+255),b
  3216  000596  5060               	movf	(_Y_diff+1)^0,w,c
  3217  000598  5868               	subwfb	(_Y_Place+1)^0,w,c
  3218  00059A  6FC8               	movwf	(_pick_and_place$597+1)& (0+255),b
  3219  00059C                     l356:
  3220  00059C  FFFF               	dw	65535	; assembler added errata NOP
  3221                           
  3222                           ; BSR set to: 0
  3223  00059E  51C7               	movf	_pick_and_place$597& (0+255),w,b
  3224  0005A0  5DC5               	subwf	pick_and_place@i_596& (0+255),w,b
  3225  0005A2  51C6               	movf	(pick_and_place@i_596+1)& (0+255),w,b
  3226  0005A4  0A80               	xorlw	128
  3227  0005A6  6E3B               	movwf	??_pick_and_place^0,c
  3228  0005A8  51C8               	movf	(_pick_and_place$597+1)& (0+255),w,b
  3229  0005AA  0A80               	xorlw	128
  3230  0005AC  583B               	subwfb	??_pick_and_place^0,w,c
  3231  0005AE  B0D8               	btfsc	status,0,c
  3232  0005B0  EFDC  F002         	goto	u5271
  3233  0005B4  EFDF  F002         	goto	u5270
  3234  0005B8                     u5271:
  3235  0005B8  FFFF               	dw	65535	; assembler added errata NOP
  3236  0005BA  EFE9  F002         	goto	l4425
  3237  0005BE                     u5270:
  3238  0005BE  FFFF               	dw	65535	; assembler added errata NOP
  3239  0005C0                     
  3240                           ; BSR set to: 0
  3241  0005C0  5073               	movf	_stop^0,w,c
  3242  0005C2  B4D8               	btfsc	status,2,c
  3243  0005C4  EFE6  F002         	goto	u5281
  3244  0005C8  EFE9  F002         	goto	u5280
  3245  0005CC                     u5281:
  3246  0005CC  FFFF               	dw	65535	; assembler added errata NOP
  3247  0005CE  EF9A  F002         	goto	l4413
  3248  0005D2                     u5280:
  3249  0005D2                     l4425:
  3250  0005D2  FFFF               	dw	65535	; assembler added errata NOP
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;main.c: 579:         for(int i = 0; (i<(((Pick_Angle-Place_Angle) > 0 ? (Pick_Angle-Pla
      +                          ce_Angle) : -(Pick_Angle-Place_Angle))/3.6)) && !stop; i++){Twister(Rot_dir);}
  3254  0005D4  0E00               	movlw	0
  3255  0005D6  6FCA               	movwf	(pick_and_place@i_598+1)& (0+255),b
  3256  0005D8  0E00               	movlw	0
  3257  0005DA  6FC9               	movwf	pick_and_place@i_598& (0+255),b
  3258  0005DC  EFF7  F002         	goto	l4431
  3259  0005E0                     l4427:
  3260  0005E0  FFFF               	dw	65535	; assembler added errata NOP
  3261  0005E2  5070               	movf	_Rot_dir^0,w,c
  3262  0005E4  EC33  F015         	call	_Twister
  3263  0005E8  0100               	movlb	0	; () banked
  3264  0005EA  4BC9               	infsnz	pick_and_place@i_598& (0+255),f,b
  3265  0005EC  2BCA               	incf	(pick_and_place@i_598+1)& (0+255),f,b
  3266  0005EE                     l4431:
  3267  0005EE  FFFF               	dw	65535	; assembler added errata NOP
  3268                           
  3269                           ; BSR set to: 0
  3270  0005F0  5063               	movf	_Place_Angle^0,w,c
  3271  0005F2  5C65               	subwf	_Pick_Angle^0,w,c
  3272  0005F4  6E3B               	movwf	??_pick_and_place^0,c
  3273  0005F6  5064               	movf	(_Place_Angle+1)^0,w,c
  3274  0005F8  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3275  0005FA  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3276  0005FC  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3277  0005FE  EF0C  F003         	goto	u5290
  3278  000602  503C               	movf	(??_pick_and_place+1)^0,w,c
  3279  000604  E106               	bnz	u5291
  3280  000606  043B               	decf	??_pick_and_place^0,w,c
  3281  000608  B0D8               	btfsc	status,0,c
  3282  00060A  EF09  F003         	goto	u5291
  3283  00060E  EF0C  F003         	goto	u5290
  3284  000612                     u5291:
  3285  000612  FFFF               	dw	65535	; assembler added errata NOP
  3286  000614  EF1D  F003         	goto	l4435
  3287  000618                     u5290:
  3288  000618  FFFF               	dw	65535	; assembler added errata NOP
  3289  00061A                     
  3290                           ; BSR set to: 0
  3291  00061A  5063               	movf	_Place_Angle^0,w,c
  3292  00061C  5C65               	subwf	_Pick_Angle^0,w,c
  3293  00061E  6E3B               	movwf	??_pick_and_place^0,c
  3294  000620  5064               	movf	(_Place_Angle+1)^0,w,c
  3295  000622  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3296  000624  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3297  000626  1E3B               	comf	??_pick_and_place^0,f,c
  3298  000628  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3299  00062A  4A3B               	infsnz	??_pick_and_place^0,f,c
  3300  00062C  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3301  00062E  C03B  F0CB         	movff	??_pick_and_place,_pick_and_place$599
  3302  000632  C03C  F0CC         	movff	??_pick_and_place+1,_pick_and_place$599+1
  3303  000636  EF24  F003         	goto	l4437
  3304  00063A                     l4435:
  3305  00063A  FFFF               	dw	65535	; assembler added errata NOP
  3306                           
  3307                           ; BSR set to: 0
  3308  00063C  5063               	movf	_Place_Angle^0,w,c
  3309  00063E  5C65               	subwf	_Pick_Angle^0,w,c
  3310  000640  6FCB               	movwf	_pick_and_place$599& (0+255),b
  3311  000642  5064               	movf	(_Place_Angle+1)^0,w,c
  3312  000644  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3313  000646  6FCC               	movwf	(_pick_and_place$599+1)& (0+255),b
  3314  000648                     l4437:
  3315  000648  FFFF               	dw	65535	; assembler added errata NOP
  3316                           
  3317                           ; BSR set to: 0
  3318  00064A  C0C9  F008         	movff	pick_and_place@i_598,___xxtofl@val
  3319  00064E  C0CA  F009         	movff	pick_and_place@i_598+1,___xxtofl@val+1
  3320  000652  0E00               	movlw	0
  3321  000654  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3322  000656  0EFF               	movlw	-1
  3323  000658  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3324  00065A  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3325  00065C  0E01               	movlw	1
  3326  00065E  ECF7  F00C         	call	___xxtofl
  3327  000662  C008  F02F         	movff	?___xxtofl,___flge@ff1
  3328  000666  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
  3329  00066A  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
  3330  00066E  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
  3331  000672  0E66               	movlw	102
  3332  000674  6E1A               	movwf	___fldiv@a^0,c
  3333  000676  0E66               	movlw	102
  3334  000678  6E1B               	movwf	(___fldiv@a+1)^0,c
  3335  00067A  0E66               	movlw	102
  3336  00067C  6E1C               	movwf	(___fldiv@a+2)^0,c
  3337  00067E  0E40               	movlw	64
  3338  000680  6E1D               	movwf	(___fldiv@a+3)^0,c
  3339  000682  C0CB  F008         	movff	_pick_and_place$599,___xxtofl@val
  3340  000686  C0CC  F009         	movff	_pick_and_place$599+1,___xxtofl@val+1
  3341  00068A  0E00               	movlw	0
  3342  00068C  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3343  00068E  0EFF               	movlw	-1
  3344  000690  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3345  000692  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3346  000694  0E01               	movlw	1
  3347  000696  ECF7  F00C         	call	___xxtofl
  3348  00069A  C008  F016         	movff	?___xxtofl,___fldiv@b
  3349  00069E  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  3350  0006A2  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  3351  0006A6  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  3352  0006AA  ECEB  F008         	call	___fldiv	;wreg free
  3353  0006AE  C016  F033         	movff	?___fldiv,___flge@ff2
  3354  0006B2  C017  F034         	movff	?___fldiv+1,___flge@ff2+1
  3355  0006B6  C018  F035         	movff	?___fldiv+2,___flge@ff2+2
  3356  0006BA  C019  F036         	movff	?___fldiv+3,___flge@ff2+3
  3357  0006BE  ECAB  F011         	call	___flge	;wreg free
  3358  0006C2  B0D8               	btfsc	status,0,c
  3359  0006C4  EF66  F003         	goto	u5301
  3360  0006C8  EF69  F003         	goto	u5300
  3361  0006CC                     u5301:
  3362  0006CC  FFFF               	dw	65535	; assembler added errata NOP
  3363  0006CE  EF73  F003         	goto	l4441
  3364  0006D2                     u5300:
  3365  0006D2  FFFF               	dw	65535	; assembler added errata NOP
  3366  0006D4  5073               	movf	_stop^0,w,c
  3367  0006D6  B4D8               	btfsc	status,2,c
  3368  0006D8  EF70  F003         	goto	u5311
  3369  0006DC  EF73  F003         	goto	u5310
  3370  0006E0                     u5311:
  3371  0006E0  FFFF               	dw	65535	; assembler added errata NOP
  3372  0006E2  EFF0  F002         	goto	l4427
  3373  0006E6                     u5310:
  3374  0006E6                     l4441:
  3375  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  3376                           
  3377                           ;main.c: 580:         for(int i=0; i<3; i++){Z_axis(1);}
  3378  0006E8  0E00               	movlw	0
  3379  0006EA  0100               	movlb	0	; () banked
  3380  0006EC  6FD2               	movwf	(pick_and_place@i_600+1)& (0+255),b
  3381  0006EE  0E00               	movlw	0
  3382  0006F0  6FD1               	movwf	pick_and_place@i_600& (0+255),b
  3383  0006F2                     l4443:
  3384  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  3385                           
  3386                           ; BSR set to: 0
  3387  0006F4  BFD2               	btfsc	(pick_and_place@i_600+1)& (0+255),7,b
  3388  0006F6  EF86  F003         	goto	u5321
  3389  0006FA  51D2               	movf	(pick_and_place@i_600+1)& (0+255),w,b
  3390  0006FC  E10A               	bnz	u5320
  3391  0006FE  0E03               	movlw	3
  3392  000700  5DD1               	subwf	pick_and_place@i_600& (0+255),w,b
  3393  000702  A0D8               	btfss	status,0,c
  3394  000704  EF86  F003         	goto	u5321
  3395  000708  EF89  F003         	goto	u5320
  3396  00070C                     u5321:
  3397  00070C  FFFF               	dw	65535	; assembler added errata NOP
  3398  00070E  EF8C  F003         	goto	l4447
  3399  000712                     u5320:
  3400  000712  FFFF               	dw	65535	; assembler added errata NOP
  3401  000714  EF95  F003         	goto	l4453
  3402  000718                     l4447:
  3403  000718  FFFF               	dw	65535	; assembler added errata NOP
  3404                           
  3405                           ; BSR set to: 0
  3406  00071A  0E01               	movlw	1
  3407  00071C  ECC8  F013         	call	_Z_axis
  3408  000720  0100               	movlb	0	; () banked
  3409  000722  4BD1               	infsnz	pick_and_place@i_600& (0+255),f,b
  3410  000724  2BD2               	incf	(pick_and_place@i_600+1)& (0+255),f,b
  3411  000726  EF79  F003         	goto	l4443
  3412  00072A                     l4453:
  3413  00072A  FFFF               	dw	65535	; assembler added errata NOP
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;main.c: 583:         for(int i=0; i<3; i++){Z_axis(0);}
  3417  00072C  0E00               	movlw	0
  3418  00072E  6FD4               	movwf	(pick_and_place@i_601+1)& (0+255),b
  3419  000730  0E00               	movlw	0
  3420  000732  6FD3               	movwf	pick_and_place@i_601& (0+255),b
  3421  000734                     l4455:
  3422  000734  FFFF               	dw	65535	; assembler added errata NOP
  3423                           
  3424                           ; BSR set to: 0
  3425  000736  BFD4               	btfsc	(pick_and_place@i_601+1)& (0+255),7,b
  3426  000738  EFA7  F003         	goto	u5331
  3427  00073C  51D4               	movf	(pick_and_place@i_601+1)& (0+255),w,b
  3428  00073E  E10A               	bnz	u5330
  3429  000740  0E03               	movlw	3
  3430  000742  5DD3               	subwf	pick_and_place@i_601& (0+255),w,b
  3431  000744  A0D8               	btfss	status,0,c
  3432  000746  EFA7  F003         	goto	u5331
  3433  00074A  EFAA  F003         	goto	u5330
  3434  00074E                     u5331:
  3435  00074E  FFFF               	dw	65535	; assembler added errata NOP
  3436  000750  EFAD  F003         	goto	l4459
  3437  000754                     u5330:
  3438  000754  FFFF               	dw	65535	; assembler added errata NOP
  3439  000756  EFB6  F003         	goto	l370
  3440  00075A                     l4459:
  3441  00075A  FFFF               	dw	65535	; assembler added errata NOP
  3442                           
  3443                           ; BSR set to: 0
  3444  00075C  0E00               	movlw	0
  3445  00075E  ECC8  F013         	call	_Z_axis
  3446  000762  0100               	movlb	0	; () banked
  3447  000764  4BD3               	infsnz	pick_and_place@i_601& (0+255),f,b
  3448  000766  2BD4               	incf	(pick_and_place@i_601+1)& (0+255),f,b
  3449  000768  EF9A  F003         	goto	l4455
  3450  00076C                     l370:
  3451  00076C  FFFF               	dw	65535	; assembler added errata NOP
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;main.c: 585:         Angle_diff= Place_Angle;
  3455  00076E  C063  F05D         	movff	_Place_Angle,_Angle_diff
  3456  000772  C064  F05E         	movff	_Place_Angle+1,_Angle_diff+1
  3457                           
  3458                           ;main.c: 586:         X_diff = X_Place;
  3459  000776  C06B  F061         	movff	_X_Place,_X_diff
  3460  00077A  C06C  F062         	movff	_X_Place+1,_X_diff+1
  3461                           
  3462                           ;main.c: 587:         Y_diff = Y_Place;
  3463  00077E  C067  F05F         	movff	_Y_Place,_Y_diff
  3464  000782  C068  F060         	movff	_Y_Place+1,_Y_diff+1
  3465  000786                     
  3466                           ; BSR set to: 0
  3467  000786  0012               	return		;funcret
  3468  000788  FFFF               	dw	65535	; errata NOP
  3469  00078A                     __end_of_pick_and_place:
  3470                           	callstack 0
  3471                           
  3472 ;; *************** function _fetch_parameters *****************
  3473 ;; Defined at:
  3474 ;;		line 511 in file "main.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  Componnt        1    wreg     unsigned char 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  Componnt        1    7[COMRAM] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  2  298[None  ] int 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3488 ;;      Params:         0       0       0       0       0       0       0
  3489 ;;      Locals:         1       0       0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0
  3491 ;;      Totals:         1       0       0       0       0       0       0
  3492 ;;Total ram usage:        1 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 1
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_pick_and_place
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text8
  3503  0020E6                     __ptext8:
  3504                           	callstack 0
  3505  0020E6                     _fetch_parameters:
  3506                           	callstack 0
  3507  0020E6  FFFF               	dw	65535	; assembler added errata NOP
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;incstack = 0
  3511                           ;fetch_parameters@Componnt stored from wreg
  3512  0020E8  6E08               	movwf	fetch_parameters@Componnt^0,c
  3513  0020EA                     
  3514                           ;main.c: 512:     if(Componnt=='A')
  3515  0020EA  0E41               	movlw	65
  3516  0020EC  1808               	xorwf	fetch_parameters@Componnt^0,w,c
  3517  0020EE  A4D8               	btfss	status,2,c
  3518  0020F0  EF7C  F010         	goto	u4491
  3519  0020F4  EF7F  F010         	goto	u4490
  3520  0020F8                     u4491:
  3521  0020F8  FFFF               	dw	65535	; assembler added errata NOP
  3522  0020FA  EF9A  F010         	goto	l4067
  3523  0020FE                     u4490:
  3524  0020FE  FFFF               	dw	65535	; assembler added errata NOP
  3525  002100                     
  3526                           ;main.c: 513:         {;main.c: 514:             X_Pick=3;
  3527  002100  0E00               	movlw	0
  3528  002102  6E6E               	movwf	(_X_Pick+1)^0,c
  3529  002104  0E03               	movlw	3
  3530  002106  6E6D               	movwf	_X_Pick^0,c
  3531                           
  3532                           ;main.c: 515:             Y_Pick=4;
  3533  002108  0E00               	movlw	0
  3534  00210A  6E6A               	movwf	(_Y_Pick+1)^0,c
  3535  00210C  0E04               	movlw	4
  3536  00210E  6E69               	movwf	_Y_Pick^0,c
  3537                           
  3538                           ;main.c: 516:             Pick_Angle=0;
  3539  002110  0E00               	movlw	0
  3540  002112  6E66               	movwf	(_Pick_Angle+1)^0,c
  3541  002114  0E00               	movlw	0
  3542  002116  6E65               	movwf	_Pick_Angle^0,c
  3543                           
  3544                           ;main.c: 518:             X_Place=17;
  3545  002118  0E00               	movlw	0
  3546  00211A  6E6C               	movwf	(_X_Place+1)^0,c
  3547  00211C  0E11               	movlw	17
  3548  00211E  6E6B               	movwf	_X_Place^0,c
  3549                           
  3550                           ;main.c: 519:             Y_Place=5;
  3551  002120  0E00               	movlw	0
  3552  002122  6E68               	movwf	(_Y_Place+1)^0,c
  3553  002124  0E05               	movlw	5
  3554  002126  6E67               	movwf	_Y_Place^0,c
  3555                           
  3556                           ;main.c: 520:             Place_Angle=270;
  3557  002128  0E01               	movlw	1
  3558  00212A  6E64               	movwf	(_Place_Angle+1)^0,c
  3559  00212C  0E0E               	movlw	14
  3560  00212E  6E63               	movwf	_Place_Angle^0,c
  3561                           
  3562                           ;main.c: 521:         }
  3563  002130  EF0C  F011         	goto	l306
  3564  002134                     l4067:
  3565  002134  FFFF               	dw	65535	; assembler added errata NOP
  3566  002136  0E42               	movlw	66
  3567  002138  1808               	xorwf	fetch_parameters@Componnt^0,w,c
  3568  00213A  A4D8               	btfss	status,2,c
  3569  00213C  EFA2  F010         	goto	u4501
  3570  002140  EFA5  F010         	goto	u4500
  3571  002144                     u4501:
  3572  002144  FFFF               	dw	65535	; assembler added errata NOP
  3573  002146  EFC0  F010         	goto	l4071
  3574  00214A                     u4500:
  3575  00214A  FFFF               	dw	65535	; assembler added errata NOP
  3576  00214C                     
  3577                           ;main.c: 523:             X_Pick=3;
  3578  00214C  0E00               	movlw	0
  3579  00214E  6E6E               	movwf	(_X_Pick+1)^0,c
  3580  002150  0E03               	movlw	3
  3581  002152  6E6D               	movwf	_X_Pick^0,c
  3582                           
  3583                           ;main.c: 524:             Y_Pick=10;
  3584  002154  0E00               	movlw	0
  3585  002156  6E6A               	movwf	(_Y_Pick+1)^0,c
  3586  002158  0E0A               	movlw	10
  3587  00215A  6E69               	movwf	_Y_Pick^0,c
  3588                           
  3589                           ;main.c: 525:             Pick_Angle=90;
  3590  00215C  0E00               	movlw	0
  3591  00215E  6E66               	movwf	(_Pick_Angle+1)^0,c
  3592  002160  0E5A               	movlw	90
  3593  002162  6E65               	movwf	_Pick_Angle^0,c
  3594                           
  3595                           ;main.c: 527:             X_Place=10;
  3596  002164  0E00               	movlw	0
  3597  002166  6E6C               	movwf	(_X_Place+1)^0,c
  3598  002168  0E0A               	movlw	10
  3599  00216A  6E6B               	movwf	_X_Place^0,c
  3600                           
  3601                           ;main.c: 528:              Y_Place=5;
  3602  00216C  0E00               	movlw	0
  3603  00216E  6E68               	movwf	(_Y_Place+1)^0,c
  3604  002170  0E05               	movlw	5
  3605  002172  6E67               	movwf	_Y_Place^0,c
  3606                           
  3607                           ;main.c: 529:             Place_Angle=180;
  3608  002174  0E00               	movlw	0
  3609  002176  6E64               	movwf	(_Place_Angle+1)^0,c
  3610  002178  0EB4               	movlw	180
  3611  00217A  6E63               	movwf	_Place_Angle^0,c
  3612                           
  3613                           ;main.c: 530:         }
  3614  00217C  EF0C  F011         	goto	l306
  3615  002180                     l4071:
  3616  002180  FFFF               	dw	65535	; assembler added errata NOP
  3617  002182  0E43               	movlw	67
  3618  002184  1808               	xorwf	fetch_parameters@Componnt^0,w,c
  3619  002186  A4D8               	btfss	status,2,c
  3620  002188  EFC8  F010         	goto	u4511
  3621  00218C  EFCB  F010         	goto	u4510
  3622  002190                     u4511:
  3623  002190  FFFF               	dw	65535	; assembler added errata NOP
  3624  002192  EFE6  F010         	goto	l4075
  3625  002196                     u4510:
  3626  002196  FFFF               	dw	65535	; assembler added errata NOP
  3627  002198                     
  3628                           ;main.c: 532:             X_Pick=3;
  3629  002198  0E00               	movlw	0
  3630  00219A  6E6E               	movwf	(_X_Pick+1)^0,c
  3631  00219C  0E03               	movlw	3
  3632  00219E  6E6D               	movwf	_X_Pick^0,c
  3633                           
  3634                           ;main.c: 533:             Y_Pick=15;
  3635  0021A0  0E00               	movlw	0
  3636  0021A2  6E6A               	movwf	(_Y_Pick+1)^0,c
  3637  0021A4  0E0F               	movlw	15
  3638  0021A6  6E69               	movwf	_Y_Pick^0,c
  3639                           
  3640                           ;main.c: 534:             Pick_Angle=90;
  3641  0021A8  0E00               	movlw	0
  3642  0021AA  6E66               	movwf	(_Pick_Angle+1)^0,c
  3643  0021AC  0E5A               	movlw	90
  3644  0021AE  6E65               	movwf	_Pick_Angle^0,c
  3645                           
  3646                           ;main.c: 536:             X_Place=16;
  3647  0021B0  0E00               	movlw	0
  3648  0021B2  6E6C               	movwf	(_X_Place+1)^0,c
  3649  0021B4  0E10               	movlw	16
  3650  0021B6  6E6B               	movwf	_X_Place^0,c
  3651                           
  3652                           ;main.c: 537:             Y_Place=14;
  3653  0021B8  0E00               	movlw	0
  3654  0021BA  6E68               	movwf	(_Y_Place+1)^0,c
  3655  0021BC  0E0E               	movlw	14
  3656  0021BE  6E67               	movwf	_Y_Place^0,c
  3657                           
  3658                           ;main.c: 538:             Place_Angle=270;
  3659  0021C0  0E01               	movlw	1
  3660  0021C2  6E64               	movwf	(_Place_Angle+1)^0,c
  3661  0021C4  0E0E               	movlw	14
  3662  0021C6  6E63               	movwf	_Place_Angle^0,c
  3663                           
  3664                           ;main.c: 539:         }
  3665  0021C8  EF0C  F011         	goto	l306
  3666  0021CC                     l4075:
  3667  0021CC  FFFF               	dw	65535	; assembler added errata NOP
  3668  0021CE  0E44               	movlw	68
  3669  0021D0  1808               	xorwf	fetch_parameters@Componnt^0,w,c
  3670  0021D2  A4D8               	btfss	status,2,c
  3671  0021D4  EFEE  F010         	goto	u4521
  3672  0021D8  EFF1  F010         	goto	u4520
  3673  0021DC                     u4521:
  3674  0021DC  FFFF               	dw	65535	; assembler added errata NOP
  3675  0021DE  EF0C  F011         	goto	l302
  3676  0021E2                     u4520:
  3677  0021E2  FFFF               	dw	65535	; assembler added errata NOP
  3678  0021E4                     
  3679                           ;main.c: 541:             X_Pick=X_Pick_D;
  3680  0021E4  C05B  F06D         	movff	_X_Pick_D,_X_Pick
  3681  0021E8  C05C  F06E         	movff	_X_Pick_D+1,_X_Pick+1
  3682                           
  3683                           ;main.c: 542:             Y_Pick=Y_Pick_D;
  3684  0021EC  C0AC  F069         	movff	_Y_Pick_D,_Y_Pick
  3685  0021F0  C0AD  F06A         	movff	_Y_Pick_D+1,_Y_Pick+1
  3686                           
  3687                           ;main.c: 543:             Pick_Angle=Pick_Angle_D;
  3688  0021F4  C0AA  F065         	movff	_Pick_Angle_D,_Pick_Angle
  3689  0021F8  C0AB  F066         	movff	_Pick_Angle_D+1,_Pick_Angle+1
  3690                           
  3691                           ;main.c: 545:             X_Place=X_Place_D;
  3692  0021FC  C0A8  F06B         	movff	_X_Place_D,_X_Place
  3693  002200  C0A9  F06C         	movff	_X_Place_D+1,_X_Place+1
  3694                           
  3695                           ;main.c: 546:             Y_Place=Y_Place_D;
  3696  002204  C0A6  F067         	movff	_Y_Place_D,_Y_Place
  3697  002208  C0A7  F068         	movff	_Y_Place_D+1,_Y_Place+1
  3698                           
  3699                           ;main.c: 547:             Place_Angle=Place_Angle_D;
  3700  00220C  C0A4  F063         	movff	_Place_Angle_D,_Place_Angle
  3701  002210  C0A5  F064         	movff	_Place_Angle_D+1,_Place_Angle+1
  3702  002214  EF0C  F011         	goto	l306
  3703  002218                     l302:
  3704  002218                     l306:
  3705  002218  FFFF               	dw	65535	; assembler added errata NOP
  3706  00221A  0012               	return		;funcret
  3707  00221C  FFFF               	dw	65535	; errata NOP
  3708  00221E                     __end_of_fetch_parameters:
  3709                           	callstack 0
  3710                           
  3711 ;; *************** function ___xxtofl *****************
  3712 ;; Defined at:
  3713 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  sign            1    wreg     unsigned char 
  3716 ;;  val             4    7[COMRAM] long 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  sign            1   15[COMRAM] unsigned char 
  3719 ;;  arg             4   17[COMRAM] unsigned long 
  3720 ;;  exp             1   16[COMRAM] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  4    7[COMRAM] unsigned char 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2, status,0
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3730 ;;      Params:         4       0       0       0       0       0       0
  3731 ;;      Locals:         6       0       0       0       0       0       0
  3732 ;;      Temps:          4       0       0       0       0       0       0
  3733 ;;      Totals:        14       0       0       0       0       0       0
  3734 ;;Total ram usage:       14 bytes
  3735 ;; Hardware stack levels used: 1
  3736 ;; Hardware stack levels required when called: 1
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_pick_and_place
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text9
  3745  0019EE                     __ptext9:
  3746                           	callstack 0
  3747  0019EE                     ___xxtofl:
  3748                           	callstack 0
  3749  0019EE  FFFF               	dw	65535	; assembler added errata NOP
  3750                           
  3751                           ;incstack = 0
  3752                           ;___xxtofl@sign stored from wreg
  3753  0019F0  6E10               	movwf	___xxtofl@sign^0,c
  3754  0019F2  5010               	movf	___xxtofl@sign^0,w,c
  3755  0019F4  B4D8               	btfsc	status,2,c
  3756  0019F6  EFFF  F00C         	goto	u4811
  3757  0019FA  EF02  F00D         	goto	u4810
  3758  0019FE                     u4811:
  3759  0019FE  FFFF               	dw	65535	; assembler added errata NOP
  3760  001A00  EF27  F00D         	goto	l1063
  3761  001A04                     u4810:
  3762  001A04  FFFF               	dw	65535	; assembler added errata NOP
  3763  001A06  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  3764  001A08  EF0B  F00D         	goto	u4820
  3765  001A0C  EF08  F00D         	goto	u4821
  3766  001A10                     u4821:
  3767  001A10  FFFF               	dw	65535	; assembler added errata NOP
  3768  001A12  EF27  F00D         	goto	l1063
  3769  001A16                     u4820:
  3770  001A16  FFFF               	dw	65535	; assembler added errata NOP
  3771  001A18  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  3772  001A1C  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  3773  001A20  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  3774  001A24  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  3775  001A28  1E0C               	comf	??___xxtofl^0,f,c
  3776  001A2A  1E0D               	comf	(??___xxtofl+1)^0,f,c
  3777  001A2C  1E0E               	comf	(??___xxtofl+2)^0,f,c
  3778  001A2E  1E0F               	comf	(??___xxtofl+3)^0,f,c
  3779  001A30  2A0C               	incf	??___xxtofl^0,f,c
  3780  001A32  0E00               	movlw	0
  3781  001A34  220D               	addwfc	(??___xxtofl+1)^0,f,c
  3782  001A36  220E               	addwfc	(??___xxtofl+2)^0,f,c
  3783  001A38  220F               	addwfc	(??___xxtofl+3)^0,f,c
  3784  001A3A  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  3785  001A3E  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  3786  001A42  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  3787  001A46  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  3788  001A4A  EF30  F00D         	goto	l4245
  3789  001A4E                     l1063:
  3790  001A4E  FFFF               	dw	65535	; assembler added errata NOP
  3791  001A50  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  3792  001A54  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3793  001A58  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3794  001A5C  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3795  001A60                     l4245:
  3796  001A60  FFFF               	dw	65535	; assembler added errata NOP
  3797  001A62  5008               	movf	___xxtofl@val^0,w,c
  3798  001A64  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  3799  001A66  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  3800  001A68  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  3801  001A6A  A4D8               	btfss	status,2,c
  3802  001A6C  EF3A  F00D         	goto	u4831
  3803  001A70  EF3D  F00D         	goto	u4830
  3804  001A74                     u4831:
  3805  001A74  FFFF               	dw	65535	; assembler added errata NOP
  3806  001A76  EF48  F00D         	goto	l4251
  3807  001A7A                     u4830:
  3808  001A7A  FFFF               	dw	65535	; assembler added errata NOP
  3809  001A7C  0E00               	movlw	0
  3810  001A7E  6E08               	movwf	?___xxtofl^0,c
  3811  001A80  0E00               	movlw	0
  3812  001A82  6E09               	movwf	(?___xxtofl+1)^0,c
  3813  001A84  0E00               	movlw	0
  3814  001A86  6E0A               	movwf	(?___xxtofl+2)^0,c
  3815  001A88  0E00               	movlw	0
  3816  001A8A  6E0B               	movwf	(?___xxtofl+3)^0,c
  3817  001A8C  EFF0  F00D         	goto	l1066
  3818  001A90                     l4251:
  3819  001A90  FFFF               	dw	65535	; assembler added errata NOP
  3820  001A92  0E96               	movlw	150
  3821  001A94  6E11               	movwf	___xxtofl@exp^0,c
  3822  001A96  EF54  F00D         	goto	l4255
  3823  001A9A                     l4253:
  3824  001A9A  FFFF               	dw	65535	; assembler added errata NOP
  3825  001A9C  2A11               	incf	___xxtofl@exp^0,f,c
  3826  001A9E  90D8               	bcf	status,0,c
  3827  001AA0  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  3828  001AA2  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  3829  001AA4  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  3830  001AA6  3212               	rrcf	___xxtofl@arg^0,f,c
  3831  001AA8                     l4255:
  3832  001AA8  FFFF               	dw	65535	; assembler added errata NOP
  3833  001AAA  0E00               	movlw	0
  3834  001AAC  1412               	andwf	___xxtofl@arg^0,w,c
  3835  001AAE  6E0C               	movwf	??___xxtofl^0,c
  3836  001AB0  0E00               	movlw	0
  3837  001AB2  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  3838  001AB4  6E0D               	movwf	(??___xxtofl+1)^0,c
  3839  001AB6  0E00               	movlw	0
  3840  001AB8  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  3841  001ABA  6E0E               	movwf	(??___xxtofl+2)^0,c
  3842  001ABC  0EFE               	movlw	254
  3843  001ABE  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  3844  001AC0  6E0F               	movwf	(??___xxtofl+3)^0,c
  3845  001AC2  500C               	movf	??___xxtofl^0,w,c
  3846  001AC4  100D               	iorwf	(??___xxtofl+1)^0,w,c
  3847  001AC6  100E               	iorwf	(??___xxtofl+2)^0,w,c
  3848  001AC8  100F               	iorwf	(??___xxtofl+3)^0,w,c
  3849  001ACA  A4D8               	btfss	status,2,c
  3850  001ACC  EF6A  F00D         	goto	u4841
  3851  001AD0  EF6D  F00D         	goto	u4840
  3852  001AD4                     u4841:
  3853  001AD4  FFFF               	dw	65535	; assembler added errata NOP
  3854  001AD6  EF4D  F00D         	goto	l4253
  3855  001ADA                     u4840:
  3856  001ADA  FFFF               	dw	65535	; assembler added errata NOP
  3857  001ADC  EF7D  F00D         	goto	l1070
  3858  001AE0                     l4257:
  3859  001AE0  FFFF               	dw	65535	; assembler added errata NOP
  3860  001AE2  2A11               	incf	___xxtofl@exp^0,f,c
  3861  001AE4  0E01               	movlw	1
  3862  001AE6  2612               	addwf	___xxtofl@arg^0,f,c
  3863  001AE8  0E00               	movlw	0
  3864  001AEA  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  3865  001AEC  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  3866  001AEE  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  3867  001AF0  90D8               	bcf	status,0,c
  3868  001AF2  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  3869  001AF4  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  3870  001AF6  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  3871  001AF8  3212               	rrcf	___xxtofl@arg^0,f,c
  3872  001AFA                     l1070:
  3873  001AFA  FFFF               	dw	65535	; assembler added errata NOP
  3874  001AFC  0E00               	movlw	0
  3875  001AFE  1412               	andwf	___xxtofl@arg^0,w,c
  3876  001B00  6E0C               	movwf	??___xxtofl^0,c
  3877  001B02  0E00               	movlw	0
  3878  001B04  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  3879  001B06  6E0D               	movwf	(??___xxtofl+1)^0,c
  3880  001B08  0E00               	movlw	0
  3881  001B0A  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  3882  001B0C  6E0E               	movwf	(??___xxtofl+2)^0,c
  3883  001B0E  0EFF               	movlw	255
  3884  001B10  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  3885  001B12  6E0F               	movwf	(??___xxtofl+3)^0,c
  3886  001B14  500C               	movf	??___xxtofl^0,w,c
  3887  001B16  100D               	iorwf	(??___xxtofl+1)^0,w,c
  3888  001B18  100E               	iorwf	(??___xxtofl+2)^0,w,c
  3889  001B1A  100F               	iorwf	(??___xxtofl+3)^0,w,c
  3890  001B1C  A4D8               	btfss	status,2,c
  3891  001B1E  EF93  F00D         	goto	u4851
  3892  001B22  EF96  F00D         	goto	u4850
  3893  001B26                     u4851:
  3894  001B26  FFFF               	dw	65535	; assembler added errata NOP
  3895  001B28  EF70  F00D         	goto	l4257
  3896  001B2C                     u4850:
  3897  001B2C  FFFF               	dw	65535	; assembler added errata NOP
  3898  001B2E  EFA0  F00D         	goto	l4265
  3899  001B32                     l4263:
  3900  001B32  FFFF               	dw	65535	; assembler added errata NOP
  3901  001B34  0611               	decf	___xxtofl@exp^0,f,c
  3902  001B36  90D8               	bcf	status,0,c
  3903  001B38  3612               	rlcf	___xxtofl@arg^0,f,c
  3904  001B3A  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  3905  001B3C  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  3906  001B3E  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  3907  001B40                     l4265:
  3908  001B40  FFFF               	dw	65535	; assembler added errata NOP
  3909  001B42  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  3910  001B44  EFA6  F00D         	goto	u4861
  3911  001B48  EFA9  F00D         	goto	u4860
  3912  001B4C                     u4861:
  3913  001B4C  FFFF               	dw	65535	; assembler added errata NOP
  3914  001B4E  EFB3  F00D         	goto	l1077
  3915  001B52                     u4860:
  3916  001B52  FFFF               	dw	65535	; assembler added errata NOP
  3917  001B54  0E02               	movlw	2
  3918  001B56  6011               	cpfslt	___xxtofl@exp^0,c
  3919  001B58  EFB0  F00D         	goto	u4871
  3920  001B5C  EFB3  F00D         	goto	u4870
  3921  001B60                     u4871:
  3922  001B60  FFFF               	dw	65535	; assembler added errata NOP
  3923  001B62  EF99  F00D         	goto	l4263
  3924  001B66                     u4870:
  3925  001B66                     l1077:
  3926  001B66  FFFF               	dw	65535	; assembler added errata NOP
  3927  001B68  B011               	btfsc	___xxtofl@exp^0,0,c
  3928  001B6A  EFB9  F00D         	goto	u4881
  3929  001B6E  EFBC  F00D         	goto	u4880
  3930  001B72                     u4881:
  3931  001B72  FFFF               	dw	65535	; assembler added errata NOP
  3932  001B74  EFBE  F00D         	goto	l4271
  3933  001B78                     u4880:
  3934  001B78  FFFF               	dw	65535	; assembler added errata NOP
  3935  001B7A  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  3936  001B7C                     l4271:
  3937  001B7C  FFFF               	dw	65535	; assembler added errata NOP
  3938  001B7E  90D8               	bcf	status,0,c
  3939  001B80  3211               	rrcf	___xxtofl@exp^0,f,c
  3940  001B82  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  3941  001B86  6A0D               	clrf	(??___xxtofl+1)^0,c
  3942  001B88  6A0E               	clrf	(??___xxtofl+2)^0,c
  3943  001B8A  6A0F               	clrf	(??___xxtofl+3)^0,c
  3944  001B8C  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  3945  001B90  6A0E               	clrf	(??___xxtofl+2)^0,c
  3946  001B92  6A0D               	clrf	(??___xxtofl+1)^0,c
  3947  001B94  6A0C               	clrf	??___xxtofl^0,c
  3948  001B96  500C               	movf	??___xxtofl^0,w,c
  3949  001B98  1212               	iorwf	___xxtofl@arg^0,f,c
  3950  001B9A  500D               	movf	(??___xxtofl+1)^0,w,c
  3951  001B9C  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  3952  001B9E  500E               	movf	(??___xxtofl+2)^0,w,c
  3953  001BA0  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  3954  001BA2  500F               	movf	(??___xxtofl+3)^0,w,c
  3955  001BA4  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  3956  001BA6  5010               	movf	___xxtofl@sign^0,w,c
  3957  001BA8  B4D8               	btfsc	status,2,c
  3958  001BAA  EFD9  F00D         	goto	u4891
  3959  001BAE  EFDC  F00D         	goto	u4890
  3960  001BB2                     u4891:
  3961  001BB2  FFFF               	dw	65535	; assembler added errata NOP
  3962  001BB4  EFE7  F00D         	goto	l4281
  3963  001BB8                     u4890:
  3964  001BB8  FFFF               	dw	65535	; assembler added errata NOP
  3965  001BBA  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  3966  001BBC  EFE5  F00D         	goto	u4900
  3967  001BC0  EFE2  F00D         	goto	u4901
  3968  001BC4                     u4901:
  3969  001BC4  FFFF               	dw	65535	; assembler added errata NOP
  3970  001BC6  EFE7  F00D         	goto	l4281
  3971  001BCA                     u4900:
  3972  001BCA  FFFF               	dw	65535	; assembler added errata NOP
  3973  001BCC  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  3974  001BCE                     l4281:
  3975  001BCE  FFFF               	dw	65535	; assembler added errata NOP
  3976  001BD0  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  3977  001BD4  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  3978  001BD8  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  3979  001BDC  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  3980  001BE0                     l1066:
  3981  001BE0  FFFF               	dw	65535	; assembler added errata NOP
  3982  001BE2  0012               	return		;funcret
  3983  001BE4  FFFF               	dw	65535	; errata NOP
  3984  001BE6                     __end_of___xxtofl:
  3985                           	callstack 0
  3986                           
  3987 ;; *************** function ___fldiv *****************
  3988 ;; Defined at:
  3989 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  b               4   21[COMRAM] unsigned char 
  3992 ;;  a               4   25[COMRAM] unsigned char 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  grs             4   40[COMRAM] unsigned long 
  3995 ;;  rem             4   33[COMRAM] unsigned long 
  3996 ;;  new_exp         2   38[COMRAM] short 
  3997 ;;  aexp            1   45[COMRAM] unsigned char 
  3998 ;;  bexp            1   44[COMRAM] unsigned char 
  3999 ;;  sign            1   37[COMRAM] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  4   21[COMRAM] unsigned char 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4009 ;;      Params:         8       0       0       0       0       0       0
  4010 ;;      Locals:        13       0       0       0       0       0       0
  4011 ;;      Temps:          4       0       0       0       0       0       0
  4012 ;;      Totals:        25       0       0       0       0       0       0
  4013 ;;Total ram usage:       25 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; Hardware stack levels required when called: 1
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_pick_and_place
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text10
  4024  0011D6                     __ptext10:
  4025                           	callstack 0
  4026  0011D6                     ___fldiv:
  4027                           	callstack 0
  4028  0011D6  FFFF               	dw	65535	; assembler added errata NOP
  4029  0011D8  5019               	movf	(___fldiv@b+3)^0,w,c
  4030  0011DA  0B80               	andlw	128
  4031  0011DC  6E26               	movwf	___fldiv@sign^0,c
  4032  0011DE  5019               	movf	(___fldiv@b+3)^0,w,c
  4033  0011E0  2419               	addwf	(___fldiv@b+3)^0,w,c
  4034  0011E2  6E2D               	movwf	___fldiv@bexp^0,c
  4035  0011E4  AE18               	btfss	(___fldiv@b+2)^0,7,c
  4036  0011E6  EFF7  F008         	goto	u4531
  4037  0011EA  EFFA  F008         	goto	u4530
  4038  0011EE                     u4531:
  4039  0011EE  FFFF               	dw	65535	; assembler added errata NOP
  4040  0011F0  EFFC  F008         	goto	l4085
  4041  0011F4                     u4530:
  4042  0011F4  FFFF               	dw	65535	; assembler added errata NOP
  4043  0011F6  802D               	bsf	___fldiv@bexp^0,0,c
  4044  0011F8                     l4085:
  4045  0011F8  FFFF               	dw	65535	; assembler added errata NOP
  4046  0011FA  502D               	movf	___fldiv@bexp^0,w,c
  4047  0011FC  B4D8               	btfsc	status,2,c
  4048  0011FE  EF03  F009         	goto	u4541
  4049  001202  EF06  F009         	goto	u4540
  4050  001206                     u4541:
  4051  001206  FFFF               	dw	65535	; assembler added errata NOP
  4052  001208  EF1F  F009         	goto	l4095
  4053  00120C                     u4540:
  4054  00120C  FFFF               	dw	65535	; assembler added errata NOP
  4055  00120E  282D               	incf	___fldiv@bexp^0,w,c
  4056  001210  A4D8               	btfss	status,2,c
  4057  001212  EF0D  F009         	goto	u4551
  4058  001216  EF10  F009         	goto	u4550
  4059  00121A                     u4551:
  4060  00121A  FFFF               	dw	65535	; assembler added errata NOP
  4061  00121C  EF19  F009         	goto	l4091
  4062  001220                     u4550:
  4063  001220  FFFF               	dw	65535	; assembler added errata NOP
  4064  001222  0E00               	movlw	0
  4065  001224  6E16               	movwf	___fldiv@b^0,c
  4066  001226  0E00               	movlw	0
  4067  001228  6E17               	movwf	(___fldiv@b+1)^0,c
  4068  00122A  0E00               	movlw	0
  4069  00122C  6E18               	movwf	(___fldiv@b+2)^0,c
  4070  00122E  0E00               	movlw	0
  4071  001230  6E19               	movwf	(___fldiv@b+3)^0,c
  4072  001232                     l4091:
  4073  001232  FFFF               	dw	65535	; assembler added errata NOP
  4074  001234  8E18               	bsf	(___fldiv@b+2)^0,7,c
  4075  001236  0E00               	movlw	0
  4076  001238  6E19               	movwf	(___fldiv@b+3)^0,c
  4077  00123A  EF28  F009         	goto	l4097
  4078  00123E                     l4095:
  4079  00123E  FFFF               	dw	65535	; assembler added errata NOP
  4080  001240  0E00               	movlw	0
  4081  001242  6E16               	movwf	___fldiv@b^0,c
  4082  001244  0E00               	movlw	0
  4083  001246  6E17               	movwf	(___fldiv@b+1)^0,c
  4084  001248  0E00               	movlw	0
  4085  00124A  6E18               	movwf	(___fldiv@b+2)^0,c
  4086  00124C  0E00               	movlw	0
  4087  00124E  6E19               	movwf	(___fldiv@b+3)^0,c
  4088  001250                     l4097:
  4089  001250  FFFF               	dw	65535	; assembler added errata NOP
  4090  001252  501D               	movf	(___fldiv@a+3)^0,w,c
  4091  001254  0B80               	andlw	128
  4092  001256  1A26               	xorwf	___fldiv@sign^0,f,c
  4093  001258  501D               	movf	(___fldiv@a+3)^0,w,c
  4094  00125A  241D               	addwf	(___fldiv@a+3)^0,w,c
  4095  00125C  6E2E               	movwf	___fldiv@aexp^0,c
  4096  00125E  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  4097  001260  EF34  F009         	goto	u4561
  4098  001264  EF37  F009         	goto	u4560
  4099  001268                     u4561:
  4100  001268  FFFF               	dw	65535	; assembler added errata NOP
  4101  00126A  EF39  F009         	goto	l4105
  4102  00126E                     u4560:
  4103  00126E  FFFF               	dw	65535	; assembler added errata NOP
  4104  001270  802E               	bsf	___fldiv@aexp^0,0,c
  4105  001272                     l4105:
  4106  001272  FFFF               	dw	65535	; assembler added errata NOP
  4107  001274  502E               	movf	___fldiv@aexp^0,w,c
  4108  001276  B4D8               	btfsc	status,2,c
  4109  001278  EF40  F009         	goto	u4571
  4110  00127C  EF43  F009         	goto	u4570
  4111  001280                     u4571:
  4112  001280  FFFF               	dw	65535	; assembler added errata NOP
  4113  001282  EF5C  F009         	goto	l4115
  4114  001286                     u4570:
  4115  001286  FFFF               	dw	65535	; assembler added errata NOP
  4116  001288  282E               	incf	___fldiv@aexp^0,w,c
  4117  00128A  A4D8               	btfss	status,2,c
  4118  00128C  EF4A  F009         	goto	u4581
  4119  001290  EF4D  F009         	goto	u4580
  4120  001294                     u4581:
  4121  001294  FFFF               	dw	65535	; assembler added errata NOP
  4122  001296  EF56  F009         	goto	l4111
  4123  00129A                     u4580:
  4124  00129A  FFFF               	dw	65535	; assembler added errata NOP
  4125  00129C  0E00               	movlw	0
  4126  00129E  6E1A               	movwf	___fldiv@a^0,c
  4127  0012A0  0E00               	movlw	0
  4128  0012A2  6E1B               	movwf	(___fldiv@a+1)^0,c
  4129  0012A4  0E00               	movlw	0
  4130  0012A6  6E1C               	movwf	(___fldiv@a+2)^0,c
  4131  0012A8  0E00               	movlw	0
  4132  0012AA  6E1D               	movwf	(___fldiv@a+3)^0,c
  4133  0012AC                     l4111:
  4134  0012AC  FFFF               	dw	65535	; assembler added errata NOP
  4135  0012AE  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  4136  0012B0  0E00               	movlw	0
  4137  0012B2  6E1D               	movwf	(___fldiv@a+3)^0,c
  4138  0012B4  EF65  F009         	goto	l4117
  4139  0012B8                     l4115:
  4140  0012B8  FFFF               	dw	65535	; assembler added errata NOP
  4141  0012BA  0E00               	movlw	0
  4142  0012BC  6E1A               	movwf	___fldiv@a^0,c
  4143  0012BE  0E00               	movlw	0
  4144  0012C0  6E1B               	movwf	(___fldiv@a+1)^0,c
  4145  0012C2  0E00               	movlw	0
  4146  0012C4  6E1C               	movwf	(___fldiv@a+2)^0,c
  4147  0012C6  0E00               	movlw	0
  4148  0012C8  6E1D               	movwf	(___fldiv@a+3)^0,c
  4149  0012CA                     l4117:
  4150  0012CA  FFFF               	dw	65535	; assembler added errata NOP
  4151  0012CC  501A               	movf	___fldiv@a^0,w,c
  4152  0012CE  101B               	iorwf	(___fldiv@a+1)^0,w,c
  4153  0012D0  101C               	iorwf	(___fldiv@a+2)^0,w,c
  4154  0012D2  101D               	iorwf	(___fldiv@a+3)^0,w,c
  4155  0012D4  A4D8               	btfss	status,2,c
  4156  0012D6  EF6F  F009         	goto	u4591
  4157  0012DA  EF72  F009         	goto	u4590
  4158  0012DE                     u4591:
  4159  0012DE  FFFF               	dw	65535	; assembler added errata NOP
  4160  0012E0  EF8C  F009         	goto	l4129
  4161  0012E4                     u4590:
  4162  0012E4  FFFF               	dw	65535	; assembler added errata NOP
  4163  0012E6  0E00               	movlw	0
  4164  0012E8  6E16               	movwf	___fldiv@b^0,c
  4165  0012EA  0E00               	movlw	0
  4166  0012EC  6E17               	movwf	(___fldiv@b+1)^0,c
  4167  0012EE  0E00               	movlw	0
  4168  0012F0  6E18               	movwf	(___fldiv@b+2)^0,c
  4169  0012F2  0E00               	movlw	0
  4170  0012F4  6E19               	movwf	(___fldiv@b+3)^0,c
  4171  0012F6  0E80               	movlw	128
  4172  0012F8  1218               	iorwf	(___fldiv@b+2)^0,f,c
  4173  0012FA  0E7F               	movlw	127
  4174  0012FC  1219               	iorwf	(___fldiv@b+3)^0,f,c
  4175  0012FE                     l4123:
  4176  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  4177  001300  5026               	movf	___fldiv@sign^0,w,c
  4178  001302  1219               	iorwf	(___fldiv@b+3)^0,f,c
  4179  001304  C016  F016         	movff	___fldiv@b,?___fldiv
  4180  001308  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  4181  00130C  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  4182  001310  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  4183  001314  EF01  F00B         	goto	l990
  4184  001318                     l4129:
  4185  001318  FFFF               	dw	65535	; assembler added errata NOP
  4186  00131A  502D               	movf	___fldiv@bexp^0,w,c
  4187  00131C  A4D8               	btfss	status,2,c
  4188  00131E  EF93  F009         	goto	u4601
  4189  001322  EF96  F009         	goto	u4600
  4190  001326                     u4601:
  4191  001326  FFFF               	dw	65535	; assembler added errata NOP
  4192  001328  EFA1  F009         	goto	l4137
  4193  00132C                     u4600:
  4194  00132C  FFFF               	dw	65535	; assembler added errata NOP
  4195  00132E  0E00               	movlw	0
  4196  001330  6E16               	movwf	?___fldiv^0,c
  4197  001332  0E00               	movlw	0
  4198  001334  6E17               	movwf	(?___fldiv+1)^0,c
  4199  001336  0E00               	movlw	0
  4200  001338  6E18               	movwf	(?___fldiv+2)^0,c
  4201  00133A  0E00               	movlw	0
  4202  00133C  6E19               	movwf	(?___fldiv+3)^0,c
  4203  00133E  EF01  F00B         	goto	l990
  4204  001342                     l4137:
  4205  001342  FFFF               	dw	65535	; assembler added errata NOP
  4206  001344  502E               	movf	___fldiv@aexp^0,w,c
  4207  001346  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  4208  00134A  6A1F               	clrf	(??___fldiv+1)^0,c
  4209  00134C  5E1E               	subwf	??___fldiv^0,f,c
  4210  00134E  0E00               	movlw	0
  4211  001350  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  4212  001352  0E7F               	movlw	127
  4213  001354  241E               	addwf	??___fldiv^0,w,c
  4214  001356  6E27               	movwf	___fldiv@new_exp^0,c
  4215  001358  0E00               	movlw	0
  4216  00135A  201F               	addwfc	(??___fldiv+1)^0,w,c
  4217  00135C  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4218  00135E  C016  F022         	movff	___fldiv@b,___fldiv@rem
  4219  001362  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  4220  001366  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  4221  00136A  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  4222  00136E  0E00               	movlw	0
  4223  001370  6E16               	movwf	___fldiv@b^0,c
  4224  001372  0E00               	movlw	0
  4225  001374  6E17               	movwf	(___fldiv@b+1)^0,c
  4226  001376  0E00               	movlw	0
  4227  001378  6E18               	movwf	(___fldiv@b+2)^0,c
  4228  00137A  0E00               	movlw	0
  4229  00137C  6E19               	movwf	(___fldiv@b+3)^0,c
  4230  00137E  0E00               	movlw	0
  4231  001380  6E29               	movwf	___fldiv@grs^0,c
  4232  001382  0E00               	movlw	0
  4233  001384  6E2A               	movwf	(___fldiv@grs+1)^0,c
  4234  001386  0E00               	movlw	0
  4235  001388  6E2B               	movwf	(___fldiv@grs+2)^0,c
  4236  00138A  0E00               	movlw	0
  4237  00138C  6E2C               	movwf	(___fldiv@grs+3)^0,c
  4238  00138E  0E00               	movlw	0
  4239  001390  6E2E               	movwf	___fldiv@aexp^0,c
  4240  001392  EF0D  F00A         	goto	l992
  4241  001396                     l4147:
  4242  001396  FFFF               	dw	65535	; assembler added errata NOP
  4243  001398  502E               	movf	___fldiv@aexp^0,w,c
  4244  00139A  B4D8               	btfsc	status,2,c
  4245  00139C  EFD2  F009         	goto	u4611
  4246  0013A0  EFD5  F009         	goto	u4610
  4247  0013A4                     u4611:
  4248  0013A4  FFFF               	dw	65535	; assembler added errata NOP
  4249  0013A6  EFF0  F009         	goto	l4155
  4250  0013AA                     u4610:
  4251  0013AA  FFFF               	dw	65535	; assembler added errata NOP
  4252  0013AC  90D8               	bcf	status,0,c
  4253  0013AE  3622               	rlcf	___fldiv@rem^0,f,c
  4254  0013B0  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  4255  0013B2  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  4256  0013B4  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  4257  0013B6  90D8               	bcf	status,0,c
  4258  0013B8  3616               	rlcf	___fldiv@b^0,f,c
  4259  0013BA  3617               	rlcf	(___fldiv@b+1)^0,f,c
  4260  0013BC  3618               	rlcf	(___fldiv@b+2)^0,f,c
  4261  0013BE  3619               	rlcf	(___fldiv@b+3)^0,f,c
  4262  0013C0  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  4263  0013C2  EFE5  F009         	goto	u4621
  4264  0013C6  EFE8  F009         	goto	u4620
  4265  0013CA                     u4621:
  4266  0013CA  FFFF               	dw	65535	; assembler added errata NOP
  4267  0013CC  EFEA  F009         	goto	l995
  4268  0013D0                     u4620:
  4269  0013D0  FFFF               	dw	65535	; assembler added errata NOP
  4270  0013D2  8016               	bsf	___fldiv@b^0,0,c
  4271  0013D4                     l995:
  4272  0013D4  FFFF               	dw	65535	; assembler added errata NOP
  4273  0013D6  90D8               	bcf	status,0,c
  4274  0013D8  3629               	rlcf	___fldiv@grs^0,f,c
  4275  0013DA  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  4276  0013DC  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  4277  0013DE  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  4278  0013E0                     l4155:
  4279  0013E0  FFFF               	dw	65535	; assembler added errata NOP
  4280  0013E2  501A               	movf	___fldiv@a^0,w,c
  4281  0013E4  5C22               	subwf	___fldiv@rem^0,w,c
  4282  0013E6  501B               	movf	(___fldiv@a+1)^0,w,c
  4283  0013E8  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  4284  0013EA  501C               	movf	(___fldiv@a+2)^0,w,c
  4285  0013EC  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  4286  0013EE  501D               	movf	(___fldiv@a+3)^0,w,c
  4287  0013F0  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  4288  0013F2  A0D8               	btfss	status,0,c
  4289  0013F4  EFFE  F009         	goto	u4631
  4290  0013F8  EF01  F00A         	goto	u4630
  4291  0013FC                     u4631:
  4292  0013FC  FFFF               	dw	65535	; assembler added errata NOP
  4293  0013FE  EF0B  F00A         	goto	l4161
  4294  001402                     u4630:
  4295  001402  FFFF               	dw	65535	; assembler added errata NOP
  4296  001404  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  4297  001406  501A               	movf	___fldiv@a^0,w,c
  4298  001408  5E22               	subwf	___fldiv@rem^0,f,c
  4299  00140A  501B               	movf	(___fldiv@a+1)^0,w,c
  4300  00140C  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  4301  00140E  501C               	movf	(___fldiv@a+2)^0,w,c
  4302  001410  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  4303  001412  501D               	movf	(___fldiv@a+3)^0,w,c
  4304  001414  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  4305  001416                     l4161:
  4306  001416  FFFF               	dw	65535	; assembler added errata NOP
  4307  001418  2A2E               	incf	___fldiv@aexp^0,f,c
  4308  00141A                     l992:
  4309  00141A  FFFF               	dw	65535	; assembler added errata NOP
  4310  00141C  0E19               	movlw	25
  4311  00141E  642E               	cpfsgt	___fldiv@aexp^0,c
  4312  001420  EF14  F00A         	goto	u4641
  4313  001424  EF17  F00A         	goto	u4640
  4314  001428                     u4641:
  4315  001428  FFFF               	dw	65535	; assembler added errata NOP
  4316  00142A  EFCB  F009         	goto	l4147
  4317  00142E                     u4640:
  4318  00142E  FFFF               	dw	65535	; assembler added errata NOP
  4319  001430  5022               	movf	___fldiv@rem^0,w,c
  4320  001432  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  4321  001434  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  4322  001436  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  4323  001438  B4D8               	btfsc	status,2,c
  4324  00143A  EF21  F00A         	goto	u4651
  4325  00143E  EF24  F00A         	goto	u4650
  4326  001442                     u4651:
  4327  001442  FFFF               	dw	65535	; assembler added errata NOP
  4328  001444  EF41  F00A         	goto	l4173
  4329  001448                     u4650:
  4330  001448  FFFF               	dw	65535	; assembler added errata NOP
  4331  00144A  8029               	bsf	___fldiv@grs^0,0,c
  4332  00144C  EF41  F00A         	goto	l4173
  4333  001450                     l4167:
  4334  001450  FFFF               	dw	65535	; assembler added errata NOP
  4335  001452  90D8               	bcf	status,0,c
  4336  001454  3616               	rlcf	___fldiv@b^0,f,c
  4337  001456  3617               	rlcf	(___fldiv@b+1)^0,f,c
  4338  001458  3618               	rlcf	(___fldiv@b+2)^0,f,c
  4339  00145A  3619               	rlcf	(___fldiv@b+3)^0,f,c
  4340  00145C  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  4341  00145E  EF33  F00A         	goto	u4661
  4342  001462  EF36  F00A         	goto	u4660
  4343  001466                     u4661:
  4344  001466  FFFF               	dw	65535	; assembler added errata NOP
  4345  001468  EF38  F00A         	goto	l1001
  4346  00146C                     u4660:
  4347  00146C  FFFF               	dw	65535	; assembler added errata NOP
  4348  00146E  8016               	bsf	___fldiv@b^0,0,c
  4349  001470                     l1001:
  4350  001470  FFFF               	dw	65535	; assembler added errata NOP
  4351  001472  90D8               	bcf	status,0,c
  4352  001474  3629               	rlcf	___fldiv@grs^0,f,c
  4353  001476  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  4354  001478  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  4355  00147A  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  4356  00147C  0627               	decf	___fldiv@new_exp^0,f,c
  4357  00147E  A0D8               	btfss	status,0,c
  4358  001480  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  4359  001482                     l4173:
  4360  001482  FFFF               	dw	65535	; assembler added errata NOP
  4361  001484  AE18               	btfss	(___fldiv@b+2)^0,7,c
  4362  001486  EF47  F00A         	goto	u4671
  4363  00148A  EF4A  F00A         	goto	u4670
  4364  00148E                     u4671:
  4365  00148E  FFFF               	dw	65535	; assembler added errata NOP
  4366  001490  EF28  F00A         	goto	l4167
  4367  001494                     u4670:
  4368  001494  FFFF               	dw	65535	; assembler added errata NOP
  4369  001496  0E00               	movlw	0
  4370  001498  6E2E               	movwf	___fldiv@aexp^0,c
  4371  00149A  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  4372  00149C  EF52  F00A         	goto	u4681
  4373  0014A0  EF55  F00A         	goto	u4680
  4374  0014A4                     u4681:
  4375  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  4376  0014A6  EF80  F00A         	goto	l1003
  4377  0014AA                     u4680:
  4378  0014AA  FFFF               	dw	65535	; assembler added errata NOP
  4379  0014AC  0EFF               	movlw	255
  4380  0014AE  1429               	andwf	___fldiv@grs^0,w,c
  4381  0014B0  6E1E               	movwf	??___fldiv^0,c
  4382  0014B2  0EFF               	movlw	255
  4383  0014B4  142A               	andwf	(___fldiv@grs+1)^0,w,c
  4384  0014B6  6E1F               	movwf	(??___fldiv+1)^0,c
  4385  0014B8  0EFF               	movlw	255
  4386  0014BA  142B               	andwf	(___fldiv@grs+2)^0,w,c
  4387  0014BC  6E20               	movwf	(??___fldiv+2)^0,c
  4388  0014BE  0E7F               	movlw	127
  4389  0014C0  142C               	andwf	(___fldiv@grs+3)^0,w,c
  4390  0014C2  6E21               	movwf	(??___fldiv+3)^0,c
  4391  0014C4  501E               	movf	??___fldiv^0,w,c
  4392  0014C6  101F               	iorwf	(??___fldiv+1)^0,w,c
  4393  0014C8  1020               	iorwf	(??___fldiv+2)^0,w,c
  4394  0014CA  1021               	iorwf	(??___fldiv+3)^0,w,c
  4395  0014CC  B4D8               	btfsc	status,2,c
  4396  0014CE  EF6B  F00A         	goto	u4691
  4397  0014D2  EF6E  F00A         	goto	u4690
  4398  0014D6                     u4691:
  4399  0014D6  FFFF               	dw	65535	; assembler added errata NOP
  4400  0014D8  EF74  F00A         	goto	l1004
  4401  0014DC                     u4690:
  4402  0014DC  FFFF               	dw	65535	; assembler added errata NOP
  4403  0014DE                     l4181:
  4404  0014DE  FFFF               	dw	65535	; assembler added errata NOP
  4405  0014E0  0E01               	movlw	1
  4406  0014E2  6E2E               	movwf	___fldiv@aexp^0,c
  4407  0014E4  EF80  F00A         	goto	l1003
  4408  0014E8                     l1004:
  4409  0014E8  FFFF               	dw	65535	; assembler added errata NOP
  4410  0014EA  A016               	btfss	___fldiv@b^0,0,c
  4411  0014EC  EF7A  F00A         	goto	u4701
  4412  0014F0  EF7D  F00A         	goto	u4700
  4413  0014F4                     u4701:
  4414  0014F4  FFFF               	dw	65535	; assembler added errata NOP
  4415  0014F6  EF80  F00A         	goto	l1003
  4416  0014FA                     u4700:
  4417  0014FA  FFFF               	dw	65535	; assembler added errata NOP
  4418  0014FC  EF6F  F00A         	goto	l4181
  4419  001500                     l1003:
  4420  001500  FFFF               	dw	65535	; assembler added errata NOP
  4421  001502  502E               	movf	___fldiv@aexp^0,w,c
  4422  001504  B4D8               	btfsc	status,2,c
  4423  001506  EF87  F00A         	goto	u4711
  4424  00150A  EF8A  F00A         	goto	u4710
  4425  00150E                     u4711:
  4426  00150E  FFFF               	dw	65535	; assembler added errata NOP
  4427  001510  EFB1  F00A         	goto	l4193
  4428  001514                     u4710:
  4429  001514  FFFF               	dw	65535	; assembler added errata NOP
  4430  001516  0E01               	movlw	1
  4431  001518  2616               	addwf	___fldiv@b^0,f,c
  4432  00151A  0E00               	movlw	0
  4433  00151C  2217               	addwfc	(___fldiv@b+1)^0,f,c
  4434  00151E  2218               	addwfc	(___fldiv@b+2)^0,f,c
  4435  001520  2219               	addwfc	(___fldiv@b+3)^0,f,c
  4436  001522  A019               	btfss	(___fldiv@b+3)^0,0,c
  4437  001524  EF96  F00A         	goto	u4721
  4438  001528  EF99  F00A         	goto	u4720
  4439  00152C                     u4721:
  4440  00152C  FFFF               	dw	65535	; assembler added errata NOP
  4441  00152E  EFB1  F00A         	goto	l4193
  4442  001532                     u4720:
  4443  001532  FFFF               	dw	65535	; assembler added errata NOP
  4444  001534  C016  F01E         	movff	___fldiv@b,??___fldiv
  4445  001538  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  4446  00153C  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  4447  001540  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  4448  001544  3421               	rlcf	(??___fldiv+3)^0,w,c
  4449  001546  3221               	rrcf	(??___fldiv+3)^0,f,c
  4450  001548  3220               	rrcf	(??___fldiv+2)^0,f,c
  4451  00154A  321F               	rrcf	(??___fldiv+1)^0,f,c
  4452  00154C  321E               	rrcf	??___fldiv^0,f,c
  4453  00154E  C01E  F016         	movff	??___fldiv,___fldiv@b
  4454  001552  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  4455  001556  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  4456  00155A  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  4457  00155E  4A27               	infsnz	___fldiv@new_exp^0,f,c
  4458  001560  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  4459  001562                     l4193:
  4460  001562  FFFF               	dw	65535	; assembler added errata NOP
  4461  001564  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4462  001566  EFBD  F00A         	goto	u4731
  4463  00156A  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  4464  00156C  E109               	bnz	u4730
  4465  00156E  2827               	incf	___fldiv@new_exp^0,w,c
  4466  001570  A0D8               	btfss	status,0,c
  4467  001572  EFBD  F00A         	goto	u4731
  4468  001576  EFC0  F00A         	goto	u4730
  4469  00157A                     u4731:
  4470  00157A  FFFF               	dw	65535	; assembler added errata NOP
  4471  00157C  EFCC  F00A         	goto	l4197
  4472  001580                     u4730:
  4473  001580  FFFF               	dw	65535	; assembler added errata NOP
  4474  001582  0E00               	movlw	0
  4475  001584  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4476  001586  6827               	setf	___fldiv@new_exp^0,c
  4477  001588  0E00               	movlw	0
  4478  00158A  6E16               	movwf	___fldiv@b^0,c
  4479  00158C  0E00               	movlw	0
  4480  00158E  6E17               	movwf	(___fldiv@b+1)^0,c
  4481  001590  0E00               	movlw	0
  4482  001592  6E18               	movwf	(___fldiv@b+2)^0,c
  4483  001594  0E00               	movlw	0
  4484  001596  6E19               	movwf	(___fldiv@b+3)^0,c
  4485  001598                     l4197:
  4486  001598  FFFF               	dw	65535	; assembler added errata NOP
  4487  00159A  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4488  00159C  EFDB  F00A         	goto	u4740
  4489  0015A0  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  4490  0015A2  E106               	bnz	u4741
  4491  0015A4  0427               	decf	___fldiv@new_exp^0,w,c
  4492  0015A6  B0D8               	btfsc	status,0,c
  4493  0015A8  EFD8  F00A         	goto	u4741
  4494  0015AC  EFDB  F00A         	goto	u4740
  4495  0015B0                     u4741:
  4496  0015B0  FFFF               	dw	65535	; assembler added errata NOP
  4497  0015B2  EFEA  F00A         	goto	l4201
  4498  0015B6                     u4740:
  4499  0015B6  FFFF               	dw	65535	; assembler added errata NOP
  4500  0015B8  0E00               	movlw	0
  4501  0015BA  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4502  0015BC  0E00               	movlw	0
  4503  0015BE  6E27               	movwf	___fldiv@new_exp^0,c
  4504  0015C0  0E00               	movlw	0
  4505  0015C2  6E16               	movwf	___fldiv@b^0,c
  4506  0015C4  0E00               	movlw	0
  4507  0015C6  6E17               	movwf	(___fldiv@b+1)^0,c
  4508  0015C8  0E00               	movlw	0
  4509  0015CA  6E18               	movwf	(___fldiv@b+2)^0,c
  4510  0015CC  0E00               	movlw	0
  4511  0015CE  6E19               	movwf	(___fldiv@b+3)^0,c
  4512  0015D0  0E00               	movlw	0
  4513  0015D2  6E26               	movwf	___fldiv@sign^0,c
  4514  0015D4                     l4201:
  4515  0015D4  FFFF               	dw	65535	; assembler added errata NOP
  4516  0015D6  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  4517  0015DA  A02D               	btfss	___fldiv@bexp^0,0,c
  4518  0015DC  EFF2  F00A         	goto	u4751
  4519  0015E0  EFF5  F00A         	goto	u4750
  4520  0015E4                     u4751:
  4521  0015E4  FFFF               	dw	65535	; assembler added errata NOP
  4522  0015E6  EFF9  F00A         	goto	l4207
  4523  0015EA                     u4750:
  4524  0015EA  FFFF               	dw	65535	; assembler added errata NOP
  4525  0015EC  8E18               	bsf	(___fldiv@b+2)^0,7,c
  4526  0015EE  EFFB  F00A         	goto	l4209
  4527  0015F2                     l4207:
  4528  0015F2  FFFF               	dw	65535	; assembler added errata NOP
  4529  0015F4  9E18               	bcf	(___fldiv@b+2)^0,7,c
  4530  0015F6                     l4209:
  4531  0015F6  FFFF               	dw	65535	; assembler added errata NOP
  4532  0015F8  90D8               	bcf	status,0,c
  4533  0015FA  302D               	rrcf	___fldiv@bexp^0,w,c
  4534  0015FC  6E19               	movwf	(___fldiv@b+3)^0,c
  4535  0015FE  EF7F  F009         	goto	l4123
  4536  001602                     l990:
  4537  001602  FFFF               	dw	65535	; assembler added errata NOP
  4538  001604  0012               	return		;funcret
  4539  001606  FFFF               	dw	65535	; errata NOP
  4540  001608                     __end_of___fldiv:
  4541                           	callstack 0
  4542                           
  4543 ;; *************** function _Z_axis *****************
  4544 ;; Defined at:
  4545 ;;		line 445 in file "main.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  direction       1    wreg     unsigned char 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  direction       1   13[COMRAM] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4559 ;;      Params:         0       0       0       0       0       0       0
  4560 ;;      Locals:         1       0       0       0       0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0       0
  4562 ;;      Totals:         1       0       0       0       0       0       0
  4563 ;;Total ram usage:        1 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 2
  4566 ;; This function calls:
  4567 ;;		_ms_delay
  4568 ;; This function is called by:
  4569 ;;		_pick_and_place
  4570 ;;		_return_to_initial
  4571 ;;		_Z_axis_and_Tweezer
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text11
  4576  002790                     __ptext11:
  4577                           	callstack 0
  4578  002790                     _Z_axis:
  4579                           	callstack 0
  4580  002790  FFFF               	dw	65535	; assembler added errata NOP
  4581                           
  4582                           ;incstack = 0
  4583                           ;Z_axis@direction stored from wreg
  4584  002792  6E0E               	movwf	Z_axis@direction^0,c
  4585  002794                     
  4586                           ;main.c: 446:     if(!New_char_RX){
  4587  002794  5074               	movf	_New_char_RX^0,w,c
  4588  002796  A4D8               	btfss	status,2,c
  4589  002798  EFD0  F013         	goto	u4431
  4590  00279C  EFD3  F013         	goto	u4430
  4591  0027A0                     u4431:
  4592  0027A0  FFFF               	dw	65535	; assembler added errata NOP
  4593  0027A2  EF3B  F014         	goto	l4029
  4594  0027A6                     u4430:
  4595  0027A6  FFFF               	dw	65535	; assembler added errata NOP
  4596  0027A8                     
  4597                           ;main.c: 447:     if (direction == 0){
  4598  0027A8  500E               	movf	Z_axis@direction^0,w,c
  4599  0027AA  A4D8               	btfss	status,2,c
  4600  0027AC  EFDA  F013         	goto	u4441
  4601  0027B0  EFDD  F013         	goto	u4440
  4602  0027B4                     u4441:
  4603  0027B4  FFFF               	dw	65535	; assembler added errata NOP
  4604  0027B6  EF06  F014         	goto	l4013
  4605  0027BA                     u4440:
  4606  0027BA  FFFF               	dw	65535	; assembler added errata NOP
  4607  0027BC                     
  4608                           ;main.c: 448:         PORTD = 0b00000011;
  4609  0027BC  0E03               	movlw	3
  4610  0027BE  6E83               	movwf	131,c	;volatile
  4611  0027C0                     
  4612                           ;main.c: 449:         ms_delay(1);
  4613  0027C0  0E00               	movlw	0
  4614  0027C2  6E09               	movwf	(ms_delay@val+1)^0,c
  4615  0027C4  0E01               	movlw	1
  4616  0027C6  6E08               	movwf	ms_delay@val^0,c
  4617  0027C8  EC12  F017         	call	_ms_delay	;wreg free
  4618  0027CC                     
  4619                           ;main.c: 450:         PORTD = 0b00000110;
  4620  0027CC  0E06               	movlw	6
  4621  0027CE  6E83               	movwf	131,c	;volatile
  4622                           
  4623                           ;main.c: 451:         ms_delay(1);
  4624  0027D0  0E00               	movlw	0
  4625  0027D2  6E09               	movwf	(ms_delay@val+1)^0,c
  4626  0027D4  0E01               	movlw	1
  4627  0027D6  6E08               	movwf	ms_delay@val^0,c
  4628  0027D8  EC12  F017         	call	_ms_delay	;wreg free
  4629  0027DC                     
  4630                           ;main.c: 452:         PORTD = 0b00001100;
  4631  0027DC  0E0C               	movlw	12
  4632  0027DE  6E83               	movwf	131,c	;volatile
  4633  0027E0                     
  4634                           ;main.c: 453:         ms_delay(1);
  4635  0027E0  0E00               	movlw	0
  4636  0027E2  6E09               	movwf	(ms_delay@val+1)^0,c
  4637  0027E4  0E01               	movlw	1
  4638  0027E6  6E08               	movwf	ms_delay@val^0,c
  4639  0027E8  EC12  F017         	call	_ms_delay	;wreg free
  4640                           
  4641                           ;main.c: 454:         PORTD = 0b00001001;
  4642  0027EC  0E09               	movlw	9
  4643  0027EE  6E83               	movwf	131,c	;volatile
  4644  0027F0                     
  4645                           ;main.c: 455:         ms_delay(1);
  4646  0027F0  0E00               	movlw	0
  4647  0027F2  6E09               	movwf	(ms_delay@val+1)^0,c
  4648  0027F4  0E01               	movlw	1
  4649  0027F6  6E08               	movwf	ms_delay@val^0,c
  4650  0027F8  EC12  F017         	call	_ms_delay	;wreg free
  4651  0027FC                     
  4652                           ;main.c: 456:         PORTD = 0b00000011;
  4653  0027FC  0E03               	movlw	3
  4654  0027FE  6E83               	movwf	131,c	;volatile
  4655                           
  4656                           ;main.c: 457:         ms_delay(1);
  4657  002800  0E00               	movlw	0
  4658  002802  6E09               	movwf	(ms_delay@val+1)^0,c
  4659  002804  0E01               	movlw	1
  4660  002806  6E08               	movwf	ms_delay@val^0,c
  4661  002808  EC12  F017         	call	_ms_delay	;wreg free
  4662  00280C                     l4013:
  4663  00280C  FFFF               	dw	65535	; assembler added errata NOP
  4664                           
  4665                           ;main.c: 459:     if (direction == 1){
  4666  00280E  040E               	decf	Z_axis@direction^0,w,c
  4667  002810  A4D8               	btfss	status,2,c
  4668  002812  EF0D  F014         	goto	u4451
  4669  002816  EF10  F014         	goto	u4450
  4670  00281A                     u4451:
  4671  00281A  FFFF               	dw	65535	; assembler added errata NOP
  4672  00281C  EF3E  F014         	goto	l281
  4673  002820                     u4450:
  4674  002820  FFFF               	dw	65535	; assembler added errata NOP
  4675  002822                     
  4676                           ;main.c: 460:         PORTD = 0b00001001;
  4677  002822  0E09               	movlw	9
  4678  002824  6E83               	movwf	131,c	;volatile
  4679  002826                     
  4680                           ;main.c: 461:         ms_delay(1);
  4681  002826  0E00               	movlw	0
  4682  002828  6E09               	movwf	(ms_delay@val+1)^0,c
  4683  00282A  0E01               	movlw	1
  4684  00282C  6E08               	movwf	ms_delay@val^0,c
  4685  00282E  EC12  F017         	call	_ms_delay	;wreg free
  4686  002832                     
  4687                           ;main.c: 462:         PORTD = 0b00001100;
  4688  002832  0E0C               	movlw	12
  4689  002834  6E83               	movwf	131,c	;volatile
  4690                           
  4691                           ;main.c: 463:         ms_delay(1);
  4692  002836  0E00               	movlw	0
  4693  002838  6E09               	movwf	(ms_delay@val+1)^0,c
  4694  00283A  0E01               	movlw	1
  4695  00283C  6E08               	movwf	ms_delay@val^0,c
  4696  00283E  EC12  F017         	call	_ms_delay	;wreg free
  4697  002842                     
  4698                           ;main.c: 464:         PORTD = 0b00000110;
  4699  002842  0E06               	movlw	6
  4700  002844  6E83               	movwf	131,c	;volatile
  4701  002846                     
  4702                           ;main.c: 465:         ms_delay(1);
  4703  002846  0E00               	movlw	0
  4704  002848  6E09               	movwf	(ms_delay@val+1)^0,c
  4705  00284A  0E01               	movlw	1
  4706  00284C  6E08               	movwf	ms_delay@val^0,c
  4707  00284E  EC12  F017         	call	_ms_delay	;wreg free
  4708                           
  4709                           ;main.c: 466:         PORTD = 0b00000011;
  4710  002852  0E03               	movlw	3
  4711  002854  6E83               	movwf	131,c	;volatile
  4712  002856                     
  4713                           ;main.c: 467:         ms_delay(1);
  4714  002856  0E00               	movlw	0
  4715  002858  6E09               	movwf	(ms_delay@val+1)^0,c
  4716  00285A  0E01               	movlw	1
  4717  00285C  6E08               	movwf	ms_delay@val^0,c
  4718  00285E  EC12  F017         	call	_ms_delay	;wreg free
  4719  002862                     
  4720                           ;main.c: 468:         PORTD = 0b00001001;
  4721  002862  0E09               	movlw	9
  4722  002864  6E83               	movwf	131,c	;volatile
  4723                           
  4724                           ;main.c: 469:         ms_delay(1);
  4725  002866  0E00               	movlw	0
  4726  002868  6E09               	movwf	(ms_delay@val+1)^0,c
  4727  00286A  0E01               	movlw	1
  4728  00286C  6E08               	movwf	ms_delay@val^0,c
  4729  00286E  EC12  F017         	call	_ms_delay	;wreg free
  4730  002872  EF3E  F014         	goto	l281
  4731  002876                     l4029:
  4732  002876  FFFF               	dw	65535	; assembler added errata NOP
  4733                           
  4734                           ;main.c: 472:         stop=1;
  4735  002878  0E01               	movlw	1
  4736  00287A  6E73               	movwf	_stop^0,c
  4737  00287C                     l281:
  4738  00287C  FFFF               	dw	65535	; assembler added errata NOP
  4739  00287E  0012               	return		;funcret
  4740  002880  FFFF               	dw	65535	; errata NOP
  4741  002882                     __end_of_Z_axis:
  4742                           	callstack 0
  4743                           
  4744 ;; *************** function _Y_axis *****************
  4745 ;; Defined at:
  4746 ;;		line 414 in file "main.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  direction       1    wreg     unsigned char 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  direction       1   13[COMRAM] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4760 ;;      Params:         0       0       0       0       0       0       0
  4761 ;;      Locals:         1       0       0       0       0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0       0
  4763 ;;      Totals:         1       0       0       0       0       0       0
  4764 ;;Total ram usage:        1 bytes
  4765 ;; Hardware stack levels used: 1
  4766 ;; Hardware stack levels required when called: 2
  4767 ;; This function calls:
  4768 ;;		_ms_delay
  4769 ;; This function is called by:
  4770 ;;		_pick_and_place
  4771 ;;		_return_to_initial
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text12
  4776  002882                     __ptext12:
  4777                           	callstack 0
  4778  002882                     _Y_axis:
  4779                           	callstack 0
  4780  002882  FFFF               	dw	65535	; assembler added errata NOP
  4781                           
  4782                           ;incstack = 0
  4783                           ;Y_axis@direction stored from wreg
  4784  002884  6E0E               	movwf	Y_axis@direction^0,c
  4785  002886                     
  4786                           ;main.c: 415:     if(!New_char_RX){
  4787  002886  5074               	movf	_New_char_RX^0,w,c
  4788  002888  A4D8               	btfss	status,2,c
  4789  00288A  EF49  F014         	goto	u4401
  4790  00288E  EF4C  F014         	goto	u4400
  4791  002892                     u4401:
  4792  002892  FFFF               	dw	65535	; assembler added errata NOP
  4793  002894  EFB4  F014         	goto	l3993
  4794  002898                     u4400:
  4795  002898  FFFF               	dw	65535	; assembler added errata NOP
  4796  00289A                     
  4797                           ;main.c: 416:     if (direction == 0){
  4798  00289A  500E               	movf	Y_axis@direction^0,w,c
  4799  00289C  A4D8               	btfss	status,2,c
  4800  00289E  EF53  F014         	goto	u4411
  4801  0028A2  EF56  F014         	goto	u4410
  4802  0028A6                     u4411:
  4803  0028A6  FFFF               	dw	65535	; assembler added errata NOP
  4804  0028A8  EF7F  F014         	goto	l3977
  4805  0028AC                     u4410:
  4806  0028AC  FFFF               	dw	65535	; assembler added errata NOP
  4807  0028AE                     
  4808                           ;main.c: 417:         PORTB = 0b00110000;
  4809  0028AE  0E30               	movlw	48
  4810  0028B0  6E81               	movwf	129,c	;volatile
  4811  0028B2                     
  4812                           ;main.c: 418:         ms_delay(1);
  4813  0028B2  0E00               	movlw	0
  4814  0028B4  6E09               	movwf	(ms_delay@val+1)^0,c
  4815  0028B6  0E01               	movlw	1
  4816  0028B8  6E08               	movwf	ms_delay@val^0,c
  4817  0028BA  EC12  F017         	call	_ms_delay	;wreg free
  4818  0028BE                     
  4819                           ;main.c: 419:         PORTB = 0b01100000;
  4820  0028BE  0E60               	movlw	96
  4821  0028C0  6E81               	movwf	129,c	;volatile
  4822                           
  4823                           ;main.c: 420:         ms_delay(1);
  4824  0028C2  0E00               	movlw	0
  4825  0028C4  6E09               	movwf	(ms_delay@val+1)^0,c
  4826  0028C6  0E01               	movlw	1
  4827  0028C8  6E08               	movwf	ms_delay@val^0,c
  4828  0028CA  EC12  F017         	call	_ms_delay	;wreg free
  4829  0028CE                     
  4830                           ;main.c: 421:         PORTB = 0b11000000;
  4831  0028CE  0EC0               	movlw	192
  4832  0028D0  6E81               	movwf	129,c	;volatile
  4833  0028D2                     
  4834                           ;main.c: 422:         ms_delay(1);
  4835  0028D2  0E00               	movlw	0
  4836  0028D4  6E09               	movwf	(ms_delay@val+1)^0,c
  4837  0028D6  0E01               	movlw	1
  4838  0028D8  6E08               	movwf	ms_delay@val^0,c
  4839  0028DA  EC12  F017         	call	_ms_delay	;wreg free
  4840                           
  4841                           ;main.c: 423:         PORTB = 0b10010000;
  4842  0028DE  0E90               	movlw	144
  4843  0028E0  6E81               	movwf	129,c	;volatile
  4844  0028E2                     
  4845                           ;main.c: 424:         ms_delay(1);
  4846  0028E2  0E00               	movlw	0
  4847  0028E4  6E09               	movwf	(ms_delay@val+1)^0,c
  4848  0028E6  0E01               	movlw	1
  4849  0028E8  6E08               	movwf	ms_delay@val^0,c
  4850  0028EA  EC12  F017         	call	_ms_delay	;wreg free
  4851  0028EE                     
  4852                           ;main.c: 425:         PORTB = 0b00110000;
  4853  0028EE  0E30               	movlw	48
  4854  0028F0  6E81               	movwf	129,c	;volatile
  4855                           
  4856                           ;main.c: 426:         ms_delay(1);
  4857  0028F2  0E00               	movlw	0
  4858  0028F4  6E09               	movwf	(ms_delay@val+1)^0,c
  4859  0028F6  0E01               	movlw	1
  4860  0028F8  6E08               	movwf	ms_delay@val^0,c
  4861  0028FA  EC12  F017         	call	_ms_delay	;wreg free
  4862  0028FE                     l3977:
  4863  0028FE  FFFF               	dw	65535	; assembler added errata NOP
  4864                           
  4865                           ;main.c: 428:     if (direction == 1){
  4866  002900  040E               	decf	Y_axis@direction^0,w,c
  4867  002902  A4D8               	btfss	status,2,c
  4868  002904  EF86  F014         	goto	u4421
  4869  002908  EF89  F014         	goto	u4420
  4870  00290C                     u4421:
  4871  00290C  FFFF               	dw	65535	; assembler added errata NOP
  4872  00290E  EFB7  F014         	goto	l274
  4873  002912                     u4420:
  4874  002912  FFFF               	dw	65535	; assembler added errata NOP
  4875  002914                     
  4876                           ;main.c: 429:         PORTB = 0b10010000;
  4877  002914  0E90               	movlw	144
  4878  002916  6E81               	movwf	129,c	;volatile
  4879  002918                     
  4880                           ;main.c: 430:         ms_delay(1);
  4881  002918  0E00               	movlw	0
  4882  00291A  6E09               	movwf	(ms_delay@val+1)^0,c
  4883  00291C  0E01               	movlw	1
  4884  00291E  6E08               	movwf	ms_delay@val^0,c
  4885  002920  EC12  F017         	call	_ms_delay	;wreg free
  4886  002924                     
  4887                           ;main.c: 431:         PORTB = 0b11000000;
  4888  002924  0EC0               	movlw	192
  4889  002926  6E81               	movwf	129,c	;volatile
  4890                           
  4891                           ;main.c: 432:         ms_delay(1);
  4892  002928  0E00               	movlw	0
  4893  00292A  6E09               	movwf	(ms_delay@val+1)^0,c
  4894  00292C  0E01               	movlw	1
  4895  00292E  6E08               	movwf	ms_delay@val^0,c
  4896  002930  EC12  F017         	call	_ms_delay	;wreg free
  4897  002934                     
  4898                           ;main.c: 433:         PORTB = 0b01100000;
  4899  002934  0E60               	movlw	96
  4900  002936  6E81               	movwf	129,c	;volatile
  4901  002938                     
  4902                           ;main.c: 434:         ms_delay(1);
  4903  002938  0E00               	movlw	0
  4904  00293A  6E09               	movwf	(ms_delay@val+1)^0,c
  4905  00293C  0E01               	movlw	1
  4906  00293E  6E08               	movwf	ms_delay@val^0,c
  4907  002940  EC12  F017         	call	_ms_delay	;wreg free
  4908                           
  4909                           ;main.c: 435:         PORTB = 0b00110000;
  4910  002944  0E30               	movlw	48
  4911  002946  6E81               	movwf	129,c	;volatile
  4912  002948                     
  4913                           ;main.c: 436:         ms_delay(1);
  4914  002948  0E00               	movlw	0
  4915  00294A  6E09               	movwf	(ms_delay@val+1)^0,c
  4916  00294C  0E01               	movlw	1
  4917  00294E  6E08               	movwf	ms_delay@val^0,c
  4918  002950  EC12  F017         	call	_ms_delay	;wreg free
  4919  002954                     
  4920                           ;main.c: 437:         PORTB = 0b10010000;
  4921  002954  0E90               	movlw	144
  4922  002956  6E81               	movwf	129,c	;volatile
  4923                           
  4924                           ;main.c: 438:         ms_delay(1);
  4925  002958  0E00               	movlw	0
  4926  00295A  6E09               	movwf	(ms_delay@val+1)^0,c
  4927  00295C  0E01               	movlw	1
  4928  00295E  6E08               	movwf	ms_delay@val^0,c
  4929  002960  EC12  F017         	call	_ms_delay	;wreg free
  4930  002964  EFB7  F014         	goto	l274
  4931  002968                     l3993:
  4932  002968  FFFF               	dw	65535	; assembler added errata NOP
  4933                           
  4934                           ;main.c: 441:         stop=1;
  4935  00296A  0E01               	movlw	1
  4936  00296C  6E73               	movwf	_stop^0,c
  4937  00296E                     l274:
  4938  00296E  FFFF               	dw	65535	; assembler added errata NOP
  4939  002970  0012               	return		;funcret
  4940  002972  FFFF               	dw	65535	; errata NOP
  4941  002974                     __end_of_Y_axis:
  4942                           	callstack 0
  4943                           
  4944 ;; *************** function _X_axis *****************
  4945 ;; Defined at:
  4946 ;;		line 383 in file "main.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  direction       1    wreg     unsigned char 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  direction       1   13[COMRAM] unsigned char 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4960 ;;      Params:         0       0       0       0       0       0       0
  4961 ;;      Locals:         1       0       0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0
  4963 ;;      Totals:         1       0       0       0       0       0       0
  4964 ;;Total ram usage:        1 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; Hardware stack levels required when called: 2
  4967 ;; This function calls:
  4968 ;;		_ms_delay
  4969 ;; This function is called by:
  4970 ;;		_pick_and_place
  4971 ;;		_return_to_initial
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text13
  4976  002974                     __ptext13:
  4977                           	callstack 0
  4978  002974                     _X_axis:
  4979                           	callstack 0
  4980  002974  FFFF               	dw	65535	; assembler added errata NOP
  4981                           
  4982                           ;incstack = 0
  4983                           ;X_axis@direction stored from wreg
  4984  002976  6E0E               	movwf	X_axis@direction^0,c
  4985  002978                     
  4986                           ;main.c: 384:     if(!New_char_RX){
  4987  002978  5074               	movf	_New_char_RX^0,w,c
  4988  00297A  A4D8               	btfss	status,2,c
  4989  00297C  EFC2  F014         	goto	u4371
  4990  002980  EFC5  F014         	goto	u4370
  4991  002984                     u4371:
  4992  002984  FFFF               	dw	65535	; assembler added errata NOP
  4993  002986  EF2D  F015         	goto	l3957
  4994  00298A                     u4370:
  4995  00298A  FFFF               	dw	65535	; assembler added errata NOP
  4996  00298C                     
  4997                           ;main.c: 385:     if (direction == 0){
  4998  00298C  500E               	movf	X_axis@direction^0,w,c
  4999  00298E  A4D8               	btfss	status,2,c
  5000  002990  EFCC  F014         	goto	u4381
  5001  002994  EFCF  F014         	goto	u4380
  5002  002998                     u4381:
  5003  002998  FFFF               	dw	65535	; assembler added errata NOP
  5004  00299A  EFF8  F014         	goto	l3941
  5005  00299E                     u4380:
  5006  00299E  FFFF               	dw	65535	; assembler added errata NOP
  5007  0029A0                     
  5008                           ;main.c: 386:         PORTB = 0b00000011;
  5009  0029A0  0E03               	movlw	3
  5010  0029A2  6E81               	movwf	129,c	;volatile
  5011  0029A4                     
  5012                           ;main.c: 387:         ms_delay(1);
  5013  0029A4  0E00               	movlw	0
  5014  0029A6  6E09               	movwf	(ms_delay@val+1)^0,c
  5015  0029A8  0E01               	movlw	1
  5016  0029AA  6E08               	movwf	ms_delay@val^0,c
  5017  0029AC  EC12  F017         	call	_ms_delay	;wreg free
  5018  0029B0                     
  5019                           ;main.c: 388:         PORTB = 0b00000110;
  5020  0029B0  0E06               	movlw	6
  5021  0029B2  6E81               	movwf	129,c	;volatile
  5022                           
  5023                           ;main.c: 389:         ms_delay(1);
  5024  0029B4  0E00               	movlw	0
  5025  0029B6  6E09               	movwf	(ms_delay@val+1)^0,c
  5026  0029B8  0E01               	movlw	1
  5027  0029BA  6E08               	movwf	ms_delay@val^0,c
  5028  0029BC  EC12  F017         	call	_ms_delay	;wreg free
  5029  0029C0                     
  5030                           ;main.c: 390:         PORTB = 0b00001100;
  5031  0029C0  0E0C               	movlw	12
  5032  0029C2  6E81               	movwf	129,c	;volatile
  5033  0029C4                     
  5034                           ;main.c: 391:         ms_delay(1);
  5035  0029C4  0E00               	movlw	0
  5036  0029C6  6E09               	movwf	(ms_delay@val+1)^0,c
  5037  0029C8  0E01               	movlw	1
  5038  0029CA  6E08               	movwf	ms_delay@val^0,c
  5039  0029CC  EC12  F017         	call	_ms_delay	;wreg free
  5040                           
  5041                           ;main.c: 392:         PORTB = 0b00001001;
  5042  0029D0  0E09               	movlw	9
  5043  0029D2  6E81               	movwf	129,c	;volatile
  5044  0029D4                     
  5045                           ;main.c: 393:         ms_delay(1);
  5046  0029D4  0E00               	movlw	0
  5047  0029D6  6E09               	movwf	(ms_delay@val+1)^0,c
  5048  0029D8  0E01               	movlw	1
  5049  0029DA  6E08               	movwf	ms_delay@val^0,c
  5050  0029DC  EC12  F017         	call	_ms_delay	;wreg free
  5051  0029E0                     
  5052                           ;main.c: 394:         PORTB = 0b00000011;
  5053  0029E0  0E03               	movlw	3
  5054  0029E2  6E81               	movwf	129,c	;volatile
  5055                           
  5056                           ;main.c: 395:         ms_delay(1);
  5057  0029E4  0E00               	movlw	0
  5058  0029E6  6E09               	movwf	(ms_delay@val+1)^0,c
  5059  0029E8  0E01               	movlw	1
  5060  0029EA  6E08               	movwf	ms_delay@val^0,c
  5061  0029EC  EC12  F017         	call	_ms_delay	;wreg free
  5062  0029F0                     l3941:
  5063  0029F0  FFFF               	dw	65535	; assembler added errata NOP
  5064                           
  5065                           ;main.c: 397:     if (direction == 1){
  5066  0029F2  040E               	decf	X_axis@direction^0,w,c
  5067  0029F4  A4D8               	btfss	status,2,c
  5068  0029F6  EFFF  F014         	goto	u4391
  5069  0029FA  EF02  F015         	goto	u4390
  5070  0029FE                     u4391:
  5071  0029FE  FFFF               	dw	65535	; assembler added errata NOP
  5072  002A00  EF30  F015         	goto	l267
  5073  002A04                     u4390:
  5074  002A04  FFFF               	dw	65535	; assembler added errata NOP
  5075  002A06                     
  5076                           ;main.c: 398:         PORTB = 0b00001001;
  5077  002A06  0E09               	movlw	9
  5078  002A08  6E81               	movwf	129,c	;volatile
  5079  002A0A                     
  5080                           ;main.c: 399:         ms_delay(1);
  5081  002A0A  0E00               	movlw	0
  5082  002A0C  6E09               	movwf	(ms_delay@val+1)^0,c
  5083  002A0E  0E01               	movlw	1
  5084  002A10  6E08               	movwf	ms_delay@val^0,c
  5085  002A12  EC12  F017         	call	_ms_delay	;wreg free
  5086  002A16                     
  5087                           ;main.c: 400:         PORTB = 0b00001100;
  5088  002A16  0E0C               	movlw	12
  5089  002A18  6E81               	movwf	129,c	;volatile
  5090                           
  5091                           ;main.c: 401:         ms_delay(1);
  5092  002A1A  0E00               	movlw	0
  5093  002A1C  6E09               	movwf	(ms_delay@val+1)^0,c
  5094  002A1E  0E01               	movlw	1
  5095  002A20  6E08               	movwf	ms_delay@val^0,c
  5096  002A22  EC12  F017         	call	_ms_delay	;wreg free
  5097  002A26                     
  5098                           ;main.c: 402:         PORTB = 0b00000110;
  5099  002A26  0E06               	movlw	6
  5100  002A28  6E81               	movwf	129,c	;volatile
  5101  002A2A                     
  5102                           ;main.c: 403:         ms_delay(1);
  5103  002A2A  0E00               	movlw	0
  5104  002A2C  6E09               	movwf	(ms_delay@val+1)^0,c
  5105  002A2E  0E01               	movlw	1
  5106  002A30  6E08               	movwf	ms_delay@val^0,c
  5107  002A32  EC12  F017         	call	_ms_delay	;wreg free
  5108                           
  5109                           ;main.c: 404:         PORTB = 0b00000011;
  5110  002A36  0E03               	movlw	3
  5111  002A38  6E81               	movwf	129,c	;volatile
  5112  002A3A                     
  5113                           ;main.c: 405:         ms_delay(1);
  5114  002A3A  0E00               	movlw	0
  5115  002A3C  6E09               	movwf	(ms_delay@val+1)^0,c
  5116  002A3E  0E01               	movlw	1
  5117  002A40  6E08               	movwf	ms_delay@val^0,c
  5118  002A42  EC12  F017         	call	_ms_delay	;wreg free
  5119  002A46                     
  5120                           ;main.c: 406:         PORTB = 0b00001001;
  5121  002A46  0E09               	movlw	9
  5122  002A48  6E81               	movwf	129,c	;volatile
  5123                           
  5124                           ;main.c: 407:         ms_delay(1);
  5125  002A4A  0E00               	movlw	0
  5126  002A4C  6E09               	movwf	(ms_delay@val+1)^0,c
  5127  002A4E  0E01               	movlw	1
  5128  002A50  6E08               	movwf	ms_delay@val^0,c
  5129  002A52  EC12  F017         	call	_ms_delay	;wreg free
  5130  002A56  EF30  F015         	goto	l267
  5131  002A5A                     l3957:
  5132  002A5A  FFFF               	dw	65535	; assembler added errata NOP
  5133                           
  5134                           ;main.c: 410:         stop=1;
  5135  002A5C  0E01               	movlw	1
  5136  002A5E  6E73               	movwf	_stop^0,c
  5137  002A60                     l267:
  5138  002A60  FFFF               	dw	65535	; assembler added errata NOP
  5139  002A62  0012               	return		;funcret
  5140  002A64  FFFF               	dw	65535	; errata NOP
  5141  002A66                     __end_of_X_axis:
  5142                           	callstack 0
  5143                           
  5144 ;; *************** function _Twister *****************
  5145 ;; Defined at:
  5146 ;;		line 476 in file "main.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  direction       1    wreg     unsigned char 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  direction       1   13[COMRAM] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5160 ;;      Params:         0       0       0       0       0       0       0
  5161 ;;      Locals:         1       0       0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0
  5163 ;;      Totals:         1       0       0       0       0       0       0
  5164 ;;Total ram usage:        1 bytes
  5165 ;; Hardware stack levels used: 1
  5166 ;; Hardware stack levels required when called: 2
  5167 ;; This function calls:
  5168 ;;		_ms_delay
  5169 ;; This function is called by:
  5170 ;;		_pick_and_place
  5171 ;;		_return_to_initial
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text14
  5176  002A66                     __ptext14:
  5177                           	callstack 0
  5178  002A66                     _Twister:
  5179                           	callstack 0
  5180  002A66  FFFF               	dw	65535	; assembler added errata NOP
  5181                           
  5182                           ;incstack = 0
  5183                           ;Twister@direction stored from wreg
  5184  002A68  6E0E               	movwf	Twister@direction^0,c
  5185  002A6A                     
  5186                           ;main.c: 477:     if(!New_char_RX){
  5187  002A6A  5074               	movf	_New_char_RX^0,w,c
  5188  002A6C  A4D8               	btfss	status,2,c
  5189  002A6E  EF3B  F015         	goto	u4461
  5190  002A72  EF3E  F015         	goto	u4460
  5191  002A76                     u4461:
  5192  002A76  FFFF               	dw	65535	; assembler added errata NOP
  5193  002A78  EF96  F015         	goto	l4061
  5194  002A7C                     u4460:
  5195  002A7C  FFFF               	dw	65535	; assembler added errata NOP
  5196  002A7E                     
  5197                           ;main.c: 478:     if (direction == 0){
  5198  002A7E  500E               	movf	Twister@direction^0,w,c
  5199  002A80  A4D8               	btfss	status,2,c
  5200  002A82  EF45  F015         	goto	u4471
  5201  002A86  EF48  F015         	goto	u4470
  5202  002A8A                     u4471:
  5203  002A8A  FFFF               	dw	65535	; assembler added errata NOP
  5204  002A8C  EF69  F015         	goto	l4047
  5205  002A90                     u4470:
  5206  002A90  FFFF               	dw	65535	; assembler added errata NOP
  5207  002A92                     
  5208                           ;main.c: 479:         PORTD = 0b00110000;
  5209  002A92  0E30               	movlw	48
  5210  002A94  6E83               	movwf	131,c	;volatile
  5211  002A96                     
  5212                           ;main.c: 480:         ms_delay(1);
  5213  002A96  0E00               	movlw	0
  5214  002A98  6E09               	movwf	(ms_delay@val+1)^0,c
  5215  002A9A  0E01               	movlw	1
  5216  002A9C  6E08               	movwf	ms_delay@val^0,c
  5217  002A9E  EC12  F017         	call	_ms_delay	;wreg free
  5218  002AA2                     
  5219                           ;main.c: 481:         PORTD = 0b11000000;
  5220  002AA2  0EC0               	movlw	192
  5221  002AA4  6E83               	movwf	131,c	;volatile
  5222                           
  5223                           ;main.c: 482:         ms_delay(1);
  5224  002AA6  0E00               	movlw	0
  5225  002AA8  6E09               	movwf	(ms_delay@val+1)^0,c
  5226  002AAA  0E01               	movlw	1
  5227  002AAC  6E08               	movwf	ms_delay@val^0,c
  5228  002AAE  EC12  F017         	call	_ms_delay	;wreg free
  5229  002AB2                     
  5230                           ;main.c: 483:         PORTD = 0b10010000;
  5231  002AB2  0E90               	movlw	144
  5232  002AB4  6E83               	movwf	131,c	;volatile
  5233  002AB6                     
  5234                           ;main.c: 484:         ms_delay(1);
  5235  002AB6  0E00               	movlw	0
  5236  002AB8  6E09               	movwf	(ms_delay@val+1)^0,c
  5237  002ABA  0E01               	movlw	1
  5238  002ABC  6E08               	movwf	ms_delay@val^0,c
  5239  002ABE  EC12  F017         	call	_ms_delay	;wreg free
  5240                           
  5241                           ;main.c: 485:         PORTD = 0b00110000;
  5242  002AC2  0E30               	movlw	48
  5243  002AC4  6E83               	movwf	131,c	;volatile
  5244  002AC6                     
  5245                           ;main.c: 486:         ms_delay(1);
  5246  002AC6  0E00               	movlw	0
  5247  002AC8  6E09               	movwf	(ms_delay@val+1)^0,c
  5248  002ACA  0E01               	movlw	1
  5249  002ACC  6E08               	movwf	ms_delay@val^0,c
  5250  002ACE  EC12  F017         	call	_ms_delay	;wreg free
  5251  002AD2                     l4047:
  5252  002AD2  FFFF               	dw	65535	; assembler added errata NOP
  5253                           
  5254                           ;main.c: 488:     if (direction == 1){
  5255  002AD4  040E               	decf	Twister@direction^0,w,c
  5256  002AD6  A4D8               	btfss	status,2,c
  5257  002AD8  EF70  F015         	goto	u4481
  5258  002ADC  EF73  F015         	goto	u4480
  5259  002AE0                     u4481:
  5260  002AE0  FFFF               	dw	65535	; assembler added errata NOP
  5261  002AE2  EF99  F015         	goto	l288
  5262  002AE6                     u4480:
  5263  002AE6  FFFF               	dw	65535	; assembler added errata NOP
  5264  002AE8                     
  5265                           ;main.c: 489:         PORTD = 0b10010000;
  5266  002AE8  0E90               	movlw	144
  5267  002AEA  6E83               	movwf	131,c	;volatile
  5268  002AEC                     
  5269                           ;main.c: 490:         ms_delay(1);
  5270  002AEC  0E00               	movlw	0
  5271  002AEE  6E09               	movwf	(ms_delay@val+1)^0,c
  5272  002AF0  0E01               	movlw	1
  5273  002AF2  6E08               	movwf	ms_delay@val^0,c
  5274  002AF4  EC12  F017         	call	_ms_delay	;wreg free
  5275  002AF8                     
  5276                           ;main.c: 491:         PORTD = 0b01100000;
  5277  002AF8  0E60               	movlw	96
  5278  002AFA  6E83               	movwf	131,c	;volatile
  5279                           
  5280                           ;main.c: 492:         ms_delay(1);
  5281  002AFC  0E00               	movlw	0
  5282  002AFE  6E09               	movwf	(ms_delay@val+1)^0,c
  5283  002B00  0E01               	movlw	1
  5284  002B02  6E08               	movwf	ms_delay@val^0,c
  5285  002B04  EC12  F017         	call	_ms_delay	;wreg free
  5286  002B08                     
  5287                           ;main.c: 493:         PORTD = 0b00110000;
  5288  002B08  0E30               	movlw	48
  5289  002B0A  6E83               	movwf	131,c	;volatile
  5290  002B0C                     
  5291                           ;main.c: 494:         ms_delay(1);
  5292  002B0C  0E00               	movlw	0
  5293  002B0E  6E09               	movwf	(ms_delay@val+1)^0,c
  5294  002B10  0E01               	movlw	1
  5295  002B12  6E08               	movwf	ms_delay@val^0,c
  5296  002B14  EC12  F017         	call	_ms_delay	;wreg free
  5297                           
  5298                           ;main.c: 495:         PORTD = 0b10010000;
  5299  002B18  0E90               	movlw	144
  5300  002B1A  6E83               	movwf	131,c	;volatile
  5301  002B1C                     
  5302                           ;main.c: 496:         ms_delay(1);
  5303  002B1C  0E00               	movlw	0
  5304  002B1E  6E09               	movwf	(ms_delay@val+1)^0,c
  5305  002B20  0E01               	movlw	1
  5306  002B22  6E08               	movwf	ms_delay@val^0,c
  5307  002B24  EC12  F017         	call	_ms_delay	;wreg free
  5308  002B28  EF99  F015         	goto	l288
  5309  002B2C                     l4061:
  5310  002B2C  FFFF               	dw	65535	; assembler added errata NOP
  5311                           
  5312                           ;main.c: 500:         stop=1;
  5313  002B2E  0E01               	movlw	1
  5314  002B30  6E73               	movwf	_stop^0,c
  5315  002B32                     l288:
  5316  002B32  FFFF               	dw	65535	; assembler added errata NOP
  5317  002B34  0012               	return		;funcret
  5318  002B36  FFFF               	dw	65535	; errata NOP
  5319  002B38                     __end_of_Twister:
  5320                           	callstack 0
  5321                           
  5322 ;; *************** function _ms_delay *****************
  5323 ;; Defined at:
  5324 ;;		line 505 in file "main.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;  val             2    7[COMRAM] unsigned int 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  j               2   11[COMRAM] unsigned int 
  5329 ;;  i               2    9[COMRAM] unsigned int 
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  1    wreg      void 
  5332 ;; Registers used:
  5333 ;;		wreg, status,2, status,0
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5339 ;;      Params:         2       0       0       0       0       0       0
  5340 ;;      Locals:         4       0       0       0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0       0       0
  5342 ;;      Totals:         6       0       0       0       0       0       0
  5343 ;;Total ram usage:        6 bytes
  5344 ;; Hardware stack levels used: 1
  5345 ;; Hardware stack levels required when called: 1
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_X_axis
  5350 ;;		_Y_axis
  5351 ;;		_Z_axis
  5352 ;;		_Twister
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text15
  5357  002E24                     __ptext15:
  5358                           	callstack 0
  5359  002E24                     _ms_delay:
  5360                           	callstack 0
  5361  002E24  FFFF               	dw	65535	; assembler added errata NOP
  5362  002E26                     
  5363                           ;main.c: 505: void ms_delay(unsigned int val);main.c: 506: {;main.c: 507:      unsigned 
      +                          int i,j;;main.c: 508:         for(i=0;i<val;i++)
  5364  002E26  0E00               	movlw	0
  5365  002E28  6E0B               	movwf	(ms_delay@i+1)^0,c
  5366  002E2A  0E00               	movlw	0
  5367  002E2C  6E0A               	movwf	ms_delay@i^0,c
  5368  002E2E  EF30  F017         	goto	l3921
  5369  002E32                     l3909:
  5370  002E32  FFFF               	dw	65535	; assembler added errata NOP
  5371                           
  5372                           ;main.c: 509:             for(j=0;j<1650;j++);
  5373  002E34  0E00               	movlw	0
  5374  002E36  6E0D               	movwf	(ms_delay@j+1)^0,c
  5375  002E38  0E00               	movlw	0
  5376  002E3A  6E0C               	movwf	ms_delay@j^0,c
  5377  002E3C                     l3915:
  5378  002E3C  FFFF               	dw	65535	; assembler added errata NOP
  5379  002E3E  4A0C               	infsnz	ms_delay@j^0,f,c
  5380  002E40  2A0D               	incf	(ms_delay@j+1)^0,f,c
  5381  002E42  0E72               	movlw	114
  5382  002E44  5C0C               	subwf	ms_delay@j^0,w,c
  5383  002E46  0E06               	movlw	6
  5384  002E48  580D               	subwfb	(ms_delay@j+1)^0,w,c
  5385  002E4A  A0D8               	btfss	status,0,c
  5386  002E4C  EF2A  F017         	goto	u4351
  5387  002E50  EF2D  F017         	goto	u4350
  5388  002E54                     u4351:
  5389  002E54  FFFF               	dw	65535	; assembler added errata NOP
  5390  002E56  EF1E  F017         	goto	l3915
  5391  002E5A                     u4350:
  5392  002E5A  FFFF               	dw	65535	; assembler added errata NOP
  5393  002E5C  4A0A               	infsnz	ms_delay@i^0,f,c
  5394  002E5E  2A0B               	incf	(ms_delay@i+1)^0,f,c
  5395  002E60                     l3921:
  5396  002E60  FFFF               	dw	65535	; assembler added errata NOP
  5397  002E62  5008               	movf	ms_delay@val^0,w,c
  5398  002E64  5C0A               	subwf	ms_delay@i^0,w,c
  5399  002E66  5009               	movf	(ms_delay@val+1)^0,w,c
  5400  002E68  580B               	subwfb	(ms_delay@i+1)^0,w,c
  5401  002E6A  A0D8               	btfss	status,0,c
  5402  002E6C  EF3A  F017         	goto	u4361
  5403  002E70  EF3D  F017         	goto	u4360
  5404  002E74                     u4361:
  5405  002E74  FFFF               	dw	65535	; assembler added errata NOP
  5406  002E76  EF19  F017         	goto	l3909
  5407  002E7A                     u4360:
  5408  002E7A  FFFF               	dw	65535	; assembler added errata NOP
  5409  002E7C  0012               	return		;funcret
  5410  002E7E  FFFF               	dw	65535	; errata NOP
  5411  002E80                     __end_of_ms_delay:
  5412                           	callstack 0
  5413                           
  5414 ;; *************** function _change_sequence *****************
  5415 ;; Defined at:
  5416 ;;		line 252 in file "main.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;		None
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  i               2   17[COMRAM] int 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1    wreg      void 
  5423 ;; Registers used:
  5424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5430 ;;      Params:         0       0       0       0       0       0       0
  5431 ;;      Locals:         2       0       0       0       0       0       0
  5432 ;;      Temps:          3       0       0       0       0       0       0
  5433 ;;      Totals:         5       0       0       0       0       0       0
  5434 ;;Total ram usage:        5 bytes
  5435 ;; Hardware stack levels used: 1
  5436 ;; Hardware stack levels required when called: 3
  5437 ;; This function calls:
  5438 ;;		_print_string
  5439 ;; This function is called by:
  5440 ;;		_start_up_menu
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text16
  5445  002B38                     __ptext16:
  5446                           	callstack 0
  5447  002B38                     _change_sequence:
  5448                           	callstack 0
  5449  002B38  FFFF               	dw	65535	; assembler added errata NOP
  5450  002B3A                     
  5451                           ;main.c: 253:     print_string("\nThe current sequence is: ");
  5452  002B3A  0E8D               	movlw	low STR_4
  5453  002B3C  6E09               	movwf	print_string@strng^0,c
  5454  002B3E  0E7F               	movlw	high STR_4
  5455  002B40  6E0A               	movwf	(print_string@strng+1)^0,c
  5456  002B42  ECE8  F015         	call	_print_string	;wreg free
  5457                           
  5458                           ;main.c: 254:     print_string(sequence);
  5459  002B46  0EE9               	movlw	low _sequence
  5460  002B48  6E09               	movwf	print_string@strng^0,c
  5461  002B4A  0E00               	movlw	high _sequence
  5462  002B4C  6E0A               	movwf	(print_string@strng+1)^0,c
  5463  002B4E  ECE8  F015         	call	_print_string	;wreg free
  5464                           
  5465                           ;main.c: 255:     print_string("\nPlease give the new sequence as input\r");
  5466  002B52  0E98               	movlw	low STR_5
  5467  002B54  6E09               	movwf	print_string@strng^0,c
  5468  002B56  0E7E               	movlw	high STR_5
  5469  002B58  6E0A               	movwf	(print_string@strng+1)^0,c
  5470  002B5A  ECE8  F015         	call	_print_string	;wreg free
  5471  002B5E                     
  5472                           ;main.c: 256:     int i = 0;
  5473  002B5E  0E00               	movlw	0
  5474  002B60  6E13               	movwf	(change_sequence@i+1)^0,c
  5475  002B62  0E00               	movlw	0
  5476  002B64  6E12               	movwf	change_sequence@i^0,c
  5477  002B66                     l3603:
  5478  002B66  FFFF               	dw	65535	; assembler added errata NOP
  5479                           
  5480                           ;main.c: 258:         if(New_char_RX){
  5481  002B68  5074               	movf	_New_char_RX^0,w,c
  5482  002B6A  B4D8               	btfsc	status,2,c
  5483  002B6C  EFBA  F015         	goto	u4011
  5484  002B70  EFBD  F015         	goto	u4010
  5485  002B74                     u4011:
  5486  002B74  FFFF               	dw	65535	; assembler added errata NOP
  5487  002B76  EFB3  F015         	goto	l3603
  5488  002B7A                     u4010:
  5489  002B7A  FFFF               	dw	65535	; assembler added errata NOP
  5490  002B7C                     l3605:
  5491  002B7C  FFFF               	dw	65535	; assembler added errata NOP
  5492                           
  5493                           ;main.c: 260:                 sequence[i]=input_str[i];
  5494  002B7E  0EDF               	movlw	low _input_str
  5495  002B80  2412               	addwf	change_sequence@i^0,w,c
  5496  002B82  6ED9               	movwf	fsr2l,c
  5497  002B84  0E00               	movlw	high _input_str
  5498  002B86  2013               	addwfc	(change_sequence@i+1)^0,w,c
  5499  002B88  6EDA               	movwf	fsr2h,c
  5500  002B8A  0EE9               	movlw	low _sequence
  5501  002B8C  2412               	addwf	change_sequence@i^0,w,c
  5502  002B8E  6EE1               	movwf	fsr1l,c
  5503  002B90  0E00               	movlw	high _sequence
  5504  002B92  2013               	addwfc	(change_sequence@i+1)^0,w,c
  5505  002B94  6EE2               	movwf	fsr1h,c
  5506  002B96  CFDF FFE7          	movff	indf2,indf1
  5507  002B9A                     
  5508                           ;main.c: 261:             }while(input_str[i++]!='\n');
  5509  002B9A  5012               	movf	change_sequence@i^0,w,c
  5510  002B9C  6E0F               	movwf	??_change_sequence^0,c
  5511  002B9E  5013               	movf	(change_sequence@i+1)^0,w,c
  5512  002BA0  6E10               	movwf	(??_change_sequence+1)^0,c
  5513  002BA2  4A12               	infsnz	change_sequence@i^0,f,c
  5514  002BA4  2A13               	incf	(change_sequence@i+1)^0,f,c
  5515  002BA6  0EDF               	movlw	low _input_str
  5516  002BA8  240F               	addwf	??_change_sequence^0,w,c
  5517  002BAA  6ED9               	movwf	fsr2l,c
  5518  002BAC  0E00               	movlw	high _input_str
  5519  002BAE  2010               	addwfc	(??_change_sequence+1)^0,w,c
  5520  002BB0  6EDA               	movwf	fsr2h,c
  5521  002BB2  0E0A               	movlw	10
  5522  002BB4  18DE               	xorwf	postinc2,w,c
  5523  002BB6  A4D8               	btfss	status,2,c
  5524  002BB8  EFE0  F015         	goto	u4021
  5525  002BBC  EFE3  F015         	goto	u4020
  5526  002BC0                     u4021:
  5527  002BC0  FFFF               	dw	65535	; assembler added errata NOP
  5528  002BC2  EFBE  F015         	goto	l3605
  5529  002BC6                     u4020:
  5530  002BC6  FFFF               	dw	65535	; assembler added errata NOP
  5531  002BC8                     
  5532                           ;main.c: 262:             New_char_RX=0;
  5533  002BC8  0E00               	movlw	0
  5534  002BCA  6E74               	movwf	_New_char_RX^0,c
  5535  002BCC  0012               	return		;funcret
  5536  002BCE  FFFF               	dw	65535	; errata NOP
  5537  002BD0                     __end_of_change_sequence:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _add_component *****************
  5541 ;; Defined at:
  5542 ;;		line 268 in file "main.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;		None
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  add_componnt    1   29[COMRAM] unsigned char [1]
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      void 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5556 ;;      Params:         0       0       0       0       0       0       0
  5557 ;;      Locals:         1       0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0
  5559 ;;      Totals:         1       0       0       0       0       0       0
  5560 ;;Total ram usage:        1 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; Hardware stack levels required when called: 3
  5563 ;; This function calls:
  5564 ;;		_atoi
  5565 ;;		_print_string
  5566 ;;		_serial_tx_char
  5567 ;;		_strncat
  5568 ;; This function is called by:
  5569 ;;		_start_up_menu
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text17
  5574  001BE6                     __ptext17:
  5575                           	callstack 0
  5576  001BE6                     _add_component:
  5577                           	callstack 0
  5578  001BE6  FFFF               	dw	65535	; assembler added errata NOP
  5579  001BE8                     
  5580                           ;main.c: 269:     char add_componnt[1]=" ";
  5581  001BE8  C075  F01E         	movff	add_component@F3128,add_component@add_componnt
  5582  001BEC                     
  5583                           ;main.c: 270:     print_string("\nThe Current sequence is:");
  5584  001BEC  0EA8               	movlw	low STR_6
  5585  001BEE  6E09               	movwf	print_string@strng^0,c
  5586  001BF0  0E7F               	movlw	high STR_6
  5587  001BF2  6E0A               	movwf	(print_string@strng+1)^0,c
  5588  001BF4  ECE8  F015         	call	_print_string	;wreg free
  5589                           
  5590                           ;main.c: 271:     print_string(sequence);
  5591  001BF8  0EE9               	movlw	low _sequence
  5592  001BFA  6E09               	movwf	print_string@strng^0,c
  5593  001BFC  0E00               	movlw	high _sequence
  5594  001BFE  6E0A               	movwf	(print_string@strng+1)^0,c
  5595  001C00  ECE8  F015         	call	_print_string	;wreg free
  5596                           
  5597                           ;main.c: 272:     print_string("\nEnter the component you want to add: A, B, C or D?");
  5598  001C04  0E64               	movlw	low STR_7
  5599  001C06  6E09               	movwf	print_string@strng^0,c
  5600  001C08  0E7E               	movlw	high STR_7
  5601  001C0A  6E0A               	movwf	(print_string@strng+1)^0,c
  5602  001C0C  ECE8  F015         	call	_print_string	;wreg free
  5603  001C10                     l3649:
  5604  001C10  FFFF               	dw	65535	; assembler added errata NOP
  5605                           
  5606                           ;main.c: 274:         if(New_char_RX){
  5607  001C12  5074               	movf	_New_char_RX^0,w,c
  5608  001C14  B4D8               	btfsc	status,2,c
  5609  001C16  EF0F  F00E         	goto	u4081
  5610  001C1A  EF12  F00E         	goto	u4080
  5611  001C1E                     u4081:
  5612  001C1E  FFFF               	dw	65535	; assembler added errata NOP
  5613  001C20  EF08  F00E         	goto	l3649
  5614  001C24                     u4080:
  5615  001C24  FFFF               	dw	65535	; assembler added errata NOP
  5616  001C26                     
  5617                           ;main.c: 275:             add_componnt[0]=input_str[0];
  5618  001C26  C0DF  F01E         	movff	_input_str,add_component@add_componnt	;volatile
  5619  001C2A                     
  5620                           ;main.c: 276:             if(add_componnt[0]=='D'){
  5621  001C2A  0E44               	movlw	68
  5622  001C2C  181E               	xorwf	add_component@add_componnt^0,w,c
  5623  001C2E  A4D8               	btfss	status,2,c
  5624  001C30  EF1C  F00E         	goto	u4091
  5625  001C34  EF1F  F00E         	goto	u4090
  5626  001C38                     u4091:
  5627  001C38  FFFF               	dw	65535	; assembler added errata NOP
  5628  001C3A  EFCE  F00E         	goto	l3703
  5629  001C3E                     u4090:
  5630  001C3E  FFFF               	dw	65535	; assembler added errata NOP
  5631  001C40                     
  5632                           ;main.c: 277:                 New_char_RX=0;
  5633  001C40  0E00               	movlw	0
  5634  001C42  6E74               	movwf	_New_char_RX^0,c
  5635  001C44                     
  5636                           ;main.c: 278:                 print_string("\nEnter the pick position X:");
  5637  001C44  0E55               	movlw	low STR_8
  5638  001C46  6E09               	movwf	print_string@strng^0,c
  5639  001C48  0E7F               	movlw	high STR_8
  5640  001C4A  6E0A               	movwf	(print_string@strng+1)^0,c
  5641  001C4C  ECE8  F015         	call	_print_string	;wreg free
  5642  001C50                     l3659:
  5643  001C50  FFFF               	dw	65535	; assembler added errata NOP
  5644                           
  5645                           ;main.c: 280:                     if(New_char_RX){
  5646  001C52  5074               	movf	_New_char_RX^0,w,c
  5647  001C54  B4D8               	btfsc	status,2,c
  5648  001C56  EF2F  F00E         	goto	u4101
  5649  001C5A  EF32  F00E         	goto	u4100
  5650  001C5E                     u4101:
  5651  001C5E  FFFF               	dw	65535	; assembler added errata NOP
  5652  001C60  EF28  F00E         	goto	l3659
  5653  001C64                     u4100:
  5654  001C64  FFFF               	dw	65535	; assembler added errata NOP
  5655  001C66                     
  5656                           ;main.c: 281:                         X_Pick_D=atoi(input_str);
  5657  001C66  0EDF               	movlw	low _input_str
  5658  001C68  6E0F               	movwf	atoi@s^0,c
  5659  001C6A  0E00               	movlw	high _input_str
  5660  001C6C  6E10               	movwf	(atoi@s+1)^0,c
  5661  001C6E  ECEE  F00E         	call	_atoi	;wreg free
  5662  001C72  C00F  F05B         	movff	?_atoi,_X_Pick_D
  5663  001C76  C010  F05C         	movff	?_atoi+1,_X_Pick_D+1
  5664  001C7A                     
  5665                           ;main.c: 282:                         New_char_RX=0;
  5666  001C7A  0E00               	movlw	0
  5667  001C7C  6E74               	movwf	_New_char_RX^0,c
  5668  001C7E                     
  5669                           ;main.c: 286:                 print_string("\nEnter the pick position Y:");
  5670  001C7E  0E71               	movlw	low STR_9
  5671  001C80  6E09               	movwf	print_string@strng^0,c
  5672  001C82  0E7F               	movlw	high STR_9
  5673  001C84  6E0A               	movwf	(print_string@strng+1)^0,c
  5674  001C86  ECE8  F015         	call	_print_string	;wreg free
  5675  001C8A                     l3667:
  5676  001C8A  FFFF               	dw	65535	; assembler added errata NOP
  5677                           
  5678                           ;main.c: 288:                     if(New_char_RX){
  5679  001C8C  5074               	movf	_New_char_RX^0,w,c
  5680  001C8E  B4D8               	btfsc	status,2,c
  5681  001C90  EF4C  F00E         	goto	u4111
  5682  001C94  EF4F  F00E         	goto	u4110
  5683  001C98                     u4111:
  5684  001C98  FFFF               	dw	65535	; assembler added errata NOP
  5685  001C9A  EF45  F00E         	goto	l3667
  5686  001C9E                     u4110:
  5687  001C9E  FFFF               	dw	65535	; assembler added errata NOP
  5688  001CA0                     
  5689                           ;main.c: 289:                         Y_Pick_D=(atoi(input_str));
  5690  001CA0  0EDF               	movlw	low _input_str
  5691  001CA2  6E0F               	movwf	atoi@s^0,c
  5692  001CA4  0E00               	movlw	high _input_str
  5693  001CA6  6E10               	movwf	(atoi@s+1)^0,c
  5694  001CA8  ECEE  F00E         	call	_atoi	;wreg free
  5695  001CAC  C00F  F0AC         	movff	?_atoi,_Y_Pick_D
  5696  001CB0  C010  F0AD         	movff	?_atoi+1,_Y_Pick_D+1
  5697  001CB4                     
  5698                           ;main.c: 290:                         New_char_RX=0;
  5699  001CB4  0E00               	movlw	0
  5700  001CB6  6E74               	movwf	_New_char_RX^0,c
  5701  001CB8                     
  5702                           ;main.c: 294:                 print_string("\nEnter the pick orientation:");
  5703  001CB8  0E38               	movlw	low STR_10
  5704  001CBA  6E09               	movwf	print_string@strng^0,c
  5705  001CBC  0E7F               	movlw	high STR_10
  5706  001CBE  6E0A               	movwf	(print_string@strng+1)^0,c
  5707  001CC0  ECE8  F015         	call	_print_string	;wreg free
  5708  001CC4                     l3675:
  5709  001CC4  FFFF               	dw	65535	; assembler added errata NOP
  5710                           
  5711                           ;main.c: 296:                     if(New_char_RX){
  5712  001CC6  5074               	movf	_New_char_RX^0,w,c
  5713  001CC8  B4D8               	btfsc	status,2,c
  5714  001CCA  EF69  F00E         	goto	u4121
  5715  001CCE  EF6C  F00E         	goto	u4120
  5716  001CD2                     u4121:
  5717  001CD2  FFFF               	dw	65535	; assembler added errata NOP
  5718  001CD4  EF62  F00E         	goto	l3675
  5719  001CD8                     u4120:
  5720  001CD8  FFFF               	dw	65535	; assembler added errata NOP
  5721  001CDA                     
  5722                           ;main.c: 297:                         Pick_Angle_D=(atoi(input_str));
  5723  001CDA  0EDF               	movlw	low _input_str
  5724  001CDC  6E0F               	movwf	atoi@s^0,c
  5725  001CDE  0E00               	movlw	high _input_str
  5726  001CE0  6E10               	movwf	(atoi@s+1)^0,c
  5727  001CE2  ECEE  F00E         	call	_atoi	;wreg free
  5728  001CE6  C00F  F0AA         	movff	?_atoi,_Pick_Angle_D
  5729  001CEA  C010  F0AB         	movff	?_atoi+1,_Pick_Angle_D+1
  5730  001CEE                     
  5731                           ;main.c: 298:                         New_char_RX=0;
  5732  001CEE  0E00               	movlw	0
  5733  001CF0  6E74               	movwf	_New_char_RX^0,c
  5734  001CF2                     
  5735                           ;main.c: 302:                 print_string("\nEnter the place position X:");
  5736  001CF2  0EFE               	movlw	low STR_11
  5737  001CF4  6E09               	movwf	print_string@strng^0,c
  5738  001CF6  0E7E               	movlw	high STR_11
  5739  001CF8  6E0A               	movwf	(print_string@strng+1)^0,c
  5740  001CFA  ECE8  F015         	call	_print_string	;wreg free
  5741  001CFE                     l3683:
  5742  001CFE  FFFF               	dw	65535	; assembler added errata NOP
  5743                           
  5744                           ;main.c: 304:                     if(New_char_RX){
  5745  001D00  5074               	movf	_New_char_RX^0,w,c
  5746  001D02  B4D8               	btfsc	status,2,c
  5747  001D04  EF86  F00E         	goto	u4131
  5748  001D08  EF89  F00E         	goto	u4130
  5749  001D0C                     u4131:
  5750  001D0C  FFFF               	dw	65535	; assembler added errata NOP
  5751  001D0E  EF7F  F00E         	goto	l3683
  5752  001D12                     u4130:
  5753  001D12  FFFF               	dw	65535	; assembler added errata NOP
  5754  001D14                     
  5755                           ;main.c: 305:                         X_Place_D=(atoi(input_str));
  5756  001D14  0EDF               	movlw	low _input_str
  5757  001D16  6E0F               	movwf	atoi@s^0,c
  5758  001D18  0E00               	movlw	high _input_str
  5759  001D1A  6E10               	movwf	(atoi@s+1)^0,c
  5760  001D1C  ECEE  F00E         	call	_atoi	;wreg free
  5761  001D20  C00F  F0A8         	movff	?_atoi,_X_Place_D
  5762  001D24  C010  F0A9         	movff	?_atoi+1,_X_Place_D+1
  5763  001D28                     
  5764                           ;main.c: 306:                         New_char_RX=0;
  5765  001D28  0E00               	movlw	0
  5766  001D2A  6E74               	movwf	_New_char_RX^0,c
  5767  001D2C                     
  5768                           ;main.c: 310:                 print_string("\nEnter the place position Y:");
  5769  001D2C  0E1B               	movlw	low STR_12
  5770  001D2E  6E09               	movwf	print_string@strng^0,c
  5771  001D30  0E7F               	movlw	high STR_12
  5772  001D32  6E0A               	movwf	(print_string@strng+1)^0,c
  5773  001D34  ECE8  F015         	call	_print_string	;wreg free
  5774  001D38                     l3691:
  5775  001D38  FFFF               	dw	65535	; assembler added errata NOP
  5776                           
  5777                           ;main.c: 312:                     if(New_char_RX){
  5778  001D3A  5074               	movf	_New_char_RX^0,w,c
  5779  001D3C  B4D8               	btfsc	status,2,c
  5780  001D3E  EFA3  F00E         	goto	u4141
  5781  001D42  EFA6  F00E         	goto	u4140
  5782  001D46                     u4141:
  5783  001D46  FFFF               	dw	65535	; assembler added errata NOP
  5784  001D48  EF9C  F00E         	goto	l3691
  5785  001D4C                     u4140:
  5786  001D4C  FFFF               	dw	65535	; assembler added errata NOP
  5787  001D4E                     
  5788                           ;main.c: 313:                         Y_Place_D=(atoi(input_str));
  5789  001D4E  0EDF               	movlw	low _input_str
  5790  001D50  6E0F               	movwf	atoi@s^0,c
  5791  001D52  0E00               	movlw	high _input_str
  5792  001D54  6E10               	movwf	(atoi@s+1)^0,c
  5793  001D56  ECEE  F00E         	call	_atoi	;wreg free
  5794  001D5A  C00F  F0A6         	movff	?_atoi,_Y_Place_D
  5795  001D5E  C010  F0A7         	movff	?_atoi+1,_Y_Place_D+1
  5796  001D62                     
  5797                           ;main.c: 314:                         New_char_RX=0;
  5798  001D62  0E00               	movlw	0
  5799  001D64  6E74               	movwf	_New_char_RX^0,c
  5800  001D66                     
  5801                           ;main.c: 318:                 print_string("\nEnter the place orientation:");
  5802  001D66  0EE0               	movlw	low STR_13
  5803  001D68  6E09               	movwf	print_string@strng^0,c
  5804  001D6A  0E7E               	movlw	high STR_13
  5805  001D6C  6E0A               	movwf	(print_string@strng+1)^0,c
  5806  001D6E  ECE8  F015         	call	_print_string	;wreg free
  5807  001D72                     l3699:
  5808  001D72  FFFF               	dw	65535	; assembler added errata NOP
  5809                           
  5810                           ;main.c: 320:                         if(New_char_RX){
  5811  001D74  5074               	movf	_New_char_RX^0,w,c
  5812  001D76  B4D8               	btfsc	status,2,c
  5813  001D78  EFC0  F00E         	goto	u4151
  5814  001D7C  EFC3  F00E         	goto	u4150
  5815  001D80                     u4151:
  5816  001D80  FFFF               	dw	65535	; assembler added errata NOP
  5817  001D82  EFB9  F00E         	goto	l3699
  5818  001D86                     u4150:
  5819  001D86  FFFF               	dw	65535	; assembler added errata NOP
  5820  001D88                     
  5821                           ;main.c: 321:                         Place_Angle_D=(atoi(input_str));
  5822  001D88  0EDF               	movlw	low _input_str
  5823  001D8A  6E0F               	movwf	atoi@s^0,c
  5824  001D8C  0E00               	movlw	high _input_str
  5825  001D8E  6E10               	movwf	(atoi@s+1)^0,c
  5826  001D90  ECEE  F00E         	call	_atoi	;wreg free
  5827  001D94  C00F  F0A4         	movff	?_atoi,_Place_Angle_D
  5828  001D98  C010  F0A5         	movff	?_atoi+1,_Place_Angle_D+1
  5829  001D9C                     l3703:
  5830  001D9C  FFFF               	dw	65535	; assembler added errata NOP
  5831                           
  5832                           ;main.c: 322:                         New_char_RX=0;
  5833  001D9E  0E00               	movlw	0
  5834  001DA0  6E74               	movwf	_New_char_RX^0,c
  5835  001DA2                     
  5836                           ;main.c: 334:     State='0';
  5837  001DA2  0E30               	movlw	48
  5838  001DA4  6E76               	movwf	_State^0,c
  5839  001DA6                     
  5840                           ;main.c: 335:     strncat(sequence,add_componnt,1);
  5841  001DA6  0EE9               	movlw	low _sequence
  5842  001DA8  6E0C               	movwf	strncat@d^0,c
  5843  001DAA  0E00               	movlw	high _sequence
  5844  001DAC  6E0D               	movwf	(strncat@d+1)^0,c
  5845  001DAE  0E1E               	movlw	low add_component@add_componnt
  5846  001DB0  6E0E               	movwf	strncat@s^0,c
  5847  001DB2  0E00               	movlw	high add_component@add_componnt
  5848  001DB4  6E0F               	movwf	(strncat@s+1)^0,c
  5849  001DB6  0E00               	movlw	0
  5850  001DB8  6E11               	movwf	(strncat@n+1)^0,c
  5851  001DBA  0E01               	movlw	1
  5852  001DBC  6E10               	movwf	strncat@n^0,c
  5853  001DBE  EC2F  F016         	call	_strncat	;wreg free
  5854  001DC2                     
  5855                           ;main.c: 336:     print_string("\n\nComponent Added: ");
  5856  001DC2  0ED7               	movlw	low STR_14
  5857  001DC4  6E09               	movwf	print_string@strng^0,c
  5858  001DC6  0E7F               	movlw	high STR_14
  5859  001DC8  6E0A               	movwf	(print_string@strng+1)^0,c
  5860  001DCA  ECE8  F015         	call	_print_string	;wreg free
  5861  001DCE                     
  5862                           ;main.c: 337:     serial_tx_char(add_componnt[0]);
  5863  001DCE  501E               	movf	add_component@add_componnt^0,w,c
  5864  001DD0  EC2B  F018         	call	_serial_tx_char
  5865  001DD4                     
  5866                           ;main.c: 338:     New_char_RX=0;
  5867  001DD4  0E00               	movlw	0
  5868  001DD6  6E74               	movwf	_New_char_RX^0,c
  5869  001DD8  0012               	return		;funcret
  5870  001DDA  FFFF               	dw	65535	; errata NOP
  5871  001DDC                     __end_of_add_component:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _strncat *****************
  5875 ;; Defined at:
  5876 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strncat.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  d               2   11[COMRAM] PTR unsigned char 
  5879 ;;		 -> sequence(4), 
  5880 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5881 ;;		 -> add_component@add_componnt(1), 
  5882 ;;  n               2   15[COMRAM] unsigned int 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  a               2    0        PTR unsigned char 
  5885 ;;		 -> sequence(4), 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  2   11[COMRAM] PTR unsigned char 
  5888 ;; Registers used:
  5889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5895 ;;      Params:         6       0       0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0
  5898 ;;      Totals:         6       0       0       0       0       0       0
  5899 ;;Total ram usage:        6 bytes
  5900 ;; Hardware stack levels used: 1
  5901 ;; Hardware stack levels required when called: 2
  5902 ;; This function calls:
  5903 ;;		_strlen
  5904 ;; This function is called by:
  5905 ;;		_add_component
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text18
  5910  002C5E                     __ptext18:
  5911                           	callstack 0
  5912  002C5E                     _strncat:
  5913                           	callstack 0
  5914  002C5E  FFFF               	dw	65535	; assembler added errata NOP
  5915  002C60  C00C  F008         	movff	strncat@d,strlen@s
  5916  002C64  C00D  F009         	movff	strncat@d+1,strlen@s+1
  5917  002C68  EC65  F017         	call	_strlen	;wreg free
  5918  002C6C  5008               	movf	?_strlen^0,w,c
  5919  002C6E  260C               	addwf	strncat@d^0,f,c
  5920  002C70  5009               	movf	(?_strlen+1)^0,w,c
  5921  002C72  220D               	addwfc	(strncat@d+1)^0,f,c
  5922  002C74  EF4E  F016         	goto	l2879
  5923  002C78                     l2871:
  5924  002C78  FFFF               	dw	65535	; assembler added errata NOP
  5925  002C7A  0610               	decf	strncat@n^0,f,c
  5926  002C7C  A0D8               	btfss	status,0,c
  5927  002C7E  0611               	decf	(strncat@n+1)^0,f,c
  5928  002C80  C00E  FFD9         	movff	strncat@s,fsr2l
  5929  002C84  C00F  FFDA         	movff	strncat@s+1,fsr2h
  5930  002C88  C00C  FFE1         	movff	strncat@d,fsr1l
  5931  002C8C  C00D  FFE2         	movff	strncat@d+1,fsr1h
  5932  002C90  CFDF FFE7          	movff	indf2,indf1
  5933  002C94  4A0E               	infsnz	strncat@s^0,f,c
  5934  002C96  2A0F               	incf	(strncat@s+1)^0,f,c
  5935  002C98  4A0C               	infsnz	strncat@d^0,f,c
  5936  002C9A  2A0D               	incf	(strncat@d+1)^0,f,c
  5937  002C9C                     l2879:
  5938  002C9C  FFFF               	dw	65535	; assembler added errata NOP
  5939  002C9E  5010               	movf	strncat@n^0,w,c
  5940  002CA0  1011               	iorwf	(strncat@n+1)^0,w,c
  5941  002CA2  B4D8               	btfsc	status,2,c
  5942  002CA4  EF56  F016         	goto	u2771
  5943  002CA8  EF59  F016         	goto	u2770
  5944  002CAC                     u2771:
  5945  002CAC  FFFF               	dw	65535	; assembler added errata NOP
  5946  002CAE  EF67  F016         	goto	l2883
  5947  002CB2                     u2770:
  5948  002CB2  FFFF               	dw	65535	; assembler added errata NOP
  5949  002CB4  C00E  FFD9         	movff	strncat@s,fsr2l
  5950  002CB8  C00F  FFDA         	movff	strncat@s+1,fsr2h
  5951  002CBC  50DF               	movf	indf2,w,c
  5952  002CBE  A4D8               	btfss	status,2,c
  5953  002CC0  EF64  F016         	goto	u2781
  5954  002CC4  EF67  F016         	goto	u2780
  5955  002CC8                     u2781:
  5956  002CC8  FFFF               	dw	65535	; assembler added errata NOP
  5957  002CCA  EF3C  F016         	goto	l2871
  5958  002CCE                     u2780:
  5959  002CCE                     l2883:
  5960  002CCE  FFFF               	dw	65535	; assembler added errata NOP
  5961  002CD0  C00C  FFD9         	movff	strncat@d,fsr2l
  5962  002CD4  C00D  FFDA         	movff	strncat@d+1,fsr2h
  5963  002CD8  0E00               	movlw	0
  5964  002CDA  6EDF               	movwf	indf2,c
  5965  002CDC  4A0C               	infsnz	strncat@d^0,f,c
  5966  002CDE  2A0D               	incf	(strncat@d+1)^0,f,c
  5967  002CE0  0012               	return		;funcret
  5968  002CE2  FFFF               	dw	65535	; errata NOP
  5969  002CE4                     __end_of_strncat:
  5970                           	callstack 0
  5971                           
  5972 ;; *************** function _strlen *****************
  5973 ;; Defined at:
  5974 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5977 ;;		 -> sequence(4), 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  a               2    9[COMRAM] PTR const unsigned char 
  5980 ;;		 -> sequence(4), 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  2    7[COMRAM] unsigned int 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5990 ;;      Params:         2       0       0       0       0       0       0
  5991 ;;      Locals:         2       0       0       0       0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0
  5993 ;;      Totals:         4       0       0       0       0       0       0
  5994 ;;Total ram usage:        4 bytes
  5995 ;; Hardware stack levels used: 1
  5996 ;; Hardware stack levels required when called: 1
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_remove_component
  6001 ;;		_strncat
  6002 ;;		_strrchr
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text19
  6007  002ECA                     __ptext19:
  6008                           	callstack 0
  6009  002ECA                     _strlen:
  6010                           	callstack 0
  6011  002ECA  FFFF               	dw	65535	; assembler added errata NOP
  6012  002ECC  C008  F00A         	movff	strlen@s,strlen@a
  6013  002ED0  C009  F00B         	movff	strlen@s+1,strlen@a+1
  6014  002ED4  EF6F  F017         	goto	l2555
  6015  002ED8                     l2553:
  6016  002ED8  FFFF               	dw	65535	; assembler added errata NOP
  6017  002EDA  4A08               	infsnz	strlen@s^0,f,c
  6018  002EDC  2A09               	incf	(strlen@s+1)^0,f,c
  6019  002EDE                     l2555:
  6020  002EDE  FFFF               	dw	65535	; assembler added errata NOP
  6021  002EE0  C008  FFD9         	movff	strlen@s,fsr2l
  6022  002EE4  C009  FFDA         	movff	strlen@s+1,fsr2h
  6023  002EE8  50DF               	movf	indf2,w,c
  6024  002EEA  A4D8               	btfss	status,2,c
  6025  002EEC  EF7A  F017         	goto	u2191
  6026  002EF0  EF7D  F017         	goto	u2190
  6027  002EF4                     u2191:
  6028  002EF4  FFFF               	dw	65535	; assembler added errata NOP
  6029  002EF6  EF6C  F017         	goto	l2553
  6030  002EFA                     u2190:
  6031  002EFA  FFFF               	dw	65535	; assembler added errata NOP
  6032  002EFC  500A               	movf	strlen@a^0,w,c
  6033  002EFE  5C08               	subwf	strlen@s^0,w,c
  6034  002F00  6E08               	movwf	?_strlen^0,c
  6035  002F02  500B               	movf	(strlen@a+1)^0,w,c
  6036  002F04  5809               	subwfb	(strlen@s+1)^0,w,c
  6037  002F06  6E09               	movwf	(?_strlen+1)^0,c
  6038  002F08  0012               	return		;funcret
  6039  002F0A  FFFF               	dw	65535	; errata NOP
  6040  002F0C                     __end_of_strlen:
  6041                           	callstack 0
  6042                           
  6043 ;; *************** function _print_string *****************
  6044 ;; Defined at:
  6045 ;;		line 375 in file "main.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  strng           2    8[COMRAM] PTR unsigned char 
  6048 ;;		 -> STR_17(70), STR_16(21), STR_15(63), STR_14(20), 
  6049 ;;		 -> STR_13(30), STR_12(29), STR_11(29), STR_10(29), 
  6050 ;;		 -> STR_9(28), STR_8(28), STR_7(52), STR_6(26), 
  6051 ;;		 -> STR_5(40), STR_4(27), STR_3(32), sequence(4), 
  6052 ;;		 -> STR_2(20), STR_1(82), 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  i               2   12[COMRAM] int 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6064 ;;      Params:         2       0       0       0       0       0       0
  6065 ;;      Locals:         2       0       0       0       0       0       0
  6066 ;;      Temps:          2       0       0       0       0       0       0
  6067 ;;      Totals:         6       0       0       0       0       0       0
  6068 ;;Total ram usage:        6 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 2
  6071 ;; This function calls:
  6072 ;;		_serial_tx_char
  6073 ;; This function is called by:
  6074 ;;		_start_up_menu
  6075 ;;		_change_sequence
  6076 ;;		_add_component
  6077 ;;		_remove_component
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text20
  6082  002BD0                     __ptext20:
  6083                           	callstack 0
  6084  002BD0                     _print_string:
  6085                           	callstack 0
  6086  002BD0  FFFF               	dw	65535	; assembler added errata NOP
  6087  002BD2                     
  6088                           ;main.c: 375: void print_string(char strng[]);main.c: 376: {;main.c: 377:     for(int i 
      +                          =0; strng[i]!=((void*)0); i++){
  6089  002BD2  0E00               	movlw	0
  6090  002BD4  6E0E               	movwf	(print_string@i+1)^0,c
  6091  002BD6  0E00               	movlw	0
  6092  002BD8  6E0D               	movwf	print_string@i^0,c
  6093  002BDA  EF0B  F016         	goto	l2823
  6094  002BDE                     l2819:
  6095  002BDE  FFFF               	dw	65535	; assembler added errata NOP
  6096                           
  6097                           ;main.c: 378:         serial_tx_char(strng[i]);
  6098  002BE0  500D               	movf	print_string@i^0,w,c
  6099  002BE2  2409               	addwf	print_string@strng^0,w,c
  6100  002BE4  6E0B               	movwf	??_print_string^0,c
  6101  002BE6  500E               	movf	(print_string@i+1)^0,w,c
  6102  002BE8  200A               	addwfc	(print_string@strng+1)^0,w,c
  6103  002BEA  6E0C               	movwf	(??_print_string+1)^0,c
  6104  002BEC  C00B  FFF6         	movff	??_print_string,tblptrl
  6105  002BF0  C00C  FFF7         	movff	??_print_string+1,tblptrh
  6106  002BF4  6AF8               	clrf	tblptru,c
  6107  002BF6  0E05               	movlw	(high __ramtop+-1)
  6108  002BF8  64F7               	cpfsgt	tblptrh,c
  6109  002BFA  D004               	bra	u2677
  6110  002BFC  0008               	tblrd		*
  6111  002BFE  FFFF               	dw	65535	; errata NOP
  6112  002C00  50F5               	movf	tablat,w,c
  6113  002C02  D005               	bra	u2670
  6114  002C04                     u2677:
  6115  002C04  CFF6 FFE1          	movff	tblptrl,fsr1l
  6116  002C08  CFF7 FFE2          	movff	tblptrh,fsr1h
  6117  002C0C  50E7               	movf	indf1,w,c
  6118  002C0E                     u2670:
  6119  002C0E  EC2B  F018         	call	_serial_tx_char
  6120  002C12                     
  6121                           ;main.c: 379:     }
  6122  002C12  4A0D               	infsnz	print_string@i^0,f,c
  6123  002C14  2A0E               	incf	(print_string@i+1)^0,f,c
  6124  002C16                     l2823:
  6125  002C16  FFFF               	dw	65535	; assembler added errata NOP
  6126  002C18  500D               	movf	print_string@i^0,w,c
  6127  002C1A  2409               	addwf	print_string@strng^0,w,c
  6128  002C1C  6E0B               	movwf	??_print_string^0,c
  6129  002C1E  500E               	movf	(print_string@i+1)^0,w,c
  6130  002C20  200A               	addwfc	(print_string@strng+1)^0,w,c
  6131  002C22  6E0C               	movwf	(??_print_string+1)^0,c
  6132  002C24  C00B  FFF6         	movff	??_print_string,tblptrl
  6133  002C28  C00C  FFF7         	movff	??_print_string+1,tblptrh
  6134  002C2C  6AF8               	clrf	tblptru,c
  6135  002C2E  0E05               	movlw	(high __ramtop+-1)
  6136  002C30  64F7               	cpfsgt	tblptrh,c
  6137  002C32  D004               	bra	u2687
  6138  002C34  0008               	tblrd		*
  6139  002C36  FFFF               	dw	65535	; errata NOP
  6140  002C38  50F5               	movf	tablat,w,c
  6141  002C3A  D005               	bra	u2680
  6142  002C3C                     u2687:
  6143  002C3C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6144  002C40  CFF7 FFE2          	movff	tblptrh,fsr1h
  6145  002C44  50E7               	movf	indf1,w,c
  6146  002C46                     u2680:
  6147  002C46  0900               	iorlw	0
  6148  002C48  A4D8               	btfss	status,2,c
  6149  002C4A  EF29  F016         	goto	u2691
  6150  002C4E  EF2C  F016         	goto	u2690
  6151  002C52                     u2691:
  6152  002C52  FFFF               	dw	65535	; assembler added errata NOP
  6153  002C54  EFEF  F015         	goto	l2819
  6154  002C58                     u2690:
  6155  002C58  FFFF               	dw	65535	; assembler added errata NOP
  6156  002C5A  0012               	return		;funcret
  6157  002C5C  FFFF               	dw	65535	; errata NOP
  6158  002C5E                     __end_of_print_string:
  6159                           	callstack 0
  6160                           
  6161 ;; *************** function _serial_tx_char *****************
  6162 ;; Defined at:
  6163 ;;		line 44 in file "serial_rs232.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  val             1    wreg     unsigned char 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  val             1    7[COMRAM] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6177 ;;      Params:         0       0       0       0       0       0       0
  6178 ;;      Locals:         1       0       0       0       0       0       0
  6179 ;;      Temps:          0       0       0       0       0       0       0
  6180 ;;      Totals:         1       0       0       0       0       0       0
  6181 ;;Total ram usage:        1 bytes
  6182 ;; Hardware stack levels used: 1
  6183 ;; Hardware stack levels required when called: 1
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_add_component
  6188 ;;		_remove_component
  6189 ;;		_print_string
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text21
  6194  003056                     __ptext21:
  6195                           	callstack 0
  6196  003056                     _serial_tx_char:
  6197                           	callstack 0
  6198  003056  FFFF               	dw	65535	; assembler added errata NOP
  6199                           
  6200                           ;incstack = 0
  6201                           ;serial_tx_char@val stored from wreg
  6202  003058  6E08               	movwf	serial_tx_char@val^0,c
  6203  00305A                     
  6204                           ;serial_rs232.c: 44: void serial_tx_char(unsigned char val);serial_rs232.c: 45: {;serial
      +                          _rs232.c: 46:   TXREG=val;
  6205  00305A  C008  FFAD         	movff	serial_tx_char@val,4013	;volatile
  6206  00305E                     l48:
  6207  00305E  FFFF               	dw	65535	; assembler added errata NOP
  6208  003060  A2AC               	btfss	172,1,c	;volatile
  6209  003062  EF35  F018         	goto	u2181
  6210  003066  EF38  F018         	goto	u2180
  6211  00306A                     u2181:
  6212  00306A  FFFF               	dw	65535	; assembler added errata NOP
  6213  00306C  EF2F  F018         	goto	l48
  6214  003070                     u2180:
  6215  003070  FFFF               	dw	65535	; assembler added errata NOP
  6216  003072  0012               	return		;funcret
  6217  003074  FFFF               	dw	65535	; errata NOP
  6218  003076                     __end_of_serial_tx_char:
  6219                           	callstack 0
  6220                           
  6221 ;; *************** function _atoi *****************
  6222 ;; Defined at:
  6223 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6226 ;;		 -> input_str(10), 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;  n               2   27[COMRAM] int 
  6229 ;;  neg             2   20[COMRAM] int 
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  2   14[COMRAM] int 
  6232 ;; Registers used:
  6233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6239 ;;      Params:         2       0       0       0       0       0       0
  6240 ;;      Locals:         9       0       0       0       0       0       0
  6241 ;;      Temps:          4       0       0       0       0       0       0
  6242 ;;      Totals:        15       0       0       0       0       0       0
  6243 ;;Total ram usage:       15 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; Hardware stack levels required when called: 2
  6246 ;; This function calls:
  6247 ;;		___wmul
  6248 ;;		_isdigit
  6249 ;;		_isspace
  6250 ;; This function is called by:
  6251 ;;		_add_component
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text22
  6256  001DDC                     __ptext22:
  6257                           	callstack 0
  6258  001DDC                     _atoi:
  6259                           	callstack 0
  6260  001DDC  FFFF               	dw	65535	; assembler added errata NOP
  6261  001DDE  0E00               	movlw	0
  6262  001DE0  6E1D               	movwf	(atoi@n+1)^0,c
  6263  001DE2  0E00               	movlw	0
  6264  001DE4  6E1C               	movwf	atoi@n^0,c
  6265  001DE6  0E00               	movlw	0
  6266  001DE8  6E16               	movwf	(atoi@neg+1)^0,c
  6267  001DEA  0E00               	movlw	0
  6268  001DEC  6E15               	movwf	atoi@neg^0,c
  6269  001DEE  EFFC  F00E         	goto	l2829
  6270  001DF2                     l2827:
  6271  001DF2  FFFF               	dw	65535	; assembler added errata NOP
  6272  001DF4  4A0F               	infsnz	atoi@s^0,f,c
  6273  001DF6  2A10               	incf	(atoi@s+1)^0,f,c
  6274  001DF8                     l2829:
  6275  001DF8  FFFF               	dw	65535	; assembler added errata NOP
  6276  001DFA  0E01               	movlw	1
  6277  001DFC  6E1B               	movwf	_atoi$1068^0,c
  6278  001DFE  C00F  FFD9         	movff	atoi@s,fsr2l
  6279  001E02  C010  FFDA         	movff	atoi@s+1,fsr2h
  6280  001E06  0E20               	movlw	32
  6281  001E08  18DE               	xorwf	postinc2,w,c
  6282  001E0A  B4D8               	btfsc	status,2,c
  6283  001E0C  EF0A  F00F         	goto	u2701
  6284  001E10  EF0D  F00F         	goto	u2700
  6285  001E14                     u2701:
  6286  001E14  FFFF               	dw	65535	; assembler added errata NOP
  6287  001E16  EF2C  F00F         	goto	l2837
  6288  001E1A                     u2700:
  6289  001E1A  FFFF               	dw	65535	; assembler added errata NOP
  6290  001E1C  0EF7               	movlw	247
  6291  001E1E  6E11               	movwf	??_atoi^0,c
  6292  001E20  0EFF               	movlw	255
  6293  001E22  6E12               	movwf	(??_atoi+1)^0,c
  6294  001E24  C00F  FFD9         	movff	atoi@s,fsr2l
  6295  001E28  C010  FFDA         	movff	atoi@s+1,fsr2h
  6296  001E2C  50DF               	movf	indf2,w,c
  6297  001E2E  6E13               	movwf	(??_atoi+2)^0,c
  6298  001E30  6A14               	clrf	(??_atoi+3)^0,c
  6299  001E32  5011               	movf	??_atoi^0,w,c
  6300  001E34  2613               	addwf	(??_atoi+2)^0,f,c
  6301  001E36  5012               	movf	(??_atoi+1)^0,w,c
  6302  001E38  2214               	addwfc	(??_atoi+3)^0,f,c
  6303  001E3A  5014               	movf	(??_atoi+3)^0,w,c
  6304  001E3C  E10A               	bnz	u2710
  6305  001E3E  0E05               	movlw	5
  6306  001E40  5C13               	subwf	(??_atoi+2)^0,w,c
  6307  001E42  A0D8               	btfss	status,0,c
  6308  001E44  EF26  F00F         	goto	u2711
  6309  001E48  EF29  F00F         	goto	u2710
  6310  001E4C                     u2711:
  6311  001E4C  FFFF               	dw	65535	; assembler added errata NOP
  6312  001E4E  EF2C  F00F         	goto	l2837
  6313  001E52                     u2710:
  6314  001E52  FFFF               	dw	65535	; assembler added errata NOP
  6315  001E54  0E00               	movlw	0
  6316  001E56  6E1B               	movwf	_atoi$1068^0,c
  6317  001E58                     l2837:
  6318  001E58  FFFF               	dw	65535	; assembler added errata NOP
  6319  001E5A  C01B  F017         	movff	_atoi$1068,_atoi$1067
  6320  001E5E  6A18               	clrf	(_atoi$1067+1)^0,c
  6321  001E60  5017               	movf	_atoi$1067^0,w,c
  6322  001E62  1018               	iorwf	(_atoi$1067+1)^0,w,c
  6323  001E64  A4D8               	btfss	status,2,c
  6324  001E66  EF37  F00F         	goto	u2721
  6325  001E6A  EF3A  F00F         	goto	u2720
  6326  001E6E                     u2721:
  6327  001E6E  FFFF               	dw	65535	; assembler added errata NOP
  6328  001E70  EFF9  F00E         	goto	l2827
  6329  001E74                     u2720:
  6330  001E74  FFFF               	dw	65535	; assembler added errata NOP
  6331  001E76  EF47  F00F         	goto	l2847
  6332  001E7A                     l2843:
  6333  001E7A  FFFF               	dw	65535	; assembler added errata NOP
  6334  001E7C  0E00               	movlw	0
  6335  001E7E  6E16               	movwf	(atoi@neg+1)^0,c
  6336  001E80  0E01               	movlw	1
  6337  001E82  6E15               	movwf	atoi@neg^0,c
  6338  001E84                     l2845:
  6339  001E84  FFFF               	dw	65535	; assembler added errata NOP
  6340  001E86  4A0F               	infsnz	atoi@s^0,f,c
  6341  001E88  2A10               	incf	(atoi@s+1)^0,f,c
  6342  001E8A  EF7F  F00F         	goto	l2853
  6343  001E8E                     l2847:
  6344  001E8E  FFFF               	dw	65535	; assembler added errata NOP
  6345  001E90  C00F  FFD9         	movff	atoi@s,fsr2l
  6346  001E94  C010  FFDA         	movff	atoi@s+1,fsr2h
  6347  001E98  50DF               	movf	indf2,w,c
  6348  001E9A  6E11               	movwf	??_atoi^0,c
  6349  001E9C  6A12               	clrf	(??_atoi+1)^0,c
  6350                           
  6351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6352                           ; Switch size 1, requested type "simple"
  6353                           ; Number of cases is 1, Range of values is 0 to 0
  6354                           ; switch strategies available:
  6355                           ; Name         Instructions Cycles
  6356                           ; simple_byte            4     3 (average)
  6357                           ;	Chosen strategy is simple_byte
  6358  001E9E  5012               	movf	(??_atoi+1)^0,w,c
  6359  001EA0  0A00               	xorlw	0	; case 0
  6360  001EA2  B4D8               	btfsc	status,2,c
  6361  001EA4  EF56  F00F         	goto	l4677
  6362  001EA8  EF7F  F00F         	goto	l2853
  6363  001EAC                     l4677:
  6364  001EAC  FFFF               	dw	65535	; assembler added errata NOP
  6365                           
  6366                           ; Switch size 1, requested type "simple"
  6367                           ; Number of cases is 2, Range of values is 43 to 45
  6368                           ; switch strategies available:
  6369                           ; Name         Instructions Cycles
  6370                           ; simple_byte            7     4 (average)
  6371                           ;	Chosen strategy is simple_byte
  6372  001EAE  5011               	movf	??_atoi^0,w,c
  6373  001EB0  0A2B               	xorlw	43	; case 43
  6374  001EB2  B4D8               	btfsc	status,2,c
  6375  001EB4  EF42  F00F         	goto	l2845
  6376  001EB8  0A06               	xorlw	6	; case 45
  6377  001EBA  B4D8               	btfsc	status,2,c
  6378  001EBC  EF3D  F00F         	goto	l2843
  6379  001EC0  EF7F  F00F         	goto	l2853
  6380  001EC4                     l2849:
  6381  001EC4  FFFF               	dw	65535	; assembler added errata NOP
  6382  001EC6  C01C  F008         	movff	atoi@n,___wmul@multiplier
  6383  001ECA  C01D  F009         	movff	atoi@n+1,___wmul@multiplier+1
  6384  001ECE  0E00               	movlw	0
  6385  001ED0  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  6386  001ED2  0E0A               	movlw	10
  6387  001ED4  6E0A               	movwf	___wmul@multiplicand^0,c
  6388  001ED6  EC05  F018         	call	___wmul	;wreg free
  6389  001EDA  C00F  FFD9         	movff	atoi@s,fsr2l
  6390  001EDE  C010  FFDA         	movff	atoi@s+1,fsr2h
  6391  001EE2  50DF               	movf	indf2,w,c
  6392  001EE4  6E11               	movwf	??_atoi^0,c
  6393  001EE6  5011               	movf	??_atoi^0,w,c
  6394  001EE8  5E08               	subwf	?___wmul^0,f,c
  6395  001EEA  0E00               	movlw	0
  6396  001EEC  5A09               	subwfb	(?___wmul+1)^0,f,c
  6397  001EEE  0E30               	movlw	48
  6398  001EF0  2408               	addwf	?___wmul^0,w,c
  6399  001EF2  6E1C               	movwf	atoi@n^0,c
  6400  001EF4  0E00               	movlw	0
  6401  001EF6  2009               	addwfc	(?___wmul+1)^0,w,c
  6402  001EF8  6E1D               	movwf	(atoi@n+1)^0,c
  6403  001EFA  EF42  F00F         	goto	l2845
  6404  001EFE                     l2853:
  6405  001EFE  FFFF               	dw	65535	; assembler added errata NOP
  6406  001F00  0ED0               	movlw	208
  6407  001F02  6E11               	movwf	??_atoi^0,c
  6408  001F04  0EFF               	movlw	255
  6409  001F06  6E12               	movwf	(??_atoi+1)^0,c
  6410  001F08  C00F  FFD9         	movff	atoi@s,fsr2l
  6411  001F0C  C010  FFDA         	movff	atoi@s+1,fsr2h
  6412  001F10  50DF               	movf	indf2,w,c
  6413  001F12  6E13               	movwf	(??_atoi+2)^0,c
  6414  001F14  6A14               	clrf	(??_atoi+3)^0,c
  6415  001F16  5011               	movf	??_atoi^0,w,c
  6416  001F18  2613               	addwf	(??_atoi+2)^0,f,c
  6417  001F1A  5012               	movf	(??_atoi+1)^0,w,c
  6418  001F1C  2214               	addwfc	(??_atoi+3)^0,f,c
  6419  001F1E  5014               	movf	(??_atoi+3)^0,w,c
  6420  001F20  E10B               	bnz	u2730
  6421  001F22  0E0A               	movlw	10
  6422  001F24  5C13               	subwf	(??_atoi+2)^0,w,c
  6423  001F26  A0D8               	btfss	status,0,c
  6424  001F28  EF98  F00F         	goto	u2731
  6425  001F2C  EF9C  F00F         	goto	u2730
  6426  001F30                     u2731:
  6427  001F30  FFFF               	dw	65535	; assembler added errata NOP
  6428  001F32  0E01               	movlw	1
  6429  001F34  EF9E  F00F         	goto	u2740
  6430  001F38                     u2730:
  6431  001F38  FFFF               	dw	65535	; assembler added errata NOP
  6432  001F3A  0E00               	movlw	0
  6433  001F3C                     u2740:
  6434  001F3C  FFFF               	dw	65535	; assembler added errata NOP
  6435  001F3E  6E19               	movwf	_atoi$1069^0,c
  6436  001F40  6A1A               	clrf	(_atoi$1069+1)^0,c
  6437  001F42  5019               	movf	_atoi$1069^0,w,c
  6438  001F44  101A               	iorwf	(_atoi$1069+1)^0,w,c
  6439  001F46  A4D8               	btfss	status,2,c
  6440  001F48  EFA8  F00F         	goto	u2751
  6441  001F4C  EFAB  F00F         	goto	u2750
  6442  001F50                     u2751:
  6443  001F50  FFFF               	dw	65535	; assembler added errata NOP
  6444  001F52  EF62  F00F         	goto	l2849
  6445  001F56                     u2750:
  6446  001F56  FFFF               	dw	65535	; assembler added errata NOP
  6447  001F58  5015               	movf	atoi@neg^0,w,c
  6448  001F5A  1016               	iorwf	(atoi@neg+1)^0,w,c
  6449  001F5C  A4D8               	btfss	status,2,c
  6450  001F5E  EFB3  F00F         	goto	u2761
  6451  001F62  EFB6  F00F         	goto	u2760
  6452  001F66                     u2761:
  6453  001F66  FFFF               	dw	65535	; assembler added errata NOP
  6454  001F68  EFC5  F00F         	goto	l1107
  6455  001F6C                     u2760:
  6456  001F6C  FFFF               	dw	65535	; assembler added errata NOP
  6457  001F6E  C01C  F011         	movff	atoi@n,??_atoi
  6458  001F72  C01D  F012         	movff	atoi@n+1,??_atoi+1
  6459  001F76  1E11               	comf	??_atoi^0,f,c
  6460  001F78  1E12               	comf	(??_atoi+1)^0,f,c
  6461  001F7A  4A11               	infsnz	??_atoi^0,f,c
  6462  001F7C  2A12               	incf	(??_atoi+1)^0,f,c
  6463  001F7E  C011  F00F         	movff	??_atoi,?_atoi
  6464  001F82  C012  F010         	movff	??_atoi+1,?_atoi+1
  6465  001F86  EFCA  F00F         	goto	l1110
  6466  001F8A                     l1107:
  6467  001F8A  FFFF               	dw	65535	; assembler added errata NOP
  6468  001F8C  C01C  F00F         	movff	atoi@n,?_atoi
  6469  001F90  C01D  F010         	movff	atoi@n+1,?_atoi+1
  6470  001F94                     l1110:
  6471  001F94  FFFF               	dw	65535	; assembler added errata NOP
  6472  001F96  0012               	return		;funcret
  6473  001F98  FFFF               	dw	65535	; errata NOP
  6474  001F9A                     __end_of_atoi:
  6475                           	callstack 0
  6476                           
  6477 ;; *************** function _isspace *****************
  6478 ;; Defined at:
  6479 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  c               2    7[COMRAM] int 
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  2    7[COMRAM] int 
  6486 ;; Registers used:
  6487 ;;		wreg, status,2, status,0
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6493 ;;      Params:         2       0       0       0       0       0       0
  6494 ;;      Locals:         1       0       0       0       0       0       0
  6495 ;;      Temps:          4       0       0       0       0       0       0
  6496 ;;      Totals:         7       0       0       0       0       0       0
  6497 ;;Total ram usage:        7 bytes
  6498 ;; Hardware stack levels used: 1
  6499 ;; Hardware stack levels required when called: 1
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_atoi
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           	psect	text23
  6508  002D66                     __ptext23:
  6509                           	callstack 0
  6510  002D66                     _isspace:
  6511                           	callstack 26
  6512  002D66  FFFF               	dw	65535	; assembler added errata NOP
  6513  002D68  0E01               	movlw	1
  6514  002D6A  6E0E               	movwf	_isspace$1085^0,c
  6515  002D6C  0E20               	movlw	32
  6516  002D6E  1808               	xorwf	isspace@c^0,w,c
  6517  002D70  1009               	iorwf	(isspace@c+1)^0,w,c
  6518  002D72  B4D8               	btfsc	status,2,c
  6519  002D74  EFBE  F016         	goto	u2611
  6520  002D78  EFC1  F016         	goto	u2610
  6521  002D7C                     u2611:
  6522  002D7C  FFFF               	dw	65535	; assembler added errata NOP
  6523  002D7E  EFDD  F016         	goto	l2793
  6524  002D82                     u2610:
  6525  002D82  FFFF               	dw	65535	; assembler added errata NOP
  6526  002D84  0EF7               	movlw	247
  6527  002D86  6E0A               	movwf	??_isspace^0,c
  6528  002D88  0EFF               	movlw	255
  6529  002D8A  6E0B               	movwf	(??_isspace+1)^0,c
  6530  002D8C  C008  F00C         	movff	isspace@c,??_isspace+2
  6531  002D90  C009  F00D         	movff	isspace@c+1,??_isspace+3
  6532  002D94  500A               	movf	??_isspace^0,w,c
  6533  002D96  260C               	addwf	(??_isspace+2)^0,f,c
  6534  002D98  500B               	movf	(??_isspace+1)^0,w,c
  6535  002D9A  220D               	addwfc	(??_isspace+3)^0,f,c
  6536  002D9C  500D               	movf	(??_isspace+3)^0,w,c
  6537  002D9E  E10A               	bnz	u2620
  6538  002DA0  0E05               	movlw	5
  6539  002DA2  5C0C               	subwf	(??_isspace+2)^0,w,c
  6540  002DA4  A0D8               	btfss	status,0,c
  6541  002DA6  EFD7  F016         	goto	u2621
  6542  002DAA  EFDA  F016         	goto	u2620
  6543  002DAE                     u2621:
  6544  002DAE  FFFF               	dw	65535	; assembler added errata NOP
  6545  002DB0  EFDD  F016         	goto	l2793
  6546  002DB4                     u2620:
  6547  002DB4  FFFF               	dw	65535	; assembler added errata NOP
  6548  002DB6  0E00               	movlw	0
  6549  002DB8  6E0E               	movwf	_isspace$1085^0,c
  6550  002DBA                     l2793:
  6551  002DBA  FFFF               	dw	65535	; assembler added errata NOP
  6552  002DBC  C00E  F008         	movff	_isspace$1085,?_isspace
  6553  002DC0  6A09               	clrf	(?_isspace+1)^0,c
  6554  002DC2  0012               	return		;funcret
  6555  002DC4  FFFF               	dw	65535	; errata NOP
  6556  002DC6                     __end_of_isspace:
  6557                           	callstack 0
  6558                           
  6559 ;; *************** function _isdigit *****************
  6560 ;; Defined at:
  6561 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  c               2    7[COMRAM] int 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  2    7[COMRAM] int 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6575 ;;      Params:         2       0       0       0       0       0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0
  6577 ;;      Temps:          4       0       0       0       0       0       0
  6578 ;;      Totals:         6       0       0       0       0       0       0
  6579 ;;Total ram usage:        6 bytes
  6580 ;; Hardware stack levels used: 1
  6581 ;; Hardware stack levels required when called: 1
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_atoi
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text24
  6590  002F0C                     __ptext24:
  6591                           	callstack 0
  6592  002F0C                     _isdigit:
  6593                           	callstack 26
  6594  002F0C  FFFF               	dw	65535	; assembler added errata NOP
  6595  002F0E  0ED0               	movlw	208
  6596  002F10  6E0A               	movwf	??_isdigit^0,c
  6597  002F12  0EFF               	movlw	255
  6598  002F14  6E0B               	movwf	(??_isdigit+1)^0,c
  6599  002F16  C008  F00C         	movff	isdigit@c,??_isdigit+2
  6600  002F1A  C009  F00D         	movff	isdigit@c+1,??_isdigit+3
  6601  002F1E  500A               	movf	??_isdigit^0,w,c
  6602  002F20  260C               	addwf	(??_isdigit+2)^0,f,c
  6603  002F22  500B               	movf	(??_isdigit+1)^0,w,c
  6604  002F24  220D               	addwfc	(??_isdigit+3)^0,f,c
  6605  002F26  500D               	movf	(??_isdigit+3)^0,w,c
  6606  002F28  E10B               	bnz	u2630
  6607  002F2A  0E0A               	movlw	10
  6608  002F2C  5C0C               	subwf	(??_isdigit+2)^0,w,c
  6609  002F2E  A0D8               	btfss	status,0,c
  6610  002F30  EF9C  F017         	goto	u2631
  6611  002F34  EFA0  F017         	goto	u2630
  6612  002F38                     u2631:
  6613  002F38  FFFF               	dw	65535	; assembler added errata NOP
  6614  002F3A  0E01               	movlw	1
  6615  002F3C  EFA2  F017         	goto	u2640
  6616  002F40                     u2630:
  6617  002F40  FFFF               	dw	65535	; assembler added errata NOP
  6618  002F42  0E00               	movlw	0
  6619  002F44                     u2640:
  6620  002F44  FFFF               	dw	65535	; assembler added errata NOP
  6621  002F46  6E08               	movwf	?_isdigit^0,c
  6622  002F48  6A09               	clrf	(?_isdigit+1)^0,c
  6623  002F4A  0012               	return		;funcret
  6624  002F4C  FFFF               	dw	65535	; errata NOP
  6625  002F4E                     __end_of_isdigit:
  6626                           	callstack 0
  6627                           
  6628 ;; *************** function ___wmul *****************
  6629 ;; Defined at:
  6630 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  multiplier      2    7[COMRAM] unsigned int 
  6633 ;;  multiplicand    2    9[COMRAM] unsigned int 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  product         2   11[COMRAM] unsigned int 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  2    7[COMRAM] unsigned int 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0, prodl, prodh
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6645 ;;      Params:         4       0       0       0       0       0       0
  6646 ;;      Locals:         2       0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0
  6648 ;;      Totals:         6       0       0       0       0       0       0
  6649 ;;Total ram usage:        6 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 1
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_atoi
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text25
  6660  00300A                     __ptext25:
  6661                           	callstack 0
  6662  00300A                     ___wmul:
  6663                           	callstack 0
  6664  00300A  FFFF               	dw	65535	; assembler added errata NOP
  6665  00300C  5008               	movf	___wmul@multiplier^0,w,c
  6666  00300E  020A               	mulwf	___wmul@multiplicand^0,c
  6667  003010  CFF3 F00C          	movff	prodl,___wmul@product
  6668  003014  CFF4 F00D          	movff	prodh,___wmul@product+1
  6669  003018  5008               	movf	___wmul@multiplier^0,w,c
  6670  00301A  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  6671  00301C  50F3               	movf	243,w,c
  6672  00301E  260D               	addwf	(___wmul@product+1)^0,f,c
  6673  003020  5009               	movf	(___wmul@multiplier+1)^0,w,c
  6674  003022  020A               	mulwf	___wmul@multiplicand^0,c
  6675  003024  50F3               	movf	243,w,c
  6676  003026  260D               	addwf	(___wmul@product+1)^0,f,c
  6677  003028  C00C  F008         	movff	___wmul@product,?___wmul
  6678  00302C  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  6679  003030  0012               	return		;funcret
  6680  003032  FFFF               	dw	65535	; errata NOP
  6681  003034                     __end_of___wmul:
  6682                           	callstack 0
  6683                           
  6684 ;; *************** function _init_interrupts *****************
  6685 ;; Defined at:
  6686 ;;		line 27 in file "init_PIC.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		None
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6700 ;;      Params:         0       0       0       0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used: 1
  6706 ;; Hardware stack levels required when called: 1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_main
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text26
  6715  0030AC                     __ptext26:
  6716                           	callstack 0
  6717  0030AC                     _init_interrupts:
  6718                           	callstack 0
  6719  0030AC  FFFF               	dw	65535	; assembler added errata NOP
  6720  0030AE                     
  6721                           ;init_PIC.c: 29:     PIR1bits.RCIF = 0;
  6722  0030AE  9A9E               	bcf	158,5,c	;volatile
  6723                           
  6724                           ;init_PIC.c: 30:  PIE1bits.RCIE = 1;
  6725  0030B0  8A9D               	bsf	157,5,c	;volatile
  6726                           
  6727                           ;init_PIC.c: 31:  INTCONbits.PEIE = 1;
  6728  0030B2  8CF2               	bsf	242,6,c	;volatile
  6729  0030B4  0012               	return		;funcret
  6730  0030B6  FFFF               	dw	65535	; errata NOP
  6731  0030B8                     __end_of_init_interrupts:
  6732                           	callstack 0
  6733                           
  6734 ;; *************** function _init_USART *****************
  6735 ;; Defined at:
  6736 ;;		line 17 in file "serial_rs232.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;		None
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;		None
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6750 ;;      Params:         0       0       0       0       0       0       0
  6751 ;;      Locals:         0       0       0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0
  6753 ;;      Totals:         0       0       0       0       0       0       0
  6754 ;;Total ram usage:        0 bytes
  6755 ;; Hardware stack levels used: 1
  6756 ;; Hardware stack levels required when called: 4
  6757 ;; This function calls:
  6758 ;;		___fltol
  6759 ;;		_roundf
  6760 ;; This function is called by:
  6761 ;;		_main
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text27
  6766  002F90                     __ptext27:
  6767                           	callstack 0
  6768  002F90                     _init_USART:
  6769                           	callstack 0
  6770  002F90  FFFF               	dw	65535	; assembler added errata NOP
  6771  002F92                     
  6772                           ;serial_rs232.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  6773  002F92  0E55               	movlw	85
  6774  002F94  6E3B               	movwf	roundf@x^0,c
  6775  002F96  0E55               	movlw	85
  6776  002F98  6E3C               	movwf	(roundf@x+1)^0,c
  6777  002F9A  0EC8               	movlw	200
  6778  002F9C  6E3D               	movwf	(roundf@x+2)^0,c
  6779  002F9E  0E41               	movlw	65
  6780  002FA0  6E3E               	movwf	(roundf@x+3)^0,c
  6781  002FA2  EC04  F00B         	call	_roundf	;wreg free
  6782  002FA6  C03B  F055         	movff	?_roundf,___fltol@f1
  6783  002FAA  C03C  F056         	movff	?_roundf+1,___fltol@f1+1
  6784  002FAE  C03D  F057         	movff	?_roundf+2,___fltol@f1+2
  6785  002FB2  C03E  F058         	movff	?_roundf+3,___fltol@f1+3
  6786  002FB6  EC0F  F011         	call	___fltol	;wreg free
  6787  002FBA  5055               	movf	?___fltol^0,w,c
  6788  002FBC  6EAF               	movwf	175,c	;volatile
  6789  002FBE                     
  6790                           ;serial_rs232.c: 35:  TXSTAbits.TX9=0;
  6791  002FBE  9CAC               	bcf	172,6,c	;volatile
  6792  002FC0                     
  6793                           ;serial_rs232.c: 36:     TXSTAbits.TXEN=1;
  6794  002FC0  8AAC               	bsf	172,5,c	;volatile
  6795  002FC2                     
  6796                           ;serial_rs232.c: 37:     TXSTAbits.SYNC=0;
  6797  002FC2  98AC               	bcf	172,4,c	;volatile
  6798  002FC4                     
  6799                           ;serial_rs232.c: 38:     TXSTAbits.BRGH=1;
  6800  002FC4  84AC               	bsf	172,2,c	;volatile
  6801  002FC6                     
  6802                           ;serial_rs232.c: 39:     RCSTAbits.SPEN=1;
  6803  002FC6  8EAB               	bsf	171,7,c	;volatile
  6804  002FC8                     
  6805                           ;serial_rs232.c: 40:     RCSTAbits.RX9=0;
  6806  002FC8  9CAB               	bcf	171,6,c	;volatile
  6807  002FCA                     
  6808                           ;serial_rs232.c: 41:     RCSTAbits.CREN=1;
  6809  002FCA  88AB               	bsf	171,4,c	;volatile
  6810  002FCC  0012               	return		;funcret
  6811  002FCE  FFFF               	dw	65535	; errata NOP
  6812  002FD0                     __end_of_init_USART:
  6813                           	callstack 0
  6814                           
  6815 ;; *************** function _roundf *****************
  6816 ;; Defined at:
  6817 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  x               4   58[COMRAM] float 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  y               4   80[COMRAM] float 
  6822 ;;  u               4   76[COMRAM] struct .
  6823 ;;  e               2   70[COMRAM] int 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  4   58[COMRAM] float 
  6826 ;; Registers used:
  6827 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6833 ;;      Params:         4       0       0       0       0       0       0
  6834 ;;      Locals:        18       0       0       0       0       0       0
  6835 ;;      Temps:          4       0       0       0       0       0       0
  6836 ;;      Totals:        26       0       0       0       0       0       0
  6837 ;;Total ram usage:       26 bytes
  6838 ;; Hardware stack levels used: 1
  6839 ;; Hardware stack levels required when called: 3
  6840 ;; This function calls:
  6841 ;;		___fladd
  6842 ;;		___flge
  6843 ;;		___flmul
  6844 ;;		___flneg
  6845 ;;		___flsub
  6846 ;; This function is called by:
  6847 ;;		_init_USART
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text28
  6852  001608                     __ptext28:
  6853                           	callstack 0
  6854  001608                     _roundf:
  6855                           	callstack 0
  6856  001608  FFFF               	dw	65535	; assembler added errata NOP
  6857  00160A  C09E  F04D         	movff	roundf@F528,roundf@u
  6858  00160E  C09F  F04E         	movff	roundf@F528+1,roundf@u+1
  6859  001612  C0A0  F04F         	movff	roundf@F528+2,roundf@u+2
  6860  001616  C0A1  F050         	movff	roundf@F528+3,roundf@u+3
  6861  00161A  C03B  F04D         	movff	roundf@x,roundf@u
  6862  00161E  C03C  F04E         	movff	roundf@x+1,roundf@u+1
  6863  001622  C03D  F04F         	movff	roundf@x+2,roundf@u+2
  6864  001626  C03E  F050         	movff	roundf@x+3,roundf@u+3
  6865  00162A  C04D  F03F         	movff	roundf@u,??_roundf
  6866  00162E  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6867  001632  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6868  001636  C050  F042         	movff	roundf@u+3,??_roundf+3
  6869  00163A  0E18               	movlw	24
  6870  00163C  EF26  F00B         	goto	u4910
  6871  001640                     u4915:
  6872  001640  FFFF               	dw	65535	; assembler added errata NOP
  6873  001642  90D8               	bcf	status,0,c
  6874  001644  3242               	rrcf	(??_roundf+3)^0,f,c
  6875  001646  3241               	rrcf	(??_roundf+2)^0,f,c
  6876  001648  3240               	rrcf	(??_roundf+1)^0,f,c
  6877  00164A  323F               	rrcf	??_roundf^0,f,c
  6878  00164C                     u4910:
  6879  00164C  FFFF               	dw	65535	; assembler added errata NOP
  6880  00164E  2EE8               	decfsz	wreg,f,c
  6881  001650  EF20  F00B         	goto	u4915
  6882  001654  503F               	movf	??_roundf^0,w,c
  6883  001656  6E47               	movwf	roundf@e^0,c
  6884  001658  6A48               	clrf	(roundf@e+1)^0,c
  6885  00165A  BE48               	btfsc	(roundf@e+1)^0,7,c
  6886  00165C  EF39  F00B         	goto	u4921
  6887  001660  5048               	movf	(roundf@e+1)^0,w,c
  6888  001662  E10A               	bnz	u4920
  6889  001664  0E96               	movlw	150
  6890  001666  5C47               	subwf	roundf@e^0,w,c
  6891  001668  A0D8               	btfss	status,0,c
  6892  00166A  EF39  F00B         	goto	u4921
  6893  00166E  EF3C  F00B         	goto	u4920
  6894  001672                     u4921:
  6895  001672  FFFF               	dw	65535	; assembler added errata NOP
  6896  001674  EF47  F00B         	goto	l4291
  6897  001678                     u4920:
  6898  001678  FFFF               	dw	65535	; assembler added errata NOP
  6899  00167A  C03B  F03B         	movff	roundf@x,?_roundf
  6900  00167E  C03C  F03C         	movff	roundf@x+1,?_roundf+1
  6901  001682  C03D  F03D         	movff	roundf@x+2,?_roundf+2
  6902  001686  C03E  F03E         	movff	roundf@x+3,?_roundf+3
  6903  00168A  EFF4  F00C         	goto	l1142
  6904  00168E                     l4291:
  6905  00168E  FFFF               	dw	65535	; assembler added errata NOP
  6906  001690  C04D  F03F         	movff	roundf@u,??_roundf
  6907  001694  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6908  001698  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6909  00169C  C050  F042         	movff	roundf@u+3,??_roundf+3
  6910  0016A0  0E20               	movlw	32
  6911  0016A2  EF59  F00B         	goto	u4930
  6912  0016A6                     u4935:
  6913  0016A6  FFFF               	dw	65535	; assembler added errata NOP
  6914  0016A8  90D8               	bcf	status,0,c
  6915  0016AA  3242               	rrcf	(??_roundf+3)^0,f,c
  6916  0016AC  3241               	rrcf	(??_roundf+2)^0,f,c
  6917  0016AE  3240               	rrcf	(??_roundf+1)^0,f,c
  6918  0016B0  323F               	rrcf	??_roundf^0,f,c
  6919  0016B2                     u4930:
  6920  0016B2  FFFF               	dw	65535	; assembler added errata NOP
  6921  0016B4  2EE8               	decfsz	wreg,f,c
  6922  0016B6  EF53  F00B         	goto	u4935
  6923  0016BA  503F               	movf	??_roundf^0,w,c
  6924  0016BC  1040               	iorwf	(??_roundf+1)^0,w,c
  6925  0016BE  1041               	iorwf	(??_roundf+2)^0,w,c
  6926  0016C0  1042               	iorwf	(??_roundf+3)^0,w,c
  6927  0016C2  B4D8               	btfsc	status,2,c
  6928  0016C4  EF66  F00B         	goto	u4941
  6929  0016C8  EF69  F00B         	goto	u4940
  6930  0016CC                     u4941:
  6931  0016CC  FFFF               	dw	65535	; assembler added errata NOP
  6932  0016CE  EF7C  F00B         	goto	l4295
  6933  0016D2                     u4940:
  6934  0016D2  FFFF               	dw	65535	; assembler added errata NOP
  6935  0016D4  C03B  F008         	movff	roundf@x,___flneg@f1
  6936  0016D8  C03C  F009         	movff	roundf@x+1,___flneg@f1+1
  6937  0016DC  C03D  F00A         	movff	roundf@x+2,___flneg@f1+2
  6938  0016E0  C03E  F00B         	movff	roundf@x+3,___flneg@f1+3
  6939  0016E4  ECA7  F017         	call	___flneg	;wreg free
  6940  0016E8  C008  F03B         	movff	?___flneg,roundf@x
  6941  0016EC  C009  F03C         	movff	?___flneg+1,roundf@x+1
  6942  0016F0  C00A  F03D         	movff	?___flneg+2,roundf@x+2
  6943  0016F4  C00B  F03E         	movff	?___flneg+3,roundf@x+3
  6944  0016F8                     l4295:
  6945  0016F8  FFFF               	dw	65535	; assembler added errata NOP
  6946  0016FA  BE48               	btfsc	(roundf@e+1)^0,7,c
  6947  0016FC  EF8C  F00B         	goto	u4950
  6948  001700  5048               	movf	(roundf@e+1)^0,w,c
  6949  001702  E107               	bnz	u4951
  6950  001704  0E7E               	movlw	126
  6951  001706  5C47               	subwf	roundf@e^0,w,c
  6952  001708  B0D8               	btfsc	status,0,c
  6953  00170A  EF89  F00B         	goto	u4951
  6954  00170E  EF8C  F00B         	goto	u4950
  6955  001712                     u4951:
  6956  001712  FFFF               	dw	65535	; assembler added errata NOP
  6957  001714  EFA9  F00B         	goto	l4301
  6958  001718                     u4950:
  6959  001718  FFFF               	dw	65535	; assembler added errata NOP
  6960  00171A  C04D  F008         	movff	roundf@u,___flmul@b
  6961  00171E  C04E  F009         	movff	roundf@u+1,___flmul@b+1
  6962  001722  C04F  F00A         	movff	roundf@u+2,___flmul@b+2
  6963  001726  C050  F00B         	movff	roundf@u+3,___flmul@b+3
  6964  00172A  0E00               	movlw	0
  6965  00172C  6E0C               	movwf	___flmul@a^0,c
  6966  00172E  0E00               	movlw	0
  6967  001730  6E0D               	movwf	(___flmul@a+1)^0,c
  6968  001732  0E00               	movlw	0
  6969  001734  6E0E               	movwf	(___flmul@a+2)^0,c
  6970  001736  0E00               	movlw	0
  6971  001738  6E0F               	movwf	(___flmul@a+3)^0,c
  6972  00173A  EC99  F006         	call	___flmul	;wreg free
  6973  00173E  C008  F03B         	movff	?___flmul,?_roundf
  6974  001742  C009  F03C         	movff	?___flmul+1,?_roundf+1
  6975  001746  C00A  F03D         	movff	?___flmul+2,?_roundf+2
  6976  00174A  C00B  F03E         	movff	?___flmul+3,?_roundf+3
  6977  00174E  EFF4  F00C         	goto	l1142
  6978  001752                     l4301:
  6979  001752  FFFF               	dw	65535	; assembler added errata NOP
  6980  001754  0E00               	movlw	0
  6981  001756  6E0C               	movwf	___fladd@a^0,c
  6982  001758  0E00               	movlw	0
  6983  00175A  6E0D               	movwf	(___fladd@a+1)^0,c
  6984  00175C  0E00               	movlw	0
  6985  00175E  6E0E               	movwf	(___fladd@a+2)^0,c
  6986  001760  0E4B               	movlw	75
  6987  001762  6E0F               	movwf	(___fladd@a+3)^0,c
  6988  001764  C03B  F008         	movff	roundf@x,___fladd@b
  6989  001768  C03C  F009         	movff	roundf@x+1,___fladd@b+1
  6990  00176C  C03D  F00A         	movff	roundf@x+2,___fladd@b+2
  6991  001770  C03E  F00B         	movff	roundf@x+3,___fladd@b+3
  6992  001774  ECC5  F003         	call	___fladd	;wreg free
  6993  001778  C008  F049         	movff	?___fladd,_roundf$1335
  6994  00177C  C009  F04A         	movff	?___fladd+1,_roundf$1335+1
  6995  001780  C00A  F04B         	movff	?___fladd+2,_roundf$1335+2
  6996  001784  C00B  F04C         	movff	?___fladd+3,_roundf$1335+3
  6997  001788  0E00               	movlw	0
  6998  00178A  6E0C               	movwf	___fladd@a^0,c
  6999  00178C  0E00               	movlw	0
  7000  00178E  6E0D               	movwf	(___fladd@a+1)^0,c
  7001  001790  0E00               	movlw	0
  7002  001792  6E0E               	movwf	(___fladd@a+2)^0,c
  7003  001794  0ECB               	movlw	203
  7004  001796  6E0F               	movwf	(___fladd@a+3)^0,c
  7005  001798  C049  F008         	movff	_roundf$1335,___fladd@b
  7006  00179C  C04A  F009         	movff	_roundf$1335+1,___fladd@b+1
  7007  0017A0  C04B  F00A         	movff	_roundf$1335+2,___fladd@b+2
  7008  0017A4  C04C  F00B         	movff	_roundf$1335+3,___fladd@b+3
  7009  0017A8  ECC5  F003         	call	___fladd	;wreg free
  7010  0017AC  C008  F043         	movff	?___fladd,_roundf$1336
  7011  0017B0  C009  F044         	movff	?___fladd+1,_roundf$1336+1
  7012  0017B4  C00A  F045         	movff	?___fladd+2,_roundf$1336+2
  7013  0017B8  C00B  F046         	movff	?___fladd+3,_roundf$1336+3
  7014  0017BC  C043  F018         	movff	_roundf$1336,___flsub@b
  7015  0017C0  C044  F019         	movff	_roundf$1336+1,___flsub@b+1
  7016  0017C4  C045  F01A         	movff	_roundf$1336+2,___flsub@b+2
  7017  0017C8  C046  F01B         	movff	_roundf$1336+3,___flsub@b+3
  7018  0017CC  C03B  F01C         	movff	roundf@x,___flsub@a
  7019  0017D0  C03C  F01D         	movff	roundf@x+1,___flsub@a+1
  7020  0017D4  C03D  F01E         	movff	roundf@x+2,___flsub@a+2
  7021  0017D8  C03E  F01F         	movff	roundf@x+3,___flsub@a+3
  7022  0017DC  EC40  F017         	call	___flsub	;wreg free
  7023  0017E0  C018  F051         	movff	?___flsub,roundf@y
  7024  0017E4  C019  F052         	movff	?___flsub+1,roundf@y+1
  7025  0017E8  C01A  F053         	movff	?___flsub+2,roundf@y+2
  7026  0017EC  C01B  F054         	movff	?___flsub+3,roundf@y+3
  7027  0017F0  0E00               	movlw	0
  7028  0017F2  6E2F               	movwf	___flge@ff1^0,c
  7029  0017F4  0E00               	movlw	0
  7030  0017F6  6E30               	movwf	(___flge@ff1+1)^0,c
  7031  0017F8  0E00               	movlw	0
  7032  0017FA  6E31               	movwf	(___flge@ff1+2)^0,c
  7033  0017FC  0E3F               	movlw	63
  7034  0017FE  6E32               	movwf	(___flge@ff1+3)^0,c
  7035  001800  C051  F033         	movff	roundf@y,___flge@ff2
  7036  001804  C052  F034         	movff	roundf@y+1,___flge@ff2+1
  7037  001808  C053  F035         	movff	roundf@y+2,___flge@ff2+2
  7038  00180C  C054  F036         	movff	roundf@y+3,___flge@ff2+3
  7039  001810  ECAB  F011         	call	___flge	;wreg free
  7040  001814  B0D8               	btfsc	status,0,c
  7041  001816  EF0F  F00C         	goto	u4961
  7042  00181A  EF12  F00C         	goto	u4960
  7043  00181E                     u4961:
  7044  00181E  FFFF               	dw	65535	; assembler added errata NOP
  7045  001820  EF49  F00C         	goto	l4305
  7046  001824                     u4960:
  7047  001824  FFFF               	dw	65535	; assembler added errata NOP
  7048  001826  C03B  F00C         	movff	roundf@x,___fladd@a
  7049  00182A  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  7050  00182E  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  7051  001832  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  7052  001836  C051  F008         	movff	roundf@y,___fladd@b
  7053  00183A  C052  F009         	movff	roundf@y+1,___fladd@b+1
  7054  00183E  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  7055  001842  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  7056  001846  ECC5  F003         	call	___fladd	;wreg free
  7057  00184A  C008  F049         	movff	?___fladd,_roundf$1335
  7058  00184E  C009  F04A         	movff	?___fladd+1,_roundf$1335+1
  7059  001852  C00A  F04B         	movff	?___fladd+2,_roundf$1335+2
  7060  001856  C00B  F04C         	movff	?___fladd+3,_roundf$1335+3
  7061  00185A  C049  F008         	movff	_roundf$1335,___fladd@b
  7062  00185E  C04A  F009         	movff	_roundf$1335+1,___fladd@b+1
  7063  001862  C04B  F00A         	movff	_roundf$1335+2,___fladd@b+2
  7064  001866  C04C  F00B         	movff	_roundf$1335+3,___fladd@b+3
  7065  00186A  0E00               	movlw	0
  7066  00186C  6E0C               	movwf	___fladd@a^0,c
  7067  00186E  0E00               	movlw	0
  7068  001870  6E0D               	movwf	(___fladd@a+1)^0,c
  7069  001872  0E80               	movlw	128
  7070  001874  6E0E               	movwf	(___fladd@a+2)^0,c
  7071  001876  0EBF               	movlw	191
  7072  001878  6E0F               	movwf	(___fladd@a+3)^0,c
  7073  00187A  ECC5  F003         	call	___fladd	;wreg free
  7074  00187E  C008  F051         	movff	?___fladd,roundf@y
  7075  001882  C009  F052         	movff	?___fladd+1,roundf@y+1
  7076  001886  C00A  F053         	movff	?___fladd+2,roundf@y+2
  7077  00188A  C00B  F054         	movff	?___fladd+3,roundf@y+3
  7078  00188E  EFB6  F00C         	goto	l4311
  7079  001892                     l4305:
  7080  001892  FFFF               	dw	65535	; assembler added errata NOP
  7081  001894  0E00               	movlw	0
  7082  001896  6E2F               	movwf	___flge@ff1^0,c
  7083  001898  0E00               	movlw	0
  7084  00189A  6E30               	movwf	(___flge@ff1+1)^0,c
  7085  00189C  0E00               	movlw	0
  7086  00189E  6E31               	movwf	(___flge@ff1+2)^0,c
  7087  0018A0  0EBF               	movlw	191
  7088  0018A2  6E32               	movwf	(___flge@ff1+3)^0,c
  7089  0018A4  C051  F033         	movff	roundf@y,___flge@ff2
  7090  0018A8  C052  F034         	movff	roundf@y+1,___flge@ff2+1
  7091  0018AC  C053  F035         	movff	roundf@y+2,___flge@ff2+2
  7092  0018B0  C054  F036         	movff	roundf@y+3,___flge@ff2+3
  7093  0018B4  ECAB  F011         	call	___flge	;wreg free
  7094  0018B8  A0D8               	btfss	status,0,c
  7095  0018BA  EF61  F00C         	goto	u4971
  7096  0018BE  EF64  F00C         	goto	u4970
  7097  0018C2                     u4971:
  7098  0018C2  FFFF               	dw	65535	; assembler added errata NOP
  7099  0018C4  EF9B  F00C         	goto	l4309
  7100  0018C8                     u4970:
  7101  0018C8  FFFF               	dw	65535	; assembler added errata NOP
  7102  0018CA  C03B  F00C         	movff	roundf@x,___fladd@a
  7103  0018CE  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  7104  0018D2  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  7105  0018D6  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  7106  0018DA  C051  F008         	movff	roundf@y,___fladd@b
  7107  0018DE  C052  F009         	movff	roundf@y+1,___fladd@b+1
  7108  0018E2  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  7109  0018E6  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  7110  0018EA  ECC5  F003         	call	___fladd	;wreg free
  7111  0018EE  C008  F049         	movff	?___fladd,_roundf$1335
  7112  0018F2  C009  F04A         	movff	?___fladd+1,_roundf$1335+1
  7113  0018F6  C00A  F04B         	movff	?___fladd+2,_roundf$1335+2
  7114  0018FA  C00B  F04C         	movff	?___fladd+3,_roundf$1335+3
  7115  0018FE  C049  F008         	movff	_roundf$1335,___fladd@b
  7116  001902  C04A  F009         	movff	_roundf$1335+1,___fladd@b+1
  7117  001906  C04B  F00A         	movff	_roundf$1335+2,___fladd@b+2
  7118  00190A  C04C  F00B         	movff	_roundf$1335+3,___fladd@b+3
  7119  00190E  0E00               	movlw	0
  7120  001910  6E0C               	movwf	___fladd@a^0,c
  7121  001912  0E00               	movlw	0
  7122  001914  6E0D               	movwf	(___fladd@a+1)^0,c
  7123  001916  0E80               	movlw	128
  7124  001918  6E0E               	movwf	(___fladd@a+2)^0,c
  7125  00191A  0E3F               	movlw	63
  7126  00191C  6E0F               	movwf	(___fladd@a+3)^0,c
  7127  00191E  ECC5  F003         	call	___fladd	;wreg free
  7128  001922  C008  F051         	movff	?___fladd,roundf@y
  7129  001926  C009  F052         	movff	?___fladd+1,roundf@y+1
  7130  00192A  C00A  F053         	movff	?___fladd+2,roundf@y+2
  7131  00192E  C00B  F054         	movff	?___fladd+3,roundf@y+3
  7132  001932  EFB6  F00C         	goto	l4311
  7133  001936                     l4309:
  7134  001936  FFFF               	dw	65535	; assembler added errata NOP
  7135  001938  C051  F008         	movff	roundf@y,___fladd@b
  7136  00193C  C052  F009         	movff	roundf@y+1,___fladd@b+1
  7137  001940  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  7138  001944  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  7139  001948  C03B  F00C         	movff	roundf@x,___fladd@a
  7140  00194C  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  7141  001950  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  7142  001954  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  7143  001958  ECC5  F003         	call	___fladd	;wreg free
  7144  00195C  C008  F051         	movff	?___fladd,roundf@y
  7145  001960  C009  F052         	movff	?___fladd+1,roundf@y+1
  7146  001964  C00A  F053         	movff	?___fladd+2,roundf@y+2
  7147  001968  C00B  F054         	movff	?___fladd+3,roundf@y+3
  7148  00196C                     l4311:
  7149  00196C  FFFF               	dw	65535	; assembler added errata NOP
  7150  00196E  C04D  F03F         	movff	roundf@u,??_roundf
  7151  001972  C04E  F040         	movff	roundf@u+1,??_roundf+1
  7152  001976  C04F  F041         	movff	roundf@u+2,??_roundf+2
  7153  00197A  C050  F042         	movff	roundf@u+3,??_roundf+3
  7154  00197E  0E20               	movlw	32
  7155  001980  EFC8  F00C         	goto	u4980
  7156  001984                     u4985:
  7157  001984  FFFF               	dw	65535	; assembler added errata NOP
  7158  001986  90D8               	bcf	status,0,c
  7159  001988  3242               	rrcf	(??_roundf+3)^0,f,c
  7160  00198A  3241               	rrcf	(??_roundf+2)^0,f,c
  7161  00198C  3240               	rrcf	(??_roundf+1)^0,f,c
  7162  00198E  323F               	rrcf	??_roundf^0,f,c
  7163  001990                     u4980:
  7164  001990  FFFF               	dw	65535	; assembler added errata NOP
  7165  001992  2EE8               	decfsz	wreg,f,c
  7166  001994  EFC2  F00C         	goto	u4985
  7167  001998  503F               	movf	??_roundf^0,w,c
  7168  00199A  1040               	iorwf	(??_roundf+1)^0,w,c
  7169  00199C  1041               	iorwf	(??_roundf+2)^0,w,c
  7170  00199E  1042               	iorwf	(??_roundf+3)^0,w,c
  7171  0019A0  B4D8               	btfsc	status,2,c
  7172  0019A2  EFD5  F00C         	goto	u4991
  7173  0019A6  EFD8  F00C         	goto	u4990
  7174  0019AA                     u4991:
  7175  0019AA  FFFF               	dw	65535	; assembler added errata NOP
  7176  0019AC  EFEB  F00C         	goto	l4315
  7177  0019B0                     u4990:
  7178  0019B0  FFFF               	dw	65535	; assembler added errata NOP
  7179  0019B2  C051  F008         	movff	roundf@y,___flneg@f1
  7180  0019B6  C052  F009         	movff	roundf@y+1,___flneg@f1+1
  7181  0019BA  C053  F00A         	movff	roundf@y+2,___flneg@f1+2
  7182  0019BE  C054  F00B         	movff	roundf@y+3,___flneg@f1+3
  7183  0019C2  ECA7  F017         	call	___flneg	;wreg free
  7184  0019C6  C008  F051         	movff	?___flneg,roundf@y
  7185  0019CA  C009  F052         	movff	?___flneg+1,roundf@y+1
  7186  0019CE  C00A  F053         	movff	?___flneg+2,roundf@y+2
  7187  0019D2  C00B  F054         	movff	?___flneg+3,roundf@y+3
  7188  0019D6                     l4315:
  7189  0019D6  FFFF               	dw	65535	; assembler added errata NOP
  7190  0019D8  C051  F03B         	movff	roundf@y,?_roundf
  7191  0019DC  C052  F03C         	movff	roundf@y+1,?_roundf+1
  7192  0019E0  C053  F03D         	movff	roundf@y+2,?_roundf+2
  7193  0019E4  C054  F03E         	movff	roundf@y+3,?_roundf+3
  7194  0019E8                     l1142:
  7195  0019E8  FFFF               	dw	65535	; assembler added errata NOP
  7196  0019EA  0012               	return		;funcret
  7197  0019EC  FFFF               	dw	65535	; errata NOP
  7198  0019EE                     __end_of_roundf:
  7199                           	callstack 0
  7200                           
  7201 ;; *************** function ___flsub *****************
  7202 ;; Defined at:
  7203 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  b               4   23[COMRAM] float 
  7206 ;;  a               4   27[COMRAM] float 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  4   23[COMRAM] float 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7218 ;;      Params:         8       0       0       0       0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0
  7221 ;;      Totals:         8       0       0       0       0       0       0
  7222 ;;Total ram usage:        8 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 2
  7225 ;; This function calls:
  7226 ;;		___fladd
  7227 ;; This function is called by:
  7228 ;;		_roundf
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text29
  7233  002E80                     __ptext29:
  7234                           	callstack 0
  7235  002E80                     ___flsub:
  7236                           	callstack 0
  7237  002E80  FFFF               	dw	65535	; assembler added errata NOP
  7238  002E82  0E00               	movlw	0
  7239  002E84  1A1C               	xorwf	___flsub@a^0,f,c
  7240  002E86  0E00               	movlw	0
  7241  002E88  1A1D               	xorwf	(___flsub@a+1)^0,f,c
  7242  002E8A  0E00               	movlw	0
  7243  002E8C  1A1E               	xorwf	(___flsub@a+2)^0,f,c
  7244  002E8E  0E80               	movlw	128
  7245  002E90  1A1F               	xorwf	(___flsub@a+3)^0,f,c
  7246  002E92  C018  F008         	movff	___flsub@b,___fladd@b
  7247  002E96  C019  F009         	movff	___flsub@b+1,___fladd@b+1
  7248  002E9A  C01A  F00A         	movff	___flsub@b+2,___fladd@b+2
  7249  002E9E  C01B  F00B         	movff	___flsub@b+3,___fladd@b+3
  7250  002EA2  C01C  F00C         	movff	___flsub@a,___fladd@a
  7251  002EA6  C01D  F00D         	movff	___flsub@a+1,___fladd@a+1
  7252  002EAA  C01E  F00E         	movff	___flsub@a+2,___fladd@a+2
  7253  002EAE  C01F  F00F         	movff	___flsub@a+3,___fladd@a+3
  7254  002EB2  ECC5  F003         	call	___fladd	;wreg free
  7255  002EB6  C008  F018         	movff	?___fladd,?___flsub
  7256  002EBA  C009  F019         	movff	?___fladd+1,?___flsub+1
  7257  002EBE  C00A  F01A         	movff	?___fladd+2,?___flsub+2
  7258  002EC2  C00B  F01B         	movff	?___fladd+3,?___flsub+3
  7259  002EC6  0012               	return		;funcret
  7260  002EC8  FFFF               	dw	65535	; errata NOP
  7261  002ECA                     __end_of___flsub:
  7262                           	callstack 0
  7263                           
  7264 ;; *************** function ___fladd *****************
  7265 ;; Defined at:
  7266 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;  b               4    7[COMRAM] float 
  7269 ;;  a               4   11[COMRAM] float 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  grs             1   22[COMRAM] unsigned char 
  7272 ;;  bexp            1   21[COMRAM] unsigned char 
  7273 ;;  aexp            1   20[COMRAM] unsigned char 
  7274 ;;  signs           1   19[COMRAM] unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  4    7[COMRAM] unsigned char 
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7284 ;;      Params:         8       0       0       0       0       0       0
  7285 ;;      Locals:         4       0       0       0       0       0       0
  7286 ;;      Temps:          4       0       0       0       0       0       0
  7287 ;;      Totals:        16       0       0       0       0       0       0
  7288 ;;Total ram usage:       16 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; Hardware stack levels required when called: 1
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		___flsub
  7295 ;;		_roundf
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text30
  7300  00078A                     __ptext30:
  7301                           	callstack 0
  7302  00078A                     ___fladd:
  7303                           	callstack 0
  7304  00078A  FFFF               	dw	65535	; assembler added errata NOP
  7305  00078C  500B               	movf	(___fladd@b+3)^0,w,c
  7306  00078E  0B80               	andlw	128
  7307  000790  6E14               	movwf	___fladd@signs^0,c
  7308  000792  500B               	movf	(___fladd@b+3)^0,w,c
  7309  000794  240B               	addwf	(___fladd@b+3)^0,w,c
  7310  000796  6E16               	movwf	___fladd@bexp^0,c
  7311  000798  AE0A               	btfss	(___fladd@b+2)^0,7,c
  7312  00079A  EFD1  F003         	goto	u2221
  7313  00079E  EFD4  F003         	goto	u2220
  7314  0007A2                     u2221:
  7315  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  7316  0007A4  EFD6  F003         	goto	l2589
  7317  0007A8                     u2220:
  7318  0007A8  FFFF               	dw	65535	; assembler added errata NOP
  7319  0007AA  8016               	bsf	___fladd@bexp^0,0,c
  7320  0007AC                     l2589:
  7321  0007AC  FFFF               	dw	65535	; assembler added errata NOP
  7322  0007AE  5016               	movf	___fladd@bexp^0,w,c
  7323  0007B0  B4D8               	btfsc	status,2,c
  7324  0007B2  EFDD  F003         	goto	u2231
  7325  0007B6  EFE0  F003         	goto	u2230
  7326  0007BA                     u2231:
  7327  0007BA  FFFF               	dw	65535	; assembler added errata NOP
  7328  0007BC  EFF9  F003         	goto	l2599
  7329  0007C0                     u2230:
  7330  0007C0  FFFF               	dw	65535	; assembler added errata NOP
  7331  0007C2  2816               	incf	___fladd@bexp^0,w,c
  7332  0007C4  A4D8               	btfss	status,2,c
  7333  0007C6  EFE7  F003         	goto	u2241
  7334  0007CA  EFEA  F003         	goto	u2240
  7335  0007CE                     u2241:
  7336  0007CE  FFFF               	dw	65535	; assembler added errata NOP
  7337  0007D0  EFF3  F003         	goto	l2595
  7338  0007D4                     u2240:
  7339  0007D4  FFFF               	dw	65535	; assembler added errata NOP
  7340  0007D6  0E00               	movlw	0
  7341  0007D8  6E08               	movwf	___fladd@b^0,c
  7342  0007DA  0E00               	movlw	0
  7343  0007DC  6E09               	movwf	(___fladd@b+1)^0,c
  7344  0007DE  0E00               	movlw	0
  7345  0007E0  6E0A               	movwf	(___fladd@b+2)^0,c
  7346  0007E2  0E00               	movlw	0
  7347  0007E4  6E0B               	movwf	(___fladd@b+3)^0,c
  7348  0007E6                     l2595:
  7349  0007E6  FFFF               	dw	65535	; assembler added errata NOP
  7350  0007E8  8E0A               	bsf	(___fladd@b+2)^0,7,c
  7351  0007EA  0E00               	movlw	0
  7352  0007EC  6E0B               	movwf	(___fladd@b+3)^0,c
  7353  0007EE  EF02  F004         	goto	l2601
  7354  0007F2                     l2599:
  7355  0007F2  FFFF               	dw	65535	; assembler added errata NOP
  7356  0007F4  0E00               	movlw	0
  7357  0007F6  6E08               	movwf	___fladd@b^0,c
  7358  0007F8  0E00               	movlw	0
  7359  0007FA  6E09               	movwf	(___fladd@b+1)^0,c
  7360  0007FC  0E00               	movlw	0
  7361  0007FE  6E0A               	movwf	(___fladd@b+2)^0,c
  7362  000800  0E00               	movlw	0
  7363  000802  6E0B               	movwf	(___fladd@b+3)^0,c
  7364  000804                     l2601:
  7365  000804  FFFF               	dw	65535	; assembler added errata NOP
  7366  000806  500F               	movf	(___fladd@a+3)^0,w,c
  7367  000808  0B80               	andlw	128
  7368  00080A  6E15               	movwf	___fladd@aexp^0,c
  7369  00080C  5014               	movf	___fladd@signs^0,w,c
  7370  00080E  1815               	xorwf	___fladd@aexp^0,w,c
  7371  000810  B4D8               	btfsc	status,2,c
  7372  000812  EF0D  F004         	goto	u2251
  7373  000816  EF10  F004         	goto	u2250
  7374  00081A                     u2251:
  7375  00081A  FFFF               	dw	65535	; assembler added errata NOP
  7376  00081C  EF12  F004         	goto	l2607
  7377  000820                     u2250:
  7378  000820  FFFF               	dw	65535	; assembler added errata NOP
  7379  000822  8C14               	bsf	___fladd@signs^0,6,c
  7380  000824                     l2607:
  7381  000824  FFFF               	dw	65535	; assembler added errata NOP
  7382  000826  500F               	movf	(___fladd@a+3)^0,w,c
  7383  000828  240F               	addwf	(___fladd@a+3)^0,w,c
  7384  00082A  6E15               	movwf	___fladd@aexp^0,c
  7385  00082C  AE0E               	btfss	(___fladd@a+2)^0,7,c
  7386  00082E  EF1B  F004         	goto	u2261
  7387  000832  EF1E  F004         	goto	u2260
  7388  000836                     u2261:
  7389  000836  FFFF               	dw	65535	; assembler added errata NOP
  7390  000838  EF20  F004         	goto	l2613
  7391  00083C                     u2260:
  7392  00083C  FFFF               	dw	65535	; assembler added errata NOP
  7393  00083E  8015               	bsf	___fladd@aexp^0,0,c
  7394  000840                     l2613:
  7395  000840  FFFF               	dw	65535	; assembler added errata NOP
  7396  000842  5015               	movf	___fladd@aexp^0,w,c
  7397  000844  B4D8               	btfsc	status,2,c
  7398  000846  EF27  F004         	goto	u2271
  7399  00084A  EF2A  F004         	goto	u2270
  7400  00084E                     u2271:
  7401  00084E  FFFF               	dw	65535	; assembler added errata NOP
  7402  000850  EF43  F004         	goto	l2623
  7403  000854                     u2270:
  7404  000854  FFFF               	dw	65535	; assembler added errata NOP
  7405  000856  2815               	incf	___fladd@aexp^0,w,c
  7406  000858  A4D8               	btfss	status,2,c
  7407  00085A  EF31  F004         	goto	u2281
  7408  00085E  EF34  F004         	goto	u2280
  7409  000862                     u2281:
  7410  000862  FFFF               	dw	65535	; assembler added errata NOP
  7411  000864  EF3D  F004         	goto	l2619
  7412  000868                     u2280:
  7413  000868  FFFF               	dw	65535	; assembler added errata NOP
  7414  00086A  0E00               	movlw	0
  7415  00086C  6E0C               	movwf	___fladd@a^0,c
  7416  00086E  0E00               	movlw	0
  7417  000870  6E0D               	movwf	(___fladd@a+1)^0,c
  7418  000872  0E00               	movlw	0
  7419  000874  6E0E               	movwf	(___fladd@a+2)^0,c
  7420  000876  0E00               	movlw	0
  7421  000878  6E0F               	movwf	(___fladd@a+3)^0,c
  7422  00087A                     l2619:
  7423  00087A  FFFF               	dw	65535	; assembler added errata NOP
  7424  00087C  8E0E               	bsf	(___fladd@a+2)^0,7,c
  7425  00087E  0E00               	movlw	0
  7426  000880  6E0F               	movwf	(___fladd@a+3)^0,c
  7427  000882  EF4C  F004         	goto	l2625
  7428  000886                     l2623:
  7429  000886  FFFF               	dw	65535	; assembler added errata NOP
  7430  000888  0E00               	movlw	0
  7431  00088A  6E0C               	movwf	___fladd@a^0,c
  7432  00088C  0E00               	movlw	0
  7433  00088E  6E0D               	movwf	(___fladd@a+1)^0,c
  7434  000890  0E00               	movlw	0
  7435  000892  6E0E               	movwf	(___fladd@a+2)^0,c
  7436  000894  0E00               	movlw	0
  7437  000896  6E0F               	movwf	(___fladd@a+3)^0,c
  7438  000898                     l2625:
  7439  000898  FFFF               	dw	65535	; assembler added errata NOP
  7440  00089A  5016               	movf	___fladd@bexp^0,w,c
  7441  00089C  5C15               	subwf	___fladd@aexp^0,w,c
  7442  00089E  B0D8               	btfsc	status,0,c
  7443  0008A0  EF54  F004         	goto	u2291
  7444  0008A4  EF57  F004         	goto	u2290
  7445  0008A8                     u2291:
  7446  0008A8  FFFF               	dw	65535	; assembler added errata NOP
  7447  0008AA  EF82  F004         	goto	l2661
  7448  0008AE                     u2290:
  7449  0008AE  FFFF               	dw	65535	; assembler added errata NOP
  7450  0008B0  AC14               	btfss	___fladd@signs^0,6,c
  7451  0008B2  EF5D  F004         	goto	u2301
  7452  0008B6  EF60  F004         	goto	u2300
  7453  0008BA                     u2301:
  7454  0008BA  FFFF               	dw	65535	; assembler added errata NOP
  7455  0008BC  EF63  F004         	goto	l2631
  7456  0008C0                     u2300:
  7457  0008C0  FFFF               	dw	65535	; assembler added errata NOP
  7458  0008C2  0E80               	movlw	128
  7459  0008C4  1A14               	xorwf	___fladd@signs^0,f,c
  7460  0008C6                     l2631:
  7461  0008C6  FFFF               	dw	65535	; assembler added errata NOP
  7462  0008C8  C016  F017         	movff	___fladd@bexp,___fladd@grs
  7463  0008CC  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  7464  0008D0  C017  F015         	movff	___fladd@grs,___fladd@aexp
  7465  0008D4  C008  F017         	movff	___fladd@b,___fladd@grs
  7466  0008D8  C00C  F008         	movff	___fladd@a,___fladd@b
  7467  0008DC  C017  F00C         	movff	___fladd@grs,___fladd@a
  7468  0008E0  C009  F017         	movff	___fladd@b+1,___fladd@grs
  7469  0008E4  C00D  F009         	movff	___fladd@a+1,___fladd@b+1
  7470  0008E8  C017  F00D         	movff	___fladd@grs,___fladd@a+1
  7471  0008EC  C00A  F017         	movff	___fladd@b+2,___fladd@grs
  7472  0008F0  C00E  F00A         	movff	___fladd@a+2,___fladd@b+2
  7473  0008F4  C017  F00E         	movff	___fladd@grs,___fladd@a+2
  7474  0008F8  C00B  F017         	movff	___fladd@b+3,___fladd@grs
  7475  0008FC  C00F  F00B         	movff	___fladd@a+3,___fladd@b+3
  7476  000900  C017  F00F         	movff	___fladd@grs,___fladd@a+3
  7477  000904                     l2661:
  7478  000904  FFFF               	dw	65535	; assembler added errata NOP
  7479  000906  0E00               	movlw	0
  7480  000908  6E17               	movwf	___fladd@grs^0,c
  7481  00090A  5016               	movf	___fladd@bexp^0,w,c
  7482  00090C  C015  F010         	movff	___fladd@aexp,??___fladd
  7483  000910  6A11               	clrf	(??___fladd+1)^0,c
  7484  000912  5E10               	subwf	??___fladd^0,f,c
  7485  000914  0E00               	movlw	0
  7486  000916  5A11               	subwfb	(??___fladd+1)^0,f,c
  7487  000918  BE11               	btfsc	(??___fladd+1)^0,7,c
  7488  00091A  EF98  F004         	goto	u2311
  7489  00091E  5011               	movf	(??___fladd+1)^0,w,c
  7490  000920  E10A               	bnz	u2310
  7491  000922  0E1A               	movlw	26
  7492  000924  5C10               	subwf	??___fladd^0,w,c
  7493  000926  A0D8               	btfss	status,0,c
  7494  000928  EF98  F004         	goto	u2311
  7495  00092C  EF9B  F004         	goto	u2310
  7496  000930                     u2311:
  7497  000930  FFFF               	dw	65535	; assembler added errata NOP
  7498  000932  EFDE  F004         	goto	l937
  7499  000936                     u2310:
  7500  000936  FFFF               	dw	65535	; assembler added errata NOP
  7501  000938  5008               	movf	___fladd@b^0,w,c
  7502  00093A  1009               	iorwf	(___fladd@b+1)^0,w,c
  7503  00093C  100A               	iorwf	(___fladd@b+2)^0,w,c
  7504  00093E  100B               	iorwf	(___fladd@b+3)^0,w,c
  7505  000940  A4D8               	btfss	status,2,c
  7506  000942  EFA5  F004         	goto	u2321
  7507  000946  EFA9  F004         	goto	u2320
  7508  00094A                     u2321:
  7509  00094A  FFFF               	dw	65535	; assembler added errata NOP
  7510  00094C  0E01               	movlw	1
  7511  00094E  EFAB  F004         	goto	u2330
  7512  000952                     u2320:
  7513  000952  FFFF               	dw	65535	; assembler added errata NOP
  7514  000954  0E00               	movlw	0
  7515  000956                     u2330:
  7516  000956  FFFF               	dw	65535	; assembler added errata NOP
  7517  000958  6E17               	movwf	___fladd@grs^0,c
  7518  00095A  0E00               	movlw	0
  7519  00095C  6E08               	movwf	___fladd@b^0,c
  7520  00095E  0E00               	movlw	0
  7521  000960  6E09               	movwf	(___fladd@b+1)^0,c
  7522  000962  0E00               	movlw	0
  7523  000964  6E0A               	movwf	(___fladd@b+2)^0,c
  7524  000966  0E00               	movlw	0
  7525  000968  6E0B               	movwf	(___fladd@b+3)^0,c
  7526  00096A  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  7527  00096E  EFE9  F004         	goto	l936
  7528  000972                     l938:
  7529  000972  FFFF               	dw	65535	; assembler added errata NOP
  7530  000974  A017               	btfss	___fladd@grs^0,0,c
  7531  000976  EFBF  F004         	goto	u2341
  7532  00097A  EFC2  F004         	goto	u2340
  7533  00097E                     u2341:
  7534  00097E  FFFF               	dw	65535	; assembler added errata NOP
  7535  000980  EFC9  F004         	goto	l2673
  7536  000984                     u2340:
  7537  000984  FFFF               	dw	65535	; assembler added errata NOP
  7538  000986  90D8               	bcf	status,0,c
  7539  000988  3017               	rrcf	___fladd@grs^0,w,c
  7540  00098A  0901               	iorlw	1
  7541  00098C  6E17               	movwf	___fladd@grs^0,c
  7542  00098E  EFCC  F004         	goto	l2675
  7543  000992                     l2673:
  7544  000992  FFFF               	dw	65535	; assembler added errata NOP
  7545  000994  90D8               	bcf	status,0,c
  7546  000996  3217               	rrcf	___fladd@grs^0,f,c
  7547  000998                     l2675:
  7548  000998  FFFF               	dw	65535	; assembler added errata NOP
  7549  00099A  A008               	btfss	___fladd@b^0,0,c
  7550  00099C  EFD2  F004         	goto	u2351
  7551  0009A0  EFD5  F004         	goto	u2350
  7552  0009A4                     u2351:
  7553  0009A4  FFFF               	dw	65535	; assembler added errata NOP
  7554  0009A6  EFD7  F004         	goto	l2679
  7555  0009AA                     u2350:
  7556  0009AA  FFFF               	dw	65535	; assembler added errata NOP
  7557  0009AC  8E17               	bsf	___fladd@grs^0,7,c
  7558  0009AE                     l2679:
  7559  0009AE  FFFF               	dw	65535	; assembler added errata NOP
  7560  0009B0  340B               	rlcf	(___fladd@b+3)^0,w,c
  7561  0009B2  320B               	rrcf	(___fladd@b+3)^0,f,c
  7562  0009B4  320A               	rrcf	(___fladd@b+2)^0,f,c
  7563  0009B6  3209               	rrcf	(___fladd@b+1)^0,f,c
  7564  0009B8  3208               	rrcf	___fladd@b^0,f,c
  7565  0009BA  2A16               	incf	___fladd@bexp^0,f,c
  7566  0009BC                     l937:
  7567  0009BC  FFFF               	dw	65535	; assembler added errata NOP
  7568  0009BE  5015               	movf	___fladd@aexp^0,w,c
  7569  0009C0  5C16               	subwf	___fladd@bexp^0,w,c
  7570  0009C2  A0D8               	btfss	status,0,c
  7571  0009C4  EFE6  F004         	goto	u2361
  7572  0009C8  EFE9  F004         	goto	u2360
  7573  0009CC                     u2361:
  7574  0009CC  FFFF               	dw	65535	; assembler added errata NOP
  7575  0009CE  EFB9  F004         	goto	l938
  7576  0009D2                     u2360:
  7577  0009D2                     l936:
  7578  0009D2  FFFF               	dw	65535	; assembler added errata NOP
  7579  0009D4  BC14               	btfsc	___fladd@signs^0,6,c
  7580  0009D6  EFEF  F004         	goto	u2371
  7581  0009DA  EFF2  F004         	goto	u2370
  7582  0009DE                     u2371:
  7583  0009DE  FFFF               	dw	65535	; assembler added errata NOP
  7584  0009E0  EF3F  F005         	goto	l2707
  7585  0009E4                     u2370:
  7586  0009E4  FFFF               	dw	65535	; assembler added errata NOP
  7587  0009E6  5016               	movf	___fladd@bexp^0,w,c
  7588  0009E8  A4D8               	btfss	status,2,c
  7589  0009EA  EFF9  F004         	goto	u2381
  7590  0009EE  EFFC  F004         	goto	u2380
  7591  0009F2                     u2381:
  7592  0009F2  FFFF               	dw	65535	; assembler added errata NOP
  7593  0009F4  EF07  F005         	goto	l2689
  7594  0009F8                     u2380:
  7595  0009F8  FFFF               	dw	65535	; assembler added errata NOP
  7596  0009FA  0E00               	movlw	0
  7597  0009FC  6E08               	movwf	?___fladd^0,c
  7598  0009FE  0E00               	movlw	0
  7599  000A00  6E09               	movwf	(?___fladd+1)^0,c
  7600  000A02  0E00               	movlw	0
  7601  000A04  6E0A               	movwf	(?___fladd+2)^0,c
  7602  000A06  0E00               	movlw	0
  7603  000A08  6E0B               	movwf	(?___fladd+3)^0,c
  7604  000A0A  EF96  F006         	goto	l945
  7605  000A0E                     l2689:
  7606  000A0E  FFFF               	dw	65535	; assembler added errata NOP
  7607  000A10  500C               	movf	___fladd@a^0,w,c
  7608  000A12  2608               	addwf	___fladd@b^0,f,c
  7609  000A14  500D               	movf	(___fladd@a+1)^0,w,c
  7610  000A16  2209               	addwfc	(___fladd@b+1)^0,f,c
  7611  000A18  500E               	movf	(___fladd@a+2)^0,w,c
  7612  000A1A  220A               	addwfc	(___fladd@b+2)^0,f,c
  7613  000A1C  500F               	movf	(___fladd@a+3)^0,w,c
  7614  000A1E  220B               	addwfc	(___fladd@b+3)^0,f,c
  7615  000A20  A00B               	btfss	(___fladd@b+3)^0,0,c
  7616  000A22  EF15  F005         	goto	u2391
  7617  000A26  EF18  F005         	goto	u2390
  7618  000A2A                     u2391:
  7619  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  7620  000A2C  EFE3  F005         	goto	l2743
  7621  000A30                     u2390:
  7622  000A30  FFFF               	dw	65535	; assembler added errata NOP
  7623  000A32  A017               	btfss	___fladd@grs^0,0,c
  7624  000A34  EF1E  F005         	goto	u2401
  7625  000A38  EF21  F005         	goto	u2400
  7626  000A3C                     u2401:
  7627  000A3C  FFFF               	dw	65535	; assembler added errata NOP
  7628  000A3E  EF28  F005         	goto	l2697
  7629  000A42                     u2400:
  7630  000A42  FFFF               	dw	65535	; assembler added errata NOP
  7631  000A44  90D8               	bcf	status,0,c
  7632  000A46  3017               	rrcf	___fladd@grs^0,w,c
  7633  000A48  0901               	iorlw	1
  7634  000A4A  6E17               	movwf	___fladd@grs^0,c
  7635  000A4C  EF2B  F005         	goto	l2699
  7636  000A50                     l2697:
  7637  000A50  FFFF               	dw	65535	; assembler added errata NOP
  7638  000A52  90D8               	bcf	status,0,c
  7639  000A54  3217               	rrcf	___fladd@grs^0,f,c
  7640  000A56                     l2699:
  7641  000A56  FFFF               	dw	65535	; assembler added errata NOP
  7642  000A58  A008               	btfss	___fladd@b^0,0,c
  7643  000A5A  EF31  F005         	goto	u2411
  7644  000A5E  EF34  F005         	goto	u2410
  7645  000A62                     u2411:
  7646  000A62  FFFF               	dw	65535	; assembler added errata NOP
  7647  000A64  EF36  F005         	goto	l2703
  7648  000A68                     u2410:
  7649  000A68  FFFF               	dw	65535	; assembler added errata NOP
  7650  000A6A  8E17               	bsf	___fladd@grs^0,7,c
  7651  000A6C                     l2703:
  7652  000A6C  FFFF               	dw	65535	; assembler added errata NOP
  7653  000A6E  340B               	rlcf	(___fladd@b+3)^0,w,c
  7654  000A70  320B               	rrcf	(___fladd@b+3)^0,f,c
  7655  000A72  320A               	rrcf	(___fladd@b+2)^0,f,c
  7656  000A74  3209               	rrcf	(___fladd@b+1)^0,f,c
  7657  000A76  3208               	rrcf	___fladd@b^0,f,c
  7658  000A78  2A16               	incf	___fladd@bexp^0,f,c
  7659  000A7A  EFE3  F005         	goto	l2743
  7660  000A7E                     l2707:
  7661  000A7E  FFFF               	dw	65535	; assembler added errata NOP
  7662  000A80  500C               	movf	___fladd@a^0,w,c
  7663  000A82  5C08               	subwf	___fladd@b^0,w,c
  7664  000A84  500D               	movf	(___fladd@a+1)^0,w,c
  7665  000A86  5809               	subwfb	(___fladd@b+1)^0,w,c
  7666  000A88  500E               	movf	(___fladd@a+2)^0,w,c
  7667  000A8A  580A               	subwfb	(___fladd@b+2)^0,w,c
  7668  000A8C  500B               	movf	(___fladd@b+3)^0,w,c
  7669  000A8E  0A80               	xorlw	128
  7670  000A90  6E10               	movwf	??___fladd^0,c
  7671  000A92  500F               	movf	(___fladd@a+3)^0,w,c
  7672  000A94  0A80               	xorlw	128
  7673  000A96  5810               	subwfb	??___fladd^0,w,c
  7674  000A98  B0D8               	btfsc	status,0,c
  7675  000A9A  EF51  F005         	goto	u2421
  7676  000A9E  EF54  F005         	goto	u2420
  7677  000AA2                     u2421:
  7678  000AA2  FFFF               	dw	65535	; assembler added errata NOP
  7679  000AA4  EF82  F005         	goto	l2717
  7680  000AA8                     u2420:
  7681  000AA8  FFFF               	dw	65535	; assembler added errata NOP
  7682  000AAA  5008               	movf	___fladd@b^0,w,c
  7683  000AAC  5C0C               	subwf	___fladd@a^0,w,c
  7684  000AAE  6E10               	movwf	??___fladd^0,c
  7685  000AB0  5009               	movf	(___fladd@b+1)^0,w,c
  7686  000AB2  580D               	subwfb	(___fladd@a+1)^0,w,c
  7687  000AB4  6E11               	movwf	(??___fladd+1)^0,c
  7688  000AB6  500A               	movf	(___fladd@b+2)^0,w,c
  7689  000AB8  580E               	subwfb	(___fladd@a+2)^0,w,c
  7690  000ABA  6E12               	movwf	(??___fladd+2)^0,c
  7691  000ABC  500B               	movf	(___fladd@b+3)^0,w,c
  7692  000ABE  580F               	subwfb	(___fladd@a+3)^0,w,c
  7693  000AC0  6E13               	movwf	(??___fladd+3)^0,c
  7694  000AC2  0EFF               	movlw	255
  7695  000AC4  2410               	addwf	??___fladd^0,w,c
  7696  000AC6  6E08               	movwf	___fladd@b^0,c
  7697  000AC8  0EFF               	movlw	255
  7698  000ACA  2011               	addwfc	(??___fladd+1)^0,w,c
  7699  000ACC  6E09               	movwf	(___fladd@b+1)^0,c
  7700  000ACE  0EFF               	movlw	255
  7701  000AD0  2012               	addwfc	(??___fladd+2)^0,w,c
  7702  000AD2  6E0A               	movwf	(___fladd@b+2)^0,c
  7703  000AD4  0EFF               	movlw	255
  7704  000AD6  2013               	addwfc	(??___fladd+3)^0,w,c
  7705  000AD8  6E0B               	movwf	(___fladd@b+3)^0,c
  7706  000ADA  0E80               	movlw	128
  7707  000ADC  1A14               	xorwf	___fladd@signs^0,f,c
  7708  000ADE  6C17               	negf	___fladd@grs^0,c
  7709  000AE0  5017               	movf	___fladd@grs^0,w,c
  7710  000AE2  A4D8               	btfss	status,2,c
  7711  000AE4  EF76  F005         	goto	u2431
  7712  000AE8  EF79  F005         	goto	u2430
  7713  000AEC                     u2431:
  7714  000AEC  FFFF               	dw	65535	; assembler added errata NOP
  7715  000AEE  EF8B  F005         	goto	l953
  7716  000AF2                     u2430:
  7717  000AF2  FFFF               	dw	65535	; assembler added errata NOP
  7718  000AF4  0E01               	movlw	1
  7719  000AF6  2608               	addwf	___fladd@b^0,f,c
  7720  000AF8  0E00               	movlw	0
  7721  000AFA  2209               	addwfc	(___fladd@b+1)^0,f,c
  7722  000AFC  220A               	addwfc	(___fladd@b+2)^0,f,c
  7723  000AFE  220B               	addwfc	(___fladd@b+3)^0,f,c
  7724  000B00  EF8B  F005         	goto	l953
  7725  000B04                     l2717:
  7726  000B04  FFFF               	dw	65535	; assembler added errata NOP
  7727  000B06  500C               	movf	___fladd@a^0,w,c
  7728  000B08  5E08               	subwf	___fladd@b^0,f,c
  7729  000B0A  500D               	movf	(___fladd@a+1)^0,w,c
  7730  000B0C  5A09               	subwfb	(___fladd@b+1)^0,f,c
  7731  000B0E  500E               	movf	(___fladd@a+2)^0,w,c
  7732  000B10  5A0A               	subwfb	(___fladd@b+2)^0,f,c
  7733  000B12  500F               	movf	(___fladd@a+3)^0,w,c
  7734  000B14  5A0B               	subwfb	(___fladd@b+3)^0,f,c
  7735  000B16                     l953:
  7736  000B16  FFFF               	dw	65535	; assembler added errata NOP
  7737  000B18  5008               	movf	___fladd@b^0,w,c
  7738  000B1A  1009               	iorwf	(___fladd@b+1)^0,w,c
  7739  000B1C  100A               	iorwf	(___fladd@b+2)^0,w,c
  7740  000B1E  100B               	iorwf	(___fladd@b+3)^0,w,c
  7741  000B20  A4D8               	btfss	status,2,c
  7742  000B22  EF95  F005         	goto	u2441
  7743  000B26  EF98  F005         	goto	u2440
  7744  000B2A                     u2441:
  7745  000B2A  FFFF               	dw	65535	; assembler added errata NOP
  7746  000B2C  EFDA  F005         	goto	l2741
  7747  000B30                     u2440:
  7748  000B30  FFFF               	dw	65535	; assembler added errata NOP
  7749  000B32  5017               	movf	___fladd@grs^0,w,c
  7750  000B34  A4D8               	btfss	status,2,c
  7751  000B36  EF9F  F005         	goto	u2451
  7752  000B3A  EFA2  F005         	goto	u2450
  7753  000B3E                     u2451:
  7754  000B3E  FFFF               	dw	65535	; assembler added errata NOP
  7755  000B40  EFDA  F005         	goto	l2741
  7756  000B44                     u2450:
  7757  000B44  FFFF               	dw	65535	; assembler added errata NOP
  7758  000B46  0E00               	movlw	0
  7759  000B48  6E08               	movwf	?___fladd^0,c
  7760  000B4A  0E00               	movlw	0
  7761  000B4C  6E09               	movwf	(?___fladd+1)^0,c
  7762  000B4E  0E00               	movlw	0
  7763  000B50  6E0A               	movwf	(?___fladd+2)^0,c
  7764  000B52  0E00               	movlw	0
  7765  000B54  6E0B               	movwf	(?___fladd+3)^0,c
  7766  000B56  EF96  F006         	goto	l945
  7767  000B5A                     l2725:
  7768  000B5A  FFFF               	dw	65535	; assembler added errata NOP
  7769  000B5C  90D8               	bcf	status,0,c
  7770  000B5E  3608               	rlcf	___fladd@b^0,f,c
  7771  000B60  3609               	rlcf	(___fladd@b+1)^0,f,c
  7772  000B62  360A               	rlcf	(___fladd@b+2)^0,f,c
  7773  000B64  360B               	rlcf	(___fladd@b+3)^0,f,c
  7774  000B66  AE17               	btfss	___fladd@grs^0,7,c
  7775  000B68  EFB8  F005         	goto	u2461
  7776  000B6C  EFBB  F005         	goto	u2460
  7777  000B70                     u2461:
  7778  000B70  FFFF               	dw	65535	; assembler added errata NOP
  7779  000B72  EFBD  F005         	goto	l2731
  7780  000B76                     u2460:
  7781  000B76  FFFF               	dw	65535	; assembler added errata NOP
  7782  000B78  8008               	bsf	___fladd@b^0,0,c
  7783  000B7A                     l2731:
  7784  000B7A  FFFF               	dw	65535	; assembler added errata NOP
  7785  000B7C  A017               	btfss	___fladd@grs^0,0,c
  7786  000B7E  EFC3  F005         	goto	u2471
  7787  000B82  EFC6  F005         	goto	u2470
  7788  000B86                     u2471:
  7789  000B86  FFFF               	dw	65535	; assembler added errata NOP
  7790  000B88  EFCB  F005         	goto	l2735
  7791  000B8C                     u2470:
  7792  000B8C  FFFF               	dw	65535	; assembler added errata NOP
  7793  000B8E  80D8               	bsf	status,0,c
  7794  000B90  3617               	rlcf	___fladd@grs^0,f,c
  7795  000B92  EFCE  F005         	goto	l2737
  7796  000B96                     l2735:
  7797  000B96  FFFF               	dw	65535	; assembler added errata NOP
  7798  000B98  90D8               	bcf	status,0,c
  7799  000B9A  3617               	rlcf	___fladd@grs^0,f,c
  7800  000B9C                     l2737:
  7801  000B9C  FFFF               	dw	65535	; assembler added errata NOP
  7802  000B9E  5016               	movf	___fladd@bexp^0,w,c
  7803  000BA0  B4D8               	btfsc	status,2,c
  7804  000BA2  EFD5  F005         	goto	u2481
  7805  000BA6  EFD8  F005         	goto	u2480
  7806  000BAA                     u2481:
  7807  000BAA  FFFF               	dw	65535	; assembler added errata NOP
  7808  000BAC  EFDA  F005         	goto	l2741
  7809  000BB0                     u2480:
  7810  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  7811  000BB2  0616               	decf	___fladd@bexp^0,f,c
  7812  000BB4                     l2741:
  7813  000BB4  FFFF               	dw	65535	; assembler added errata NOP
  7814  000BB6  AE0A               	btfss	(___fladd@b+2)^0,7,c
  7815  000BB8  EFE0  F005         	goto	u2491
  7816  000BBC  EFE3  F005         	goto	u2490
  7817  000BC0                     u2491:
  7818  000BC0  FFFF               	dw	65535	; assembler added errata NOP
  7819  000BC2  EFAD  F005         	goto	l2725
  7820  000BC6                     u2490:
  7821  000BC6                     l2743:
  7822  000BC6  FFFF               	dw	65535	; assembler added errata NOP
  7823  000BC8  0E00               	movlw	0
  7824  000BCA  6E15               	movwf	___fladd@aexp^0,c
  7825  000BCC  AE17               	btfss	___fladd@grs^0,7,c
  7826  000BCE  EFEB  F005         	goto	u2501
  7827  000BD2  EFEE  F005         	goto	u2500
  7828  000BD6                     u2501:
  7829  000BD6  FFFF               	dw	65535	; assembler added errata NOP
  7830  000BD8  EF0D  F006         	goto	l962
  7831  000BDC                     u2500:
  7832  000BDC  FFFF               	dw	65535	; assembler added errata NOP
  7833  000BDE  C017  F010         	movff	___fladd@grs,??___fladd
  7834  000BE2  0E7F               	movlw	127
  7835  000BE4  1610               	andwf	??___fladd^0,f,c
  7836  000BE6  B4D8               	btfsc	status,2,c
  7837  000BE8  EFF8  F005         	goto	u2511
  7838  000BEC  EFFB  F005         	goto	u2510
  7839  000BF0                     u2511:
  7840  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  7841  000BF2  EF01  F006         	goto	l963
  7842  000BF6                     u2510:
  7843  000BF6  FFFF               	dw	65535	; assembler added errata NOP
  7844  000BF8                     l2749:
  7845  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  7846  000BFA  0E01               	movlw	1
  7847  000BFC  6E15               	movwf	___fladd@aexp^0,c
  7848  000BFE  EF0D  F006         	goto	l962
  7849  000C02                     l963:
  7850  000C02  FFFF               	dw	65535	; assembler added errata NOP
  7851  000C04  A008               	btfss	___fladd@b^0,0,c
  7852  000C06  EF07  F006         	goto	u2521
  7853  000C0A  EF0A  F006         	goto	u2520
  7854  000C0E                     u2521:
  7855  000C0E  FFFF               	dw	65535	; assembler added errata NOP
  7856  000C10  EF0D  F006         	goto	l962
  7857  000C14                     u2520:
  7858  000C14  FFFF               	dw	65535	; assembler added errata NOP
  7859  000C16  EFFC  F005         	goto	l2749
  7860  000C1A                     l962:
  7861  000C1A  FFFF               	dw	65535	; assembler added errata NOP
  7862  000C1C  5015               	movf	___fladd@aexp^0,w,c
  7863  000C1E  B4D8               	btfsc	status,2,c
  7864  000C20  EF14  F006         	goto	u2531
  7865  000C24  EF17  F006         	goto	u2530
  7866  000C28                     u2531:
  7867  000C28  FFFF               	dw	65535	; assembler added errata NOP
  7868  000C2A  EF47  F006         	goto	l2761
  7869  000C2E                     u2530:
  7870  000C2E  FFFF               	dw	65535	; assembler added errata NOP
  7871  000C30  0E01               	movlw	1
  7872  000C32  2608               	addwf	___fladd@b^0,f,c
  7873  000C34  0E00               	movlw	0
  7874  000C36  2209               	addwfc	(___fladd@b+1)^0,f,c
  7875  000C38  220A               	addwfc	(___fladd@b+2)^0,f,c
  7876  000C3A  220B               	addwfc	(___fladd@b+3)^0,f,c
  7877  000C3C  A00B               	btfss	(___fladd@b+3)^0,0,c
  7878  000C3E  EF23  F006         	goto	u2541
  7879  000C42  EF26  F006         	goto	u2540
  7880  000C46                     u2541:
  7881  000C46  FFFF               	dw	65535	; assembler added errata NOP
  7882  000C48  EF47  F006         	goto	l2761
  7883  000C4C                     u2540:
  7884  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  7885  000C4E  C008  F010         	movff	___fladd@b,??___fladd
  7886  000C52  C009  F011         	movff	___fladd@b+1,??___fladd+1
  7887  000C56  C00A  F012         	movff	___fladd@b+2,??___fladd+2
  7888  000C5A  C00B  F013         	movff	___fladd@b+3,??___fladd+3
  7889  000C5E  3413               	rlcf	(??___fladd+3)^0,w,c
  7890  000C60  3213               	rrcf	(??___fladd+3)^0,f,c
  7891  000C62  3212               	rrcf	(??___fladd+2)^0,f,c
  7892  000C64  3211               	rrcf	(??___fladd+1)^0,f,c
  7893  000C66  3210               	rrcf	??___fladd^0,f,c
  7894  000C68  C010  F008         	movff	??___fladd,___fladd@b
  7895  000C6C  C011  F009         	movff	??___fladd+1,___fladd@b+1
  7896  000C70  C012  F00A         	movff	??___fladd+2,___fladd@b+2
  7897  000C74  C013  F00B         	movff	??___fladd+3,___fladd@b+3
  7898  000C78  2816               	incf	___fladd@bexp^0,w,c
  7899  000C7A  B4D8               	btfsc	status,2,c
  7900  000C7C  EF42  F006         	goto	u2551
  7901  000C80  EF45  F006         	goto	u2550
  7902  000C84                     u2551:
  7903  000C84  FFFF               	dw	65535	; assembler added errata NOP
  7904  000C86  EF47  F006         	goto	l2761
  7905  000C8A                     u2550:
  7906  000C8A  FFFF               	dw	65535	; assembler added errata NOP
  7907  000C8C  2A16               	incf	___fladd@bexp^0,f,c
  7908  000C8E                     l2761:
  7909  000C8E  FFFF               	dw	65535	; assembler added errata NOP
  7910  000C90  2816               	incf	___fladd@bexp^0,w,c
  7911  000C92  B4D8               	btfsc	status,2,c
  7912  000C94  EF4E  F006         	goto	u2561
  7913  000C98  EF51  F006         	goto	u2560
  7914  000C9C                     u2561:
  7915  000C9C  FFFF               	dw	65535	; assembler added errata NOP
  7916  000C9E  EF5B  F006         	goto	l2765
  7917  000CA2                     u2560:
  7918  000CA2  FFFF               	dw	65535	; assembler added errata NOP
  7919  000CA4  5016               	movf	___fladd@bexp^0,w,c
  7920  000CA6  A4D8               	btfss	status,2,c
  7921  000CA8  EF58  F006         	goto	u2571
  7922  000CAC  EF5B  F006         	goto	u2570
  7923  000CB0                     u2571:
  7924  000CB0  FFFF               	dw	65535	; assembler added errata NOP
  7925  000CB2  EF70  F006         	goto	l2769
  7926  000CB6                     u2570:
  7927  000CB6                     l2765:
  7928  000CB6  FFFF               	dw	65535	; assembler added errata NOP
  7929  000CB8  0E00               	movlw	0
  7930  000CBA  6E08               	movwf	___fladd@b^0,c
  7931  000CBC  0E00               	movlw	0
  7932  000CBE  6E09               	movwf	(___fladd@b+1)^0,c
  7933  000CC0  0E00               	movlw	0
  7934  000CC2  6E0A               	movwf	(___fladd@b+2)^0,c
  7935  000CC4  0E00               	movlw	0
  7936  000CC6  6E0B               	movwf	(___fladd@b+3)^0,c
  7937  000CC8  5016               	movf	___fladd@bexp^0,w,c
  7938  000CCA  A4D8               	btfss	status,2,c
  7939  000CCC  EF6A  F006         	goto	u2581
  7940  000CD0  EF6D  F006         	goto	u2580
  7941  000CD4                     u2581:
  7942  000CD4  FFFF               	dw	65535	; assembler added errata NOP
  7943  000CD6  EF70  F006         	goto	l2769
  7944  000CDA                     u2580:
  7945  000CDA  FFFF               	dw	65535	; assembler added errata NOP
  7946  000CDC  0E00               	movlw	0
  7947  000CDE  6E14               	movwf	___fladd@signs^0,c
  7948  000CE0                     l2769:
  7949  000CE0  FFFF               	dw	65535	; assembler added errata NOP
  7950  000CE2  A016               	btfss	___fladd@bexp^0,0,c
  7951  000CE4  EF76  F006         	goto	u2591
  7952  000CE8  EF79  F006         	goto	u2590
  7953  000CEC                     u2591:
  7954  000CEC  FFFF               	dw	65535	; assembler added errata NOP
  7955  000CEE  EF7D  F006         	goto	l2773
  7956  000CF2                     u2590:
  7957  000CF2  FFFF               	dw	65535	; assembler added errata NOP
  7958  000CF4  8E0A               	bsf	(___fladd@b+2)^0,7,c
  7959  000CF6  EF7F  F006         	goto	l2775
  7960  000CFA                     l2773:
  7961  000CFA  FFFF               	dw	65535	; assembler added errata NOP
  7962  000CFC  9E0A               	bcf	(___fladd@b+2)^0,7,c
  7963  000CFE                     l2775:
  7964  000CFE  FFFF               	dw	65535	; assembler added errata NOP
  7965  000D00  90D8               	bcf	status,0,c
  7966  000D02  3016               	rrcf	___fladd@bexp^0,w,c
  7967  000D04  6E0B               	movwf	(___fladd@b+3)^0,c
  7968  000D06  AE14               	btfss	___fladd@signs^0,7,c
  7969  000D08  EF88  F006         	goto	u2601
  7970  000D0C  EF8B  F006         	goto	u2600
  7971  000D10                     u2601:
  7972  000D10  FFFF               	dw	65535	; assembler added errata NOP
  7973  000D12  EF8D  F006         	goto	l2781
  7974  000D16                     u2600:
  7975  000D16  FFFF               	dw	65535	; assembler added errata NOP
  7976  000D18  8E0B               	bsf	(___fladd@b+3)^0,7,c
  7977  000D1A                     l2781:
  7978  000D1A  FFFF               	dw	65535	; assembler added errata NOP
  7979  000D1C  C008  F008         	movff	___fladd@b,?___fladd
  7980  000D20  C009  F009         	movff	___fladd@b+1,?___fladd+1
  7981  000D24  C00A  F00A         	movff	___fladd@b+2,?___fladd+2
  7982  000D28  C00B  F00B         	movff	___fladd@b+3,?___fladd+3
  7983  000D2C                     l945:
  7984  000D2C  FFFF               	dw	65535	; assembler added errata NOP
  7985  000D2E  0012               	return		;funcret
  7986  000D30  FFFF               	dw	65535	; errata NOP
  7987  000D32                     __end_of___fladd:
  7988                           	callstack 0
  7989                           
  7990 ;; *************** function ___flneg *****************
  7991 ;; Defined at:
  7992 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  f1              4    7[COMRAM] unsigned char 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;		None
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  4    7[COMRAM] unsigned char 
  7999 ;; Registers used:
  8000 ;;		wreg, status,2, status,0
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8006 ;;      Params:         4       0       0       0       0       0       0
  8007 ;;      Locals:         0       0       0       0       0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0
  8009 ;;      Totals:         4       0       0       0       0       0       0
  8010 ;;Total ram usage:        4 bytes
  8011 ;; Hardware stack levels used: 1
  8012 ;; Hardware stack levels required when called: 1
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_roundf
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           	psect	text31
  8021  002F4E                     __ptext31:
  8022                           	callstack 0
  8023  002F4E                     ___flneg:
  8024                           	callstack 0
  8025  002F4E  FFFF               	dw	65535	; assembler added errata NOP
  8026  002F50  5008               	movf	___flneg@f1^0,w,c
  8027  002F52  1009               	iorwf	(___flneg@f1+1)^0,w,c
  8028  002F54  100A               	iorwf	(___flneg@f1+2)^0,w,c
  8029  002F56  100B               	iorwf	(___flneg@f1+3)^0,w,c
  8030  002F58  B4D8               	btfsc	status,2,c
  8031  002F5A  EFB1  F017         	goto	u3471
  8032  002F5E  EFB4  F017         	goto	u3470
  8033  002F62                     u3471:
  8034  002F62  FFFF               	dw	65535	; assembler added errata NOP
  8035  002F64  EFBD  F017         	goto	l3369
  8036  002F68                     u3470:
  8037  002F68  FFFF               	dw	65535	; assembler added errata NOP
  8038  002F6A  0E00               	movlw	0
  8039  002F6C  1A08               	xorwf	___flneg@f1^0,f,c
  8040  002F6E  0E00               	movlw	0
  8041  002F70  1A09               	xorwf	(___flneg@f1+1)^0,f,c
  8042  002F72  0E00               	movlw	0
  8043  002F74  1A0A               	xorwf	(___flneg@f1+2)^0,f,c
  8044  002F76  0E80               	movlw	128
  8045  002F78  1A0B               	xorwf	(___flneg@f1+3)^0,f,c
  8046  002F7A                     l3369:
  8047  002F7A  FFFF               	dw	65535	; assembler added errata NOP
  8048  002F7C  C008  F008         	movff	___flneg@f1,?___flneg
  8049  002F80  C009  F009         	movff	___flneg@f1+1,?___flneg+1
  8050  002F84  C00A  F00A         	movff	___flneg@f1+2,?___flneg+2
  8051  002F88  C00B  F00B         	movff	___flneg@f1+3,?___flneg+3
  8052  002F8C  0012               	return		;funcret
  8053  002F8E  FFFF               	dw	65535	; errata NOP
  8054  002F90                     __end_of___flneg:
  8055                           	callstack 0
  8056                           
  8057 ;; *************** function ___flmul *****************
  8058 ;; Defined at:
  8059 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  b               4    7[COMRAM] unsigned char 
  8062 ;;  a               4   11[COMRAM] unsigned char 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  prod            4   26[COMRAM] struct .
  8065 ;;  grs             4   20[COMRAM] unsigned long 
  8066 ;;  temp            2   30[COMRAM] struct .
  8067 ;;  bexp            1   25[COMRAM] unsigned char 
  8068 ;;  aexp            1   24[COMRAM] unsigned char 
  8069 ;;  sign            1   19[COMRAM] unsigned char 
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  4    7[COMRAM] unsigned char 
  8072 ;; Registers used:
  8073 ;;		wreg, status,2, status,0, prodl, prodh
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8079 ;;      Params:         8       0       0       0       0       0       0
  8080 ;;      Locals:        13       0       0       0       0       0       0
  8081 ;;      Temps:          4       0       0       0       0       0       0
  8082 ;;      Totals:        25       0       0       0       0       0       0
  8083 ;;Total ram usage:       25 bytes
  8084 ;; Hardware stack levels used: 1
  8085 ;; Hardware stack levels required when called: 1
  8086 ;; This function calls:
  8087 ;;		Nothing
  8088 ;; This function is called by:
  8089 ;;		_roundf
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text32
  8094  000D32                     __ptext32:
  8095                           	callstack 0
  8096  000D32                     ___flmul:
  8097                           	callstack 0
  8098  000D32  FFFF               	dw	65535	; assembler added errata NOP
  8099  000D34  500B               	movf	(___flmul@b+3)^0,w,c
  8100  000D36  0B80               	andlw	128
  8101  000D38  6E14               	movwf	___flmul@sign^0,c
  8102  000D3A  500B               	movf	(___flmul@b+3)^0,w,c
  8103  000D3C  240B               	addwf	(___flmul@b+3)^0,w,c
  8104  000D3E  6E1A               	movwf	___flmul@bexp^0,c
  8105  000D40  AE0A               	btfss	(___flmul@b+2)^0,7,c
  8106  000D42  EFA5  F006         	goto	u3231
  8107  000D46  EFA8  F006         	goto	u3230
  8108  000D4A                     u3231:
  8109  000D4A  FFFF               	dw	65535	; assembler added errata NOP
  8110  000D4C  EFAA  F006         	goto	l3213
  8111  000D50                     u3230:
  8112  000D50  FFFF               	dw	65535	; assembler added errata NOP
  8113  000D52  801A               	bsf	___flmul@bexp^0,0,c
  8114  000D54                     l3213:
  8115  000D54  FFFF               	dw	65535	; assembler added errata NOP
  8116  000D56  501A               	movf	___flmul@bexp^0,w,c
  8117  000D58  B4D8               	btfsc	status,2,c
  8118  000D5A  EFB1  F006         	goto	u3241
  8119  000D5E  EFB4  F006         	goto	u3240
  8120  000D62                     u3241:
  8121  000D62  FFFF               	dw	65535	; assembler added errata NOP
  8122  000D64  EFCB  F006         	goto	l3221
  8123  000D68                     u3240:
  8124  000D68  FFFF               	dw	65535	; assembler added errata NOP
  8125  000D6A  281A               	incf	___flmul@bexp^0,w,c
  8126  000D6C  A4D8               	btfss	status,2,c
  8127  000D6E  EFBB  F006         	goto	u3251
  8128  000D72  EFBE  F006         	goto	u3250
  8129  000D76                     u3251:
  8130  000D76  FFFF               	dw	65535	; assembler added errata NOP
  8131  000D78  EFC7  F006         	goto	l3219
  8132  000D7C                     u3250:
  8133  000D7C  FFFF               	dw	65535	; assembler added errata NOP
  8134  000D7E  0E00               	movlw	0
  8135  000D80  6E08               	movwf	___flmul@b^0,c
  8136  000D82  0E00               	movlw	0
  8137  000D84  6E09               	movwf	(___flmul@b+1)^0,c
  8138  000D86  0E00               	movlw	0
  8139  000D88  6E0A               	movwf	(___flmul@b+2)^0,c
  8140  000D8A  0E00               	movlw	0
  8141  000D8C  6E0B               	movwf	(___flmul@b+3)^0,c
  8142  000D8E                     l3219:
  8143  000D8E  FFFF               	dw	65535	; assembler added errata NOP
  8144  000D90  8E0A               	bsf	(___flmul@b+2)^0,7,c
  8145  000D92  EFD4  F006         	goto	l3223
  8146  000D96                     l3221:
  8147  000D96  FFFF               	dw	65535	; assembler added errata NOP
  8148  000D98  0E00               	movlw	0
  8149  000D9A  6E08               	movwf	___flmul@b^0,c
  8150  000D9C  0E00               	movlw	0
  8151  000D9E  6E09               	movwf	(___flmul@b+1)^0,c
  8152  000DA0  0E00               	movlw	0
  8153  000DA2  6E0A               	movwf	(___flmul@b+2)^0,c
  8154  000DA4  0E00               	movlw	0
  8155  000DA6  6E0B               	movwf	(___flmul@b+3)^0,c
  8156  000DA8                     l3223:
  8157  000DA8  FFFF               	dw	65535	; assembler added errata NOP
  8158  000DAA  500F               	movf	(___flmul@a+3)^0,w,c
  8159  000DAC  0B80               	andlw	128
  8160  000DAE  1A14               	xorwf	___flmul@sign^0,f,c
  8161  000DB0  500F               	movf	(___flmul@a+3)^0,w,c
  8162  000DB2  240F               	addwf	(___flmul@a+3)^0,w,c
  8163  000DB4  6E19               	movwf	___flmul@aexp^0,c
  8164  000DB6  AE0E               	btfss	(___flmul@a+2)^0,7,c
  8165  000DB8  EFE0  F006         	goto	u3261
  8166  000DBC  EFE3  F006         	goto	u3260
  8167  000DC0                     u3261:
  8168  000DC0  FFFF               	dw	65535	; assembler added errata NOP
  8169  000DC2  EFE5  F006         	goto	l3231
  8170  000DC6                     u3260:
  8171  000DC6  FFFF               	dw	65535	; assembler added errata NOP
  8172  000DC8  8019               	bsf	___flmul@aexp^0,0,c
  8173  000DCA                     l3231:
  8174  000DCA  FFFF               	dw	65535	; assembler added errata NOP
  8175  000DCC  5019               	movf	___flmul@aexp^0,w,c
  8176  000DCE  B4D8               	btfsc	status,2,c
  8177  000DD0  EFEC  F006         	goto	u3271
  8178  000DD4  EFEF  F006         	goto	u3270
  8179  000DD8                     u3271:
  8180  000DD8  FFFF               	dw	65535	; assembler added errata NOP
  8181  000DDA  EF06  F007         	goto	l3239
  8182  000DDE                     u3270:
  8183  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  8184  000DE0  2819               	incf	___flmul@aexp^0,w,c
  8185  000DE2  A4D8               	btfss	status,2,c
  8186  000DE4  EFF6  F006         	goto	u3281
  8187  000DE8  EFF9  F006         	goto	u3280
  8188  000DEC                     u3281:
  8189  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  8190  000DEE  EF02  F007         	goto	l3237
  8191  000DF2                     u3280:
  8192  000DF2  FFFF               	dw	65535	; assembler added errata NOP
  8193  000DF4  0E00               	movlw	0
  8194  000DF6  6E0C               	movwf	___flmul@a^0,c
  8195  000DF8  0E00               	movlw	0
  8196  000DFA  6E0D               	movwf	(___flmul@a+1)^0,c
  8197  000DFC  0E00               	movlw	0
  8198  000DFE  6E0E               	movwf	(___flmul@a+2)^0,c
  8199  000E00  0E00               	movlw	0
  8200  000E02  6E0F               	movwf	(___flmul@a+3)^0,c
  8201  000E04                     l3237:
  8202  000E04  FFFF               	dw	65535	; assembler added errata NOP
  8203  000E06  8E0E               	bsf	(___flmul@a+2)^0,7,c
  8204  000E08  EF0F  F007         	goto	l1022
  8205  000E0C                     l3239:
  8206  000E0C  FFFF               	dw	65535	; assembler added errata NOP
  8207  000E0E  0E00               	movlw	0
  8208  000E10  6E0C               	movwf	___flmul@a^0,c
  8209  000E12  0E00               	movlw	0
  8210  000E14  6E0D               	movwf	(___flmul@a+1)^0,c
  8211  000E16  0E00               	movlw	0
  8212  000E18  6E0E               	movwf	(___flmul@a+2)^0,c
  8213  000E1A  0E00               	movlw	0
  8214  000E1C  6E0F               	movwf	(___flmul@a+3)^0,c
  8215  000E1E                     l1022:
  8216  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  8217  000E20  5019               	movf	___flmul@aexp^0,w,c
  8218  000E22  B4D8               	btfsc	status,2,c
  8219  000E24  EF16  F007         	goto	u3291
  8220  000E28  EF19  F007         	goto	u3290
  8221  000E2C                     u3291:
  8222  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  8223  000E2E  EF23  F007         	goto	l3243
  8224  000E32                     u3290:
  8225  000E32  FFFF               	dw	65535	; assembler added errata NOP
  8226  000E34  501A               	movf	___flmul@bexp^0,w,c
  8227  000E36  A4D8               	btfss	status,2,c
  8228  000E38  EF20  F007         	goto	u3301
  8229  000E3C  EF23  F007         	goto	u3300
  8230  000E40                     u3301:
  8231  000E40  FFFF               	dw	65535	; assembler added errata NOP
  8232  000E42  EF2E  F007         	goto	l3247
  8233  000E46                     u3300:
  8234  000E46                     l3243:
  8235  000E46  FFFF               	dw	65535	; assembler added errata NOP
  8236  000E48  0E00               	movlw	0
  8237  000E4A  6E08               	movwf	?___flmul^0,c
  8238  000E4C  0E00               	movlw	0
  8239  000E4E  6E09               	movwf	(?___flmul+1)^0,c
  8240  000E50  0E00               	movlw	0
  8241  000E52  6E0A               	movwf	(?___flmul+2)^0,c
  8242  000E54  0E00               	movlw	0
  8243  000E56  6E0B               	movwf	(?___flmul+3)^0,c
  8244  000E58  EFE8  F008         	goto	l1026
  8245  000E5C                     l3247:
  8246  000E5C  FFFF               	dw	65535	; assembler added errata NOP
  8247  000E5E  500E               	movf	(___flmul@a+2)^0,w,c
  8248  000E60  0208               	mulwf	___flmul@b^0,c
  8249  000E62  CFF3 F01F          	movff	prodl,___flmul@temp
  8250  000E66  CFF4 F020          	movff	prodh,___flmul@temp+1
  8251  000E6A  501F               	movf	___flmul@temp^0,w,c
  8252  000E6C  6E15               	movwf	___flmul@grs^0,c
  8253  000E6E  6A16               	clrf	(___flmul@grs+1)^0,c
  8254  000E70  6A17               	clrf	(___flmul@grs+2)^0,c
  8255  000E72  6A18               	clrf	(___flmul@grs+3)^0,c
  8256  000E74  5020               	movf	(___flmul@temp+1)^0,w,c
  8257  000E76  6E1B               	movwf	___flmul@prod^0,c
  8258  000E78  6A1C               	clrf	(___flmul@prod+1)^0,c
  8259  000E7A  6A1D               	clrf	(___flmul@prod+2)^0,c
  8260  000E7C  6A1E               	clrf	(___flmul@prod+3)^0,c
  8261  000E7E  500D               	movf	(___flmul@a+1)^0,w,c
  8262  000E80  0209               	mulwf	(___flmul@b+1)^0,c
  8263  000E82  CFF3 F01F          	movff	prodl,___flmul@temp
  8264  000E86  CFF4 F020          	movff	prodh,___flmul@temp+1
  8265  000E8A  501F               	movf	___flmul@temp^0,w,c
  8266  000E8C  2615               	addwf	___flmul@grs^0,f,c
  8267  000E8E  0E00               	movlw	0
  8268  000E90  2216               	addwfc	(___flmul@grs+1)^0,f,c
  8269  000E92  2217               	addwfc	(___flmul@grs+2)^0,f,c
  8270  000E94  2218               	addwfc	(___flmul@grs+3)^0,f,c
  8271  000E96  5020               	movf	(___flmul@temp+1)^0,w,c
  8272  000E98  261B               	addwf	___flmul@prod^0,f,c
  8273  000E9A  0E00               	movlw	0
  8274  000E9C  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8275  000E9E  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8276  000EA0  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8277  000EA2  500C               	movf	___flmul@a^0,w,c
  8278  000EA4  020A               	mulwf	(___flmul@b+2)^0,c
  8279  000EA6  CFF3 F01F          	movff	prodl,___flmul@temp
  8280  000EAA  CFF4 F020          	movff	prodh,___flmul@temp+1
  8281  000EAE  501F               	movf	___flmul@temp^0,w,c
  8282  000EB0  2615               	addwf	___flmul@grs^0,f,c
  8283  000EB2  0E00               	movlw	0
  8284  000EB4  2216               	addwfc	(___flmul@grs+1)^0,f,c
  8285  000EB6  2217               	addwfc	(___flmul@grs+2)^0,f,c
  8286  000EB8  2218               	addwfc	(___flmul@grs+3)^0,f,c
  8287  000EBA  5020               	movf	(___flmul@temp+1)^0,w,c
  8288  000EBC  261B               	addwf	___flmul@prod^0,f,c
  8289  000EBE  0E00               	movlw	0
  8290  000EC0  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8291  000EC2  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8292  000EC4  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8293  000EC6  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  8294  000ECA  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  8295  000ECE  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  8296  000ED2  6A15               	clrf	___flmul@grs^0,c
  8297  000ED4  500C               	movf	___flmul@a^0,w,c
  8298  000ED6  0209               	mulwf	(___flmul@b+1)^0,c
  8299  000ED8  CFF3 F01F          	movff	prodl,___flmul@temp
  8300  000EDC  CFF4 F020          	movff	prodh,___flmul@temp+1
  8301  000EE0  501F               	movf	___flmul@temp^0,w,c
  8302  000EE2  2615               	addwf	___flmul@grs^0,f,c
  8303  000EE4  5020               	movf	(___flmul@temp+1)^0,w,c
  8304  000EE6  2216               	addwfc	(___flmul@grs+1)^0,f,c
  8305  000EE8  0E00               	movlw	0
  8306  000EEA  2217               	addwfc	(___flmul@grs+2)^0,f,c
  8307  000EEC  0E00               	movlw	0
  8308  000EEE  2218               	addwfc	(___flmul@grs+3)^0,f,c
  8309  000EF0  500D               	movf	(___flmul@a+1)^0,w,c
  8310  000EF2  0208               	mulwf	___flmul@b^0,c
  8311  000EF4  CFF3 F01F          	movff	prodl,___flmul@temp
  8312  000EF8  CFF4 F020          	movff	prodh,___flmul@temp+1
  8313  000EFC  501F               	movf	___flmul@temp^0,w,c
  8314  000EFE  2615               	addwf	___flmul@grs^0,f,c
  8315  000F00  5020               	movf	(___flmul@temp+1)^0,w,c
  8316  000F02  2216               	addwfc	(___flmul@grs+1)^0,f,c
  8317  000F04  0E00               	movlw	0
  8318  000F06  2217               	addwfc	(___flmul@grs+2)^0,f,c
  8319  000F08  0E00               	movlw	0
  8320  000F0A  2218               	addwfc	(___flmul@grs+3)^0,f,c
  8321  000F0C  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  8322  000F10  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  8323  000F14  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  8324  000F18  6A15               	clrf	___flmul@grs^0,c
  8325  000F1A  500C               	movf	___flmul@a^0,w,c
  8326  000F1C  0208               	mulwf	___flmul@b^0,c
  8327  000F1E  CFF3 F01F          	movff	prodl,___flmul@temp
  8328  000F22  CFF4 F020          	movff	prodh,___flmul@temp+1
  8329  000F26  501F               	movf	___flmul@temp^0,w,c
  8330  000F28  2615               	addwf	___flmul@grs^0,f,c
  8331  000F2A  5020               	movf	(___flmul@temp+1)^0,w,c
  8332  000F2C  2216               	addwfc	(___flmul@grs+1)^0,f,c
  8333  000F2E  0E00               	movlw	0
  8334  000F30  2217               	addwfc	(___flmul@grs+2)^0,f,c
  8335  000F32  0E00               	movlw	0
  8336  000F34  2218               	addwfc	(___flmul@grs+3)^0,f,c
  8337  000F36  500E               	movf	(___flmul@a+2)^0,w,c
  8338  000F38  0209               	mulwf	(___flmul@b+1)^0,c
  8339  000F3A  CFF3 F01F          	movff	prodl,___flmul@temp
  8340  000F3E  CFF4 F020          	movff	prodh,___flmul@temp+1
  8341  000F42  501F               	movf	___flmul@temp^0,w,c
  8342  000F44  261B               	addwf	___flmul@prod^0,f,c
  8343  000F46  5020               	movf	(___flmul@temp+1)^0,w,c
  8344  000F48  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8345  000F4A  0E00               	movlw	0
  8346  000F4C  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8347  000F4E  0E00               	movlw	0
  8348  000F50  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8349  000F52  500D               	movf	(___flmul@a+1)^0,w,c
  8350  000F54  020A               	mulwf	(___flmul@b+2)^0,c
  8351  000F56  CFF3 F01F          	movff	prodl,___flmul@temp
  8352  000F5A  CFF4 F020          	movff	prodh,___flmul@temp+1
  8353  000F5E  501F               	movf	___flmul@temp^0,w,c
  8354  000F60  261B               	addwf	___flmul@prod^0,f,c
  8355  000F62  5020               	movf	(___flmul@temp+1)^0,w,c
  8356  000F64  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8357  000F66  0E00               	movlw	0
  8358  000F68  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8359  000F6A  0E00               	movlw	0
  8360  000F6C  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8361  000F6E  500E               	movf	(___flmul@a+2)^0,w,c
  8362  000F70  020A               	mulwf	(___flmul@b+2)^0,c
  8363  000F72  CFF3 F01F          	movff	prodl,___flmul@temp
  8364  000F76  CFF4 F020          	movff	prodh,___flmul@temp+1
  8365  000F7A  501F               	movf	___flmul@temp^0,w,c
  8366  000F7C  6E10               	movwf	??___flmul^0,c
  8367  000F7E  5020               	movf	(___flmul@temp+1)^0,w,c
  8368  000F80  6E11               	movwf	(??___flmul+1)^0,c
  8369  000F82  6A12               	clrf	(??___flmul+2)^0,c
  8370  000F84  6A13               	clrf	(??___flmul+3)^0,c
  8371  000F86  C012  F013         	movff	??___flmul+2,??___flmul+3
  8372  000F8A  C011  F012         	movff	??___flmul+1,??___flmul+2
  8373  000F8E  C010  F011         	movff	??___flmul,??___flmul+1
  8374  000F92  6A10               	clrf	??___flmul^0,c
  8375  000F94  5010               	movf	??___flmul^0,w,c
  8376  000F96  261B               	addwf	___flmul@prod^0,f,c
  8377  000F98  5011               	movf	(??___flmul+1)^0,w,c
  8378  000F9A  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8379  000F9C  5012               	movf	(??___flmul+2)^0,w,c
  8380  000F9E  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8381  000FA0  5013               	movf	(??___flmul+3)^0,w,c
  8382  000FA2  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8383  000FA4  C015  F010         	movff	___flmul@grs,??___flmul
  8384  000FA8  C016  F011         	movff	___flmul@grs+1,??___flmul+1
  8385  000FAC  C017  F012         	movff	___flmul@grs+2,??___flmul+2
  8386  000FB0  C018  F013         	movff	___flmul@grs+3,??___flmul+3
  8387  000FB4  0E19               	movlw	25
  8388  000FB6  EFE3  F007         	goto	u3310
  8389  000FBA                     u3315:
  8390  000FBA  FFFF               	dw	65535	; assembler added errata NOP
  8391  000FBC  90D8               	bcf	status,0,c
  8392  000FBE  3213               	rrcf	(??___flmul+3)^0,f,c
  8393  000FC0  3212               	rrcf	(??___flmul+2)^0,f,c
  8394  000FC2  3211               	rrcf	(??___flmul+1)^0,f,c
  8395  000FC4  3210               	rrcf	??___flmul^0,f,c
  8396  000FC6                     u3310:
  8397  000FC6  FFFF               	dw	65535	; assembler added errata NOP
  8398  000FC8  2EE8               	decfsz	wreg,f,c
  8399  000FCA  EFDD  F007         	goto	u3315
  8400  000FCE  5010               	movf	??___flmul^0,w,c
  8401  000FD0  261B               	addwf	___flmul@prod^0,f,c
  8402  000FD2  5011               	movf	(??___flmul+1)^0,w,c
  8403  000FD4  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8404  000FD6  5012               	movf	(??___flmul+2)^0,w,c
  8405  000FD8  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8406  000FDA  5013               	movf	(??___flmul+3)^0,w,c
  8407  000FDC  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8408  000FDE  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  8409  000FE2  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  8410  000FE6  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  8411  000FEA  6A15               	clrf	___flmul@grs^0,c
  8412  000FEC  5019               	movf	___flmul@aexp^0,w,c
  8413  000FEE  C01A  F010         	movff	___flmul@bexp,??___flmul
  8414  000FF2  6A11               	clrf	(??___flmul+1)^0,c
  8415  000FF4  2610               	addwf	??___flmul^0,f,c
  8416  000FF6  0E00               	movlw	0
  8417  000FF8  2211               	addwfc	(??___flmul+1)^0,f,c
  8418  000FFA  0E82               	movlw	130
  8419  000FFC  2410               	addwf	??___flmul^0,w,c
  8420  000FFE  6E1F               	movwf	___flmul@temp^0,c
  8421  001000  0EFF               	movlw	255
  8422  001002  2011               	addwfc	(??___flmul+1)^0,w,c
  8423  001004  6E20               	movwf	(___flmul@temp+1)^0,c
  8424  001006  EF1E  F008         	goto	l3295
  8425  00100A                     l3289:
  8426  00100A  FFFF               	dw	65535	; assembler added errata NOP
  8427  00100C  90D8               	bcf	status,0,c
  8428  00100E  361B               	rlcf	___flmul@prod^0,f,c
  8429  001010  361C               	rlcf	(___flmul@prod+1)^0,f,c
  8430  001012  361D               	rlcf	(___flmul@prod+2)^0,f,c
  8431  001014  361E               	rlcf	(___flmul@prod+3)^0,f,c
  8432  001016  AE18               	btfss	(___flmul@grs+3)^0,7,c
  8433  001018  EF10  F008         	goto	u3321
  8434  00101C  EF13  F008         	goto	u3320
  8435  001020                     u3321:
  8436  001020  FFFF               	dw	65535	; assembler added errata NOP
  8437  001022  EF15  F008         	goto	l1029
  8438  001026                     u3320:
  8439  001026  FFFF               	dw	65535	; assembler added errata NOP
  8440  001028  801B               	bsf	___flmul@prod^0,0,c
  8441  00102A                     l1029:
  8442  00102A  FFFF               	dw	65535	; assembler added errata NOP
  8443  00102C  90D8               	bcf	status,0,c
  8444  00102E  3615               	rlcf	___flmul@grs^0,f,c
  8445  001030  3616               	rlcf	(___flmul@grs+1)^0,f,c
  8446  001032  3617               	rlcf	(___flmul@grs+2)^0,f,c
  8447  001034  3618               	rlcf	(___flmul@grs+3)^0,f,c
  8448  001036  061F               	decf	___flmul@temp^0,f,c
  8449  001038  A0D8               	btfss	status,0,c
  8450  00103A  0620               	decf	(___flmul@temp+1)^0,f,c
  8451  00103C                     l3295:
  8452  00103C  FFFF               	dw	65535	; assembler added errata NOP
  8453  00103E  AE1D               	btfss	(___flmul@prod+2)^0,7,c
  8454  001040  EF24  F008         	goto	u3331
  8455  001044  EF27  F008         	goto	u3330
  8456  001048                     u3331:
  8457  001048  FFFF               	dw	65535	; assembler added errata NOP
  8458  00104A  EF05  F008         	goto	l3289
  8459  00104E                     u3330:
  8460  00104E  FFFF               	dw	65535	; assembler added errata NOP
  8461  001050  0E00               	movlw	0
  8462  001052  6E19               	movwf	___flmul@aexp^0,c
  8463  001054  AE18               	btfss	(___flmul@grs+3)^0,7,c
  8464  001056  EF2F  F008         	goto	u3341
  8465  00105A  EF32  F008         	goto	u3340
  8466  00105E                     u3341:
  8467  00105E  FFFF               	dw	65535	; assembler added errata NOP
  8468  001060  EF5D  F008         	goto	l1031
  8469  001064                     u3340:
  8470  001064  FFFF               	dw	65535	; assembler added errata NOP
  8471  001066  0EFF               	movlw	255
  8472  001068  1415               	andwf	___flmul@grs^0,w,c
  8473  00106A  6E10               	movwf	??___flmul^0,c
  8474  00106C  0EFF               	movlw	255
  8475  00106E  1416               	andwf	(___flmul@grs+1)^0,w,c
  8476  001070  6E11               	movwf	(??___flmul+1)^0,c
  8477  001072  0EFF               	movlw	255
  8478  001074  1417               	andwf	(___flmul@grs+2)^0,w,c
  8479  001076  6E12               	movwf	(??___flmul+2)^0,c
  8480  001078  0E7F               	movlw	127
  8481  00107A  1418               	andwf	(___flmul@grs+3)^0,w,c
  8482  00107C  6E13               	movwf	(??___flmul+3)^0,c
  8483  00107E  5010               	movf	??___flmul^0,w,c
  8484  001080  1011               	iorwf	(??___flmul+1)^0,w,c
  8485  001082  1012               	iorwf	(??___flmul+2)^0,w,c
  8486  001084  1013               	iorwf	(??___flmul+3)^0,w,c
  8487  001086  B4D8               	btfsc	status,2,c
  8488  001088  EF48  F008         	goto	u3351
  8489  00108C  EF4B  F008         	goto	u3350
  8490  001090                     u3351:
  8491  001090  FFFF               	dw	65535	; assembler added errata NOP
  8492  001092  EF51  F008         	goto	l1032
  8493  001096                     u3350:
  8494  001096  FFFF               	dw	65535	; assembler added errata NOP
  8495  001098                     l3303:
  8496  001098  FFFF               	dw	65535	; assembler added errata NOP
  8497  00109A  0E01               	movlw	1
  8498  00109C  6E19               	movwf	___flmul@aexp^0,c
  8499  00109E  EF5D  F008         	goto	l1031
  8500  0010A2                     l1032:
  8501  0010A2  FFFF               	dw	65535	; assembler added errata NOP
  8502  0010A4  A01B               	btfss	___flmul@prod^0,0,c
  8503  0010A6  EF57  F008         	goto	u3361
  8504  0010AA  EF5A  F008         	goto	u3360
  8505  0010AE                     u3361:
  8506  0010AE  FFFF               	dw	65535	; assembler added errata NOP
  8507  0010B0  EF5D  F008         	goto	l1031
  8508  0010B4                     u3360:
  8509  0010B4  FFFF               	dw	65535	; assembler added errata NOP
  8510  0010B6  EF4C  F008         	goto	l3303
  8511  0010BA                     l1031:
  8512  0010BA  FFFF               	dw	65535	; assembler added errata NOP
  8513  0010BC  5019               	movf	___flmul@aexp^0,w,c
  8514  0010BE  B4D8               	btfsc	status,2,c
  8515  0010C0  EF64  F008         	goto	u3371
  8516  0010C4  EF67  F008         	goto	u3370
  8517  0010C8                     u3371:
  8518  0010C8  FFFF               	dw	65535	; assembler added errata NOP
  8519  0010CA  EF8E  F008         	goto	l3315
  8520  0010CE                     u3370:
  8521  0010CE  FFFF               	dw	65535	; assembler added errata NOP
  8522  0010D0  0E01               	movlw	1
  8523  0010D2  261B               	addwf	___flmul@prod^0,f,c
  8524  0010D4  0E00               	movlw	0
  8525  0010D6  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8526  0010D8  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8527  0010DA  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8528  0010DC  A01E               	btfss	(___flmul@prod+3)^0,0,c
  8529  0010DE  EF73  F008         	goto	u3381
  8530  0010E2  EF76  F008         	goto	u3380
  8531  0010E6                     u3381:
  8532  0010E6  FFFF               	dw	65535	; assembler added errata NOP
  8533  0010E8  EF8E  F008         	goto	l3315
  8534  0010EC                     u3380:
  8535  0010EC  FFFF               	dw	65535	; assembler added errata NOP
  8536  0010EE  C01B  F010         	movff	___flmul@prod,??___flmul
  8537  0010F2  C01C  F011         	movff	___flmul@prod+1,??___flmul+1
  8538  0010F6  C01D  F012         	movff	___flmul@prod+2,??___flmul+2
  8539  0010FA  C01E  F013         	movff	___flmul@prod+3,??___flmul+3
  8540  0010FE  3413               	rlcf	(??___flmul+3)^0,w,c
  8541  001100  3213               	rrcf	(??___flmul+3)^0,f,c
  8542  001102  3212               	rrcf	(??___flmul+2)^0,f,c
  8543  001104  3211               	rrcf	(??___flmul+1)^0,f,c
  8544  001106  3210               	rrcf	??___flmul^0,f,c
  8545  001108  C010  F01B         	movff	??___flmul,___flmul@prod
  8546  00110C  C011  F01C         	movff	??___flmul+1,___flmul@prod+1
  8547  001110  C012  F01D         	movff	??___flmul+2,___flmul@prod+2
  8548  001114  C013  F01E         	movff	??___flmul+3,___flmul@prod+3
  8549  001118  4A1F               	infsnz	___flmul@temp^0,f,c
  8550  00111A  2A20               	incf	(___flmul@temp+1)^0,f,c
  8551  00111C                     l3315:
  8552  00111C  FFFF               	dw	65535	; assembler added errata NOP
  8553  00111E  BE20               	btfsc	(___flmul@temp+1)^0,7,c
  8554  001120  EF9A  F008         	goto	u3391
  8555  001124  5020               	movf	(___flmul@temp+1)^0,w,c
  8556  001126  E109               	bnz	u3390
  8557  001128  281F               	incf	___flmul@temp^0,w,c
  8558  00112A  A0D8               	btfss	status,0,c
  8559  00112C  EF9A  F008         	goto	u3391
  8560  001130  EF9D  F008         	goto	u3390
  8561  001134                     u3391:
  8562  001134  FFFF               	dw	65535	; assembler added errata NOP
  8563  001136  EFA8  F008         	goto	l3319
  8564  00113A                     u3390:
  8565  00113A  FFFF               	dw	65535	; assembler added errata NOP
  8566  00113C  0E00               	movlw	0
  8567  00113E  6E1B               	movwf	___flmul@prod^0,c
  8568  001140  0E00               	movlw	0
  8569  001142  6E1C               	movwf	(___flmul@prod+1)^0,c
  8570  001144  0E80               	movlw	128
  8571  001146  6E1D               	movwf	(___flmul@prod+2)^0,c
  8572  001148  0E7F               	movlw	127
  8573  00114A  6E1E               	movwf	(___flmul@prod+3)^0,c
  8574  00114C  EFDD  F008         	goto	l3331
  8575  001150                     l3319:
  8576  001150  FFFF               	dw	65535	; assembler added errata NOP
  8577  001152  BE20               	btfsc	(___flmul@temp+1)^0,7,c
  8578  001154  EFB7  F008         	goto	u3400
  8579  001158  5020               	movf	(___flmul@temp+1)^0,w,c
  8580  00115A  E106               	bnz	u3401
  8581  00115C  041F               	decf	___flmul@temp^0,w,c
  8582  00115E  B0D8               	btfsc	status,0,c
  8583  001160  EFB4  F008         	goto	u3401
  8584  001164  EFB7  F008         	goto	u3400
  8585  001168                     u3401:
  8586  001168  FFFF               	dw	65535	; assembler added errata NOP
  8587  00116A  EFC4  F008         	goto	l1039
  8588  00116E                     u3400:
  8589  00116E  FFFF               	dw	65535	; assembler added errata NOP
  8590  001170  0E00               	movlw	0
  8591  001172  6E1B               	movwf	___flmul@prod^0,c
  8592  001174  0E00               	movlw	0
  8593  001176  6E1C               	movwf	(___flmul@prod+1)^0,c
  8594  001178  0E00               	movlw	0
  8595  00117A  6E1D               	movwf	(___flmul@prod+2)^0,c
  8596  00117C  0E00               	movlw	0
  8597  00117E  6E1E               	movwf	(___flmul@prod+3)^0,c
  8598  001180  0E00               	movlw	0
  8599  001182  6E14               	movwf	___flmul@sign^0,c
  8600  001184  EFDD  F008         	goto	l3331
  8601  001188                     l1039:
  8602  001188  FFFF               	dw	65535	; assembler added errata NOP
  8603  00118A  C01F  F01A         	movff	___flmul@temp,___flmul@bexp
  8604  00118E  0EFF               	movlw	255
  8605  001190  161B               	andwf	___flmul@prod^0,f,c
  8606  001192  0EFF               	movlw	255
  8607  001194  161C               	andwf	(___flmul@prod+1)^0,f,c
  8608  001196  0E7F               	movlw	127
  8609  001198  161D               	andwf	(___flmul@prod+2)^0,f,c
  8610  00119A  0E00               	movlw	0
  8611  00119C  161E               	andwf	(___flmul@prod+3)^0,f,c
  8612  00119E  A01A               	btfss	___flmul@bexp^0,0,c
  8613  0011A0  EFD4  F008         	goto	u3411
  8614  0011A4  EFD7  F008         	goto	u3410
  8615  0011A8                     u3411:
  8616  0011A8  FFFF               	dw	65535	; assembler added errata NOP
  8617  0011AA  EFD9  F008         	goto	l3329
  8618  0011AE                     u3410:
  8619  0011AE  FFFF               	dw	65535	; assembler added errata NOP
  8620  0011B0  8E1D               	bsf	(___flmul@prod+2)^0,7,c
  8621  0011B2                     l3329:
  8622  0011B2  FFFF               	dw	65535	; assembler added errata NOP
  8623  0011B4  90D8               	bcf	status,0,c
  8624  0011B6  301A               	rrcf	___flmul@bexp^0,w,c
  8625  0011B8  6E1E               	movwf	(___flmul@prod+3)^0,c
  8626  0011BA                     l3331:
  8627  0011BA  FFFF               	dw	65535	; assembler added errata NOP
  8628  0011BC  5014               	movf	___flmul@sign^0,w,c
  8629  0011BE  121E               	iorwf	(___flmul@prod+3)^0,f,c
  8630  0011C0  C01B  F008         	movff	___flmul@prod,?___flmul
  8631  0011C4  C01C  F009         	movff	___flmul@prod+1,?___flmul+1
  8632  0011C8  C01D  F00A         	movff	___flmul@prod+2,?___flmul+2
  8633  0011CC  C01E  F00B         	movff	___flmul@prod+3,?___flmul+3
  8634  0011D0                     l1026:
  8635  0011D0  FFFF               	dw	65535	; assembler added errata NOP
  8636  0011D2  0012               	return		;funcret
  8637  0011D4  FFFF               	dw	65535	; errata NOP
  8638  0011D6                     __end_of___flmul:
  8639                           	callstack 0
  8640                           
  8641 ;; *************** function ___flge *****************
  8642 ;; Defined at:
  8643 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  ff1             4   46[COMRAM] unsigned char 
  8646 ;;  ff2             4   50[COMRAM] unsigned char 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;		None               void
  8651 ;; Registers used:
  8652 ;;		wreg, status,2, status,0
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8658 ;;      Params:         8       0       0       0       0       0       0
  8659 ;;      Locals:         0       0       0       0       0       0       0
  8660 ;;      Temps:          4       0       0       0       0       0       0
  8661 ;;      Totals:        12       0       0       0       0       0       0
  8662 ;;Total ram usage:       12 bytes
  8663 ;; Hardware stack levels used: 1
  8664 ;; Hardware stack levels required when called: 1
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_pick_and_place
  8669 ;;		_roundf
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           	psect	text33
  8674  002356                     __ptext33:
  8675                           	callstack 0
  8676  002356                     ___flge:
  8677                           	callstack 0
  8678  002356  FFFF               	dw	65535	; assembler added errata NOP
  8679  002358  0E00               	movlw	0
  8680  00235A  142F               	andwf	___flge@ff1^0,w,c
  8681  00235C  6E37               	movwf	??___flge^0,c
  8682  00235E  0E00               	movlw	0
  8683  002360  1430               	andwf	(___flge@ff1+1)^0,w,c
  8684  002362  6E38               	movwf	(??___flge+1)^0,c
  8685  002364  0E80               	movlw	128
  8686  002366  1431               	andwf	(___flge@ff1+2)^0,w,c
  8687  002368  6E39               	movwf	(??___flge+2)^0,c
  8688  00236A  0E7F               	movlw	127
  8689  00236C  1432               	andwf	(___flge@ff1+3)^0,w,c
  8690  00236E  6E3A               	movwf	(??___flge+3)^0,c
  8691  002370  5037               	movf	??___flge^0,w,c
  8692  002372  1038               	iorwf	(??___flge+1)^0,w,c
  8693  002374  1039               	iorwf	(??___flge+2)^0,w,c
  8694  002376  103A               	iorwf	(??___flge+3)^0,w,c
  8695  002378  A4D8               	btfss	status,2,c
  8696  00237A  EFC1  F011         	goto	u4761
  8697  00237E  EFC4  F011         	goto	u4760
  8698  002382                     u4761:
  8699  002382  FFFF               	dw	65535	; assembler added errata NOP
  8700  002384  EFCD  F011         	goto	l4221
  8701  002388                     u4760:
  8702  002388  FFFF               	dw	65535	; assembler added errata NOP
  8703  00238A  0E00               	movlw	0
  8704  00238C  6E2F               	movwf	___flge@ff1^0,c
  8705  00238E  0E00               	movlw	0
  8706  002390  6E30               	movwf	(___flge@ff1+1)^0,c
  8707  002392  0E00               	movlw	0
  8708  002394  6E31               	movwf	(___flge@ff1+2)^0,c
  8709  002396  0E00               	movlw	0
  8710  002398  6E32               	movwf	(___flge@ff1+3)^0,c
  8711  00239A                     l4221:
  8712  00239A  FFFF               	dw	65535	; assembler added errata NOP
  8713  00239C  0E00               	movlw	0
  8714  00239E  1433               	andwf	___flge@ff2^0,w,c
  8715  0023A0  6E37               	movwf	??___flge^0,c
  8716  0023A2  0E00               	movlw	0
  8717  0023A4  1434               	andwf	(___flge@ff2+1)^0,w,c
  8718  0023A6  6E38               	movwf	(??___flge+1)^0,c
  8719  0023A8  0E80               	movlw	128
  8720  0023AA  1435               	andwf	(___flge@ff2+2)^0,w,c
  8721  0023AC  6E39               	movwf	(??___flge+2)^0,c
  8722  0023AE  0E7F               	movlw	127
  8723  0023B0  1436               	andwf	(___flge@ff2+3)^0,w,c
  8724  0023B2  6E3A               	movwf	(??___flge+3)^0,c
  8725  0023B4  5037               	movf	??___flge^0,w,c
  8726  0023B6  1038               	iorwf	(??___flge+1)^0,w,c
  8727  0023B8  1039               	iorwf	(??___flge+2)^0,w,c
  8728  0023BA  103A               	iorwf	(??___flge+3)^0,w,c
  8729  0023BC  A4D8               	btfss	status,2,c
  8730  0023BE  EFE3  F011         	goto	u4771
  8731  0023C2  EFE6  F011         	goto	u4770
  8732  0023C6                     u4771:
  8733  0023C6  FFFF               	dw	65535	; assembler added errata NOP
  8734  0023C8  EFEF  F011         	goto	l4225
  8735  0023CC                     u4770:
  8736  0023CC  FFFF               	dw	65535	; assembler added errata NOP
  8737  0023CE  0E00               	movlw	0
  8738  0023D0  6E33               	movwf	___flge@ff2^0,c
  8739  0023D2  0E00               	movlw	0
  8740  0023D4  6E34               	movwf	(___flge@ff2+1)^0,c
  8741  0023D6  0E00               	movlw	0
  8742  0023D8  6E35               	movwf	(___flge@ff2+2)^0,c
  8743  0023DA  0E00               	movlw	0
  8744  0023DC  6E36               	movwf	(___flge@ff2+3)^0,c
  8745  0023DE                     l4225:
  8746  0023DE  FFFF               	dw	65535	; assembler added errata NOP
  8747  0023E0  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8748  0023E2  EFF5  F011         	goto	u4781
  8749  0023E6  EFF8  F011         	goto	u4780
  8750  0023EA                     u4781:
  8751  0023EA  FFFF               	dw	65535	; assembler added errata NOP
  8752  0023EC  EF02  F012         	goto	l4229
  8753  0023F0                     u4780:
  8754  0023F0  FFFF               	dw	65535	; assembler added errata NOP
  8755  0023F2  6C2F               	negf	___flge@ff1^0,c
  8756  0023F4  1E30               	comf	(___flge@ff1+1)^0,f,c
  8757  0023F6  B0D8               	btfsc	status,0,c
  8758  0023F8  2A30               	incf	(___flge@ff1+1)^0,f,c
  8759  0023FA  1E31               	comf	(___flge@ff1+2)^0,f,c
  8760  0023FC  B0D8               	btfsc	status,0,c
  8761  0023FE  2A31               	incf	(___flge@ff1+2)^0,f,c
  8762  002400  0E80               	movlw	128
  8763  002402  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8764  002404                     l4229:
  8765  002404  FFFF               	dw	65535	; assembler added errata NOP
  8766  002406  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8767  002408  EF08  F012         	goto	u4791
  8768  00240C  EF0B  F012         	goto	u4790
  8769  002410                     u4791:
  8770  002410  FFFF               	dw	65535	; assembler added errata NOP
  8771  002412  EF15  F012         	goto	l673
  8772  002416                     u4790:
  8773  002416  FFFF               	dw	65535	; assembler added errata NOP
  8774  002418  6C33               	negf	___flge@ff2^0,c
  8775  00241A  1E34               	comf	(___flge@ff2+1)^0,f,c
  8776  00241C  B0D8               	btfsc	status,0,c
  8777  00241E  2A34               	incf	(___flge@ff2+1)^0,f,c
  8778  002420  1E35               	comf	(___flge@ff2+2)^0,f,c
  8779  002422  B0D8               	btfsc	status,0,c
  8780  002424  2A35               	incf	(___flge@ff2+2)^0,f,c
  8781  002426  0E80               	movlw	128
  8782  002428  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8783  00242A                     l673:
  8784  00242A  FFFF               	dw	65535	; assembler added errata NOP
  8785  00242C  0E00               	movlw	0
  8786  00242E  1A2F               	xorwf	___flge@ff1^0,f,c
  8787  002430  0E00               	movlw	0
  8788  002432  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8789  002434  0E00               	movlw	0
  8790  002436  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8791  002438  0E80               	movlw	128
  8792  00243A  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8793  00243C  0E00               	movlw	0
  8794  00243E  1A33               	xorwf	___flge@ff2^0,f,c
  8795  002440  0E00               	movlw	0
  8796  002442  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8797  002444  0E00               	movlw	0
  8798  002446  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8799  002448  0E80               	movlw	128
  8800  00244A  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8801  00244C  5033               	movf	___flge@ff2^0,w,c
  8802  00244E  5C2F               	subwf	___flge@ff1^0,w,c
  8803  002450  5034               	movf	(___flge@ff2+1)^0,w,c
  8804  002452  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8805  002454  5035               	movf	(___flge@ff2+2)^0,w,c
  8806  002456  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8807  002458  5036               	movf	(___flge@ff2+3)^0,w,c
  8808  00245A  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8809  00245C  B0D8               	btfsc	status,0,c
  8810  00245E  EF33  F012         	goto	u4801
  8811  002462  EF36  F012         	goto	u4800
  8812  002466                     u4801:
  8813  002466  FFFF               	dw	65535	; assembler added errata NOP
  8814  002468  EF3A  F012         	goto	l4235
  8815  00246C                     u4800:
  8816  00246C  FFFF               	dw	65535	; assembler added errata NOP
  8817  00246E  90D8               	bcf	status,0,c
  8818  002470  EF3C  F012         	goto	l678
  8819  002474                     l4235:
  8820  002474  FFFF               	dw	65535	; assembler added errata NOP
  8821  002476  80D8               	bsf	status,0,c
  8822  002478                     l678:
  8823  002478  FFFF               	dw	65535	; assembler added errata NOP
  8824  00247A  0012               	return		;funcret
  8825  00247C  FFFF               	dw	65535	; errata NOP
  8826  00247E                     __end_of___flge:
  8827                           	callstack 0
  8828                           
  8829 ;; *************** function ___fltol *****************
  8830 ;; Defined at:
  8831 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;  f1              4   84[COMRAM] unsigned char 
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;  exp1            1   89[COMRAM] unsigned char 
  8836 ;;  sign1           1   88[COMRAM] unsigned char 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  4   84[COMRAM] long 
  8839 ;; Registers used:
  8840 ;;		wreg, status,2, status,0
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8846 ;;      Params:         4       0       0       0       0       0       0
  8847 ;;      Locals:         2       0       0       0       0       0       0
  8848 ;;      Temps:          0       4       0       0       0       0       0
  8849 ;;      Totals:         6       4       0       0       0       0       0
  8850 ;;Total ram usage:       10 bytes
  8851 ;; Hardware stack levels used: 1
  8852 ;; Hardware stack levels required when called: 1
  8853 ;; This function calls:
  8854 ;;		Nothing
  8855 ;; This function is called by:
  8856 ;;		_init_USART
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text34
  8861  00221E                     __ptext34:
  8862                           	callstack 0
  8863  00221E                     ___fltol:
  8864                           	callstack 0
  8865  00221E  FFFF               	dw	65535	; assembler added errata NOP
  8866  002220  3457               	rlcf	(___fltol@f1+2)^0,w,c
  8867  002222  3458               	rlcf	(___fltol@f1+3)^0,w,c
  8868  002224  6E5A               	movwf	___fltol@exp1^0,c
  8869  002226  505A               	movf	___fltol@exp1^0,w,c
  8870  002228  A4D8               	btfss	status,2,c
  8871  00222A  EF19  F011         	goto	u5391
  8872  00222E  EF1C  F011         	goto	u5390
  8873  002232                     u5391:
  8874  002232  FFFF               	dw	65535	; assembler added errata NOP
  8875  002234  EF28  F011         	goto	l4505
  8876  002238                     u5390:
  8877  002238  FFFF               	dw	65535	; assembler added errata NOP
  8878  00223A                     l4501:
  8879  00223A  FFFF               	dw	65535	; assembler added errata NOP
  8880  00223C  0E00               	movlw	0
  8881  00223E  6E55               	movwf	?___fltol^0,c
  8882  002240  0E00               	movlw	0
  8883  002242  6E56               	movwf	(?___fltol+1)^0,c
  8884  002244  0E00               	movlw	0
  8885  002246  6E57               	movwf	(?___fltol+2)^0,c
  8886  002248  0E00               	movlw	0
  8887  00224A  6E58               	movwf	(?___fltol+3)^0,c
  8888  00224C  EFA8  F011         	goto	l705
  8889  002250                     l4505:
  8890  002250  FFFF               	dw	65535	; assembler added errata NOP
  8891  002252  C055  F0B4         	movff	___fltol@f1,??___fltol
  8892  002256  C056  F0B5         	movff	___fltol@f1+1,??___fltol+1
  8893  00225A  C057  F0B6         	movff	___fltol@f1+2,??___fltol+2
  8894  00225E  C058  F0B7         	movff	___fltol@f1+3,??___fltol+3
  8895  002262  0E20               	movlw	32
  8896  002264  EF3B  F011         	goto	u5400
  8897  002268                     u5405:
  8898  002268  FFFF               	dw	65535	; assembler added errata NOP
  8899  00226A  0100               	movlb	0	; () banked
  8900  00226C  90D8               	bcf	status,0,c
  8901  00226E  33B7               	rrcf	(??___fltol+3)& (0+255),f,b
  8902  002270  33B6               	rrcf	(??___fltol+2)& (0+255),f,b
  8903  002272  33B5               	rrcf	(??___fltol+1)& (0+255),f,b
  8904  002274  33B4               	rrcf	??___fltol& (0+255),f,b
  8905  002276                     u5400:
  8906  002276  FFFF               	dw	65535	; assembler added errata NOP
  8907  002278  2EE8               	decfsz	wreg,f,c
  8908  00227A  EF34  F011         	goto	u5405
  8909  00227E  51B4               	movf	??___fltol& (0+255),w,b
  8910  002280  6E59               	movwf	___fltol@sign1^0,c
  8911  002282                     
  8912                           ; BSR set to: 0
  8913  002282  8E57               	bsf	(___fltol@f1+2)^0,7,c
  8914  002284                     
  8915                           ; BSR set to: 0
  8916  002284  0EFF               	movlw	255
  8917  002286  1655               	andwf	___fltol@f1^0,f,c
  8918  002288  0EFF               	movlw	255
  8919  00228A  1656               	andwf	(___fltol@f1+1)^0,f,c
  8920  00228C  0EFF               	movlw	255
  8921  00228E  1657               	andwf	(___fltol@f1+2)^0,f,c
  8922  002290  0E00               	movlw	0
  8923  002292  1658               	andwf	(___fltol@f1+3)^0,f,c
  8924  002294                     
  8925                           ; BSR set to: 0
  8926  002294  0E96               	movlw	150
  8927  002296  5E5A               	subwf	___fltol@exp1^0,f,c
  8928  002298                     
  8929                           ; BSR set to: 0
  8930  002298  BE5A               	btfsc	___fltol@exp1^0,7,c
  8931  00229A  EF54  F011         	goto	u5410
  8932  00229E  EF51  F011         	goto	u5411
  8933  0022A2                     u5411:
  8934  0022A2  FFFF               	dw	65535	; assembler added errata NOP
  8935  0022A4  EF6E  F011         	goto	l4525
  8936  0022A8                     u5410:
  8937  0022A8  FFFF               	dw	65535	; assembler added errata NOP
  8938  0022AA                     
  8939                           ; BSR set to: 0
  8940  0022AA  505A               	movf	___fltol@exp1^0,w,c
  8941  0022AC  0A80               	xorlw	128
  8942  0022AE  0F97               	addlw	151
  8943  0022B0  B0D8               	btfsc	status,0,c
  8944  0022B2  EF5D  F011         	goto	u5421
  8945  0022B6  EF60  F011         	goto	u5420
  8946  0022BA                     u5421:
  8947  0022BA  FFFF               	dw	65535	; assembler added errata NOP
  8948  0022BC  EF63  F011         	goto	l4521
  8949  0022C0                     u5420:
  8950  0022C0  FFFF               	dw	65535	; assembler added errata NOP
  8951  0022C2  EF1D  F011         	goto	l4501
  8952  0022C6                     l4521:
  8953  0022C6  FFFF               	dw	65535	; assembler added errata NOP
  8954  0022C8  90D8               	bcf	status,0,c
  8955  0022CA  3258               	rrcf	(___fltol@f1+3)^0,f,c
  8956  0022CC  3257               	rrcf	(___fltol@f1+2)^0,f,c
  8957  0022CE  3256               	rrcf	(___fltol@f1+1)^0,f,c
  8958  0022D0  3255               	rrcf	___fltol@f1^0,f,c
  8959  0022D2  3E5A               	incfsz	___fltol@exp1^0,f,c
  8960  0022D4  EF63  F011         	goto	l4521
  8961  0022D8  EF8C  F011         	goto	l4535
  8962  0022DC                     l4525:
  8963  0022DC  FFFF               	dw	65535	; assembler added errata NOP
  8964                           
  8965                           ; BSR set to: 0
  8966  0022DE  0E1F               	movlw	31
  8967  0022E0  645A               	cpfsgt	___fltol@exp1^0,c
  8968  0022E2  EF75  F011         	goto	u5431
  8969  0022E6  EF78  F011         	goto	u5430
  8970  0022EA                     u5431:
  8971  0022EA  FFFF               	dw	65535	; assembler added errata NOP
  8972  0022EC  EF82  F011         	goto	l4533
  8973  0022F0                     u5430:
  8974  0022F0  FFFF               	dw	65535	; assembler added errata NOP
  8975  0022F2  EF1D  F011         	goto	l4501
  8976  0022F6                     l4531:
  8977  0022F6  FFFF               	dw	65535	; assembler added errata NOP
  8978  0022F8  90D8               	bcf	status,0,c
  8979  0022FA  3655               	rlcf	___fltol@f1^0,f,c
  8980  0022FC  3656               	rlcf	(___fltol@f1+1)^0,f,c
  8981  0022FE  3657               	rlcf	(___fltol@f1+2)^0,f,c
  8982  002300  3658               	rlcf	(___fltol@f1+3)^0,f,c
  8983  002302  065A               	decf	___fltol@exp1^0,f,c
  8984  002304                     l4533:
  8985  002304  FFFF               	dw	65535	; assembler added errata NOP
  8986  002306  505A               	movf	___fltol@exp1^0,w,c
  8987  002308  A4D8               	btfss	status,2,c
  8988  00230A  EF89  F011         	goto	u5441
  8989  00230E  EF8C  F011         	goto	u5440
  8990  002312                     u5441:
  8991  002312  FFFF               	dw	65535	; assembler added errata NOP
  8992  002314  EF7B  F011         	goto	l4531
  8993  002318                     u5440:
  8994  002318                     l4535:
  8995  002318  FFFF               	dw	65535	; assembler added errata NOP
  8996  00231A  5059               	movf	___fltol@sign1^0,w,c
  8997  00231C  B4D8               	btfsc	status,2,c
  8998  00231E  EF93  F011         	goto	u5451
  8999  002322  EF96  F011         	goto	u5450
  9000  002326                     u5451:
  9001  002326  FFFF               	dw	65535	; assembler added errata NOP
  9002  002328  EF9F  F011         	goto	l4539
  9003  00232C                     u5450:
  9004  00232C  FFFF               	dw	65535	; assembler added errata NOP
  9005  00232E  1E58               	comf	(___fltol@f1+3)^0,f,c
  9006  002330  1E57               	comf	(___fltol@f1+2)^0,f,c
  9007  002332  1E56               	comf	(___fltol@f1+1)^0,f,c
  9008  002334  6C55               	negf	___fltol@f1^0,c
  9009  002336  0E00               	movlw	0
  9010  002338  2256               	addwfc	(___fltol@f1+1)^0,f,c
  9011  00233A  2257               	addwfc	(___fltol@f1+2)^0,f,c
  9012  00233C  2258               	addwfc	(___fltol@f1+3)^0,f,c
  9013  00233E                     l4539:
  9014  00233E  FFFF               	dw	65535	; assembler added errata NOP
  9015  002340  C055  F055         	movff	___fltol@f1,?___fltol
  9016  002344  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  9017  002348  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  9018  00234C  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  9019  002350                     l705:
  9020  002350  FFFF               	dw	65535	; assembler added errata NOP
  9021  002352  0012               	return		;funcret
  9022  002354  FFFF               	dw	65535	; errata NOP
  9023  002356                     __end_of___fltol:
  9024                           	callstack 0
  9025                           
  9026 ;; *************** function _init_PORTS *****************
  9027 ;; Defined at:
  9028 ;;		line 9 in file "init_PIC.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;		None
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;		None
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      void 
  9035 ;; Registers used:
  9036 ;;		wreg, status,2
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9042 ;;      Params:         0       0       0       0       0       0       0
  9043 ;;      Locals:         0       0       0       0       0       0       0
  9044 ;;      Temps:          0       0       0       0       0       0       0
  9045 ;;      Totals:         0       0       0       0       0       0       0
  9046 ;;Total ram usage:        0 bytes
  9047 ;; Hardware stack levels used: 1
  9048 ;; Hardware stack levels required when called: 1
  9049 ;; This function calls:
  9050 ;;		Nothing
  9051 ;; This function is called by:
  9052 ;;		_main
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           	psect	text35
  9057  003034                     __ptext35:
  9058                           	callstack 0
  9059  003034                     _init_PORTS:
  9060                           	callstack 0
  9061  003034  FFFF               	dw	65535	; assembler added errata NOP
  9062  003036                     
  9063                           ;init_PIC.c: 11:     TRISB = 0x00;
  9064  003036  0E00               	movlw	0
  9065  003038  6E93               	movwf	147,c	;volatile
  9066                           
  9067                           ;init_PIC.c: 12:     TRISD = 0x00;
  9068  00303A  0E00               	movlw	0
  9069  00303C  6E95               	movwf	149,c	;volatile
  9070                           
  9071                           ;init_PIC.c: 13:     PORTB = 0x0F;
  9072  00303E  0E0F               	movlw	15
  9073  003040  6E81               	movwf	129,c	;volatile
  9074                           
  9075                           ;init_PIC.c: 14:     PORTD = 0x0F;
  9076  003042  0E0F               	movlw	15
  9077  003044  6E83               	movwf	131,c	;volatile
  9078                           
  9079                           ;init_PIC.c: 17:     LATC = 0;
  9080  003046  0E00               	movlw	0
  9081  003048  6E8B               	movwf	139,c	;volatile
  9082                           
  9083                           ;init_PIC.c: 18:     PORTC = 0;
  9084  00304A  0E00               	movlw	0
  9085  00304C  6E82               	movwf	130,c	;volatile
  9086  00304E                     
  9087                           ;init_PIC.c: 19:     TRISCbits.RC7 = 1;
  9088  00304E  8E94               	bsf	148,7,c	;volatile
  9089  003050                     
  9090                           ;init_PIC.c: 20:     TRISCbits.RC6 = 0;
  9091  003050  9C94               	bcf	148,6,c	;volatile
  9092  003052  0012               	return		;funcret
  9093  003054  FFFF               	dw	65535	; errata NOP
  9094  003056                     __end_of_init_PORTS:
  9095                           	callstack 0
  9096                           
  9097 ;; *************** function _Rx_char_USART *****************
  9098 ;; Defined at:
  9099 ;;		line 617 in file "main.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;		None
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;  i               2    5[COMRAM] int 
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  1    wreg      void 
  9106 ;; Registers used:
  9107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9113 ;;      Params:         0       0       0       0       0       0       0
  9114 ;;      Locals:         2       0       0       0       0       0       0
  9115 ;;      Temps:          5       0       0       0       0       0       0
  9116 ;;      Totals:         7       0       0       0       0       0       0
  9117 ;;Total ram usage:        7 bytes
  9118 ;; Hardware stack levels used: 1
  9119 ;; This function calls:
  9120 ;;		Nothing
  9121 ;; This function is called by:
  9122 ;;		Interrupt level 2
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           	psect	intcode
  9127  000008                     __pintcode:
  9128                           	callstack 0
  9129  000008                     _Rx_char_USART:
  9130                           	callstack 0
  9131  000008  FFFF               	dw	65535	; assembler added errata NOP
  9132                           
  9133                           ;incstack = 0
  9134  00000A  8277               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9135  00000C  CFD9 F004          	movff	fsr2l,??_Rx_char_USART+3
  9136  000010  CFDA F005          	movff	fsr2h,??_Rx_char_USART+4
  9137  000014                     
  9138                           ;main.c: 619:     int i=0;
  9139  000014  0E00               	movlw	0
  9140  000016  6E07               	movwf	(Rx_char_USART@i+1)^0,c
  9141  000018  0E00               	movlw	0
  9142  00001A  6E06               	movwf	Rx_char_USART@i^0,c
  9143  00001C                     i2l401:
  9144  00001C  FFFF               	dw	65535	; assembler added errata NOP
  9145  00001E  AA9E               	btfss	3998,5,c	;volatile
  9146  000020  EF14  F000         	goto	i2u433_41
  9147  000024  EF17  F000         	goto	i2u433_40
  9148  000028                     i2u433_41:
  9149  000028  FFFF               	dw	65535	; assembler added errata NOP
  9150  00002A  EF0E  F000         	goto	i2l401
  9151  00002E                     i2u433_40:
  9152  00002E  FFFF               	dw	65535	; assembler added errata NOP
  9153  000030                     
  9154                           ;main.c: 623:         input_str[i]=RCREG;
  9155  000030  0EDF               	movlw	low _input_str
  9156  000032  2406               	addwf	Rx_char_USART@i^0,w,c
  9157  000034  6ED9               	movwf	fsr2l,c
  9158  000036  0E00               	movlw	high _input_str
  9159  000038  2007               	addwfc	(Rx_char_USART@i+1)^0,w,c
  9160  00003A  6EDA               	movwf	fsr2h,c
  9161  00003C  CFAE FFDF          	movff	4014,indf2	;volatile
  9162                           
  9163                           ;main.c: 624:     }while(input_str[i++] != '\n');
  9164  000040  5006               	movf	Rx_char_USART@i^0,w,c
  9165  000042  6E01               	movwf	??_Rx_char_USART^0,c
  9166  000044  5007               	movf	(Rx_char_USART@i+1)^0,w,c
  9167  000046  6E02               	movwf	(??_Rx_char_USART+1)^0,c
  9168  000048  4A06               	infsnz	Rx_char_USART@i^0,f,c
  9169  00004A  2A07               	incf	(Rx_char_USART@i+1)^0,f,c
  9170  00004C  0EDF               	movlw	low _input_str
  9171  00004E  2401               	addwf	??_Rx_char_USART^0,w,c
  9172  000050  6ED9               	movwf	fsr2l,c
  9173  000052  0E00               	movlw	high _input_str
  9174  000054  2002               	addwfc	(??_Rx_char_USART+1)^0,w,c
  9175  000056  6EDA               	movwf	fsr2h,c
  9176  000058  0E0A               	movlw	10
  9177  00005A  18DE               	xorwf	postinc2,w,c
  9178  00005C  A4D8               	btfss	status,2,c
  9179  00005E  EF33  F000         	goto	i2u434_41
  9180  000062  EF36  F000         	goto	i2u434_40
  9181  000066                     i2u434_41:
  9182  000066  FFFF               	dw	65535	; assembler added errata NOP
  9183  000068  EF0E  F000         	goto	i2l401
  9184  00006C                     i2u434_40:
  9185  00006C  FFFF               	dw	65535	; assembler added errata NOP
  9186  00006E                     
  9187                           ;main.c: 626:     PIR1bits.RCIF = 0;
  9188  00006E  9A9E               	bcf	158,5,c	;volatile
  9189  000070                     
  9190                           ;main.c: 627:     New_char_RX = 1;
  9191  000070  0E01               	movlw	1
  9192  000072  6E74               	movwf	_New_char_RX^0,c
  9193  000074                     
  9194                           ;main.c: 628:     State = input_str[0];
  9195  000074  C0DF  F076         	movff	_input_str,_State	;volatile
  9196  000078  C005  FFDA         	movff	??_Rx_char_USART+4,fsr2h
  9197  00007C  C004  FFD9         	movff	??_Rx_char_USART+3,fsr2l
  9198  000080  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9199  000082  0011               	retfie		f
  9200  000084  FFFF               	dw	65535	; errata NOP
  9201  000086                     __end_of_Rx_char_USART:
  9202                           	callstack 0
  9203                           
  9204                           	psect	rparam
  9205  0000                     
  9206                           	psect	temp
  9207  000077                     btemp:
  9208                           	callstack 0
  9209  000077                     	ds	1
  9210  0000                     int$flags	set	btemp
  9211  0000                     wtemp8	set	btemp+1
  9212  0000                     ttemp5	set	btemp+1
  9213  0000                     ttemp6	set	btemp+4
  9214  0000                     ttemp7	set	btemp+8
  9215                           
  9216                           	psect	idloc
  9217                           
  9218                           ;Config register IDLOC0 @ 0x200000
  9219                           ;	unspecified, using default values
  9220  200000                     	org	2097152
  9221  200000  FF                 	db	255
  9222                           
  9223                           ;Config register IDLOC1 @ 0x200001
  9224                           ;	unspecified, using default values
  9225  200001                     	org	2097153
  9226  200001  FF                 	db	255
  9227                           
  9228                           ;Config register IDLOC2 @ 0x200002
  9229                           ;	unspecified, using default values
  9230  200002                     	org	2097154
  9231  200002  FF                 	db	255
  9232                           
  9233                           ;Config register IDLOC3 @ 0x200003
  9234                           ;	unspecified, using default values
  9235  200003                     	org	2097155
  9236  200003  FF                 	db	255
  9237                           
  9238                           ;Config register IDLOC4 @ 0x200004
  9239                           ;	unspecified, using default values
  9240  200004                     	org	2097156
  9241  200004  FF                 	db	255
  9242                           
  9243                           ;Config register IDLOC5 @ 0x200005
  9244                           ;	unspecified, using default values
  9245  200005                     	org	2097157
  9246  200005  FF                 	db	255
  9247                           
  9248                           ;Config register IDLOC6 @ 0x200006
  9249                           ;	unspecified, using default values
  9250  200006                     	org	2097158
  9251  200006  FF                 	db	255
  9252                           
  9253                           ;Config register IDLOC7 @ 0x200007
  9254                           ;	unspecified, using default values
  9255  200007                     	org	2097159
  9256  200007  FF                 	db	255
  9257                           
  9258                           	psect	config
  9259                           
  9260                           ; Padding undefined space
  9261  300000                     	org	3145728
  9262  300000  FF                 	db	255
  9263                           
  9264                           ;Config register CONFIG1H @ 0x300001
  9265                           ;	Oscillator Selection bits
  9266                           ;	OSC = XT, XT oscillator
  9267                           ;	Oscillator System Clock Switch Enable bit
  9268                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  9269  300001                     	org	3145729
  9270  300001  21                 	db	33
  9271                           
  9272                           ;Config register CONFIG2L @ 0x300002
  9273                           ;	Power-up Timer Enable bit
  9274                           ;	PWRT = OFF, PWRT disabled
  9275                           ;	Brown-out Reset Enable bit
  9276                           ;	BOR = OFF, Brown-out Reset disabled
  9277                           ;	Brown-out Reset Voltage bits
  9278                           ;	BORV = 20, VBOR set to 2.0V
  9279  300002                     	org	3145730
  9280  300002  0D                 	db	13
  9281                           
  9282                           ;Config register CONFIG2H @ 0x300003
  9283                           ;	Watchdog Timer Enable bit
  9284                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9285                           ;	Watchdog Timer Postscale Select bits
  9286                           ;	WDTPS = 128, 1:128
  9287  300003                     	org	3145731
  9288  300003  0E                 	db	14
  9289                           
  9290                           ; Padding undefined space
  9291  300004                     	org	3145732
  9292  300004  FF                 	db	255
  9293                           
  9294                           ;Config register CONFIG3H @ 0x300005
  9295                           ;	CCP2 Mux bit
  9296                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  9297  300005                     	org	3145733
  9298  300005  00                 	db	0
  9299                           
  9300                           ;Config register CONFIG4L @ 0x300006
  9301                           ;	Stack Full/Underflow Reset Enable bit
  9302                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  9303                           ;	Low Voltage ICSP Enable bit
  9304                           ;	LVP = OFF, Low Voltage ICSP disabled
  9305                           ;	Background Debugger Enable bit
  9306                           ;	DEBUG = 0x1, unprogrammed default
  9307  300006                     	org	3145734
  9308  300006  80                 	db	128
  9309                           
  9310                           ; Padding undefined space
  9311  300007                     	org	3145735
  9312  300007  FF                 	db	255
  9313                           
  9314                           ;Config register CONFIG5L @ 0x300008
  9315                           ;	Code Protection bit
  9316                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  9317                           ;	Code Protection bit
  9318                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  9319                           ;	Code Protection bit
  9320                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  9321                           ;	Code Protection bit
  9322                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  9323  300008                     	org	3145736
  9324  300008  0F                 	db	15
  9325                           
  9326                           ;Config register CONFIG5H @ 0x300009
  9327                           ;	Boot Block Code Protection bit
  9328                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  9329                           ;	Data EEPROM Code Protection bit
  9330                           ;	CPD = OFF, Data EEPROM not code protected
  9331  300009                     	org	3145737
  9332  300009  C0                 	db	192
  9333                           
  9334                           ;Config register CONFIG6L @ 0x30000A
  9335                           ;	Write Protection bit
  9336                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  9337                           ;	Write Protection bit
  9338                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  9339                           ;	Write Protection bit
  9340                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  9341                           ;	Write Protection bit
  9342                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  9343  30000A                     	org	3145738
  9344  30000A  0F                 	db	15
  9345                           
  9346                           ;Config register CONFIG6H @ 0x30000B
  9347                           ;	Configuration Register Write Protection bit
  9348                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  9349                           ;	Boot Block Write Protection bit
  9350                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  9351                           ;	Data EEPROM Write Protection bit
  9352                           ;	WRTD = OFF, Data EEPROM not write protected
  9353  30000B                     	org	3145739
  9354  30000B  E0                 	db	224
  9355                           
  9356                           ;Config register CONFIG7L @ 0x30000C
  9357                           ;	Table Read Protection bit
  9358                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  9359                           ;	Table Read Protection bit
  9360                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  9361                           ;	Table Read Protection bit
  9362                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  9363                           ;	Table Read Protection bit
  9364                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  9365  30000C                     	org	3145740
  9366  30000C  0F                 	db	15
  9367                           
  9368                           ;Config register CONFIG7H @ 0x30000D
  9369                           ;	Boot Block Table Read Protection bit
  9370                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  9371  30000D                     	org	3145741
  9372  30000D  40                 	db	64
  9373                           tosu	equ	0xFFF
  9374                           tosh	equ	0xFFE
  9375                           tosl	equ	0xFFD
  9376                           stkptr	equ	0xFFC
  9377                           pclatu	equ	0xFFB
  9378                           pclath	equ	0xFFA
  9379                           pcl	equ	0xFF9
  9380                           tblptru	equ	0xFF8
  9381                           tblptrh	equ	0xFF7
  9382                           tblptrl	equ	0xFF6
  9383                           tablat	equ	0xFF5
  9384                           prodh	equ	0xFF4
  9385                           prodl	equ	0xFF3
  9386                           indf0	equ	0xFEF
  9387                           postinc0	equ	0xFEE
  9388                           postdec0	equ	0xFED
  9389                           preinc0	equ	0xFEC
  9390                           plusw0	equ	0xFEB
  9391                           fsr0h	equ	0xFEA
  9392                           fsr0l	equ	0xFE9
  9393                           wreg	equ	0xFE8
  9394                           indf1	equ	0xFE7
  9395                           postinc1	equ	0xFE6
  9396                           postdec1	equ	0xFE5
  9397                           preinc1	equ	0xFE4
  9398                           plusw1	equ	0xFE3
  9399                           fsr1h	equ	0xFE2
  9400                           fsr1l	equ	0xFE1
  9401                           bsr	equ	0xFE0
  9402                           indf2	equ	0xFDF
  9403                           postinc2	equ	0xFDE
  9404                           postdec2	equ	0xFDD
  9405                           preinc2	equ	0xFDC
  9406                           plusw2	equ	0xFDB
  9407                           fsr2h	equ	0xFDA
  9408                           fsr2l	equ	0xFD9
  9409                           status	equ	0xFD8

Data Sizes:
    Strings     626
    Constant    20
    Data        26
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     90     118
    BANK0           128     33     109
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(BANK0[4]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strncat@s	PTR const unsigned char  size(2) Largest target is 1
		 -> add_component@add_componnt(COMRAM[1]), 

    strncat@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strncat@a	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> input_str(BANK0[10]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 82
		 -> STR_17(CODE[70]), STR_16(CODE[21]), STR_15(CODE[63]), STR_14(CODE[20]), 
		 -> STR_13(CODE[30]), STR_12(CODE[29]), STR_11(CODE[29]), STR_10(CODE[29]), 
		 -> STR_9(CODE[28]), STR_8(CODE[28]), STR_7(CODE[52]), STR_6(CODE[26]), 
		 -> STR_5(CODE[40]), STR_4(CODE[27]), STR_3(CODE[32]), sequence(BANK0[4]), 
		 -> STR_2(CODE[20]), STR_1(CODE[82]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(BANK0[4]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(BANK0[4]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 


Critical Paths under _main in COMRAM

    _start_up_menu->_pick_and_place
    _return_to_initial->_Twister
    _return_to_initial->_X_axis
    _return_to_initial->_Y_axis
    _return_to_initial->_Z_axis
    _remove_component->_strrchr
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _pick_and_place->___flge
    ___fldiv->___xxtofl
    _Z_axis->_ms_delay
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _change_sequence->_print_string
    _add_component->_atoi
    _strncat->_strlen
    _print_string->_serial_tx_char
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    None.

Critical Paths under _main in BANK0

    _start_up_menu->_pick_and_place
    _init_USART->___fltol

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   56481
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                        5     5      0   45245
                                             60 COMRAM     5     5      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
                  _return_to_initial
 ---------------------------------------------------------------------------------
 (2) _return_to_initial                                    9     9      0   14620
                                             14 COMRAM     9     9      0
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
 ---------------------------------------------------------------------------------
 (2) _remove_component                                     5     5      0    3761
                                             25 COMRAM     5     5      0
                            _memmove
                       _print_string
                     _serial_tx_char
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4     942
                                             21 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     406
                                             11 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     592
                                             11 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _pick_and_place                                      35    35      0   19348
                                             58 COMRAM     2     2      0
                                              0 BANK0     33    33      0
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
                            ___fldiv
                             ___flge
                           ___xxtofl
                   _fetch_parameters
 ---------------------------------------------------------------------------------
 (3) _fetch_parameters                                     1     1      0     124
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              7 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2183
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Z_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Y_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _X_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Twister                                              1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _ms_delay                                             6     4      2    3556
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                      5     5      0    1775
                                             14 COMRAM     5     5      0
                       _print_string
 ---------------------------------------------------------------------------------
 (2) _add_component                                        1     1      0    3968
                                             29 COMRAM     1     1      0
                               _atoi
                       _print_string
                     _serial_tx_char
                            _strncat
 ---------------------------------------------------------------------------------
 (3) _strncat                                              8     2      6     712
                                             11 COMRAM     6     0      6
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     318
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2    1708
                                              8 COMRAM     6     4      2
                     _serial_tx_char
 ---------------------------------------------------------------------------------
 (3) _serial_tx_char                                       1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    1456
                                             14 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     207
                                              7 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     161
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11233
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10806
                                             58 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             23 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              7 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              7 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              7 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                             46 COMRAM    12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             84 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Rx_char_USART                                        7     7      0      45
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _print_string
         _serial_tx_char
       _serial_tx_char
       _strncat
         _strlen
     _change_sequence
       _print_string
     _pick_and_place
       _Twister
         _ms_delay
       _X_axis
         _ms_delay
       _Y_axis
         _ms_delay
       _Z_axis
         _ms_delay
       ___fldiv
       ___flge
       ___xxtofl
       _fetch_parameters
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _print_string
       _serial_tx_char
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen
     _return_to_initial
       _Twister
       _X_axis
       _Y_axis
       _Z_axis

 _Rx_char_USART (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      6D       5       85.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5A      76       1       93.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E3      15        0.0%
DATA                 0      0      E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 18 12:44:32 2021

                                                     ___fldiv@aexp 002E  
                                                     ___fldiv@bexp 002D  
                                                     ___fldiv@sign 0026  
                                                               l23 3052  
                                                               l26 30B4  
                                                               l51 3072  
                                                               l45 2FCC  
                                                               l48 305E  
                                              ___wmul@multiplicand 000A  
                                           __size_of_start_up_menu 014C  
                                                              l205 2BCC  
                                                              l302 2218  
                                                              l240 1DD8  
                                                              l306 2218  
                                                              l260 2C5A  
                                                              l316 018C  
                                                              l325 0238  
                                                              l254 258A  
                                                              l408 3030  
                                                              l281 287C  
                                                              l274 296E  
                                                              l370 076C  
                                                              l267 2A60  
                                                              l371 0786  
                                                              l347 04F0  
                                                              l356 059C  
                                                              l196 20E0  
                                                              l296 2E7C  
                                                              l288 2B32  
                                                              l705 2350  
                                                              l388 2690  
                                                              l673 242A  
                                                              l682 2F8C  
                                                              l678 2478  
                                                              l936 09D2  
                                                              l953 0B16  
                                                              l945 0D2C  
                                                              l937 09BC  
                                                              l962 0C1A  
                                                              l938 0972  
                                                              l963 0C02  
                                                              l990 1602  
                                                              l992 141A  
                                                              l978 2EC6  
                                                              l995 13D4  
                                                ??_init_interrupts 0008  
                                                              wreg 000FE8  
                                                     ___flmul@aexp 0019  
                                                     ___flmul@bexp 001A  
                                                     ___flmul@sign 0014  
                                                     ___flmul@temp 001F  
                                                     ___flmul@prod 001B  
                                                     ___fltol@exp1 005A  
                                                             l1001 1470  
                                                             l1003 1500  
                                                             l1004 14E8  
                                                             l1022 0E1E  
                                                             l1110 1F94  
                                                             l1031 10BA  
                                                             l1032 10A2  
                                                             l1113 2F4A  
                                                             l1121 2DC2  
                                                             l1026 11D0  
                                                             l1107 1F8A  
                                                             l1029 102A  
                                                             l1142 19E8  
                                                             l1070 1AFA  
                                                             l1134 278A  
                                                             l1039 1188  
                                                             l1063 1A4E  
                                                             l1066 1BE0  
                                                             l1155 2F08  
                                                             l1172 3006  
                                                             l1165 2CE0  
                                                             l1077 1B66  
                                                             l4001 27C0  
                                                             l1178 2D60  
                                                             l3211 0D52  
                                                             l4011 27FC  
                                                             l4003 27CC  
                                                             l3301 1066  
                                                             l3221 0D96  
                                                             l3213 0D54  
                                                             l4021 2842  
                                                             l4005 27DC  
                                                             l4013 280C  
                                                             l4101 125E  
                                                             l2431 3036  
                                                             l3311 10EE  
                                                             l3303 1098  
                                                             l3231 0DCA  
                                                             l3223 0DA8  
                                                             l3215 0D6A  
                                                             l3207 0D34  
                                                             l4031 2A6A  
                                                             l4023 2846  
                                                             l4015 2822  
                                                             l4007 27E0  
                                                             l4111 12AC  
                                                             l4103 1270  
                                                             l2433 304E  
                                                             l3321 1170  
                                                             l3313 1118  
                                                             l3241 0E34  
                                                             l3233 0DE0  
                                                             l3225 0DB0  
                                                             l3217 0D7E  
                                                             l3209 0D40  
                                                             l2601 0804  
                                                             l4041 2AB2  
                                                             l4033 2A7E  
                                                             l4025 2856  
                                                             l4017 2826  
                                                             l4009 27F0  
                                                             l4201 15D4  
                                                             l4121 12F6  
                                                             l4113 12B0  
                                                             l4105 1272  
                                                             l2435 3050  
                                                             l3323 118E  
                                                             l3331 11BA  
                                                             l3307 10D0  
                                                             l3315 111C  
                                                             l3251 0E74  
                                                             l3243 0E46  
                                                             l3235 0DF4  
                                                             l3227 0DB6  
                                                             l3219 0D8E  
                                                             l2611 083E  
                                                             l2603 080C  
                                                             l4051 2AEC  
                                                             l4043 2AB6  
                                                             l4035 2A92  
                                                             l4027 2862  
                                                             l4019 2832  
                                                             l4203 15DA  
                                                             l4131 132E  
                                                             l4123 12FE  
                                                             l4107 1288  
                                                             l4115 12B8  
                                                             l4221 239A  
                                                             l3333 11C0  
                                                             l3325 119E  
                                                             l3317 113C  
                                                             l3309 10DC  
                                                             l3261 0EC6  
                                                             l3253 0E8A  
                                                             l3237 0E04  
                                                             l3229 0DC8  
                                                             l2701 0A6A  
                                                             l2621 087E  
                                                             l2613 0840  
                                                             l2605 0822  
                                                             l4301 1752  
                                                             l4053 2AF8  
                                                             l4045 2AC6  
                                                             l4037 2A96  
                                                             l4061 2B2C  
                                                             l4029 2876  
                                                             l4205 15EC  
                                                             l4141 136E  
                                                             l4133 132E  
                                                             l4125 1304  
                                                             l4117 12CA  
                                                             l4109 129C  
                                                             l4231 2418  
                                                             l4223 23CE  
                                                             l3327 11B0  
                                                             l3319 1150  
                                                             l3271 0F0C  
                                                             l3263 0ED4  
                                                             l3255 0E96  
                                                             l3247 0E5C  
                                                             l3239 0E0C  
                                                             l2711 0ADE  
                                                             l2703 0A6C  
                                                             l2631 08C6  
                                                             l2615 0856  
                                                             l2623 0886  
                                                             l2607 0824  
                                                             l4311 196C  
                                                             l4303 1826  
                                                             l2439 30AE  
                                                             l2551 2ECC  
                                                             l4055 2B08  
                                                             l4039 2AA2  
                                                             l4047 2AD2  
                                                             l4207 15F2  
                                                             l4151 13C0  
                                                             l4143 137E  
                                                             l4119 12E6  
                                                             l4071 2180  
                                                             l4063 20EA  
                                                             l4233 246E  
                                                             l4225 23DE  
                                                             l4217 2358  
                                                             l3329 11B2  
                                                             l3281 0F7A  
                                                             l3273 0F26  
                                                             l3265 0EE0  
                                                             l3257 0EAE  
                                                             l3249 0E6A  
                                                             l2721 0B46  
                                                             l2713 0AE0  
                                                             l2705 0A78  
                                                             l2641 08DC  
                                                             l2633 08CC  
                                                             l2625 0898  
                                                             l2617 086A  
                                                             l2609 082C  
                                                             l3337 2E82  
                                                             l4313 19B2  
                                                             l4305 1892  
                                                             l2553 2ED8  
                                                             l3601 2B5E  
                                                             l4057 2B0C  
                                                             l4049 2AE8  
                                                             l4209 15F6  
                                                             l4161 1416  
                                                             l4153 13D2  
                                                             l4145 138E  
                                                             l4137 1342  
                                                             l4129 1318  
                                                             l4081 11E4  
                                                             l4241 1A06  
                                                             l4073 2198  
                                                             l4065 2100  
                                                             l4401 0490  
                                                             l4321 0098  
                                                             l2801 2CE6  
                                                             l4235 2474  
                                                             l4227 23F2  
                                                             l4219 238A  
                                                             l3291 1016  
                                                             l3283 0FA4  
                                                             l3275 0F36  
                                                             l3267 0EF0  
                                                             l3259 0EBA  
                                                             l2731 0B7A  
                                                             l2715 0AF4  
                                                             l2707 0A7E  
                                                             l2651 08F0  
                                                             l2643 08E0  
                                                             l2635 08D0  
                                                             l2627 08B0  
                                                             l2619 087A  
                                                             l3339 2E92  
                                                             l4315 19D6  
                                                             l4307 18CA  
                                                             l2555 2EDE  
                                                             l3603 2B66  
                                                             l4059 2B1C  
                                                             l4171 146E  
                                                             l4163 1430  
                                                             l4155 13E0  
                                                             l4147 1396  
                                                             l4139 135E  
                                                             l4091 1232  
                                                             l4083 11F6  
                                                             l4251 1A90  
                                                             l4243 1A18  
                                                             l4075 21CC  
                                                             l4067 2134  
                                                             l4411 0526  
                                                             l4403 0496  
                                                             l4331 012C  
                                                             l4323 00C2  
                                                             l2811 2D38  
                                                             l2803 2CEE  
                                                             l4501 223A  
                                                             l4229 2404  
                                                             l3293 1028  
                                                             l3285 0FDE  
                                                             l3277 0F52  
                                                             l3269 0EFC  
                                                             l3365 2F50  
                                                             l2733 0B8E  
                                                             l2725 0B5A  
                                                             l2741 0BB4  
                                                             l2709 0AAA  
                                                             l2717 0B04  
                                                             l2653 08F4  
                                                             l2645 08E4  
                                                             l2637 08D4  
                                                             l2629 08C2  
                                                             l2661 0904  
                                                             l4309 1936  
                                                             l2549 305A  
                                                             l2821 2C12  
                                                             l2557 2EFC  
                                                             l3701 1D88  
                                                             l3605 2B7C  
                                                             l4181 14DE  
                                                             l4165 144A  
                                                             l4173 1482  
                                                             l4157 1404  
                                                             l4149 13AC  
                                                             l4093 1236  
                                                             l4085 11F8  
                                                             l4261 1AF0  
                                                             l4253 1A9A  
                                                             l4245 1A60  
                                                             l4077 21E4  
                                                             l4069 214C  
                                                             l4421 058E  
                                                             l4413 0534  
                                                             l4405 04C2  
                                                             l4341 01C2  
                                                             l4333 0132  
                                                             l4325 00EC  
                                                             l2901 271A  
                                                             l2813 2D58  
                                                             l2805 2CF8  
                                                             l4511 2294  
                                                             l3295 103C  
                                                             l3287 0FEC  
                                                             l3279 0F5E  
                                                             l3367 2F6A  
                                                             l2735 0B96  
                                                             l2727 0B66  
                                                             l2719 0B32  
                                                             l2743 0BC6  
                                                             l2671 0986  
                                                             l2663 090A  
                                                             l2655 08F8  
                                                             l2647 08E8  
                                                             l2639 08D8  
                                                             l2591 07C2  
                                                             l2583 078C  
                                                             l2831 1DFE  
                                                             l2823 2C16  
                                                             l3711 1DA6  
                                                             l3703 1D9C  
                                                             l3607 2B9A  
                                                             l4191 155E  
                                                             l4175 1496  
                                                             l4167 1450  
                                                             l4159 1406  
                                                             l4087 120E  
                                                             l4095 123E  
                                                             l4079 11D8  
                                                             l4271 1B7C  
                                                             l4263 1B32  
                                                             l4255 1AA8  
                                                             l4247 1A7C  
                                                             l4239 19F2  
                                                             l4431 05EE  
                                                             l4423 05C0  
                                                             l4415 053C  
                                                             l4407 04E2  
                                                             l4351 022A  
                                                             l4343 01D0  
                                                             l4335 015E  
                                                             l4327 0116  
                                                             l4319 0090  
                                                             l2911 2770  
                                                             l2903 273A  
                                                             l2807 2D28  
                                                             l4521 22C6  
                                                             l4513 2298  
                                                             l4505 2250  
                                                             l3297 1050  
                                                             l3289 100A  
                                                             l3369 2F7A  
                                                             l2753 0C30  
                                                             l2761 0C8E  
                                                             l2745 0BCC  
                                                             l2737 0B9C  
                                                             l2729 0B78  
                                                             l2681 09BA  
                                                             l2673 0992  
                                                             l2665 0938  
                                                             l2657 08FC  
                                                             l2649 08EC  
                                                             l2593 07D6  
                                                             l2585 0798  
                                                             l2577 300C  
                                                             l2841 1E60  
                                                             l2833 1E1C  
                                                             l2825 1DDE  
                                                             l2817 2BD2  
                                                             l3713 1DC2  
                                                             l3609 2BC8  
                                                             l4185 1516  
                                                             l4193 1562  
                                                             l4177 149A  
                                                             l4169 145C  
                                                             l4097 1250  
                                                             l4089 1222  
                                                             l4281 1BCE  
                                                             l4273 1B82  
                                                             l4265 1B40  
                                                             l4257 1AE0  
                                                             l4441 06E6  
                                                             l4433 061A  
                                                             l4425 05D2  
                                                             l4417 0542  
                                                             l4409 0514  
                                                             l4361 028A  
                                                             l4353 025C  
                                                             l4345 01D8  
                                                             l4337 017E  
                                                             l4329 0124  
                                                             l2905 2752  
                                                             l3721 2498  
                                                             l4601 3076  
                                                             l4531 22F6  
                                                             l4523 22D2  
                                                             l4515 22AA  
                                                             l4507 2282  
                                                             l3299 1054  
                                                             l2771 0CF4  
                                                             l2763 0CA4  
                                                             l2755 0C3C  
                                                             l2747 0BDE  
                                                             l2739 0BB2  
                                                             l2691 0A20  
                                                             l2683 09E6  
                                                             l2675 0998  
                                                             l2667 095A  
                                                             l2659 0900  
                                                             l2595 07E6  
                                                             l2587 07AA  
                                                             l4291 168E  
                                                             l2579 3028  
                                                             l2843 1E7A  
                                                             l2835 1E54  
                                                             l2827 1DF2  
                                                             l2819 2BDE  
                                                             l3715 1DCE  
                                                             l3651 1C26  
                                                             l4195 1582  
                                                             l4187 1522  
                                                             l4179 14AC  
                                                             l4099 1258  
                                                             l4275 1BA6  
                                                             l4267 1B54  
                                                             l4259 1AE4  
                                                             l4443 06F2  
                                                             l4435 063A  
                                                             l4427 05E0  
                                                             l4419 056E  
                                                             l4371 0382  
                                                             l4363 02B6  
                                                             l4355 026E  
                                                             l4347 01DE  
                                                             l4339 01B0  
                                                             l2907 2768  
                                                             l3723 24AE  
                                                             l4603 307C  
                                                             l4533 2304  
                                                             l4525 22DC  
                                                             l4509 2284  
                                                             l2781 0D1A  
                                                             l2773 0CFA  
                                                             l2765 0CB6  
                                                             l2757 0C4E  
                                                             l2749 0BF8  
                                                             l2693 0A32  
                                                             l2685 09FA  
                                                             l2677 09AC  
                                                             l2669 096A  
                                                             l2597 07EA  
                                                             l2589 07AC  
                                                             l4293 16D4  
                                                             l4285 160A  
                                                             l2861 1F6E  
                                                             l2853 1EFE  
                                                             l2845 1E84  
                                                             l2837 1E58  
                                                             l2829 1DF8  
                                                             l3717 1DD4  
                                                             l3709 1DA2  
                                                             l3661 1C66  
                                                             l3653 1C2A  
                                                             l3645 1BE8  
                                                             l4197 1598  
                                                             l4189 1534  
                                                             l4277 1BBA  
                                                             l4269 1B7A  
                                                             l4461 0762  
                                                             l4453 072A  
                                                             l4437 0648  
                                                             l4429 05E8  
                                                             l4381 039C  
                                                             l4365 02D6  
                                                             l4357 027C  
                                                             l4349 020A  
                                                             l2909 276C  
                                                             l3741 2542  
                                                             l3725 24B2  
                                                             l4605 3080  
                                                             l4535 2318  
                                                             l2775 0CFE  
                                                             l2767 0CDC  
                                                             l2759 0C8C  
                                                             l2695 0A44  
                                                             l2679 09AE  
                                                             l2599 07F2  
                                                             l4295 16F8  
                                                             l4287 162A  
                                                             l4551 2FC4  
                                                             l4543 2F92  
                                                             l2791 2DB6  
                                                             l2847 1E8E  
                                                             l2871 2C78  
                                                             l3671 1CB4  
                                                             l3663 1C7A  
                                                             l3655 1C40  
                                                             l3647 1BEC  
                                                             l4199 15B8  
                                                             l4279 1BCC  
                                                             l4455 0734  
                                                             l4447 0718  
                                                             l4439 06D4  
                                                             l4391 03F2  
                                                             l4383 03BC  
                                                             l4367 02E4  
                                                             l4359 0284  
                                                             l3751 256A  
                                                             l3743 254E  
                                                             l3735 24EA  
                                                             l3727 24B6  
                                                             l3719 2480  
                                                             l4471 25A8  
                                                             l4607 3084  
                                                             l4537 232E  
                                                             l2777 0D06  
                                                             l2769 0CE0  
                                                             l2697 0A50  
                                                             l2689 0A0E  
                                                             l4297 171A  
                                                             l4289 167A  
                                                             l4553 2FC6  
                                                             l4545 2FBE  
                                                             l2793 2DBA  
                                                             l2785 2D66  
                                                             l2857 1F42  
                                                             l2849 1EC4  
                                                             l2881 2CB4  
                                                             l2873 2C80  
                                                             l3681 1CF2  
                                                             l3673 1CB8  
                                                             l3665 1C7E  
                                                             l3657 1C44  
                                                             l3649 1C10  
                                                             l3921 2E60  
                                                             l4449 0720  
                                                             l4385 03C4  
                                                             l4377 038E  
                                                             l4369 0370  
                                                             l3745 2554  
                                                             l3737 2502  
                                                             l3753 2584  
                                                             l3729 24D0  
                                                             l4481 2608  
                                                             l4473 25CC  
                                                             l4465 2590  
                                                             l4561 1FA8  
                                                             l4609 3086  
                                                             l4539 233E  
                                                             l2779 0D18  
                                                             l2699 0A56  
                                                             l4555 2FC8  
                                                             l4547 2FC0  
                                                             l2787 2D6C  
                                                             l2859 1F58  
                                                             l2883 2CCE  
                                                             l2875 2C94  
                                                             l2867 2C60  
                                                             l3691 1D38  
                                                             l3683 1CFE  
                                                             l3675 1CC4  
                                                             l3667 1C8A  
                                                             l3659 1C50  
                                                             l3915 2E3C  
                                                             l3907 2E26  
                                                             l3931 29B0  
                                                             l3923 2978  
                                                             l4459 075A  
                                                             l4395 03FC  
                                                             l4379 0396  
                                                             l3739 250E  
                                                             l4491 2650  
                                                             l4483 2614  
                                                             l4475 25D8  
                                                             l4467 259C  
                                                             l4571 200E  
                                                             l4563 1FBE  
                                                             l4557 2FCA  
                                                             l4549 2FC2  
                                                             l2797 2F0C  
                                                             l2789 2D84  
                                                             l2885 2CDC  
                                                             l2877 2C98  
                                                             l2869 2C60  
                                                             l3693 1D4E  
                                                             l3685 1D14  
                                                             l3677 1CDA  
                                                             l3669 1CA0  
                                                             l3917 2E42  
                                                             l3909 2E32  
                                                             l3933 29C0  
                                                             l3941 29F0  
                                                             l3925 298C  
                                                             l4397 047C  
                                                             l4389 03EA  
                                                             l2893 2698  
                                                             l3749 255C  
                                                             l4493 2658  
                                                             l4485 261C  
                                                             l4477 25E0  
                                                             l4469 25A4  
                                                             l4581 2078  
                                                             l4573 203C  
                                                             l4565 1FC6  
                                                             l2879 2C9C  
                                                             l3695 1D62  
                                                             l3687 1D28  
                                                             l3679 1CEE  
                                                             l3599 2B3A  
                                                             l3919 2E5C  
                                                             l3951 2A2A  
                                                             l3943 2A06  
                                                             l3935 29C4  
                                                             l3927 29A0  
                                                             l4399 0488  
                                                             l2895 26C2  
                                                             l4495 265C  
                                                             l4487 2620  
                                                             l4479 25E4  
                                                             l4567 1FF0  
                                                             l4575 204E  
                                                             l4559 1F9C  
                                                             l3697 1D66  
                                                             l3689 1D2C  
                                                             l3953 2A3A  
                                                             l3945 2A0A  
                                                             l3937 29D4  
                                                             l3929 29A4  
                                                             l3961 289A  
                                                             l2897 26E8  
                                                             l2889 2FD2  
                                                             l4497 267E  
                                                             l4489 2644  
                                                             l4585 2082  
                                                             l4577 2068  
                                                             l4569 1FFA  
                                                             l4593 209A  
                                                             l4499 2220  
                                                             l3699 1D72  
                                                             l3955 2A46  
                                                             l3947 2A16  
                                                             l3939 29E0  
                                                             l3971 28D2  
                                                             l3963 28AE  
                                                             l2899 26F8  
                                                             l4675 20B0  
                                                             l4579 206E  
                                                             l4677 1EAC  
                                                             l3949 2A26  
                                                             l3957 2A5A  
                                                             l3981 2918  
                                                             l3973 28E2  
                                                             l3965 28B2  
                                                             l4589 208C  
                                                             l3991 2954  
                                                             l3983 2924  
                                                             l3975 28EE  
                                                             l3967 28BE  
                                                             l3959 2886  
                                                             l4599 3076  
                                                             l3985 2934  
                                                             l3969 28CE  
                                                             l3977 28FE  
                                                             l3993 2968  
                                                             l3987 2938  
                                                             l3979 2914  
                                                             l3995 2794  
                                                             l3989 2948  
                                                             l3997 27A8  
                                                             l3999 27BC  
                                                             STR_1 7D8D  
                                                             STR_2 7FEB  
                                                             STR_3 7EC0  
                                                             STR_4 7F8D  
                                                             STR_5 7E98  
                                                             STR_6 7FA8  
                                                             STR_7 7E64  
                                                             STR_8 7F55  
                                                             STR_9 7F71  
                                                             u2300 08C0  
                                                             u2220 07A8  
                                                             u2301 08BA  
                                                             u2221 07A2  
                                                             u2310 0936  
                                                             u2230 07C0  
                                                             u2311 0930  
                                                             u2231 07BA  
                                                             _LATC 000F8B  
                                                             u2400 0A42  
                                                             u2320 0952  
                                                             u2240 07D4  
                                                             u2401 0A3C  
                                                             u2321 094A  
                                                             u2241 07CE  
                                                             u2410 0A68  
                                                             u2330 0956  
                                                             u2250 0820  
                                                             u4010 2B7A  
                                                             u2411 0A62  
                                                             u2251 081A  
                                                             u4011 2B74  
                                                             u3300 0E46  
                                                             u2500 0BDC  
                                                             u2420 0AA8  
                                                             u2340 0984  
                                                             u2260 083C  
                                                             u2180 3070  
                                                             u4100 1C64  
                                                             u4020 2BC6  
                                                             u3301 0E40  
                                                             u2501 0BD6  
                                                             u2421 0AA2  
                                                             u2341 097E  
                                                             u2261 0836  
                                                             u2181 306A  
                                                             u4101 1C5E  
                                                             u4021 2BC0  
                                                             u3310 0FC6  
                                                             u3230 0D50  
                                                             u2510 0BF6  
                                                             u2430 0AF2  
                                                             u2350 09AA  
                                                             u2270 0854  
                                                             u2190 2EFA  
                                                             u4110 1C9E  
                                                             u3231 0D4A  
                                                             u2511 0BF0  
                                                             u2431 0AEC  
                                                             u2351 09A4  
                                                             u2271 084E  
                                                             u2191 2EF4  
                                                             u4111 1C98  
                                                             u3400 116E  
                                                             u3320 1026  
                                                             u3240 0D68  
                                                             u2600 0D16  
                                                             u2520 0C14  
                                                             u2440 0B30  
                                                             u2360 09D2  
                                                             u2280 0868  
                                                             u4120 1CD8  
                                                             u5000 00BA  
                                                             u3401 1168  
                                                             u3321 1020  
                                                             u3241 0D62  
                                                             u2601 0D10  
                                                             u2521 0C0E  
                                                             u2441 0B2A  
                                                             u2361 09CC  
                                                             u2281 0862  
                                                             u4121 1CD2  
                                                             u5001 00B2  
                                                             u3410 11AE  
                                                             u3330 104E  
                                                             u3250 0D7C  
                                                             u2530 0C2E  
                                                             u2450 0B44  
                                                             u2370 09E4  
                                                             u2290 08AE  
                                                             u2610 2D82  
                                                             u4130 1D12  
                                                             u5010 00BE  
                                                             u3411 11A8  
                                                             u3331 1048  
                                                             u3315 0FBA  
                                                             u3251 0D76  
                                                             u2531 0C28  
                                                             u2451 0B3E  
                                                             u2371 09DE  
                                                             u2291 08A8  
                                                             u2611 2D7C  
                                                             u4131 1D0C  
                                                             u3340 1064  
                                                             u3260 0DC6  
                                                             u2540 0C4C  
                                                             u2460 0B76  
                                                             u2380 09F8  
                                                             u2620 2DB4  
                                                             u2700 1E1A  
                                                             u4140 1D4C  
                                                             u5100 025A  
                                                             u5020 00E4  
                                                             u3341 105E  
                                                             u3261 0DC0  
                                                             u2541 0C46  
                                                             u2461 0B70  
                                                             u2381 09F2  
                                                             u2621 2DAE  
                                                             u2701 1E14  
                                                             u4141 1D46  
                                                             u5101 0254  
                                                             u5021 00DC  
                                                             u3350 1096  
                                                             u3270 0DDE  
                                                             u2550 0C8A  
                                                             u2470 0B8C  
                                                             u2390 0A30  
                                                             u2630 2F40  
                                                             u2710 1E52  
                                                             u4150 1D86  
                                                             u5110 026E  
                                                             u5030 00E8  
                                                             u3351 1090  
                                                             u3271 0DD8  
                                                             u2551 0C84  
                                                             u2471 0B86  
                                                             u2391 0A2A  
                                                             u2631 2F38  
                                                             u2711 1E4C  
                                                             u4151 1D80  
                                                             u5111 0268  
                                                             u3360 10B4  
                                                             u3280 0DF2  
                                                             u2560 0CA2  
                                                             u2480 0BB0  
                                                             u2640 2F44  
                                                             u2720 1E74  
                                                             u4080 1C24  
                                                             u4400 2898  
                                                             u5200 044E  
                                                             u5120 02B4  
                                                             u5040 010E  
                                                             u2800 26E6  
                                                             u4160 24AC  
                                                             u3361 10AE  
                                                             u3281 0DEC  
                                                             u2561 0C9C  
                                                             u2481 0BAA  
                                                             u2721 1E6E  
                                                             u4081 1C1E  
                                                             u4401 2892  
                                                             u5121 02AE  
                                                             u5041 0106  
                                                             u2801 26E0  
                                                             u4161 24A6  
                                                             u3370 10CE  
                                                             u3290 0E32  
                                                             u2570 0CB6  
                                                             u2490 0BC6  
                                                             u2730 1F38  
                                                             u4090 1C3E  
                                                             u4410 28AC  
                                                             u5210 0474  
                                                             u5130 036E  
                                                             u5050 0112  
                                                             u2810 2734  
                                                             u2650 2D26  
                                                             u4170 24E4  
                                                             u3371 10C8  
                                                             u3291 0E2C  
                                                             u2571 0CB0  
                                                             u2491 0BC0  
                                                             u2731 1F30  
                                                             u4091 1C38  
                                                             u4411 28A6  
                                                             u5211 046C  
                                                             u5131 0368  
                                                             u2811 272E  
                                                             u2651 2D20  
                                                             u4171 24DE  
                                                             u3380 10EC  
                                                             u2580 0CDA  
                                                             u2740 1F3C  
                                                             u4420 2912  
                                                             u4500 214A  
                                                             u5300 06D2  
                                                             u5220 0478  
                                                             u5140 0382  
                                                             u5060 015C  
                                                             u2820 2750  
                                                             u2660 2D56  
                                                             u4180 2500  
                                                             u3381 10E6  
                                                             u2581 0CD4  
                                                             u4421 290C  
                                                             u4501 2144  
                                                             u5301 06CC  
                                                             u5141 037C  
                                                             u5061 0156  
                                                             u2821 274A  
                                                             u2661 2D50  
                                                             u4181 24FA  
                                                             u3390 113A  
                                                             u3470 2F68  
                                                             u2590 0CF2  
                                                             u2750 1F56  
                                                             u2670 2C0E  
                                                             u4350 2E5A  
                                                             u4430 27A6  
                                                             u4510 2196  
                                                             u5310 06E6  
                                                             u5230 04C0  
                                                             u5150 03BA  
                                                             u5070 01AE  
                                                             u2830 278A  
                                                             u4190 257E  
                                                             u3391 1134  
                                                             u3471 2F62  
                                                             u2591 0CEC  
                                                             u2751 1F50  
                                                             u4351 2E54  
                                                             u4431 27A0  
                                                             u4511 2190  
                                                             u5311 06E0  
                                                             u5231 04BA  
                                                             u5151 03B4  
                                                             u5071 01A8  
                                                             u2831 2784  
                                                             u4191 2578  
                                                             u5400 2276  
                                                             u2760 1F6C  
                                                             u2680 2C46  
                                                             u4360 2E7A  
                                                             u4440 27BA  
                                                             u4600 132C  
                                                             u4520 21E2  
                                                             u5320 0712  
                                                             u5240 0512  
                                                             u5160 03E4  
                                                             u5080 01C2  
                                                             u2761 1F66  
                                                             u4361 2E74  
                                                             u4441 27B4  
                                                             u4601 1326  
                                                             u4521 21DC  
                                                             u5321 070C  
                                                             u5241 050C  
                                                             u5161 03DE  
                                                             u5081 01BC  
                                                             u5410 22A8  
                                                             u2690 2C58  
                                                             u2770 2CB2  
                                                             u4370 298A  
                                                             u4450 2820  
                                                             u4610 13AA  
                                                             u4530 11F4  
                                                             u5330 0754  
                                                             u5250 0526  
                                                             u5170 0420  
                                                             u5090 0208  
                                                             u5411 22A2  
                                                             u2691 2C52  
                                                             u2771 2CAC  
                                                             u4371 2984  
                                                             u4451 281A  
                                                             u4611 13A4  
                                                             u4531 11EE  
                                                             u5331 074E  
                                                             u5251 0520  
                                                             u5171 0418  
                                                             u5091 0202  
                                                             u5420 22C0  
                                                             u2780 2CCE  
                                                             u4460 2A7C  
                                                             u4380 299E  
                                                             u4700 14FA  
                                                             u4620 13D0  
                                                             u4540 120C  
                                                             u5260 056C  
                                                             u5180 0424  
                                                             u5340 25CA  
                                                             u5421 22BA  
                                                             u5405 2268  
                                                             u2677 2C04  
                                                             u2781 2CC8  
                                                             u4461 2A76  
                                                             u4381 2998  
                                                             u4701 14F4  
                                                             u4621 13CA  
                                                             u4541 1206  
                                                             u5261 0566  
                                                             u5341 25C4  
                                                             u5430 22F0  
                                                             u4470 2A90  
                                                             u4390 2A04  
                                                             u4710 1514  
                                                             u4630 1402  
                                                             u4550 1220  
                                                             u5270 05BE  
                                                             u5190 044A  
                                                             u2790 26C0  
                                                             u5350 2606  
                                                             u5431 22EA  
                                                             u2687 2C3C  
                                                             u4471 2A8A  
                                                             u4391 29FE  
                                                             u4711 150E  
                                                             u4631 13FC  
                                                             u4551 121A  
                                                             u5271 05B8  
                                                             u5191 0442  
                                                             u2791 26BA  
                                                             u5351 2600  
                                                             u5440 2318  
                                                             u4800 246C  
                                                             u4480 2AE6  
                                                             u4720 1532  
                                                             u4640 142E  
                                                             u4560 126E  
                                                             u5280 05D2  
                                                             u5360 2642  
                                                             u5441 2312  
                                                             u4801 2466  
                                                             u4481 2AE0  
                                                             u4721 152C  
                                                             u4641 1428  
                                                             u4561 1268  
                                                             u5281 05CC  
                                                             u5361 263C  
                                                             u5450 232C  
                                                             u4730 1580  
                                                             u4650 1448  
                                                             u4570 1286  
                                                             u4810 1A04  
                                                             u4490 20FE  
                                                             u5290 0618  
                                                             u5370 267C  
                                                             u5451 2326  
                                                             u4731 157A  
                                                             u4651 1442  
                                                             u4571 1280  
                                                             u4811 19FE  
                                                             u4491 20F8  
                                                             u5291 0612  
                                                             u5371 2676  
                                                             u4740 15B6  
                                                             u4660 146C  
                                                             u4580 129A  
                                                             u4900 1BCA  
                                                             u4820 1A16  
                                                             u5380 2690  
                                                             u5460 1FBC  
                                                             _RCIF 007CF5  
                                                             u4741 15B0  
                                                             u4661 1466  
                                                             u4581 1294  
                                                             u4901 1BC4  
                                                             u4821 1A10  
                                                             u5381 268A  
                                                             u5461 1FB6  
                                                             u5390 2238  
                                                             u4910 164C  
                                                             u4750 15EA  
                                                             u4670 1494  
                                                             u4590 12E4  
                                                             u4830 1A7A  
                                                             u5470 203A  
                                                             u5391 2232  
                                                             u4751 15E4  
                                                             u4671 148E  
                                                             u4591 12DE  
                                                             u4831 1A74  
                                                             u5471 2034  
                                                             u4760 2388  
                                                             u4920 1678  
                                                             u4680 14AA  
                                                             u4840 1ADA  
                                                             u5480 204E  
                                                             u4761 2382  
                                                             u4921 1672  
                                                             u4681 14A4  
                                                             u4841 1AD4  
                                                             u5481 2048  
                                                             u4770 23CC  
                                                             u4930 16B2  
                                                             u4690 14DC  
                                                             u4850 1B2C  
                                                             u5490 2062  
                                                             u4771 23C6  
                                                             u4915 1640  
                                                             u4691 14D6  
                                                             u4851 1B26  
                                                             u5491 205C  
                                                             u4780 23F0  
                                                             u4940 16D2  
                                                             u4860 1B52  
                                                             u4781 23EA  
                                                             u4941 16CC  
                                                             u4861 1B4C  
                                                             u4790 2416  
                                                             u4950 1718  
                                                             u4870 1B66  
                                                             u4791 2410  
                                                             u4951 1712  
                                                             u4935 16A6  
                                                             u4871 1B60  
                                                             u4960 1824  
                                                             u4880 1B78  
                                                             u4961 181E  
                                                             u4881 1B72  
                                                             u4970 18C8  
                                                             u4890 1BB8  
                                                             u4971 18C2  
                                                             u4891 1BB2  
                                                             u4980 1990  
                                                             u4990 19B0  
                                                             u4991 19AA  
                                                             u4985 1984  
                                                             _Fosc 7D89  
                                                             _Tosc 00D9  
                                                             _atoi 1DDC  
                                                             _main 3076  
                                                             fsr1h 000FE2  
                                                             fsr2h 000FDA  
                                                             indf1 000FE7  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0077  
                                                             _stop 0073  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0086  
                                                       _Angle_diff 005D  
                                                  ___fldiv@new_exp 0027  
                                                     ___param_bank 000000  
                                                    ___fltol@sign1 0059  
                                                            ?_atoi 000F  
                                                  __end_of___fladd 0D32  
                                                            ?_main 0001  
                                                  __end_of___fldiv 1608  
                                                  __end_of___flneg 2F90  
                                                            STR_10 7F38  
                                                            STR_11 7EFE  
                                                            STR_12 7F1B  
                                                            STR_13 7EE0  
                                                            STR_14 7FD7  
                                                            STR_15 7E25  
                                                            STR_16 7FC2  
                                                            STR_17 7DDF  
                                                  __end_of___flmul 11D6  
                                                  __end_of___flsub 2ECA  
                                                  __end_of___fltol 2356  
                                                  __end_of_Twister 2B38  
                                                            i2l401 001C  
                                                            i2l404 006E  
                                                            i2l405 0078  
                                                            _RCREG 000FAE  
                                                            _SPBRG 000FAF  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISB 000F93  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                 Twister@direction 000E  
                                                            _X_dir 0072  
                                                            _Y_dir 0071  
                                                            _State 0076  
                                           __size_of_add_component 01F6  
                                                  __end_of_isdigit 2F4E  
                                                  __end_of_memmove 2790  
                                                            atoi@n 001C  
                                                            atoi@s 000F  
                               __end_of_desired_BaudRate@main$F489 7D81  
                                       _desired_BaudRate@main$F489 7D7D  
                                                            _toint 7D79  
                                                  __end_of_isspace 2DC6  
                                                            tablat 000FF5  
                                                    _start_up_menu 1F9A  
                                                  _change_sequence 2B38  
                                         __end_of_fetch_parameters 221E  
                                                            ttemp5 0078  
                                                            ttemp6 007B  
                                                  Y_axis@direction 000E  
                                                            ttemp7 007F  
                                                            status 000FD8  
                                                            wtemp8 0078  
                                                  __end_of_strncat 2CE4  
                                                  __end_of_strrchr 300A  
                                                     __end_of_Fosc 7D8D  
                                                  __initialization 2DC6  
                                                     __end_of_atoi 1F9A  
                                                     __end_of_main 3094  
                                                       _Pick_Angle 0065  
                                                           ??_atoi 0011  
                                                           ??_main 005B  
                                                    __activetblptr 000002  
                                                    print_string@i 000D  
                                                   ?_start_up_menu 0001  
                                                           i2l3891 0014  
                                                           i2l3893 0030  
                                                           i2l3895 0070  
                                                           i2l3897 0074  
                                                 __end_of___xxtofl 1BE6  
                                          remove_component@rm_comp 001E  
                                                           _X_Pick 006D  
                                                           _Y_Pick 0069  
                                                           _X_diff 0061  
                                                           _Y_diff 005F  
                                                           _X_axis 2974  
                                                           _Y_axis 2882  
                                                           _Z_axis 2790  
                                                    _add_component 1BE6  
                                                ?_remove_component 0001  
                                                           ___flge 2356  
                                                        ??___fladd 0010  
                                                           ___wmul 300A  
                                                        ??___fldiv 001E  
                                                        ??___flneg 000C  
                                                        ??___flmul 0010  
                                                        ??___flsub 0020  
                                                        ??___fltol 00B4  
                                                 ??_pick_and_place 003B  
                                               ??_remove_component 001A  
                                                        ??_Twister 000E  
                                                           clear_0 2E04  
                                                           clear_1 2E10  
                                                           isa$std 000001  
                                                 __end_of_ms_delay 2E80  
                                                           _roundf 1608  
                                                           _strlen 2ECA  
                                                     __pdataCOMRAM 0075  
                                                        ??_isdigit 000A  
                                                        ??_memmove 0012  
                                                    _Place_Angle_D 00A4  
                                                     __mediumconst 7D78  
                                                        ??_isspace 000A  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                          __end_of_change_sequence 2BD0  
                                         fetch_parameters@Componnt 0008  
                                                        ??_strncat 0012  
                                                        ??_strrchr 001A  
                                                _return_to_initial 258E  
                                                       ___flge@ff1 002F  
                                                       ___flge@ff2 0033  
                                                     ___xxtofl@arg 0012  
                                                     ___xxtofl@exp 0011  
                                                     ___xxtofl@val 0008  
                                                       __accesstop 0080  
                                          __end_of__initialization 2E16  
                                               __size_of___memrchr 0082  
                                               ?_return_to_initial 0001  
                                                       ___flneg@f1 0008  
                                                serial_tx_char@val 0008  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0055  
                                               _pick_and_place$590 00BF  
                                               _pick_and_place$584 00B7  
                                               _pick_and_place$595 00C3  
                                               _pick_and_place$587 00BB  
                                               _pick_and_place$597 00C7  
                                               _pick_and_place$599 00CB  
                                                   ?_add_component 0001  
                                                  _init_interrupts 30AC  
                                              ??_return_to_initial 000F  
                                                   __pcstackCOMRAM 0001  
                                                     __pidataBANK0 3094  
                                                    __end_of_toint 7D7D  
                                                      ms_delay@val 0008  
                                                 _desired_BaudRate 7D81  
                                          __size_of_serial_tx_char 0020  
                                        __end_of_return_to_initial 2696  
                                                  ??_start_up_menu 003D  
                                                      _Place_Angle 0063  
                                                      _New_char_RX 0074  
                                                       __pbssBANK0 0080  
                                            __end_of_Rx_char_USART 0086  
                                        remove_component@indxToDel 001C  
                                                       _angle_diff 00A2  
                                                          ?_X_axis 0001  
                                                          ?_Y_axis 0001  
                                                          ?_Z_axis 0001  
                                                          ?___flge 002F  
                                                          ?___wmul 0008  
                                                          ?_roundf 003B  
                                                __end_of___memrchr 2D66  
                                                          ?_strlen 0008  
                                                        ?___xxtofl 0008  
                                              pick_and_place@i_600 00D1  
                                              pick_and_place@i_601 00D3  
                                              pick_and_place@i_591 00CD  
                                              pick_and_place@i_593 00CF  
                                              pick_and_place@i_585 00B9  
                                              pick_and_place@i_594 00C1  
                                              pick_and_place@i_596 00C5  
                                              pick_and_place@i_588 00BD  
                                              pick_and_place@i_598 00C9  
                                                 ?_change_sequence 0001  
                                                          _RX_Char 006F  
                                          __end_of_init_interrupts 30B8  
                                                ?_fetch_parameters 0001  
                                                  ??_add_component 001E  
                                                        ?_ms_delay 0008  
                                                          _X_Place 006B  
                                                          _Y_Place 0067  
                                               ??_fetch_parameters 0008  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  pick_and_place@i 00B5  
                                                       _init_PORTS 3034  
                                                       _init_USART 2F90  
                                                  __size_of_X_axis 00F2  
                                                  __size_of_Y_axis 00F2  
                                                          _Rot_dir 0070  
                                                  __size_of_Z_axis 00F2  
                                                  __size_of___flge 0128  
                                                          ___fladd 078A  
                                                          ___fldiv 11D6  
                                                          ___flneg 2F4E  
                                                          ___flmul 0D32  
                                                          ___flsub 2E80  
                                                          ___fltol 221E  
                                                  __size_of___wmul 002A  
                                                          _Twister 2A66  
                                                          __pcinit 2DC6  
                                                          __ramtop 0600  
                                                          __ptext0 3076  
                                                          __ptext1 1F9A  
                                                          __ptext2 258E  
                                                          __ptext3 247E  
                                                          __ptext4 2FD0  
                                                          __ptext5 2CE4  
                                                          __ptext6 2696  
                                                          __ptext7 008A  
                                                          __ptext8 20E6  
                                                          __ptext9 19EE  
                                                  __size_of_roundf 03E6  
                                                  __size_of_strlen 0042  
                                                          _isdigit 2F0C  
                                                          _memmove 2696  
                                                       ??___xxtofl 000C  
                                                          _isspace 2D66  
                                       __size_of_return_to_initial 0108  
                                                          atoi@neg 0015  
                                                          _strncat 2C5E  
                                                          _strrchr 2FD0  
                                             end_of_initialization 2E16  
                                              remove_component@ptr 001A  
                                                    __Lmediumconst 7D78  
                                                       ??_ms_delay 000A  
                                                        _RCSTAbits 000FAB  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                          roundf@e 0047  
                                                          roundf@u 004D  
                                                          roundf@x 003B  
                                                          roundf@y 0051  
                                                          strlen@a 000A  
                                                          strlen@s 0008  
                                               add_component@F3128 0075  
                                                      ___fladd@grs 0017  
                                                   _serial_tx_char 3056  
                                                    ___xxtofl@sign 0010  
                                        __size_of_remove_component 0110  
                                                        _TRISCbits 000F94  
                                                      ___fldiv@grs 0029  
                                                      ___fldiv@rem 0022  
                                                    ?_print_string 0009  
                                                      ___flmul@grs 0015  
                                                 ?_init_interrupts 0001  
                                                        _TXSTAbits 000FAC  
                                                      ___memrchr@c 000E  
                                                      ___memrchr@m 000C  
                                                      ___memrchr@n 0010  
                                                      ___memrchr@s 0014  
                                         __end_of_desired_BaudRate 7D85  
                                                      ?_init_PORTS 0001  
                                                      ?_init_USART 0001  
                                                   __end_of_X_axis 2A66  
                                                   __end_of_Y_axis 2974  
                                                   __end_of_Z_axis 2882  
                                                   __end_of___flge 247E  
                                                   __end_of___wmul 3034  
                                                    __pidataCOMRAM 30B8  
                                           __end_of_serial_tx_char 3076  
                                                   __end_of_roundf 19EE  
                                                   __end_of_strlen 2F0C  
                                              start_initialization 2DC6  
                                                   ??_print_string 000B  
                                                        _X_Place_D 00A8  
                                                        _Y_Place_D 00A6  
                                                  X_axis@direction 000E  
                                                     _Pick_Angle_D 00AA  
                                                   _Tosc@main$F488 00D5  
                                                         ??_X_axis 000E  
                                                         ??_Y_axis 000E  
                                                         ??_Z_axis 000E  
                                                         ??___flge 0037  
                                                         ??___wmul 000C  
                                                      __pdataBANK0 00D5  
                                                   _lenth_of_array 00DD  
                                               return_to_initial@i 0010  
                                                         ??_roundf 003F  
                                                         ??_strlen 000A  
                                                  ?_serial_tx_char 0001  
                                                        ___fladd@a 000C  
                                                        ___fladd@b 0008  
                                                        ___fldiv@a 001A  
                                                        ___fldiv@b 0016  
                                                        ___flmul@a 000C  
                                                        ___flmul@b 0008  
                                                      __pbssCOMRAM 005B  
                                                 change_sequence@i 0012  
                                                        ___flsub@a 001C  
                                                        ___flsub@b 0018  
                                                    __pcstackBANK0 00B4  
                                          __size_of_pick_and_place 0700  
                                                        ___memrchr 2CE4  
                                                __size_of___xxtofl 01F8  
                                              __size_of_init_PORTS 0022  
                                              __size_of_init_USART 0040  
                                            __end_of_start_up_menu 20E6  
                                                        _atoi$1067 0017  
                                                        _atoi$1068 001B  
                                                        _atoi$1069 0019  
                                                  Z_axis@direction 000E  
                                                __size_of_ms_delay 005C  
                                                        __pintcode 0008  
                                                    __pmediumconst 7D78  
                                                         ?___fladd 0008  
                                                         ?___fldiv 0016  
                                                         ?___flneg 0008  
                                                         ?___flmul 0008  
                                                         ?___flsub 0018  
                                                         ?___fltol 0055  
                                                         ?_Twister 0001  
                                                   Rx_char_USART@i 0006  
                                        __size_of_fetch_parameters 0138  
                                           __size_of_Rx_char_USART 007E  
                                                print_string@strng 0009  
                                                         ?_isdigit 0008  
                                                         ?_memmove 000C  
                                                         ?_isspace 0008  
                                                 _remove_component 247E  
                                                   _Fosc@main$F487 7D85  
                                                       ?___memrchr 000C  
                                                         ?_strncat 000C  
                                                         ?_strrchr 0016  
                                                        _input_str 00DF  
                                                   ___wmul@product 000C  
                                         __size_of_change_sequence 0098  
                                                         _PIE1bits 000F9D  
                                            __end_of_add_component 1DDC  
                                                         i2u433_40 002E  
                                                         i2u433_41 0028  
                                                         _PIR1bits 000F9E  
                                                         i2u434_40 006C  
                                                         i2u434_41 0066  
                                             __end_of_print_string 2C5E  
                                                        _testarray 0080  
                                                ___wmul@multiplier 0008  
                                           __end_of_Fosc@main$F487 7D89  
                                                     _isspace$1085 000E  
                                                        copy_data0 2DDA  
                                                         _X_Pick_D 005B  
                                                    _Rx_char_USART 0008  
                                                         _Y_Pick_D 00AC  
                                                       roundf@F528 009E  
                                                         __Hrparam 0000  
                                                     ??_init_PORTS 0008  
                                                     ??_init_USART 005B  
                                                         __Lrparam 0000  
                                                        memmove@d1 000C  
                                                        memmove@s1 000E  
                                                 __size_of___fladd 05A8  
                                                 __size_of___fldiv 0432  
                                                 __size_of___flneg 0042  
                                                 __size_of___flmul 04A4  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 0138  
                                                 __size_of_Twister 00D2  
                                                        ms_delay@i 000A  
                                                        ms_delay@j 000C  
                                                         ___xxtofl 19EE  
                                                   _pick_and_place 008A  
                                                 __size_of_isdigit 0042  
                                                 __size_of_memmove 00FA  
                                                      ??___memrchr 0012  
                                                 __size_of_isspace 0060  
                                                         __ptext10 11D6  
                                                         __ptext11 2790  
                                                         __ptext20 2BD0  
                                                         __ptext12 2882  
                                                         __ptext21 3056  
                                                         __ptext13 2974  
                                                         __ptext30 078A  
                                                         __ptext22 1DDC  
                                                         __ptext14 2A66  
                                                         __ptext31 2F4E  
                                                         __ptext23 2D66  
                                                         __ptext15 2E24  
                                                         __ptext32 0D32  
                                                         __ptext24 2F0C  
                                                         __ptext16 2B38  
                                                         __ptext33 2356  
                                                         __ptext25 300A  
                                                         __ptext17 1BE6  
                                                         __ptext34 221E  
                                                         __ptext26 30AC  
                                                         __ptext18 2C5E  
                                                         __ptext35 3034  
                                                         __ptext27 2F90  
                                                         __ptext19 2ECA  
                                                         __ptext28 1608  
                                                         __ptext29 2E80  
                                               __end_of_init_PORTS 3056  
                                               __end_of_init_USART 2FD0  
                                                 __size_of_strncat 0086  
                                                 __size_of_strrchr 003A  
                                                   ?_Rx_char_USART 0001  
                                                    __size_of_atoi 01BE  
                                                    __size_of_main 001E  
                                                         _ms_delay 2E24  
                                                         isa$xinst 000000  
                                                         _sequence 00E9  
                                         __size_of_init_interrupts 000C  
                                                ??_change_sequence 000F  
                                                         int$flags 0077  
                                                 ??_serial_tx_char 0008  
                                                         _rotation 00AE  
                                                 _fetch_parameters 20E6  
                                           __end_of_pick_and_place 078A  
                                                       _INTCONbits 000FF2  
                                           return_to_initial@i_604 0012  
                                           return_to_initial@i_605 0014  
                                           return_to_initial@i_606 0016  
                                                         isdigit@c 0008  
                                                         memmove@d 0014  
                                                         memmove@n 0010  
                                                         memmove@s 0016  
                                                         intlevel2 30BA  
                                                         isspace@c 0008  
                                                   _displacement_X 00B2  
                                                   _displacement_Y 00B0  
                                            __size_of_print_string 008E  
                                         __end_of_remove_component 258E  
                                           pick_and_place@Componnt 00B4  
                                                  ?_pick_and_place 0001  
                                                         strncat@d 000C  
                                                         strncat@n 0010  
                                                         strncat@s 000E  
                                                         strrchr@c 0018  
                                                         strrchr@s 0016  
                                                    ___fladd@signs 0014  
                                                  ??_Rx_char_USART 0001  
                                                     _print_string 2BD0  
                                                     ___fladd@aexp 0015  
                                                     ___fladd@bexp 0016  
                                        add_component@add_componnt 001E  
                                                   start_up_menu@i 0040  
                                                      _roundf$1335 0049  
                                                      _roundf$1336 0043  
