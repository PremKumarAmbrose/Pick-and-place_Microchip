

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 28 20:12:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F452 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataBANK0
    96  0033E6                     __pidataBANK0:
    97                           	callstack 0
    98                           
    99                           ;initializer for _Tosc@main$F785
   100  0033E6  37BD               	dw	14269
   101  0033E8  3486               	dw	13446
   102                           
   103                           ;initializer for _Tosc
   104  0033EA  37BD               	dw	14269
   105  0033EC  3486               	dw	13446
   106                           
   107                           ;initializer for add_component@F3138
   108  0033EE  20                 	db	32
   109  0033EF  00                 	db	0
   110                           
   111                           ;initializer for _lenth_of_array
   112  0033F0  001E               	dw	30
   113                           
   114                           ;initializer for _new_TMR1L@main$F817
   115  0033F2  4D                 	db	77
   116                           
   117                           ;initializer for _new_TMR1H@main$F816
   118  0033F3  FA                 	db	250
   119                           
   120                           ;initializer for _State
   121  0033F4  30                 	db	48
   122                           
   123                           ;initializer for _new_TMR1L
   124  0033F5  4D                 	db	77
   125                           
   126                           ;initializer for _new_TMR1H
   127  0033F6  FA                 	db	250
   128                           
   129                           ;initializer for _input_str
   130  0033F7  20                 	db	32
   131  0033F8  00                 	db	0
   132  0033F9  00                 	db	0
   133  0033FA  00                 	db	0
   134  0033FB  00                 	db	0
   135  0033FC  00                 	db	0
   136  0033FD  00                 	db	0
   137  0033FE  00                 	db	0
   138  0033FF  00                 	db	0
   139  003400  00                 	db	0
   140                           
   141                           ;initializer for _sequence
   142  003401  43                 	db	67
   143  003402  41                 	db	65
   144  003403  42                 	db	66
   145  003404  00                 	db	0
   146                           
   147                           	psect	mediumconst
   148  007D50                     __pmediumconst:
   149                           	callstack 0
   150  007D50  00                 	db	0
   151  007D51  0000               	dw	0
   152  007D53  4B00               	dw	19200
   153  007D55                     __end_of_toint:
   154                           	callstack 0
   155  007D55  0000               	dw	0
   156  007D57  4616               	dw	17942
   157  007D59                     __end_of_desired_BaudRate@main$F786:
   158                           	callstack 0
   159  007D59  0000               	dw	0
   160  007D5B  4616               	dw	17942
   161  007D5D                     __end_of_desired_BaudRate:
   162                           	callstack 0
   163  007D5D  2400               	dw	9216
   164  007D5F  4A74               	dw	19060
   165  007D61                     __end_of_Fosc@main$F784:
   166                           	callstack 0
   167  007D61  2400               	dw	9216
   168  007D63  4A74               	dw	19060
   169  007D65                     __end_of_Fosc:
   170                           	callstack 0
   171  007D65                     STR_1:
   172  007D65  0A                 	db	10
   173  007D66  0A                 	db	10
   174  007D67  31                 	db	49	;'1'
   175  007D68  2E                 	db	46
   176  007D69  20                 	db	32
   177  007D6A  53                 	db	83	;'S'
   178  007D6B  74                 	db	116	;'t'
   179  007D6C  61                 	db	97	;'a'
   180  007D6D  72                 	db	114	;'r'
   181  007D6E  74                 	db	116	;'t'
   182  007D6F  20                 	db	32
   183  007D70  53                 	db	83	;'S'
   184  007D71  65                 	db	101	;'e'
   185  007D72  71                 	db	113	;'q'
   186  007D73  75                 	db	117	;'u'
   187  007D74  65                 	db	101	;'e'
   188  007D75  6E                 	db	110	;'n'
   189  007D76  63                 	db	99	;'c'
   190  007D77  65                 	db	101	;'e'
   191  007D78  0A                 	db	10
   192  007D79  32                 	db	50	;'2'
   193  007D7A  2E                 	db	46
   194  007D7B  20                 	db	32
   195  007D7C  43                 	db	67	;'C'
   196  007D7D  68                 	db	104	;'h'
   197  007D7E  61                 	db	97	;'a'
   198  007D7F  6E                 	db	110	;'n'
   199  007D80  67                 	db	103	;'g'
   200  007D81  65                 	db	101	;'e'
   201  007D82  20                 	db	32
   202  007D83  73                 	db	115	;'s'
   203  007D84  65                 	db	101	;'e'
   204  007D85  71                 	db	113	;'q'
   205  007D86  75                 	db	117	;'u'
   206  007D87  65                 	db	101	;'e'
   207  007D88  6E                 	db	110	;'n'
   208  007D89  63                 	db	99	;'c'
   209  007D8A  65                 	db	101	;'e'
   210  007D8B  0A                 	db	10
   211  007D8C  33                 	db	51	;'3'
   212  007D8D  2E                 	db	46
   213  007D8E  20                 	db	32
   214  007D8F  41                 	db	65	;'A'
   215  007D90  64                 	db	100	;'d'
   216  007D91  64                 	db	100	;'d'
   217  007D92  20                 	db	32
   218  007D93  6E                 	db	110	;'n'
   219  007D94  65                 	db	101	;'e'
   220  007D95  77                 	db	119	;'w'
   221  007D96  20                 	db	32
   222  007D97  63                 	db	99	;'c'
   223  007D98  6F                 	db	111	;'o'
   224  007D99  6D                 	db	109	;'m'
   225  007D9A  70                 	db	112	;'p'
   226  007D9B  6F                 	db	111	;'o'
   227  007D9C  6E                 	db	110	;'n'
   228  007D9D  65                 	db	101	;'e'
   229  007D9E  6E                 	db	110	;'n'
   230  007D9F  74                 	db	116	;'t'
   231  007DA0  0A                 	db	10
   232  007DA1  34                 	db	52	;'4'
   233  007DA2  2E                 	db	46
   234  007DA3  20                 	db	32
   235  007DA4  52                 	db	82	;'R'
   236  007DA5  65                 	db	101	;'e'
   237  007DA6  6D                 	db	109	;'m'
   238  007DA7  6F                 	db	111	;'o'
   239  007DA8  76                 	db	118	;'v'
   240  007DA9  65                 	db	101	;'e'
   241  007DAA  20                 	db	32
   242  007DAB  61                 	db	97	;'a'
   243  007DAC  20                 	db	32
   244  007DAD  63                 	db	99	;'c'
   245  007DAE  6F                 	db	111	;'o'
   246  007DAF  6D                 	db	109	;'m'
   247  007DB0  70                 	db	112	;'p'
   248  007DB1  6F                 	db	111	;'o'
   249  007DB2  6E                 	db	110	;'n'
   250  007DB3  65                 	db	101	;'e'
   251  007DB4  6E                 	db	110	;'n'
   252  007DB5  74                 	db	116	;'t'
   253  007DB6  00                 	db	0
   254  007DB7                     STR_17:
   255  007DB7  0A                 	db	10
   256  007DB8  63                 	db	99	;'c'
   257  007DB9  6F                 	db	111	;'o'
   258  007DBA  6D                 	db	109	;'m'
   259  007DBB  70                 	db	112	;'p'
   260  007DBC  6F                 	db	111	;'o'
   261  007DBD  6E                 	db	110	;'n'
   262  007DBE  65                 	db	101	;'e'
   263  007DBF  6E                 	db	110	;'n'
   264  007DC0  74                 	db	116	;'t'
   265  007DC1  20                 	db	32
   266  007DC2  69                 	db	105	;'i'
   267  007DC3  73                 	db	115	;'s'
   268  007DC4  20                 	db	32
   269  007DC5  6E                 	db	110	;'n'
   270  007DC6  6F                 	db	111	;'o'
   271  007DC7  74                 	db	116	;'t'
   272  007DC8  20                 	db	32
   273  007DC9  69                 	db	105	;'i'
   274  007DCA  6E                 	db	110	;'n'
   275  007DCB  20                 	db	32
   276  007DCC  74                 	db	116	;'t'
   277  007DCD  68                 	db	104	;'h'
   278  007DCE  65                 	db	101	;'e'
   279  007DCF  20                 	db	32
   280  007DD0  73                 	db	115	;'s'
   281  007DD1  65                 	db	101	;'e'
   282  007DD2  71                 	db	113	;'q'
   283  007DD3  75                 	db	117	;'u'
   284  007DD4  65                 	db	101	;'e'
   285  007DD5  6E                 	db	110	;'n'
   286  007DD6  63                 	db	99	;'c'
   287  007DD7  65                 	db	101	;'e'
   288  007DD8  2E                 	db	46
   289  007DD9  20                 	db	32
   290  007DDA  54                 	db	84	;'T'
   291  007DDB  72                 	db	114	;'r'
   292  007DDC  79                 	db	121	;'y'
   293  007DDD  20                 	db	32
   294  007DDE  73                 	db	115	;'s'
   295  007DDF  65                 	db	101	;'e'
   296  007DE0  6C                 	db	108	;'l'
   297  007DE1  65                 	db	101	;'e'
   298  007DE2  63                 	db	99	;'c'
   299  007DE3  74                 	db	116	;'t'
   300  007DE4  69                 	db	105	;'i'
   301  007DE5  6E                 	db	110	;'n'
   302  007DE6  67                 	db	103	;'g'
   303  007DE7  20                 	db	32
   304  007DE8  61                 	db	97	;'a'
   305  007DE9  6E                 	db	110	;'n'
   306  007DEA  6F                 	db	111	;'o'
   307  007DEB  74                 	db	116	;'t'
   308  007DEC  68                 	db	104	;'h'
   309  007DED  65                 	db	101	;'e'
   310  007DEE  72                 	db	114	;'r'
   311  007DEF  20                 	db	32
   312  007DF0  63                 	db	99	;'c'
   313  007DF1  6F                 	db	111	;'o'
   314  007DF2  6D                 	db	109	;'m'
   315  007DF3  70                 	db	112	;'p'
   316  007DF4  6F                 	db	111	;'o'
   317  007DF5  6E                 	db	110	;'n'
   318  007DF6  65                 	db	101	;'e'
   319  007DF7  6E                 	db	110	;'n'
   320  007DF8  74                 	db	116	;'t'
   321  007DF9  3A                 	db	58	;':'
   322  007DFA  20                 	db	32
   323  007DFB  0A                 	db	10
   324  007DFC  00                 	db	0
   325  007DFD                     STR_15:
   326  007DFD  0A                 	db	10
   327  007DFE  57                 	db	87	;'W'
   328  007DFF  68                 	db	104	;'h'
   329  007E00  69                 	db	105	;'i'
   330  007E01  63                 	db	99	;'c'
   331  007E02  68                 	db	104	;'h'
   332  007E03  20                 	db	32
   333  007E04  63                 	db	99	;'c'
   334  007E05  6F                 	db	111	;'o'
   335  007E06  6D                 	db	109	;'m'
   336  007E07  70                 	db	112	;'p'
   337  007E08  6F                 	db	111	;'o'
   338  007E09  6E                 	db	110	;'n'
   339  007E0A  65                 	db	101	;'e'
   340  007E0B  6E                 	db	110	;'n'
   341  007E0C  74                 	db	116	;'t'
   342  007E0D  20                 	db	32
   343  007E0E  77                 	db	119	;'w'
   344  007E0F  6F                 	db	111	;'o'
   345  007E10  75                 	db	117	;'u'
   346  007E11  6C                 	db	108	;'l'
   347  007E12  64                 	db	100	;'d'
   348  007E13  20                 	db	32
   349  007E14  79                 	db	121	;'y'
   350  007E15  6F                 	db	111	;'o'
   351  007E16  75                 	db	117	;'u'
   352  007E17  20                 	db	32
   353  007E18  6C                 	db	108	;'l'
   354  007E19  69                 	db	105	;'i'
   355  007E1A  6B                 	db	107	;'k'
   356  007E1B  65                 	db	101	;'e'
   357  007E1C  20                 	db	32
   358  007E1D  74                 	db	116	;'t'
   359  007E1E  6F                 	db	111	;'o'
   360  007E1F  20                 	db	32
   361  007E20  72                 	db	114	;'r'
   362  007E21  65                 	db	101	;'e'
   363  007E22  6D                 	db	109	;'m'
   364  007E23  6F                 	db	111	;'o'
   365  007E24  76                 	db	118	;'v'
   366  007E25  65                 	db	101	;'e'
   367  007E26  20                 	db	32
   368  007E27  66                 	db	102	;'f'
   369  007E28  72                 	db	114	;'r'
   370  007E29  6F                 	db	111	;'o'
   371  007E2A  6D                 	db	109	;'m'
   372  007E2B  20                 	db	32
   373  007E2C  74                 	db	116	;'t'
   374  007E2D  68                 	db	104	;'h'
   375  007E2E  65                 	db	101	;'e'
   376  007E2F  20                 	db	32
   377  007E30  20                 	db	32
   378  007E31  73                 	db	115	;'s'
   379  007E32  65                 	db	101	;'e'
   380  007E33  71                 	db	113	;'q'
   381  007E34  75                 	db	117	;'u'
   382  007E35  65                 	db	101	;'e'
   383  007E36  6E                 	db	110	;'n'
   384  007E37  63                 	db	99	;'c'
   385  007E38  65                 	db	101	;'e'
   386  007E39  3F                 	db	63	;'?'
   387  007E3A  0A                 	db	10
   388  007E3B  00                 	db	0
   389  007E3C                     STR_7:
   390  007E3C  0A                 	db	10
   391  007E3D  45                 	db	69	;'E'
   392  007E3E  6E                 	db	110	;'n'
   393  007E3F  74                 	db	116	;'t'
   394  007E40  65                 	db	101	;'e'
   395  007E41  72                 	db	114	;'r'
   396  007E42  20                 	db	32
   397  007E43  74                 	db	116	;'t'
   398  007E44  68                 	db	104	;'h'
   399  007E45  65                 	db	101	;'e'
   400  007E46  20                 	db	32
   401  007E47  63                 	db	99	;'c'
   402  007E48  6F                 	db	111	;'o'
   403  007E49  6D                 	db	109	;'m'
   404  007E4A  70                 	db	112	;'p'
   405  007E4B  6F                 	db	111	;'o'
   406  007E4C  6E                 	db	110	;'n'
   407  007E4D  65                 	db	101	;'e'
   408  007E4E  6E                 	db	110	;'n'
   409  007E4F  74                 	db	116	;'t'
   410  007E50  20                 	db	32
   411  007E51  79                 	db	121	;'y'
   412  007E52  6F                 	db	111	;'o'
   413  007E53  75                 	db	117	;'u'
   414  007E54  20                 	db	32
   415  007E55  77                 	db	119	;'w'
   416  007E56  61                 	db	97	;'a'
   417  007E57  6E                 	db	110	;'n'
   418  007E58  74                 	db	116	;'t'
   419  007E59  20                 	db	32
   420  007E5A  74                 	db	116	;'t'
   421  007E5B  6F                 	db	111	;'o'
   422  007E5C  20                 	db	32
   423  007E5D  61                 	db	97	;'a'
   424  007E5E  64                 	db	100	;'d'
   425  007E5F  64                 	db	100	;'d'
   426  007E60  3A                 	db	58	;':'
   427  007E61  20                 	db	32
   428  007E62  41                 	db	65	;'A'
   429  007E63  2C                 	db	44
   430  007E64  20                 	db	32
   431  007E65  42                 	db	66	;'B'
   432  007E66  2C                 	db	44
   433  007E67  20                 	db	32
   434  007E68  43                 	db	67	;'C'
   435  007E69  20                 	db	32
   436  007E6A  6F                 	db	111	;'o'
   437  007E6B  72                 	db	114	;'r'
   438  007E6C  20                 	db	32
   439  007E6D  44                 	db	68	;'D'
   440  007E6E  3F                 	db	63	;'?'
   441  007E6F  00                 	db	0
   442  007E70                     STR_5:
   443  007E70  0A                 	db	10
   444  007E71  50                 	db	80	;'P'
   445  007E72  6C                 	db	108	;'l'
   446  007E73  65                 	db	101	;'e'
   447  007E74  61                 	db	97	;'a'
   448  007E75  73                 	db	115	;'s'
   449  007E76  65                 	db	101	;'e'
   450  007E77  20                 	db	32
   451  007E78  67                 	db	103	;'g'
   452  007E79  69                 	db	105	;'i'
   453  007E7A  76                 	db	118	;'v'
   454  007E7B  65                 	db	101	;'e'
   455  007E7C  20                 	db	32
   456  007E7D  74                 	db	116	;'t'
   457  007E7E  68                 	db	104	;'h'
   458  007E7F  65                 	db	101	;'e'
   459  007E80  20                 	db	32
   460  007E81  6E                 	db	110	;'n'
   461  007E82  65                 	db	101	;'e'
   462  007E83  77                 	db	119	;'w'
   463  007E84  20                 	db	32
   464  007E85  73                 	db	115	;'s'
   465  007E86  65                 	db	101	;'e'
   466  007E87  71                 	db	113	;'q'
   467  007E88  75                 	db	117	;'u'
   468  007E89  65                 	db	101	;'e'
   469  007E8A  6E                 	db	110	;'n'
   470  007E8B  63                 	db	99	;'c'
   471  007E8C  65                 	db	101	;'e'
   472  007E8D  20                 	db	32
   473  007E8E  61                 	db	97	;'a'
   474  007E8F  73                 	db	115	;'s'
   475  007E90  20                 	db	32
   476  007E91  69                 	db	105	;'i'
   477  007E92  6E                 	db	110	;'n'
   478  007E93  70                 	db	112	;'p'
   479  007E94  75                 	db	117	;'u'
   480  007E95  74                 	db	116	;'t'
   481  007E96  0D                 	db	13
   482  007E97  00                 	db	0
   483  007E98                     STR_3:
   484  007E98  0A                 	db	10
   485  007E99  45                 	db	69	;'E'
   486  007E9A  6E                 	db	110	;'n'
   487  007E9B  74                 	db	116	;'t'
   488  007E9C  65                 	db	101	;'e'
   489  007E9D  72                 	db	114	;'r'
   490  007E9E  20                 	db	32
   491  007E9F  27                 	db	39
   492  007EA0  51                 	db	81	;'Q'
   493  007EA1  27                 	db	39
   494  007EA2  20                 	db	32
   495  007EA3  74                 	db	116	;'t'
   496  007EA4  6F                 	db	111	;'o'
   497  007EA5  20                 	db	32
   498  007EA6  65                 	db	101	;'e'
   499  007EA7  78                 	db	120	;'x'
   500  007EA8  69                 	db	105	;'i'
   501  007EA9  74                 	db	116	;'t'
   502  007EAA  20                 	db	32
   503  007EAB  74                 	db	116	;'t'
   504  007EAC  6F                 	db	111	;'o'
   505  007EAD  20                 	db	32
   506  007EAE  4D                 	db	77	;'M'
   507  007EAF  41                 	db	65	;'A'
   508  007EB0  49                 	db	73	;'I'
   509  007EB1  4E                 	db	78	;'N'
   510  007EB2  20                 	db	32
   511  007EB3  4D                 	db	77	;'M'
   512  007EB4  45                 	db	69	;'E'
   513  007EB5  4E                 	db	78	;'N'
   514  007EB6  55                 	db	85	;'U'
   515  007EB7  00                 	db	0
   516  007EB8                     STR_13:
   517  007EB8  0A                 	db	10
   518  007EB9  45                 	db	69	;'E'
   519  007EBA  6E                 	db	110	;'n'
   520  007EBB  74                 	db	116	;'t'
   521  007EBC  65                 	db	101	;'e'
   522  007EBD  72                 	db	114	;'r'
   523  007EBE  20                 	db	32
   524  007EBF  74                 	db	116	;'t'
   525  007EC0  68                 	db	104	;'h'
   526  007EC1  65                 	db	101	;'e'
   527  007EC2  20                 	db	32
   528  007EC3  70                 	db	112	;'p'
   529  007EC4  6C                 	db	108	;'l'
   530  007EC5  61                 	db	97	;'a'
   531  007EC6  63                 	db	99	;'c'
   532  007EC7  65                 	db	101	;'e'
   533  007EC8  20                 	db	32
   534  007EC9  6F                 	db	111	;'o'
   535  007ECA  72                 	db	114	;'r'
   536  007ECB  69                 	db	105	;'i'
   537  007ECC  65                 	db	101	;'e'
   538  007ECD  6E                 	db	110	;'n'
   539  007ECE  74                 	db	116	;'t'
   540  007ECF  61                 	db	97	;'a'
   541  007ED0  74                 	db	116	;'t'
   542  007ED1  69                 	db	105	;'i'
   543  007ED2  6F                 	db	111	;'o'
   544  007ED3  6E                 	db	110	;'n'
   545  007ED4  3A                 	db	58	;':'
   546  007ED5  00                 	db	0
   547  007ED6                     STR_11:
   548  007ED6  0A                 	db	10
   549  007ED7  45                 	db	69	;'E'
   550  007ED8  6E                 	db	110	;'n'
   551  007ED9  74                 	db	116	;'t'
   552  007EDA  65                 	db	101	;'e'
   553  007EDB  72                 	db	114	;'r'
   554  007EDC  20                 	db	32
   555  007EDD  74                 	db	116	;'t'
   556  007EDE  68                 	db	104	;'h'
   557  007EDF  65                 	db	101	;'e'
   558  007EE0  20                 	db	32
   559  007EE1  70                 	db	112	;'p'
   560  007EE2  6C                 	db	108	;'l'
   561  007EE3  61                 	db	97	;'a'
   562  007EE4  63                 	db	99	;'c'
   563  007EE5  65                 	db	101	;'e'
   564  007EE6  20                 	db	32
   565  007EE7  70                 	db	112	;'p'
   566  007EE8  6F                 	db	111	;'o'
   567  007EE9  73                 	db	115	;'s'
   568  007EEA  69                 	db	105	;'i'
   569  007EEB  74                 	db	116	;'t'
   570  007EEC  69                 	db	105	;'i'
   571  007EED  6F                 	db	111	;'o'
   572  007EEE  6E                 	db	110	;'n'
   573  007EEF  20                 	db	32
   574  007EF0  58                 	db	88	;'X'
   575  007EF1  3A                 	db	58	;':'
   576  007EF2  00                 	db	0
   577  007EF3                     STR_12:
   578  007EF3  0A                 	db	10
   579  007EF4  45                 	db	69	;'E'
   580  007EF5  6E                 	db	110	;'n'
   581  007EF6  74                 	db	116	;'t'
   582  007EF7  65                 	db	101	;'e'
   583  007EF8  72                 	db	114	;'r'
   584  007EF9  20                 	db	32
   585  007EFA  74                 	db	116	;'t'
   586  007EFB  68                 	db	104	;'h'
   587  007EFC  65                 	db	101	;'e'
   588  007EFD  20                 	db	32
   589  007EFE  70                 	db	112	;'p'
   590  007EFF  6C                 	db	108	;'l'
   591  007F00  61                 	db	97	;'a'
   592  007F01  63                 	db	99	;'c'
   593  007F02  65                 	db	101	;'e'
   594  007F03  20                 	db	32
   595  007F04  70                 	db	112	;'p'
   596  007F05  6F                 	db	111	;'o'
   597  007F06  73                 	db	115	;'s'
   598  007F07  69                 	db	105	;'i'
   599  007F08  74                 	db	116	;'t'
   600  007F09  69                 	db	105	;'i'
   601  007F0A  6F                 	db	111	;'o'
   602  007F0B  6E                 	db	110	;'n'
   603  007F0C  20                 	db	32
   604  007F0D  59                 	db	89	;'Y'
   605  007F0E  3A                 	db	58	;':'
   606  007F0F  00                 	db	0
   607  007F10                     STR_10:
   608  007F10  0A                 	db	10
   609  007F11  45                 	db	69	;'E'
   610  007F12  6E                 	db	110	;'n'
   611  007F13  74                 	db	116	;'t'
   612  007F14  65                 	db	101	;'e'
   613  007F15  72                 	db	114	;'r'
   614  007F16  20                 	db	32
   615  007F17  74                 	db	116	;'t'
   616  007F18  68                 	db	104	;'h'
   617  007F19  65                 	db	101	;'e'
   618  007F1A  20                 	db	32
   619  007F1B  70                 	db	112	;'p'
   620  007F1C  69                 	db	105	;'i'
   621  007F1D  63                 	db	99	;'c'
   622  007F1E  6B                 	db	107	;'k'
   623  007F1F  20                 	db	32
   624  007F20  6F                 	db	111	;'o'
   625  007F21  72                 	db	114	;'r'
   626  007F22  69                 	db	105	;'i'
   627  007F23  65                 	db	101	;'e'
   628  007F24  6E                 	db	110	;'n'
   629  007F25  74                 	db	116	;'t'
   630  007F26  61                 	db	97	;'a'
   631  007F27  74                 	db	116	;'t'
   632  007F28  69                 	db	105	;'i'
   633  007F29  6F                 	db	111	;'o'
   634  007F2A  6E                 	db	110	;'n'
   635  007F2B  3A                 	db	58	;':'
   636  007F2C  00                 	db	0
   637  007F2D                     STR_8:
   638  007F2D  0A                 	db	10
   639  007F2E  45                 	db	69	;'E'
   640  007F2F  6E                 	db	110	;'n'
   641  007F30  74                 	db	116	;'t'
   642  007F31  65                 	db	101	;'e'
   643  007F32  72                 	db	114	;'r'
   644  007F33  20                 	db	32
   645  007F34  74                 	db	116	;'t'
   646  007F35  68                 	db	104	;'h'
   647  007F36  65                 	db	101	;'e'
   648  007F37  20                 	db	32
   649  007F38  70                 	db	112	;'p'
   650  007F39  69                 	db	105	;'i'
   651  007F3A  63                 	db	99	;'c'
   652  007F3B  6B                 	db	107	;'k'
   653  007F3C  20                 	db	32
   654  007F3D  70                 	db	112	;'p'
   655  007F3E  6F                 	db	111	;'o'
   656  007F3F  73                 	db	115	;'s'
   657  007F40  69                 	db	105	;'i'
   658  007F41  74                 	db	116	;'t'
   659  007F42  69                 	db	105	;'i'
   660  007F43  6F                 	db	111	;'o'
   661  007F44  6E                 	db	110	;'n'
   662  007F45  20                 	db	32
   663  007F46  58                 	db	88	;'X'
   664  007F47  3A                 	db	58	;':'
   665  007F48  00                 	db	0
   666  007F49                     STR_9:
   667  007F49  0A                 	db	10
   668  007F4A  45                 	db	69	;'E'
   669  007F4B  6E                 	db	110	;'n'
   670  007F4C  74                 	db	116	;'t'
   671  007F4D  65                 	db	101	;'e'
   672  007F4E  72                 	db	114	;'r'
   673  007F4F  20                 	db	32
   674  007F50  74                 	db	116	;'t'
   675  007F51  68                 	db	104	;'h'
   676  007F52  65                 	db	101	;'e'
   677  007F53  20                 	db	32
   678  007F54  70                 	db	112	;'p'
   679  007F55  69                 	db	105	;'i'
   680  007F56  63                 	db	99	;'c'
   681  007F57  6B                 	db	107	;'k'
   682  007F58  20                 	db	32
   683  007F59  70                 	db	112	;'p'
   684  007F5A  6F                 	db	111	;'o'
   685  007F5B  73                 	db	115	;'s'
   686  007F5C  69                 	db	105	;'i'
   687  007F5D  74                 	db	116	;'t'
   688  007F5E  69                 	db	105	;'i'
   689  007F5F  6F                 	db	111	;'o'
   690  007F60  6E                 	db	110	;'n'
   691  007F61  20                 	db	32
   692  007F62  59                 	db	89	;'Y'
   693  007F63  3A                 	db	58	;':'
   694  007F64  00                 	db	0
   695  007F65                     STR_4:
   696  007F65  0A                 	db	10
   697  007F66  54                 	db	84	;'T'
   698  007F67  68                 	db	104	;'h'
   699  007F68  65                 	db	101	;'e'
   700  007F69  20                 	db	32
   701  007F6A  63                 	db	99	;'c'
   702  007F6B  75                 	db	117	;'u'
   703  007F6C  72                 	db	114	;'r'
   704  007F6D  72                 	db	114	;'r'
   705  007F6E  65                 	db	101	;'e'
   706  007F6F  6E                 	db	110	;'n'
   707  007F70  74                 	db	116	;'t'
   708  007F71  20                 	db	32
   709  007F72  73                 	db	115	;'s'
   710  007F73  65                 	db	101	;'e'
   711  007F74  71                 	db	113	;'q'
   712  007F75  75                 	db	117	;'u'
   713  007F76  65                 	db	101	;'e'
   714  007F77  6E                 	db	110	;'n'
   715  007F78  63                 	db	99	;'c'
   716  007F79  65                 	db	101	;'e'
   717  007F7A  20                 	db	32
   718  007F7B  69                 	db	105	;'i'
   719  007F7C  73                 	db	115	;'s'
   720  007F7D  3A                 	db	58	;':'
   721  007F7E  20                 	db	32
   722  007F7F  00                 	db	0
   723  007F80                     STR_6:
   724  007F80  0A                 	db	10
   725  007F81  54                 	db	84	;'T'
   726  007F82  68                 	db	104	;'h'
   727  007F83  65                 	db	101	;'e'
   728  007F84  20                 	db	32
   729  007F85  43                 	db	67	;'C'
   730  007F86  75                 	db	117	;'u'
   731  007F87  72                 	db	114	;'r'
   732  007F88  72                 	db	114	;'r'
   733  007F89  65                 	db	101	;'e'
   734  007F8A  6E                 	db	110	;'n'
   735  007F8B  74                 	db	116	;'t'
   736  007F8C  20                 	db	32
   737  007F8D  73                 	db	115	;'s'
   738  007F8E  65                 	db	101	;'e'
   739  007F8F  71                 	db	113	;'q'
   740  007F90  75                 	db	117	;'u'
   741  007F91  65                 	db	101	;'e'
   742  007F92  6E                 	db	110	;'n'
   743  007F93  63                 	db	99	;'c'
   744  007F94  65                 	db	101	;'e'
   745  007F95  20                 	db	32
   746  007F96  69                 	db	105	;'i'
   747  007F97  73                 	db	115	;'s'
   748  007F98  3A                 	db	58	;':'
   749  007F99  00                 	db	0
   750  007F9A                     STR_19:
   751  007F9A  0A                 	db	10
   752  007F9B  43                 	db	67	;'C'
   753  007F9C  6F                 	db	111	;'o'
   754  007F9D  6D                 	db	109	;'m'
   755  007F9E  70                 	db	112	;'p'
   756  007F9F  6F                 	db	111	;'o'
   757  007FA0  6E                 	db	110	;'n'
   758  007FA1  65                 	db	101	;'e'
   759  007FA2  6E                 	db	110	;'n'
   760  007FA3  74                 	db	116	;'t'
   761  007FA4  20                 	db	32
   762  007FA5  69                 	db	105	;'i'
   763  007FA6  73                 	db	115	;'s'
   764  007FA7  20                 	db	32
   765  007FA8  6D                 	db	109	;'m'
   766  007FA9  69                 	db	105	;'i'
   767  007FAA  73                 	db	115	;'s'
   768  007FAB  73                 	db	115	;'s'
   769  007FAC  69                 	db	105	;'i'
   770  007FAD  6E                 	db	110	;'n'
   771  007FAE  67                 	db	103	;'g'
   772  007FAF  21                 	db	33
   773  007FB0  00                 	db	0
   774  007FB1                     STR_14:
   775  007FB1  0A                 	db	10
   776  007FB2  0A                 	db	10
   777  007FB3  43                 	db	67	;'C'
   778  007FB4  6F                 	db	111	;'o'
   779  007FB5  6D                 	db	109	;'m'
   780  007FB6  70                 	db	112	;'p'
   781  007FB7  6F                 	db	111	;'o'
   782  007FB8  6E                 	db	110	;'n'
   783  007FB9  65                 	db	101	;'e'
   784  007FBA  6E                 	db	110	;'n'
   785  007FBB  74                 	db	116	;'t'
   786  007FBC  20                 	db	32
   787  007FBD  41                 	db	65	;'A'
   788  007FBE  64                 	db	100	;'d'
   789  007FBF  64                 	db	100	;'d'
   790  007FC0  65                 	db	101	;'e'
   791  007FC1  64                 	db	100	;'d'
   792  007FC2  3A                 	db	58	;':'
   793  007FC3  20                 	db	32
   794  007FC4  00                 	db	0
   795  007FC5                     STR_2:
   796  007FC5  0A                 	db	10
   797  007FC6  53                 	db	83	;'S'
   798  007FC7  74                 	db	116	;'t'
   799  007FC8  61                 	db	97	;'a'
   800  007FC9  72                 	db	114	;'r'
   801  007FCA  74                 	db	116	;'t'
   802  007FCB  69                 	db	105	;'i'
   803  007FCC  6E                 	db	110	;'n'
   804  007FCD  67                 	db	103	;'g'
   805  007FCE  20                 	db	32
   806  007FCF  73                 	db	115	;'s'
   807  007FD0  65                 	db	101	;'e'
   808  007FD1  71                 	db	113	;'q'
   809  007FD2  75                 	db	117	;'u'
   810  007FD3  65                 	db	101	;'e'
   811  007FD4  6E                 	db	110	;'n'
   812  007FD5  63                 	db	99	;'c'
   813  007FD6  65                 	db	101	;'e'
   814  007FD7  3A                 	db	58	;':'
   815  007FD8  00                 	db	0
   816  007FD9                     STR_16:
   817  007FD9  0A                 	db	10
   818  007FDA  63                 	db	99	;'c'
   819  007FDB  6F                 	db	111	;'o'
   820  007FDC  6D                 	db	109	;'m'
   821  007FDD  70                 	db	112	;'p'
   822  007FDE  6F                 	db	111	;'o'
   823  007FDF  6E                 	db	110	;'n'
   824  007FE0  65                 	db	101	;'e'
   825  007FE1  6E                 	db	110	;'n'
   826  007FE2  74                 	db	116	;'t'
   827  007FE3  20                 	db	32
   828  007FE4  72                 	db	114	;'r'
   829  007FE5  65                 	db	101	;'e'
   830  007FE6  6D                 	db	109	;'m'
   831  007FE7  6F                 	db	111	;'o'
   832  007FE8  76                 	db	118	;'v'
   833  007FE9  65                 	db	101	;'e'
   834  007FEA  64                 	db	100	;'d'
   835  007FEB  00                 	db	0
   836  007FEC                     STR_18:
   837  007FEC  0A                 	db	10
   838  007FED  4F                 	db	79	;'O'
   839  007FEE  70                 	db	112	;'p'
   840  007FEF  65                 	db	101	;'e'
   841  007FF0  6E                 	db	110	;'n'
   842  007FF1  69                 	db	105	;'i'
   843  007FF2  6E                 	db	110	;'n'
   844  007FF3  67                 	db	103	;'g'
   845  007FF4  20                 	db	32
   846  007FF5  74                 	db	116	;'t'
   847  007FF6  77                 	db	119	;'w'
   848  007FF7  65                 	db	101	;'e'
   849  007FF8  65                 	db	101	;'e'
   850  007FF9  7A                 	db	122	;'z'
   851  007FFA  65                 	db	101	;'e'
   852  007FFB  72                 	db	114	;'r'
   853  007FFC  00                 	db	0
   854  007FFD                     STR_20:
   855  007FFD  51                 	db	81	;'Q'
   856  007FFE  00                 	db	0
   857  007FFF  00                 	db	0	; dummy byte at the end
   858  0000                     
   859                           	psect	nvCOMRAM
   860  000074                     __pnvCOMRAM:
   861                           	callstack 0
   862  000074                     _New_char_RX:
   863                           	callstack 0
   864  000074                     	ds	1
   865  0000                     _RCREG	set	4014
   866  0000                     _PORTB	set	3969
   867  0000                     _LATCbits	set	3979
   868  0000                     _TXREG	set	4013
   869  0000                     _RCSTAbits	set	4011
   870  0000                     _TXSTAbits	set	4012
   871  0000                     _SPBRG	set	4015
   872  0000                     _INTCON3bits	set	4080
   873  0000                     _INTCON3	set	4080
   874  0000                     _INTCON2	set	4081
   875  0000                     _INTCONbits	set	4082
   876  0000                     _PIE1bits	set	3997
   877  0000                     _PIR1bits	set	3998
   878  0000                     _TMR1L	set	4046
   879  0000                     _TMR1H	set	4047
   880  0000                     _T1CONbits	set	4045
   881  0000                     _TMR0L	set	4054
   882  0000                     _TMR0H	set	4055
   883  0000                     _T0CONbits	set	4053
   884  0000                     _TRISCbits	set	3988
   885  0000                     _PORTC	set	3970
   886  0000                     _LATC	set	3979
   887  0000                     _PORTD	set	3971
   888  0000                     _PORTA	set	3968
   889  0000                     _TRISB	set	3987
   890  0000                     _TRISA	set	3986
   891  0000                     _TRISD	set	3989
   892  0000                     _RCIF	set	31989
   893                           
   894                           ; #config settings
   895                           
   896                           	psect	cinit
   897  003198                     __pcinit:
   898                           	callstack 0
   899  003198                     start_initialization:
   900                           	callstack 0
   901  003198                     __initialization:
   902                           	callstack 0
   903                           
   904                           ; Initialize objects allocated to BANK0 (31 bytes)
   905                           ; load TBLPTR registers with __pidataBANK0
   906  003198  0EE6               	movlw	low __pidataBANK0
   907  00319A  6EF6               	movwf	tblptrl,c
   908  00319C  0E33               	movlw	high __pidataBANK0
   909  00319E  6EF7               	movwf	tblptrh,c
   910  0031A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   911  0031A2  6EF8               	movwf	tblptru,c
   912  0031A4  EE00  F0C1         	lfsr	0,__pdataBANK0
   913  0031A8  EE10 F01F          	lfsr	1,31
   914  0031AC                     copy_data0:
   915  0031AC  0009               	tblrd		*+
   916  0031AE  CFF5 FFEE          	movff	tablat,postinc0
   917  0031B2  50E5               	movf	postdec1,w,c
   918  0031B4  50E1               	movf	fsr1l,w,c
   919  0031B6  E1FA               	bnz	copy_data0
   920                           
   921                           ; Clear objects allocated to BANK0 (65 bytes)
   922  0031B8  EE00  F080         	lfsr	0,__pbssBANK0
   923  0031BC  0E41               	movlw	65
   924  0031BE                     clear_0:
   925  0031BE  6AEE               	clrf	postinc0,c
   926  0031C0  06E8               	decf	wreg,f,c
   927  0031C2  E1FD               	bnz	clear_0
   928                           
   929                           ; Clear objects allocated to COMRAM (23 bytes)
   930  0031C4  EE00  F05D         	lfsr	0,__pbssCOMRAM
   931  0031C8  0E17               	movlw	23
   932  0031CA                     clear_1:
   933  0031CA  6AEE               	clrf	postinc0,c
   934  0031CC  06E8               	decf	wreg,f,c
   935  0031CE  E1FD               	bnz	clear_1
   936  0031D0                     end_of_initialization:
   937                           	callstack 0
   938  0031D0                     __end_of__initialization:
   939                           	callstack 0
   940  0031D0  9075               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   941  0031D2  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   942  0031D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   943  0031D6  6EF8               	movwf	tblptru,c
   944  0031D8  0100               	movlb	0
   945  0031DA  EF8F  F019         	goto	_main	;jump to C main() function
   946                           
   947                           	psect	bssCOMRAM
   948  00005D                     __pbssCOMRAM:
   949                           	callstack 0
   950  00005D                     _Angle_diff:
   951                           	callstack 0
   952  00005D                     	ds	2
   953  00005F                     _Y_diff:
   954                           	callstack 0
   955  00005F                     	ds	2
   956  000061                     _X_diff:
   957                           	callstack 0
   958  000061                     	ds	2
   959  000063                     _Place_Angle:
   960                           	callstack 0
   961  000063                     	ds	2
   962  000065                     _Pick_Angle:
   963                           	callstack 0
   964  000065                     	ds	2
   965  000067                     _Y_Place:
   966                           	callstack 0
   967  000067                     	ds	2
   968  000069                     _Y_Pick:
   969                           	callstack 0
   970  000069                     	ds	2
   971  00006B                     _X_Place:
   972                           	callstack 0
   973  00006B                     	ds	2
   974  00006D                     _X_Pick:
   975                           	callstack 0
   976  00006D                     	ds	2
   977  00006F                     _Rot_dir:
   978                           	callstack 0
   979  00006F                     	ds	1
   980  000070                     _Y_dir:
   981                           	callstack 0
   982  000070                     	ds	1
   983  000071                     _X_dir:
   984                           	callstack 0
   985  000071                     	ds	1
   986  000072                     _stop:
   987                           	callstack 0
   988  000072                     	ds	1
   989  000073                     _component_present:
   990                           	callstack 0
   991  000073                     	ds	1
   992                           
   993                           	psect	bssBANK0
   994  000080                     __pbssBANK0:
   995                           	callstack 0
   996  000080                     _testarray:
   997                           	callstack 0
   998  000080                     	ds	30
   999  00009E                     roundf@F528:
  1000                           	callstack 0
  1001  00009E                     	ds	4
  1002  0000A2                     _angle_diff:
  1003                           	callstack 0
  1004  0000A2                     	ds	2
  1005  0000A4                     _Place_Angle_D:
  1006                           	callstack 0
  1007  0000A4                     	ds	2
  1008  0000A6                     _Y_Place_D:
  1009                           	callstack 0
  1010  0000A6                     	ds	2
  1011  0000A8                     _X_Place_D:
  1012                           	callstack 0
  1013  0000A8                     	ds	2
  1014  0000AA                     _Pick_Angle_D:
  1015                           	callstack 0
  1016  0000AA                     	ds	2
  1017  0000AC                     _Y_Pick_D:
  1018                           	callstack 0
  1019  0000AC                     	ds	2
  1020  0000AE                     _X_Pick_D:
  1021                           	callstack 0
  1022  0000AE                     	ds	2
  1023  0000B0                     _Step_Angle:
  1024                           	callstack 0
  1025  0000B0                     	ds	2
  1026  0000B2                     _Step_Z:
  1027                           	callstack 0
  1028  0000B2                     	ds	2
  1029  0000B4                     _Step_Y:
  1030                           	callstack 0
  1031  0000B4                     	ds	2
  1032  0000B6                     _Step_X:
  1033                           	callstack 0
  1034  0000B6                     	ds	2
  1035  0000B8                     _Steps:
  1036                           	callstack 0
  1037  0000B8                     	ds	2
  1038  0000BA                     _rotation:
  1039                           	callstack 0
  1040  0000BA                     	ds	2
  1041  0000BC                     _displacement_Y:
  1042                           	callstack 0
  1043  0000BC                     	ds	2
  1044  0000BE                     _displacement_X:
  1045                           	callstack 0
  1046  0000BE                     	ds	2
  1047  0000C0                     _RX_Char:
  1048                           	callstack 0
  1049  0000C0                     	ds	1
  1050                           
  1051                           	psect	dataBANK0
  1052  0000C1                     __pdataBANK0:
  1053                           	callstack 0
  1054  0000C1                     	ds	4
  1055  0000C5                     	ds	4
  1056  0000C9                     add_component@F3138:
  1057                           	callstack 0
  1058  0000C9                     	ds	2
  1059  0000CB                     _lenth_of_array:
  1060                           	callstack 0
  1061  0000CB                     	ds	2
  1062  0000CD                     _new_TMR1L@main$F817:
  1063                           	callstack 0
  1064  0000CD                     	ds	1
  1065  0000CE                     _new_TMR1H@main$F816:
  1066                           	callstack 0
  1067  0000CE                     	ds	1
  1068  0000CF                     _State:
  1069                           	callstack 0
  1070  0000CF                     	ds	1
  1071  0000D0                     	ds	1
  1072  0000D1                     	ds	1
  1073  0000D2                     _input_str:
  1074                           	callstack 0
  1075  0000D2                     	ds	10
  1076  0000DC                     _sequence:
  1077                           	callstack 0
  1078  0000DC                     	ds	4
  1079                           
  1080                           	psect	cstackBANK1
  1081  000100                     __pcstackBANK1:
  1082                           	callstack 0
  1083  000100                     pick_and_place@Componnt:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x0
  1087  000100                     	ds	1
  1088  000101                     pick_and_place@j:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x1
  1092  000101                     	ds	2
  1093  000103                     pick_and_place@i:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x3
  1097  000103                     	ds	2
  1098  000105                     _pick_and_place$898:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x5
  1102  000105                     	ds	2
  1103  000107                     pick_and_place@i_899:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x7
  1107  000107                     	ds	2
  1108  000109                     _pick_and_place$901:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x9
  1112  000109                     	ds	2
  1113  00010B                     pick_and_place@i_902:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0xB
  1117  00010B                     	ds	2
  1118  00010D                     _pick_and_place$904:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0xD
  1122  00010D                     	ds	2
  1123  00010F                     pick_and_place@i_908:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0xF
  1127  00010F                     	ds	2
  1128  000111                     pick_and_place@i_910:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x11
  1132  000111                     	ds	2
  1133  000113                     pick_and_place@i_911:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x13
  1137  000113                     	ds	2
  1138  000115                     _pick_and_place$912:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x15
  1142  000115                     	ds	2
  1143  000117                     pick_and_place@i_913:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x17
  1147  000117                     	ds	2
  1148  000119                     _pick_and_place$914:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x19
  1152  000119                     	ds	2
  1153  00011B                     pick_and_place@i_915:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x1B
  1157  00011B                     	ds	2
  1158  00011D                     _pick_and_place$916:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x1D
  1162  00011D                     	ds	2
  1163  00011F                     pick_and_place@i_917:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x1F
  1167  00011F                     	ds	2
  1168  000121                     pick_and_place@i_918:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x21
  1172  000121                     	ds	2
  1173                           
  1174                           	psect	cstackBANK0
  1175  0000E0                     __pcstackBANK0:
  1176                           	callstack 0
  1177  0000E0                     ??___fltol:
  1178                           
  1179                           ; 1 bytes @ 0x0
  1180  0000E0                     	ds	4
  1181                           
  1182                           	psect	cstackCOMRAM
  1183  000001                     __pcstackCOMRAM:
  1184                           	callstack 0
  1185  000001                     set_new_pos@nTMR1L:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x0
  1189  000001                     	ds	1
  1190  000002                     set_new_pos@nTMR1H:
  1191                           	callstack 0
  1192                           
  1193                           ; 1 bytes @ 0x1
  1194  000002                     	ds	1
  1195  000003                     ??_Rx_char_USART:
  1196                           
  1197                           ; 1 bytes @ 0x2
  1198  000003                     	ds	5
  1199  000008                     Rx_char_USART@i:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x7
  1203  000008                     	ds	2
  1204  00000A                     ?_strlen:
  1205                           	callstack 0
  1206  00000A                     ?_isspace:
  1207                           	callstack 0
  1208  00000A                     ?_isdigit:
  1209                           	callstack 0
  1210  00000A                     ?___wmul:
  1211                           	callstack 0
  1212  00000A                     ?___fladd:
  1213                           	callstack 0
  1214  00000A                     ?___flmul:
  1215                           	callstack 0
  1216  00000A                     ?___flneg:
  1217                           	callstack 0
  1218  00000A                     ?___xxtofl:
  1219                           	callstack 0
  1220  00000A                     Tweezer@action:
  1221                           	callstack 0
  1222  00000A                     fetch_parameters@Componnt:
  1223                           	callstack 0
  1224  00000A                     print_string@strng:
  1225                           	callstack 0
  1226  00000A                     ms_delay@val:
  1227                           	callstack 0
  1228  00000A                     ___wmul@multiplier:
  1229                           	callstack 0
  1230  00000A                     isdigit@c:
  1231                           	callstack 0
  1232  00000A                     isspace@c:
  1233                           	callstack 0
  1234  00000A                     strlen@s:
  1235                           	callstack 0
  1236  00000A                     ___flneg@f1:
  1237                           	callstack 0
  1238  00000A                     ___fladd@b:
  1239                           	callstack 0
  1240  00000A                     ___flmul@b:
  1241                           	callstack 0
  1242  00000A                     ___xxtofl@val:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x9
  1246  00000A                     	ds	2
  1247  00000C                     ??_isspace:
  1248  00000C                     ??_isdigit:
  1249  00000C                     ??_print_string:
  1250  00000C                     ms_delay@i:
  1251                           	callstack 0
  1252  00000C                     ___wmul@multiplicand:
  1253                           	callstack 0
  1254  00000C                     strlen@a:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0xB
  1258  00000C                     	ds	2
  1259  00000E                     ??___xxtofl:
  1260  00000E                     ?___memrchr:
  1261                           	callstack 0
  1262  00000E                     print_string@i:
  1263                           	callstack 0
  1264  00000E                     ms_delay@j:
  1265                           	callstack 0
  1266  00000E                     ___wmul@product:
  1267                           	callstack 0
  1268  00000E                     memmove@d1:
  1269                           	callstack 0
  1270  00000E                     strncat@d:
  1271                           	callstack 0
  1272  00000E                     ___memrchr@m:
  1273                           	callstack 0
  1274  00000E                     ___fladd@a:
  1275                           	callstack 0
  1276  00000E                     ___flmul@a:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0xD
  1280  00000E                     	ds	2
  1281  000010                     ??_change_sequence:
  1282  000010                     X_axis@direction:
  1283                           	callstack 0
  1284  000010                     Y_axis@direction:
  1285                           	callstack 0
  1286  000010                     Z_axis@direction:
  1287                           	callstack 0
  1288  000010                     Twister@direction:
  1289                           	callstack 0
  1290  000010                     _isspace$1404:
  1291                           	callstack 0
  1292  000010                     memmove@s1:
  1293                           	callstack 0
  1294  000010                     strncat@s:
  1295                           	callstack 0
  1296  000010                     ___memrchr@c:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0xF
  1300  000010                     	ds	1
  1301  000011                     ??_return_to_initial:
  1302  000011                     ?_atoi:
  1303                           	callstack 0
  1304  000011                     atoi@s:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x10
  1308  000011                     	ds	1
  1309  000012                     ??___fladd:
  1310  000012                     ??___flmul:
  1311  000012                     ___xxtofl@sign:
  1312                           	callstack 0
  1313  000012                     return_to_initial@i:
  1314                           	callstack 0
  1315  000012                     memmove@n:
  1316                           	callstack 0
  1317  000012                     strncat@n:
  1318                           	callstack 0
  1319  000012                     ___memrchr@n:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0x11
  1323  000012                     	ds	1
  1324  000013                     ??_atoi:
  1325  000013                     ___xxtofl@exp:
  1326                           	callstack 0
  1327  000013                     change_sequence@i:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x12
  1331  000013                     	ds	1
  1332  000014                     ??_memmove:
  1333  000014                     ??___memrchr:
  1334  000014                     return_to_initial@i_921:
  1335                           	callstack 0
  1336  000014                     ___xxtofl@arg:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x13
  1340  000014                     	ds	2
  1341  000016                     ___fladd@signs:
  1342                           	callstack 0
  1343  000016                     ___flmul@sign:
  1344                           	callstack 0
  1345  000016                     return_to_initial@i_922:
  1346                           	callstack 0
  1347  000016                     memmove@d:
  1348                           	callstack 0
  1349  000016                     ___memrchr@s:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x15
  1353  000016                     	ds	1
  1354  000017                     ___fladd@aexp:
  1355                           	callstack 0
  1356  000017                     atoi@neg:
  1357                           	callstack 0
  1358  000017                     ___flmul@grs:
  1359                           	callstack 0
  1360                           
  1361                           ; 4 bytes @ 0x16
  1362  000017                     	ds	1
  1363  000018                     ?_strrchr:
  1364                           	callstack 0
  1365  000018                     ?___fldiv:
  1366                           	callstack 0
  1367  000018                     ___fladd@bexp:
  1368                           	callstack 0
  1369  000018                     return_to_initial@i_923:
  1370                           	callstack 0
  1371  000018                     memmove@s:
  1372                           	callstack 0
  1373  000018                     strrchr@s:
  1374                           	callstack 0
  1375  000018                     ___fldiv@b:
  1376                           	callstack 0
  1377                           
  1378                           ; 4 bytes @ 0x17
  1379  000018                     	ds	1
  1380  000019                     ___fladd@grs:
  1381                           	callstack 0
  1382  000019                     _atoi$1386:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x18
  1386  000019                     	ds	1
  1387  00001A                     ?___flsub:
  1388                           	callstack 0
  1389  00001A                     strrchr@c:
  1390                           	callstack 0
  1391  00001A                     ___flsub@b:
  1392                           	callstack 0
  1393                           
  1394                           ; 4 bytes @ 0x19
  1395  00001A                     	ds	1
  1396  00001B                     ___flmul@aexp:
  1397                           	callstack 0
  1398  00001B                     _atoi$1388:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x1A
  1402  00001B                     	ds	1
  1403  00001C                     ___flmul@bexp:
  1404                           	callstack 0
  1405  00001C                     remove_component@ptr:
  1406                           	callstack 0
  1407  00001C                     ___fldiv@a:
  1408                           	callstack 0
  1409                           
  1410                           ; 4 bytes @ 0x1B
  1411  00001C                     	ds	1
  1412  00001D                     _atoi$1387:
  1413                           	callstack 0
  1414  00001D                     ___flmul@prod:
  1415                           	callstack 0
  1416                           
  1417                           ; 4 bytes @ 0x1C
  1418  00001D                     	ds	1
  1419  00001E                     remove_component@rm_comp:
  1420                           	callstack 0
  1421  00001E                     atoi@n:
  1422                           	callstack 0
  1423  00001E                     ___flsub@a:
  1424                           	callstack 0
  1425                           
  1426                           ; 4 bytes @ 0x1D
  1427  00001E                     	ds	1
  1428  00001F                     remove_component@indxToDel:
  1429                           	callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x1E
  1432  00001F                     	ds	1
  1433  000020                     ??___fldiv:
  1434  000020                     add_component@add_componnt:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x1F
  1438  000020                     	ds	1
  1439  000021                     ___flmul@temp:
  1440                           	callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x20
  1443  000021                     	ds	1
  1444  000022                     
  1445                           ; 1 bytes @ 0x21
  1446  000022                     	ds	2
  1447  000024                     ___fldiv@rem:
  1448                           	callstack 0
  1449                           
  1450                           ; 4 bytes @ 0x23
  1451  000024                     	ds	4
  1452  000028                     ___fldiv@sign:
  1453                           	callstack 0
  1454                           
  1455                           ; 1 bytes @ 0x27
  1456  000028                     	ds	1
  1457  000029                     ___fldiv@new_exp:
  1458                           	callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x28
  1461  000029                     	ds	2
  1462  00002B                     ___fldiv@grs:
  1463                           	callstack 0
  1464                           
  1465                           ; 4 bytes @ 0x2A
  1466  00002B                     	ds	4
  1467  00002F                     ___fldiv@bexp:
  1468                           	callstack 0
  1469                           
  1470                           ; 1 bytes @ 0x2E
  1471  00002F                     	ds	1
  1472  000030                     ___fldiv@aexp:
  1473                           	callstack 0
  1474                           
  1475                           ; 1 bytes @ 0x2F
  1476  000030                     	ds	1
  1477  000031                     ___flge@ff1:
  1478                           	callstack 0
  1479                           
  1480                           ; 4 bytes @ 0x30
  1481  000031                     	ds	4
  1482  000035                     ___flge@ff2:
  1483                           	callstack 0
  1484                           
  1485                           ; 4 bytes @ 0x34
  1486  000035                     	ds	4
  1487  000039                     ??___flge:
  1488                           
  1489                           ; 1 bytes @ 0x38
  1490  000039                     	ds	4
  1491  00003D                     ??_pick_and_place:
  1492  00003D                     ?_roundf:
  1493                           	callstack 0
  1494  00003D                     roundf@x:
  1495                           	callstack 0
  1496                           
  1497                           ; 4 bytes @ 0x3C
  1498  00003D                     	ds	2
  1499  00003F                     ??_start_up_menu:
  1500                           
  1501                           ; 1 bytes @ 0x3E
  1502  00003F                     	ds	2
  1503  000041                     ??_roundf:
  1504                           
  1505                           ; 1 bytes @ 0x40
  1506  000041                     	ds	1
  1507  000042                     start_up_menu@i:
  1508                           	callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x41
  1511  000042                     	ds	3
  1512  000045                     _roundf$1661:
  1513                           	callstack 0
  1514                           
  1515                           ; 4 bytes @ 0x44
  1516  000045                     	ds	4
  1517  000049                     roundf@e:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x48
  1521  000049                     	ds	2
  1522  00004B                     _roundf$1660:
  1523                           	callstack 0
  1524                           
  1525                           ; 4 bytes @ 0x4A
  1526  00004B                     	ds	4
  1527  00004F                     roundf@u:
  1528                           	callstack 0
  1529                           
  1530                           ; 4 bytes @ 0x4E
  1531  00004F                     	ds	4
  1532  000053                     roundf@y:
  1533                           	callstack 0
  1534                           
  1535                           ; 4 bytes @ 0x52
  1536  000053                     	ds	4
  1537  000057                     ?___fltol:
  1538                           	callstack 0
  1539  000057                     ___fltol@f1:
  1540                           	callstack 0
  1541                           
  1542                           ; 4 bytes @ 0x56
  1543  000057                     	ds	4
  1544  00005B                     ___fltol@sign1:
  1545                           	callstack 0
  1546                           
  1547                           ; 1 bytes @ 0x5A
  1548  00005B                     	ds	1
  1549  00005C                     ___fltol@exp1:
  1550                           	callstack 0
  1551                           
  1552                           ; 1 bytes @ 0x5B
  1553  00005C                     	ds	1
  1554  00005D                     
  1555                           ; 1 bytes @ 0x5C
  1556 ;;
  1557 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1558 ;;
  1559 ;; *************** function _main *****************
  1560 ;; Defined at:
  1561 ;;		line 198 in file "main.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1575 ;;      Params:         0       0       0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0       0       0
  1578 ;;      Totals:         0       0       0       0       0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels required when called: 6
  1581 ;; This function calls:
  1582 ;;		_init_PORTS
  1583 ;;		_init_Timers
  1584 ;;		_init_USART
  1585 ;;		_init_interrupts
  1586 ;;		_start_up_menu
  1587 ;; This function is called by:
  1588 ;;		Startup code after reset
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text0
  1593  00331E                     __ptext0:
  1594                           	callstack 0
  1595  00331E                     _main:
  1596                           	callstack 25
  1597  00331E  FFFF               	dw	65535	; assembler added errata NOP
  1598                           
  1599                           ;main.c: 201:     init_PORTS();
  1600  003320  ECCF  F019         	call	_init_PORTS	;wreg free
  1601  003324                     
  1602                           ;main.c: 202:     init_USART();
  1603  003324  EC52  F019         	call	_init_USART	;wreg free
  1604  003328                     
  1605                           ;main.c: 203:     init_interrupts();
  1606  003328  ECE3  F019         	call	_init_interrupts	;wreg free
  1607  00332C                     
  1608                           ;main.c: 205:     init_Timers();
  1609  00332C  ECBA  F019         	call	_init_Timers	;wreg free
  1610  003330                     
  1611                           ;main.c: 207:     (INTCONbits.GIE = 1);
  1612  003330  8EF2               	bsf	242,7,c	;volatile
  1613  003332                     
  1614                           ;main.c: 208:     T0CONbits.TMR0ON = 1;
  1615  003332  8ED5               	bsf	213,7,c	;volatile
  1616  003334                     
  1617                           ;main.c: 209:  T1CONbits.TMR1ON = 1;
  1618  003334  80CD               	bsf	205,0,c	;volatile
  1619  003336                     
  1620                           ;main.c: 210:  LATCbits.LC2 = 1;
  1621  003336  848B               	bsf	139,2,c	;volatile
  1622  003338                     l5221:
  1623  003338  FFFF               	dw	65535	; assembler added errata NOP
  1624                           
  1625                           ;main.c: 213:         New_char_RX=0;
  1626  00333A  0E00               	movlw	0
  1627  00333C  6E74               	movwf	_New_char_RX^0,c
  1628  00333E                     
  1629                           ;main.c: 214:         start_up_menu();
  1630  00333E  ECDB  F010         	call	_start_up_menu	;wreg free
  1631  003342  EF9C  F019         	goto	l5221
  1632  003346  EFCD  F000         	goto	start
  1633  00334A                     __end_of_main:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _start_up_menu *****************
  1637 ;; Defined at:
  1638 ;;		line 222 in file "main.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  i               2   65[COMRAM] int 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1652 ;;      Params:         0       0       0       0       0       0       0
  1653 ;;      Locals:         2       0       0       0       0       0       0
  1654 ;;      Temps:          3       0       0       0       0       0       0
  1655 ;;      Totals:         5       0       0       0       0       0       0
  1656 ;;Total ram usage:        5 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 5
  1659 ;; This function calls:
  1660 ;;		_add_component
  1661 ;;		_change_sequence
  1662 ;;		_pick_and_place
  1663 ;;		_print_string
  1664 ;;		_remove_component
  1665 ;;		_return_to_initial
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text1
  1672  0021B6                     __ptext1:
  1673                           	callstack 0
  1674  0021B6                     _start_up_menu:
  1675                           	callstack 0
  1676  0021B6  FFFF               	dw	65535	; assembler added errata NOP
  1677  0021B8                     
  1678                           ;main.c: 224:     print_string("\n\n1. Start Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component");
  1679  0021B8  0E65               	movlw	low STR_1
  1680  0021BA  6E0A               	movwf	print_string@strng^0,c
  1681  0021BC  0E7D               	movlw	high STR_1
  1682  0021BE  6E0B               	movwf	(print_string@strng+1)^0,c
  1683  0021C0  ECF3  F016         	call	_print_string	;wreg free
  1684  0021C4                     l5167:
  1685  0021C4  FFFF               	dw	65535	; assembler added errata NOP
  1686                           
  1687                           ;main.c: 227:         if(New_char_RX){
  1688  0021C6  5074               	movf	_New_char_RX^0,w,c
  1689  0021C8  B4D8               	btfsc	status,2,c
  1690  0021CA  EFE9  F010         	goto	u6201
  1691  0021CE  EFEC  F010         	goto	u6200
  1692  0021D2                     u6201:
  1693  0021D2  FFFF               	dw	65535	; assembler added errata NOP
  1694  0021D4  EFE2  F010         	goto	l5167
  1695  0021D8                     u6200:
  1696  0021D8  FFFF               	dw	65535	; assembler added errata NOP
  1697  0021DA                     
  1698                           ;main.c: 228:             New_char_RX=0;
  1699  0021DA  0E00               	movlw	0
  1700  0021DC  6E74               	movwf	_New_char_RX^0,c
  1701                           
  1702                           ;main.c: 229:             switch(State){
  1703  0021DE  EF70  F011         	goto	l5197
  1704  0021E2                     l5171:
  1705  0021E2  FFFF               	dw	65535	; assembler added errata NOP
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;main.c: 231:                     print_string("\nStarting sequence:");
  1709  0021E4  0EC5               	movlw	low STR_2
  1710  0021E6  6E0A               	movwf	print_string@strng^0,c
  1711  0021E8  0E7F               	movlw	high STR_2
  1712  0021EA  6E0B               	movwf	(print_string@strng+1)^0,c
  1713  0021EC  ECF3  F016         	call	_print_string	;wreg free
  1714                           
  1715                           ;main.c: 232:                     print_string(sequence);
  1716  0021F0  0EDC               	movlw	low _sequence
  1717  0021F2  6E0A               	movwf	print_string@strng^0,c
  1718  0021F4  0E00               	movlw	high _sequence
  1719  0021F6  6E0B               	movwf	(print_string@strng+1)^0,c
  1720  0021F8  ECF3  F016         	call	_print_string	;wreg free
  1721                           
  1722                           ;main.c: 233:                     print_string("\nEnter 'Q' to exit to MAIN MENU");
  1723  0021FC  0E98               	movlw	low STR_3
  1724  0021FE  6E0A               	movwf	print_string@strng^0,c
  1725  002200  0E7E               	movlw	high STR_3
  1726  002202  6E0B               	movwf	(print_string@strng+1)^0,c
  1727  002204  ECF3  F016         	call	_print_string	;wreg free
  1728  002208                     
  1729                           ;main.c: 234:                     return_to_initial();
  1730  002208  EC98  F011         	call	_return_to_initial	;wreg free
  1731                           
  1732                           ;main.c: 235:                     while(!New_char_RX && !stop){
  1733  00220C  EF43  F011         	goto	l5183
  1734  002210                     l5175:
  1735  002210  FFFF               	dw	65535	; assembler added errata NOP
  1736                           
  1737                           ;main.c: 236:                         int i =0;
  1738  002212  0E00               	movlw	0
  1739  002214  6E43               	movwf	(start_up_menu@i+1)^0,c
  1740  002216  0E00               	movlw	0
  1741  002218  6E42               	movwf	start_up_menu@i^0,c
  1742                           
  1743                           ;main.c: 237:                         X_diff=0;
  1744  00221A  0E00               	movlw	0
  1745  00221C  6E62               	movwf	(_X_diff+1)^0,c
  1746  00221E  0E00               	movlw	0
  1747  002220  6E61               	movwf	_X_diff^0,c
  1748                           
  1749                           ;main.c: 238:                         Y_diff=0;
  1750  002222  0E00               	movlw	0
  1751  002224  6E60               	movwf	(_Y_diff+1)^0,c
  1752  002226  0E00               	movlw	0
  1753  002228  6E5F               	movwf	_Y_diff^0,c
  1754                           
  1755                           ;main.c: 239:                         Angle_diff=0;
  1756  00222A  0E00               	movlw	0
  1757  00222C  6E5E               	movwf	(_Angle_diff+1)^0,c
  1758  00222E  0E00               	movlw	0
  1759  002230  6E5D               	movwf	_Angle_diff^0,c
  1760  002232                     l5177:
  1761  002232  FFFF               	dw	65535	; assembler added errata NOP
  1762                           
  1763                           ;main.c: 242:                             pick_and_place(sequence[i]);
  1764  002234  0EDC               	movlw	low _sequence
  1765  002236  2442               	addwf	start_up_menu@i^0,w,c
  1766  002238  6ED9               	movwf	fsr2l,c
  1767  00223A  0E00               	movlw	high _sequence
  1768  00223C  2043               	addwfc	(start_up_menu@i+1)^0,w,c
  1769  00223E  6EDA               	movwf	fsr2h,c
  1770  002240  50DF               	movf	indf2,w,c
  1771  002242  ECCF  F000         	call	_pick_and_place
  1772  002246                     
  1773                           ;main.c: 243:                         }while(!stop && sequence[i++]!='\n');
  1774  002246  5072               	movf	_stop^0,w,c
  1775  002248  A4D8               	btfss	status,2,c
  1776  00224A  EF29  F011         	goto	u6211
  1777  00224E  EF2C  F011         	goto	u6210
  1778  002252                     u6211:
  1779  002252  FFFF               	dw	65535	; assembler added errata NOP
  1780  002254  EF43  F011         	goto	l5183
  1781  002258                     u6210:
  1782  002258  FFFF               	dw	65535	; assembler added errata NOP
  1783  00225A  5042               	movf	start_up_menu@i^0,w,c
  1784  00225C  6E3F               	movwf	??_start_up_menu^0,c
  1785  00225E  5043               	movf	(start_up_menu@i+1)^0,w,c
  1786  002260  6E40               	movwf	(??_start_up_menu+1)^0,c
  1787  002262  4A42               	infsnz	start_up_menu@i^0,f,c
  1788  002264  2A43               	incf	(start_up_menu@i+1)^0,f,c
  1789  002266  0EDC               	movlw	low _sequence
  1790  002268  243F               	addwf	??_start_up_menu^0,w,c
  1791  00226A  6ED9               	movwf	fsr2l,c
  1792  00226C  0E00               	movlw	high _sequence
  1793  00226E  2040               	addwfc	(??_start_up_menu+1)^0,w,c
  1794  002270  6EDA               	movwf	fsr2h,c
  1795  002272  0E0A               	movlw	10
  1796  002274  18DE               	xorwf	postinc2,w,c
  1797  002276  A4D8               	btfss	status,2,c
  1798  002278  EF40  F011         	goto	u6221
  1799  00227C  EF43  F011         	goto	u6220
  1800  002280                     u6221:
  1801  002280  FFFF               	dw	65535	; assembler added errata NOP
  1802  002282  EF19  F011         	goto	l5177
  1803  002286                     u6220:
  1804  002286                     l5183:
  1805  002286  FFFF               	dw	65535	; assembler added errata NOP
  1806                           
  1807                           ;main.c: 235:                     while(!New_char_RX && !stop){
  1808  002288  5074               	movf	_New_char_RX^0,w,c
  1809  00228A  A4D8               	btfss	status,2,c
  1810  00228C  EF4A  F011         	goto	u6231
  1811  002290  EF4D  F011         	goto	u6230
  1812  002294                     u6231:
  1813  002294  FFFF               	dw	65535	; assembler added errata NOP
  1814  002296  EF94  F011         	goto	l257
  1815  00229A                     u6230:
  1816  00229A  FFFF               	dw	65535	; assembler added errata NOP
  1817  00229C  5072               	movf	_stop^0,w,c
  1818  00229E  B4D8               	btfsc	status,2,c
  1819  0022A0  EF54  F011         	goto	u6241
  1820  0022A4  EF57  F011         	goto	u6240
  1821  0022A8                     u6241:
  1822  0022A8  FFFF               	dw	65535	; assembler added errata NOP
  1823  0022AA  EF08  F011         	goto	l5175
  1824  0022AE                     u6240:
  1825  0022AE  FFFF               	dw	65535	; assembler added errata NOP
  1826  0022B0  EF95  F011         	goto	l264
  1827  0022B4                     l5187:
  1828  0022B4  FFFF               	dw	65535	; assembler added errata NOP
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 248:                     change_sequence();
  1832  0022B6  EC43  F017         	call	_change_sequence	;wreg free
  1833                           
  1834                           ;main.c: 250:                     break;
  1835  0022BA  EF95  F011         	goto	l264
  1836  0022BE                     l5189:
  1837  0022BE  FFFF               	dw	65535	; assembler added errata NOP
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;main.c: 253:                     add_component();
  1841  0022C0  ECFF  F00D         	call	_add_component	;wreg free
  1842                           
  1843                           ;main.c: 255:                     break;
  1844  0022C4  EF95  F011         	goto	l264
  1845  0022C8                     l5191:
  1846  0022C8  FFFF               	dw	65535	; assembler added errata NOP
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;main.c: 258:                     remove_component();
  1850  0022CA  EC01  F014         	call	_remove_component	;wreg free
  1851                           
  1852                           ;main.c: 260:                     break;
  1853  0022CE  EF95  F011         	goto	l264
  1854  0022D2                     l5193:
  1855  0022D2  FFFF               	dw	65535	; assembler added errata NOP
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;main.c: 263:                     New_char_RX=0;
  1859  0022D4  0E00               	movlw	0
  1860  0022D6  6E74               	movwf	_New_char_RX^0,c
  1861                           
  1862                           ;main.c: 264:                     stop=0;
  1863  0022D8  0E00               	movlw	0
  1864  0022DA  6E72               	movwf	_stop^0,c
  1865                           
  1866                           ;main.c: 265:                     break;
  1867  0022DC  EF95  F011         	goto	l264
  1868  0022E0                     l5197:
  1869  0022E0  FFFF               	dw	65535	; assembler added errata NOP
  1870  0022E2  0100               	movlb	0	; () banked
  1871  0022E4  51CF               	movf	_State& (0+255),w,b
  1872  0022E6  6E3F               	movwf	??_start_up_menu^0,c
  1873  0022E8  6A40               	clrf	(??_start_up_menu+1)^0,c
  1874                           
  1875                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1876                           ; Switch size 1, requested type "simple"
  1877                           ; Number of cases is 1, Range of values is 0 to 0
  1878                           ; switch strategies available:
  1879                           ; Name         Instructions Cycles
  1880                           ; simple_byte            4     3 (average)
  1881                           ;	Chosen strategy is simple_byte
  1882  0022EA  5040               	movf	(??_start_up_menu+1)^0,w,c
  1883  0022EC  0A00               	xorlw	0	; case 0
  1884  0022EE  B4D8               	btfsc	status,2,c
  1885  0022F0  EF7C  F011         	goto	l5299
  1886  0022F4  EF95  F011         	goto	l264
  1887  0022F8                     l5299:
  1888  0022F8  FFFF               	dw	65535	; assembler added errata NOP
  1889                           
  1890                           ; BSR set to: 0
  1891                           ; Switch size 1, requested type "simple"
  1892                           ; Number of cases is 5, Range of values is 49 to 81
  1893                           ; switch strategies available:
  1894                           ; Name         Instructions Cycles
  1895                           ; simple_byte           16     9 (average)
  1896                           ;	Chosen strategy is simple_byte
  1897  0022FA  503F               	movf	??_start_up_menu^0,w,c
  1898  0022FC  0A31               	xorlw	49	; case 49
  1899  0022FE  B4D8               	btfsc	status,2,c
  1900  002300  EFF1  F010         	goto	l5171
  1901  002304  0A03               	xorlw	3	; case 50
  1902  002306  B4D8               	btfsc	status,2,c
  1903  002308  EF5A  F011         	goto	l5187
  1904  00230C  0A01               	xorlw	1	; case 51
  1905  00230E  B4D8               	btfsc	status,2,c
  1906  002310  EF5F  F011         	goto	l5189
  1907  002314  0A07               	xorlw	7	; case 52
  1908  002316  B4D8               	btfsc	status,2,c
  1909  002318  EF64  F011         	goto	l5191
  1910  00231C  0A65               	xorlw	101	; case 81
  1911  00231E  B4D8               	btfsc	status,2,c
  1912  002320  EF69  F011         	goto	l5193
  1913  002324  EF95  F011         	goto	l264
  1914  002328                     l257:
  1915  002328  FFFF               	dw	65535	; assembler added errata NOP
  1916  00232A                     l264:
  1917  00232A  FFFF               	dw	65535	; assembler added errata NOP
  1918  00232C  0012               	return		;funcret
  1919  00232E  FFFF               	dw	65535	; errata NOP
  1920  002330                     __end_of_start_up_menu:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _return_to_initial *****************
  1924 ;; Defined at:
  1925 ;;		line 682 in file "main.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  i               2   23[COMRAM] int 
  1930 ;;  i               2   21[COMRAM] int 
  1931 ;;  i               2   19[COMRAM] int 
  1932 ;;  i               2   17[COMRAM] int 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1942 ;;      Params:         0       0       0       0       0       0       0
  1943 ;;      Locals:         8       0       0       0       0       0       0
  1944 ;;      Temps:          1       0       0       0       0       0       0
  1945 ;;      Totals:         9       0       0       0       0       0       0
  1946 ;;Total ram usage:        9 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 4
  1949 ;; This function calls:
  1950 ;;		_Twister
  1951 ;;		_X_axis
  1952 ;;		_Y_axis
  1953 ;;		_Z_axis
  1954 ;; This function is called by:
  1955 ;;		_start_up_menu
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text2
  1960  002330                     __ptext2:
  1961                           	callstack 0
  1962  002330                     _return_to_initial:
  1963                           	callstack 0
  1964  002330  FFFF               	dw	65535	; assembler added errata NOP
  1965  002332                     
  1966                           ;main.c: 684:     New_char_RX=0;
  1967  002332  0E00               	movlw	0
  1968  002334  6E74               	movwf	_New_char_RX^0,c
  1969                           
  1970                           ;main.c: 685:     stop=0;
  1971  002336  0E00               	movlw	0
  1972  002338  6E72               	movwf	_stop^0,c
  1973  00233A                     
  1974                           ;main.c: 686:     Steps=Step_X;
  1975  00233A  C0B6  F0B8         	movff	_Step_X,_Steps
  1976  00233E  C0B7  F0B9         	movff	_Step_X+1,_Steps+1
  1977                           
  1978                           ;main.c: 687:     for(int i = 0; i<Steps; i++){X_axis(0);}
  1979  002342  0E00               	movlw	0
  1980  002344  6E13               	movwf	(return_to_initial@i+1)^0,c
  1981  002346  0E00               	movlw	0
  1982  002348  6E12               	movwf	return_to_initial@i^0,c
  1983  00234A  EFAD  F011         	goto	l4781
  1984  00234E                     l4777:
  1985  00234E  FFFF               	dw	65535	; assembler added errata NOP
  1986                           
  1987                           ; BSR set to: 0
  1988  002350  0E00               	movlw	0
  1989  002352  EC86  F015         	call	_X_axis
  1990  002356  4A12               	infsnz	return_to_initial@i^0,f,c
  1991  002358  2A13               	incf	(return_to_initial@i+1)^0,f,c
  1992  00235A                     l4781:
  1993  00235A  FFFF               	dw	65535	; assembler added errata NOP
  1994  00235C  0100               	movlb	0	; () banked
  1995  00235E  51B8               	movf	_Steps& (0+255),w,b
  1996  002360  5C12               	subwf	return_to_initial@i^0,w,c
  1997  002362  5013               	movf	(return_to_initial@i+1)^0,w,c
  1998  002364  0A80               	xorlw	128
  1999  002366  6E11               	movwf	??_return_to_initial^0,c
  2000  002368  51B9               	movf	(_Steps+1)& (0+255),w,b
  2001  00236A  0A80               	xorlw	128
  2002  00236C  5811               	subwfb	??_return_to_initial^0,w,c
  2003  00236E  A0D8               	btfss	status,0,c
  2004  002370  EFBC  F011         	goto	u5531
  2005  002374  EFBF  F011         	goto	u5530
  2006  002378                     u5531:
  2007  002378  FFFF               	dw	65535	; assembler added errata NOP
  2008  00237A  EFA7  F011         	goto	l4777
  2009  00237E                     u5530:
  2010  00237E  FFFF               	dw	65535	; assembler added errata NOP
  2011  002380                     
  2012                           ; BSR set to: 0
  2013                           ;main.c: 688:     Steps=Step_Y;
  2014  002380  C0B4  F0B8         	movff	_Step_Y,_Steps
  2015  002384  C0B5  F0B9         	movff	_Step_Y+1,_Steps+1
  2016  002388                     
  2017                           ; BSR set to: 0
  2018                           ;main.c: 689:     for(int i = 0; i<Steps; i++){Y_axis(0);}
  2019  002388  0E00               	movlw	0
  2020  00238A  6E15               	movwf	(return_to_initial@i_921+1)^0,c
  2021  00238C  0E00               	movlw	0
  2022  00238E  6E14               	movwf	return_to_initial@i_921^0,c
  2023  002390  EFD0  F011         	goto	l4789
  2024  002394                     l4785:
  2025  002394  FFFF               	dw	65535	; assembler added errata NOP
  2026                           
  2027                           ; BSR set to: 0
  2028  002396  0E00               	movlw	0
  2029  002398  EC06  F015         	call	_Y_axis
  2030  00239C  4A14               	infsnz	return_to_initial@i_921^0,f,c
  2031  00239E  2A15               	incf	(return_to_initial@i_921+1)^0,f,c
  2032  0023A0                     l4789:
  2033  0023A0  FFFF               	dw	65535	; assembler added errata NOP
  2034  0023A2  0100               	movlb	0	; () banked
  2035  0023A4  51B8               	movf	_Steps& (0+255),w,b
  2036  0023A6  5C14               	subwf	return_to_initial@i_921^0,w,c
  2037  0023A8  5015               	movf	(return_to_initial@i_921+1)^0,w,c
  2038  0023AA  0A80               	xorlw	128
  2039  0023AC  6E11               	movwf	??_return_to_initial^0,c
  2040  0023AE  51B9               	movf	(_Steps+1)& (0+255),w,b
  2041  0023B0  0A80               	xorlw	128
  2042  0023B2  5811               	subwfb	??_return_to_initial^0,w,c
  2043  0023B4  A0D8               	btfss	status,0,c
  2044  0023B6  EFDF  F011         	goto	u5541
  2045  0023BA  EFE2  F011         	goto	u5540
  2046  0023BE                     u5541:
  2047  0023BE  FFFF               	dw	65535	; assembler added errata NOP
  2048  0023C0  EFCA  F011         	goto	l4785
  2049  0023C4                     u5540:
  2050  0023C4  FFFF               	dw	65535	; assembler added errata NOP
  2051  0023C6                     
  2052                           ; BSR set to: 0
  2053                           ;main.c: 690:     Steps=Step_Angle;
  2054  0023C6  C0B0  F0B8         	movff	_Step_Angle,_Steps
  2055  0023CA  C0B1  F0B9         	movff	_Step_Angle+1,_Steps+1
  2056  0023CE                     
  2057                           ; BSR set to: 0
  2058                           ;main.c: 691:     for(int i = 0; i<Steps; i++){Twister(0);}
  2059  0023CE  0E00               	movlw	0
  2060  0023D0  6E17               	movwf	(return_to_initial@i_922+1)^0,c
  2061  0023D2  0E00               	movlw	0
  2062  0023D4  6E16               	movwf	return_to_initial@i_922^0,c
  2063  0023D6  EFF3  F011         	goto	l4797
  2064  0023DA                     l4793:
  2065  0023DA  FFFF               	dw	65535	; assembler added errata NOP
  2066                           
  2067                           ; BSR set to: 0
  2068  0023DC  0E00               	movlw	0
  2069  0023DE  EC83  F016         	call	_Twister
  2070  0023E2  4A16               	infsnz	return_to_initial@i_922^0,f,c
  2071  0023E4  2A17               	incf	(return_to_initial@i_922+1)^0,f,c
  2072  0023E6                     l4797:
  2073  0023E6  FFFF               	dw	65535	; assembler added errata NOP
  2074  0023E8  0100               	movlb	0	; () banked
  2075  0023EA  51B8               	movf	_Steps& (0+255),w,b
  2076  0023EC  5C16               	subwf	return_to_initial@i_922^0,w,c
  2077  0023EE  5017               	movf	(return_to_initial@i_922+1)^0,w,c
  2078  0023F0  0A80               	xorlw	128
  2079  0023F2  6E11               	movwf	??_return_to_initial^0,c
  2080  0023F4  51B9               	movf	(_Steps+1)& (0+255),w,b
  2081  0023F6  0A80               	xorlw	128
  2082  0023F8  5811               	subwfb	??_return_to_initial^0,w,c
  2083  0023FA  A0D8               	btfss	status,0,c
  2084  0023FC  EF02  F012         	goto	u5551
  2085  002400  EF05  F012         	goto	u5550
  2086  002404                     u5551:
  2087  002404  FFFF               	dw	65535	; assembler added errata NOP
  2088  002406  EFED  F011         	goto	l4793
  2089  00240A                     u5550:
  2090  00240A  FFFF               	dw	65535	; assembler added errata NOP
  2091  00240C                     
  2092                           ; BSR set to: 0
  2093                           ;main.c: 692:     Steps=Step_Z;
  2094  00240C  C0B2  F0B8         	movff	_Step_Z,_Steps
  2095  002410  C0B3  F0B9         	movff	_Step_Z+1,_Steps+1
  2096  002414                     
  2097                           ; BSR set to: 0
  2098                           ;main.c: 693:     for(int i=0; i<Steps && !stop; i++){Z_axis(0);}
  2099  002414  0E00               	movlw	0
  2100  002416  6E19               	movwf	(return_to_initial@i_923+1)^0,c
  2101  002418  0E00               	movlw	0
  2102  00241A  6E18               	movwf	return_to_initial@i_923^0,c
  2103  00241C  EF16  F012         	goto	l4805
  2104  002420                     l4801:
  2105  002420  FFFF               	dw	65535	; assembler added errata NOP
  2106                           
  2107                           ; BSR set to: 0
  2108  002422  0E00               	movlw	0
  2109  002424  EC86  F014         	call	_Z_axis
  2110  002428  4A18               	infsnz	return_to_initial@i_923^0,f,c
  2111  00242A  2A19               	incf	(return_to_initial@i_923+1)^0,f,c
  2112  00242C                     l4805:
  2113  00242C  FFFF               	dw	65535	; assembler added errata NOP
  2114  00242E  0100               	movlb	0	; () banked
  2115  002430  51B8               	movf	_Steps& (0+255),w,b
  2116  002432  5C18               	subwf	return_to_initial@i_923^0,w,c
  2117  002434  5019               	movf	(return_to_initial@i_923+1)^0,w,c
  2118  002436  0A80               	xorlw	128
  2119  002438  6E11               	movwf	??_return_to_initial^0,c
  2120  00243A  51B9               	movf	(_Steps+1)& (0+255),w,b
  2121  00243C  0A80               	xorlw	128
  2122  00243E  5811               	subwfb	??_return_to_initial^0,w,c
  2123  002440  B0D8               	btfsc	status,0,c
  2124  002442  EF25  F012         	goto	u5561
  2125  002446  EF28  F012         	goto	u5560
  2126  00244A                     u5561:
  2127  00244A  FFFF               	dw	65535	; assembler added errata NOP
  2128  00244C  EF32  F012         	goto	l479
  2129  002450                     u5560:
  2130  002450  FFFF               	dw	65535	; assembler added errata NOP
  2131  002452                     
  2132                           ; BSR set to: 0
  2133  002452  5072               	movf	_stop^0,w,c
  2134  002454  B4D8               	btfsc	status,2,c
  2135  002456  EF2F  F012         	goto	u5571
  2136  00245A  EF32  F012         	goto	u5570
  2137  00245E                     u5571:
  2138  00245E  FFFF               	dw	65535	; assembler added errata NOP
  2139  002460  EF10  F012         	goto	l4801
  2140  002464                     u5570:
  2141  002464                     l479:
  2142  002464  FFFF               	dw	65535	; assembler added errata NOP
  2143                           
  2144                           ; BSR set to: 0
  2145  002466  0012               	return		;funcret
  2146  002468  FFFF               	dw	65535	; errata NOP
  2147  00246A                     __end_of_return_to_initial:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _remove_component *****************
  2151 ;; Defined at:
  2152 ;;		line 361 in file "main.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  indxToDel       2   30[COMRAM] int 
  2157 ;;  ptr             2   27[COMRAM] PTR unsigned char 
  2158 ;;		 -> sequence(4), NULL(0), 
  2159 ;;  rm_comp         1   29[COMRAM] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2169 ;;      Params:         0       0       0       0       0       0       0
  2170 ;;      Locals:         5       0       0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0
  2172 ;;      Totals:         5       0       0       0       0       0       0
  2173 ;;Total ram usage:        5 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 4
  2176 ;; This function calls:
  2177 ;;		_memmove
  2178 ;;		_print_string
  2179 ;;		_strlen
  2180 ;;		_strrchr
  2181 ;; This function is called by:
  2182 ;;		_start_up_menu
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text3
  2187  002802                     __ptext3:
  2188                           	callstack 0
  2189  002802                     _remove_component:
  2190                           	callstack 0
  2191  002802  FFFF               	dw	65535	; assembler added errata NOP
  2192  002804                     
  2193                           ;main.c: 362:     print_string("\nWhich component would you like to remove from the  seq
      +                          uence?\n");
  2194  002804  0EFD               	movlw	low STR_15
  2195  002806  6E0A               	movwf	print_string@strng^0,c
  2196  002808  0E7D               	movlw	high STR_15
  2197  00280A  6E0B               	movwf	(print_string@strng+1)^0,c
  2198  00280C  ECF3  F016         	call	_print_string	;wreg free
  2199                           
  2200                           ;main.c: 363:     print_string(sequence);
  2201  002810  0EDC               	movlw	low _sequence
  2202  002812  6E0A               	movwf	print_string@strng^0,c
  2203  002814  0E00               	movlw	high _sequence
  2204  002816  6E0B               	movwf	(print_string@strng+1)^0,c
  2205  002818  ECF3  F016         	call	_print_string	;wreg free
  2206  00281C                     l5073:
  2207  00281C  FFFF               	dw	65535	; assembler added errata NOP
  2208                           
  2209                           ;main.c: 365:         if(New_char_RX){
  2210  00281E  5074               	movf	_New_char_RX^0,w,c
  2211  002820  B4D8               	btfsc	status,2,c
  2212  002822  EF15  F014         	goto	u6091
  2213  002826  EF18  F014         	goto	u6090
  2214  00282A                     u6091:
  2215  00282A  FFFF               	dw	65535	; assembler added errata NOP
  2216  00282C  EF0E  F014         	goto	l5073
  2217  002830                     u6090:
  2218  002830  FFFF               	dw	65535	; assembler added errata NOP
  2219  002832                     
  2220                           ;main.c: 366:             New_char_RX=0;
  2221  002832  0E00               	movlw	0
  2222  002834  6E74               	movwf	_New_char_RX^0,c
  2223  002836                     
  2224                           ;main.c: 367:             char rm_comp = input_str[0];
  2225  002836  C0D2  F01E         	movff	_input_str,remove_component@rm_comp	;volatile
  2226  00283A                     
  2227                           ;main.c: 368:             char *ptr;;main.c: 369:             int indxToDel;;main.c: 370
      +                          :             ptr=strrchr(sequence,rm_comp);
  2228  00283A  0EDC               	movlw	low _sequence
  2229  00283C  6E18               	movwf	strrchr@s^0,c
  2230  00283E  0E00               	movlw	high _sequence
  2231  002840  6E19               	movwf	(strrchr@s+1)^0,c
  2232  002842  C01E  F01A         	movff	remove_component@rm_comp,strrchr@c
  2233  002846  6A1B               	clrf	(strrchr@c+1)^0,c
  2234  002848  EC72  F019         	call	_strrchr	;wreg free
  2235  00284C  C018  F01C         	movff	?_strrchr,remove_component@ptr
  2236  002850  C019  F01D         	movff	?_strrchr+1,remove_component@ptr+1
  2237  002854                     
  2238                           ;main.c: 372:             if (rm_comp=='Q'){
  2239  002854  0E51               	movlw	81
  2240  002856  181E               	xorwf	remove_component@rm_comp^0,w,c
  2241  002858  A4D8               	btfss	status,2,c
  2242  00285A  EF31  F014         	goto	u6101
  2243  00285E  EF34  F014         	goto	u6100
  2244  002862                     u6101:
  2245  002862  FFFF               	dw	65535	; assembler added errata NOP
  2246  002864  EF37  F014         	goto	l5087
  2247  002868                     u6100:
  2248  002868  FFFF               	dw	65535	; assembler added errata NOP
  2249  00286A  EF81  F014         	goto	l5103
  2250  00286E                     l5087:
  2251  00286E  FFFF               	dw	65535	; assembler added errata NOP
  2252  002870  501C               	movf	remove_component@ptr^0,w,c
  2253  002872  101D               	iorwf	(remove_component@ptr+1)^0,w,c
  2254  002874  B4D8               	btfsc	status,2,c
  2255  002876  EF3F  F014         	goto	u6111
  2256  00287A  EF42  F014         	goto	u6110
  2257  00287E                     u6111:
  2258  00287E  FFFF               	dw	65535	; assembler added errata NOP
  2259  002880  EF6D  F014         	goto	l5099
  2260  002884                     u6110:
  2261  002884  FFFF               	dw	65535	; assembler added errata NOP
  2262  002886                     
  2263                           ;main.c: 376:                 indxToDel = ptr - sequence;
  2264  002886  0EDC               	movlw	low _sequence
  2265  002888  5C1C               	subwf	remove_component@ptr^0,w,c
  2266  00288A  6E1F               	movwf	remove_component@indxToDel^0,c
  2267  00288C  0E00               	movlw	high _sequence
  2268  00288E  581D               	subwfb	(remove_component@ptr+1)^0,w,c
  2269  002890  6E20               	movwf	(remove_component@indxToDel+1)^0,c
  2270  002892                     
  2271                           ;main.c: 377:                 memmove(&sequence[indxToDel], &sequence[indxToDel + 1], st
      +                          rlen(sequence) - indxToDel);
  2272  002892  0EDC               	movlw	low _sequence
  2273  002894  241F               	addwf	remove_component@indxToDel^0,w,c
  2274  002896  6E0E               	movwf	memmove@d1^0,c
  2275  002898  0E00               	movlw	high _sequence
  2276  00289A  2020               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2277  00289C  6E0F               	movwf	(memmove@d1+1)^0,c
  2278  00289E  0EDD               	movlw	low (_sequence+1)
  2279  0028A0  241F               	addwf	remove_component@indxToDel^0,w,c
  2280  0028A2  6E10               	movwf	memmove@s1^0,c
  2281  0028A4  0E00               	movlw	high (_sequence+1)
  2282  0028A6  2020               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2283  0028A8  6E11               	movwf	(memmove@s1+1)^0,c
  2284  0028AA  0EDC               	movlw	low _sequence
  2285  0028AC  6E0A               	movwf	strlen@s^0,c
  2286  0028AE  0E00               	movlw	high _sequence
  2287  0028B0  6E0B               	movwf	(strlen@s+1)^0,c
  2288  0028B2  ECEF  F018         	call	_strlen	;wreg free
  2289  0028B6  501F               	movf	remove_component@indxToDel^0,w,c
  2290  0028B8  5C0A               	subwf	?_strlen^0,w,c
  2291  0028BA  6E12               	movwf	memmove@n^0,c
  2292  0028BC  5020               	movf	(remove_component@indxToDel+1)^0,w,c
  2293  0028BE  580B               	subwfb	(?_strlen+1)^0,w,c
  2294  0028C0  6E13               	movwf	(memmove@n+1)^0,c
  2295  0028C2  EC06  F016         	call	_memmove	;wreg free
  2296  0028C6                     
  2297                           ;main.c: 378:                 print_string("\ncomponent removed");
  2298  0028C6  0ED9               	movlw	low STR_16
  2299  0028C8  6E0A               	movwf	print_string@strng^0,c
  2300  0028CA  0E7F               	movlw	high STR_16
  2301  0028CC  6E0B               	movwf	(print_string@strng+1)^0,c
  2302  0028CE  ECF3  F016         	call	_print_string	;wreg free
  2303  0028D2                     
  2304                           ;main.c: 379:                 stop=0;
  2305  0028D2  0E00               	movlw	0
  2306  0028D4  6E72               	movwf	_stop^0,c
  2307                           
  2308                           ;main.c: 380:                 break;
  2309  0028D6  EF81  F014         	goto	l5103
  2310  0028DA                     l5099:
  2311  0028DA  FFFF               	dw	65535	; assembler added errata NOP
  2312                           
  2313                           ;main.c: 384:                 print_string("\ncomponent is not in the sequence. Try sele
      +                          cting another component: \n");
  2314  0028DC  0EB7               	movlw	low STR_17
  2315  0028DE  6E0A               	movwf	print_string@strng^0,c
  2316  0028E0  0E7D               	movlw	high STR_17
  2317  0028E2  6E0B               	movwf	(print_string@strng+1)^0,c
  2318  0028E4  ECF3  F016         	call	_print_string	;wreg free
  2319  0028E8                     l5101:
  2320  0028E8  FFFF               	dw	65535	; assembler added errata NOP
  2321  0028EA  5074               	movf	_New_char_RX^0,w,c
  2322  0028EC  B4D8               	btfsc	status,2,c
  2323  0028EE  EF7B  F014         	goto	u6121
  2324  0028F2  EF7E  F014         	goto	u6120
  2325  0028F6                     u6121:
  2326  0028F6  FFFF               	dw	65535	; assembler added errata NOP
  2327  0028F8  EF74  F014         	goto	l5101
  2328  0028FC                     u6120:
  2329  0028FC  FFFF               	dw	65535	; assembler added errata NOP
  2330  0028FE  EF0E  F014         	goto	l5073
  2331  002902                     l5103:
  2332  002902  FFFF               	dw	65535	; assembler added errata NOP
  2333                           
  2334                           ;main.c: 389:     New_char_RX=0;
  2335  002904  0E00               	movlw	0
  2336  002906  6E74               	movwf	_New_char_RX^0,c
  2337  002908  0012               	return		;funcret
  2338  00290A  FFFF               	dw	65535	; errata NOP
  2339  00290C                     __end_of_remove_component:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _strrchr *****************
  2343 ;; Defined at:
  2344 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2347 ;;		 -> sequence(4), 
  2348 ;;  c               2   25[COMRAM] int 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  2   23[COMRAM] PTR unsigned char 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2360 ;;      Params:         4       0       0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0
  2363 ;;      Totals:         4       0       0       0       0       0       0
  2364 ;;Total ram usage:        4 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 3
  2367 ;; This function calls:
  2368 ;;		___memrchr
  2369 ;;		_strlen
  2370 ;; This function is called by:
  2371 ;;		_remove_component
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text4
  2376  0032E4                     __ptext4:
  2377                           	callstack 0
  2378  0032E4                     _strrchr:
  2379                           	callstack 0
  2380  0032E4  FFFF               	dw	65535	; assembler added errata NOP
  2381  0032E6  C018  F00E         	movff	strrchr@s,___memrchr@m
  2382  0032EA  C019  F00F         	movff	strrchr@s+1,___memrchr@m+1
  2383  0032EE  C01A  F010         	movff	strrchr@c,___memrchr@c
  2384  0032F2  C01B  F011         	movff	strrchr@c+1,___memrchr@c+1
  2385  0032F6  C018  F00A         	movff	strrchr@s,strlen@s
  2386  0032FA  C019  F00B         	movff	strrchr@s+1,strlen@s+1
  2387  0032FE  ECEF  F018         	call	_strlen	;wreg free
  2388  003302  0E01               	movlw	1
  2389  003304  240A               	addwf	?_strlen^0,w,c
  2390  003306  6E12               	movwf	___memrchr@n^0,c
  2391  003308  0E00               	movlw	0
  2392  00330A  200B               	addwfc	(?_strlen+1)^0,w,c
  2393  00330C  6E13               	movwf	(___memrchr@n+1)^0,c
  2394  00330E  ECD2  F017         	call	___memrchr	;wreg free
  2395  003312  C00E  F018         	movff	?___memrchr,?_strrchr
  2396  003316  C00F  F019         	movff	?___memrchr+1,?_strrchr+1
  2397  00331A  0012               	return		;funcret
  2398  00331C  FFFF               	dw	65535	; errata NOP
  2399  00331E                     __end_of_strrchr:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function ___memrchr *****************
  2403 ;; Defined at:
  2404 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  m               2   13[COMRAM] PTR const void 
  2407 ;;		 -> sequence(4), 
  2408 ;;  c               2   15[COMRAM] int 
  2409 ;;  n               2   17[COMRAM] unsigned int 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2412 ;;		 -> sequence(4), 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  2   13[COMRAM] PTR void 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2422 ;;      Params:         6       0       0       0       0       0       0
  2423 ;;      Locals:         2       0       0       0       0       0       0
  2424 ;;      Temps:          2       0       0       0       0       0       0
  2425 ;;      Totals:        10       0       0       0       0       0       0
  2426 ;;Total ram usage:       10 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 2
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_strrchr
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text5
  2437  002FA4                     __ptext5:
  2438                           	callstack 0
  2439  002FA4                     ___memrchr:
  2440                           	callstack 0
  2441  002FA4  FFFF               	dw	65535	; assembler added errata NOP
  2442  002FA6  C00E  F016         	movff	___memrchr@m,___memrchr@s
  2443  002FAA  C00F  F017         	movff	___memrchr@m+1,___memrchr@s+1
  2444  002FAE  C010  F010         	movff	___memrchr@c,___memrchr@c
  2445  002FB2  6A11               	clrf	(___memrchr@c+1)^0,c
  2446  002FB4  EFFC  F017         	goto	l3061
  2447  002FB8                     l3055:
  2448  002FB8  FFFF               	dw	65535	; assembler added errata NOP
  2449  002FBA  5012               	movf	___memrchr@n^0,w,c
  2450  002FBC  2416               	addwf	___memrchr@s^0,w,c
  2451  002FBE  6ED9               	movwf	fsr2l,c
  2452  002FC0  5013               	movf	(___memrchr@n+1)^0,w,c
  2453  002FC2  2017               	addwfc	(___memrchr@s+1)^0,w,c
  2454  002FC4  6EDA               	movwf	fsr2h,c
  2455  002FC6  50DF               	movf	indf2,w,c
  2456  002FC8  6E14               	movwf	??___memrchr^0,c
  2457  002FCA  6A15               	clrf	(??___memrchr+1)^0,c
  2458  002FCC  5010               	movf	___memrchr@c^0,w,c
  2459  002FCE  1814               	xorwf	??___memrchr^0,w,c
  2460  002FD0  E107               	bnz	u2871
  2461  002FD2  5011               	movf	(___memrchr@c+1)^0,w,c
  2462  002FD4  1815               	xorwf	(??___memrchr+1)^0,w,c
  2463  002FD6  A4D8               	btfss	status,2,c
  2464  002FD8  EFF0  F017         	goto	u2871
  2465  002FDC  EFF3  F017         	goto	u2870
  2466  002FE0                     u2871:
  2467  002FE0  FFFF               	dw	65535	; assembler added errata NOP
  2468  002FE2  EFFC  F017         	goto	l3061
  2469  002FE6                     u2870:
  2470  002FE6  FFFF               	dw	65535	; assembler added errata NOP
  2471  002FE8  5012               	movf	___memrchr@n^0,w,c
  2472  002FEA  2416               	addwf	___memrchr@s^0,w,c
  2473  002FEC  6E0E               	movwf	?___memrchr^0,c
  2474  002FEE  5013               	movf	(___memrchr@n+1)^0,w,c
  2475  002FF0  2017               	addwfc	(___memrchr@s+1)^0,w,c
  2476  002FF2  6E0F               	movwf	(?___memrchr+1)^0,c
  2477  002FF4  EF10  F018         	goto	l1278
  2478  002FF8                     l3061:
  2479  002FF8  FFFF               	dw	65535	; assembler added errata NOP
  2480  002FFA  0612               	decf	___memrchr@n^0,f,c
  2481  002FFC  A0D8               	btfss	status,0,c
  2482  002FFE  0613               	decf	(___memrchr@n+1)^0,f,c
  2483  003000  2812               	incf	___memrchr@n^0,w,c
  2484  003002  E106               	bnz	u2881
  2485  003004  2813               	incf	(___memrchr@n+1)^0,w,c
  2486  003006  A4D8               	btfss	status,2,c
  2487  003008  EF08  F018         	goto	u2881
  2488  00300C  EF0B  F018         	goto	u2880
  2489  003010                     u2881:
  2490  003010  FFFF               	dw	65535	; assembler added errata NOP
  2491  003012  EFDC  F017         	goto	l3055
  2492  003016                     u2880:
  2493  003016  FFFF               	dw	65535	; assembler added errata NOP
  2494  003018  0E00               	movlw	0
  2495  00301A  6E0E               	movwf	?___memrchr^0,c
  2496  00301C  0E00               	movlw	0
  2497  00301E  6E0F               	movwf	(?___memrchr+1)^0,c
  2498  003020                     l1278:
  2499  003020  FFFF               	dw	65535	; assembler added errata NOP
  2500  003022  0012               	return		;funcret
  2501  003024  FFFF               	dw	65535	; errata NOP
  2502  003026                     __end_of___memrchr:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _memmove *****************
  2506 ;; Defined at:
  2507 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  d1              2   13[COMRAM] PTR void 
  2510 ;;		 -> sequence(4), 
  2511 ;;  s1              2   15[COMRAM] PTR const void 
  2512 ;;		 -> sequence(4), 
  2513 ;;  n               2   17[COMRAM] unsigned int 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2516 ;;		 -> sequence(4), 
  2517 ;;  d               2   21[COMRAM] PTR unsigned char 
  2518 ;;		 -> sequence(4), 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  2   13[COMRAM] PTR void 
  2521 ;; Registers used:
  2522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2528 ;;      Params:         6       0       0       0       0       0       0
  2529 ;;      Locals:         4       0       0       0       0       0       0
  2530 ;;      Temps:          2       0       0       0       0       0       0
  2531 ;;      Totals:        12       0       0       0       0       0       0
  2532 ;;Total ram usage:       12 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; Hardware stack levels required when called: 2
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_remove_component
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text6
  2543  002C0C                     __ptext6:
  2544                           	callstack 0
  2545  002C0C                     _memmove:
  2546                           	callstack 0
  2547  002C0C  FFFF               	dw	65535	; assembler added errata NOP
  2548  002C0E  C010  F018         	movff	memmove@s1,memmove@s
  2549  002C12  C011  F019         	movff	memmove@s1+1,memmove@s+1
  2550  002C16  C00E  F016         	movff	memmove@d1,memmove@d
  2551  002C1A  C00F  F017         	movff	memmove@d1+1,memmove@d+1
  2552  002C1E  5016               	movf	memmove@d^0,w,c
  2553  002C20  5C18               	subwf	memmove@s^0,w,c
  2554  002C22  5017               	movf	(memmove@d+1)^0,w,c
  2555  002C24  5819               	subwfb	(memmove@s+1)^0,w,c
  2556  002C26  B0D8               	btfsc	status,0,c
  2557  002C28  EF18  F016         	goto	u3021
  2558  002C2C  EF1B  F016         	goto	u3020
  2559  002C30                     u3021:
  2560  002C30  FFFF               	dw	65535	; assembler added errata NOP
  2561  002C32  EF58  F016         	goto	l3153
  2562  002C36                     u3020:
  2563  002C36  FFFF               	dw	65535	; assembler added errata NOP
  2564  002C38  5012               	movf	memmove@n^0,w,c
  2565  002C3A  2418               	addwf	memmove@s^0,w,c
  2566  002C3C  6E14               	movwf	??_memmove^0,c
  2567  002C3E  5013               	movf	(memmove@n+1)^0,w,c
  2568  002C40  2019               	addwfc	(memmove@s+1)^0,w,c
  2569  002C42  6E15               	movwf	(??_memmove+1)^0,c
  2570  002C44  5014               	movf	??_memmove^0,w,c
  2571  002C46  5C16               	subwf	memmove@d^0,w,c
  2572  002C48  5015               	movf	(??_memmove+1)^0,w,c
  2573  002C4A  5817               	subwfb	(memmove@d+1)^0,w,c
  2574  002C4C  B0D8               	btfsc	status,0,c
  2575  002C4E  EF2B  F016         	goto	u3031
  2576  002C52  EF2E  F016         	goto	u3030
  2577  002C56                     u3031:
  2578  002C56  FFFF               	dw	65535	; assembler added errata NOP
  2579  002C58  EF58  F016         	goto	l3153
  2580  002C5C                     u3030:
  2581  002C5C  FFFF               	dw	65535	; assembler added errata NOP
  2582  002C5E  5012               	movf	memmove@n^0,w,c
  2583  002C60  2618               	addwf	memmove@s^0,f,c
  2584  002C62  5013               	movf	(memmove@n+1)^0,w,c
  2585  002C64  2219               	addwfc	(memmove@s+1)^0,f,c
  2586  002C66  5012               	movf	memmove@n^0,w,c
  2587  002C68  2616               	addwf	memmove@d^0,f,c
  2588  002C6A  5013               	movf	(memmove@n+1)^0,w,c
  2589  002C6C  2217               	addwfc	(memmove@d+1)^0,f,c
  2590  002C6E                     l3149:
  2591  002C6E  FFFF               	dw	65535	; assembler added errata NOP
  2592  002C70  0618               	decf	memmove@s^0,f,c
  2593  002C72  A0D8               	btfss	status,0,c
  2594  002C74  0619               	decf	(memmove@s+1)^0,f,c
  2595  002C76  C018  FFD9         	movff	memmove@s,fsr2l
  2596  002C7A  C019  FFDA         	movff	memmove@s+1,fsr2h
  2597  002C7E  0616               	decf	memmove@d^0,f,c
  2598  002C80  A0D8               	btfss	status,0,c
  2599  002C82  0617               	decf	(memmove@d+1)^0,f,c
  2600  002C84  C016  FFE1         	movff	memmove@d,fsr1l
  2601  002C88  C017  FFE2         	movff	memmove@d+1,fsr1h
  2602  002C8C  CFDF FFE7          	movff	indf2,indf1
  2603  002C90  0612               	decf	memmove@n^0,f,c
  2604  002C92  A0D8               	btfss	status,0,c
  2605  002C94  0613               	decf	(memmove@n+1)^0,f,c
  2606  002C96  5012               	movf	memmove@n^0,w,c
  2607  002C98  1013               	iorwf	(memmove@n+1)^0,w,c
  2608  002C9A  A4D8               	btfss	status,2,c
  2609  002C9C  EF52  F016         	goto	u3041
  2610  002CA0  EF55  F016         	goto	u3040
  2611  002CA4                     u3041:
  2612  002CA4  FFFF               	dw	65535	; assembler added errata NOP
  2613  002CA6  EF37  F016         	goto	l3149
  2614  002CAA                     u3040:
  2615  002CAA  FFFF               	dw	65535	; assembler added errata NOP
  2616  002CAC  EF80  F016         	goto	l1234
  2617  002CB0                     l3153:
  2618  002CB0  FFFF               	dw	65535	; assembler added errata NOP
  2619  002CB2  5012               	movf	memmove@n^0,w,c
  2620  002CB4  1013               	iorwf	(memmove@n+1)^0,w,c
  2621  002CB6  B4D8               	btfsc	status,2,c
  2622  002CB8  EF60  F016         	goto	u3051
  2623  002CBC  EF63  F016         	goto	u3050
  2624  002CC0                     u3051:
  2625  002CC0  FFFF               	dw	65535	; assembler added errata NOP
  2626  002CC2  EF80  F016         	goto	l1234
  2627  002CC6                     u3050:
  2628  002CC6  FFFF               	dw	65535	; assembler added errata NOP
  2629  002CC8                     l3155:
  2630  002CC8  FFFF               	dw	65535	; assembler added errata NOP
  2631  002CCA  C018  FFD9         	movff	memmove@s,fsr2l
  2632  002CCE  C019  FFDA         	movff	memmove@s+1,fsr2h
  2633  002CD2  C016  FFE1         	movff	memmove@d,fsr1l
  2634  002CD6  C017  FFE2         	movff	memmove@d+1,fsr1h
  2635  002CDA  CFDF FFE7          	movff	indf2,indf1
  2636  002CDE  4A18               	infsnz	memmove@s^0,f,c
  2637  002CE0  2A19               	incf	(memmove@s+1)^0,f,c
  2638  002CE2  4A16               	infsnz	memmove@d^0,f,c
  2639  002CE4  2A17               	incf	(memmove@d+1)^0,f,c
  2640  002CE6  0612               	decf	memmove@n^0,f,c
  2641  002CE8  A0D8               	btfss	status,0,c
  2642  002CEA  0613               	decf	(memmove@n+1)^0,f,c
  2643  002CEC  5012               	movf	memmove@n^0,w,c
  2644  002CEE  1013               	iorwf	(memmove@n+1)^0,w,c
  2645  002CF0  A4D8               	btfss	status,2,c
  2646  002CF2  EF7D  F016         	goto	u3061
  2647  002CF6  EF80  F016         	goto	u3060
  2648  002CFA                     u3061:
  2649  002CFA  FFFF               	dw	65535	; assembler added errata NOP
  2650  002CFC  EF64  F016         	goto	l3155
  2651  002D00                     u3060:
  2652  002D00                     l1234:
  2653  002D00  FFFF               	dw	65535	; assembler added errata NOP
  2654  002D02  0012               	return		;funcret
  2655  002D04  FFFF               	dw	65535	; errata NOP
  2656  002D06                     __end_of_memmove:
  2657                           	callstack 0
  2658                           
  2659 ;; *************** function _pick_and_place *****************
  2660 ;; Defined at:
  2661 ;;		line 624 in file "main.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  Componnt        1    wreg     unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  Componnt        1    0[BANK1 ] unsigned char 
  2666 ;;  i               2   33[BANK1 ] int 
  2667 ;;  i               2   31[BANK1 ] int 
  2668 ;;  i               2   27[BANK1 ] int 
  2669 ;;  i               2   23[BANK1 ] int 
  2670 ;;  i               2   19[BANK1 ] int 
  2671 ;;  i               2   17[BANK1 ] int 
  2672 ;;  i               2   15[BANK1 ] int 
  2673 ;;  i               2   11[BANK1 ] int 
  2674 ;;  i               2    7[BANK1 ] int 
  2675 ;;  i               2    3[BANK1 ] int 
  2676 ;;  j               2    1[BANK1 ] int 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  2  105[None  ] int 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2686 ;;      Params:         0       0       0       0       0       0       0
  2687 ;;      Locals:         0       0      35       0       0       0       0
  2688 ;;      Temps:          2       0       0       0       0       0       0
  2689 ;;      Totals:         2       0      35       0       0       0       0
  2690 ;;Total ram usage:       37 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 4
  2693 ;; This function calls:
  2694 ;;		_Tweezer
  2695 ;;		_Twister
  2696 ;;		_X_axis
  2697 ;;		_Y_axis
  2698 ;;		_Z_axis
  2699 ;;		___fldiv
  2700 ;;		___flge
  2701 ;;		___xxtofl
  2702 ;;		_fetch_parameters
  2703 ;;		_ms_delay
  2704 ;;		_print_string
  2705 ;; This function is called by:
  2706 ;;		_start_up_menu
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text7
  2711  00019E                     __ptext7:
  2712                           	callstack 0
  2713  00019E                     _pick_and_place:
  2714                           	callstack 0
  2715  00019E  FFFF               	dw	65535	; assembler added errata NOP
  2716                           
  2717                           ;incstack = 0
  2718                           ;pick_and_place@Componnt stored from wreg
  2719  0001A0  0101               	movlb	1	; () banked
  2720  0001A2  6F00               	movwf	pick_and_place@Componnt& (0+255),b
  2721  0001A4                     
  2722                           ;main.c: 624: int pick_and_place(char Componnt);main.c: 625: {;main.c: 628:     int j =0
      +                          ;
  2723  0001A4  0E00               	movlw	0
  2724  0001A6  0101               	movlb	1	; () banked
  2725  0001A8  6F02               	movwf	(pick_and_place@j+1)& (0+255),b
  2726  0001AA  0E00               	movlw	0
  2727  0001AC  6F01               	movwf	pick_and_place@j& (0+255),b
  2728  0001AE                     
  2729                           ; BSR set to: 1
  2730                           ;main.c: 629:     fetch_parameters(Componnt);
  2731  0001AE  5100               	movf	pick_and_place@Componnt& (0+255),w,b
  2732  0001B0  EC35  F012         	call	_fetch_parameters
  2733  0001B4                     
  2734                           ;main.c: 631:         X_dir=((X_diff<X_Pick)? 1:0);
  2735  0001B4  506D               	movf	_X_Pick^0,w,c
  2736  0001B6  5C61               	subwf	_X_diff^0,w,c
  2737  0001B8  5062               	movf	(_X_diff+1)^0,w,c
  2738  0001BA  0A80               	xorlw	128
  2739  0001BC  6E3D               	movwf	??_pick_and_place^0,c
  2740  0001BE  506E               	movf	(_X_Pick+1)^0,w,c
  2741  0001C0  0A80               	xorlw	128
  2742  0001C2  583D               	subwfb	??_pick_and_place^0,w,c
  2743  0001C4  A0D8               	btfss	status,0,c
  2744  0001C6  EFE7  F000         	goto	u5581
  2745  0001CA  EFEB  F000         	goto	u5580
  2746  0001CE                     u5581:
  2747  0001CE  FFFF               	dw	65535	; assembler added errata NOP
  2748  0001D0  0E01               	movlw	1
  2749  0001D2  EFED  F000         	goto	u5590
  2750  0001D6                     u5580:
  2751  0001D6  FFFF               	dw	65535	; assembler added errata NOP
  2752  0001D8  0E00               	movlw	0
  2753  0001DA                     u5590:
  2754  0001DA  FFFF               	dw	65535	; assembler added errata NOP
  2755  0001DC  6E71               	movwf	_X_dir^0,c
  2756  0001DE                     
  2757                           ;main.c: 632:         Y_dir=((Y_diff<Y_Pick)? 1:0);
  2758  0001DE  5069               	movf	_Y_Pick^0,w,c
  2759  0001E0  5C5F               	subwf	_Y_diff^0,w,c
  2760  0001E2  5060               	movf	(_Y_diff+1)^0,w,c
  2761  0001E4  0A80               	xorlw	128
  2762  0001E6  6E3D               	movwf	??_pick_and_place^0,c
  2763  0001E8  506A               	movf	(_Y_Pick+1)^0,w,c
  2764  0001EA  0A80               	xorlw	128
  2765  0001EC  583D               	subwfb	??_pick_and_place^0,w,c
  2766  0001EE  A0D8               	btfss	status,0,c
  2767  0001F0  EFFC  F000         	goto	u5601
  2768  0001F4  EF00  F001         	goto	u5600
  2769  0001F8                     u5601:
  2770  0001F8  FFFF               	dw	65535	; assembler added errata NOP
  2771  0001FA  0E01               	movlw	1
  2772  0001FC  EF02  F001         	goto	u5610
  2773  000200                     u5600:
  2774  000200  FFFF               	dw	65535	; assembler added errata NOP
  2775  000202  0E00               	movlw	0
  2776  000204                     u5610:
  2777  000204  FFFF               	dw	65535	; assembler added errata NOP
  2778  000206  6E70               	movwf	_Y_dir^0,c
  2779  000208                     
  2780                           ;main.c: 633:         Rot_dir=((Angle_diff<Pick_Angle)? 1:0);
  2781  000208  5065               	movf	_Pick_Angle^0,w,c
  2782  00020A  5C5D               	subwf	_Angle_diff^0,w,c
  2783  00020C  505E               	movf	(_Angle_diff+1)^0,w,c
  2784  00020E  0A80               	xorlw	128
  2785  000210  6E3D               	movwf	??_pick_and_place^0,c
  2786  000212  5066               	movf	(_Pick_Angle+1)^0,w,c
  2787  000214  0A80               	xorlw	128
  2788  000216  583D               	subwfb	??_pick_and_place^0,w,c
  2789  000218  A0D8               	btfss	status,0,c
  2790  00021A  EF11  F001         	goto	u5621
  2791  00021E  EF15  F001         	goto	u5620
  2792  000222                     u5621:
  2793  000222  FFFF               	dw	65535	; assembler added errata NOP
  2794  000224  0E01               	movlw	1
  2795  000226  EF17  F001         	goto	u5630
  2796  00022A                     u5620:
  2797  00022A  FFFF               	dw	65535	; assembler added errata NOP
  2798  00022C  0E00               	movlw	0
  2799  00022E                     u5630:
  2800  00022E  FFFF               	dw	65535	; assembler added errata NOP
  2801  000230  6E6F               	movwf	_Rot_dir^0,c
  2802  000232                     
  2803                           ;main.c: 635:         for(int i = 0; (i<(((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_Pi
      +                          ck-X_diff)))) && !stop; i++){X_axis(X_dir);}
  2804  000232  0E00               	movlw	0
  2805  000234  0101               	movlb	1	; () banked
  2806  000236  6F04               	movwf	(pick_and_place@i+1)& (0+255),b
  2807  000238  0E00               	movlw	0
  2808  00023A  6F03               	movwf	pick_and_place@i& (0+255),b
  2809  00023C  EF27  F001         	goto	l4825
  2810  000240                     l4821:
  2811  000240  FFFF               	dw	65535	; assembler added errata NOP
  2812                           
  2813                           ; BSR set to: 1
  2814  000242  5071               	movf	_X_dir^0,w,c
  2815  000244  EC86  F015         	call	_X_axis
  2816  000248  0101               	movlb	1	; () banked
  2817  00024A  4B03               	infsnz	pick_and_place@i& (0+255),f,b
  2818  00024C  2B04               	incf	(pick_and_place@i+1)& (0+255),f,b
  2819  00024E                     l4825:
  2820  00024E  FFFF               	dw	65535	; assembler added errata NOP
  2821                           
  2822                           ; BSR set to: 1
  2823  000250  5061               	movf	_X_diff^0,w,c
  2824  000252  5C6D               	subwf	_X_Pick^0,w,c
  2825  000254  6E3D               	movwf	??_pick_and_place^0,c
  2826  000256  5062               	movf	(_X_diff+1)^0,w,c
  2827  000258  586E               	subwfb	(_X_Pick+1)^0,w,c
  2828  00025A  6E3E               	movwf	(??_pick_and_place+1)^0,c
  2829  00025C  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  2830  00025E  EF3C  F001         	goto	u5640
  2831  000262  503E               	movf	(??_pick_and_place+1)^0,w,c
  2832  000264  E106               	bnz	u5641
  2833  000266  043D               	decf	??_pick_and_place^0,w,c
  2834  000268  B0D8               	btfsc	status,0,c
  2835  00026A  EF39  F001         	goto	u5641
  2836  00026E  EF3C  F001         	goto	u5640
  2837  000272                     u5641:
  2838  000272  FFFF               	dw	65535	; assembler added errata NOP
  2839  000274  EF4D  F001         	goto	l4829
  2840  000278                     u5640:
  2841  000278  FFFF               	dw	65535	; assembler added errata NOP
  2842  00027A                     
  2843                           ; BSR set to: 1
  2844  00027A  5061               	movf	_X_diff^0,w,c
  2845  00027C  5C6D               	subwf	_X_Pick^0,w,c
  2846  00027E  6E3D               	movwf	??_pick_and_place^0,c
  2847  000280  5062               	movf	(_X_diff+1)^0,w,c
  2848  000282  586E               	subwfb	(_X_Pick+1)^0,w,c
  2849  000284  6E3E               	movwf	(??_pick_and_place+1)^0,c
  2850  000286  1E3D               	comf	??_pick_and_place^0,f,c
  2851  000288  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  2852  00028A  4A3D               	infsnz	??_pick_and_place^0,f,c
  2853  00028C  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  2854  00028E  C03D  F105         	movff	??_pick_and_place,_pick_and_place$898
  2855  000292  C03E  F106         	movff	??_pick_and_place+1,_pick_and_place$898+1
  2856  000296  EF54  F001         	goto	l388
  2857  00029A                     l4829:
  2858  00029A  FFFF               	dw	65535	; assembler added errata NOP
  2859                           
  2860                           ; BSR set to: 1
  2861  00029C  5061               	movf	_X_diff^0,w,c
  2862  00029E  5C6D               	subwf	_X_Pick^0,w,c
  2863  0002A0  6F05               	movwf	_pick_and_place$898& (0+255),b
  2864  0002A2  5062               	movf	(_X_diff+1)^0,w,c
  2865  0002A4  586E               	subwfb	(_X_Pick+1)^0,w,c
  2866  0002A6  6F06               	movwf	(_pick_and_place$898+1)& (0+255),b
  2867  0002A8                     l388:
  2868  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  2869                           
  2870                           ; BSR set to: 1
  2871  0002AA  5105               	movf	_pick_and_place$898& (0+255),w,b
  2872  0002AC  5D03               	subwf	pick_and_place@i& (0+255),w,b
  2873  0002AE  5104               	movf	(pick_and_place@i+1)& (0+255),w,b
  2874  0002B0  0A80               	xorlw	128
  2875  0002B2  6E3D               	movwf	??_pick_and_place^0,c
  2876  0002B4  5106               	movf	(_pick_and_place$898+1)& (0+255),w,b
  2877  0002B6  0A80               	xorlw	128
  2878  0002B8  583D               	subwfb	??_pick_and_place^0,w,c
  2879  0002BA  B0D8               	btfsc	status,0,c
  2880  0002BC  EF62  F001         	goto	u5651
  2881  0002C0  EF65  F001         	goto	u5650
  2882  0002C4                     u5651:
  2883  0002C4  FFFF               	dw	65535	; assembler added errata NOP
  2884  0002C6  EF6F  F001         	goto	l4833
  2885  0002CA                     u5650:
  2886  0002CA  FFFF               	dw	65535	; assembler added errata NOP
  2887  0002CC                     
  2888                           ; BSR set to: 1
  2889  0002CC  5072               	movf	_stop^0,w,c
  2890  0002CE  B4D8               	btfsc	status,2,c
  2891  0002D0  EF6C  F001         	goto	u5661
  2892  0002D4  EF6F  F001         	goto	u5660
  2893  0002D8                     u5661:
  2894  0002D8  FFFF               	dw	65535	; assembler added errata NOP
  2895  0002DA  EF20  F001         	goto	l4821
  2896  0002DE                     u5660:
  2897  0002DE                     l4833:
  2898  0002DE  FFFF               	dw	65535	; assembler added errata NOP
  2899                           
  2900                           ; BSR set to: 1
  2901                           ;main.c: 637:         for(int i = 0; (i<(((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_Pi
      +                          ck-Y_diff)))) && !stop; i++){Y_axis(Y_dir);}
  2902  0002E0  0E00               	movlw	0
  2903  0002E2  6F08               	movwf	(pick_and_place@i_899+1)& (0+255),b
  2904  0002E4  0E00               	movlw	0
  2905  0002E6  6F07               	movwf	pick_and_place@i_899& (0+255),b
  2906  0002E8  EF7D  F001         	goto	l4839
  2907  0002EC                     l4835:
  2908  0002EC  FFFF               	dw	65535	; assembler added errata NOP
  2909                           
  2910                           ; BSR set to: 1
  2911  0002EE  5070               	movf	_Y_dir^0,w,c
  2912  0002F0  EC06  F015         	call	_Y_axis
  2913  0002F4  0101               	movlb	1	; () banked
  2914  0002F6  4B07               	infsnz	pick_and_place@i_899& (0+255),f,b
  2915  0002F8  2B08               	incf	(pick_and_place@i_899+1)& (0+255),f,b
  2916  0002FA                     l4839:
  2917  0002FA  FFFF               	dw	65535	; assembler added errata NOP
  2918                           
  2919                           ; BSR set to: 1
  2920  0002FC  505F               	movf	_Y_diff^0,w,c
  2921  0002FE  5C69               	subwf	_Y_Pick^0,w,c
  2922  000300  6E3D               	movwf	??_pick_and_place^0,c
  2923  000302  5060               	movf	(_Y_diff+1)^0,w,c
  2924  000304  586A               	subwfb	(_Y_Pick+1)^0,w,c
  2925  000306  6E3E               	movwf	(??_pick_and_place+1)^0,c
  2926  000308  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  2927  00030A  EF92  F001         	goto	u5670
  2928  00030E  503E               	movf	(??_pick_and_place+1)^0,w,c
  2929  000310  E106               	bnz	u5671
  2930  000312  043D               	decf	??_pick_and_place^0,w,c
  2931  000314  B0D8               	btfsc	status,0,c
  2932  000316  EF8F  F001         	goto	u5671
  2933  00031A  EF92  F001         	goto	u5670
  2934  00031E                     u5671:
  2935  00031E  FFFF               	dw	65535	; assembler added errata NOP
  2936  000320  EFA3  F001         	goto	l4843
  2937  000324                     u5670:
  2938  000324  FFFF               	dw	65535	; assembler added errata NOP
  2939  000326                     
  2940                           ; BSR set to: 1
  2941  000326  505F               	movf	_Y_diff^0,w,c
  2942  000328  5C69               	subwf	_Y_Pick^0,w,c
  2943  00032A  6E3D               	movwf	??_pick_and_place^0,c
  2944  00032C  5060               	movf	(_Y_diff+1)^0,w,c
  2945  00032E  586A               	subwfb	(_Y_Pick+1)^0,w,c
  2946  000330  6E3E               	movwf	(??_pick_and_place+1)^0,c
  2947  000332  1E3D               	comf	??_pick_and_place^0,f,c
  2948  000334  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  2949  000336  4A3D               	infsnz	??_pick_and_place^0,f,c
  2950  000338  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  2951  00033A  C03D  F109         	movff	??_pick_and_place,_pick_and_place$901
  2952  00033E  C03E  F10A         	movff	??_pick_and_place+1,_pick_and_place$901+1
  2953  000342  EFAA  F001         	goto	l397
  2954  000346                     l4843:
  2955  000346  FFFF               	dw	65535	; assembler added errata NOP
  2956                           
  2957                           ; BSR set to: 1
  2958  000348  505F               	movf	_Y_diff^0,w,c
  2959  00034A  5C69               	subwf	_Y_Pick^0,w,c
  2960  00034C  6F09               	movwf	_pick_and_place$901& (0+255),b
  2961  00034E  5060               	movf	(_Y_diff+1)^0,w,c
  2962  000350  586A               	subwfb	(_Y_Pick+1)^0,w,c
  2963  000352  6F0A               	movwf	(_pick_and_place$901+1)& (0+255),b
  2964  000354                     l397:
  2965  000354  FFFF               	dw	65535	; assembler added errata NOP
  2966                           
  2967                           ; BSR set to: 1
  2968  000356  5109               	movf	_pick_and_place$901& (0+255),w,b
  2969  000358  5D07               	subwf	pick_and_place@i_899& (0+255),w,b
  2970  00035A  5108               	movf	(pick_and_place@i_899+1)& (0+255),w,b
  2971  00035C  0A80               	xorlw	128
  2972  00035E  6E3D               	movwf	??_pick_and_place^0,c
  2973  000360  510A               	movf	(_pick_and_place$901+1)& (0+255),w,b
  2974  000362  0A80               	xorlw	128
  2975  000364  583D               	subwfb	??_pick_and_place^0,w,c
  2976  000366  B0D8               	btfsc	status,0,c
  2977  000368  EFB8  F001         	goto	u5681
  2978  00036C  EFBB  F001         	goto	u5680
  2979  000370                     u5681:
  2980  000370  FFFF               	dw	65535	; assembler added errata NOP
  2981  000372  EFC5  F001         	goto	l4847
  2982  000376                     u5680:
  2983  000376  FFFF               	dw	65535	; assembler added errata NOP
  2984  000378                     
  2985                           ; BSR set to: 1
  2986  000378  5072               	movf	_stop^0,w,c
  2987  00037A  B4D8               	btfsc	status,2,c
  2988  00037C  EFC2  F001         	goto	u5691
  2989  000380  EFC5  F001         	goto	u5690
  2990  000384                     u5691:
  2991  000384  FFFF               	dw	65535	; assembler added errata NOP
  2992  000386  EF76  F001         	goto	l4835
  2993  00038A                     u5690:
  2994  00038A                     l4847:
  2995  00038A  FFFF               	dw	65535	; assembler added errata NOP
  2996                           
  2997                           ; BSR set to: 1
  2998                           ;main.c: 639:         for(int i = 0; (i<(((Angle_diff-Pick_Angle) > 0 ? (Angle_diff-Pick
      +                          _Angle) : -(Angle_diff-Pick_Angle))/3.6)) && !stop; i++){Twister(Rot_dir);}
  2999  00038C  0E00               	movlw	0
  3000  00038E  6F0C               	movwf	(pick_and_place@i_902+1)& (0+255),b
  3001  000390  0E00               	movlw	0
  3002  000392  6F0B               	movwf	pick_and_place@i_902& (0+255),b
  3003  000394  EFD3  F001         	goto	l4853
  3004  000398                     l4849:
  3005  000398  FFFF               	dw	65535	; assembler added errata NOP
  3006  00039A  506F               	movf	_Rot_dir^0,w,c
  3007  00039C  EC83  F016         	call	_Twister
  3008  0003A0  0101               	movlb	1	; () banked
  3009  0003A2  4B0B               	infsnz	pick_and_place@i_902& (0+255),f,b
  3010  0003A4  2B0C               	incf	(pick_and_place@i_902+1)& (0+255),f,b
  3011  0003A6                     l4853:
  3012  0003A6  FFFF               	dw	65535	; assembler added errata NOP
  3013                           
  3014                           ; BSR set to: 1
  3015  0003A8  5065               	movf	_Pick_Angle^0,w,c
  3016  0003AA  5C5D               	subwf	_Angle_diff^0,w,c
  3017  0003AC  6E3D               	movwf	??_pick_and_place^0,c
  3018  0003AE  5066               	movf	(_Pick_Angle+1)^0,w,c
  3019  0003B0  585E               	subwfb	(_Angle_diff+1)^0,w,c
  3020  0003B2  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3021  0003B4  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3022  0003B6  EFE8  F001         	goto	u5700
  3023  0003BA  503E               	movf	(??_pick_and_place+1)^0,w,c
  3024  0003BC  E106               	bnz	u5701
  3025  0003BE  043D               	decf	??_pick_and_place^0,w,c
  3026  0003C0  B0D8               	btfsc	status,0,c
  3027  0003C2  EFE5  F001         	goto	u5701
  3028  0003C6  EFE8  F001         	goto	u5700
  3029  0003CA                     u5701:
  3030  0003CA  FFFF               	dw	65535	; assembler added errata NOP
  3031  0003CC  EFF9  F001         	goto	l4857
  3032  0003D0                     u5700:
  3033  0003D0  FFFF               	dw	65535	; assembler added errata NOP
  3034  0003D2                     
  3035                           ; BSR set to: 1
  3036  0003D2  5065               	movf	_Pick_Angle^0,w,c
  3037  0003D4  5C5D               	subwf	_Angle_diff^0,w,c
  3038  0003D6  6E3D               	movwf	??_pick_and_place^0,c
  3039  0003D8  5066               	movf	(_Pick_Angle+1)^0,w,c
  3040  0003DA  585E               	subwfb	(_Angle_diff+1)^0,w,c
  3041  0003DC  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3042  0003DE  1E3D               	comf	??_pick_and_place^0,f,c
  3043  0003E0  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3044  0003E2  4A3D               	infsnz	??_pick_and_place^0,f,c
  3045  0003E4  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3046  0003E6  C03D  F10D         	movff	??_pick_and_place,_pick_and_place$904
  3047  0003EA  C03E  F10E         	movff	??_pick_and_place+1,_pick_and_place$904+1
  3048  0003EE  EF00  F002         	goto	l4859
  3049  0003F2                     l4857:
  3050  0003F2  FFFF               	dw	65535	; assembler added errata NOP
  3051                           
  3052                           ; BSR set to: 1
  3053  0003F4  5065               	movf	_Pick_Angle^0,w,c
  3054  0003F6  5C5D               	subwf	_Angle_diff^0,w,c
  3055  0003F8  6F0D               	movwf	_pick_and_place$904& (0+255),b
  3056  0003FA  5066               	movf	(_Pick_Angle+1)^0,w,c
  3057  0003FC  585E               	subwfb	(_Angle_diff+1)^0,w,c
  3058  0003FE  6F0E               	movwf	(_pick_and_place$904+1)& (0+255),b
  3059  000400                     l4859:
  3060  000400  FFFF               	dw	65535	; assembler added errata NOP
  3061                           
  3062                           ; BSR set to: 1
  3063  000402  C10B  F00A         	movff	pick_and_place@i_902,___xxtofl@val
  3064  000406  C10C  F00B         	movff	pick_and_place@i_902+1,___xxtofl@val+1
  3065  00040A  0E00               	movlw	0
  3066  00040C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3067  00040E  0EFF               	movlw	-1
  3068  000410  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3069  000412  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3070  000414  0E01               	movlw	1
  3071  000416  EC00  F00F         	call	___xxtofl
  3072  00041A  C00A  F031         	movff	?___xxtofl,___flge@ff1
  3073  00041E  C00B  F032         	movff	?___xxtofl+1,___flge@ff1+1
  3074  000422  C00C  F033         	movff	?___xxtofl+2,___flge@ff1+2
  3075  000426  C00D  F034         	movff	?___xxtofl+3,___flge@ff1+3
  3076  00042A  0E66               	movlw	102
  3077  00042C  6E1C               	movwf	___fldiv@a^0,c
  3078  00042E  0E66               	movlw	102
  3079  000430  6E1D               	movwf	(___fldiv@a+1)^0,c
  3080  000432  0E66               	movlw	102
  3081  000434  6E1E               	movwf	(___fldiv@a+2)^0,c
  3082  000436  0E40               	movlw	64
  3083  000438  6E1F               	movwf	(___fldiv@a+3)^0,c
  3084  00043A  C10D  F00A         	movff	_pick_and_place$904,___xxtofl@val
  3085  00043E  C10E  F00B         	movff	_pick_and_place$904+1,___xxtofl@val+1
  3086  000442  0E00               	movlw	0
  3087  000444  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3088  000446  0EFF               	movlw	-1
  3089  000448  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3090  00044A  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3091  00044C  0E01               	movlw	1
  3092  00044E  EC00  F00F         	call	___xxtofl
  3093  000452  C00A  F018         	movff	?___xxtofl,___fldiv@b
  3094  000456  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
  3095  00045A  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
  3096  00045E  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
  3097  000462  ECF3  F009         	call	___fldiv	;wreg free
  3098  000466  C018  F035         	movff	?___fldiv,___flge@ff2
  3099  00046A  C019  F036         	movff	?___fldiv+1,___flge@ff2+1
  3100  00046E  C01A  F037         	movff	?___fldiv+2,___flge@ff2+2
  3101  000472  C01B  F038         	movff	?___fldiv+3,___flge@ff2+3
  3102  000476  EC6D  F013         	call	___flge	;wreg free
  3103  00047A  B0D8               	btfsc	status,0,c
  3104  00047C  EF42  F002         	goto	u5711
  3105  000480  EF45  F002         	goto	u5710
  3106  000484                     u5711:
  3107  000484  FFFF               	dw	65535	; assembler added errata NOP
  3108  000486  EF4F  F002         	goto	l4863
  3109  00048A                     u5710:
  3110  00048A  FFFF               	dw	65535	; assembler added errata NOP
  3111  00048C  5072               	movf	_stop^0,w,c
  3112  00048E  B4D8               	btfsc	status,2,c
  3113  000490  EF4C  F002         	goto	u5721
  3114  000494  EF4F  F002         	goto	u5720
  3115  000498                     u5721:
  3116  000498  FFFF               	dw	65535	; assembler added errata NOP
  3117  00049A  EFCC  F001         	goto	l4849
  3118  00049E                     u5720:
  3119  00049E                     l4863:
  3120  00049E  FFFF               	dw	65535	; assembler added errata NOP
  3121                           
  3122                           ;main.c: 641:         Tweezer(1);
  3123  0004A0  0E01               	movlw	1
  3124  0004A2  EC13  F018         	call	_Tweezer
  3125  0004A6                     
  3126                           ;main.c: 642:         print_string("\nOpening tweezer");
  3127  0004A6  0EEC               	movlw	low STR_18
  3128  0004A8  6E0A               	movwf	print_string@strng^0,c
  3129  0004AA  0E7F               	movlw	high STR_18
  3130  0004AC  6E0B               	movwf	(print_string@strng+1)^0,c
  3131  0004AE  ECF3  F016         	call	_print_string	;wreg free
  3132  0004B2                     l4867:
  3133  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  3134                           
  3135                           ;main.c: 644:             if(component_present){
  3136  0004B4  5073               	movf	_component_present^0,w,c
  3137  0004B6  B4D8               	btfsc	status,2,c
  3138  0004B8  EF60  F002         	goto	u5731
  3139  0004BC  EF63  F002         	goto	u5730
  3140  0004C0                     u5731:
  3141  0004C0  FFFF               	dw	65535	; assembler added errata NOP
  3142  0004C2  EF66  F002         	goto	l4873
  3143  0004C6                     u5730:
  3144  0004C6  FFFF               	dw	65535	; assembler added errata NOP
  3145  0004C8  EF96  F002         	goto	l4885
  3146  0004CC                     l4873:
  3147  0004CC  FFFF               	dw	65535	; assembler added errata NOP
  3148  0004CE  0101               	movlb	1	; () banked
  3149  0004D0  BF02               	btfsc	(pick_and_place@j+1)& (0+255),7,b
  3150  0004D2  EF74  F002         	goto	u5741
  3151  0004D6  5102               	movf	(pick_and_place@j+1)& (0+255),w,b
  3152  0004D8  E10A               	bnz	u5740
  3153  0004DA  0E03               	movlw	3
  3154  0004DC  5D01               	subwf	pick_and_place@j& (0+255),w,b
  3155  0004DE  A0D8               	btfss	status,0,c
  3156  0004E0  EF74  F002         	goto	u5741
  3157  0004E4  EF77  F002         	goto	u5740
  3158  0004E8                     u5741:
  3159  0004E8  FFFF               	dw	65535	; assembler added errata NOP
  3160  0004EA  EF8A  F002         	goto	l4881
  3161  0004EE                     u5740:
  3162  0004EE  FFFF               	dw	65535	; assembler added errata NOP
  3163  0004F0                     
  3164                           ; BSR set to: 1
  3165  0004F0  5073               	movf	_component_present^0,w,c
  3166  0004F2  A4D8               	btfss	status,2,c
  3167  0004F4  EF7E  F002         	goto	u5751
  3168  0004F8  EF81  F002         	goto	u5750
  3169  0004FC                     u5751:
  3170  0004FC  FFFF               	dw	65535	; assembler added errata NOP
  3171  0004FE  EF8A  F002         	goto	l4881
  3172  000502                     u5750:
  3173  000502  FFFF               	dw	65535	; assembler added errata NOP
  3174  000504                     
  3175                           ; BSR set to: 1
  3176                           ;main.c: 648:                 print_string("\nComponent is missing!");
  3177  000504  0E9A               	movlw	low STR_19
  3178  000506  6E0A               	movwf	print_string@strng^0,c
  3179  000508  0E7F               	movlw	high STR_19
  3180  00050A  6E0B               	movwf	(print_string@strng+1)^0,c
  3181  00050C  ECF3  F016         	call	_print_string	;wreg free
  3182                           
  3183                           ;main.c: 649:                 break;
  3184  000510  EF96  F002         	goto	l4885
  3185  000514                     l4881:
  3186  000514  FFFF               	dw	65535	; assembler added errata NOP
  3187                           
  3188                           ; BSR set to: 1
  3189                           ;main.c: 652:                 ms_delay(5000);
  3190  000516  0E13               	movlw	19
  3191  000518  6E0B               	movwf	(ms_delay@val+1)^0,c
  3192  00051A  0E88               	movlw	136
  3193  00051C  6E0A               	movwf	ms_delay@val^0,c
  3194  00051E  EC79  F018         	call	_ms_delay	;wreg free
  3195  000522                     
  3196                           ;main.c: 653:                 j++;}
  3197  000522  0101               	movlb	1	; () banked
  3198  000524  4B01               	infsnz	pick_and_place@j& (0+255),f,b
  3199  000526  2B02               	incf	(pick_and_place@j+1)& (0+255),f,b
  3200  000528  EF59  F002         	goto	l4867
  3201  00052C                     l4885:
  3202  00052C  FFFF               	dw	65535	; assembler added errata NOP
  3203                           
  3204                           ;main.c: 655:         ms_delay(10);
  3205  00052E  0E00               	movlw	0
  3206  000530  6E0B               	movwf	(ms_delay@val+1)^0,c
  3207  000532  0E0A               	movlw	10
  3208  000534  6E0A               	movwf	ms_delay@val^0,c
  3209  000536  EC79  F018         	call	_ms_delay	;wreg free
  3210  00053A                     
  3211                           ;main.c: 656:         for(int i=0; i<3 && !stop; i++){Z_axis(1);}
  3212  00053A  0E00               	movlw	0
  3213  00053C  0101               	movlb	1	; () banked
  3214  00053E  6F10               	movwf	(pick_and_place@i_908+1)& (0+255),b
  3215  000540  0E00               	movlw	0
  3216  000542  6F0F               	movwf	pick_and_place@i_908& (0+255),b
  3217  000544  EFAB  F002         	goto	l4893
  3218  000548                     l4889:
  3219  000548  FFFF               	dw	65535	; assembler added errata NOP
  3220                           
  3221                           ; BSR set to: 1
  3222  00054A  0E01               	movlw	1
  3223  00054C  EC86  F014         	call	_Z_axis
  3224  000550  0101               	movlb	1	; () banked
  3225  000552  4B0F               	infsnz	pick_and_place@i_908& (0+255),f,b
  3226  000554  2B10               	incf	(pick_and_place@i_908+1)& (0+255),f,b
  3227  000556                     l4893:
  3228  000556  FFFF               	dw	65535	; assembler added errata NOP
  3229                           
  3230                           ; BSR set to: 1
  3231  000558  BF10               	btfsc	(pick_and_place@i_908+1)& (0+255),7,b
  3232  00055A  EFBB  F002         	goto	u5760
  3233  00055E  5110               	movf	(pick_and_place@i_908+1)& (0+255),w,b
  3234  000560  E107               	bnz	u5761
  3235  000562  0E03               	movlw	3
  3236  000564  5D0F               	subwf	pick_and_place@i_908& (0+255),w,b
  3237  000566  B0D8               	btfsc	status,0,c
  3238  000568  EFB8  F002         	goto	u5761
  3239  00056C  EFBB  F002         	goto	u5760
  3240  000570                     u5761:
  3241  000570  FFFF               	dw	65535	; assembler added errata NOP
  3242  000572  EFC5  F002         	goto	l4897
  3243  000576                     u5760:
  3244  000576  FFFF               	dw	65535	; assembler added errata NOP
  3245  000578                     
  3246                           ; BSR set to: 1
  3247  000578  5072               	movf	_stop^0,w,c
  3248  00057A  B4D8               	btfsc	status,2,c
  3249  00057C  EFC2  F002         	goto	u5771
  3250  000580  EFC5  F002         	goto	u5770
  3251  000584                     u5771:
  3252  000584  FFFF               	dw	65535	; assembler added errata NOP
  3253  000586  EFA4  F002         	goto	l4889
  3254  00058A                     u5770:
  3255  00058A                     l4897:
  3256  00058A  FFFF               	dw	65535	; assembler added errata NOP
  3257                           
  3258                           ; BSR set to: 1
  3259                           ;main.c: 657:         Tweezer(0);
  3260  00058C  0E00               	movlw	0
  3261  00058E  EC13  F018         	call	_Tweezer
  3262  000592                     
  3263                           ;main.c: 659:         for(int i=0; i<3 && !stop; i++){Z_axis(0);}
  3264  000592  0E00               	movlw	0
  3265  000594  0101               	movlb	1	; () banked
  3266  000596  6F12               	movwf	(pick_and_place@i_910+1)& (0+255),b
  3267  000598  0E00               	movlw	0
  3268  00059A  6F11               	movwf	pick_and_place@i_910& (0+255),b
  3269  00059C  EFD7  F002         	goto	l4905
  3270  0005A0                     l4901:
  3271  0005A0  FFFF               	dw	65535	; assembler added errata NOP
  3272                           
  3273                           ; BSR set to: 1
  3274  0005A2  0E00               	movlw	0
  3275  0005A4  EC86  F014         	call	_Z_axis
  3276  0005A8  0101               	movlb	1	; () banked
  3277  0005AA  4B11               	infsnz	pick_and_place@i_910& (0+255),f,b
  3278  0005AC  2B12               	incf	(pick_and_place@i_910+1)& (0+255),f,b
  3279  0005AE                     l4905:
  3280  0005AE  FFFF               	dw	65535	; assembler added errata NOP
  3281                           
  3282                           ; BSR set to: 1
  3283  0005B0  BF12               	btfsc	(pick_and_place@i_910+1)& (0+255),7,b
  3284  0005B2  EFE7  F002         	goto	u5780
  3285  0005B6  5112               	movf	(pick_and_place@i_910+1)& (0+255),w,b
  3286  0005B8  E107               	bnz	u5781
  3287  0005BA  0E03               	movlw	3
  3288  0005BC  5D11               	subwf	pick_and_place@i_910& (0+255),w,b
  3289  0005BE  B0D8               	btfsc	status,0,c
  3290  0005C0  EFE4  F002         	goto	u5781
  3291  0005C4  EFE7  F002         	goto	u5780
  3292  0005C8                     u5781:
  3293  0005C8  FFFF               	dw	65535	; assembler added errata NOP
  3294  0005CA  EFF1  F002         	goto	l4909
  3295  0005CE                     u5780:
  3296  0005CE  FFFF               	dw	65535	; assembler added errata NOP
  3297  0005D0                     
  3298                           ; BSR set to: 1
  3299  0005D0  5072               	movf	_stop^0,w,c
  3300  0005D2  B4D8               	btfsc	status,2,c
  3301  0005D4  EFEE  F002         	goto	u5791
  3302  0005D8  EFF1  F002         	goto	u5790
  3303  0005DC                     u5791:
  3304  0005DC  FFFF               	dw	65535	; assembler added errata NOP
  3305  0005DE  EFD0  F002         	goto	l4901
  3306  0005E2                     u5790:
  3307  0005E2                     l4909:
  3308  0005E2  FFFF               	dw	65535	; assembler added errata NOP
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;main.c: 663:         X_dir=((X_Pick<X_Place)? 1:0);
  3312  0005E4  506B               	movf	_X_Place^0,w,c
  3313  0005E6  5C6D               	subwf	_X_Pick^0,w,c
  3314  0005E8  506E               	movf	(_X_Pick+1)^0,w,c
  3315  0005EA  0A80               	xorlw	128
  3316  0005EC  6E3D               	movwf	??_pick_and_place^0,c
  3317  0005EE  506C               	movf	(_X_Place+1)^0,w,c
  3318  0005F0  0A80               	xorlw	128
  3319  0005F2  583D               	subwfb	??_pick_and_place^0,w,c
  3320  0005F4  A0D8               	btfss	status,0,c
  3321  0005F6  EFFF  F002         	goto	u5801
  3322  0005FA  EF03  F003         	goto	u5800
  3323  0005FE                     u5801:
  3324  0005FE  FFFF               	dw	65535	; assembler added errata NOP
  3325  000600  0E01               	movlw	1
  3326  000602  EF05  F003         	goto	u5810
  3327  000606                     u5800:
  3328  000606  FFFF               	dw	65535	; assembler added errata NOP
  3329  000608  0E00               	movlw	0
  3330  00060A                     u5810:
  3331  00060A  FFFF               	dw	65535	; assembler added errata NOP
  3332  00060C  6E71               	movwf	_X_dir^0,c
  3333                           
  3334                           ;main.c: 664:         Y_dir=((Y_Pick<Y_Place)? 1:0);
  3335  00060E  5067               	movf	_Y_Place^0,w,c
  3336  000610  5C69               	subwf	_Y_Pick^0,w,c
  3337  000612  506A               	movf	(_Y_Pick+1)^0,w,c
  3338  000614  0A80               	xorlw	128
  3339  000616  6E3D               	movwf	??_pick_and_place^0,c
  3340  000618  5068               	movf	(_Y_Place+1)^0,w,c
  3341  00061A  0A80               	xorlw	128
  3342  00061C  583D               	subwfb	??_pick_and_place^0,w,c
  3343  00061E  A0D8               	btfss	status,0,c
  3344  000620  EF14  F003         	goto	u5821
  3345  000624  EF18  F003         	goto	u5820
  3346  000628                     u5821:
  3347  000628  FFFF               	dw	65535	; assembler added errata NOP
  3348  00062A  0E01               	movlw	1
  3349  00062C  EF1A  F003         	goto	u5830
  3350  000630                     u5820:
  3351  000630  FFFF               	dw	65535	; assembler added errata NOP
  3352  000632  0E00               	movlw	0
  3353  000634                     u5830:
  3354  000634  FFFF               	dw	65535	; assembler added errata NOP
  3355  000636  6E70               	movwf	_Y_dir^0,c
  3356                           
  3357                           ;main.c: 665:         Rot_dir=((Pick_Angle<Place_Angle)? 1:0);
  3358  000638  5063               	movf	_Place_Angle^0,w,c
  3359  00063A  5C65               	subwf	_Pick_Angle^0,w,c
  3360  00063C  5066               	movf	(_Pick_Angle+1)^0,w,c
  3361  00063E  0A80               	xorlw	128
  3362  000640  6E3D               	movwf	??_pick_and_place^0,c
  3363  000642  5064               	movf	(_Place_Angle+1)^0,w,c
  3364  000644  0A80               	xorlw	128
  3365  000646  583D               	subwfb	??_pick_and_place^0,w,c
  3366  000648  A0D8               	btfss	status,0,c
  3367  00064A  EF29  F003         	goto	u5841
  3368  00064E  EF2D  F003         	goto	u5840
  3369  000652                     u5841:
  3370  000652  FFFF               	dw	65535	; assembler added errata NOP
  3371  000654  0E01               	movlw	1
  3372  000656  EF2F  F003         	goto	u5850
  3373  00065A                     u5840:
  3374  00065A  FFFF               	dw	65535	; assembler added errata NOP
  3375  00065C  0E00               	movlw	0
  3376  00065E                     u5850:
  3377  00065E  FFFF               	dw	65535	; assembler added errata NOP
  3378  000660  6E6F               	movwf	_Rot_dir^0,c
  3379  000662                     
  3380                           ; BSR set to: 1
  3381                           ;main.c: 667:         for(int i = 0; (i<(((X_Place-X_Pick) > 0 ? (X_Place-X_Pick) : -(X_
      +                          Place-X_Pick)))) && !stop; i++){X_axis(X_dir);}
  3382  000662  0E00               	movlw	0
  3383  000664  6F14               	movwf	(pick_and_place@i_911+1)& (0+255),b
  3384  000666  0E00               	movlw	0
  3385  000668  6F13               	movwf	pick_and_place@i_911& (0+255),b
  3386  00066A  EF3E  F003         	goto	l4917
  3387  00066E                     l4913:
  3388  00066E  FFFF               	dw	65535	; assembler added errata NOP
  3389                           
  3390                           ; BSR set to: 1
  3391  000670  5071               	movf	_X_dir^0,w,c
  3392  000672  EC86  F015         	call	_X_axis
  3393  000676  0101               	movlb	1	; () banked
  3394  000678  4B13               	infsnz	pick_and_place@i_911& (0+255),f,b
  3395  00067A  2B14               	incf	(pick_and_place@i_911+1)& (0+255),f,b
  3396  00067C                     l4917:
  3397  00067C  FFFF               	dw	65535	; assembler added errata NOP
  3398                           
  3399                           ; BSR set to: 1
  3400  00067E  506D               	movf	_X_Pick^0,w,c
  3401  000680  5C6B               	subwf	_X_Place^0,w,c
  3402  000682  6E3D               	movwf	??_pick_and_place^0,c
  3403  000684  506E               	movf	(_X_Pick+1)^0,w,c
  3404  000686  586C               	subwfb	(_X_Place+1)^0,w,c
  3405  000688  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3406  00068A  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3407  00068C  EF53  F003         	goto	u5860
  3408  000690  503E               	movf	(??_pick_and_place+1)^0,w,c
  3409  000692  E106               	bnz	u5861
  3410  000694  043D               	decf	??_pick_and_place^0,w,c
  3411  000696  B0D8               	btfsc	status,0,c
  3412  000698  EF50  F003         	goto	u5861
  3413  00069C  EF53  F003         	goto	u5860
  3414  0006A0                     u5861:
  3415  0006A0  FFFF               	dw	65535	; assembler added errata NOP
  3416  0006A2  EF64  F003         	goto	l4921
  3417  0006A6                     u5860:
  3418  0006A6  FFFF               	dw	65535	; assembler added errata NOP
  3419  0006A8                     
  3420                           ; BSR set to: 1
  3421  0006A8  506D               	movf	_X_Pick^0,w,c
  3422  0006AA  5C6B               	subwf	_X_Place^0,w,c
  3423  0006AC  6E3D               	movwf	??_pick_and_place^0,c
  3424  0006AE  506E               	movf	(_X_Pick+1)^0,w,c
  3425  0006B0  586C               	subwfb	(_X_Place+1)^0,w,c
  3426  0006B2  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3427  0006B4  1E3D               	comf	??_pick_and_place^0,f,c
  3428  0006B6  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3429  0006B8  4A3D               	infsnz	??_pick_and_place^0,f,c
  3430  0006BA  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3431  0006BC  C03D  F115         	movff	??_pick_and_place,_pick_and_place$912
  3432  0006C0  C03E  F116         	movff	??_pick_and_place+1,_pick_and_place$912+1
  3433  0006C4  EF6B  F003         	goto	l432
  3434  0006C8                     l4921:
  3435  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  3436                           
  3437                           ; BSR set to: 1
  3438  0006CA  506D               	movf	_X_Pick^0,w,c
  3439  0006CC  5C6B               	subwf	_X_Place^0,w,c
  3440  0006CE  6F15               	movwf	_pick_and_place$912& (0+255),b
  3441  0006D0  506E               	movf	(_X_Pick+1)^0,w,c
  3442  0006D2  586C               	subwfb	(_X_Place+1)^0,w,c
  3443  0006D4  6F16               	movwf	(_pick_and_place$912+1)& (0+255),b
  3444  0006D6                     l432:
  3445  0006D6  FFFF               	dw	65535	; assembler added errata NOP
  3446                           
  3447                           ; BSR set to: 1
  3448  0006D8  5115               	movf	_pick_and_place$912& (0+255),w,b
  3449  0006DA  5D13               	subwf	pick_and_place@i_911& (0+255),w,b
  3450  0006DC  5114               	movf	(pick_and_place@i_911+1)& (0+255),w,b
  3451  0006DE  0A80               	xorlw	128
  3452  0006E0  6E3D               	movwf	??_pick_and_place^0,c
  3453  0006E2  5116               	movf	(_pick_and_place$912+1)& (0+255),w,b
  3454  0006E4  0A80               	xorlw	128
  3455  0006E6  583D               	subwfb	??_pick_and_place^0,w,c
  3456  0006E8  B0D8               	btfsc	status,0,c
  3457  0006EA  EF79  F003         	goto	u5871
  3458  0006EE  EF7C  F003         	goto	u5870
  3459  0006F2                     u5871:
  3460  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  3461  0006F4  EF86  F003         	goto	l4925
  3462  0006F8                     u5870:
  3463  0006F8  FFFF               	dw	65535	; assembler added errata NOP
  3464  0006FA                     
  3465                           ; BSR set to: 1
  3466  0006FA  5072               	movf	_stop^0,w,c
  3467  0006FC  B4D8               	btfsc	status,2,c
  3468  0006FE  EF83  F003         	goto	u5881
  3469  000702  EF86  F003         	goto	u5880
  3470  000706                     u5881:
  3471  000706  FFFF               	dw	65535	; assembler added errata NOP
  3472  000708  EF37  F003         	goto	l4913
  3473  00070C                     u5880:
  3474  00070C                     l4925:
  3475  00070C  FFFF               	dw	65535	; assembler added errata NOP
  3476                           
  3477                           ; BSR set to: 1
  3478                           ;main.c: 668:         for(int i = 0; (i<(((Y_Place-Y_Pick) > 0 ? (Y_Place-Y_Pick) : -(Y_
      +                          Place-Y_Pick)))) && !stop; i++){Y_axis(Y_dir);}
  3479  00070E  0E00               	movlw	0
  3480  000710  6F18               	movwf	(pick_and_place@i_913+1)& (0+255),b
  3481  000712  0E00               	movlw	0
  3482  000714  6F17               	movwf	pick_and_place@i_913& (0+255),b
  3483  000716  EF94  F003         	goto	l4931
  3484  00071A                     l4927:
  3485  00071A  FFFF               	dw	65535	; assembler added errata NOP
  3486                           
  3487                           ; BSR set to: 1
  3488  00071C  5070               	movf	_Y_dir^0,w,c
  3489  00071E  EC06  F015         	call	_Y_axis
  3490  000722  0101               	movlb	1	; () banked
  3491  000724  4B17               	infsnz	pick_and_place@i_913& (0+255),f,b
  3492  000726  2B18               	incf	(pick_and_place@i_913+1)& (0+255),f,b
  3493  000728                     l4931:
  3494  000728  FFFF               	dw	65535	; assembler added errata NOP
  3495                           
  3496                           ; BSR set to: 1
  3497  00072A  5069               	movf	_Y_Pick^0,w,c
  3498  00072C  5C67               	subwf	_Y_Place^0,w,c
  3499  00072E  6E3D               	movwf	??_pick_and_place^0,c
  3500  000730  506A               	movf	(_Y_Pick+1)^0,w,c
  3501  000732  5868               	subwfb	(_Y_Place+1)^0,w,c
  3502  000734  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3503  000736  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3504  000738  EFA9  F003         	goto	u5890
  3505  00073C  503E               	movf	(??_pick_and_place+1)^0,w,c
  3506  00073E  E106               	bnz	u5891
  3507  000740  043D               	decf	??_pick_and_place^0,w,c
  3508  000742  B0D8               	btfsc	status,0,c
  3509  000744  EFA6  F003         	goto	u5891
  3510  000748  EFA9  F003         	goto	u5890
  3511  00074C                     u5891:
  3512  00074C  FFFF               	dw	65535	; assembler added errata NOP
  3513  00074E  EFBA  F003         	goto	l4935
  3514  000752                     u5890:
  3515  000752  FFFF               	dw	65535	; assembler added errata NOP
  3516  000754                     
  3517                           ; BSR set to: 1
  3518  000754  5069               	movf	_Y_Pick^0,w,c
  3519  000756  5C67               	subwf	_Y_Place^0,w,c
  3520  000758  6E3D               	movwf	??_pick_and_place^0,c
  3521  00075A  506A               	movf	(_Y_Pick+1)^0,w,c
  3522  00075C  5868               	subwfb	(_Y_Place+1)^0,w,c
  3523  00075E  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3524  000760  1E3D               	comf	??_pick_and_place^0,f,c
  3525  000762  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3526  000764  4A3D               	infsnz	??_pick_and_place^0,f,c
  3527  000766  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3528  000768  C03D  F119         	movff	??_pick_and_place,_pick_and_place$914
  3529  00076C  C03E  F11A         	movff	??_pick_and_place+1,_pick_and_place$914+1
  3530  000770  EFC1  F003         	goto	l441
  3531  000774                     l4935:
  3532  000774  FFFF               	dw	65535	; assembler added errata NOP
  3533                           
  3534                           ; BSR set to: 1
  3535  000776  5069               	movf	_Y_Pick^0,w,c
  3536  000778  5C67               	subwf	_Y_Place^0,w,c
  3537  00077A  6F19               	movwf	_pick_and_place$914& (0+255),b
  3538  00077C  506A               	movf	(_Y_Pick+1)^0,w,c
  3539  00077E  5868               	subwfb	(_Y_Place+1)^0,w,c
  3540  000780  6F1A               	movwf	(_pick_and_place$914+1)& (0+255),b
  3541  000782                     l441:
  3542  000782  FFFF               	dw	65535	; assembler added errata NOP
  3543                           
  3544                           ; BSR set to: 1
  3545  000784  5119               	movf	_pick_and_place$914& (0+255),w,b
  3546  000786  5D17               	subwf	pick_and_place@i_913& (0+255),w,b
  3547  000788  5118               	movf	(pick_and_place@i_913+1)& (0+255),w,b
  3548  00078A  0A80               	xorlw	128
  3549  00078C  6E3D               	movwf	??_pick_and_place^0,c
  3550  00078E  511A               	movf	(_pick_and_place$914+1)& (0+255),w,b
  3551  000790  0A80               	xorlw	128
  3552  000792  583D               	subwfb	??_pick_and_place^0,w,c
  3553  000794  B0D8               	btfsc	status,0,c
  3554  000796  EFCF  F003         	goto	u5901
  3555  00079A  EFD2  F003         	goto	u5900
  3556  00079E                     u5901:
  3557  00079E  FFFF               	dw	65535	; assembler added errata NOP
  3558  0007A0  EFDC  F003         	goto	l4939
  3559  0007A4                     u5900:
  3560  0007A4  FFFF               	dw	65535	; assembler added errata NOP
  3561  0007A6                     
  3562                           ; BSR set to: 1
  3563  0007A6  5072               	movf	_stop^0,w,c
  3564  0007A8  B4D8               	btfsc	status,2,c
  3565  0007AA  EFD9  F003         	goto	u5911
  3566  0007AE  EFDC  F003         	goto	u5910
  3567  0007B2                     u5911:
  3568  0007B2  FFFF               	dw	65535	; assembler added errata NOP
  3569  0007B4  EF8D  F003         	goto	l4927
  3570  0007B8                     u5910:
  3571  0007B8                     l4939:
  3572  0007B8  FFFF               	dw	65535	; assembler added errata NOP
  3573                           
  3574                           ; BSR set to: 1
  3575                           ;main.c: 669:         for(int i = 0; (i<(((Pick_Angle-Place_Angle) > 0 ? (Pick_Angle-Pla
      +                          ce_Angle) : -(Pick_Angle-Place_Angle))/3.6)) && !stop; i++){Twister(Rot_dir);}
  3576  0007BA  0E00               	movlw	0
  3577  0007BC  6F1C               	movwf	(pick_and_place@i_915+1)& (0+255),b
  3578  0007BE  0E00               	movlw	0
  3579  0007C0  6F1B               	movwf	pick_and_place@i_915& (0+255),b
  3580  0007C2  EFEA  F003         	goto	l4945
  3581  0007C6                     l4941:
  3582  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  3583  0007C8  506F               	movf	_Rot_dir^0,w,c
  3584  0007CA  EC83  F016         	call	_Twister
  3585  0007CE  0101               	movlb	1	; () banked
  3586  0007D0  4B1B               	infsnz	pick_and_place@i_915& (0+255),f,b
  3587  0007D2  2B1C               	incf	(pick_and_place@i_915+1)& (0+255),f,b
  3588  0007D4                     l4945:
  3589  0007D4  FFFF               	dw	65535	; assembler added errata NOP
  3590                           
  3591                           ; BSR set to: 1
  3592  0007D6  5063               	movf	_Place_Angle^0,w,c
  3593  0007D8  5C65               	subwf	_Pick_Angle^0,w,c
  3594  0007DA  6E3D               	movwf	??_pick_and_place^0,c
  3595  0007DC  5064               	movf	(_Place_Angle+1)^0,w,c
  3596  0007DE  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3597  0007E0  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3598  0007E2  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3599  0007E4  EFFF  F003         	goto	u5920
  3600  0007E8  503E               	movf	(??_pick_and_place+1)^0,w,c
  3601  0007EA  E106               	bnz	u5921
  3602  0007EC  043D               	decf	??_pick_and_place^0,w,c
  3603  0007EE  B0D8               	btfsc	status,0,c
  3604  0007F0  EFFC  F003         	goto	u5921
  3605  0007F4  EFFF  F003         	goto	u5920
  3606  0007F8                     u5921:
  3607  0007F8  FFFF               	dw	65535	; assembler added errata NOP
  3608  0007FA  EF10  F004         	goto	l4949
  3609  0007FE                     u5920:
  3610  0007FE  FFFF               	dw	65535	; assembler added errata NOP
  3611  000800                     
  3612                           ; BSR set to: 1
  3613  000800  5063               	movf	_Place_Angle^0,w,c
  3614  000802  5C65               	subwf	_Pick_Angle^0,w,c
  3615  000804  6E3D               	movwf	??_pick_and_place^0,c
  3616  000806  5064               	movf	(_Place_Angle+1)^0,w,c
  3617  000808  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3618  00080A  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3619  00080C  1E3D               	comf	??_pick_and_place^0,f,c
  3620  00080E  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3621  000810  4A3D               	infsnz	??_pick_and_place^0,f,c
  3622  000812  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3623  000814  C03D  F11D         	movff	??_pick_and_place,_pick_and_place$916
  3624  000818  C03E  F11E         	movff	??_pick_and_place+1,_pick_and_place$916+1
  3625  00081C  EF17  F004         	goto	l4951
  3626  000820                     l4949:
  3627  000820  FFFF               	dw	65535	; assembler added errata NOP
  3628                           
  3629                           ; BSR set to: 1
  3630  000822  5063               	movf	_Place_Angle^0,w,c
  3631  000824  5C65               	subwf	_Pick_Angle^0,w,c
  3632  000826  6F1D               	movwf	_pick_and_place$916& (0+255),b
  3633  000828  5064               	movf	(_Place_Angle+1)^0,w,c
  3634  00082A  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3635  00082C  6F1E               	movwf	(_pick_and_place$916+1)& (0+255),b
  3636  00082E                     l4951:
  3637  00082E  FFFF               	dw	65535	; assembler added errata NOP
  3638                           
  3639                           ; BSR set to: 1
  3640  000830  C11B  F00A         	movff	pick_and_place@i_915,___xxtofl@val
  3641  000834  C11C  F00B         	movff	pick_and_place@i_915+1,___xxtofl@val+1
  3642  000838  0E00               	movlw	0
  3643  00083A  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3644  00083C  0EFF               	movlw	-1
  3645  00083E  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3646  000840  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3647  000842  0E01               	movlw	1
  3648  000844  EC00  F00F         	call	___xxtofl
  3649  000848  C00A  F031         	movff	?___xxtofl,___flge@ff1
  3650  00084C  C00B  F032         	movff	?___xxtofl+1,___flge@ff1+1
  3651  000850  C00C  F033         	movff	?___xxtofl+2,___flge@ff1+2
  3652  000854  C00D  F034         	movff	?___xxtofl+3,___flge@ff1+3
  3653  000858  0E66               	movlw	102
  3654  00085A  6E1C               	movwf	___fldiv@a^0,c
  3655  00085C  0E66               	movlw	102
  3656  00085E  6E1D               	movwf	(___fldiv@a+1)^0,c
  3657  000860  0E66               	movlw	102
  3658  000862  6E1E               	movwf	(___fldiv@a+2)^0,c
  3659  000864  0E40               	movlw	64
  3660  000866  6E1F               	movwf	(___fldiv@a+3)^0,c
  3661  000868  C11D  F00A         	movff	_pick_and_place$916,___xxtofl@val
  3662  00086C  C11E  F00B         	movff	_pick_and_place$916+1,___xxtofl@val+1
  3663  000870  0E00               	movlw	0
  3664  000872  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3665  000874  0EFF               	movlw	-1
  3666  000876  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3667  000878  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3668  00087A  0E01               	movlw	1
  3669  00087C  EC00  F00F         	call	___xxtofl
  3670  000880  C00A  F018         	movff	?___xxtofl,___fldiv@b
  3671  000884  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
  3672  000888  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
  3673  00088C  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
  3674  000890  ECF3  F009         	call	___fldiv	;wreg free
  3675  000894  C018  F035         	movff	?___fldiv,___flge@ff2
  3676  000898  C019  F036         	movff	?___fldiv+1,___flge@ff2+1
  3677  00089C  C01A  F037         	movff	?___fldiv+2,___flge@ff2+2
  3678  0008A0  C01B  F038         	movff	?___fldiv+3,___flge@ff2+3
  3679  0008A4  EC6D  F013         	call	___flge	;wreg free
  3680  0008A8  B0D8               	btfsc	status,0,c
  3681  0008AA  EF59  F004         	goto	u5931
  3682  0008AE  EF5C  F004         	goto	u5930
  3683  0008B2                     u5931:
  3684  0008B2  FFFF               	dw	65535	; assembler added errata NOP
  3685  0008B4  EF66  F004         	goto	l4955
  3686  0008B8                     u5930:
  3687  0008B8  FFFF               	dw	65535	; assembler added errata NOP
  3688  0008BA  5072               	movf	_stop^0,w,c
  3689  0008BC  B4D8               	btfsc	status,2,c
  3690  0008BE  EF63  F004         	goto	u5941
  3691  0008C2  EF66  F004         	goto	u5940
  3692  0008C6                     u5941:
  3693  0008C6  FFFF               	dw	65535	; assembler added errata NOP
  3694  0008C8  EFE3  F003         	goto	l4941
  3695  0008CC                     u5940:
  3696  0008CC                     l4955:
  3697  0008CC  FFFF               	dw	65535	; assembler added errata NOP
  3698                           
  3699                           ;main.c: 670:         for(int i=0; i<3 && !stop; i++){Z_axis(1);}
  3700  0008CE  0E00               	movlw	0
  3701  0008D0  0101               	movlb	1	; () banked
  3702  0008D2  6F20               	movwf	(pick_and_place@i_917+1)& (0+255),b
  3703  0008D4  0E00               	movlw	0
  3704  0008D6  6F1F               	movwf	pick_and_place@i_917& (0+255),b
  3705  0008D8  EF75  F004         	goto	l4961
  3706  0008DC                     l4957:
  3707  0008DC  FFFF               	dw	65535	; assembler added errata NOP
  3708                           
  3709                           ; BSR set to: 1
  3710  0008DE  0E01               	movlw	1
  3711  0008E0  EC86  F014         	call	_Z_axis
  3712  0008E4  0101               	movlb	1	; () banked
  3713  0008E6  4B1F               	infsnz	pick_and_place@i_917& (0+255),f,b
  3714  0008E8  2B20               	incf	(pick_and_place@i_917+1)& (0+255),f,b
  3715  0008EA                     l4961:
  3716  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  3717                           
  3718                           ; BSR set to: 1
  3719  0008EC  BF20               	btfsc	(pick_and_place@i_917+1)& (0+255),7,b
  3720  0008EE  EF85  F004         	goto	u5950
  3721  0008F2  5120               	movf	(pick_and_place@i_917+1)& (0+255),w,b
  3722  0008F4  E107               	bnz	u5951
  3723  0008F6  0E03               	movlw	3
  3724  0008F8  5D1F               	subwf	pick_and_place@i_917& (0+255),w,b
  3725  0008FA  B0D8               	btfsc	status,0,c
  3726  0008FC  EF82  F004         	goto	u5951
  3727  000900  EF85  F004         	goto	u5950
  3728  000904                     u5951:
  3729  000904  FFFF               	dw	65535	; assembler added errata NOP
  3730  000906  EF8F  F004         	goto	l4965
  3731  00090A                     u5950:
  3732  00090A  FFFF               	dw	65535	; assembler added errata NOP
  3733  00090C                     
  3734                           ; BSR set to: 1
  3735  00090C  5072               	movf	_stop^0,w,c
  3736  00090E  B4D8               	btfsc	status,2,c
  3737  000910  EF8C  F004         	goto	u5961
  3738  000914  EF8F  F004         	goto	u5960
  3739  000918                     u5961:
  3740  000918  FFFF               	dw	65535	; assembler added errata NOP
  3741  00091A  EF6E  F004         	goto	l4957
  3742  00091E                     u5960:
  3743  00091E                     l4965:
  3744  00091E  FFFF               	dw	65535	; assembler added errata NOP
  3745                           
  3746                           ; BSR set to: 1
  3747                           ;main.c: 671:         Tweezer(1);
  3748  000920  0E01               	movlw	1
  3749  000922  EC13  F018         	call	_Tweezer
  3750  000926                     
  3751                           ;main.c: 673:         for(int i=0; i<3 && !stop; i++){Z_axis(0);}
  3752  000926  0E00               	movlw	0
  3753  000928  0101               	movlb	1	; () banked
  3754  00092A  6F22               	movwf	(pick_and_place@i_918+1)& (0+255),b
  3755  00092C  0E00               	movlw	0
  3756  00092E  6F21               	movwf	pick_and_place@i_918& (0+255),b
  3757  000930  EFA1  F004         	goto	l4973
  3758  000934                     l4969:
  3759  000934  FFFF               	dw	65535	; assembler added errata NOP
  3760                           
  3761                           ; BSR set to: 1
  3762  000936  0E00               	movlw	0
  3763  000938  EC86  F014         	call	_Z_axis
  3764  00093C  0101               	movlb	1	; () banked
  3765  00093E  4B21               	infsnz	pick_and_place@i_918& (0+255),f,b
  3766  000940  2B22               	incf	(pick_and_place@i_918+1)& (0+255),f,b
  3767  000942                     l4973:
  3768  000942  FFFF               	dw	65535	; assembler added errata NOP
  3769                           
  3770                           ; BSR set to: 1
  3771  000944  BF22               	btfsc	(pick_and_place@i_918+1)& (0+255),7,b
  3772  000946  EFB1  F004         	goto	u5970
  3773  00094A  5122               	movf	(pick_and_place@i_918+1)& (0+255),w,b
  3774  00094C  E107               	bnz	u5971
  3775  00094E  0E03               	movlw	3
  3776  000950  5D21               	subwf	pick_and_place@i_918& (0+255),w,b
  3777  000952  B0D8               	btfsc	status,0,c
  3778  000954  EFAE  F004         	goto	u5971
  3779  000958  EFB1  F004         	goto	u5970
  3780  00095C                     u5971:
  3781  00095C  FFFF               	dw	65535	; assembler added errata NOP
  3782  00095E  EFBB  F004         	goto	l4977
  3783  000962                     u5970:
  3784  000962  FFFF               	dw	65535	; assembler added errata NOP
  3785  000964                     
  3786                           ; BSR set to: 1
  3787  000964  5072               	movf	_stop^0,w,c
  3788  000966  B4D8               	btfsc	status,2,c
  3789  000968  EFB8  F004         	goto	u5981
  3790  00096C  EFBB  F004         	goto	u5980
  3791  000970                     u5981:
  3792  000970  FFFF               	dw	65535	; assembler added errata NOP
  3793  000972  EF9A  F004         	goto	l4969
  3794  000976                     u5980:
  3795  000976                     l4977:
  3796  000976  FFFF               	dw	65535	; assembler added errata NOP
  3797                           
  3798                           ; BSR set to: 1
  3799                           ;main.c: 674:         Tweezer(0);
  3800  000978  0E00               	movlw	0
  3801  00097A  EC13  F018         	call	_Tweezer
  3802  00097E                     
  3803                           ;main.c: 675:         Angle_diff= Place_Angle;
  3804  00097E  C063  F05D         	movff	_Place_Angle,_Angle_diff
  3805  000982  C064  F05E         	movff	_Place_Angle+1,_Angle_diff+1
  3806  000986                     
  3807                           ;main.c: 676:         X_diff = X_Place;
  3808  000986  C06B  F061         	movff	_X_Place,_X_diff
  3809  00098A  C06C  F062         	movff	_X_Place+1,_X_diff+1
  3810  00098E                     
  3811                           ;main.c: 677:         Y_diff = Y_Place;
  3812  00098E  C067  F05F         	movff	_Y_Place,_Y_diff
  3813  000992  C068  F060         	movff	_Y_Place+1,_Y_diff+1
  3814  000996  0012               	return		;funcret
  3815  000998  FFFF               	dw	65535	; errata NOP
  3816  00099A                     __end_of_pick_and_place:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function _fetch_parameters *****************
  3820 ;; Defined at:
  3821 ;;		line 583 in file "main.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  Componnt        1    wreg     unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  Componnt        1    9[COMRAM] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  2  370[None  ] int 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3835 ;;      Params:         0       0       0       0       0       0       0
  3836 ;;      Locals:         1       0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0
  3838 ;;      Totals:         1       0       0       0       0       0       0
  3839 ;;Total ram usage:        1 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 2
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_pick_and_place
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text8
  3850  00246A                     __ptext8:
  3851                           	callstack 0
  3852  00246A                     _fetch_parameters:
  3853                           	callstack 0
  3854  00246A  FFFF               	dw	65535	; assembler added errata NOP
  3855                           
  3856                           ;incstack = 0
  3857                           ;fetch_parameters@Componnt stored from wreg
  3858  00246C  6E0A               	movwf	fetch_parameters@Componnt^0,c
  3859  00246E                     
  3860                           ;main.c: 584:     if(Componnt=='A')
  3861  00246E  0E41               	movlw	65
  3862  002470  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  3863  002472  A4D8               	btfss	status,2,c
  3864  002474  EF3E  F012         	goto	u5021
  3865  002478  EF41  F012         	goto	u5020
  3866  00247C                     u5021:
  3867  00247C  FFFF               	dw	65535	; assembler added errata NOP
  3868  00247E  EF5C  F012         	goto	l4521
  3869  002482                     u5020:
  3870  002482  FFFF               	dw	65535	; assembler added errata NOP
  3871  002484                     
  3872                           ;main.c: 585:         {;main.c: 586:             X_Pick=3;
  3873  002484  0E00               	movlw	0
  3874  002486  6E6E               	movwf	(_X_Pick+1)^0,c
  3875  002488  0E03               	movlw	3
  3876  00248A  6E6D               	movwf	_X_Pick^0,c
  3877                           
  3878                           ;main.c: 587:             Y_Pick=4;
  3879  00248C  0E00               	movlw	0
  3880  00248E  6E6A               	movwf	(_Y_Pick+1)^0,c
  3881  002490  0E04               	movlw	4
  3882  002492  6E69               	movwf	_Y_Pick^0,c
  3883                           
  3884                           ;main.c: 588:             Pick_Angle=0;
  3885  002494  0E00               	movlw	0
  3886  002496  6E66               	movwf	(_Pick_Angle+1)^0,c
  3887  002498  0E00               	movlw	0
  3888  00249A  6E65               	movwf	_Pick_Angle^0,c
  3889                           
  3890                           ;main.c: 590:             X_Place=17;
  3891  00249C  0E00               	movlw	0
  3892  00249E  6E6C               	movwf	(_X_Place+1)^0,c
  3893  0024A0  0E11               	movlw	17
  3894  0024A2  6E6B               	movwf	_X_Place^0,c
  3895                           
  3896                           ;main.c: 591:             Y_Place=5;
  3897  0024A4  0E00               	movlw	0
  3898  0024A6  6E68               	movwf	(_Y_Place+1)^0,c
  3899  0024A8  0E05               	movlw	5
  3900  0024AA  6E67               	movwf	_Y_Place^0,c
  3901                           
  3902                           ;main.c: 592:             Place_Angle=270;
  3903  0024AC  0E01               	movlw	1
  3904  0024AE  6E64               	movwf	(_Place_Angle+1)^0,c
  3905  0024B0  0E0E               	movlw	14
  3906  0024B2  6E63               	movwf	_Place_Angle^0,c
  3907                           
  3908                           ;main.c: 593:         }
  3909  0024B4  EFCE  F012         	goto	l378
  3910  0024B8                     l4521:
  3911  0024B8  FFFF               	dw	65535	; assembler added errata NOP
  3912  0024BA  0E42               	movlw	66
  3913  0024BC  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  3914  0024BE  A4D8               	btfss	status,2,c
  3915  0024C0  EF64  F012         	goto	u5031
  3916  0024C4  EF67  F012         	goto	u5030
  3917  0024C8                     u5031:
  3918  0024C8  FFFF               	dw	65535	; assembler added errata NOP
  3919  0024CA  EF82  F012         	goto	l4525
  3920  0024CE                     u5030:
  3921  0024CE  FFFF               	dw	65535	; assembler added errata NOP
  3922  0024D0                     
  3923                           ;main.c: 595:             X_Pick=3;
  3924  0024D0  0E00               	movlw	0
  3925  0024D2  6E6E               	movwf	(_X_Pick+1)^0,c
  3926  0024D4  0E03               	movlw	3
  3927  0024D6  6E6D               	movwf	_X_Pick^0,c
  3928                           
  3929                           ;main.c: 596:             Y_Pick=10;
  3930  0024D8  0E00               	movlw	0
  3931  0024DA  6E6A               	movwf	(_Y_Pick+1)^0,c
  3932  0024DC  0E0A               	movlw	10
  3933  0024DE  6E69               	movwf	_Y_Pick^0,c
  3934                           
  3935                           ;main.c: 597:             Pick_Angle=90;
  3936  0024E0  0E00               	movlw	0
  3937  0024E2  6E66               	movwf	(_Pick_Angle+1)^0,c
  3938  0024E4  0E5A               	movlw	90
  3939  0024E6  6E65               	movwf	_Pick_Angle^0,c
  3940                           
  3941                           ;main.c: 599:             X_Place=10;
  3942  0024E8  0E00               	movlw	0
  3943  0024EA  6E6C               	movwf	(_X_Place+1)^0,c
  3944  0024EC  0E0A               	movlw	10
  3945  0024EE  6E6B               	movwf	_X_Place^0,c
  3946                           
  3947                           ;main.c: 600:              Y_Place=5;
  3948  0024F0  0E00               	movlw	0
  3949  0024F2  6E68               	movwf	(_Y_Place+1)^0,c
  3950  0024F4  0E05               	movlw	5
  3951  0024F6  6E67               	movwf	_Y_Place^0,c
  3952                           
  3953                           ;main.c: 601:             Place_Angle=180;
  3954  0024F8  0E00               	movlw	0
  3955  0024FA  6E64               	movwf	(_Place_Angle+1)^0,c
  3956  0024FC  0EB4               	movlw	180
  3957  0024FE  6E63               	movwf	_Place_Angle^0,c
  3958                           
  3959                           ;main.c: 602:         }
  3960  002500  EFCE  F012         	goto	l378
  3961  002504                     l4525:
  3962  002504  FFFF               	dw	65535	; assembler added errata NOP
  3963  002506  0E43               	movlw	67
  3964  002508  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  3965  00250A  A4D8               	btfss	status,2,c
  3966  00250C  EF8A  F012         	goto	u5041
  3967  002510  EF8D  F012         	goto	u5040
  3968  002514                     u5041:
  3969  002514  FFFF               	dw	65535	; assembler added errata NOP
  3970  002516  EFA8  F012         	goto	l4529
  3971  00251A                     u5040:
  3972  00251A  FFFF               	dw	65535	; assembler added errata NOP
  3973  00251C                     
  3974                           ;main.c: 604:             X_Pick=3;
  3975  00251C  0E00               	movlw	0
  3976  00251E  6E6E               	movwf	(_X_Pick+1)^0,c
  3977  002520  0E03               	movlw	3
  3978  002522  6E6D               	movwf	_X_Pick^0,c
  3979                           
  3980                           ;main.c: 605:             Y_Pick=15;
  3981  002524  0E00               	movlw	0
  3982  002526  6E6A               	movwf	(_Y_Pick+1)^0,c
  3983  002528  0E0F               	movlw	15
  3984  00252A  6E69               	movwf	_Y_Pick^0,c
  3985                           
  3986                           ;main.c: 606:             Pick_Angle=90;
  3987  00252C  0E00               	movlw	0
  3988  00252E  6E66               	movwf	(_Pick_Angle+1)^0,c
  3989  002530  0E5A               	movlw	90
  3990  002532  6E65               	movwf	_Pick_Angle^0,c
  3991                           
  3992                           ;main.c: 608:             X_Place=16;
  3993  002534  0E00               	movlw	0
  3994  002536  6E6C               	movwf	(_X_Place+1)^0,c
  3995  002538  0E10               	movlw	16
  3996  00253A  6E6B               	movwf	_X_Place^0,c
  3997                           
  3998                           ;main.c: 609:             Y_Place=14;
  3999  00253C  0E00               	movlw	0
  4000  00253E  6E68               	movwf	(_Y_Place+1)^0,c
  4001  002540  0E0E               	movlw	14
  4002  002542  6E67               	movwf	_Y_Place^0,c
  4003                           
  4004                           ;main.c: 610:             Place_Angle=270;
  4005  002544  0E01               	movlw	1
  4006  002546  6E64               	movwf	(_Place_Angle+1)^0,c
  4007  002548  0E0E               	movlw	14
  4008  00254A  6E63               	movwf	_Place_Angle^0,c
  4009                           
  4010                           ;main.c: 611:         }
  4011  00254C  EFCE  F012         	goto	l378
  4012  002550                     l4529:
  4013  002550  FFFF               	dw	65535	; assembler added errata NOP
  4014  002552  0E44               	movlw	68
  4015  002554  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  4016  002556  A4D8               	btfss	status,2,c
  4017  002558  EFB0  F012         	goto	u5051
  4018  00255C  EFB3  F012         	goto	u5050
  4019  002560                     u5051:
  4020  002560  FFFF               	dw	65535	; assembler added errata NOP
  4021  002562  EFCE  F012         	goto	l374
  4022  002566                     u5050:
  4023  002566  FFFF               	dw	65535	; assembler added errata NOP
  4024  002568                     
  4025                           ;main.c: 613:             X_Pick=X_Pick_D;
  4026  002568  C0AE  F06D         	movff	_X_Pick_D,_X_Pick
  4027  00256C  C0AF  F06E         	movff	_X_Pick_D+1,_X_Pick+1
  4028                           
  4029                           ;main.c: 614:             Y_Pick=Y_Pick_D;
  4030  002570  C0AC  F069         	movff	_Y_Pick_D,_Y_Pick
  4031  002574  C0AD  F06A         	movff	_Y_Pick_D+1,_Y_Pick+1
  4032                           
  4033                           ;main.c: 615:             Pick_Angle=Pick_Angle_D;
  4034  002578  C0AA  F065         	movff	_Pick_Angle_D,_Pick_Angle
  4035  00257C  C0AB  F066         	movff	_Pick_Angle_D+1,_Pick_Angle+1
  4036                           
  4037                           ;main.c: 617:             X_Place=X_Place_D;
  4038  002580  C0A8  F06B         	movff	_X_Place_D,_X_Place
  4039  002584  C0A9  F06C         	movff	_X_Place_D+1,_X_Place+1
  4040                           
  4041                           ;main.c: 618:             Y_Place=Y_Place_D;
  4042  002588  C0A6  F067         	movff	_Y_Place_D,_Y_Place
  4043  00258C  C0A7  F068         	movff	_Y_Place_D+1,_Y_Place+1
  4044                           
  4045                           ;main.c: 619:             Place_Angle=Place_Angle_D;
  4046  002590  C0A4  F063         	movff	_Place_Angle_D,_Place_Angle
  4047  002594  C0A5  F064         	movff	_Place_Angle_D+1,_Place_Angle+1
  4048  002598  EFCE  F012         	goto	l378
  4049  00259C                     l374:
  4050  00259C                     l378:
  4051  00259C  FFFF               	dw	65535	; assembler added errata NOP
  4052  00259E  0012               	return		;funcret
  4053  0025A0  FFFF               	dw	65535	; errata NOP
  4054  0025A2                     __end_of_fetch_parameters:
  4055                           	callstack 0
  4056                           
  4057 ;; *************** function ___xxtofl *****************
  4058 ;; Defined at:
  4059 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  sign            1    wreg     unsigned char 
  4062 ;;  val             4    9[COMRAM] long 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  sign            1   17[COMRAM] unsigned char 
  4065 ;;  arg             4   19[COMRAM] unsigned long 
  4066 ;;  exp             1   18[COMRAM] unsigned char 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  4    9[COMRAM] unsigned char 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4076 ;;      Params:         4       0       0       0       0       0       0
  4077 ;;      Locals:         6       0       0       0       0       0       0
  4078 ;;      Temps:          4       0       0       0       0       0       0
  4079 ;;      Totals:        14       0       0       0       0       0       0
  4080 ;;Total ram usage:       14 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 2
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_pick_and_place
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text9
  4091  001E00                     __ptext9:
  4092                           	callstack 0
  4093  001E00                     ___xxtofl:
  4094                           	callstack 0
  4095  001E00  FFFF               	dw	65535	; assembler added errata NOP
  4096                           
  4097                           ;incstack = 0
  4098                           ;___xxtofl@sign stored from wreg
  4099  001E02  6E12               	movwf	___xxtofl@sign^0,c
  4100  001E04  5012               	movf	___xxtofl@sign^0,w,c
  4101  001E06  B4D8               	btfsc	status,2,c
  4102  001E08  EF08  F00F         	goto	u5341
  4103  001E0C  EF0B  F00F         	goto	u5340
  4104  001E10                     u5341:
  4105  001E10  FFFF               	dw	65535	; assembler added errata NOP
  4106  001E12  EF30  F00F         	goto	l1163
  4107  001E16                     u5340:
  4108  001E16  FFFF               	dw	65535	; assembler added errata NOP
  4109  001E18  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  4110  001E1A  EF14  F00F         	goto	u5350
  4111  001E1E  EF11  F00F         	goto	u5351
  4112  001E22                     u5351:
  4113  001E22  FFFF               	dw	65535	; assembler added errata NOP
  4114  001E24  EF30  F00F         	goto	l1163
  4115  001E28                     u5350:
  4116  001E28  FFFF               	dw	65535	; assembler added errata NOP
  4117  001E2A  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
  4118  001E2E  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
  4119  001E32  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
  4120  001E36  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
  4121  001E3A  1E0E               	comf	??___xxtofl^0,f,c
  4122  001E3C  1E0F               	comf	(??___xxtofl+1)^0,f,c
  4123  001E3E  1E10               	comf	(??___xxtofl+2)^0,f,c
  4124  001E40  1E11               	comf	(??___xxtofl+3)^0,f,c
  4125  001E42  2A0E               	incf	??___xxtofl^0,f,c
  4126  001E44  0E00               	movlw	0
  4127  001E46  220F               	addwfc	(??___xxtofl+1)^0,f,c
  4128  001E48  2210               	addwfc	(??___xxtofl+2)^0,f,c
  4129  001E4A  2211               	addwfc	(??___xxtofl+3)^0,f,c
  4130  001E4C  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
  4131  001E50  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
  4132  001E54  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
  4133  001E58  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
  4134  001E5C  EF39  F00F         	goto	l4699
  4135  001E60                     l1163:
  4136  001E60  FFFF               	dw	65535	; assembler added errata NOP
  4137  001E62  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
  4138  001E66  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4139  001E6A  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4140  001E6E  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4141  001E72                     l4699:
  4142  001E72  FFFF               	dw	65535	; assembler added errata NOP
  4143  001E74  500A               	movf	___xxtofl@val^0,w,c
  4144  001E76  100B               	iorwf	(___xxtofl@val+1)^0,w,c
  4145  001E78  100C               	iorwf	(___xxtofl@val+2)^0,w,c
  4146  001E7A  100D               	iorwf	(___xxtofl@val+3)^0,w,c
  4147  001E7C  A4D8               	btfss	status,2,c
  4148  001E7E  EF43  F00F         	goto	u5361
  4149  001E82  EF46  F00F         	goto	u5360
  4150  001E86                     u5361:
  4151  001E86  FFFF               	dw	65535	; assembler added errata NOP
  4152  001E88  EF51  F00F         	goto	l4705
  4153  001E8C                     u5360:
  4154  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  4155  001E8E  0E00               	movlw	0
  4156  001E90  6E0A               	movwf	?___xxtofl^0,c
  4157  001E92  0E00               	movlw	0
  4158  001E94  6E0B               	movwf	(?___xxtofl+1)^0,c
  4159  001E96  0E00               	movlw	0
  4160  001E98  6E0C               	movwf	(?___xxtofl+2)^0,c
  4161  001E9A  0E00               	movlw	0
  4162  001E9C  6E0D               	movwf	(?___xxtofl+3)^0,c
  4163  001E9E  EFF9  F00F         	goto	l1166
  4164  001EA2                     l4705:
  4165  001EA2  FFFF               	dw	65535	; assembler added errata NOP
  4166  001EA4  0E96               	movlw	150
  4167  001EA6  6E13               	movwf	___xxtofl@exp^0,c
  4168  001EA8  EF5D  F00F         	goto	l4709
  4169  001EAC                     l4707:
  4170  001EAC  FFFF               	dw	65535	; assembler added errata NOP
  4171  001EAE  2A13               	incf	___xxtofl@exp^0,f,c
  4172  001EB0  90D8               	bcf	status,0,c
  4173  001EB2  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  4174  001EB4  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  4175  001EB6  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  4176  001EB8  3214               	rrcf	___xxtofl@arg^0,f,c
  4177  001EBA                     l4709:
  4178  001EBA  FFFF               	dw	65535	; assembler added errata NOP
  4179  001EBC  0E00               	movlw	0
  4180  001EBE  1414               	andwf	___xxtofl@arg^0,w,c
  4181  001EC0  6E0E               	movwf	??___xxtofl^0,c
  4182  001EC2  0E00               	movlw	0
  4183  001EC4  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  4184  001EC6  6E0F               	movwf	(??___xxtofl+1)^0,c
  4185  001EC8  0E00               	movlw	0
  4186  001ECA  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  4187  001ECC  6E10               	movwf	(??___xxtofl+2)^0,c
  4188  001ECE  0EFE               	movlw	254
  4189  001ED0  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  4190  001ED2  6E11               	movwf	(??___xxtofl+3)^0,c
  4191  001ED4  500E               	movf	??___xxtofl^0,w,c
  4192  001ED6  100F               	iorwf	(??___xxtofl+1)^0,w,c
  4193  001ED8  1010               	iorwf	(??___xxtofl+2)^0,w,c
  4194  001EDA  1011               	iorwf	(??___xxtofl+3)^0,w,c
  4195  001EDC  A4D8               	btfss	status,2,c
  4196  001EDE  EF73  F00F         	goto	u5371
  4197  001EE2  EF76  F00F         	goto	u5370
  4198  001EE6                     u5371:
  4199  001EE6  FFFF               	dw	65535	; assembler added errata NOP
  4200  001EE8  EF56  F00F         	goto	l4707
  4201  001EEC                     u5370:
  4202  001EEC  FFFF               	dw	65535	; assembler added errata NOP
  4203  001EEE  EF86  F00F         	goto	l1170
  4204  001EF2                     l4711:
  4205  001EF2  FFFF               	dw	65535	; assembler added errata NOP
  4206  001EF4  2A13               	incf	___xxtofl@exp^0,f,c
  4207  001EF6  0E01               	movlw	1
  4208  001EF8  2614               	addwf	___xxtofl@arg^0,f,c
  4209  001EFA  0E00               	movlw	0
  4210  001EFC  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
  4211  001EFE  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
  4212  001F00  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
  4213  001F02  90D8               	bcf	status,0,c
  4214  001F04  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  4215  001F06  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  4216  001F08  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  4217  001F0A  3214               	rrcf	___xxtofl@arg^0,f,c
  4218  001F0C                     l1170:
  4219  001F0C  FFFF               	dw	65535	; assembler added errata NOP
  4220  001F0E  0E00               	movlw	0
  4221  001F10  1414               	andwf	___xxtofl@arg^0,w,c
  4222  001F12  6E0E               	movwf	??___xxtofl^0,c
  4223  001F14  0E00               	movlw	0
  4224  001F16  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  4225  001F18  6E0F               	movwf	(??___xxtofl+1)^0,c
  4226  001F1A  0E00               	movlw	0
  4227  001F1C  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  4228  001F1E  6E10               	movwf	(??___xxtofl+2)^0,c
  4229  001F20  0EFF               	movlw	255
  4230  001F22  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  4231  001F24  6E11               	movwf	(??___xxtofl+3)^0,c
  4232  001F26  500E               	movf	??___xxtofl^0,w,c
  4233  001F28  100F               	iorwf	(??___xxtofl+1)^0,w,c
  4234  001F2A  1010               	iorwf	(??___xxtofl+2)^0,w,c
  4235  001F2C  1011               	iorwf	(??___xxtofl+3)^0,w,c
  4236  001F2E  A4D8               	btfss	status,2,c
  4237  001F30  EF9C  F00F         	goto	u5381
  4238  001F34  EF9F  F00F         	goto	u5380
  4239  001F38                     u5381:
  4240  001F38  FFFF               	dw	65535	; assembler added errata NOP
  4241  001F3A  EF79  F00F         	goto	l4711
  4242  001F3E                     u5380:
  4243  001F3E  FFFF               	dw	65535	; assembler added errata NOP
  4244  001F40  EFA9  F00F         	goto	l4719
  4245  001F44                     l4717:
  4246  001F44  FFFF               	dw	65535	; assembler added errata NOP
  4247  001F46  0613               	decf	___xxtofl@exp^0,f,c
  4248  001F48  90D8               	bcf	status,0,c
  4249  001F4A  3614               	rlcf	___xxtofl@arg^0,f,c
  4250  001F4C  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
  4251  001F4E  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
  4252  001F50  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
  4253  001F52                     l4719:
  4254  001F52  FFFF               	dw	65535	; assembler added errata NOP
  4255  001F54  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
  4256  001F56  EFAF  F00F         	goto	u5391
  4257  001F5A  EFB2  F00F         	goto	u5390
  4258  001F5E                     u5391:
  4259  001F5E  FFFF               	dw	65535	; assembler added errata NOP
  4260  001F60  EFBC  F00F         	goto	l1177
  4261  001F64                     u5390:
  4262  001F64  FFFF               	dw	65535	; assembler added errata NOP
  4263  001F66  0E02               	movlw	2
  4264  001F68  6013               	cpfslt	___xxtofl@exp^0,c
  4265  001F6A  EFB9  F00F         	goto	u5401
  4266  001F6E  EFBC  F00F         	goto	u5400
  4267  001F72                     u5401:
  4268  001F72  FFFF               	dw	65535	; assembler added errata NOP
  4269  001F74  EFA2  F00F         	goto	l4717
  4270  001F78                     u5400:
  4271  001F78                     l1177:
  4272  001F78  FFFF               	dw	65535	; assembler added errata NOP
  4273  001F7A  B013               	btfsc	___xxtofl@exp^0,0,c
  4274  001F7C  EFC2  F00F         	goto	u5411
  4275  001F80  EFC5  F00F         	goto	u5410
  4276  001F84                     u5411:
  4277  001F84  FFFF               	dw	65535	; assembler added errata NOP
  4278  001F86  EFC7  F00F         	goto	l4725
  4279  001F8A                     u5410:
  4280  001F8A  FFFF               	dw	65535	; assembler added errata NOP
  4281  001F8C  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
  4282  001F8E                     l4725:
  4283  001F8E  FFFF               	dw	65535	; assembler added errata NOP
  4284  001F90  90D8               	bcf	status,0,c
  4285  001F92  3213               	rrcf	___xxtofl@exp^0,f,c
  4286  001F94  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
  4287  001F98  6A0F               	clrf	(??___xxtofl+1)^0,c
  4288  001F9A  6A10               	clrf	(??___xxtofl+2)^0,c
  4289  001F9C  6A11               	clrf	(??___xxtofl+3)^0,c
  4290  001F9E  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
  4291  001FA2  6A10               	clrf	(??___xxtofl+2)^0,c
  4292  001FA4  6A0F               	clrf	(??___xxtofl+1)^0,c
  4293  001FA6  6A0E               	clrf	??___xxtofl^0,c
  4294  001FA8  500E               	movf	??___xxtofl^0,w,c
  4295  001FAA  1214               	iorwf	___xxtofl@arg^0,f,c
  4296  001FAC  500F               	movf	(??___xxtofl+1)^0,w,c
  4297  001FAE  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
  4298  001FB0  5010               	movf	(??___xxtofl+2)^0,w,c
  4299  001FB2  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
  4300  001FB4  5011               	movf	(??___xxtofl+3)^0,w,c
  4301  001FB6  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
  4302  001FB8  5012               	movf	___xxtofl@sign^0,w,c
  4303  001FBA  B4D8               	btfsc	status,2,c
  4304  001FBC  EFE2  F00F         	goto	u5421
  4305  001FC0  EFE5  F00F         	goto	u5420
  4306  001FC4                     u5421:
  4307  001FC4  FFFF               	dw	65535	; assembler added errata NOP
  4308  001FC6  EFF0  F00F         	goto	l4735
  4309  001FCA                     u5420:
  4310  001FCA  FFFF               	dw	65535	; assembler added errata NOP
  4311  001FCC  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  4312  001FCE  EFEE  F00F         	goto	u5430
  4313  001FD2  EFEB  F00F         	goto	u5431
  4314  001FD6                     u5431:
  4315  001FD6  FFFF               	dw	65535	; assembler added errata NOP
  4316  001FD8  EFF0  F00F         	goto	l4735
  4317  001FDC                     u5430:
  4318  001FDC  FFFF               	dw	65535	; assembler added errata NOP
  4319  001FDE  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
  4320  001FE0                     l4735:
  4321  001FE0  FFFF               	dw	65535	; assembler added errata NOP
  4322  001FE2  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
  4323  001FE6  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
  4324  001FEA  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
  4325  001FEE  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
  4326  001FF2                     l1166:
  4327  001FF2  FFFF               	dw	65535	; assembler added errata NOP
  4328  001FF4  0012               	return		;funcret
  4329  001FF6  FFFF               	dw	65535	; errata NOP
  4330  001FF8                     __end_of___xxtofl:
  4331                           	callstack 0
  4332                           
  4333 ;; *************** function ___fldiv *****************
  4334 ;; Defined at:
  4335 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  b               4   23[COMRAM] unsigned char 
  4338 ;;  a               4   27[COMRAM] unsigned char 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  grs             4   42[COMRAM] unsigned long 
  4341 ;;  rem             4   35[COMRAM] unsigned long 
  4342 ;;  new_exp         2   40[COMRAM] short 
  4343 ;;  aexp            1   47[COMRAM] unsigned char 
  4344 ;;  bexp            1   46[COMRAM] unsigned char 
  4345 ;;  sign            1   39[COMRAM] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  4   23[COMRAM] unsigned char 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4355 ;;      Params:         8       0       0       0       0       0       0
  4356 ;;      Locals:        13       0       0       0       0       0       0
  4357 ;;      Temps:          4       0       0       0       0       0       0
  4358 ;;      Totals:        25       0       0       0       0       0       0
  4359 ;;Total ram usage:       25 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 2
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_pick_and_place
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text10
  4370  0013E6                     __ptext10:
  4371                           	callstack 0
  4372  0013E6                     ___fldiv:
  4373                           	callstack 0
  4374  0013E6  FFFF               	dw	65535	; assembler added errata NOP
  4375  0013E8  501B               	movf	(___fldiv@b+3)^0,w,c
  4376  0013EA  0B80               	andlw	128
  4377  0013EC  6E28               	movwf	___fldiv@sign^0,c
  4378  0013EE  501B               	movf	(___fldiv@b+3)^0,w,c
  4379  0013F0  241B               	addwf	(___fldiv@b+3)^0,w,c
  4380  0013F2  6E2F               	movwf	___fldiv@bexp^0,c
  4381  0013F4  AE1A               	btfss	(___fldiv@b+2)^0,7,c
  4382  0013F6  EFFF  F009         	goto	u5061
  4383  0013FA  EF02  F00A         	goto	u5060
  4384  0013FE                     u5061:
  4385  0013FE  FFFF               	dw	65535	; assembler added errata NOP
  4386  001400  EF04  F00A         	goto	l4539
  4387  001404                     u5060:
  4388  001404  FFFF               	dw	65535	; assembler added errata NOP
  4389  001406  802F               	bsf	___fldiv@bexp^0,0,c
  4390  001408                     l4539:
  4391  001408  FFFF               	dw	65535	; assembler added errata NOP
  4392  00140A  502F               	movf	___fldiv@bexp^0,w,c
  4393  00140C  B4D8               	btfsc	status,2,c
  4394  00140E  EF0B  F00A         	goto	u5071
  4395  001412  EF0E  F00A         	goto	u5070
  4396  001416                     u5071:
  4397  001416  FFFF               	dw	65535	; assembler added errata NOP
  4398  001418  EF27  F00A         	goto	l4549
  4399  00141C                     u5070:
  4400  00141C  FFFF               	dw	65535	; assembler added errata NOP
  4401  00141E  282F               	incf	___fldiv@bexp^0,w,c
  4402  001420  A4D8               	btfss	status,2,c
  4403  001422  EF15  F00A         	goto	u5081
  4404  001426  EF18  F00A         	goto	u5080
  4405  00142A                     u5081:
  4406  00142A  FFFF               	dw	65535	; assembler added errata NOP
  4407  00142C  EF21  F00A         	goto	l4545
  4408  001430                     u5080:
  4409  001430  FFFF               	dw	65535	; assembler added errata NOP
  4410  001432  0E00               	movlw	0
  4411  001434  6E18               	movwf	___fldiv@b^0,c
  4412  001436  0E00               	movlw	0
  4413  001438  6E19               	movwf	(___fldiv@b+1)^0,c
  4414  00143A  0E00               	movlw	0
  4415  00143C  6E1A               	movwf	(___fldiv@b+2)^0,c
  4416  00143E  0E00               	movlw	0
  4417  001440  6E1B               	movwf	(___fldiv@b+3)^0,c
  4418  001442                     l4545:
  4419  001442  FFFF               	dw	65535	; assembler added errata NOP
  4420  001444  8E1A               	bsf	(___fldiv@b+2)^0,7,c
  4421  001446  0E00               	movlw	0
  4422  001448  6E1B               	movwf	(___fldiv@b+3)^0,c
  4423  00144A  EF30  F00A         	goto	l4551
  4424  00144E                     l4549:
  4425  00144E  FFFF               	dw	65535	; assembler added errata NOP
  4426  001450  0E00               	movlw	0
  4427  001452  6E18               	movwf	___fldiv@b^0,c
  4428  001454  0E00               	movlw	0
  4429  001456  6E19               	movwf	(___fldiv@b+1)^0,c
  4430  001458  0E00               	movlw	0
  4431  00145A  6E1A               	movwf	(___fldiv@b+2)^0,c
  4432  00145C  0E00               	movlw	0
  4433  00145E  6E1B               	movwf	(___fldiv@b+3)^0,c
  4434  001460                     l4551:
  4435  001460  FFFF               	dw	65535	; assembler added errata NOP
  4436  001462  501F               	movf	(___fldiv@a+3)^0,w,c
  4437  001464  0B80               	andlw	128
  4438  001466  1A28               	xorwf	___fldiv@sign^0,f,c
  4439  001468  501F               	movf	(___fldiv@a+3)^0,w,c
  4440  00146A  241F               	addwf	(___fldiv@a+3)^0,w,c
  4441  00146C  6E30               	movwf	___fldiv@aexp^0,c
  4442  00146E  AE1E               	btfss	(___fldiv@a+2)^0,7,c
  4443  001470  EF3C  F00A         	goto	u5091
  4444  001474  EF3F  F00A         	goto	u5090
  4445  001478                     u5091:
  4446  001478  FFFF               	dw	65535	; assembler added errata NOP
  4447  00147A  EF41  F00A         	goto	l4559
  4448  00147E                     u5090:
  4449  00147E  FFFF               	dw	65535	; assembler added errata NOP
  4450  001480  8030               	bsf	___fldiv@aexp^0,0,c
  4451  001482                     l4559:
  4452  001482  FFFF               	dw	65535	; assembler added errata NOP
  4453  001484  5030               	movf	___fldiv@aexp^0,w,c
  4454  001486  B4D8               	btfsc	status,2,c
  4455  001488  EF48  F00A         	goto	u5101
  4456  00148C  EF4B  F00A         	goto	u5100
  4457  001490                     u5101:
  4458  001490  FFFF               	dw	65535	; assembler added errata NOP
  4459  001492  EF64  F00A         	goto	l4569
  4460  001496                     u5100:
  4461  001496  FFFF               	dw	65535	; assembler added errata NOP
  4462  001498  2830               	incf	___fldiv@aexp^0,w,c
  4463  00149A  A4D8               	btfss	status,2,c
  4464  00149C  EF52  F00A         	goto	u5111
  4465  0014A0  EF55  F00A         	goto	u5110
  4466  0014A4                     u5111:
  4467  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  4468  0014A6  EF5E  F00A         	goto	l4565
  4469  0014AA                     u5110:
  4470  0014AA  FFFF               	dw	65535	; assembler added errata NOP
  4471  0014AC  0E00               	movlw	0
  4472  0014AE  6E1C               	movwf	___fldiv@a^0,c
  4473  0014B0  0E00               	movlw	0
  4474  0014B2  6E1D               	movwf	(___fldiv@a+1)^0,c
  4475  0014B4  0E00               	movlw	0
  4476  0014B6  6E1E               	movwf	(___fldiv@a+2)^0,c
  4477  0014B8  0E00               	movlw	0
  4478  0014BA  6E1F               	movwf	(___fldiv@a+3)^0,c
  4479  0014BC                     l4565:
  4480  0014BC  FFFF               	dw	65535	; assembler added errata NOP
  4481  0014BE  8E1E               	bsf	(___fldiv@a+2)^0,7,c
  4482  0014C0  0E00               	movlw	0
  4483  0014C2  6E1F               	movwf	(___fldiv@a+3)^0,c
  4484  0014C4  EF6D  F00A         	goto	l4571
  4485  0014C8                     l4569:
  4486  0014C8  FFFF               	dw	65535	; assembler added errata NOP
  4487  0014CA  0E00               	movlw	0
  4488  0014CC  6E1C               	movwf	___fldiv@a^0,c
  4489  0014CE  0E00               	movlw	0
  4490  0014D0  6E1D               	movwf	(___fldiv@a+1)^0,c
  4491  0014D2  0E00               	movlw	0
  4492  0014D4  6E1E               	movwf	(___fldiv@a+2)^0,c
  4493  0014D6  0E00               	movlw	0
  4494  0014D8  6E1F               	movwf	(___fldiv@a+3)^0,c
  4495  0014DA                     l4571:
  4496  0014DA  FFFF               	dw	65535	; assembler added errata NOP
  4497  0014DC  501C               	movf	___fldiv@a^0,w,c
  4498  0014DE  101D               	iorwf	(___fldiv@a+1)^0,w,c
  4499  0014E0  101E               	iorwf	(___fldiv@a+2)^0,w,c
  4500  0014E2  101F               	iorwf	(___fldiv@a+3)^0,w,c
  4501  0014E4  A4D8               	btfss	status,2,c
  4502  0014E6  EF77  F00A         	goto	u5121
  4503  0014EA  EF7A  F00A         	goto	u5120
  4504  0014EE                     u5121:
  4505  0014EE  FFFF               	dw	65535	; assembler added errata NOP
  4506  0014F0  EF94  F00A         	goto	l4583
  4507  0014F4                     u5120:
  4508  0014F4  FFFF               	dw	65535	; assembler added errata NOP
  4509  0014F6  0E00               	movlw	0
  4510  0014F8  6E18               	movwf	___fldiv@b^0,c
  4511  0014FA  0E00               	movlw	0
  4512  0014FC  6E19               	movwf	(___fldiv@b+1)^0,c
  4513  0014FE  0E00               	movlw	0
  4514  001500  6E1A               	movwf	(___fldiv@b+2)^0,c
  4515  001502  0E00               	movlw	0
  4516  001504  6E1B               	movwf	(___fldiv@b+3)^0,c
  4517  001506  0E80               	movlw	128
  4518  001508  121A               	iorwf	(___fldiv@b+2)^0,f,c
  4519  00150A  0E7F               	movlw	127
  4520  00150C  121B               	iorwf	(___fldiv@b+3)^0,f,c
  4521  00150E                     l4577:
  4522  00150E  FFFF               	dw	65535	; assembler added errata NOP
  4523  001510  5028               	movf	___fldiv@sign^0,w,c
  4524  001512  121B               	iorwf	(___fldiv@b+3)^0,f,c
  4525  001514  C018  F018         	movff	___fldiv@b,?___fldiv
  4526  001518  C019  F019         	movff	___fldiv@b+1,?___fldiv+1
  4527  00151C  C01A  F01A         	movff	___fldiv@b+2,?___fldiv+2
  4528  001520  C01B  F01B         	movff	___fldiv@b+3,?___fldiv+3
  4529  001524  EF09  F00C         	goto	l1090
  4530  001528                     l4583:
  4531  001528  FFFF               	dw	65535	; assembler added errata NOP
  4532  00152A  502F               	movf	___fldiv@bexp^0,w,c
  4533  00152C  A4D8               	btfss	status,2,c
  4534  00152E  EF9B  F00A         	goto	u5131
  4535  001532  EF9E  F00A         	goto	u5130
  4536  001536                     u5131:
  4537  001536  FFFF               	dw	65535	; assembler added errata NOP
  4538  001538  EFA9  F00A         	goto	l4591
  4539  00153C                     u5130:
  4540  00153C  FFFF               	dw	65535	; assembler added errata NOP
  4541  00153E  0E00               	movlw	0
  4542  001540  6E18               	movwf	?___fldiv^0,c
  4543  001542  0E00               	movlw	0
  4544  001544  6E19               	movwf	(?___fldiv+1)^0,c
  4545  001546  0E00               	movlw	0
  4546  001548  6E1A               	movwf	(?___fldiv+2)^0,c
  4547  00154A  0E00               	movlw	0
  4548  00154C  6E1B               	movwf	(?___fldiv+3)^0,c
  4549  00154E  EF09  F00C         	goto	l1090
  4550  001552                     l4591:
  4551  001552  FFFF               	dw	65535	; assembler added errata NOP
  4552  001554  5030               	movf	___fldiv@aexp^0,w,c
  4553  001556  C02F  F020         	movff	___fldiv@bexp,??___fldiv
  4554  00155A  6A21               	clrf	(??___fldiv+1)^0,c
  4555  00155C  5E20               	subwf	??___fldiv^0,f,c
  4556  00155E  0E00               	movlw	0
  4557  001560  5A21               	subwfb	(??___fldiv+1)^0,f,c
  4558  001562  0E7F               	movlw	127
  4559  001564  2420               	addwf	??___fldiv^0,w,c
  4560  001566  6E29               	movwf	___fldiv@new_exp^0,c
  4561  001568  0E00               	movlw	0
  4562  00156A  2021               	addwfc	(??___fldiv+1)^0,w,c
  4563  00156C  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  4564  00156E  C018  F024         	movff	___fldiv@b,___fldiv@rem
  4565  001572  C019  F025         	movff	___fldiv@b+1,___fldiv@rem+1
  4566  001576  C01A  F026         	movff	___fldiv@b+2,___fldiv@rem+2
  4567  00157A  C01B  F027         	movff	___fldiv@b+3,___fldiv@rem+3
  4568  00157E  0E00               	movlw	0
  4569  001580  6E18               	movwf	___fldiv@b^0,c
  4570  001582  0E00               	movlw	0
  4571  001584  6E19               	movwf	(___fldiv@b+1)^0,c
  4572  001586  0E00               	movlw	0
  4573  001588  6E1A               	movwf	(___fldiv@b+2)^0,c
  4574  00158A  0E00               	movlw	0
  4575  00158C  6E1B               	movwf	(___fldiv@b+3)^0,c
  4576  00158E  0E00               	movlw	0
  4577  001590  6E2B               	movwf	___fldiv@grs^0,c
  4578  001592  0E00               	movlw	0
  4579  001594  6E2C               	movwf	(___fldiv@grs+1)^0,c
  4580  001596  0E00               	movlw	0
  4581  001598  6E2D               	movwf	(___fldiv@grs+2)^0,c
  4582  00159A  0E00               	movlw	0
  4583  00159C  6E2E               	movwf	(___fldiv@grs+3)^0,c
  4584  00159E  0E00               	movlw	0
  4585  0015A0  6E30               	movwf	___fldiv@aexp^0,c
  4586  0015A2  EF15  F00B         	goto	l1092
  4587  0015A6                     l4601:
  4588  0015A6  FFFF               	dw	65535	; assembler added errata NOP
  4589  0015A8  5030               	movf	___fldiv@aexp^0,w,c
  4590  0015AA  B4D8               	btfsc	status,2,c
  4591  0015AC  EFDA  F00A         	goto	u5141
  4592  0015B0  EFDD  F00A         	goto	u5140
  4593  0015B4                     u5141:
  4594  0015B4  FFFF               	dw	65535	; assembler added errata NOP
  4595  0015B6  EFF8  F00A         	goto	l4609
  4596  0015BA                     u5140:
  4597  0015BA  FFFF               	dw	65535	; assembler added errata NOP
  4598  0015BC  90D8               	bcf	status,0,c
  4599  0015BE  3624               	rlcf	___fldiv@rem^0,f,c
  4600  0015C0  3625               	rlcf	(___fldiv@rem+1)^0,f,c
  4601  0015C2  3626               	rlcf	(___fldiv@rem+2)^0,f,c
  4602  0015C4  3627               	rlcf	(___fldiv@rem+3)^0,f,c
  4603  0015C6  90D8               	bcf	status,0,c
  4604  0015C8  3618               	rlcf	___fldiv@b^0,f,c
  4605  0015CA  3619               	rlcf	(___fldiv@b+1)^0,f,c
  4606  0015CC  361A               	rlcf	(___fldiv@b+2)^0,f,c
  4607  0015CE  361B               	rlcf	(___fldiv@b+3)^0,f,c
  4608  0015D0  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  4609  0015D2  EFED  F00A         	goto	u5151
  4610  0015D6  EFF0  F00A         	goto	u5150
  4611  0015DA                     u5151:
  4612  0015DA  FFFF               	dw	65535	; assembler added errata NOP
  4613  0015DC  EFF2  F00A         	goto	l1095
  4614  0015E0                     u5150:
  4615  0015E0  FFFF               	dw	65535	; assembler added errata NOP
  4616  0015E2  8018               	bsf	___fldiv@b^0,0,c
  4617  0015E4                     l1095:
  4618  0015E4  FFFF               	dw	65535	; assembler added errata NOP
  4619  0015E6  90D8               	bcf	status,0,c
  4620  0015E8  362B               	rlcf	___fldiv@grs^0,f,c
  4621  0015EA  362C               	rlcf	(___fldiv@grs+1)^0,f,c
  4622  0015EC  362D               	rlcf	(___fldiv@grs+2)^0,f,c
  4623  0015EE  362E               	rlcf	(___fldiv@grs+3)^0,f,c
  4624  0015F0                     l4609:
  4625  0015F0  FFFF               	dw	65535	; assembler added errata NOP
  4626  0015F2  501C               	movf	___fldiv@a^0,w,c
  4627  0015F4  5C24               	subwf	___fldiv@rem^0,w,c
  4628  0015F6  501D               	movf	(___fldiv@a+1)^0,w,c
  4629  0015F8  5825               	subwfb	(___fldiv@rem+1)^0,w,c
  4630  0015FA  501E               	movf	(___fldiv@a+2)^0,w,c
  4631  0015FC  5826               	subwfb	(___fldiv@rem+2)^0,w,c
  4632  0015FE  501F               	movf	(___fldiv@a+3)^0,w,c
  4633  001600  5827               	subwfb	(___fldiv@rem+3)^0,w,c
  4634  001602  A0D8               	btfss	status,0,c
  4635  001604  EF06  F00B         	goto	u5161
  4636  001608  EF09  F00B         	goto	u5160
  4637  00160C                     u5161:
  4638  00160C  FFFF               	dw	65535	; assembler added errata NOP
  4639  00160E  EF13  F00B         	goto	l4615
  4640  001612                     u5160:
  4641  001612  FFFF               	dw	65535	; assembler added errata NOP
  4642  001614  8C2E               	bsf	(___fldiv@grs+3)^0,6,c
  4643  001616  501C               	movf	___fldiv@a^0,w,c
  4644  001618  5E24               	subwf	___fldiv@rem^0,f,c
  4645  00161A  501D               	movf	(___fldiv@a+1)^0,w,c
  4646  00161C  5A25               	subwfb	(___fldiv@rem+1)^0,f,c
  4647  00161E  501E               	movf	(___fldiv@a+2)^0,w,c
  4648  001620  5A26               	subwfb	(___fldiv@rem+2)^0,f,c
  4649  001622  501F               	movf	(___fldiv@a+3)^0,w,c
  4650  001624  5A27               	subwfb	(___fldiv@rem+3)^0,f,c
  4651  001626                     l4615:
  4652  001626  FFFF               	dw	65535	; assembler added errata NOP
  4653  001628  2A30               	incf	___fldiv@aexp^0,f,c
  4654  00162A                     l1092:
  4655  00162A  FFFF               	dw	65535	; assembler added errata NOP
  4656  00162C  0E19               	movlw	25
  4657  00162E  6430               	cpfsgt	___fldiv@aexp^0,c
  4658  001630  EF1C  F00B         	goto	u5171
  4659  001634  EF1F  F00B         	goto	u5170
  4660  001638                     u5171:
  4661  001638  FFFF               	dw	65535	; assembler added errata NOP
  4662  00163A  EFD3  F00A         	goto	l4601
  4663  00163E                     u5170:
  4664  00163E  FFFF               	dw	65535	; assembler added errata NOP
  4665  001640  5024               	movf	___fldiv@rem^0,w,c
  4666  001642  1025               	iorwf	(___fldiv@rem+1)^0,w,c
  4667  001644  1026               	iorwf	(___fldiv@rem+2)^0,w,c
  4668  001646  1027               	iorwf	(___fldiv@rem+3)^0,w,c
  4669  001648  B4D8               	btfsc	status,2,c
  4670  00164A  EF29  F00B         	goto	u5181
  4671  00164E  EF2C  F00B         	goto	u5180
  4672  001652                     u5181:
  4673  001652  FFFF               	dw	65535	; assembler added errata NOP
  4674  001654  EF49  F00B         	goto	l4627
  4675  001658                     u5180:
  4676  001658  FFFF               	dw	65535	; assembler added errata NOP
  4677  00165A  802B               	bsf	___fldiv@grs^0,0,c
  4678  00165C  EF49  F00B         	goto	l4627
  4679  001660                     l4621:
  4680  001660  FFFF               	dw	65535	; assembler added errata NOP
  4681  001662  90D8               	bcf	status,0,c
  4682  001664  3618               	rlcf	___fldiv@b^0,f,c
  4683  001666  3619               	rlcf	(___fldiv@b+1)^0,f,c
  4684  001668  361A               	rlcf	(___fldiv@b+2)^0,f,c
  4685  00166A  361B               	rlcf	(___fldiv@b+3)^0,f,c
  4686  00166C  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  4687  00166E  EF3B  F00B         	goto	u5191
  4688  001672  EF3E  F00B         	goto	u5190
  4689  001676                     u5191:
  4690  001676  FFFF               	dw	65535	; assembler added errata NOP
  4691  001678  EF40  F00B         	goto	l1101
  4692  00167C                     u5190:
  4693  00167C  FFFF               	dw	65535	; assembler added errata NOP
  4694  00167E  8018               	bsf	___fldiv@b^0,0,c
  4695  001680                     l1101:
  4696  001680  FFFF               	dw	65535	; assembler added errata NOP
  4697  001682  90D8               	bcf	status,0,c
  4698  001684  362B               	rlcf	___fldiv@grs^0,f,c
  4699  001686  362C               	rlcf	(___fldiv@grs+1)^0,f,c
  4700  001688  362D               	rlcf	(___fldiv@grs+2)^0,f,c
  4701  00168A  362E               	rlcf	(___fldiv@grs+3)^0,f,c
  4702  00168C  0629               	decf	___fldiv@new_exp^0,f,c
  4703  00168E  A0D8               	btfss	status,0,c
  4704  001690  062A               	decf	(___fldiv@new_exp+1)^0,f,c
  4705  001692                     l4627:
  4706  001692  FFFF               	dw	65535	; assembler added errata NOP
  4707  001694  AE1A               	btfss	(___fldiv@b+2)^0,7,c
  4708  001696  EF4F  F00B         	goto	u5201
  4709  00169A  EF52  F00B         	goto	u5200
  4710  00169E                     u5201:
  4711  00169E  FFFF               	dw	65535	; assembler added errata NOP
  4712  0016A0  EF30  F00B         	goto	l4621
  4713  0016A4                     u5200:
  4714  0016A4  FFFF               	dw	65535	; assembler added errata NOP
  4715  0016A6  0E00               	movlw	0
  4716  0016A8  6E30               	movwf	___fldiv@aexp^0,c
  4717  0016AA  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  4718  0016AC  EF5A  F00B         	goto	u5211
  4719  0016B0  EF5D  F00B         	goto	u5210
  4720  0016B4                     u5211:
  4721  0016B4  FFFF               	dw	65535	; assembler added errata NOP
  4722  0016B6  EF88  F00B         	goto	l1103
  4723  0016BA                     u5210:
  4724  0016BA  FFFF               	dw	65535	; assembler added errata NOP
  4725  0016BC  0EFF               	movlw	255
  4726  0016BE  142B               	andwf	___fldiv@grs^0,w,c
  4727  0016C0  6E20               	movwf	??___fldiv^0,c
  4728  0016C2  0EFF               	movlw	255
  4729  0016C4  142C               	andwf	(___fldiv@grs+1)^0,w,c
  4730  0016C6  6E21               	movwf	(??___fldiv+1)^0,c
  4731  0016C8  0EFF               	movlw	255
  4732  0016CA  142D               	andwf	(___fldiv@grs+2)^0,w,c
  4733  0016CC  6E22               	movwf	(??___fldiv+2)^0,c
  4734  0016CE  0E7F               	movlw	127
  4735  0016D0  142E               	andwf	(___fldiv@grs+3)^0,w,c
  4736  0016D2  6E23               	movwf	(??___fldiv+3)^0,c
  4737  0016D4  5020               	movf	??___fldiv^0,w,c
  4738  0016D6  1021               	iorwf	(??___fldiv+1)^0,w,c
  4739  0016D8  1022               	iorwf	(??___fldiv+2)^0,w,c
  4740  0016DA  1023               	iorwf	(??___fldiv+3)^0,w,c
  4741  0016DC  B4D8               	btfsc	status,2,c
  4742  0016DE  EF73  F00B         	goto	u5221
  4743  0016E2  EF76  F00B         	goto	u5220
  4744  0016E6                     u5221:
  4745  0016E6  FFFF               	dw	65535	; assembler added errata NOP
  4746  0016E8  EF7C  F00B         	goto	l1104
  4747  0016EC                     u5220:
  4748  0016EC  FFFF               	dw	65535	; assembler added errata NOP
  4749  0016EE                     l4635:
  4750  0016EE  FFFF               	dw	65535	; assembler added errata NOP
  4751  0016F0  0E01               	movlw	1
  4752  0016F2  6E30               	movwf	___fldiv@aexp^0,c
  4753  0016F4  EF88  F00B         	goto	l1103
  4754  0016F8                     l1104:
  4755  0016F8  FFFF               	dw	65535	; assembler added errata NOP
  4756  0016FA  A018               	btfss	___fldiv@b^0,0,c
  4757  0016FC  EF82  F00B         	goto	u5231
  4758  001700  EF85  F00B         	goto	u5230
  4759  001704                     u5231:
  4760  001704  FFFF               	dw	65535	; assembler added errata NOP
  4761  001706  EF88  F00B         	goto	l1103
  4762  00170A                     u5230:
  4763  00170A  FFFF               	dw	65535	; assembler added errata NOP
  4764  00170C  EF77  F00B         	goto	l4635
  4765  001710                     l1103:
  4766  001710  FFFF               	dw	65535	; assembler added errata NOP
  4767  001712  5030               	movf	___fldiv@aexp^0,w,c
  4768  001714  B4D8               	btfsc	status,2,c
  4769  001716  EF8F  F00B         	goto	u5241
  4770  00171A  EF92  F00B         	goto	u5240
  4771  00171E                     u5241:
  4772  00171E  FFFF               	dw	65535	; assembler added errata NOP
  4773  001720  EFB9  F00B         	goto	l4647
  4774  001724                     u5240:
  4775  001724  FFFF               	dw	65535	; assembler added errata NOP
  4776  001726  0E01               	movlw	1
  4777  001728  2618               	addwf	___fldiv@b^0,f,c
  4778  00172A  0E00               	movlw	0
  4779  00172C  2219               	addwfc	(___fldiv@b+1)^0,f,c
  4780  00172E  221A               	addwfc	(___fldiv@b+2)^0,f,c
  4781  001730  221B               	addwfc	(___fldiv@b+3)^0,f,c
  4782  001732  A01B               	btfss	(___fldiv@b+3)^0,0,c
  4783  001734  EF9E  F00B         	goto	u5251
  4784  001738  EFA1  F00B         	goto	u5250
  4785  00173C                     u5251:
  4786  00173C  FFFF               	dw	65535	; assembler added errata NOP
  4787  00173E  EFB9  F00B         	goto	l4647
  4788  001742                     u5250:
  4789  001742  FFFF               	dw	65535	; assembler added errata NOP
  4790  001744  C018  F020         	movff	___fldiv@b,??___fldiv
  4791  001748  C019  F021         	movff	___fldiv@b+1,??___fldiv+1
  4792  00174C  C01A  F022         	movff	___fldiv@b+2,??___fldiv+2
  4793  001750  C01B  F023         	movff	___fldiv@b+3,??___fldiv+3
  4794  001754  3423               	rlcf	(??___fldiv+3)^0,w,c
  4795  001756  3223               	rrcf	(??___fldiv+3)^0,f,c
  4796  001758  3222               	rrcf	(??___fldiv+2)^0,f,c
  4797  00175A  3221               	rrcf	(??___fldiv+1)^0,f,c
  4798  00175C  3220               	rrcf	??___fldiv^0,f,c
  4799  00175E  C020  F018         	movff	??___fldiv,___fldiv@b
  4800  001762  C021  F019         	movff	??___fldiv+1,___fldiv@b+1
  4801  001766  C022  F01A         	movff	??___fldiv+2,___fldiv@b+2
  4802  00176A  C023  F01B         	movff	??___fldiv+3,___fldiv@b+3
  4803  00176E  4A29               	infsnz	___fldiv@new_exp^0,f,c
  4804  001770  2A2A               	incf	(___fldiv@new_exp+1)^0,f,c
  4805  001772                     l4647:
  4806  001772  FFFF               	dw	65535	; assembler added errata NOP
  4807  001774  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4808  001776  EFC5  F00B         	goto	u5261
  4809  00177A  502A               	movf	(___fldiv@new_exp+1)^0,w,c
  4810  00177C  E109               	bnz	u5260
  4811  00177E  2829               	incf	___fldiv@new_exp^0,w,c
  4812  001780  A0D8               	btfss	status,0,c
  4813  001782  EFC5  F00B         	goto	u5261
  4814  001786  EFC8  F00B         	goto	u5260
  4815  00178A                     u5261:
  4816  00178A  FFFF               	dw	65535	; assembler added errata NOP
  4817  00178C  EFD4  F00B         	goto	l4651
  4818  001790                     u5260:
  4819  001790  FFFF               	dw	65535	; assembler added errata NOP
  4820  001792  0E00               	movlw	0
  4821  001794  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  4822  001796  6829               	setf	___fldiv@new_exp^0,c
  4823  001798  0E00               	movlw	0
  4824  00179A  6E18               	movwf	___fldiv@b^0,c
  4825  00179C  0E00               	movlw	0
  4826  00179E  6E19               	movwf	(___fldiv@b+1)^0,c
  4827  0017A0  0E00               	movlw	0
  4828  0017A2  6E1A               	movwf	(___fldiv@b+2)^0,c
  4829  0017A4  0E00               	movlw	0
  4830  0017A6  6E1B               	movwf	(___fldiv@b+3)^0,c
  4831  0017A8                     l4651:
  4832  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  4833  0017AA  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4834  0017AC  EFE3  F00B         	goto	u5270
  4835  0017B0  502A               	movf	(___fldiv@new_exp+1)^0,w,c
  4836  0017B2  E106               	bnz	u5271
  4837  0017B4  0429               	decf	___fldiv@new_exp^0,w,c
  4838  0017B6  B0D8               	btfsc	status,0,c
  4839  0017B8  EFE0  F00B         	goto	u5271
  4840  0017BC  EFE3  F00B         	goto	u5270
  4841  0017C0                     u5271:
  4842  0017C0  FFFF               	dw	65535	; assembler added errata NOP
  4843  0017C2  EFF2  F00B         	goto	l4655
  4844  0017C6                     u5270:
  4845  0017C6  FFFF               	dw	65535	; assembler added errata NOP
  4846  0017C8  0E00               	movlw	0
  4847  0017CA  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  4848  0017CC  0E00               	movlw	0
  4849  0017CE  6E29               	movwf	___fldiv@new_exp^0,c
  4850  0017D0  0E00               	movlw	0
  4851  0017D2  6E18               	movwf	___fldiv@b^0,c
  4852  0017D4  0E00               	movlw	0
  4853  0017D6  6E19               	movwf	(___fldiv@b+1)^0,c
  4854  0017D8  0E00               	movlw	0
  4855  0017DA  6E1A               	movwf	(___fldiv@b+2)^0,c
  4856  0017DC  0E00               	movlw	0
  4857  0017DE  6E1B               	movwf	(___fldiv@b+3)^0,c
  4858  0017E0  0E00               	movlw	0
  4859  0017E2  6E28               	movwf	___fldiv@sign^0,c
  4860  0017E4                     l4655:
  4861  0017E4  FFFF               	dw	65535	; assembler added errata NOP
  4862  0017E6  C029  F02F         	movff	___fldiv@new_exp,___fldiv@bexp
  4863  0017EA  A02F               	btfss	___fldiv@bexp^0,0,c
  4864  0017EC  EFFA  F00B         	goto	u5281
  4865  0017F0  EFFD  F00B         	goto	u5280
  4866  0017F4                     u5281:
  4867  0017F4  FFFF               	dw	65535	; assembler added errata NOP
  4868  0017F6  EF01  F00C         	goto	l4661
  4869  0017FA                     u5280:
  4870  0017FA  FFFF               	dw	65535	; assembler added errata NOP
  4871  0017FC  8E1A               	bsf	(___fldiv@b+2)^0,7,c
  4872  0017FE  EF03  F00C         	goto	l4663
  4873  001802                     l4661:
  4874  001802  FFFF               	dw	65535	; assembler added errata NOP
  4875  001804  9E1A               	bcf	(___fldiv@b+2)^0,7,c
  4876  001806                     l4663:
  4877  001806  FFFF               	dw	65535	; assembler added errata NOP
  4878  001808  90D8               	bcf	status,0,c
  4879  00180A  302F               	rrcf	___fldiv@bexp^0,w,c
  4880  00180C  6E1B               	movwf	(___fldiv@b+3)^0,c
  4881  00180E  EF87  F00A         	goto	l4577
  4882  001812                     l1090:
  4883  001812  FFFF               	dw	65535	; assembler added errata NOP
  4884  001814  0012               	return		;funcret
  4885  001816  FFFF               	dw	65535	; errata NOP
  4886  001818                     __end_of___fldiv:
  4887                           	callstack 0
  4888                           
  4889 ;; *************** function _Z_axis *****************
  4890 ;; Defined at:
  4891 ;;		line 464 in file "main.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  direction       1    wreg     unsigned char 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  direction       1   15[COMRAM] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4905 ;;      Params:         0       0       0       0       0       0       0
  4906 ;;      Locals:         1       0       0       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0
  4908 ;;      Totals:         1       0       0       0       0       0       0
  4909 ;;Total ram usage:        1 bytes
  4910 ;; Hardware stack levels used: 1
  4911 ;; Hardware stack levels required when called: 3
  4912 ;; This function calls:
  4913 ;;		_ms_delay
  4914 ;; This function is called by:
  4915 ;;		_pick_and_place
  4916 ;;		_return_to_initial
  4917 ;;		_Z_axis_and_Tweezer
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text11
  4922  00290C                     __ptext11:
  4923                           	callstack 0
  4924  00290C                     _Z_axis:
  4925                           	callstack 0
  4926  00290C  FFFF               	dw	65535	; assembler added errata NOP
  4927                           
  4928                           ;incstack = 0
  4929                           ;Z_axis@direction stored from wreg
  4930  00290E  6E10               	movwf	Z_axis@direction^0,c
  4931  002910                     
  4932                           ;main.c: 465:     if(!New_char_RX){
  4933  002910  5074               	movf	_New_char_RX^0,w,c
  4934  002912  A4D8               	btfss	status,2,c
  4935  002914  EF8E  F014         	goto	u4931
  4936  002918  EF91  F014         	goto	u4930
  4937  00291C                     u4931:
  4938  00291C  FFFF               	dw	65535	; assembler added errata NOP
  4939  00291E  EF00  F015         	goto	l4465
  4940  002922                     u4930:
  4941  002922  FFFF               	dw	65535	; assembler added errata NOP
  4942  002924                     
  4943                           ;main.c: 466:         if (direction == 0){
  4944  002924  5010               	movf	Z_axis@direction^0,w,c
  4945  002926  A4D8               	btfss	status,2,c
  4946  002928  EF98  F014         	goto	u4941
  4947  00292C  EF9B  F014         	goto	u4940
  4948  002930                     u4941:
  4949  002930  FFFF               	dw	65535	; assembler added errata NOP
  4950  002932  EFC8  F014         	goto	l4447
  4951  002936                     u4940:
  4952  002936  FFFF               	dw	65535	; assembler added errata NOP
  4953  002938                     
  4954                           ;main.c: 467:             PORTD = 0b00000011;
  4955  002938  0E03               	movlw	3
  4956  00293A  6E83               	movwf	131,c	;volatile
  4957  00293C                     
  4958                           ;main.c: 468:             ms_delay(1);
  4959  00293C  0E00               	movlw	0
  4960  00293E  6E0B               	movwf	(ms_delay@val+1)^0,c
  4961  002940  0E01               	movlw	1
  4962  002942  6E0A               	movwf	ms_delay@val^0,c
  4963  002944  EC79  F018         	call	_ms_delay	;wreg free
  4964  002948                     
  4965                           ;main.c: 469:             PORTD = 0b00000110;
  4966  002948  0E06               	movlw	6
  4967  00294A  6E83               	movwf	131,c	;volatile
  4968                           
  4969                           ;main.c: 470:             ms_delay(1);
  4970  00294C  0E00               	movlw	0
  4971  00294E  6E0B               	movwf	(ms_delay@val+1)^0,c
  4972  002950  0E01               	movlw	1
  4973  002952  6E0A               	movwf	ms_delay@val^0,c
  4974  002954  EC79  F018         	call	_ms_delay	;wreg free
  4975  002958                     
  4976                           ;main.c: 471:             PORTD = 0b00001100;
  4977  002958  0E0C               	movlw	12
  4978  00295A  6E83               	movwf	131,c	;volatile
  4979  00295C                     
  4980                           ;main.c: 472:             ms_delay(1);
  4981  00295C  0E00               	movlw	0
  4982  00295E  6E0B               	movwf	(ms_delay@val+1)^0,c
  4983  002960  0E01               	movlw	1
  4984  002962  6E0A               	movwf	ms_delay@val^0,c
  4985  002964  EC79  F018         	call	_ms_delay	;wreg free
  4986                           
  4987                           ;main.c: 473:             PORTD = 0b00001001;
  4988  002968  0E09               	movlw	9
  4989  00296A  6E83               	movwf	131,c	;volatile
  4990  00296C                     
  4991                           ;main.c: 474:             ms_delay(1);
  4992  00296C  0E00               	movlw	0
  4993  00296E  6E0B               	movwf	(ms_delay@val+1)^0,c
  4994  002970  0E01               	movlw	1
  4995  002972  6E0A               	movwf	ms_delay@val^0,c
  4996  002974  EC79  F018         	call	_ms_delay	;wreg free
  4997  002978                     
  4998                           ;main.c: 475:             PORTD = 0b00000011;
  4999  002978  0E03               	movlw	3
  5000  00297A  6E83               	movwf	131,c	;volatile
  5001                           
  5002                           ;main.c: 476:             ms_delay(5);
  5003  00297C  0E00               	movlw	0
  5004  00297E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5005  002980  0E05               	movlw	5
  5006  002982  6E0A               	movwf	ms_delay@val^0,c
  5007  002984  EC79  F018         	call	_ms_delay	;wreg free
  5008  002988                     
  5009                           ;main.c: 477:             Step_Z--;
  5010  002988  0100               	movlb	0	; () banked
  5011  00298A  07B2               	decf	_Step_Z& (0+255),f,b
  5012  00298C  A0D8               	btfss	status,0,c
  5013  00298E  07B3               	decf	(_Step_Z+1)& (0+255),f,b
  5014  002990                     l4447:
  5015  002990  FFFF               	dw	65535	; assembler added errata NOP
  5016                           
  5017                           ;main.c: 479:         if (direction == 1){
  5018  002992  0410               	decf	Z_axis@direction^0,w,c
  5019  002994  A4D8               	btfss	status,2,c
  5020  002996  EFCF  F014         	goto	u4951
  5021  00299A  EFD2  F014         	goto	u4950
  5022  00299E                     u4951:
  5023  00299E  FFFF               	dw	65535	; assembler added errata NOP
  5024  0029A0  EF03  F015         	goto	l343
  5025  0029A4                     u4950:
  5026  0029A4  FFFF               	dw	65535	; assembler added errata NOP
  5027  0029A6                     
  5028                           ;main.c: 480:             PORTD = 0b00001001;
  5029  0029A6  0E09               	movlw	9
  5030  0029A8  6E83               	movwf	131,c	;volatile
  5031  0029AA                     
  5032                           ;main.c: 481:             ms_delay(1);
  5033  0029AA  0E00               	movlw	0
  5034  0029AC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5035  0029AE  0E01               	movlw	1
  5036  0029B0  6E0A               	movwf	ms_delay@val^0,c
  5037  0029B2  EC79  F018         	call	_ms_delay	;wreg free
  5038  0029B6                     
  5039                           ;main.c: 482:             PORTD = 0b00001100;
  5040  0029B6  0E0C               	movlw	12
  5041  0029B8  6E83               	movwf	131,c	;volatile
  5042                           
  5043                           ;main.c: 483:             ms_delay(1);
  5044  0029BA  0E00               	movlw	0
  5045  0029BC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5046  0029BE  0E01               	movlw	1
  5047  0029C0  6E0A               	movwf	ms_delay@val^0,c
  5048  0029C2  EC79  F018         	call	_ms_delay	;wreg free
  5049  0029C6                     
  5050                           ;main.c: 484:             PORTD = 0b00000110;
  5051  0029C6  0E06               	movlw	6
  5052  0029C8  6E83               	movwf	131,c	;volatile
  5053  0029CA                     
  5054                           ;main.c: 485:             ms_delay(1);
  5055  0029CA  0E00               	movlw	0
  5056  0029CC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5057  0029CE  0E01               	movlw	1
  5058  0029D0  6E0A               	movwf	ms_delay@val^0,c
  5059  0029D2  EC79  F018         	call	_ms_delay	;wreg free
  5060                           
  5061                           ;main.c: 486:             PORTD = 0b00000011;
  5062  0029D6  0E03               	movlw	3
  5063  0029D8  6E83               	movwf	131,c	;volatile
  5064  0029DA                     
  5065                           ;main.c: 487:             ms_delay(1);
  5066  0029DA  0E00               	movlw	0
  5067  0029DC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5068  0029DE  0E01               	movlw	1
  5069  0029E0  6E0A               	movwf	ms_delay@val^0,c
  5070  0029E2  EC79  F018         	call	_ms_delay	;wreg free
  5071  0029E6                     
  5072                           ;main.c: 488:             PORTD = 0b00001001;
  5073  0029E6  0E09               	movlw	9
  5074  0029E8  6E83               	movwf	131,c	;volatile
  5075                           
  5076                           ;main.c: 489:             ms_delay(5);
  5077  0029EA  0E00               	movlw	0
  5078  0029EC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5079  0029EE  0E05               	movlw	5
  5080  0029F0  6E0A               	movwf	ms_delay@val^0,c
  5081  0029F2  EC79  F018         	call	_ms_delay	;wreg free
  5082  0029F6                     
  5083                           ;main.c: 490:             Step_Z++;
  5084  0029F6  0100               	movlb	0	; () banked
  5085  0029F8  4BB2               	infsnz	_Step_Z& (0+255),f,b
  5086  0029FA  2BB3               	incf	(_Step_Z+1)& (0+255),f,b
  5087  0029FC  EF03  F015         	goto	l343
  5088  002A00                     l4465:
  5089  002A00  FFFF               	dw	65535	; assembler added errata NOP
  5090                           
  5091                           ;main.c: 494:         stop=1;
  5092  002A02  0E01               	movlw	1
  5093  002A04  6E72               	movwf	_stop^0,c
  5094  002A06                     l343:
  5095  002A06  FFFF               	dw	65535	; assembler added errata NOP
  5096  002A08  0012               	return		;funcret
  5097  002A0A  FFFF               	dw	65535	; errata NOP
  5098  002A0C                     __end_of_Z_axis:
  5099                           	callstack 0
  5100                           
  5101 ;; *************** function _Y_axis *****************
  5102 ;; Defined at:
  5103 ;;		line 430 in file "main.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  direction       1    wreg     unsigned char 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  direction       1   15[COMRAM] unsigned char 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2, status,0, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5117 ;;      Params:         0       0       0       0       0       0       0
  5118 ;;      Locals:         1       0       0       0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0
  5120 ;;      Totals:         1       0       0       0       0       0       0
  5121 ;;Total ram usage:        1 bytes
  5122 ;; Hardware stack levels used: 1
  5123 ;; Hardware stack levels required when called: 3
  5124 ;; This function calls:
  5125 ;;		_ms_delay
  5126 ;; This function is called by:
  5127 ;;		_pick_and_place
  5128 ;;		_return_to_initial
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text12
  5133  002A0C                     __ptext12:
  5134                           	callstack 0
  5135  002A0C                     _Y_axis:
  5136                           	callstack 0
  5137  002A0C  FFFF               	dw	65535	; assembler added errata NOP
  5138                           
  5139                           ;incstack = 0
  5140                           ;Y_axis@direction stored from wreg
  5141  002A0E  6E10               	movwf	Y_axis@direction^0,c
  5142  002A10                     
  5143                           ;main.c: 431:     if(!New_char_RX){
  5144  002A10  5074               	movf	_New_char_RX^0,w,c
  5145  002A12  A4D8               	btfss	status,2,c
  5146  002A14  EF0E  F015         	goto	u4901
  5147  002A18  EF11  F015         	goto	u4900
  5148  002A1C                     u4901:
  5149  002A1C  FFFF               	dw	65535	; assembler added errata NOP
  5150  002A1E  EF80  F015         	goto	l4425
  5151  002A22                     u4900:
  5152  002A22  FFFF               	dw	65535	; assembler added errata NOP
  5153  002A24                     
  5154                           ;main.c: 432:         if (direction == 0){
  5155  002A24  5010               	movf	Y_axis@direction^0,w,c
  5156  002A26  A4D8               	btfss	status,2,c
  5157  002A28  EF18  F015         	goto	u4911
  5158  002A2C  EF1B  F015         	goto	u4910
  5159  002A30                     u4911:
  5160  002A30  FFFF               	dw	65535	; assembler added errata NOP
  5161  002A32  EF48  F015         	goto	l4407
  5162  002A36                     u4910:
  5163  002A36  FFFF               	dw	65535	; assembler added errata NOP
  5164  002A38                     
  5165                           ;main.c: 433:             PORTB = 0b00110000;
  5166  002A38  0E30               	movlw	48
  5167  002A3A  6E81               	movwf	129,c	;volatile
  5168  002A3C                     
  5169                           ;main.c: 434:             ms_delay(1);
  5170  002A3C  0E00               	movlw	0
  5171  002A3E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5172  002A40  0E01               	movlw	1
  5173  002A42  6E0A               	movwf	ms_delay@val^0,c
  5174  002A44  EC79  F018         	call	_ms_delay	;wreg free
  5175  002A48                     
  5176                           ;main.c: 435:             PORTB = 0b01100000;
  5177  002A48  0E60               	movlw	96
  5178  002A4A  6E81               	movwf	129,c	;volatile
  5179                           
  5180                           ;main.c: 436:             ms_delay(1);
  5181  002A4C  0E00               	movlw	0
  5182  002A4E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5183  002A50  0E01               	movlw	1
  5184  002A52  6E0A               	movwf	ms_delay@val^0,c
  5185  002A54  EC79  F018         	call	_ms_delay	;wreg free
  5186  002A58                     
  5187                           ;main.c: 437:             PORTB = 0b11000000;
  5188  002A58  0EC0               	movlw	192
  5189  002A5A  6E81               	movwf	129,c	;volatile
  5190  002A5C                     
  5191                           ;main.c: 438:             ms_delay(1);
  5192  002A5C  0E00               	movlw	0
  5193  002A5E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5194  002A60  0E01               	movlw	1
  5195  002A62  6E0A               	movwf	ms_delay@val^0,c
  5196  002A64  EC79  F018         	call	_ms_delay	;wreg free
  5197                           
  5198                           ;main.c: 439:             PORTB = 0b10010000;
  5199  002A68  0E90               	movlw	144
  5200  002A6A  6E81               	movwf	129,c	;volatile
  5201  002A6C                     
  5202                           ;main.c: 440:             ms_delay(1);
  5203  002A6C  0E00               	movlw	0
  5204  002A6E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5205  002A70  0E01               	movlw	1
  5206  002A72  6E0A               	movwf	ms_delay@val^0,c
  5207  002A74  EC79  F018         	call	_ms_delay	;wreg free
  5208  002A78                     
  5209                           ;main.c: 441:             PORTB = 0b00110000;
  5210  002A78  0E30               	movlw	48
  5211  002A7A  6E81               	movwf	129,c	;volatile
  5212                           
  5213                           ;main.c: 442:             ms_delay(1);
  5214  002A7C  0E00               	movlw	0
  5215  002A7E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5216  002A80  0E01               	movlw	1
  5217  002A82  6E0A               	movwf	ms_delay@val^0,c
  5218  002A84  EC79  F018         	call	_ms_delay	;wreg free
  5219  002A88                     
  5220                           ;main.c: 443:             Step_Y--;
  5221  002A88  0100               	movlb	0	; () banked
  5222  002A8A  07B4               	decf	_Step_Y& (0+255),f,b
  5223  002A8C  A0D8               	btfss	status,0,c
  5224  002A8E  07B5               	decf	(_Step_Y+1)& (0+255),f,b
  5225  002A90                     l4407:
  5226  002A90  FFFF               	dw	65535	; assembler added errata NOP
  5227                           
  5228                           ;main.c: 445:         if (direction == 1){
  5229  002A92  0410               	decf	Y_axis@direction^0,w,c
  5230  002A94  A4D8               	btfss	status,2,c
  5231  002A96  EF4F  F015         	goto	u4921
  5232  002A9A  EF52  F015         	goto	u4920
  5233  002A9E                     u4921:
  5234  002A9E  FFFF               	dw	65535	; assembler added errata NOP
  5235  002AA0  EF83  F015         	goto	l336
  5236  002AA4                     u4920:
  5237  002AA4  FFFF               	dw	65535	; assembler added errata NOP
  5238  002AA6                     
  5239                           ;main.c: 446:             PORTB = 0b10010000;
  5240  002AA6  0E90               	movlw	144
  5241  002AA8  6E81               	movwf	129,c	;volatile
  5242  002AAA                     
  5243                           ;main.c: 447:             ms_delay(1);
  5244  002AAA  0E00               	movlw	0
  5245  002AAC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5246  002AAE  0E01               	movlw	1
  5247  002AB0  6E0A               	movwf	ms_delay@val^0,c
  5248  002AB2  EC79  F018         	call	_ms_delay	;wreg free
  5249  002AB6                     
  5250                           ;main.c: 448:             PORTB = 0b11000000;
  5251  002AB6  0EC0               	movlw	192
  5252  002AB8  6E81               	movwf	129,c	;volatile
  5253                           
  5254                           ;main.c: 449:             ms_delay(1);
  5255  002ABA  0E00               	movlw	0
  5256  002ABC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5257  002ABE  0E01               	movlw	1
  5258  002AC0  6E0A               	movwf	ms_delay@val^0,c
  5259  002AC2  EC79  F018         	call	_ms_delay	;wreg free
  5260  002AC6                     
  5261                           ;main.c: 450:             PORTB = 0b01100000;
  5262  002AC6  0E60               	movlw	96
  5263  002AC8  6E81               	movwf	129,c	;volatile
  5264  002ACA                     
  5265                           ;main.c: 451:             ms_delay(1);
  5266  002ACA  0E00               	movlw	0
  5267  002ACC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5268  002ACE  0E01               	movlw	1
  5269  002AD0  6E0A               	movwf	ms_delay@val^0,c
  5270  002AD2  EC79  F018         	call	_ms_delay	;wreg free
  5271                           
  5272                           ;main.c: 452:             PORTB = 0b00110000;
  5273  002AD6  0E30               	movlw	48
  5274  002AD8  6E81               	movwf	129,c	;volatile
  5275  002ADA                     
  5276                           ;main.c: 453:             ms_delay(1);
  5277  002ADA  0E00               	movlw	0
  5278  002ADC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5279  002ADE  0E01               	movlw	1
  5280  002AE0  6E0A               	movwf	ms_delay@val^0,c
  5281  002AE2  EC79  F018         	call	_ms_delay	;wreg free
  5282  002AE6                     
  5283                           ;main.c: 454:             PORTB = 0b10010000;
  5284  002AE6  0E90               	movlw	144
  5285  002AE8  6E81               	movwf	129,c	;volatile
  5286                           
  5287                           ;main.c: 455:             ms_delay(1);
  5288  002AEA  0E00               	movlw	0
  5289  002AEC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5290  002AEE  0E01               	movlw	1
  5291  002AF0  6E0A               	movwf	ms_delay@val^0,c
  5292  002AF2  EC79  F018         	call	_ms_delay	;wreg free
  5293  002AF6                     
  5294                           ;main.c: 456:             Step_Y++;
  5295  002AF6  0100               	movlb	0	; () banked
  5296  002AF8  4BB4               	infsnz	_Step_Y& (0+255),f,b
  5297  002AFA  2BB5               	incf	(_Step_Y+1)& (0+255),f,b
  5298  002AFC  EF83  F015         	goto	l336
  5299  002B00                     l4425:
  5300  002B00  FFFF               	dw	65535	; assembler added errata NOP
  5301                           
  5302                           ;main.c: 460:         stop=1;
  5303  002B02  0E01               	movlw	1
  5304  002B04  6E72               	movwf	_stop^0,c
  5305  002B06                     l336:
  5306  002B06  FFFF               	dw	65535	; assembler added errata NOP
  5307  002B08  0012               	return		;funcret
  5308  002B0A  FFFF               	dw	65535	; errata NOP
  5309  002B0C                     __end_of_Y_axis:
  5310                           	callstack 0
  5311                           
  5312 ;; *************** function _X_axis *****************
  5313 ;; Defined at:
  5314 ;;		line 396 in file "main.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  direction       1    wreg     unsigned char 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  direction       1   15[COMRAM] unsigned char 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, status,2, status,0, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5328 ;;      Params:         0       0       0       0       0       0       0
  5329 ;;      Locals:         1       0       0       0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0
  5331 ;;      Totals:         1       0       0       0       0       0       0
  5332 ;;Total ram usage:        1 bytes
  5333 ;; Hardware stack levels used: 1
  5334 ;; Hardware stack levels required when called: 3
  5335 ;; This function calls:
  5336 ;;		_ms_delay
  5337 ;; This function is called by:
  5338 ;;		_pick_and_place
  5339 ;;		_return_to_initial
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text13
  5344  002B0C                     __ptext13:
  5345                           	callstack 0
  5346  002B0C                     _X_axis:
  5347                           	callstack 0
  5348  002B0C  FFFF               	dw	65535	; assembler added errata NOP
  5349                           
  5350                           ;incstack = 0
  5351                           ;X_axis@direction stored from wreg
  5352  002B0E  6E10               	movwf	X_axis@direction^0,c
  5353  002B10                     
  5354                           ;main.c: 397:     if(!New_char_RX){
  5355  002B10  5074               	movf	_New_char_RX^0,w,c
  5356  002B12  A4D8               	btfss	status,2,c
  5357  002B14  EF8E  F015         	goto	u4871
  5358  002B18  EF91  F015         	goto	u4870
  5359  002B1C                     u4871:
  5360  002B1C  FFFF               	dw	65535	; assembler added errata NOP
  5361  002B1E  EF00  F016         	goto	l4385
  5362  002B22                     u4870:
  5363  002B22  FFFF               	dw	65535	; assembler added errata NOP
  5364  002B24                     
  5365                           ;main.c: 398:         if (direction == 0){
  5366  002B24  5010               	movf	X_axis@direction^0,w,c
  5367  002B26  A4D8               	btfss	status,2,c
  5368  002B28  EF98  F015         	goto	u4881
  5369  002B2C  EF9B  F015         	goto	u4880
  5370  002B30                     u4881:
  5371  002B30  FFFF               	dw	65535	; assembler added errata NOP
  5372  002B32  EFC8  F015         	goto	l4367
  5373  002B36                     u4880:
  5374  002B36  FFFF               	dw	65535	; assembler added errata NOP
  5375  002B38                     
  5376                           ;main.c: 399:             PORTA = 0b00000011;
  5377  002B38  0E03               	movlw	3
  5378  002B3A  6E80               	movwf	128,c	;volatile
  5379  002B3C                     
  5380                           ;main.c: 400:             ms_delay(1);
  5381  002B3C  0E00               	movlw	0
  5382  002B3E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5383  002B40  0E01               	movlw	1
  5384  002B42  6E0A               	movwf	ms_delay@val^0,c
  5385  002B44  EC79  F018         	call	_ms_delay	;wreg free
  5386  002B48                     
  5387                           ;main.c: 401:             PORTA = 0b00000110;
  5388  002B48  0E06               	movlw	6
  5389  002B4A  6E80               	movwf	128,c	;volatile
  5390                           
  5391                           ;main.c: 402:             ms_delay(1);
  5392  002B4C  0E00               	movlw	0
  5393  002B4E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5394  002B50  0E01               	movlw	1
  5395  002B52  6E0A               	movwf	ms_delay@val^0,c
  5396  002B54  EC79  F018         	call	_ms_delay	;wreg free
  5397  002B58                     
  5398                           ;main.c: 403:             PORTA = 0b00001100;
  5399  002B58  0E0C               	movlw	12
  5400  002B5A  6E80               	movwf	128,c	;volatile
  5401  002B5C                     
  5402                           ;main.c: 404:             ms_delay(1);
  5403  002B5C  0E00               	movlw	0
  5404  002B5E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5405  002B60  0E01               	movlw	1
  5406  002B62  6E0A               	movwf	ms_delay@val^0,c
  5407  002B64  EC79  F018         	call	_ms_delay	;wreg free
  5408                           
  5409                           ;main.c: 405:             PORTA = 0b00001001;
  5410  002B68  0E09               	movlw	9
  5411  002B6A  6E80               	movwf	128,c	;volatile
  5412  002B6C                     
  5413                           ;main.c: 406:             ms_delay(1);
  5414  002B6C  0E00               	movlw	0
  5415  002B6E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5416  002B70  0E01               	movlw	1
  5417  002B72  6E0A               	movwf	ms_delay@val^0,c
  5418  002B74  EC79  F018         	call	_ms_delay	;wreg free
  5419  002B78                     
  5420                           ;main.c: 407:             PORTA = 0b00000011;
  5421  002B78  0E03               	movlw	3
  5422  002B7A  6E80               	movwf	128,c	;volatile
  5423                           
  5424                           ;main.c: 408:             ms_delay(1);
  5425  002B7C  0E00               	movlw	0
  5426  002B7E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5427  002B80  0E01               	movlw	1
  5428  002B82  6E0A               	movwf	ms_delay@val^0,c
  5429  002B84  EC79  F018         	call	_ms_delay	;wreg free
  5430  002B88                     
  5431                           ;main.c: 409:             Step_X--;
  5432  002B88  0100               	movlb	0	; () banked
  5433  002B8A  07B6               	decf	_Step_X& (0+255),f,b
  5434  002B8C  A0D8               	btfss	status,0,c
  5435  002B8E  07B7               	decf	(_Step_X+1)& (0+255),f,b
  5436  002B90                     l4367:
  5437  002B90  FFFF               	dw	65535	; assembler added errata NOP
  5438                           
  5439                           ;main.c: 411:         if (direction == 1){
  5440  002B92  0410               	decf	X_axis@direction^0,w,c
  5441  002B94  A4D8               	btfss	status,2,c
  5442  002B96  EFCF  F015         	goto	u4891
  5443  002B9A  EFD2  F015         	goto	u4890
  5444  002B9E                     u4891:
  5445  002B9E  FFFF               	dw	65535	; assembler added errata NOP
  5446  002BA0  EF03  F016         	goto	l329
  5447  002BA4                     u4890:
  5448  002BA4  FFFF               	dw	65535	; assembler added errata NOP
  5449  002BA6                     
  5450                           ;main.c: 412:             PORTA = 0b00001001;
  5451  002BA6  0E09               	movlw	9
  5452  002BA8  6E80               	movwf	128,c	;volatile
  5453  002BAA                     
  5454                           ;main.c: 413:             ms_delay(1);
  5455  002BAA  0E00               	movlw	0
  5456  002BAC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5457  002BAE  0E01               	movlw	1
  5458  002BB0  6E0A               	movwf	ms_delay@val^0,c
  5459  002BB2  EC79  F018         	call	_ms_delay	;wreg free
  5460  002BB6                     
  5461                           ;main.c: 414:             PORTA = 0b00001100;
  5462  002BB6  0E0C               	movlw	12
  5463  002BB8  6E80               	movwf	128,c	;volatile
  5464                           
  5465                           ;main.c: 415:             ms_delay(1);
  5466  002BBA  0E00               	movlw	0
  5467  002BBC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5468  002BBE  0E01               	movlw	1
  5469  002BC0  6E0A               	movwf	ms_delay@val^0,c
  5470  002BC2  EC79  F018         	call	_ms_delay	;wreg free
  5471  002BC6                     
  5472                           ;main.c: 416:             PORTA = 0b00000110;
  5473  002BC6  0E06               	movlw	6
  5474  002BC8  6E80               	movwf	128,c	;volatile
  5475  002BCA                     
  5476                           ;main.c: 417:             ms_delay(1);
  5477  002BCA  0E00               	movlw	0
  5478  002BCC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5479  002BCE  0E01               	movlw	1
  5480  002BD0  6E0A               	movwf	ms_delay@val^0,c
  5481  002BD2  EC79  F018         	call	_ms_delay	;wreg free
  5482                           
  5483                           ;main.c: 418:             PORTA = 0b00000011;
  5484  002BD6  0E03               	movlw	3
  5485  002BD8  6E80               	movwf	128,c	;volatile
  5486  002BDA                     
  5487                           ;main.c: 419:             ms_delay(1);
  5488  002BDA  0E00               	movlw	0
  5489  002BDC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5490  002BDE  0E01               	movlw	1
  5491  002BE0  6E0A               	movwf	ms_delay@val^0,c
  5492  002BE2  EC79  F018         	call	_ms_delay	;wreg free
  5493  002BE6                     
  5494                           ;main.c: 420:             PORTA = 0b00001001;
  5495  002BE6  0E09               	movlw	9
  5496  002BE8  6E80               	movwf	128,c	;volatile
  5497                           
  5498                           ;main.c: 421:             ms_delay(1);
  5499  002BEA  0E00               	movlw	0
  5500  002BEC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5501  002BEE  0E01               	movlw	1
  5502  002BF0  6E0A               	movwf	ms_delay@val^0,c
  5503  002BF2  EC79  F018         	call	_ms_delay	;wreg free
  5504  002BF6                     
  5505                           ;main.c: 422:             Step_X++;
  5506  002BF6  0100               	movlb	0	; () banked
  5507  002BF8  4BB6               	infsnz	_Step_X& (0+255),f,b
  5508  002BFA  2BB7               	incf	(_Step_X+1)& (0+255),f,b
  5509  002BFC  EF03  F016         	goto	l329
  5510  002C00                     l4385:
  5511  002C00  FFFF               	dw	65535	; assembler added errata NOP
  5512                           
  5513                           ;main.c: 426:         stop=1;
  5514  002C02  0E01               	movlw	1
  5515  002C04  6E72               	movwf	_stop^0,c
  5516  002C06                     l329:
  5517  002C06  FFFF               	dw	65535	; assembler added errata NOP
  5518  002C08  0012               	return		;funcret
  5519  002C0A  FFFF               	dw	65535	; errata NOP
  5520  002C0C                     __end_of_X_axis:
  5521                           	callstack 0
  5522                           
  5523 ;; *************** function _Twister *****************
  5524 ;; Defined at:
  5525 ;;		line 498 in file "main.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;  direction       1    wreg     unsigned char 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  direction       1   15[COMRAM] unsigned char 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5539 ;;      Params:         0       0       0       0       0       0       0
  5540 ;;      Locals:         1       0       0       0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0
  5542 ;;      Totals:         1       0       0       0       0       0       0
  5543 ;;Total ram usage:        1 bytes
  5544 ;; Hardware stack levels used: 1
  5545 ;; Hardware stack levels required when called: 3
  5546 ;; This function calls:
  5547 ;;		_ms_delay
  5548 ;; This function is called by:
  5549 ;;		_pick_and_place
  5550 ;;		_return_to_initial
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text14
  5555  002D06                     __ptext14:
  5556                           	callstack 0
  5557  002D06                     _Twister:
  5558                           	callstack 0
  5559  002D06  FFFF               	dw	65535	; assembler added errata NOP
  5560                           
  5561                           ;incstack = 0
  5562                           ;Twister@direction stored from wreg
  5563  002D08  6E10               	movwf	Twister@direction^0,c
  5564  002D0A                     
  5565                           ;main.c: 499:     if(!New_char_RX){
  5566  002D0A  5074               	movf	_New_char_RX^0,w,c
  5567  002D0C  A4D8               	btfss	status,2,c
  5568  002D0E  EF8B  F016         	goto	u4961
  5569  002D12  EF8E  F016         	goto	u4960
  5570  002D16                     u4961:
  5571  002D16  FFFF               	dw	65535	; assembler added errata NOP
  5572  002D18  EFED  F016         	goto	l4501
  5573  002D1C                     u4960:
  5574  002D1C  FFFF               	dw	65535	; assembler added errata NOP
  5575  002D1E                     
  5576                           ;main.c: 500:         if (direction == 0){
  5577  002D1E  5010               	movf	Twister@direction^0,w,c
  5578  002D20  A4D8               	btfss	status,2,c
  5579  002D22  EF95  F016         	goto	u4971
  5580  002D26  EF98  F016         	goto	u4970
  5581  002D2A                     u4971:
  5582  002D2A  FFFF               	dw	65535	; assembler added errata NOP
  5583  002D2C  EFBD  F016         	goto	l4485
  5584  002D30                     u4970:
  5585  002D30  FFFF               	dw	65535	; assembler added errata NOP
  5586  002D32                     
  5587                           ;main.c: 501:             PORTD = 0b00110000;
  5588  002D32  0E30               	movlw	48
  5589  002D34  6E83               	movwf	131,c	;volatile
  5590  002D36                     
  5591                           ;main.c: 502:             ms_delay(1);
  5592  002D36  0E00               	movlw	0
  5593  002D38  6E0B               	movwf	(ms_delay@val+1)^0,c
  5594  002D3A  0E01               	movlw	1
  5595  002D3C  6E0A               	movwf	ms_delay@val^0,c
  5596  002D3E  EC79  F018         	call	_ms_delay	;wreg free
  5597  002D42                     
  5598                           ;main.c: 503:             PORTD = 0b11000000;
  5599  002D42  0EC0               	movlw	192
  5600  002D44  6E83               	movwf	131,c	;volatile
  5601                           
  5602                           ;main.c: 504:             ms_delay(1);
  5603  002D46  0E00               	movlw	0
  5604  002D48  6E0B               	movwf	(ms_delay@val+1)^0,c
  5605  002D4A  0E01               	movlw	1
  5606  002D4C  6E0A               	movwf	ms_delay@val^0,c
  5607  002D4E  EC79  F018         	call	_ms_delay	;wreg free
  5608  002D52                     
  5609                           ;main.c: 505:             PORTD = 0b10010000;
  5610  002D52  0E90               	movlw	144
  5611  002D54  6E83               	movwf	131,c	;volatile
  5612  002D56                     
  5613                           ;main.c: 506:             ms_delay(1);
  5614  002D56  0E00               	movlw	0
  5615  002D58  6E0B               	movwf	(ms_delay@val+1)^0,c
  5616  002D5A  0E01               	movlw	1
  5617  002D5C  6E0A               	movwf	ms_delay@val^0,c
  5618  002D5E  EC79  F018         	call	_ms_delay	;wreg free
  5619                           
  5620                           ;main.c: 507:             PORTD = 0b00110000;
  5621  002D62  0E30               	movlw	48
  5622  002D64  6E83               	movwf	131,c	;volatile
  5623  002D66                     
  5624                           ;main.c: 508:             ms_delay(1);
  5625  002D66  0E00               	movlw	0
  5626  002D68  6E0B               	movwf	(ms_delay@val+1)^0,c
  5627  002D6A  0E01               	movlw	1
  5628  002D6C  6E0A               	movwf	ms_delay@val^0,c
  5629  002D6E  EC79  F018         	call	_ms_delay	;wreg free
  5630  002D72                     
  5631                           ;main.c: 509:             Step_Angle--;
  5632  002D72  0100               	movlb	0	; () banked
  5633  002D74  07B0               	decf	_Step_Angle& (0+255),f,b
  5634  002D76  A0D8               	btfss	status,0,c
  5635  002D78  07B1               	decf	(_Step_Angle+1)& (0+255),f,b
  5636  002D7A                     l4485:
  5637  002D7A  FFFF               	dw	65535	; assembler added errata NOP
  5638                           
  5639                           ;main.c: 511:         if (direction == 1){
  5640  002D7C  0410               	decf	Twister@direction^0,w,c
  5641  002D7E  A4D8               	btfss	status,2,c
  5642  002D80  EFC4  F016         	goto	u4981
  5643  002D84  EFC7  F016         	goto	u4980
  5644  002D88                     u4981:
  5645  002D88  FFFF               	dw	65535	; assembler added errata NOP
  5646  002D8A  EFF0  F016         	goto	l350
  5647  002D8E                     u4980:
  5648  002D8E  FFFF               	dw	65535	; assembler added errata NOP
  5649  002D90                     
  5650                           ;main.c: 512:             PORTD = 0b10010000;
  5651  002D90  0E90               	movlw	144
  5652  002D92  6E83               	movwf	131,c	;volatile
  5653  002D94                     
  5654                           ;main.c: 513:             ms_delay(1);
  5655  002D94  0E00               	movlw	0
  5656  002D96  6E0B               	movwf	(ms_delay@val+1)^0,c
  5657  002D98  0E01               	movlw	1
  5658  002D9A  6E0A               	movwf	ms_delay@val^0,c
  5659  002D9C  EC79  F018         	call	_ms_delay	;wreg free
  5660  002DA0                     
  5661                           ;main.c: 514:             PORTD = 0b01100000;
  5662  002DA0  0E60               	movlw	96
  5663  002DA2  6E83               	movwf	131,c	;volatile
  5664                           
  5665                           ;main.c: 515:             ms_delay(1);
  5666  002DA4  0E00               	movlw	0
  5667  002DA6  6E0B               	movwf	(ms_delay@val+1)^0,c
  5668  002DA8  0E01               	movlw	1
  5669  002DAA  6E0A               	movwf	ms_delay@val^0,c
  5670  002DAC  EC79  F018         	call	_ms_delay	;wreg free
  5671  002DB0                     
  5672                           ;main.c: 516:             PORTD = 0b00110000;
  5673  002DB0  0E30               	movlw	48
  5674  002DB2  6E83               	movwf	131,c	;volatile
  5675  002DB4                     
  5676                           ;main.c: 517:             ms_delay(1);
  5677  002DB4  0E00               	movlw	0
  5678  002DB6  6E0B               	movwf	(ms_delay@val+1)^0,c
  5679  002DB8  0E01               	movlw	1
  5680  002DBA  6E0A               	movwf	ms_delay@val^0,c
  5681  002DBC  EC79  F018         	call	_ms_delay	;wreg free
  5682                           
  5683                           ;main.c: 518:             PORTD = 0b10010000;
  5684  002DC0  0E90               	movlw	144
  5685  002DC2  6E83               	movwf	131,c	;volatile
  5686  002DC4                     
  5687                           ;main.c: 519:             ms_delay(1);
  5688  002DC4  0E00               	movlw	0
  5689  002DC6  6E0B               	movwf	(ms_delay@val+1)^0,c
  5690  002DC8  0E01               	movlw	1
  5691  002DCA  6E0A               	movwf	ms_delay@val^0,c
  5692  002DCC  EC79  F018         	call	_ms_delay	;wreg free
  5693  002DD0                     
  5694                           ;main.c: 520:             Step_Angle++;
  5695  002DD0  0100               	movlb	0	; () banked
  5696  002DD2  4BB0               	infsnz	_Step_Angle& (0+255),f,b
  5697  002DD4  2BB1               	incf	(_Step_Angle+1)& (0+255),f,b
  5698  002DD6  EFF0  F016         	goto	l350
  5699  002DDA                     l4501:
  5700  002DDA  FFFF               	dw	65535	; assembler added errata NOP
  5701                           
  5702                           ;main.c: 524:         stop=1;
  5703  002DDC  0E01               	movlw	1
  5704  002DDE  6E72               	movwf	_stop^0,c
  5705  002DE0                     l350:
  5706  002DE0  FFFF               	dw	65535	; assembler added errata NOP
  5707  002DE2  0012               	return		;funcret
  5708  002DE4  FFFF               	dw	65535	; errata NOP
  5709  002DE6                     __end_of_Twister:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function _ms_delay *****************
  5713 ;; Defined at:
  5714 ;;		line 577 in file "main.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  val             2    9[COMRAM] unsigned int 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;  j               2   13[COMRAM] unsigned int 
  5719 ;;  i               2   11[COMRAM] unsigned int 
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  1    wreg      void 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5729 ;;      Params:         2       0       0       0       0       0       0
  5730 ;;      Locals:         4       0       0       0       0       0       0
  5731 ;;      Temps:          0       0       0       0       0       0       0
  5732 ;;      Totals:         6       0       0       0       0       0       0
  5733 ;;Total ram usage:        6 bytes
  5734 ;; Hardware stack levels used: 1
  5735 ;; Hardware stack levels required when called: 2
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_X_axis
  5740 ;;		_Y_axis
  5741 ;;		_Z_axis
  5742 ;;		_Twister
  5743 ;;		_pick_and_place
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text15
  5748  0030F2                     __ptext15:
  5749                           	callstack 0
  5750  0030F2                     _ms_delay:
  5751                           	callstack 0
  5752  0030F2  FFFF               	dw	65535	; assembler added errata NOP
  5753  0030F4                     
  5754                           ;main.c: 577: void ms_delay(unsigned int val);main.c: 578: {;main.c: 579:      unsigned 
      +                          int i,j;;main.c: 580:         for(i=0;i<val;i++);
  5755  0030F4  0E00               	movlw	0
  5756  0030F6  6E0D               	movwf	(ms_delay@i+1)^0,c
  5757  0030F8  0E00               	movlw	0
  5758  0030FA  6E0C               	movwf	ms_delay@i^0,c
  5759  0030FC  EF83  F018         	goto	l4327
  5760  003100                     l4325:
  5761  003100  FFFF               	dw	65535	; assembler added errata NOP
  5762  003102  4A0C               	infsnz	ms_delay@i^0,f,c
  5763  003104  2A0D               	incf	(ms_delay@i+1)^0,f,c
  5764  003106                     l4327:
  5765  003106  FFFF               	dw	65535	; assembler added errata NOP
  5766  003108  500A               	movf	ms_delay@val^0,w,c
  5767  00310A  5C0C               	subwf	ms_delay@i^0,w,c
  5768  00310C  500B               	movf	(ms_delay@val+1)^0,w,c
  5769  00310E  580D               	subwfb	(ms_delay@i+1)^0,w,c
  5770  003110  A0D8               	btfss	status,0,c
  5771  003112  EF8D  F018         	goto	u4811
  5772  003116  EF90  F018         	goto	u4810
  5773  00311A                     u4811:
  5774  00311A  FFFF               	dw	65535	; assembler added errata NOP
  5775  00311C  EF80  F018         	goto	l4325
  5776  003120                     u4810:
  5777  003120  FFFF               	dw	65535	; assembler added errata NOP
  5778  003122                     
  5779                           ;main.c: 581:         for(j=0;j<1650;j++);
  5780  003122  0E00               	movlw	0
  5781  003124  6E0F               	movwf	(ms_delay@j+1)^0,c
  5782  003126  0E00               	movlw	0
  5783  003128  6E0E               	movwf	ms_delay@j^0,c
  5784  00312A                     l4335:
  5785  00312A  FFFF               	dw	65535	; assembler added errata NOP
  5786  00312C  4A0E               	infsnz	ms_delay@j^0,f,c
  5787  00312E  2A0F               	incf	(ms_delay@j+1)^0,f,c
  5788  003130  0E72               	movlw	114
  5789  003132  5C0E               	subwf	ms_delay@j^0,w,c
  5790  003134  0E06               	movlw	6
  5791  003136  580F               	subwfb	(ms_delay@j+1)^0,w,c
  5792  003138  A0D8               	btfss	status,0,c
  5793  00313A  EFA1  F018         	goto	u4821
  5794  00313E  EFA4  F018         	goto	u4820
  5795  003142                     u4821:
  5796  003142  FFFF               	dw	65535	; assembler added errata NOP
  5797  003144  EF95  F018         	goto	l4335
  5798  003148                     u4820:
  5799  003148  FFFF               	dw	65535	; assembler added errata NOP
  5800  00314A  0012               	return		;funcret
  5801  00314C  FFFF               	dw	65535	; errata NOP
  5802  00314E                     __end_of_ms_delay:
  5803                           	callstack 0
  5804                           
  5805 ;; *************** function _Tweezer *****************
  5806 ;; Defined at:
  5807 ;;		line 558 in file "main.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  action          1    wreg     unsigned char 
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;  action          1    9[COMRAM] unsigned char 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      void 
  5814 ;; Registers used:
  5815 ;;		wreg, status,2, status,0
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5821 ;;      Params:         0       0       0       0       0       0       0
  5822 ;;      Locals:         1       0       0       0       0       0       0
  5823 ;;      Temps:          0       0       0       0       0       0       0
  5824 ;;      Totals:         1       0       0       0       0       0       0
  5825 ;;Total ram usage:        1 bytes
  5826 ;; Hardware stack levels used: 1
  5827 ;; Hardware stack levels required when called: 2
  5828 ;; This function calls:
  5829 ;;		Nothing
  5830 ;; This function is called by:
  5831 ;;		_pick_and_place
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text16
  5836  003026                     __ptext16:
  5837                           	callstack 0
  5838  003026                     _Tweezer:
  5839                           	callstack 0
  5840  003026  FFFF               	dw	65535	; assembler added errata NOP
  5841                           
  5842                           ;incstack = 0
  5843                           ;Tweezer@action stored from wreg
  5844  003028  6E0A               	movwf	Tweezer@action^0,c
  5845  00302A                     
  5846                           ;main.c: 559:     if(!New_char_RX){
  5847  00302A  5074               	movf	_New_char_RX^0,w,c
  5848  00302C  A4D8               	btfss	status,2,c
  5849  00302E  EF1B  F018         	goto	u4991
  5850  003032  EF1E  F018         	goto	u4990
  5851  003036                     u4991:
  5852  003036  FFFF               	dw	65535	; assembler added errata NOP
  5853  003038  EF43  F018         	goto	l4515
  5854  00303C                     u4990:
  5855  00303C  FFFF               	dw	65535	; assembler added errata NOP
  5856  00303E                     
  5857                           ;main.c: 560:         if(action==1){
  5858  00303E  040A               	decf	Tweezer@action^0,w,c
  5859  003040  A4D8               	btfss	status,2,c
  5860  003042  EF25  F018         	goto	u5001
  5861  003046  EF28  F018         	goto	u5000
  5862  00304A                     u5001:
  5863  00304A  FFFF               	dw	65535	; assembler added errata NOP
  5864  00304C  EF2E  F018         	goto	l357
  5865  003050                     u5000:
  5866  003050  FFFF               	dw	65535	; assembler added errata NOP
  5867  003052                     
  5868                           ;main.c: 561:             new_TMR1H = 0xF9;
  5869  003052  0EF9               	movlw	249
  5870  003054  0100               	movlb	0	; () banked
  5871  003056  6FCE               	movwf	_new_TMR1H@main$F816& (0+255),b
  5872                           
  5873                           ;main.c: 562:             new_TMR1L = 0x53;
  5874  003058  0E53               	movlw	83
  5875  00305A  6FCD               	movwf	_new_TMR1L@main$F817& (0+255),b
  5876  00305C                     l357:
  5877  00305C  FFFF               	dw	65535	; assembler added errata NOP
  5878                           
  5879                           ;main.c: 565:         if(action == 0){
  5880  00305E  500A               	movf	Tweezer@action^0,w,c
  5881  003060  A4D8               	btfss	status,2,c
  5882  003062  EF35  F018         	goto	u5011
  5883  003066  EF38  F018         	goto	u5010
  5884  00306A                     u5011:
  5885  00306A  FFFF               	dw	65535	; assembler added errata NOP
  5886  00306C  EF3E  F018         	goto	l4511
  5887  003070                     u5010:
  5888  003070  FFFF               	dw	65535	; assembler added errata NOP
  5889  003072                     
  5890                           ;main.c: 566:             new_TMR1H= 0xFA;
  5891  003072  0EFA               	movlw	250
  5892  003074  0100               	movlb	0	; () banked
  5893  003076  6FCE               	movwf	_new_TMR1H@main$F816& (0+255),b
  5894                           
  5895                           ;main.c: 567:             new_TMR1L= 0x4D;
  5896  003078  0E4D               	movlw	77
  5897  00307A  6FCD               	movwf	_new_TMR1L@main$F817& (0+255),b
  5898  00307C                     l4511:
  5899  00307C  FFFF               	dw	65535	; assembler added errata NOP
  5900                           
  5901                           ;main.c: 569:         LATCbits.LC2=1;
  5902  00307E  848B               	bsf	139,2,c	;volatile
  5903  003080                     
  5904                           ;main.c: 570:         T1CONbits.TMR1ON=1;
  5905  003080  80CD               	bsf	205,0,c	;volatile
  5906                           
  5907                           ;main.c: 571:     }
  5908  003082  EF46  F018         	goto	l360
  5909  003086                     l4515:
  5910  003086  FFFF               	dw	65535	; assembler added errata NOP
  5911                           
  5912                           ;main.c: 573:         stop=1;
  5913  003088  0E01               	movlw	1
  5914  00308A  6E72               	movwf	_stop^0,c
  5915  00308C                     l360:
  5916  00308C  FFFF               	dw	65535	; assembler added errata NOP
  5917  00308E  0012               	return		;funcret
  5918  003090  FFFF               	dw	65535	; errata NOP
  5919  003092                     __end_of_Tweezer:
  5920                           	callstack 0
  5921                           
  5922 ;; *************** function _change_sequence *****************
  5923 ;; Defined at:
  5924 ;;		line 272 in file "main.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;		None
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  i               2   18[COMRAM] int 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      void 
  5931 ;; Registers used:
  5932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5938 ;;      Params:         0       0       0       0       0       0       0
  5939 ;;      Locals:         2       0       0       0       0       0       0
  5940 ;;      Temps:          3       0       0       0       0       0       0
  5941 ;;      Totals:         5       0       0       0       0       0       0
  5942 ;;Total ram usage:        5 bytes
  5943 ;; Hardware stack levels used: 1
  5944 ;; Hardware stack levels required when called: 3
  5945 ;; This function calls:
  5946 ;;		_print_string
  5947 ;; This function is called by:
  5948 ;;		_start_up_menu
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text17
  5953  002E86                     __ptext17:
  5954                           	callstack 0
  5955  002E86                     _change_sequence:
  5956                           	callstack 0
  5957  002E86  FFFF               	dw	65535	; assembler added errata NOP
  5958  002E88                     
  5959                           ;main.c: 273:     print_string("\nThe current sequence is: ");
  5960  002E88  0E65               	movlw	low STR_4
  5961  002E8A  6E0A               	movwf	print_string@strng^0,c
  5962  002E8C  0E7F               	movlw	high STR_4
  5963  002E8E  6E0B               	movwf	(print_string@strng+1)^0,c
  5964  002E90  ECF3  F016         	call	_print_string	;wreg free
  5965                           
  5966                           ;main.c: 274:     print_string(sequence);
  5967  002E94  0EDC               	movlw	low _sequence
  5968  002E96  6E0A               	movwf	print_string@strng^0,c
  5969  002E98  0E00               	movlw	high _sequence
  5970  002E9A  6E0B               	movwf	(print_string@strng+1)^0,c
  5971  002E9C  ECF3  F016         	call	_print_string	;wreg free
  5972                           
  5973                           ;main.c: 275:     print_string("\nPlease give the new sequence as input\r");
  5974  002EA0  0E70               	movlw	low STR_5
  5975  002EA2  6E0A               	movwf	print_string@strng^0,c
  5976  002EA4  0E7E               	movlw	high STR_5
  5977  002EA6  6E0B               	movwf	(print_string@strng+1)^0,c
  5978  002EA8  ECF3  F016         	call	_print_string	;wreg free
  5979  002EAC                     
  5980                           ;main.c: 276:     int i = 0;
  5981  002EAC  0E00               	movlw	0
  5982  002EAE  6E14               	movwf	(change_sequence@i+1)^0,c
  5983  002EB0  0E00               	movlw	0
  5984  002EB2  6E13               	movwf	change_sequence@i^0,c
  5985  002EB4                     l4989:
  5986  002EB4  FFFF               	dw	65535	; assembler added errata NOP
  5987                           
  5988                           ;main.c: 278:         if(New_char_RX){
  5989  002EB6  5074               	movf	_New_char_RX^0,w,c
  5990  002EB8  B4D8               	btfsc	status,2,c
  5991  002EBA  EF61  F017         	goto	u5991
  5992  002EBE  EF64  F017         	goto	u5990
  5993  002EC2                     u5991:
  5994  002EC2  FFFF               	dw	65535	; assembler added errata NOP
  5995  002EC4  EF5A  F017         	goto	l4989
  5996  002EC8                     u5990:
  5997  002EC8  FFFF               	dw	65535	; assembler added errata NOP
  5998  002ECA                     l4991:
  5999  002ECA  FFFF               	dw	65535	; assembler added errata NOP
  6000                           
  6001                           ;main.c: 280:                 sequence[i]=input_str[i];
  6002  002ECC  0ED2               	movlw	low _input_str
  6003  002ECE  2413               	addwf	change_sequence@i^0,w,c
  6004  002ED0  6ED9               	movwf	fsr2l,c
  6005  002ED2  0E00               	movlw	high _input_str
  6006  002ED4  2014               	addwfc	(change_sequence@i+1)^0,w,c
  6007  002ED6  6EDA               	movwf	fsr2h,c
  6008  002ED8  0EDC               	movlw	low _sequence
  6009  002EDA  2413               	addwf	change_sequence@i^0,w,c
  6010  002EDC  6EE1               	movwf	fsr1l,c
  6011  002EDE  0E00               	movlw	high _sequence
  6012  002EE0  2014               	addwfc	(change_sequence@i+1)^0,w,c
  6013  002EE2  6EE2               	movwf	fsr1h,c
  6014  002EE4  CFDF FFE7          	movff	indf2,indf1
  6015  002EE8                     
  6016                           ;main.c: 281:             }while(input_str[i++]!='\n');
  6017  002EE8  5013               	movf	change_sequence@i^0,w,c
  6018  002EEA  6E10               	movwf	??_change_sequence^0,c
  6019  002EEC  5014               	movf	(change_sequence@i+1)^0,w,c
  6020  002EEE  6E11               	movwf	(??_change_sequence+1)^0,c
  6021  002EF0  4A13               	infsnz	change_sequence@i^0,f,c
  6022  002EF2  2A14               	incf	(change_sequence@i+1)^0,f,c
  6023  002EF4  0ED2               	movlw	low _input_str
  6024  002EF6  2410               	addwf	??_change_sequence^0,w,c
  6025  002EF8  6ED9               	movwf	fsr2l,c
  6026  002EFA  0E00               	movlw	high _input_str
  6027  002EFC  2011               	addwfc	(??_change_sequence+1)^0,w,c
  6028  002EFE  6EDA               	movwf	fsr2h,c
  6029  002F00  0E0A               	movlw	10
  6030  002F02  18DE               	xorwf	postinc2,w,c
  6031  002F04  A4D8               	btfss	status,2,c
  6032  002F06  EF87  F017         	goto	u6001
  6033  002F0A  EF8A  F017         	goto	u6000
  6034  002F0E                     u6001:
  6035  002F0E  FFFF               	dw	65535	; assembler added errata NOP
  6036  002F10  EF65  F017         	goto	l4991
  6037  002F14                     u6000:
  6038  002F14  FFFF               	dw	65535	; assembler added errata NOP
  6039  002F16                     
  6040                           ;main.c: 282:             New_char_RX=0;
  6041  002F16  0E00               	movlw	0
  6042  002F18  6E74               	movwf	_New_char_RX^0,c
  6043  002F1A  0012               	return		;funcret
  6044  002F1C  FFFF               	dw	65535	; errata NOP
  6045  002F1E                     __end_of_change_sequence:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function _add_component *****************
  6049 ;; Defined at:
  6050 ;;		line 288 in file "main.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;		None
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  add_componnt    2   31[COMRAM] unsigned char [2]
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6064 ;;      Params:         0       0       0       0       0       0       0
  6065 ;;      Locals:         2       0       0       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0
  6067 ;;      Totals:         2       0       0       0       0       0       0
  6068 ;;Total ram usage:        2 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 4
  6071 ;; This function calls:
  6072 ;;		_atoi
  6073 ;;		_print_string
  6074 ;;		_strncat
  6075 ;; This function is called by:
  6076 ;;		_start_up_menu
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text18
  6081  001BFE                     __ptext18:
  6082                           	callstack 0
  6083  001BFE                     _add_component:
  6084                           	callstack 0
  6085  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  6086  001C00                     
  6087                           ;main.c: 289:     char add_componnt[]=" ";
  6088  001C00  C0C9  F020         	movff	add_component@F3138,add_component@add_componnt
  6089  001C04  C0CA  F021         	movff	add_component@F3138+1,add_component@add_componnt+1
  6090  001C08                     
  6091                           ;main.c: 290:     print_string("\nThe Current sequence is:");
  6092  001C08  0E80               	movlw	low STR_6
  6093  001C0A  6E0A               	movwf	print_string@strng^0,c
  6094  001C0C  0E7F               	movlw	high STR_6
  6095  001C0E  6E0B               	movwf	(print_string@strng+1)^0,c
  6096  001C10  ECF3  F016         	call	_print_string	;wreg free
  6097                           
  6098                           ;main.c: 291:     print_string(sequence);
  6099  001C14  0EDC               	movlw	low _sequence
  6100  001C16  6E0A               	movwf	print_string@strng^0,c
  6101  001C18  0E00               	movlw	high _sequence
  6102  001C1A  6E0B               	movwf	(print_string@strng+1)^0,c
  6103  001C1C  ECF3  F016         	call	_print_string	;wreg free
  6104                           
  6105                           ;main.c: 292:     print_string("\nEnter the component you want to add: A, B, C or D?");
  6106  001C20  0E3C               	movlw	low STR_7
  6107  001C22  6E0A               	movwf	print_string@strng^0,c
  6108  001C24  0E7E               	movlw	high STR_7
  6109  001C26  6E0B               	movwf	(print_string@strng+1)^0,c
  6110  001C28  ECF3  F016         	call	_print_string	;wreg free
  6111  001C2C                     l5001:
  6112  001C2C  FFFF               	dw	65535	; assembler added errata NOP
  6113                           
  6114                           ;main.c: 294:         if(New_char_RX){
  6115  001C2E  5074               	movf	_New_char_RX^0,w,c
  6116  001C30  B4D8               	btfsc	status,2,c
  6117  001C32  EF1D  F00E         	goto	u6011
  6118  001C36  EF20  F00E         	goto	u6010
  6119  001C3A                     u6011:
  6120  001C3A  FFFF               	dw	65535	; assembler added errata NOP
  6121  001C3C  EF16  F00E         	goto	l5001
  6122  001C40                     u6010:
  6123  001C40  FFFF               	dw	65535	; assembler added errata NOP
  6124  001C42                     
  6125                           ;main.c: 295:             add_componnt[0]=input_str[0];
  6126  001C42  C0D2  F020         	movff	_input_str,add_component@add_componnt	;volatile
  6127  001C46                     
  6128                           ;main.c: 296:             if(add_componnt[0]=='D'){
  6129  001C46  0E44               	movlw	68
  6130  001C48  1820               	xorwf	add_component@add_componnt^0,w,c
  6131  001C4A  A4D8               	btfss	status,2,c
  6132  001C4C  EF2A  F00E         	goto	u6021
  6133  001C50  EF2D  F00E         	goto	u6020
  6134  001C54                     u6021:
  6135  001C54  FFFF               	dw	65535	; assembler added errata NOP
  6136  001C56  EFDC  F00E         	goto	l5055
  6137  001C5A                     u6020:
  6138  001C5A  FFFF               	dw	65535	; assembler added errata NOP
  6139  001C5C                     
  6140                           ;main.c: 297:                 New_char_RX=0;
  6141  001C5C  0E00               	movlw	0
  6142  001C5E  6E74               	movwf	_New_char_RX^0,c
  6143  001C60                     
  6144                           ;main.c: 298:                 print_string("\nEnter the pick position X:");
  6145  001C60  0E2D               	movlw	low STR_8
  6146  001C62  6E0A               	movwf	print_string@strng^0,c
  6147  001C64  0E7F               	movlw	high STR_8
  6148  001C66  6E0B               	movwf	(print_string@strng+1)^0,c
  6149  001C68  ECF3  F016         	call	_print_string	;wreg free
  6150  001C6C                     l5011:
  6151  001C6C  FFFF               	dw	65535	; assembler added errata NOP
  6152                           
  6153                           ;main.c: 300:                     if(New_char_RX){
  6154  001C6E  5074               	movf	_New_char_RX^0,w,c
  6155  001C70  B4D8               	btfsc	status,2,c
  6156  001C72  EF3D  F00E         	goto	u6031
  6157  001C76  EF40  F00E         	goto	u6030
  6158  001C7A                     u6031:
  6159  001C7A  FFFF               	dw	65535	; assembler added errata NOP
  6160  001C7C  EF36  F00E         	goto	l5011
  6161  001C80                     u6030:
  6162  001C80  FFFF               	dw	65535	; assembler added errata NOP
  6163  001C82                     
  6164                           ;main.c: 301:                         X_Pick_D=atoi(input_str);
  6165  001C82  0ED2               	movlw	low _input_str
  6166  001C84  6E11               	movwf	atoi@s^0,c
  6167  001C86  0E00               	movlw	high _input_str
  6168  001C88  6E12               	movwf	(atoi@s+1)^0,c
  6169  001C8A  ECFC  F00F         	call	_atoi	;wreg free
  6170  001C8E  C011  F0AE         	movff	?_atoi,_X_Pick_D
  6171  001C92  C012  F0AF         	movff	?_atoi+1,_X_Pick_D+1
  6172  001C96                     
  6173                           ;main.c: 302:                         New_char_RX=0;
  6174  001C96  0E00               	movlw	0
  6175  001C98  6E74               	movwf	_New_char_RX^0,c
  6176  001C9A                     
  6177                           ;main.c: 306:                 print_string("\nEnter the pick position Y:");
  6178  001C9A  0E49               	movlw	low STR_9
  6179  001C9C  6E0A               	movwf	print_string@strng^0,c
  6180  001C9E  0E7F               	movlw	high STR_9
  6181  001CA0  6E0B               	movwf	(print_string@strng+1)^0,c
  6182  001CA2  ECF3  F016         	call	_print_string	;wreg free
  6183  001CA6                     l5019:
  6184  001CA6  FFFF               	dw	65535	; assembler added errata NOP
  6185                           
  6186                           ;main.c: 308:                     if(New_char_RX){
  6187  001CA8  5074               	movf	_New_char_RX^0,w,c
  6188  001CAA  B4D8               	btfsc	status,2,c
  6189  001CAC  EF5A  F00E         	goto	u6041
  6190  001CB0  EF5D  F00E         	goto	u6040
  6191  001CB4                     u6041:
  6192  001CB4  FFFF               	dw	65535	; assembler added errata NOP
  6193  001CB6  EF53  F00E         	goto	l5019
  6194  001CBA                     u6040:
  6195  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  6196  001CBC                     
  6197                           ;main.c: 309:                         Y_Pick_D=(atoi(input_str));
  6198  001CBC  0ED2               	movlw	low _input_str
  6199  001CBE  6E11               	movwf	atoi@s^0,c
  6200  001CC0  0E00               	movlw	high _input_str
  6201  001CC2  6E12               	movwf	(atoi@s+1)^0,c
  6202  001CC4  ECFC  F00F         	call	_atoi	;wreg free
  6203  001CC8  C011  F0AC         	movff	?_atoi,_Y_Pick_D
  6204  001CCC  C012  F0AD         	movff	?_atoi+1,_Y_Pick_D+1
  6205  001CD0                     
  6206                           ;main.c: 310:                         New_char_RX=0;
  6207  001CD0  0E00               	movlw	0
  6208  001CD2  6E74               	movwf	_New_char_RX^0,c
  6209  001CD4                     
  6210                           ;main.c: 314:                 print_string("\nEnter the pick orientation:");
  6211  001CD4  0E10               	movlw	low STR_10
  6212  001CD6  6E0A               	movwf	print_string@strng^0,c
  6213  001CD8  0E7F               	movlw	high STR_10
  6214  001CDA  6E0B               	movwf	(print_string@strng+1)^0,c
  6215  001CDC  ECF3  F016         	call	_print_string	;wreg free
  6216  001CE0                     l5027:
  6217  001CE0  FFFF               	dw	65535	; assembler added errata NOP
  6218                           
  6219                           ;main.c: 316:                     if(New_char_RX){
  6220  001CE2  5074               	movf	_New_char_RX^0,w,c
  6221  001CE4  B4D8               	btfsc	status,2,c
  6222  001CE6  EF77  F00E         	goto	u6051
  6223  001CEA  EF7A  F00E         	goto	u6050
  6224  001CEE                     u6051:
  6225  001CEE  FFFF               	dw	65535	; assembler added errata NOP
  6226  001CF0  EF70  F00E         	goto	l5027
  6227  001CF4                     u6050:
  6228  001CF4  FFFF               	dw	65535	; assembler added errata NOP
  6229  001CF6                     
  6230                           ;main.c: 317:                         Pick_Angle_D=(atoi(input_str));
  6231  001CF6  0ED2               	movlw	low _input_str
  6232  001CF8  6E11               	movwf	atoi@s^0,c
  6233  001CFA  0E00               	movlw	high _input_str
  6234  001CFC  6E12               	movwf	(atoi@s+1)^0,c
  6235  001CFE  ECFC  F00F         	call	_atoi	;wreg free
  6236  001D02  C011  F0AA         	movff	?_atoi,_Pick_Angle_D
  6237  001D06  C012  F0AB         	movff	?_atoi+1,_Pick_Angle_D+1
  6238  001D0A                     
  6239                           ;main.c: 318:                         New_char_RX=0;
  6240  001D0A  0E00               	movlw	0
  6241  001D0C  6E74               	movwf	_New_char_RX^0,c
  6242  001D0E                     
  6243                           ;main.c: 322:                 print_string("\nEnter the place position X:");
  6244  001D0E  0ED6               	movlw	low STR_11
  6245  001D10  6E0A               	movwf	print_string@strng^0,c
  6246  001D12  0E7E               	movlw	high STR_11
  6247  001D14  6E0B               	movwf	(print_string@strng+1)^0,c
  6248  001D16  ECF3  F016         	call	_print_string	;wreg free
  6249  001D1A                     l5035:
  6250  001D1A  FFFF               	dw	65535	; assembler added errata NOP
  6251                           
  6252                           ;main.c: 324:                     if(New_char_RX){
  6253  001D1C  5074               	movf	_New_char_RX^0,w,c
  6254  001D1E  B4D8               	btfsc	status,2,c
  6255  001D20  EF94  F00E         	goto	u6061
  6256  001D24  EF97  F00E         	goto	u6060
  6257  001D28                     u6061:
  6258  001D28  FFFF               	dw	65535	; assembler added errata NOP
  6259  001D2A  EF8D  F00E         	goto	l5035
  6260  001D2E                     u6060:
  6261  001D2E  FFFF               	dw	65535	; assembler added errata NOP
  6262  001D30                     
  6263                           ;main.c: 325:                         X_Place_D=(atoi(input_str));
  6264  001D30  0ED2               	movlw	low _input_str
  6265  001D32  6E11               	movwf	atoi@s^0,c
  6266  001D34  0E00               	movlw	high _input_str
  6267  001D36  6E12               	movwf	(atoi@s+1)^0,c
  6268  001D38  ECFC  F00F         	call	_atoi	;wreg free
  6269  001D3C  C011  F0A8         	movff	?_atoi,_X_Place_D
  6270  001D40  C012  F0A9         	movff	?_atoi+1,_X_Place_D+1
  6271  001D44                     
  6272                           ;main.c: 326:                         New_char_RX=0;
  6273  001D44  0E00               	movlw	0
  6274  001D46  6E74               	movwf	_New_char_RX^0,c
  6275  001D48                     
  6276                           ;main.c: 330:                 print_string("\nEnter the place position Y:");
  6277  001D48  0EF3               	movlw	low STR_12
  6278  001D4A  6E0A               	movwf	print_string@strng^0,c
  6279  001D4C  0E7E               	movlw	high STR_12
  6280  001D4E  6E0B               	movwf	(print_string@strng+1)^0,c
  6281  001D50  ECF3  F016         	call	_print_string	;wreg free
  6282  001D54                     l5043:
  6283  001D54  FFFF               	dw	65535	; assembler added errata NOP
  6284                           
  6285                           ;main.c: 332:                     if(New_char_RX){
  6286  001D56  5074               	movf	_New_char_RX^0,w,c
  6287  001D58  B4D8               	btfsc	status,2,c
  6288  001D5A  EFB1  F00E         	goto	u6071
  6289  001D5E  EFB4  F00E         	goto	u6070
  6290  001D62                     u6071:
  6291  001D62  FFFF               	dw	65535	; assembler added errata NOP
  6292  001D64  EFAA  F00E         	goto	l5043
  6293  001D68                     u6070:
  6294  001D68  FFFF               	dw	65535	; assembler added errata NOP
  6295  001D6A                     
  6296                           ;main.c: 333:                         Y_Place_D=(atoi(input_str));
  6297  001D6A  0ED2               	movlw	low _input_str
  6298  001D6C  6E11               	movwf	atoi@s^0,c
  6299  001D6E  0E00               	movlw	high _input_str
  6300  001D70  6E12               	movwf	(atoi@s+1)^0,c
  6301  001D72  ECFC  F00F         	call	_atoi	;wreg free
  6302  001D76  C011  F0A6         	movff	?_atoi,_Y_Place_D
  6303  001D7A  C012  F0A7         	movff	?_atoi+1,_Y_Place_D+1
  6304  001D7E                     
  6305                           ;main.c: 334:                         New_char_RX=0;
  6306  001D7E  0E00               	movlw	0
  6307  001D80  6E74               	movwf	_New_char_RX^0,c
  6308  001D82                     
  6309                           ;main.c: 338:                 print_string("\nEnter the place orientation:");
  6310  001D82  0EB8               	movlw	low STR_13
  6311  001D84  6E0A               	movwf	print_string@strng^0,c
  6312  001D86  0E7E               	movlw	high STR_13
  6313  001D88  6E0B               	movwf	(print_string@strng+1)^0,c
  6314  001D8A  ECF3  F016         	call	_print_string	;wreg free
  6315  001D8E                     l5051:
  6316  001D8E  FFFF               	dw	65535	; assembler added errata NOP
  6317                           
  6318                           ;main.c: 340:                         if(New_char_RX){
  6319  001D90  5074               	movf	_New_char_RX^0,w,c
  6320  001D92  B4D8               	btfsc	status,2,c
  6321  001D94  EFCE  F00E         	goto	u6081
  6322  001D98  EFD1  F00E         	goto	u6080
  6323  001D9C                     u6081:
  6324  001D9C  FFFF               	dw	65535	; assembler added errata NOP
  6325  001D9E  EFC7  F00E         	goto	l5051
  6326  001DA2                     u6080:
  6327  001DA2  FFFF               	dw	65535	; assembler added errata NOP
  6328  001DA4                     
  6329                           ;main.c: 341:                         Place_Angle_D=(atoi(input_str));
  6330  001DA4  0ED2               	movlw	low _input_str
  6331  001DA6  6E11               	movwf	atoi@s^0,c
  6332  001DA8  0E00               	movlw	high _input_str
  6333  001DAA  6E12               	movwf	(atoi@s+1)^0,c
  6334  001DAC  ECFC  F00F         	call	_atoi	;wreg free
  6335  001DB0  C011  F0A4         	movff	?_atoi,_Place_Angle_D
  6336  001DB4  C012  F0A5         	movff	?_atoi+1,_Place_Angle_D+1
  6337  001DB8                     l5055:
  6338  001DB8  FFFF               	dw	65535	; assembler added errata NOP
  6339                           
  6340                           ;main.c: 342:                         New_char_RX=0;
  6341  001DBA  0E00               	movlw	0
  6342  001DBC  6E74               	movwf	_New_char_RX^0,c
  6343  001DBE                     
  6344                           ;main.c: 354:     State='0';
  6345  001DBE  0E30               	movlw	48
  6346  001DC0  0100               	movlb	0	; () banked
  6347  001DC2  6FCF               	movwf	_State& (0+255),b
  6348  001DC4                     
  6349                           ; BSR set to: 0
  6350                           ;main.c: 355:     strncat(sequence,add_componnt,1);
  6351  001DC4  0EDC               	movlw	low _sequence
  6352  001DC6  6E0E               	movwf	strncat@d^0,c
  6353  001DC8  0E00               	movlw	high _sequence
  6354  001DCA  6E0F               	movwf	(strncat@d+1)^0,c
  6355  001DCC  0E20               	movlw	low add_component@add_componnt
  6356  001DCE  6E10               	movwf	strncat@s^0,c
  6357  001DD0  0E00               	movlw	high add_component@add_componnt
  6358  001DD2  6E11               	movwf	(strncat@s+1)^0,c
  6359  001DD4  0E00               	movlw	0
  6360  001DD6  6E13               	movwf	(strncat@n+1)^0,c
  6361  001DD8  0E01               	movlw	1
  6362  001DDA  6E12               	movwf	strncat@n^0,c
  6363  001DDC  EC8F  F017         	call	_strncat	;wreg free
  6364  001DE0                     
  6365                           ;main.c: 356:     print_string("\n\nComponent Added: ");
  6366  001DE0  0EB1               	movlw	low STR_14
  6367  001DE2  6E0A               	movwf	print_string@strng^0,c
  6368  001DE4  0E7F               	movlw	high STR_14
  6369  001DE6  6E0B               	movwf	(print_string@strng+1)^0,c
  6370  001DE8  ECF3  F016         	call	_print_string	;wreg free
  6371  001DEC                     
  6372                           ;main.c: 357:     print_string(add_componnt);
  6373  001DEC  0E20               	movlw	low add_component@add_componnt
  6374  001DEE  6E0A               	movwf	print_string@strng^0,c
  6375  001DF0  0E00               	movlw	high add_component@add_componnt
  6376  001DF2  6E0B               	movwf	(print_string@strng+1)^0,c
  6377  001DF4  ECF3  F016         	call	_print_string	;wreg free
  6378  001DF8                     
  6379                           ;main.c: 358:     New_char_RX=0;
  6380  001DF8  0E00               	movlw	0
  6381  001DFA  6E74               	movwf	_New_char_RX^0,c
  6382  001DFC  0012               	return		;funcret
  6383  001DFE  FFFF               	dw	65535	; errata NOP
  6384  001E00                     __end_of_add_component:
  6385                           	callstack 0
  6386                           
  6387 ;; *************** function _strncat *****************
  6388 ;; Defined at:
  6389 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strncat.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  d               2   13[COMRAM] PTR unsigned char 
  6392 ;;		 -> sequence(4), 
  6393 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6394 ;;		 -> add_component@add_componnt(2), 
  6395 ;;  n               2   17[COMRAM] unsigned int 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  a               2    0        PTR unsigned char 
  6398 ;;		 -> sequence(4), 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  2   13[COMRAM] PTR unsigned char 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6408 ;;      Params:         6       0       0       0       0       0       0
  6409 ;;      Locals:         0       0       0       0       0       0       0
  6410 ;;      Temps:          0       0       0       0       0       0       0
  6411 ;;      Totals:         6       0       0       0       0       0       0
  6412 ;;Total ram usage:        6 bytes
  6413 ;; Hardware stack levels used: 1
  6414 ;; Hardware stack levels required when called: 3
  6415 ;; This function calls:
  6416 ;;		_strlen
  6417 ;; This function is called by:
  6418 ;;		_add_component
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text19
  6423  002F1E                     __ptext19:
  6424                           	callstack 0
  6425  002F1E                     _strncat:
  6426                           	callstack 0
  6427  002F1E  FFFF               	dw	65535	; assembler added errata NOP
  6428  002F20  C00E  F00A         	movff	strncat@d,strlen@s
  6429  002F24  C00F  F00B         	movff	strncat@d+1,strlen@s+1
  6430  002F28  ECEF  F018         	call	_strlen	;wreg free
  6431  002F2C  500A               	movf	?_strlen^0,w,c
  6432  002F2E  260E               	addwf	strncat@d^0,f,c
  6433  002F30  500B               	movf	(?_strlen+1)^0,w,c
  6434  002F32  220F               	addwfc	(strncat@d+1)^0,f,c
  6435  002F34  EFAE  F017         	goto	l3129
  6436  002F38                     l3121:
  6437  002F38  FFFF               	dw	65535	; assembler added errata NOP
  6438  002F3A  0612               	decf	strncat@n^0,f,c
  6439  002F3C  A0D8               	btfss	status,0,c
  6440  002F3E  0613               	decf	(strncat@n+1)^0,f,c
  6441  002F40  C010  FFD9         	movff	strncat@s,fsr2l
  6442  002F44  C011  FFDA         	movff	strncat@s+1,fsr2h
  6443  002F48  C00E  FFE1         	movff	strncat@d,fsr1l
  6444  002F4C  C00F  FFE2         	movff	strncat@d+1,fsr1h
  6445  002F50  CFDF FFE7          	movff	indf2,indf1
  6446  002F54  4A10               	infsnz	strncat@s^0,f,c
  6447  002F56  2A11               	incf	(strncat@s+1)^0,f,c
  6448  002F58  4A0E               	infsnz	strncat@d^0,f,c
  6449  002F5A  2A0F               	incf	(strncat@d+1)^0,f,c
  6450  002F5C                     l3129:
  6451  002F5C  FFFF               	dw	65535	; assembler added errata NOP
  6452  002F5E  5012               	movf	strncat@n^0,w,c
  6453  002F60  1013               	iorwf	(strncat@n+1)^0,w,c
  6454  002F62  B4D8               	btfsc	status,2,c
  6455  002F64  EFB6  F017         	goto	u3001
  6456  002F68  EFB9  F017         	goto	u3000
  6457  002F6C                     u3001:
  6458  002F6C  FFFF               	dw	65535	; assembler added errata NOP
  6459  002F6E  EFC7  F017         	goto	l3133
  6460  002F72                     u3000:
  6461  002F72  FFFF               	dw	65535	; assembler added errata NOP
  6462  002F74  C010  FFD9         	movff	strncat@s,fsr2l
  6463  002F78  C011  FFDA         	movff	strncat@s+1,fsr2h
  6464  002F7C  50DF               	movf	indf2,w,c
  6465  002F7E  A4D8               	btfss	status,2,c
  6466  002F80  EFC4  F017         	goto	u3011
  6467  002F84  EFC7  F017         	goto	u3010
  6468  002F88                     u3011:
  6469  002F88  FFFF               	dw	65535	; assembler added errata NOP
  6470  002F8A  EF9C  F017         	goto	l3121
  6471  002F8E                     u3010:
  6472  002F8E                     l3133:
  6473  002F8E  FFFF               	dw	65535	; assembler added errata NOP
  6474  002F90  C00E  FFD9         	movff	strncat@d,fsr2l
  6475  002F94  C00F  FFDA         	movff	strncat@d+1,fsr2h
  6476  002F98  0E00               	movlw	0
  6477  002F9A  6EDF               	movwf	indf2,c
  6478  002F9C  4A0E               	infsnz	strncat@d^0,f,c
  6479  002F9E  2A0F               	incf	(strncat@d+1)^0,f,c
  6480  002FA0  0012               	return		;funcret
  6481  002FA2  FFFF               	dw	65535	; errata NOP
  6482  002FA4                     __end_of_strncat:
  6483                           	callstack 0
  6484                           
  6485 ;; *************** function _strlen *****************
  6486 ;; Defined at:
  6487 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6490 ;;		 -> sequence(4), 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  a               2   11[COMRAM] PTR const unsigned char 
  6493 ;;		 -> sequence(4), 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  2    9[COMRAM] unsigned int 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6503 ;;      Params:         2       0       0       0       0       0       0
  6504 ;;      Locals:         2       0       0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0
  6506 ;;      Totals:         4       0       0       0       0       0       0
  6507 ;;Total ram usage:        4 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 2
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_remove_component
  6514 ;;		_strncat
  6515 ;;		_strrchr
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text20
  6520  0031DE                     __ptext20:
  6521                           	callstack 0
  6522  0031DE                     _strlen:
  6523                           	callstack 0
  6524  0031DE  FFFF               	dw	65535	; assembler added errata NOP
  6525  0031E0  C00A  F00C         	movff	strlen@s,strlen@a
  6526  0031E4  C00B  F00D         	movff	strlen@s+1,strlen@a+1
  6527  0031E8  EFF9  F018         	goto	l2805
  6528  0031EC                     l2803:
  6529  0031EC  FFFF               	dw	65535	; assembler added errata NOP
  6530  0031EE  4A0A               	infsnz	strlen@s^0,f,c
  6531  0031F0  2A0B               	incf	(strlen@s+1)^0,f,c
  6532  0031F2                     l2805:
  6533  0031F2  FFFF               	dw	65535	; assembler added errata NOP
  6534  0031F4  C00A  FFD9         	movff	strlen@s,fsr2l
  6535  0031F8  C00B  FFDA         	movff	strlen@s+1,fsr2h
  6536  0031FC  50DF               	movf	indf2,w,c
  6537  0031FE  A4D8               	btfss	status,2,c
  6538  003200  EF04  F019         	goto	u2411
  6539  003204  EF07  F019         	goto	u2410
  6540  003208                     u2411:
  6541  003208  FFFF               	dw	65535	; assembler added errata NOP
  6542  00320A  EFF6  F018         	goto	l2803
  6543  00320E                     u2410:
  6544  00320E  FFFF               	dw	65535	; assembler added errata NOP
  6545  003210  500C               	movf	strlen@a^0,w,c
  6546  003212  5C0A               	subwf	strlen@s^0,w,c
  6547  003214  6E0A               	movwf	?_strlen^0,c
  6548  003216  500D               	movf	(strlen@a+1)^0,w,c
  6549  003218  580B               	subwfb	(strlen@s+1)^0,w,c
  6550  00321A  6E0B               	movwf	(?_strlen+1)^0,c
  6551  00321C  0012               	return		;funcret
  6552  00321E  FFFF               	dw	65535	; errata NOP
  6553  003220                     __end_of_strlen:
  6554                           	callstack 0
  6555                           
  6556 ;; *************** function _print_string *****************
  6557 ;; Defined at:
  6558 ;;		line 44 in file "serial_rs232.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  strng           2    9[COMRAM] PTR unsigned char 
  6561 ;;		 -> STR_19(23), STR_18(17), STR_17(70), STR_16(19), 
  6562 ;;		 -> STR_15(63), STR_14(20), STR_13(30), STR_12(29), 
  6563 ;;		 -> STR_11(29), STR_10(29), STR_9(28), STR_8(28), 
  6564 ;;		 -> STR_7(52), STR_6(26), add_component@add_componnt(2), STR_5(40), 
  6565 ;;		 -> STR_4(27), STR_3(32), sequence(4), STR_2(20), 
  6566 ;;		 -> STR_1(82), 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  i               2   13[COMRAM] int 
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6578 ;;      Params:         2       0       0       0       0       0       0
  6579 ;;      Locals:         2       0       0       0       0       0       0
  6580 ;;      Temps:          2       0       0       0       0       0       0
  6581 ;;      Totals:         6       0       0       0       0       0       0
  6582 ;;Total ram usage:        6 bytes
  6583 ;; Hardware stack levels used: 1
  6584 ;; Hardware stack levels required when called: 2
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_start_up_menu
  6589 ;;		_change_sequence
  6590 ;;		_add_component
  6591 ;;		_remove_component
  6592 ;;		_pick_and_place
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text21
  6597  002DE6                     __ptext21:
  6598                           	callstack 0
  6599  002DE6                     _print_string:
  6600                           	callstack 0
  6601  002DE6  FFFF               	dw	65535	; assembler added errata NOP
  6602  002DE8                     
  6603                           ;serial_rs232.c: 44: void print_string(char strng[]);serial_rs232.c: 45: {;serial_rs232.
      +                          c: 46:     for(int i=0; strng[i]!=((void*)0);i++){
  6604  002DE8  0E00               	movlw	0
  6605  002DEA  6E0F               	movwf	(print_string@i+1)^0,c
  6606  002DEC  0E00               	movlw	0
  6607  002DEE  6E0E               	movwf	print_string@i^0,c
  6608  002DF0  EF1F  F017         	goto	l4345
  6609  002DF4                     l4341:
  6610  002DF4  FFFF               	dw	65535	; assembler added errata NOP
  6611                           
  6612                           ;serial_rs232.c: 47:         TXREG=strng[i];
  6613  002DF6  500E               	movf	print_string@i^0,w,c
  6614  002DF8  240A               	addwf	print_string@strng^0,w,c
  6615  002DFA  6E0C               	movwf	??_print_string^0,c
  6616  002DFC  500F               	movf	(print_string@i+1)^0,w,c
  6617  002DFE  200B               	addwfc	(print_string@strng+1)^0,w,c
  6618  002E00  6E0D               	movwf	(??_print_string+1)^0,c
  6619  002E02  C00C  FFF6         	movff	??_print_string,tblptrl
  6620  002E06  C00D  FFF7         	movff	??_print_string+1,tblptrh
  6621  002E0A  6AF8               	clrf	tblptru,c
  6622  002E0C  0E05               	movlw	(high __ramtop+-1)
  6623  002E0E  64F7               	cpfsgt	tblptrh,c
  6624  002E10  D004               	bra	u4837
  6625  002E12  0008               	tblrd		*
  6626  002E14  FFFF               	dw	65535	; errata NOP
  6627  002E16  50F5               	movf	tablat,w,c
  6628  002E18  D005               	bra	u4830
  6629  002E1A                     u4837:
  6630  002E1A  CFF6 FFE1          	movff	tblptrl,fsr1l
  6631  002E1E  CFF7 FFE2          	movff	tblptrh,fsr1h
  6632  002E22  50E7               	movf	indf1,w,c
  6633  002E24                     u4830:
  6634  002E24  6EAD               	movwf	173,c	;volatile
  6635  002E26                     l77:
  6636  002E26  FFFF               	dw	65535	; assembler added errata NOP
  6637  002E28  A2AC               	btfss	172,1,c	;volatile
  6638  002E2A  EF19  F017         	goto	u4841
  6639  002E2E  EF1C  F017         	goto	u4840
  6640  002E32                     u4841:
  6641  002E32  FFFF               	dw	65535	; assembler added errata NOP
  6642  002E34  EF13  F017         	goto	l77
  6643  002E38                     u4840:
  6644  002E38  FFFF               	dw	65535	; assembler added errata NOP
  6645  002E3A                     
  6646                           ;serial_rs232.c: 49:     }
  6647  002E3A  4A0E               	infsnz	print_string@i^0,f,c
  6648  002E3C  2A0F               	incf	(print_string@i+1)^0,f,c
  6649  002E3E                     l4345:
  6650  002E3E  FFFF               	dw	65535	; assembler added errata NOP
  6651  002E40  500E               	movf	print_string@i^0,w,c
  6652  002E42  240A               	addwf	print_string@strng^0,w,c
  6653  002E44  6E0C               	movwf	??_print_string^0,c
  6654  002E46  500F               	movf	(print_string@i+1)^0,w,c
  6655  002E48  200B               	addwfc	(print_string@strng+1)^0,w,c
  6656  002E4A  6E0D               	movwf	(??_print_string+1)^0,c
  6657  002E4C  C00C  FFF6         	movff	??_print_string,tblptrl
  6658  002E50  C00D  FFF7         	movff	??_print_string+1,tblptrh
  6659  002E54  6AF8               	clrf	tblptru,c
  6660  002E56  0E05               	movlw	(high __ramtop+-1)
  6661  002E58  64F7               	cpfsgt	tblptrh,c
  6662  002E5A  D004               	bra	u4857
  6663  002E5C  0008               	tblrd		*
  6664  002E5E  FFFF               	dw	65535	; errata NOP
  6665  002E60  50F5               	movf	tablat,w,c
  6666  002E62  D005               	bra	u4850
  6667  002E64                     u4857:
  6668  002E64  CFF6 FFE1          	movff	tblptrl,fsr1l
  6669  002E68  CFF7 FFE2          	movff	tblptrh,fsr1h
  6670  002E6C  50E7               	movf	indf1,w,c
  6671  002E6E                     u4850:
  6672  002E6E  0900               	iorlw	0
  6673  002E70  A4D8               	btfss	status,2,c
  6674  002E72  EF3D  F017         	goto	u4861
  6675  002E76  EF40  F017         	goto	u4860
  6676  002E7A                     u4861:
  6677  002E7A  FFFF               	dw	65535	; assembler added errata NOP
  6678  002E7C  EFFA  F016         	goto	l4341
  6679  002E80                     u4860:
  6680  002E80  FFFF               	dw	65535	; assembler added errata NOP
  6681  002E82  0012               	return		;funcret
  6682  002E84  FFFF               	dw	65535	; errata NOP
  6683  002E86                     __end_of_print_string:
  6684                           	callstack 0
  6685                           
  6686 ;; *************** function _atoi *****************
  6687 ;; Defined at:
  6688 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  s               2   16[COMRAM] PTR const unsigned char 
  6691 ;;		 -> input_str(10), 
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;  n               2   29[COMRAM] int 
  6694 ;;  neg             2   22[COMRAM] int 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  2   16[COMRAM] int 
  6697 ;; Registers used:
  6698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6704 ;;      Params:         2       0       0       0       0       0       0
  6705 ;;      Locals:         9       0       0       0       0       0       0
  6706 ;;      Temps:          4       0       0       0       0       0       0
  6707 ;;      Totals:        15       0       0       0       0       0       0
  6708 ;;Total ram usage:       15 bytes
  6709 ;; Hardware stack levels used: 1
  6710 ;; Hardware stack levels required when called: 3
  6711 ;; This function calls:
  6712 ;;		___wmul
  6713 ;;		_isdigit
  6714 ;;		_isspace
  6715 ;; This function is called by:
  6716 ;;		_add_component
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text22
  6721  001FF8                     __ptext22:
  6722                           	callstack 0
  6723  001FF8                     _atoi:
  6724                           	callstack 0
  6725  001FF8  FFFF               	dw	65535	; assembler added errata NOP
  6726  001FFA  0E00               	movlw	0
  6727  001FFC  6E1F               	movwf	(atoi@n+1)^0,c
  6728  001FFE  0E00               	movlw	0
  6729  002000  6E1E               	movwf	atoi@n^0,c
  6730  002002  0E00               	movlw	0
  6731  002004  6E18               	movwf	(atoi@neg+1)^0,c
  6732  002006  0E00               	movlw	0
  6733  002008  6E17               	movwf	atoi@neg^0,c
  6734  00200A  EF0A  F010         	goto	l3079
  6735  00200E                     l3077:
  6736  00200E  FFFF               	dw	65535	; assembler added errata NOP
  6737  002010  4A11               	infsnz	atoi@s^0,f,c
  6738  002012  2A12               	incf	(atoi@s+1)^0,f,c
  6739  002014                     l3079:
  6740  002014  FFFF               	dw	65535	; assembler added errata NOP
  6741  002016  0E01               	movlw	1
  6742  002018  6E1D               	movwf	_atoi$1387^0,c
  6743  00201A  C011  FFD9         	movff	atoi@s,fsr2l
  6744  00201E  C012  FFDA         	movff	atoi@s+1,fsr2h
  6745  002022  0E20               	movlw	32
  6746  002024  18DE               	xorwf	postinc2,w,c
  6747  002026  B4D8               	btfsc	status,2,c
  6748  002028  EF18  F010         	goto	u2931
  6749  00202C  EF1B  F010         	goto	u2930
  6750  002030                     u2931:
  6751  002030  FFFF               	dw	65535	; assembler added errata NOP
  6752  002032  EF3A  F010         	goto	l3087
  6753  002036                     u2930:
  6754  002036  FFFF               	dw	65535	; assembler added errata NOP
  6755  002038  0EF7               	movlw	247
  6756  00203A  6E13               	movwf	??_atoi^0,c
  6757  00203C  0EFF               	movlw	255
  6758  00203E  6E14               	movwf	(??_atoi+1)^0,c
  6759  002040  C011  FFD9         	movff	atoi@s,fsr2l
  6760  002044  C012  FFDA         	movff	atoi@s+1,fsr2h
  6761  002048  50DF               	movf	indf2,w,c
  6762  00204A  6E15               	movwf	(??_atoi+2)^0,c
  6763  00204C  6A16               	clrf	(??_atoi+3)^0,c
  6764  00204E  5013               	movf	??_atoi^0,w,c
  6765  002050  2615               	addwf	(??_atoi+2)^0,f,c
  6766  002052  5014               	movf	(??_atoi+1)^0,w,c
  6767  002054  2216               	addwfc	(??_atoi+3)^0,f,c
  6768  002056  5016               	movf	(??_atoi+3)^0,w,c
  6769  002058  E10A               	bnz	u2940
  6770  00205A  0E05               	movlw	5
  6771  00205C  5C15               	subwf	(??_atoi+2)^0,w,c
  6772  00205E  A0D8               	btfss	status,0,c
  6773  002060  EF34  F010         	goto	u2941
  6774  002064  EF37  F010         	goto	u2940
  6775  002068                     u2941:
  6776  002068  FFFF               	dw	65535	; assembler added errata NOP
  6777  00206A  EF3A  F010         	goto	l3087
  6778  00206E                     u2940:
  6779  00206E  FFFF               	dw	65535	; assembler added errata NOP
  6780  002070  0E00               	movlw	0
  6781  002072  6E1D               	movwf	_atoi$1387^0,c
  6782  002074                     l3087:
  6783  002074  FFFF               	dw	65535	; assembler added errata NOP
  6784  002076  C01D  F019         	movff	_atoi$1387,_atoi$1386
  6785  00207A  6A1A               	clrf	(_atoi$1386+1)^0,c
  6786  00207C  5019               	movf	_atoi$1386^0,w,c
  6787  00207E  101A               	iorwf	(_atoi$1386+1)^0,w,c
  6788  002080  A4D8               	btfss	status,2,c
  6789  002082  EF45  F010         	goto	u2951
  6790  002086  EF48  F010         	goto	u2950
  6791  00208A                     u2951:
  6792  00208A  FFFF               	dw	65535	; assembler added errata NOP
  6793  00208C  EF07  F010         	goto	l3077
  6794  002090                     u2950:
  6795  002090  FFFF               	dw	65535	; assembler added errata NOP
  6796  002092  EF55  F010         	goto	l3097
  6797  002096                     l3093:
  6798  002096  FFFF               	dw	65535	; assembler added errata NOP
  6799  002098  0E00               	movlw	0
  6800  00209A  6E18               	movwf	(atoi@neg+1)^0,c
  6801  00209C  0E01               	movlw	1
  6802  00209E  6E17               	movwf	atoi@neg^0,c
  6803  0020A0                     l3095:
  6804  0020A0  FFFF               	dw	65535	; assembler added errata NOP
  6805  0020A2  4A11               	infsnz	atoi@s^0,f,c
  6806  0020A4  2A12               	incf	(atoi@s+1)^0,f,c
  6807  0020A6  EF8D  F010         	goto	l3103
  6808  0020AA                     l3097:
  6809  0020AA  FFFF               	dw	65535	; assembler added errata NOP
  6810  0020AC  C011  FFD9         	movff	atoi@s,fsr2l
  6811  0020B0  C012  FFDA         	movff	atoi@s+1,fsr2h
  6812  0020B4  50DF               	movf	indf2,w,c
  6813  0020B6  6E13               	movwf	??_atoi^0,c
  6814  0020B8  6A14               	clrf	(??_atoi+1)^0,c
  6815                           
  6816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6817                           ; Switch size 1, requested type "simple"
  6818                           ; Number of cases is 1, Range of values is 0 to 0
  6819                           ; switch strategies available:
  6820                           ; Name         Instructions Cycles
  6821                           ; simple_byte            4     3 (average)
  6822                           ;	Chosen strategy is simple_byte
  6823  0020BA  5014               	movf	(??_atoi+1)^0,w,c
  6824  0020BC  0A00               	xorlw	0	; case 0
  6825  0020BE  B4D8               	btfsc	status,2,c
  6826  0020C0  EF64  F010         	goto	l5301
  6827  0020C4  EF8D  F010         	goto	l3103
  6828  0020C8                     l5301:
  6829  0020C8  FFFF               	dw	65535	; assembler added errata NOP
  6830                           
  6831                           ; Switch size 1, requested type "simple"
  6832                           ; Number of cases is 2, Range of values is 43 to 45
  6833                           ; switch strategies available:
  6834                           ; Name         Instructions Cycles
  6835                           ; simple_byte            7     4 (average)
  6836                           ;	Chosen strategy is simple_byte
  6837  0020CA  5013               	movf	??_atoi^0,w,c
  6838  0020CC  0A2B               	xorlw	43	; case 43
  6839  0020CE  B4D8               	btfsc	status,2,c
  6840  0020D0  EF50  F010         	goto	l3095
  6841  0020D4  0A06               	xorlw	6	; case 45
  6842  0020D6  B4D8               	btfsc	status,2,c
  6843  0020D8  EF4B  F010         	goto	l3093
  6844  0020DC  EF8D  F010         	goto	l3103
  6845  0020E0                     l3099:
  6846  0020E0  FFFF               	dw	65535	; assembler added errata NOP
  6847  0020E2  C01E  F00A         	movff	atoi@n,___wmul@multiplier
  6848  0020E6  C01F  F00B         	movff	atoi@n+1,___wmul@multiplier+1
  6849  0020EA  0E00               	movlw	0
  6850  0020EC  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  6851  0020EE  0E0A               	movlw	10
  6852  0020F0  6E0C               	movwf	___wmul@multiplicand^0,c
  6853  0020F2  ECA5  F019         	call	___wmul	;wreg free
  6854  0020F6  C011  FFD9         	movff	atoi@s,fsr2l
  6855  0020FA  C012  FFDA         	movff	atoi@s+1,fsr2h
  6856  0020FE  50DF               	movf	indf2,w,c
  6857  002100  6E13               	movwf	??_atoi^0,c
  6858  002102  5013               	movf	??_atoi^0,w,c
  6859  002104  5E0A               	subwf	?___wmul^0,f,c
  6860  002106  0E00               	movlw	0
  6861  002108  5A0B               	subwfb	(?___wmul+1)^0,f,c
  6862  00210A  0E30               	movlw	48
  6863  00210C  240A               	addwf	?___wmul^0,w,c
  6864  00210E  6E1E               	movwf	atoi@n^0,c
  6865  002110  0E00               	movlw	0
  6866  002112  200B               	addwfc	(?___wmul+1)^0,w,c
  6867  002114  6E1F               	movwf	(atoi@n+1)^0,c
  6868  002116  EF50  F010         	goto	l3095
  6869  00211A                     l3103:
  6870  00211A  FFFF               	dw	65535	; assembler added errata NOP
  6871  00211C  0ED0               	movlw	208
  6872  00211E  6E13               	movwf	??_atoi^0,c
  6873  002120  0EFF               	movlw	255
  6874  002122  6E14               	movwf	(??_atoi+1)^0,c
  6875  002124  C011  FFD9         	movff	atoi@s,fsr2l
  6876  002128  C012  FFDA         	movff	atoi@s+1,fsr2h
  6877  00212C  50DF               	movf	indf2,w,c
  6878  00212E  6E15               	movwf	(??_atoi+2)^0,c
  6879  002130  6A16               	clrf	(??_atoi+3)^0,c
  6880  002132  5013               	movf	??_atoi^0,w,c
  6881  002134  2615               	addwf	(??_atoi+2)^0,f,c
  6882  002136  5014               	movf	(??_atoi+1)^0,w,c
  6883  002138  2216               	addwfc	(??_atoi+3)^0,f,c
  6884  00213A  5016               	movf	(??_atoi+3)^0,w,c
  6885  00213C  E10B               	bnz	u2960
  6886  00213E  0E0A               	movlw	10
  6887  002140  5C15               	subwf	(??_atoi+2)^0,w,c
  6888  002142  A0D8               	btfss	status,0,c
  6889  002144  EFA6  F010         	goto	u2961
  6890  002148  EFAA  F010         	goto	u2960
  6891  00214C                     u2961:
  6892  00214C  FFFF               	dw	65535	; assembler added errata NOP
  6893  00214E  0E01               	movlw	1
  6894  002150  EFAC  F010         	goto	u2970
  6895  002154                     u2960:
  6896  002154  FFFF               	dw	65535	; assembler added errata NOP
  6897  002156  0E00               	movlw	0
  6898  002158                     u2970:
  6899  002158  FFFF               	dw	65535	; assembler added errata NOP
  6900  00215A  6E1B               	movwf	_atoi$1388^0,c
  6901  00215C  6A1C               	clrf	(_atoi$1388+1)^0,c
  6902  00215E  501B               	movf	_atoi$1388^0,w,c
  6903  002160  101C               	iorwf	(_atoi$1388+1)^0,w,c
  6904  002162  A4D8               	btfss	status,2,c
  6905  002164  EFB6  F010         	goto	u2981
  6906  002168  EFB9  F010         	goto	u2980
  6907  00216C                     u2981:
  6908  00216C  FFFF               	dw	65535	; assembler added errata NOP
  6909  00216E  EF70  F010         	goto	l3099
  6910  002172                     u2980:
  6911  002172  FFFF               	dw	65535	; assembler added errata NOP
  6912  002174  5017               	movf	atoi@neg^0,w,c
  6913  002176  1018               	iorwf	(atoi@neg+1)^0,w,c
  6914  002178  A4D8               	btfss	status,2,c
  6915  00217A  EFC1  F010         	goto	u2991
  6916  00217E  EFC4  F010         	goto	u2990
  6917  002182                     u2991:
  6918  002182  FFFF               	dw	65535	; assembler added errata NOP
  6919  002184  EFD3  F010         	goto	l1207
  6920  002188                     u2990:
  6921  002188  FFFF               	dw	65535	; assembler added errata NOP
  6922  00218A  C01E  F013         	movff	atoi@n,??_atoi
  6923  00218E  C01F  F014         	movff	atoi@n+1,??_atoi+1
  6924  002192  1E13               	comf	??_atoi^0,f,c
  6925  002194  1E14               	comf	(??_atoi+1)^0,f,c
  6926  002196  4A13               	infsnz	??_atoi^0,f,c
  6927  002198  2A14               	incf	(??_atoi+1)^0,f,c
  6928  00219A  C013  F011         	movff	??_atoi,?_atoi
  6929  00219E  C014  F012         	movff	??_atoi+1,?_atoi+1
  6930  0021A2  EFD8  F010         	goto	l1210
  6931  0021A6                     l1207:
  6932  0021A6  FFFF               	dw	65535	; assembler added errata NOP
  6933  0021A8  C01E  F011         	movff	atoi@n,?_atoi
  6934  0021AC  C01F  F012         	movff	atoi@n+1,?_atoi+1
  6935  0021B0                     l1210:
  6936  0021B0  FFFF               	dw	65535	; assembler added errata NOP
  6937  0021B2  0012               	return		;funcret
  6938  0021B4  FFFF               	dw	65535	; errata NOP
  6939  0021B6                     __end_of_atoi:
  6940                           	callstack 0
  6941                           
  6942 ;; *************** function _isspace *****************
  6943 ;; Defined at:
  6944 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  c               2    9[COMRAM] int 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;		None
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  2    9[COMRAM] int 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6958 ;;      Params:         2       0       0       0       0       0       0
  6959 ;;      Locals:         1       0       0       0       0       0       0
  6960 ;;      Temps:          4       0       0       0       0       0       0
  6961 ;;      Totals:         7       0       0       0       0       0       0
  6962 ;;Total ram usage:        7 bytes
  6963 ;; Hardware stack levels used: 1
  6964 ;; Hardware stack levels required when called: 2
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_atoi
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           	psect	text23
  6973  003092                     __ptext23:
  6974                           	callstack 0
  6975  003092                     _isspace:
  6976                           	callstack 25
  6977  003092  FFFF               	dw	65535	; assembler added errata NOP
  6978  003094  0E01               	movlw	1
  6979  003096  6E10               	movwf	_isspace$1404^0,c
  6980  003098  0E20               	movlw	32
  6981  00309A  180A               	xorwf	isspace@c^0,w,c
  6982  00309C  100B               	iorwf	(isspace@c+1)^0,w,c
  6983  00309E  B4D8               	btfsc	status,2,c
  6984  0030A0  EF54  F018         	goto	u2831
  6985  0030A4  EF57  F018         	goto	u2830
  6986  0030A8                     u2831:
  6987  0030A8  FFFF               	dw	65535	; assembler added errata NOP
  6988  0030AA  EF73  F018         	goto	l3043
  6989  0030AE                     u2830:
  6990  0030AE  FFFF               	dw	65535	; assembler added errata NOP
  6991  0030B0  0EF7               	movlw	247
  6992  0030B2  6E0C               	movwf	??_isspace^0,c
  6993  0030B4  0EFF               	movlw	255
  6994  0030B6  6E0D               	movwf	(??_isspace+1)^0,c
  6995  0030B8  C00A  F00E         	movff	isspace@c,??_isspace+2
  6996  0030BC  C00B  F00F         	movff	isspace@c+1,??_isspace+3
  6997  0030C0  500C               	movf	??_isspace^0,w,c
  6998  0030C2  260E               	addwf	(??_isspace+2)^0,f,c
  6999  0030C4  500D               	movf	(??_isspace+1)^0,w,c
  7000  0030C6  220F               	addwfc	(??_isspace+3)^0,f,c
  7001  0030C8  500F               	movf	(??_isspace+3)^0,w,c
  7002  0030CA  E10A               	bnz	u2840
  7003  0030CC  0E05               	movlw	5
  7004  0030CE  5C0E               	subwf	(??_isspace+2)^0,w,c
  7005  0030D0  A0D8               	btfss	status,0,c
  7006  0030D2  EF6D  F018         	goto	u2841
  7007  0030D6  EF70  F018         	goto	u2840
  7008  0030DA                     u2841:
  7009  0030DA  FFFF               	dw	65535	; assembler added errata NOP
  7010  0030DC  EF73  F018         	goto	l3043
  7011  0030E0                     u2840:
  7012  0030E0  FFFF               	dw	65535	; assembler added errata NOP
  7013  0030E2  0E00               	movlw	0
  7014  0030E4  6E10               	movwf	_isspace$1404^0,c
  7015  0030E6                     l3043:
  7016  0030E6  FFFF               	dw	65535	; assembler added errata NOP
  7017  0030E8  C010  F00A         	movff	_isspace$1404,?_isspace
  7018  0030EC  6A0B               	clrf	(?_isspace+1)^0,c
  7019  0030EE  0012               	return		;funcret
  7020  0030F0  FFFF               	dw	65535	; errata NOP
  7021  0030F2                     __end_of_isspace:
  7022                           	callstack 0
  7023                           
  7024 ;; *************** function _isdigit *****************
  7025 ;; Defined at:
  7026 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  c               2    9[COMRAM] int 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  2    9[COMRAM] int 
  7033 ;; Registers used:
  7034 ;;		wreg, status,2, status,0
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7040 ;;      Params:         2       0       0       0       0       0       0
  7041 ;;      Locals:         0       0       0       0       0       0       0
  7042 ;;      Temps:          4       0       0       0       0       0       0
  7043 ;;      Totals:         6       0       0       0       0       0       0
  7044 ;;Total ram usage:        6 bytes
  7045 ;; Hardware stack levels used: 1
  7046 ;; Hardware stack levels required when called: 2
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_atoi
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text24
  7055  003220                     __ptext24:
  7056                           	callstack 0
  7057  003220                     _isdigit:
  7058                           	callstack 25
  7059  003220  FFFF               	dw	65535	; assembler added errata NOP
  7060  003222  0ED0               	movlw	208
  7061  003224  6E0C               	movwf	??_isdigit^0,c
  7062  003226  0EFF               	movlw	255
  7063  003228  6E0D               	movwf	(??_isdigit+1)^0,c
  7064  00322A  C00A  F00E         	movff	isdigit@c,??_isdigit+2
  7065  00322E  C00B  F00F         	movff	isdigit@c+1,??_isdigit+3
  7066  003232  500C               	movf	??_isdigit^0,w,c
  7067  003234  260E               	addwf	(??_isdigit+2)^0,f,c
  7068  003236  500D               	movf	(??_isdigit+1)^0,w,c
  7069  003238  220F               	addwfc	(??_isdigit+3)^0,f,c
  7070  00323A  500F               	movf	(??_isdigit+3)^0,w,c
  7071  00323C  E10B               	bnz	u2850
  7072  00323E  0E0A               	movlw	10
  7073  003240  5C0E               	subwf	(??_isdigit+2)^0,w,c
  7074  003242  A0D8               	btfss	status,0,c
  7075  003244  EF26  F019         	goto	u2851
  7076  003248  EF2A  F019         	goto	u2850
  7077  00324C                     u2851:
  7078  00324C  FFFF               	dw	65535	; assembler added errata NOP
  7079  00324E  0E01               	movlw	1
  7080  003250  EF2C  F019         	goto	u2860
  7081  003254                     u2850:
  7082  003254  FFFF               	dw	65535	; assembler added errata NOP
  7083  003256  0E00               	movlw	0
  7084  003258                     u2860:
  7085  003258  FFFF               	dw	65535	; assembler added errata NOP
  7086  00325A  6E0A               	movwf	?_isdigit^0,c
  7087  00325C  6A0B               	clrf	(?_isdigit+1)^0,c
  7088  00325E  0012               	return		;funcret
  7089  003260  FFFF               	dw	65535	; errata NOP
  7090  003262                     __end_of_isdigit:
  7091                           	callstack 0
  7092                           
  7093 ;; *************** function ___wmul *****************
  7094 ;; Defined at:
  7095 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  multiplier      2    9[COMRAM] unsigned int 
  7098 ;;  multiplicand    2   11[COMRAM] unsigned int 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  product         2   13[COMRAM] unsigned int 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  2    9[COMRAM] unsigned int 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0, prodl, prodh
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7110 ;;      Params:         4       0       0       0       0       0       0
  7111 ;;      Locals:         2       0       0       0       0       0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0
  7113 ;;      Totals:         6       0       0       0       0       0       0
  7114 ;;Total ram usage:        6 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 2
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_atoi
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           	psect	text25
  7125  00334A                     __ptext25:
  7126                           	callstack 0
  7127  00334A                     ___wmul:
  7128                           	callstack 0
  7129  00334A  FFFF               	dw	65535	; assembler added errata NOP
  7130  00334C  500A               	movf	___wmul@multiplier^0,w,c
  7131  00334E  020C               	mulwf	___wmul@multiplicand^0,c
  7132  003350  CFF3 F00E          	movff	prodl,___wmul@product
  7133  003354  CFF4 F00F          	movff	prodh,___wmul@product+1
  7134  003358  500A               	movf	___wmul@multiplier^0,w,c
  7135  00335A  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  7136  00335C  50F3               	movf	243,w,c
  7137  00335E  260F               	addwf	(___wmul@product+1)^0,f,c
  7138  003360  500B               	movf	(___wmul@multiplier+1)^0,w,c
  7139  003362  020C               	mulwf	___wmul@multiplicand^0,c
  7140  003364  50F3               	movf	243,w,c
  7141  003366  260F               	addwf	(___wmul@product+1)^0,f,c
  7142  003368  C00E  F00A         	movff	___wmul@product,?___wmul
  7143  00336C  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  7144  003370  0012               	return		;funcret
  7145  003372  FFFF               	dw	65535	; errata NOP
  7146  003374                     __end_of___wmul:
  7147                           	callstack 0
  7148                           
  7149 ;; *************** function _init_interrupts *****************
  7150 ;; Defined at:
  7151 ;;		line 71 in file "init_PIC.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;		None
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;		None
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  1    wreg      void 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7165 ;;      Params:         0       0       0       0       0       0       0
  7166 ;;      Locals:         0       0       0       0       0       0       0
  7167 ;;      Temps:          0       0       0       0       0       0       0
  7168 ;;      Totals:         0       0       0       0       0       0       0
  7169 ;;Total ram usage:        0 bytes
  7170 ;; Hardware stack levels used: 1
  7171 ;; Hardware stack levels required when called: 2
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_main
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           	psect	text26
  7180  0033C6                     __ptext26:
  7181                           	callstack 0
  7182  0033C6                     _init_interrupts:
  7183                           	callstack 0
  7184  0033C6  FFFF               	dw	65535	; assembler added errata NOP
  7185  0033C8                     
  7186                           ;init_PIC.c: 73:     PIR1bits.RCIF = 0;
  7187  0033C8  9A9E               	bcf	158,5,c	;volatile
  7188                           
  7189                           ;init_PIC.c: 74:  PIE1bits.RCIE = 1;
  7190  0033CA  8A9D               	bsf	157,5,c	;volatile
  7191                           
  7192                           ;init_PIC.c: 75:  INTCONbits.PEIE = 1;
  7193  0033CC  8CF2               	bsf	242,6,c	;volatile
  7194                           
  7195                           ;init_PIC.c: 77:     PIE1bits.TMR1IE = 1;
  7196  0033CE  809D               	bsf	157,0,c	;volatile
  7197                           
  7198                           ;init_PIC.c: 78:     INTCONbits.TMR0IE = 1;
  7199  0033D0  8AF2               	bsf	242,5,c	;volatile
  7200  0033D2                     
  7201                           ;init_PIC.c: 80:     INTCON2=0x00;
  7202  0033D2  0E00               	movlw	0
  7203  0033D4  6EF1               	movwf	241,c	;volatile
  7204                           
  7205                           ;init_PIC.c: 82:     INTCON3=0x00;
  7206  0033D6  0E00               	movlw	0
  7207  0033D8  6EF0               	movwf	240,c	;volatile
  7208  0033DA                     
  7209                           ;init_PIC.c: 83:     INTCONbits.INT0IF=0;
  7210  0033DA  92F2               	bcf	242,1,c	;volatile
  7211  0033DC                     
  7212                           ;init_PIC.c: 84:     INTCONbits.INT0IE=1;
  7213  0033DC  88F2               	bsf	242,4,c	;volatile
  7214  0033DE                     
  7215                           ;init_PIC.c: 85:     INTCON3bits.INT1IF=0;
  7216  0033DE  90F0               	bcf	240,0,c	;volatile
  7217  0033E0                     
  7218                           ;init_PIC.c: 86:     INTCON3bits.INT1IE=1;
  7219  0033E0  86F0               	bsf	240,3,c	;volatile
  7220  0033E2  0012               	return		;funcret
  7221  0033E4  FFFF               	dw	65535	; errata NOP
  7222  0033E6                     __end_of_init_interrupts:
  7223                           	callstack 0
  7224                           
  7225 ;; *************** function _init_USART *****************
  7226 ;; Defined at:
  7227 ;;		line 17 in file "serial_rs232.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;		None
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;		None
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  1    wreg      void 
  7234 ;; Registers used:
  7235 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7241 ;;      Params:         0       0       0       0       0       0       0
  7242 ;;      Locals:         0       0       0       0       0       0       0
  7243 ;;      Temps:          0       0       0       0       0       0       0
  7244 ;;      Totals:         0       0       0       0       0       0       0
  7245 ;;Total ram usage:        0 bytes
  7246 ;; Hardware stack levels used: 1
  7247 ;; Hardware stack levels required when called: 5
  7248 ;; This function calls:
  7249 ;;		___fltol
  7250 ;;		_roundf
  7251 ;; This function is called by:
  7252 ;;		_main
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text27
  7257  0032A4                     __ptext27:
  7258                           	callstack 0
  7259  0032A4                     _init_USART:
  7260                           	callstack 0
  7261  0032A4  FFFF               	dw	65535	; assembler added errata NOP
  7262  0032A6                     
  7263                           ;serial_rs232.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  7264  0032A6  0E55               	movlw	85
  7265  0032A8  6E3D               	movwf	roundf@x^0,c
  7266  0032AA  0E55               	movlw	85
  7267  0032AC  6E3E               	movwf	(roundf@x+1)^0,c
  7268  0032AE  0EC8               	movlw	200
  7269  0032B0  6E3F               	movwf	(roundf@x+2)^0,c
  7270  0032B2  0E41               	movlw	65
  7271  0032B4  6E40               	movwf	(roundf@x+3)^0,c
  7272  0032B6  EC0C  F00C         	call	_roundf	;wreg free
  7273  0032BA  C03D  F057         	movff	?_roundf,___fltol@f1
  7274  0032BE  C03E  F058         	movff	?_roundf+1,___fltol@f1+1
  7275  0032C2  C03F  F059         	movff	?_roundf+2,___fltol@f1+2
  7276  0032C6  C040  F05A         	movff	?_roundf+3,___fltol@f1+3
  7277  0032CA  ECD1  F012         	call	___fltol	;wreg free
  7278  0032CE  5057               	movf	?___fltol^0,w,c
  7279  0032D0  6EAF               	movwf	175,c	;volatile
  7280  0032D2                     
  7281                           ;serial_rs232.c: 35:  TXSTAbits.TX9=0;
  7282  0032D2  9CAC               	bcf	172,6,c	;volatile
  7283  0032D4                     
  7284                           ;serial_rs232.c: 36:     TXSTAbits.TXEN=1;
  7285  0032D4  8AAC               	bsf	172,5,c	;volatile
  7286  0032D6                     
  7287                           ;serial_rs232.c: 37:     TXSTAbits.SYNC=0;
  7288  0032D6  98AC               	bcf	172,4,c	;volatile
  7289  0032D8                     
  7290                           ;serial_rs232.c: 38:     TXSTAbits.BRGH=1;
  7291  0032D8  84AC               	bsf	172,2,c	;volatile
  7292  0032DA                     
  7293                           ;serial_rs232.c: 39:     RCSTAbits.SPEN=1;
  7294  0032DA  8EAB               	bsf	171,7,c	;volatile
  7295  0032DC                     
  7296                           ;serial_rs232.c: 40:     RCSTAbits.RX9=0;
  7297  0032DC  9CAB               	bcf	171,6,c	;volatile
  7298  0032DE                     
  7299                           ;serial_rs232.c: 41:     RCSTAbits.CREN=1;
  7300  0032DE  88AB               	bsf	171,4,c	;volatile
  7301  0032E0  0012               	return		;funcret
  7302  0032E2  FFFF               	dw	65535	; errata NOP
  7303  0032E4                     __end_of_init_USART:
  7304                           	callstack 0
  7305                           
  7306 ;; *************** function _roundf *****************
  7307 ;; Defined at:
  7308 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  x               4   60[COMRAM] float 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;  y               4   82[COMRAM] float 
  7313 ;;  u               4   78[COMRAM] struct .
  7314 ;;  e               2   72[COMRAM] int 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  4   60[COMRAM] float 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7324 ;;      Params:         4       0       0       0       0       0       0
  7325 ;;      Locals:        18       0       0       0       0       0       0
  7326 ;;      Temps:          4       0       0       0       0       0       0
  7327 ;;      Totals:        26       0       0       0       0       0       0
  7328 ;;Total ram usage:       26 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 4
  7331 ;; This function calls:
  7332 ;;		___fladd
  7333 ;;		___flge
  7334 ;;		___flmul
  7335 ;;		___flneg
  7336 ;;		___flsub
  7337 ;; This function is called by:
  7338 ;;		_init_USART
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text28
  7343  001818                     __ptext28:
  7344                           	callstack 0
  7345  001818                     _roundf:
  7346                           	callstack 0
  7347  001818  FFFF               	dw	65535	; assembler added errata NOP
  7348  00181A  C09E  F04F         	movff	roundf@F528,roundf@u
  7349  00181E  C09F  F050         	movff	roundf@F528+1,roundf@u+1
  7350  001822  C0A0  F051         	movff	roundf@F528+2,roundf@u+2
  7351  001826  C0A1  F052         	movff	roundf@F528+3,roundf@u+3
  7352  00182A  C03D  F04F         	movff	roundf@x,roundf@u
  7353  00182E  C03E  F050         	movff	roundf@x+1,roundf@u+1
  7354  001832  C03F  F051         	movff	roundf@x+2,roundf@u+2
  7355  001836  C040  F052         	movff	roundf@x+3,roundf@u+3
  7356  00183A  C04F  F041         	movff	roundf@u,??_roundf
  7357  00183E  C050  F042         	movff	roundf@u+1,??_roundf+1
  7358  001842  C051  F043         	movff	roundf@u+2,??_roundf+2
  7359  001846  C052  F044         	movff	roundf@u+3,??_roundf+3
  7360  00184A  0E18               	movlw	24
  7361  00184C  EF2E  F00C         	goto	u5440
  7362  001850                     u5445:
  7363  001850  FFFF               	dw	65535	; assembler added errata NOP
  7364  001852  90D8               	bcf	status,0,c
  7365  001854  3244               	rrcf	(??_roundf+3)^0,f,c
  7366  001856  3243               	rrcf	(??_roundf+2)^0,f,c
  7367  001858  3242               	rrcf	(??_roundf+1)^0,f,c
  7368  00185A  3241               	rrcf	??_roundf^0,f,c
  7369  00185C                     u5440:
  7370  00185C  FFFF               	dw	65535	; assembler added errata NOP
  7371  00185E  2EE8               	decfsz	wreg,f,c
  7372  001860  EF28  F00C         	goto	u5445
  7373  001864  5041               	movf	??_roundf^0,w,c
  7374  001866  6E49               	movwf	roundf@e^0,c
  7375  001868  6A4A               	clrf	(roundf@e+1)^0,c
  7376  00186A  BE4A               	btfsc	(roundf@e+1)^0,7,c
  7377  00186C  EF41  F00C         	goto	u5451
  7378  001870  504A               	movf	(roundf@e+1)^0,w,c
  7379  001872  E10A               	bnz	u5450
  7380  001874  0E96               	movlw	150
  7381  001876  5C49               	subwf	roundf@e^0,w,c
  7382  001878  A0D8               	btfss	status,0,c
  7383  00187A  EF41  F00C         	goto	u5451
  7384  00187E  EF44  F00C         	goto	u5450
  7385  001882                     u5451:
  7386  001882  FFFF               	dw	65535	; assembler added errata NOP
  7387  001884  EF4F  F00C         	goto	l4745
  7388  001888                     u5450:
  7389  001888  FFFF               	dw	65535	; assembler added errata NOP
  7390  00188A  C03D  F03D         	movff	roundf@x,?_roundf
  7391  00188E  C03E  F03E         	movff	roundf@x+1,?_roundf+1
  7392  001892  C03F  F03F         	movff	roundf@x+2,?_roundf+2
  7393  001896  C040  F040         	movff	roundf@x+3,?_roundf+3
  7394  00189A  EFFC  F00D         	goto	l1242
  7395  00189E                     l4745:
  7396  00189E  FFFF               	dw	65535	; assembler added errata NOP
  7397  0018A0  C04F  F041         	movff	roundf@u,??_roundf
  7398  0018A4  C050  F042         	movff	roundf@u+1,??_roundf+1
  7399  0018A8  C051  F043         	movff	roundf@u+2,??_roundf+2
  7400  0018AC  C052  F044         	movff	roundf@u+3,??_roundf+3
  7401  0018B0  0E20               	movlw	32
  7402  0018B2  EF61  F00C         	goto	u5460
  7403  0018B6                     u5465:
  7404  0018B6  FFFF               	dw	65535	; assembler added errata NOP
  7405  0018B8  90D8               	bcf	status,0,c
  7406  0018BA  3244               	rrcf	(??_roundf+3)^0,f,c
  7407  0018BC  3243               	rrcf	(??_roundf+2)^0,f,c
  7408  0018BE  3242               	rrcf	(??_roundf+1)^0,f,c
  7409  0018C0  3241               	rrcf	??_roundf^0,f,c
  7410  0018C2                     u5460:
  7411  0018C2  FFFF               	dw	65535	; assembler added errata NOP
  7412  0018C4  2EE8               	decfsz	wreg,f,c
  7413  0018C6  EF5B  F00C         	goto	u5465
  7414  0018CA  5041               	movf	??_roundf^0,w,c
  7415  0018CC  1042               	iorwf	(??_roundf+1)^0,w,c
  7416  0018CE  1043               	iorwf	(??_roundf+2)^0,w,c
  7417  0018D0  1044               	iorwf	(??_roundf+3)^0,w,c
  7418  0018D2  B4D8               	btfsc	status,2,c
  7419  0018D4  EF6E  F00C         	goto	u5471
  7420  0018D8  EF71  F00C         	goto	u5470
  7421  0018DC                     u5471:
  7422  0018DC  FFFF               	dw	65535	; assembler added errata NOP
  7423  0018DE  EF84  F00C         	goto	l4749
  7424  0018E2                     u5470:
  7425  0018E2  FFFF               	dw	65535	; assembler added errata NOP
  7426  0018E4  C03D  F00A         	movff	roundf@x,___flneg@f1
  7427  0018E8  C03E  F00B         	movff	roundf@x+1,___flneg@f1+1
  7428  0018EC  C03F  F00C         	movff	roundf@x+2,___flneg@f1+2
  7429  0018F0  C040  F00D         	movff	roundf@x+3,___flneg@f1+3
  7430  0018F4  EC31  F019         	call	___flneg	;wreg free
  7431  0018F8  C00A  F03D         	movff	?___flneg,roundf@x
  7432  0018FC  C00B  F03E         	movff	?___flneg+1,roundf@x+1
  7433  001900  C00C  F03F         	movff	?___flneg+2,roundf@x+2
  7434  001904  C00D  F040         	movff	?___flneg+3,roundf@x+3
  7435  001908                     l4749:
  7436  001908  FFFF               	dw	65535	; assembler added errata NOP
  7437  00190A  BE4A               	btfsc	(roundf@e+1)^0,7,c
  7438  00190C  EF94  F00C         	goto	u5480
  7439  001910  504A               	movf	(roundf@e+1)^0,w,c
  7440  001912  E107               	bnz	u5481
  7441  001914  0E7E               	movlw	126
  7442  001916  5C49               	subwf	roundf@e^0,w,c
  7443  001918  B0D8               	btfsc	status,0,c
  7444  00191A  EF91  F00C         	goto	u5481
  7445  00191E  EF94  F00C         	goto	u5480
  7446  001922                     u5481:
  7447  001922  FFFF               	dw	65535	; assembler added errata NOP
  7448  001924  EFB1  F00C         	goto	l4755
  7449  001928                     u5480:
  7450  001928  FFFF               	dw	65535	; assembler added errata NOP
  7451  00192A  C04F  F00A         	movff	roundf@u,___flmul@b
  7452  00192E  C050  F00B         	movff	roundf@u+1,___flmul@b+1
  7453  001932  C051  F00C         	movff	roundf@u+2,___flmul@b+2
  7454  001936  C052  F00D         	movff	roundf@u+3,___flmul@b+3
  7455  00193A  0E00               	movlw	0
  7456  00193C  6E0E               	movwf	___flmul@a^0,c
  7457  00193E  0E00               	movlw	0
  7458  001940  6E0F               	movwf	(___flmul@a+1)^0,c
  7459  001942  0E00               	movlw	0
  7460  001944  6E10               	movwf	(___flmul@a+2)^0,c
  7461  001946  0E00               	movlw	0
  7462  001948  6E11               	movwf	(___flmul@a+3)^0,c
  7463  00194A  ECA1  F007         	call	___flmul	;wreg free
  7464  00194E  C00A  F03D         	movff	?___flmul,?_roundf
  7465  001952  C00B  F03E         	movff	?___flmul+1,?_roundf+1
  7466  001956  C00C  F03F         	movff	?___flmul+2,?_roundf+2
  7467  00195A  C00D  F040         	movff	?___flmul+3,?_roundf+3
  7468  00195E  EFFC  F00D         	goto	l1242
  7469  001962                     l4755:
  7470  001962  FFFF               	dw	65535	; assembler added errata NOP
  7471  001964  0E00               	movlw	0
  7472  001966  6E0E               	movwf	___fladd@a^0,c
  7473  001968  0E00               	movlw	0
  7474  00196A  6E0F               	movwf	(___fladd@a+1)^0,c
  7475  00196C  0E00               	movlw	0
  7476  00196E  6E10               	movwf	(___fladd@a+2)^0,c
  7477  001970  0E4B               	movlw	75
  7478  001972  6E11               	movwf	(___fladd@a+3)^0,c
  7479  001974  C03D  F00A         	movff	roundf@x,___fladd@b
  7480  001978  C03E  F00B         	movff	roundf@x+1,___fladd@b+1
  7481  00197C  C03F  F00C         	movff	roundf@x+2,___fladd@b+2
  7482  001980  C040  F00D         	movff	roundf@x+3,___fladd@b+3
  7483  001984  ECCD  F004         	call	___fladd	;wreg free
  7484  001988  C00A  F04B         	movff	?___fladd,_roundf$1660
  7485  00198C  C00B  F04C         	movff	?___fladd+1,_roundf$1660+1
  7486  001990  C00C  F04D         	movff	?___fladd+2,_roundf$1660+2
  7487  001994  C00D  F04E         	movff	?___fladd+3,_roundf$1660+3
  7488  001998  0E00               	movlw	0
  7489  00199A  6E0E               	movwf	___fladd@a^0,c
  7490  00199C  0E00               	movlw	0
  7491  00199E  6E0F               	movwf	(___fladd@a+1)^0,c
  7492  0019A0  0E00               	movlw	0
  7493  0019A2  6E10               	movwf	(___fladd@a+2)^0,c
  7494  0019A4  0ECB               	movlw	203
  7495  0019A6  6E11               	movwf	(___fladd@a+3)^0,c
  7496  0019A8  C04B  F00A         	movff	_roundf$1660,___fladd@b
  7497  0019AC  C04C  F00B         	movff	_roundf$1660+1,___fladd@b+1
  7498  0019B0  C04D  F00C         	movff	_roundf$1660+2,___fladd@b+2
  7499  0019B4  C04E  F00D         	movff	_roundf$1660+3,___fladd@b+3
  7500  0019B8  ECCD  F004         	call	___fladd	;wreg free
  7501  0019BC  C00A  F045         	movff	?___fladd,_roundf$1661
  7502  0019C0  C00B  F046         	movff	?___fladd+1,_roundf$1661+1
  7503  0019C4  C00C  F047         	movff	?___fladd+2,_roundf$1661+2
  7504  0019C8  C00D  F048         	movff	?___fladd+3,_roundf$1661+3
  7505  0019CC  C045  F01A         	movff	_roundf$1661,___flsub@b
  7506  0019D0  C046  F01B         	movff	_roundf$1661+1,___flsub@b+1
  7507  0019D4  C047  F01C         	movff	_roundf$1661+2,___flsub@b+2
  7508  0019D8  C048  F01D         	movff	_roundf$1661+3,___flsub@b+3
  7509  0019DC  C03D  F01E         	movff	roundf@x,___flsub@a
  7510  0019E0  C03E  F01F         	movff	roundf@x+1,___flsub@a+1
  7511  0019E4  C03F  F020         	movff	roundf@x+2,___flsub@a+2
  7512  0019E8  C040  F021         	movff	roundf@x+3,___flsub@a+3
  7513  0019EC  ECA7  F018         	call	___flsub	;wreg free
  7514  0019F0  C01A  F053         	movff	?___flsub,roundf@y
  7515  0019F4  C01B  F054         	movff	?___flsub+1,roundf@y+1
  7516  0019F8  C01C  F055         	movff	?___flsub+2,roundf@y+2
  7517  0019FC  C01D  F056         	movff	?___flsub+3,roundf@y+3
  7518  001A00  0E00               	movlw	0
  7519  001A02  6E31               	movwf	___flge@ff1^0,c
  7520  001A04  0E00               	movlw	0
  7521  001A06  6E32               	movwf	(___flge@ff1+1)^0,c
  7522  001A08  0E00               	movlw	0
  7523  001A0A  6E33               	movwf	(___flge@ff1+2)^0,c
  7524  001A0C  0E3F               	movlw	63
  7525  001A0E  6E34               	movwf	(___flge@ff1+3)^0,c
  7526  001A10  C053  F035         	movff	roundf@y,___flge@ff2
  7527  001A14  C054  F036         	movff	roundf@y+1,___flge@ff2+1
  7528  001A18  C055  F037         	movff	roundf@y+2,___flge@ff2+2
  7529  001A1C  C056  F038         	movff	roundf@y+3,___flge@ff2+3
  7530  001A20  EC6D  F013         	call	___flge	;wreg free
  7531  001A24  B0D8               	btfsc	status,0,c
  7532  001A26  EF17  F00D         	goto	u5491
  7533  001A2A  EF1A  F00D         	goto	u5490
  7534  001A2E                     u5491:
  7535  001A2E  FFFF               	dw	65535	; assembler added errata NOP
  7536  001A30  EF51  F00D         	goto	l4759
  7537  001A34                     u5490:
  7538  001A34  FFFF               	dw	65535	; assembler added errata NOP
  7539  001A36  C03D  F00E         	movff	roundf@x,___fladd@a
  7540  001A3A  C03E  F00F         	movff	roundf@x+1,___fladd@a+1
  7541  001A3E  C03F  F010         	movff	roundf@x+2,___fladd@a+2
  7542  001A42  C040  F011         	movff	roundf@x+3,___fladd@a+3
  7543  001A46  C053  F00A         	movff	roundf@y,___fladd@b
  7544  001A4A  C054  F00B         	movff	roundf@y+1,___fladd@b+1
  7545  001A4E  C055  F00C         	movff	roundf@y+2,___fladd@b+2
  7546  001A52  C056  F00D         	movff	roundf@y+3,___fladd@b+3
  7547  001A56  ECCD  F004         	call	___fladd	;wreg free
  7548  001A5A  C00A  F04B         	movff	?___fladd,_roundf$1660
  7549  001A5E  C00B  F04C         	movff	?___fladd+1,_roundf$1660+1
  7550  001A62  C00C  F04D         	movff	?___fladd+2,_roundf$1660+2
  7551  001A66  C00D  F04E         	movff	?___fladd+3,_roundf$1660+3
  7552  001A6A  C04B  F00A         	movff	_roundf$1660,___fladd@b
  7553  001A6E  C04C  F00B         	movff	_roundf$1660+1,___fladd@b+1
  7554  001A72  C04D  F00C         	movff	_roundf$1660+2,___fladd@b+2
  7555  001A76  C04E  F00D         	movff	_roundf$1660+3,___fladd@b+3
  7556  001A7A  0E00               	movlw	0
  7557  001A7C  6E0E               	movwf	___fladd@a^0,c
  7558  001A7E  0E00               	movlw	0
  7559  001A80  6E0F               	movwf	(___fladd@a+1)^0,c
  7560  001A82  0E80               	movlw	128
  7561  001A84  6E10               	movwf	(___fladd@a+2)^0,c
  7562  001A86  0EBF               	movlw	191
  7563  001A88  6E11               	movwf	(___fladd@a+3)^0,c
  7564  001A8A  ECCD  F004         	call	___fladd	;wreg free
  7565  001A8E  C00A  F053         	movff	?___fladd,roundf@y
  7566  001A92  C00B  F054         	movff	?___fladd+1,roundf@y+1
  7567  001A96  C00C  F055         	movff	?___fladd+2,roundf@y+2
  7568  001A9A  C00D  F056         	movff	?___fladd+3,roundf@y+3
  7569  001A9E  EFBE  F00D         	goto	l4765
  7570  001AA2                     l4759:
  7571  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  7572  001AA4  0E00               	movlw	0
  7573  001AA6  6E31               	movwf	___flge@ff1^0,c
  7574  001AA8  0E00               	movlw	0
  7575  001AAA  6E32               	movwf	(___flge@ff1+1)^0,c
  7576  001AAC  0E00               	movlw	0
  7577  001AAE  6E33               	movwf	(___flge@ff1+2)^0,c
  7578  001AB0  0EBF               	movlw	191
  7579  001AB2  6E34               	movwf	(___flge@ff1+3)^0,c
  7580  001AB4  C053  F035         	movff	roundf@y,___flge@ff2
  7581  001AB8  C054  F036         	movff	roundf@y+1,___flge@ff2+1
  7582  001ABC  C055  F037         	movff	roundf@y+2,___flge@ff2+2
  7583  001AC0  C056  F038         	movff	roundf@y+3,___flge@ff2+3
  7584  001AC4  EC6D  F013         	call	___flge	;wreg free
  7585  001AC8  A0D8               	btfss	status,0,c
  7586  001ACA  EF69  F00D         	goto	u5501
  7587  001ACE  EF6C  F00D         	goto	u5500
  7588  001AD2                     u5501:
  7589  001AD2  FFFF               	dw	65535	; assembler added errata NOP
  7590  001AD4  EFA3  F00D         	goto	l4763
  7591  001AD8                     u5500:
  7592  001AD8  FFFF               	dw	65535	; assembler added errata NOP
  7593  001ADA  C03D  F00E         	movff	roundf@x,___fladd@a
  7594  001ADE  C03E  F00F         	movff	roundf@x+1,___fladd@a+1
  7595  001AE2  C03F  F010         	movff	roundf@x+2,___fladd@a+2
  7596  001AE6  C040  F011         	movff	roundf@x+3,___fladd@a+3
  7597  001AEA  C053  F00A         	movff	roundf@y,___fladd@b
  7598  001AEE  C054  F00B         	movff	roundf@y+1,___fladd@b+1
  7599  001AF2  C055  F00C         	movff	roundf@y+2,___fladd@b+2
  7600  001AF6  C056  F00D         	movff	roundf@y+3,___fladd@b+3
  7601  001AFA  ECCD  F004         	call	___fladd	;wreg free
  7602  001AFE  C00A  F04B         	movff	?___fladd,_roundf$1660
  7603  001B02  C00B  F04C         	movff	?___fladd+1,_roundf$1660+1
  7604  001B06  C00C  F04D         	movff	?___fladd+2,_roundf$1660+2
  7605  001B0A  C00D  F04E         	movff	?___fladd+3,_roundf$1660+3
  7606  001B0E  C04B  F00A         	movff	_roundf$1660,___fladd@b
  7607  001B12  C04C  F00B         	movff	_roundf$1660+1,___fladd@b+1
  7608  001B16  C04D  F00C         	movff	_roundf$1660+2,___fladd@b+2
  7609  001B1A  C04E  F00D         	movff	_roundf$1660+3,___fladd@b+3
  7610  001B1E  0E00               	movlw	0
  7611  001B20  6E0E               	movwf	___fladd@a^0,c
  7612  001B22  0E00               	movlw	0
  7613  001B24  6E0F               	movwf	(___fladd@a+1)^0,c
  7614  001B26  0E80               	movlw	128
  7615  001B28  6E10               	movwf	(___fladd@a+2)^0,c
  7616  001B2A  0E3F               	movlw	63
  7617  001B2C  6E11               	movwf	(___fladd@a+3)^0,c
  7618  001B2E  ECCD  F004         	call	___fladd	;wreg free
  7619  001B32  C00A  F053         	movff	?___fladd,roundf@y
  7620  001B36  C00B  F054         	movff	?___fladd+1,roundf@y+1
  7621  001B3A  C00C  F055         	movff	?___fladd+2,roundf@y+2
  7622  001B3E  C00D  F056         	movff	?___fladd+3,roundf@y+3
  7623  001B42  EFBE  F00D         	goto	l4765
  7624  001B46                     l4763:
  7625  001B46  FFFF               	dw	65535	; assembler added errata NOP
  7626  001B48  C053  F00A         	movff	roundf@y,___fladd@b
  7627  001B4C  C054  F00B         	movff	roundf@y+1,___fladd@b+1
  7628  001B50  C055  F00C         	movff	roundf@y+2,___fladd@b+2
  7629  001B54  C056  F00D         	movff	roundf@y+3,___fladd@b+3
  7630  001B58  C03D  F00E         	movff	roundf@x,___fladd@a
  7631  001B5C  C03E  F00F         	movff	roundf@x+1,___fladd@a+1
  7632  001B60  C03F  F010         	movff	roundf@x+2,___fladd@a+2
  7633  001B64  C040  F011         	movff	roundf@x+3,___fladd@a+3
  7634  001B68  ECCD  F004         	call	___fladd	;wreg free
  7635  001B6C  C00A  F053         	movff	?___fladd,roundf@y
  7636  001B70  C00B  F054         	movff	?___fladd+1,roundf@y+1
  7637  001B74  C00C  F055         	movff	?___fladd+2,roundf@y+2
  7638  001B78  C00D  F056         	movff	?___fladd+3,roundf@y+3
  7639  001B7C                     l4765:
  7640  001B7C  FFFF               	dw	65535	; assembler added errata NOP
  7641  001B7E  C04F  F041         	movff	roundf@u,??_roundf
  7642  001B82  C050  F042         	movff	roundf@u+1,??_roundf+1
  7643  001B86  C051  F043         	movff	roundf@u+2,??_roundf+2
  7644  001B8A  C052  F044         	movff	roundf@u+3,??_roundf+3
  7645  001B8E  0E20               	movlw	32
  7646  001B90  EFD0  F00D         	goto	u5510
  7647  001B94                     u5515:
  7648  001B94  FFFF               	dw	65535	; assembler added errata NOP
  7649  001B96  90D8               	bcf	status,0,c
  7650  001B98  3244               	rrcf	(??_roundf+3)^0,f,c
  7651  001B9A  3243               	rrcf	(??_roundf+2)^0,f,c
  7652  001B9C  3242               	rrcf	(??_roundf+1)^0,f,c
  7653  001B9E  3241               	rrcf	??_roundf^0,f,c
  7654  001BA0                     u5510:
  7655  001BA0  FFFF               	dw	65535	; assembler added errata NOP
  7656  001BA2  2EE8               	decfsz	wreg,f,c
  7657  001BA4  EFCA  F00D         	goto	u5515
  7658  001BA8  5041               	movf	??_roundf^0,w,c
  7659  001BAA  1042               	iorwf	(??_roundf+1)^0,w,c
  7660  001BAC  1043               	iorwf	(??_roundf+2)^0,w,c
  7661  001BAE  1044               	iorwf	(??_roundf+3)^0,w,c
  7662  001BB0  B4D8               	btfsc	status,2,c
  7663  001BB2  EFDD  F00D         	goto	u5521
  7664  001BB6  EFE0  F00D         	goto	u5520
  7665  001BBA                     u5521:
  7666  001BBA  FFFF               	dw	65535	; assembler added errata NOP
  7667  001BBC  EFF3  F00D         	goto	l4769
  7668  001BC0                     u5520:
  7669  001BC0  FFFF               	dw	65535	; assembler added errata NOP
  7670  001BC2  C053  F00A         	movff	roundf@y,___flneg@f1
  7671  001BC6  C054  F00B         	movff	roundf@y+1,___flneg@f1+1
  7672  001BCA  C055  F00C         	movff	roundf@y+2,___flneg@f1+2
  7673  001BCE  C056  F00D         	movff	roundf@y+3,___flneg@f1+3
  7674  001BD2  EC31  F019         	call	___flneg	;wreg free
  7675  001BD6  C00A  F053         	movff	?___flneg,roundf@y
  7676  001BDA  C00B  F054         	movff	?___flneg+1,roundf@y+1
  7677  001BDE  C00C  F055         	movff	?___flneg+2,roundf@y+2
  7678  001BE2  C00D  F056         	movff	?___flneg+3,roundf@y+3
  7679  001BE6                     l4769:
  7680  001BE6  FFFF               	dw	65535	; assembler added errata NOP
  7681  001BE8  C053  F03D         	movff	roundf@y,?_roundf
  7682  001BEC  C054  F03E         	movff	roundf@y+1,?_roundf+1
  7683  001BF0  C055  F03F         	movff	roundf@y+2,?_roundf+2
  7684  001BF4  C056  F040         	movff	roundf@y+3,?_roundf+3
  7685  001BF8                     l1242:
  7686  001BF8  FFFF               	dw	65535	; assembler added errata NOP
  7687  001BFA  0012               	return		;funcret
  7688  001BFC  FFFF               	dw	65535	; errata NOP
  7689  001BFE                     __end_of_roundf:
  7690                           	callstack 0
  7691                           
  7692 ;; *************** function ___flsub *****************
  7693 ;; Defined at:
  7694 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  b               4   25[COMRAM] float 
  7697 ;;  a               4   29[COMRAM] float 
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;		None
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  4   25[COMRAM] float 
  7702 ;; Registers used:
  7703 ;;		wreg, status,2, status,0, cstack
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7709 ;;      Params:         8       0       0       0       0       0       0
  7710 ;;      Locals:         0       0       0       0       0       0       0
  7711 ;;      Temps:          0       0       0       0       0       0       0
  7712 ;;      Totals:         8       0       0       0       0       0       0
  7713 ;;Total ram usage:        8 bytes
  7714 ;; Hardware stack levels used: 1
  7715 ;; Hardware stack levels required when called: 3
  7716 ;; This function calls:
  7717 ;;		___fladd
  7718 ;; This function is called by:
  7719 ;;		_roundf
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           	psect	text29
  7724  00314E                     __ptext29:
  7725                           	callstack 0
  7726  00314E                     ___flsub:
  7727                           	callstack 0
  7728  00314E  FFFF               	dw	65535	; assembler added errata NOP
  7729  003150  0E00               	movlw	0
  7730  003152  1A1E               	xorwf	___flsub@a^0,f,c
  7731  003154  0E00               	movlw	0
  7732  003156  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7733  003158  0E00               	movlw	0
  7734  00315A  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7735  00315C  0E80               	movlw	128
  7736  00315E  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7737  003160  C01A  F00A         	movff	___flsub@b,___fladd@b
  7738  003164  C01B  F00B         	movff	___flsub@b+1,___fladd@b+1
  7739  003168  C01C  F00C         	movff	___flsub@b+2,___fladd@b+2
  7740  00316C  C01D  F00D         	movff	___flsub@b+3,___fladd@b+3
  7741  003170  C01E  F00E         	movff	___flsub@a,___fladd@a
  7742  003174  C01F  F00F         	movff	___flsub@a+1,___fladd@a+1
  7743  003178  C020  F010         	movff	___flsub@a+2,___fladd@a+2
  7744  00317C  C021  F011         	movff	___flsub@a+3,___fladd@a+3
  7745  003180  ECCD  F004         	call	___fladd	;wreg free
  7746  003184  C00A  F01A         	movff	?___fladd,?___flsub
  7747  003188  C00B  F01B         	movff	?___fladd+1,?___flsub+1
  7748  00318C  C00C  F01C         	movff	?___fladd+2,?___flsub+2
  7749  003190  C00D  F01D         	movff	?___fladd+3,?___flsub+3
  7750  003194  0012               	return		;funcret
  7751  003196  FFFF               	dw	65535	; errata NOP
  7752  003198                     __end_of___flsub:
  7753                           	callstack 0
  7754                           
  7755 ;; *************** function ___fladd *****************
  7756 ;; Defined at:
  7757 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  b               4    9[COMRAM] float 
  7760 ;;  a               4   13[COMRAM] float 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;  grs             1   24[COMRAM] unsigned char 
  7763 ;;  bexp            1   23[COMRAM] unsigned char 
  7764 ;;  aexp            1   22[COMRAM] unsigned char 
  7765 ;;  signs           1   21[COMRAM] unsigned char 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  4    9[COMRAM] unsigned char 
  7768 ;; Registers used:
  7769 ;;		wreg, status,2, status,0
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7775 ;;      Params:         8       0       0       0       0       0       0
  7776 ;;      Locals:         4       0       0       0       0       0       0
  7777 ;;      Temps:          4       0       0       0       0       0       0
  7778 ;;      Totals:        16       0       0       0       0       0       0
  7779 ;;Total ram usage:       16 bytes
  7780 ;; Hardware stack levels used: 1
  7781 ;; Hardware stack levels required when called: 2
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		___flsub
  7786 ;;		_roundf
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text30
  7791  00099A                     __ptext30:
  7792                           	callstack 0
  7793  00099A                     ___fladd:
  7794                           	callstack 0
  7795  00099A  FFFF               	dw	65535	; assembler added errata NOP
  7796  00099C  500D               	movf	(___fladd@b+3)^0,w,c
  7797  00099E  0B80               	andlw	128
  7798  0009A0  6E16               	movwf	___fladd@signs^0,c
  7799  0009A2  500D               	movf	(___fladd@b+3)^0,w,c
  7800  0009A4  240D               	addwf	(___fladd@b+3)^0,w,c
  7801  0009A6  6E18               	movwf	___fladd@bexp^0,c
  7802  0009A8  AE0C               	btfss	(___fladd@b+2)^0,7,c
  7803  0009AA  EFD9  F004         	goto	u2441
  7804  0009AE  EFDC  F004         	goto	u2440
  7805  0009B2                     u2441:
  7806  0009B2  FFFF               	dw	65535	; assembler added errata NOP
  7807  0009B4  EFDE  F004         	goto	l2839
  7808  0009B8                     u2440:
  7809  0009B8  FFFF               	dw	65535	; assembler added errata NOP
  7810  0009BA  8018               	bsf	___fladd@bexp^0,0,c
  7811  0009BC                     l2839:
  7812  0009BC  FFFF               	dw	65535	; assembler added errata NOP
  7813  0009BE  5018               	movf	___fladd@bexp^0,w,c
  7814  0009C0  B4D8               	btfsc	status,2,c
  7815  0009C2  EFE5  F004         	goto	u2451
  7816  0009C6  EFE8  F004         	goto	u2450
  7817  0009CA                     u2451:
  7818  0009CA  FFFF               	dw	65535	; assembler added errata NOP
  7819  0009CC  EF01  F005         	goto	l2849
  7820  0009D0                     u2450:
  7821  0009D0  FFFF               	dw	65535	; assembler added errata NOP
  7822  0009D2  2818               	incf	___fladd@bexp^0,w,c
  7823  0009D4  A4D8               	btfss	status,2,c
  7824  0009D6  EFEF  F004         	goto	u2461
  7825  0009DA  EFF2  F004         	goto	u2460
  7826  0009DE                     u2461:
  7827  0009DE  FFFF               	dw	65535	; assembler added errata NOP
  7828  0009E0  EFFB  F004         	goto	l2845
  7829  0009E4                     u2460:
  7830  0009E4  FFFF               	dw	65535	; assembler added errata NOP
  7831  0009E6  0E00               	movlw	0
  7832  0009E8  6E0A               	movwf	___fladd@b^0,c
  7833  0009EA  0E00               	movlw	0
  7834  0009EC  6E0B               	movwf	(___fladd@b+1)^0,c
  7835  0009EE  0E00               	movlw	0
  7836  0009F0  6E0C               	movwf	(___fladd@b+2)^0,c
  7837  0009F2  0E00               	movlw	0
  7838  0009F4  6E0D               	movwf	(___fladd@b+3)^0,c
  7839  0009F6                     l2845:
  7840  0009F6  FFFF               	dw	65535	; assembler added errata NOP
  7841  0009F8  8E0C               	bsf	(___fladd@b+2)^0,7,c
  7842  0009FA  0E00               	movlw	0
  7843  0009FC  6E0D               	movwf	(___fladd@b+3)^0,c
  7844  0009FE  EF0A  F005         	goto	l2851
  7845  000A02                     l2849:
  7846  000A02  FFFF               	dw	65535	; assembler added errata NOP
  7847  000A04  0E00               	movlw	0
  7848  000A06  6E0A               	movwf	___fladd@b^0,c
  7849  000A08  0E00               	movlw	0
  7850  000A0A  6E0B               	movwf	(___fladd@b+1)^0,c
  7851  000A0C  0E00               	movlw	0
  7852  000A0E  6E0C               	movwf	(___fladd@b+2)^0,c
  7853  000A10  0E00               	movlw	0
  7854  000A12  6E0D               	movwf	(___fladd@b+3)^0,c
  7855  000A14                     l2851:
  7856  000A14  FFFF               	dw	65535	; assembler added errata NOP
  7857  000A16  5011               	movf	(___fladd@a+3)^0,w,c
  7858  000A18  0B80               	andlw	128
  7859  000A1A  6E17               	movwf	___fladd@aexp^0,c
  7860  000A1C  5016               	movf	___fladd@signs^0,w,c
  7861  000A1E  1817               	xorwf	___fladd@aexp^0,w,c
  7862  000A20  B4D8               	btfsc	status,2,c
  7863  000A22  EF15  F005         	goto	u2471
  7864  000A26  EF18  F005         	goto	u2470
  7865  000A2A                     u2471:
  7866  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  7867  000A2C  EF1A  F005         	goto	l2857
  7868  000A30                     u2470:
  7869  000A30  FFFF               	dw	65535	; assembler added errata NOP
  7870  000A32  8C16               	bsf	___fladd@signs^0,6,c
  7871  000A34                     l2857:
  7872  000A34  FFFF               	dw	65535	; assembler added errata NOP
  7873  000A36  5011               	movf	(___fladd@a+3)^0,w,c
  7874  000A38  2411               	addwf	(___fladd@a+3)^0,w,c
  7875  000A3A  6E17               	movwf	___fladd@aexp^0,c
  7876  000A3C  AE10               	btfss	(___fladd@a+2)^0,7,c
  7877  000A3E  EF23  F005         	goto	u2481
  7878  000A42  EF26  F005         	goto	u2480
  7879  000A46                     u2481:
  7880  000A46  FFFF               	dw	65535	; assembler added errata NOP
  7881  000A48  EF28  F005         	goto	l2863
  7882  000A4C                     u2480:
  7883  000A4C  FFFF               	dw	65535	; assembler added errata NOP
  7884  000A4E  8017               	bsf	___fladd@aexp^0,0,c
  7885  000A50                     l2863:
  7886  000A50  FFFF               	dw	65535	; assembler added errata NOP
  7887  000A52  5017               	movf	___fladd@aexp^0,w,c
  7888  000A54  B4D8               	btfsc	status,2,c
  7889  000A56  EF2F  F005         	goto	u2491
  7890  000A5A  EF32  F005         	goto	u2490
  7891  000A5E                     u2491:
  7892  000A5E  FFFF               	dw	65535	; assembler added errata NOP
  7893  000A60  EF4B  F005         	goto	l2873
  7894  000A64                     u2490:
  7895  000A64  FFFF               	dw	65535	; assembler added errata NOP
  7896  000A66  2817               	incf	___fladd@aexp^0,w,c
  7897  000A68  A4D8               	btfss	status,2,c
  7898  000A6A  EF39  F005         	goto	u2501
  7899  000A6E  EF3C  F005         	goto	u2500
  7900  000A72                     u2501:
  7901  000A72  FFFF               	dw	65535	; assembler added errata NOP
  7902  000A74  EF45  F005         	goto	l2869
  7903  000A78                     u2500:
  7904  000A78  FFFF               	dw	65535	; assembler added errata NOP
  7905  000A7A  0E00               	movlw	0
  7906  000A7C  6E0E               	movwf	___fladd@a^0,c
  7907  000A7E  0E00               	movlw	0
  7908  000A80  6E0F               	movwf	(___fladd@a+1)^0,c
  7909  000A82  0E00               	movlw	0
  7910  000A84  6E10               	movwf	(___fladd@a+2)^0,c
  7911  000A86  0E00               	movlw	0
  7912  000A88  6E11               	movwf	(___fladd@a+3)^0,c
  7913  000A8A                     l2869:
  7914  000A8A  FFFF               	dw	65535	; assembler added errata NOP
  7915  000A8C  8E10               	bsf	(___fladd@a+2)^0,7,c
  7916  000A8E  0E00               	movlw	0
  7917  000A90  6E11               	movwf	(___fladd@a+3)^0,c
  7918  000A92  EF54  F005         	goto	l2875
  7919  000A96                     l2873:
  7920  000A96  FFFF               	dw	65535	; assembler added errata NOP
  7921  000A98  0E00               	movlw	0
  7922  000A9A  6E0E               	movwf	___fladd@a^0,c
  7923  000A9C  0E00               	movlw	0
  7924  000A9E  6E0F               	movwf	(___fladd@a+1)^0,c
  7925  000AA0  0E00               	movlw	0
  7926  000AA2  6E10               	movwf	(___fladd@a+2)^0,c
  7927  000AA4  0E00               	movlw	0
  7928  000AA6  6E11               	movwf	(___fladd@a+3)^0,c
  7929  000AA8                     l2875:
  7930  000AA8  FFFF               	dw	65535	; assembler added errata NOP
  7931  000AAA  5018               	movf	___fladd@bexp^0,w,c
  7932  000AAC  5C17               	subwf	___fladd@aexp^0,w,c
  7933  000AAE  B0D8               	btfsc	status,0,c
  7934  000AB0  EF5C  F005         	goto	u2511
  7935  000AB4  EF5F  F005         	goto	u2510
  7936  000AB8                     u2511:
  7937  000AB8  FFFF               	dw	65535	; assembler added errata NOP
  7938  000ABA  EF8A  F005         	goto	l2911
  7939  000ABE                     u2510:
  7940  000ABE  FFFF               	dw	65535	; assembler added errata NOP
  7941  000AC0  AC16               	btfss	___fladd@signs^0,6,c
  7942  000AC2  EF65  F005         	goto	u2521
  7943  000AC6  EF68  F005         	goto	u2520
  7944  000ACA                     u2521:
  7945  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  7946  000ACC  EF6B  F005         	goto	l2881
  7947  000AD0                     u2520:
  7948  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  7949  000AD2  0E80               	movlw	128
  7950  000AD4  1A16               	xorwf	___fladd@signs^0,f,c
  7951  000AD6                     l2881:
  7952  000AD6  FFFF               	dw	65535	; assembler added errata NOP
  7953  000AD8  C018  F019         	movff	___fladd@bexp,___fladd@grs
  7954  000ADC  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  7955  000AE0  C019  F017         	movff	___fladd@grs,___fladd@aexp
  7956  000AE4  C00A  F019         	movff	___fladd@b,___fladd@grs
  7957  000AE8  C00E  F00A         	movff	___fladd@a,___fladd@b
  7958  000AEC  C019  F00E         	movff	___fladd@grs,___fladd@a
  7959  000AF0  C00B  F019         	movff	___fladd@b+1,___fladd@grs
  7960  000AF4  C00F  F00B         	movff	___fladd@a+1,___fladd@b+1
  7961  000AF8  C019  F00F         	movff	___fladd@grs,___fladd@a+1
  7962  000AFC  C00C  F019         	movff	___fladd@b+2,___fladd@grs
  7963  000B00  C010  F00C         	movff	___fladd@a+2,___fladd@b+2
  7964  000B04  C019  F010         	movff	___fladd@grs,___fladd@a+2
  7965  000B08  C00D  F019         	movff	___fladd@b+3,___fladd@grs
  7966  000B0C  C011  F00D         	movff	___fladd@a+3,___fladd@b+3
  7967  000B10  C019  F011         	movff	___fladd@grs,___fladd@a+3
  7968  000B14                     l2911:
  7969  000B14  FFFF               	dw	65535	; assembler added errata NOP
  7970  000B16  0E00               	movlw	0
  7971  000B18  6E19               	movwf	___fladd@grs^0,c
  7972  000B1A  5018               	movf	___fladd@bexp^0,w,c
  7973  000B1C  C017  F012         	movff	___fladd@aexp,??___fladd
  7974  000B20  6A13               	clrf	(??___fladd+1)^0,c
  7975  000B22  5E12               	subwf	??___fladd^0,f,c
  7976  000B24  0E00               	movlw	0
  7977  000B26  5A13               	subwfb	(??___fladd+1)^0,f,c
  7978  000B28  BE13               	btfsc	(??___fladd+1)^0,7,c
  7979  000B2A  EFA0  F005         	goto	u2531
  7980  000B2E  5013               	movf	(??___fladd+1)^0,w,c
  7981  000B30  E10A               	bnz	u2530
  7982  000B32  0E1A               	movlw	26
  7983  000B34  5C12               	subwf	??___fladd^0,w,c
  7984  000B36  A0D8               	btfss	status,0,c
  7985  000B38  EFA0  F005         	goto	u2531
  7986  000B3C  EFA3  F005         	goto	u2530
  7987  000B40                     u2531:
  7988  000B40  FFFF               	dw	65535	; assembler added errata NOP
  7989  000B42  EFE6  F005         	goto	l1037
  7990  000B46                     u2530:
  7991  000B46  FFFF               	dw	65535	; assembler added errata NOP
  7992  000B48  500A               	movf	___fladd@b^0,w,c
  7993  000B4A  100B               	iorwf	(___fladd@b+1)^0,w,c
  7994  000B4C  100C               	iorwf	(___fladd@b+2)^0,w,c
  7995  000B4E  100D               	iorwf	(___fladd@b+3)^0,w,c
  7996  000B50  A4D8               	btfss	status,2,c
  7997  000B52  EFAD  F005         	goto	u2541
  7998  000B56  EFB1  F005         	goto	u2540
  7999  000B5A                     u2541:
  8000  000B5A  FFFF               	dw	65535	; assembler added errata NOP
  8001  000B5C  0E01               	movlw	1
  8002  000B5E  EFB3  F005         	goto	u2550
  8003  000B62                     u2540:
  8004  000B62  FFFF               	dw	65535	; assembler added errata NOP
  8005  000B64  0E00               	movlw	0
  8006  000B66                     u2550:
  8007  000B66  FFFF               	dw	65535	; assembler added errata NOP
  8008  000B68  6E19               	movwf	___fladd@grs^0,c
  8009  000B6A  0E00               	movlw	0
  8010  000B6C  6E0A               	movwf	___fladd@b^0,c
  8011  000B6E  0E00               	movlw	0
  8012  000B70  6E0B               	movwf	(___fladd@b+1)^0,c
  8013  000B72  0E00               	movlw	0
  8014  000B74  6E0C               	movwf	(___fladd@b+2)^0,c
  8015  000B76  0E00               	movlw	0
  8016  000B78  6E0D               	movwf	(___fladd@b+3)^0,c
  8017  000B7A  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  8018  000B7E  EFF1  F005         	goto	l1036
  8019  000B82                     l1038:
  8020  000B82  FFFF               	dw	65535	; assembler added errata NOP
  8021  000B84  A019               	btfss	___fladd@grs^0,0,c
  8022  000B86  EFC7  F005         	goto	u2561
  8023  000B8A  EFCA  F005         	goto	u2560
  8024  000B8E                     u2561:
  8025  000B8E  FFFF               	dw	65535	; assembler added errata NOP
  8026  000B90  EFD1  F005         	goto	l2923
  8027  000B94                     u2560:
  8028  000B94  FFFF               	dw	65535	; assembler added errata NOP
  8029  000B96  90D8               	bcf	status,0,c
  8030  000B98  3019               	rrcf	___fladd@grs^0,w,c
  8031  000B9A  0901               	iorlw	1
  8032  000B9C  6E19               	movwf	___fladd@grs^0,c
  8033  000B9E  EFD4  F005         	goto	l2925
  8034  000BA2                     l2923:
  8035  000BA2  FFFF               	dw	65535	; assembler added errata NOP
  8036  000BA4  90D8               	bcf	status,0,c
  8037  000BA6  3219               	rrcf	___fladd@grs^0,f,c
  8038  000BA8                     l2925:
  8039  000BA8  FFFF               	dw	65535	; assembler added errata NOP
  8040  000BAA  A00A               	btfss	___fladd@b^0,0,c
  8041  000BAC  EFDA  F005         	goto	u2571
  8042  000BB0  EFDD  F005         	goto	u2570
  8043  000BB4                     u2571:
  8044  000BB4  FFFF               	dw	65535	; assembler added errata NOP
  8045  000BB6  EFDF  F005         	goto	l2929
  8046  000BBA                     u2570:
  8047  000BBA  FFFF               	dw	65535	; assembler added errata NOP
  8048  000BBC  8E19               	bsf	___fladd@grs^0,7,c
  8049  000BBE                     l2929:
  8050  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  8051  000BC0  340D               	rlcf	(___fladd@b+3)^0,w,c
  8052  000BC2  320D               	rrcf	(___fladd@b+3)^0,f,c
  8053  000BC4  320C               	rrcf	(___fladd@b+2)^0,f,c
  8054  000BC6  320B               	rrcf	(___fladd@b+1)^0,f,c
  8055  000BC8  320A               	rrcf	___fladd@b^0,f,c
  8056  000BCA  2A18               	incf	___fladd@bexp^0,f,c
  8057  000BCC                     l1037:
  8058  000BCC  FFFF               	dw	65535	; assembler added errata NOP
  8059  000BCE  5017               	movf	___fladd@aexp^0,w,c
  8060  000BD0  5C18               	subwf	___fladd@bexp^0,w,c
  8061  000BD2  A0D8               	btfss	status,0,c
  8062  000BD4  EFEE  F005         	goto	u2581
  8063  000BD8  EFF1  F005         	goto	u2580
  8064  000BDC                     u2581:
  8065  000BDC  FFFF               	dw	65535	; assembler added errata NOP
  8066  000BDE  EFC1  F005         	goto	l1038
  8067  000BE2                     u2580:
  8068  000BE2                     l1036:
  8069  000BE2  FFFF               	dw	65535	; assembler added errata NOP
  8070  000BE4  BC16               	btfsc	___fladd@signs^0,6,c
  8071  000BE6  EFF7  F005         	goto	u2591
  8072  000BEA  EFFA  F005         	goto	u2590
  8073  000BEE                     u2591:
  8074  000BEE  FFFF               	dw	65535	; assembler added errata NOP
  8075  000BF0  EF47  F006         	goto	l2957
  8076  000BF4                     u2590:
  8077  000BF4  FFFF               	dw	65535	; assembler added errata NOP
  8078  000BF6  5018               	movf	___fladd@bexp^0,w,c
  8079  000BF8  A4D8               	btfss	status,2,c
  8080  000BFA  EF01  F006         	goto	u2601
  8081  000BFE  EF04  F006         	goto	u2600
  8082  000C02                     u2601:
  8083  000C02  FFFF               	dw	65535	; assembler added errata NOP
  8084  000C04  EF0F  F006         	goto	l2939
  8085  000C08                     u2600:
  8086  000C08  FFFF               	dw	65535	; assembler added errata NOP
  8087  000C0A  0E00               	movlw	0
  8088  000C0C  6E0A               	movwf	?___fladd^0,c
  8089  000C0E  0E00               	movlw	0
  8090  000C10  6E0B               	movwf	(?___fladd+1)^0,c
  8091  000C12  0E00               	movlw	0
  8092  000C14  6E0C               	movwf	(?___fladd+2)^0,c
  8093  000C16  0E00               	movlw	0
  8094  000C18  6E0D               	movwf	(?___fladd+3)^0,c
  8095  000C1A  EF9E  F007         	goto	l1045
  8096  000C1E                     l2939:
  8097  000C1E  FFFF               	dw	65535	; assembler added errata NOP
  8098  000C20  500E               	movf	___fladd@a^0,w,c
  8099  000C22  260A               	addwf	___fladd@b^0,f,c
  8100  000C24  500F               	movf	(___fladd@a+1)^0,w,c
  8101  000C26  220B               	addwfc	(___fladd@b+1)^0,f,c
  8102  000C28  5010               	movf	(___fladd@a+2)^0,w,c
  8103  000C2A  220C               	addwfc	(___fladd@b+2)^0,f,c
  8104  000C2C  5011               	movf	(___fladd@a+3)^0,w,c
  8105  000C2E  220D               	addwfc	(___fladd@b+3)^0,f,c
  8106  000C30  A00D               	btfss	(___fladd@b+3)^0,0,c
  8107  000C32  EF1D  F006         	goto	u2611
  8108  000C36  EF20  F006         	goto	u2610
  8109  000C3A                     u2611:
  8110  000C3A  FFFF               	dw	65535	; assembler added errata NOP
  8111  000C3C  EFEB  F006         	goto	l2993
  8112  000C40                     u2610:
  8113  000C40  FFFF               	dw	65535	; assembler added errata NOP
  8114  000C42  A019               	btfss	___fladd@grs^0,0,c
  8115  000C44  EF26  F006         	goto	u2621
  8116  000C48  EF29  F006         	goto	u2620
  8117  000C4C                     u2621:
  8118  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  8119  000C4E  EF30  F006         	goto	l2947
  8120  000C52                     u2620:
  8121  000C52  FFFF               	dw	65535	; assembler added errata NOP
  8122  000C54  90D8               	bcf	status,0,c
  8123  000C56  3019               	rrcf	___fladd@grs^0,w,c
  8124  000C58  0901               	iorlw	1
  8125  000C5A  6E19               	movwf	___fladd@grs^0,c
  8126  000C5C  EF33  F006         	goto	l2949
  8127  000C60                     l2947:
  8128  000C60  FFFF               	dw	65535	; assembler added errata NOP
  8129  000C62  90D8               	bcf	status,0,c
  8130  000C64  3219               	rrcf	___fladd@grs^0,f,c
  8131  000C66                     l2949:
  8132  000C66  FFFF               	dw	65535	; assembler added errata NOP
  8133  000C68  A00A               	btfss	___fladd@b^0,0,c
  8134  000C6A  EF39  F006         	goto	u2631
  8135  000C6E  EF3C  F006         	goto	u2630
  8136  000C72                     u2631:
  8137  000C72  FFFF               	dw	65535	; assembler added errata NOP
  8138  000C74  EF3E  F006         	goto	l2953
  8139  000C78                     u2630:
  8140  000C78  FFFF               	dw	65535	; assembler added errata NOP
  8141  000C7A  8E19               	bsf	___fladd@grs^0,7,c
  8142  000C7C                     l2953:
  8143  000C7C  FFFF               	dw	65535	; assembler added errata NOP
  8144  000C7E  340D               	rlcf	(___fladd@b+3)^0,w,c
  8145  000C80  320D               	rrcf	(___fladd@b+3)^0,f,c
  8146  000C82  320C               	rrcf	(___fladd@b+2)^0,f,c
  8147  000C84  320B               	rrcf	(___fladd@b+1)^0,f,c
  8148  000C86  320A               	rrcf	___fladd@b^0,f,c
  8149  000C88  2A18               	incf	___fladd@bexp^0,f,c
  8150  000C8A  EFEB  F006         	goto	l2993
  8151  000C8E                     l2957:
  8152  000C8E  FFFF               	dw	65535	; assembler added errata NOP
  8153  000C90  500E               	movf	___fladd@a^0,w,c
  8154  000C92  5C0A               	subwf	___fladd@b^0,w,c
  8155  000C94  500F               	movf	(___fladd@a+1)^0,w,c
  8156  000C96  580B               	subwfb	(___fladd@b+1)^0,w,c
  8157  000C98  5010               	movf	(___fladd@a+2)^0,w,c
  8158  000C9A  580C               	subwfb	(___fladd@b+2)^0,w,c
  8159  000C9C  500D               	movf	(___fladd@b+3)^0,w,c
  8160  000C9E  0A80               	xorlw	128
  8161  000CA0  6E12               	movwf	??___fladd^0,c
  8162  000CA2  5011               	movf	(___fladd@a+3)^0,w,c
  8163  000CA4  0A80               	xorlw	128
  8164  000CA6  5812               	subwfb	??___fladd^0,w,c
  8165  000CA8  B0D8               	btfsc	status,0,c
  8166  000CAA  EF59  F006         	goto	u2641
  8167  000CAE  EF5C  F006         	goto	u2640
  8168  000CB2                     u2641:
  8169  000CB2  FFFF               	dw	65535	; assembler added errata NOP
  8170  000CB4  EF8A  F006         	goto	l2967
  8171  000CB8                     u2640:
  8172  000CB8  FFFF               	dw	65535	; assembler added errata NOP
  8173  000CBA  500A               	movf	___fladd@b^0,w,c
  8174  000CBC  5C0E               	subwf	___fladd@a^0,w,c
  8175  000CBE  6E12               	movwf	??___fladd^0,c
  8176  000CC0  500B               	movf	(___fladd@b+1)^0,w,c
  8177  000CC2  580F               	subwfb	(___fladd@a+1)^0,w,c
  8178  000CC4  6E13               	movwf	(??___fladd+1)^0,c
  8179  000CC6  500C               	movf	(___fladd@b+2)^0,w,c
  8180  000CC8  5810               	subwfb	(___fladd@a+2)^0,w,c
  8181  000CCA  6E14               	movwf	(??___fladd+2)^0,c
  8182  000CCC  500D               	movf	(___fladd@b+3)^0,w,c
  8183  000CCE  5811               	subwfb	(___fladd@a+3)^0,w,c
  8184  000CD0  6E15               	movwf	(??___fladd+3)^0,c
  8185  000CD2  0EFF               	movlw	255
  8186  000CD4  2412               	addwf	??___fladd^0,w,c
  8187  000CD6  6E0A               	movwf	___fladd@b^0,c
  8188  000CD8  0EFF               	movlw	255
  8189  000CDA  2013               	addwfc	(??___fladd+1)^0,w,c
  8190  000CDC  6E0B               	movwf	(___fladd@b+1)^0,c
  8191  000CDE  0EFF               	movlw	255
  8192  000CE0  2014               	addwfc	(??___fladd+2)^0,w,c
  8193  000CE2  6E0C               	movwf	(___fladd@b+2)^0,c
  8194  000CE4  0EFF               	movlw	255
  8195  000CE6  2015               	addwfc	(??___fladd+3)^0,w,c
  8196  000CE8  6E0D               	movwf	(___fladd@b+3)^0,c
  8197  000CEA  0E80               	movlw	128
  8198  000CEC  1A16               	xorwf	___fladd@signs^0,f,c
  8199  000CEE  6C19               	negf	___fladd@grs^0,c
  8200  000CF0  5019               	movf	___fladd@grs^0,w,c
  8201  000CF2  A4D8               	btfss	status,2,c
  8202  000CF4  EF7E  F006         	goto	u2651
  8203  000CF8  EF81  F006         	goto	u2650
  8204  000CFC                     u2651:
  8205  000CFC  FFFF               	dw	65535	; assembler added errata NOP
  8206  000CFE  EF93  F006         	goto	l1053
  8207  000D02                     u2650:
  8208  000D02  FFFF               	dw	65535	; assembler added errata NOP
  8209  000D04  0E01               	movlw	1
  8210  000D06  260A               	addwf	___fladd@b^0,f,c
  8211  000D08  0E00               	movlw	0
  8212  000D0A  220B               	addwfc	(___fladd@b+1)^0,f,c
  8213  000D0C  220C               	addwfc	(___fladd@b+2)^0,f,c
  8214  000D0E  220D               	addwfc	(___fladd@b+3)^0,f,c
  8215  000D10  EF93  F006         	goto	l1053
  8216  000D14                     l2967:
  8217  000D14  FFFF               	dw	65535	; assembler added errata NOP
  8218  000D16  500E               	movf	___fladd@a^0,w,c
  8219  000D18  5E0A               	subwf	___fladd@b^0,f,c
  8220  000D1A  500F               	movf	(___fladd@a+1)^0,w,c
  8221  000D1C  5A0B               	subwfb	(___fladd@b+1)^0,f,c
  8222  000D1E  5010               	movf	(___fladd@a+2)^0,w,c
  8223  000D20  5A0C               	subwfb	(___fladd@b+2)^0,f,c
  8224  000D22  5011               	movf	(___fladd@a+3)^0,w,c
  8225  000D24  5A0D               	subwfb	(___fladd@b+3)^0,f,c
  8226  000D26                     l1053:
  8227  000D26  FFFF               	dw	65535	; assembler added errata NOP
  8228  000D28  500A               	movf	___fladd@b^0,w,c
  8229  000D2A  100B               	iorwf	(___fladd@b+1)^0,w,c
  8230  000D2C  100C               	iorwf	(___fladd@b+2)^0,w,c
  8231  000D2E  100D               	iorwf	(___fladd@b+3)^0,w,c
  8232  000D30  A4D8               	btfss	status,2,c
  8233  000D32  EF9D  F006         	goto	u2661
  8234  000D36  EFA0  F006         	goto	u2660
  8235  000D3A                     u2661:
  8236  000D3A  FFFF               	dw	65535	; assembler added errata NOP
  8237  000D3C  EFE2  F006         	goto	l2991
  8238  000D40                     u2660:
  8239  000D40  FFFF               	dw	65535	; assembler added errata NOP
  8240  000D42  5019               	movf	___fladd@grs^0,w,c
  8241  000D44  A4D8               	btfss	status,2,c
  8242  000D46  EFA7  F006         	goto	u2671
  8243  000D4A  EFAA  F006         	goto	u2670
  8244  000D4E                     u2671:
  8245  000D4E  FFFF               	dw	65535	; assembler added errata NOP
  8246  000D50  EFE2  F006         	goto	l2991
  8247  000D54                     u2670:
  8248  000D54  FFFF               	dw	65535	; assembler added errata NOP
  8249  000D56  0E00               	movlw	0
  8250  000D58  6E0A               	movwf	?___fladd^0,c
  8251  000D5A  0E00               	movlw	0
  8252  000D5C  6E0B               	movwf	(?___fladd+1)^0,c
  8253  000D5E  0E00               	movlw	0
  8254  000D60  6E0C               	movwf	(?___fladd+2)^0,c
  8255  000D62  0E00               	movlw	0
  8256  000D64  6E0D               	movwf	(?___fladd+3)^0,c
  8257  000D66  EF9E  F007         	goto	l1045
  8258  000D6A                     l2975:
  8259  000D6A  FFFF               	dw	65535	; assembler added errata NOP
  8260  000D6C  90D8               	bcf	status,0,c
  8261  000D6E  360A               	rlcf	___fladd@b^0,f,c
  8262  000D70  360B               	rlcf	(___fladd@b+1)^0,f,c
  8263  000D72  360C               	rlcf	(___fladd@b+2)^0,f,c
  8264  000D74  360D               	rlcf	(___fladd@b+3)^0,f,c
  8265  000D76  AE19               	btfss	___fladd@grs^0,7,c
  8266  000D78  EFC0  F006         	goto	u2681
  8267  000D7C  EFC3  F006         	goto	u2680
  8268  000D80                     u2681:
  8269  000D80  FFFF               	dw	65535	; assembler added errata NOP
  8270  000D82  EFC5  F006         	goto	l2981
  8271  000D86                     u2680:
  8272  000D86  FFFF               	dw	65535	; assembler added errata NOP
  8273  000D88  800A               	bsf	___fladd@b^0,0,c
  8274  000D8A                     l2981:
  8275  000D8A  FFFF               	dw	65535	; assembler added errata NOP
  8276  000D8C  A019               	btfss	___fladd@grs^0,0,c
  8277  000D8E  EFCB  F006         	goto	u2691
  8278  000D92  EFCE  F006         	goto	u2690
  8279  000D96                     u2691:
  8280  000D96  FFFF               	dw	65535	; assembler added errata NOP
  8281  000D98  EFD3  F006         	goto	l2985
  8282  000D9C                     u2690:
  8283  000D9C  FFFF               	dw	65535	; assembler added errata NOP
  8284  000D9E  80D8               	bsf	status,0,c
  8285  000DA0  3619               	rlcf	___fladd@grs^0,f,c
  8286  000DA2  EFD6  F006         	goto	l2987
  8287  000DA6                     l2985:
  8288  000DA6  FFFF               	dw	65535	; assembler added errata NOP
  8289  000DA8  90D8               	bcf	status,0,c
  8290  000DAA  3619               	rlcf	___fladd@grs^0,f,c
  8291  000DAC                     l2987:
  8292  000DAC  FFFF               	dw	65535	; assembler added errata NOP
  8293  000DAE  5018               	movf	___fladd@bexp^0,w,c
  8294  000DB0  B4D8               	btfsc	status,2,c
  8295  000DB2  EFDD  F006         	goto	u2701
  8296  000DB6  EFE0  F006         	goto	u2700
  8297  000DBA                     u2701:
  8298  000DBA  FFFF               	dw	65535	; assembler added errata NOP
  8299  000DBC  EFE2  F006         	goto	l2991
  8300  000DC0                     u2700:
  8301  000DC0  FFFF               	dw	65535	; assembler added errata NOP
  8302  000DC2  0618               	decf	___fladd@bexp^0,f,c
  8303  000DC4                     l2991:
  8304  000DC4  FFFF               	dw	65535	; assembler added errata NOP
  8305  000DC6  AE0C               	btfss	(___fladd@b+2)^0,7,c
  8306  000DC8  EFE8  F006         	goto	u2711
  8307  000DCC  EFEB  F006         	goto	u2710
  8308  000DD0                     u2711:
  8309  000DD0  FFFF               	dw	65535	; assembler added errata NOP
  8310  000DD2  EFB5  F006         	goto	l2975
  8311  000DD6                     u2710:
  8312  000DD6                     l2993:
  8313  000DD6  FFFF               	dw	65535	; assembler added errata NOP
  8314  000DD8  0E00               	movlw	0
  8315  000DDA  6E17               	movwf	___fladd@aexp^0,c
  8316  000DDC  AE19               	btfss	___fladd@grs^0,7,c
  8317  000DDE  EFF3  F006         	goto	u2721
  8318  000DE2  EFF6  F006         	goto	u2720
  8319  000DE6                     u2721:
  8320  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  8321  000DE8  EF15  F007         	goto	l1062
  8322  000DEC                     u2720:
  8323  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  8324  000DEE  C019  F012         	movff	___fladd@grs,??___fladd
  8325  000DF2  0E7F               	movlw	127
  8326  000DF4  1612               	andwf	??___fladd^0,f,c
  8327  000DF6  B4D8               	btfsc	status,2,c
  8328  000DF8  EF00  F007         	goto	u2731
  8329  000DFC  EF03  F007         	goto	u2730
  8330  000E00                     u2731:
  8331  000E00  FFFF               	dw	65535	; assembler added errata NOP
  8332  000E02  EF09  F007         	goto	l1063
  8333  000E06                     u2730:
  8334  000E06  FFFF               	dw	65535	; assembler added errata NOP
  8335  000E08                     l2999:
  8336  000E08  FFFF               	dw	65535	; assembler added errata NOP
  8337  000E0A  0E01               	movlw	1
  8338  000E0C  6E17               	movwf	___fladd@aexp^0,c
  8339  000E0E  EF15  F007         	goto	l1062
  8340  000E12                     l1063:
  8341  000E12  FFFF               	dw	65535	; assembler added errata NOP
  8342  000E14  A00A               	btfss	___fladd@b^0,0,c
  8343  000E16  EF0F  F007         	goto	u2741
  8344  000E1A  EF12  F007         	goto	u2740
  8345  000E1E                     u2741:
  8346  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  8347  000E20  EF15  F007         	goto	l1062
  8348  000E24                     u2740:
  8349  000E24  FFFF               	dw	65535	; assembler added errata NOP
  8350  000E26  EF04  F007         	goto	l2999
  8351  000E2A                     l1062:
  8352  000E2A  FFFF               	dw	65535	; assembler added errata NOP
  8353  000E2C  5017               	movf	___fladd@aexp^0,w,c
  8354  000E2E  B4D8               	btfsc	status,2,c
  8355  000E30  EF1C  F007         	goto	u2751
  8356  000E34  EF1F  F007         	goto	u2750
  8357  000E38                     u2751:
  8358  000E38  FFFF               	dw	65535	; assembler added errata NOP
  8359  000E3A  EF4F  F007         	goto	l3011
  8360  000E3E                     u2750:
  8361  000E3E  FFFF               	dw	65535	; assembler added errata NOP
  8362  000E40  0E01               	movlw	1
  8363  000E42  260A               	addwf	___fladd@b^0,f,c
  8364  000E44  0E00               	movlw	0
  8365  000E46  220B               	addwfc	(___fladd@b+1)^0,f,c
  8366  000E48  220C               	addwfc	(___fladd@b+2)^0,f,c
  8367  000E4A  220D               	addwfc	(___fladd@b+3)^0,f,c
  8368  000E4C  A00D               	btfss	(___fladd@b+3)^0,0,c
  8369  000E4E  EF2B  F007         	goto	u2761
  8370  000E52  EF2E  F007         	goto	u2760
  8371  000E56                     u2761:
  8372  000E56  FFFF               	dw	65535	; assembler added errata NOP
  8373  000E58  EF4F  F007         	goto	l3011
  8374  000E5C                     u2760:
  8375  000E5C  FFFF               	dw	65535	; assembler added errata NOP
  8376  000E5E  C00A  F012         	movff	___fladd@b,??___fladd
  8377  000E62  C00B  F013         	movff	___fladd@b+1,??___fladd+1
  8378  000E66  C00C  F014         	movff	___fladd@b+2,??___fladd+2
  8379  000E6A  C00D  F015         	movff	___fladd@b+3,??___fladd+3
  8380  000E6E  3415               	rlcf	(??___fladd+3)^0,w,c
  8381  000E70  3215               	rrcf	(??___fladd+3)^0,f,c
  8382  000E72  3214               	rrcf	(??___fladd+2)^0,f,c
  8383  000E74  3213               	rrcf	(??___fladd+1)^0,f,c
  8384  000E76  3212               	rrcf	??___fladd^0,f,c
  8385  000E78  C012  F00A         	movff	??___fladd,___fladd@b
  8386  000E7C  C013  F00B         	movff	??___fladd+1,___fladd@b+1
  8387  000E80  C014  F00C         	movff	??___fladd+2,___fladd@b+2
  8388  000E84  C015  F00D         	movff	??___fladd+3,___fladd@b+3
  8389  000E88  2818               	incf	___fladd@bexp^0,w,c
  8390  000E8A  B4D8               	btfsc	status,2,c
  8391  000E8C  EF4A  F007         	goto	u2771
  8392  000E90  EF4D  F007         	goto	u2770
  8393  000E94                     u2771:
  8394  000E94  FFFF               	dw	65535	; assembler added errata NOP
  8395  000E96  EF4F  F007         	goto	l3011
  8396  000E9A                     u2770:
  8397  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  8398  000E9C  2A18               	incf	___fladd@bexp^0,f,c
  8399  000E9E                     l3011:
  8400  000E9E  FFFF               	dw	65535	; assembler added errata NOP
  8401  000EA0  2818               	incf	___fladd@bexp^0,w,c
  8402  000EA2  B4D8               	btfsc	status,2,c
  8403  000EA4  EF56  F007         	goto	u2781
  8404  000EA8  EF59  F007         	goto	u2780
  8405  000EAC                     u2781:
  8406  000EAC  FFFF               	dw	65535	; assembler added errata NOP
  8407  000EAE  EF63  F007         	goto	l3015
  8408  000EB2                     u2780:
  8409  000EB2  FFFF               	dw	65535	; assembler added errata NOP
  8410  000EB4  5018               	movf	___fladd@bexp^0,w,c
  8411  000EB6  A4D8               	btfss	status,2,c
  8412  000EB8  EF60  F007         	goto	u2791
  8413  000EBC  EF63  F007         	goto	u2790
  8414  000EC0                     u2791:
  8415  000EC0  FFFF               	dw	65535	; assembler added errata NOP
  8416  000EC2  EF78  F007         	goto	l3019
  8417  000EC6                     u2790:
  8418  000EC6                     l3015:
  8419  000EC6  FFFF               	dw	65535	; assembler added errata NOP
  8420  000EC8  0E00               	movlw	0
  8421  000ECA  6E0A               	movwf	___fladd@b^0,c
  8422  000ECC  0E00               	movlw	0
  8423  000ECE  6E0B               	movwf	(___fladd@b+1)^0,c
  8424  000ED0  0E00               	movlw	0
  8425  000ED2  6E0C               	movwf	(___fladd@b+2)^0,c
  8426  000ED4  0E00               	movlw	0
  8427  000ED6  6E0D               	movwf	(___fladd@b+3)^0,c
  8428  000ED8  5018               	movf	___fladd@bexp^0,w,c
  8429  000EDA  A4D8               	btfss	status,2,c
  8430  000EDC  EF72  F007         	goto	u2801
  8431  000EE0  EF75  F007         	goto	u2800
  8432  000EE4                     u2801:
  8433  000EE4  FFFF               	dw	65535	; assembler added errata NOP
  8434  000EE6  EF78  F007         	goto	l3019
  8435  000EEA                     u2800:
  8436  000EEA  FFFF               	dw	65535	; assembler added errata NOP
  8437  000EEC  0E00               	movlw	0
  8438  000EEE  6E16               	movwf	___fladd@signs^0,c
  8439  000EF0                     l3019:
  8440  000EF0  FFFF               	dw	65535	; assembler added errata NOP
  8441  000EF2  A018               	btfss	___fladd@bexp^0,0,c
  8442  000EF4  EF7E  F007         	goto	u2811
  8443  000EF8  EF81  F007         	goto	u2810
  8444  000EFC                     u2811:
  8445  000EFC  FFFF               	dw	65535	; assembler added errata NOP
  8446  000EFE  EF85  F007         	goto	l3023
  8447  000F02                     u2810:
  8448  000F02  FFFF               	dw	65535	; assembler added errata NOP
  8449  000F04  8E0C               	bsf	(___fladd@b+2)^0,7,c
  8450  000F06  EF87  F007         	goto	l3025
  8451  000F0A                     l3023:
  8452  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  8453  000F0C  9E0C               	bcf	(___fladd@b+2)^0,7,c
  8454  000F0E                     l3025:
  8455  000F0E  FFFF               	dw	65535	; assembler added errata NOP
  8456  000F10  90D8               	bcf	status,0,c
  8457  000F12  3018               	rrcf	___fladd@bexp^0,w,c
  8458  000F14  6E0D               	movwf	(___fladd@b+3)^0,c
  8459  000F16  AE16               	btfss	___fladd@signs^0,7,c
  8460  000F18  EF90  F007         	goto	u2821
  8461  000F1C  EF93  F007         	goto	u2820
  8462  000F20                     u2821:
  8463  000F20  FFFF               	dw	65535	; assembler added errata NOP
  8464  000F22  EF95  F007         	goto	l3031
  8465  000F26                     u2820:
  8466  000F26  FFFF               	dw	65535	; assembler added errata NOP
  8467  000F28  8E0D               	bsf	(___fladd@b+3)^0,7,c
  8468  000F2A                     l3031:
  8469  000F2A  FFFF               	dw	65535	; assembler added errata NOP
  8470  000F2C  C00A  F00A         	movff	___fladd@b,?___fladd
  8471  000F30  C00B  F00B         	movff	___fladd@b+1,?___fladd+1
  8472  000F34  C00C  F00C         	movff	___fladd@b+2,?___fladd+2
  8473  000F38  C00D  F00D         	movff	___fladd@b+3,?___fladd+3
  8474  000F3C                     l1045:
  8475  000F3C  FFFF               	dw	65535	; assembler added errata NOP
  8476  000F3E  0012               	return		;funcret
  8477  000F40  FFFF               	dw	65535	; errata NOP
  8478  000F42                     __end_of___fladd:
  8479                           	callstack 0
  8480                           
  8481 ;; *************** function ___flneg *****************
  8482 ;; Defined at:
  8483 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  f1              4    9[COMRAM] unsigned char 
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;		None
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  4    9[COMRAM] unsigned char 
  8490 ;; Registers used:
  8491 ;;		wreg, status,2, status,0
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8497 ;;      Params:         4       0       0       0       0       0       0
  8498 ;;      Locals:         0       0       0       0       0       0       0
  8499 ;;      Temps:          0       0       0       0       0       0       0
  8500 ;;      Totals:         4       0       0       0       0       0       0
  8501 ;;Total ram usage:        4 bytes
  8502 ;; Hardware stack levels used: 1
  8503 ;; Hardware stack levels required when called: 2
  8504 ;; This function calls:
  8505 ;;		Nothing
  8506 ;; This function is called by:
  8507 ;;		_roundf
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text31
  8512  003262                     __ptext31:
  8513                           	callstack 0
  8514  003262                     ___flneg:
  8515                           	callstack 0
  8516  003262  FFFF               	dw	65535	; assembler added errata NOP
  8517  003264  500A               	movf	___flneg@f1^0,w,c
  8518  003266  100B               	iorwf	(___flneg@f1+1)^0,w,c
  8519  003268  100C               	iorwf	(___flneg@f1+2)^0,w,c
  8520  00326A  100D               	iorwf	(___flneg@f1+3)^0,w,c
  8521  00326C  B4D8               	btfsc	status,2,c
  8522  00326E  EF3B  F019         	goto	u3731
  8523  003272  EF3E  F019         	goto	u3730
  8524  003276                     u3731:
  8525  003276  FFFF               	dw	65535	; assembler added errata NOP
  8526  003278  EF47  F019         	goto	l3649
  8527  00327C                     u3730:
  8528  00327C  FFFF               	dw	65535	; assembler added errata NOP
  8529  00327E  0E00               	movlw	0
  8530  003280  1A0A               	xorwf	___flneg@f1^0,f,c
  8531  003282  0E00               	movlw	0
  8532  003284  1A0B               	xorwf	(___flneg@f1+1)^0,f,c
  8533  003286  0E00               	movlw	0
  8534  003288  1A0C               	xorwf	(___flneg@f1+2)^0,f,c
  8535  00328A  0E80               	movlw	128
  8536  00328C  1A0D               	xorwf	(___flneg@f1+3)^0,f,c
  8537  00328E                     l3649:
  8538  00328E  FFFF               	dw	65535	; assembler added errata NOP
  8539  003290  C00A  F00A         	movff	___flneg@f1,?___flneg
  8540  003294  C00B  F00B         	movff	___flneg@f1+1,?___flneg+1
  8541  003298  C00C  F00C         	movff	___flneg@f1+2,?___flneg+2
  8542  00329C  C00D  F00D         	movff	___flneg@f1+3,?___flneg+3
  8543  0032A0  0012               	return		;funcret
  8544  0032A2  FFFF               	dw	65535	; errata NOP
  8545  0032A4                     __end_of___flneg:
  8546                           	callstack 0
  8547                           
  8548 ;; *************** function ___flmul *****************
  8549 ;; Defined at:
  8550 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  b               4    9[COMRAM] unsigned char 
  8553 ;;  a               4   13[COMRAM] unsigned char 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  prod            4   28[COMRAM] struct .
  8556 ;;  grs             4   22[COMRAM] unsigned long 
  8557 ;;  temp            2   32[COMRAM] struct .
  8558 ;;  bexp            1   27[COMRAM] unsigned char 
  8559 ;;  aexp            1   26[COMRAM] unsigned char 
  8560 ;;  sign            1   21[COMRAM] unsigned char 
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  4    9[COMRAM] unsigned char 
  8563 ;; Registers used:
  8564 ;;		wreg, status,2, status,0, prodl, prodh
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8570 ;;      Params:         8       0       0       0       0       0       0
  8571 ;;      Locals:        13       0       0       0       0       0       0
  8572 ;;      Temps:          4       0       0       0       0       0       0
  8573 ;;      Totals:        25       0       0       0       0       0       0
  8574 ;;Total ram usage:       25 bytes
  8575 ;; Hardware stack levels used: 1
  8576 ;; Hardware stack levels required when called: 2
  8577 ;; This function calls:
  8578 ;;		Nothing
  8579 ;; This function is called by:
  8580 ;;		_roundf
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text32
  8585  000F42                     __ptext32:
  8586                           	callstack 0
  8587  000F42                     ___flmul:
  8588                           	callstack 0
  8589  000F42  FFFF               	dw	65535	; assembler added errata NOP
  8590  000F44  500D               	movf	(___flmul@b+3)^0,w,c
  8591  000F46  0B80               	andlw	128
  8592  000F48  6E16               	movwf	___flmul@sign^0,c
  8593  000F4A  500D               	movf	(___flmul@b+3)^0,w,c
  8594  000F4C  240D               	addwf	(___flmul@b+3)^0,w,c
  8595  000F4E  6E1C               	movwf	___flmul@bexp^0,c
  8596  000F50  AE0C               	btfss	(___flmul@b+2)^0,7,c
  8597  000F52  EFAD  F007         	goto	u3491
  8598  000F56  EFB0  F007         	goto	u3490
  8599  000F5A                     u3491:
  8600  000F5A  FFFF               	dw	65535	; assembler added errata NOP
  8601  000F5C  EFB2  F007         	goto	l3493
  8602  000F60                     u3490:
  8603  000F60  FFFF               	dw	65535	; assembler added errata NOP
  8604  000F62  801C               	bsf	___flmul@bexp^0,0,c
  8605  000F64                     l3493:
  8606  000F64  FFFF               	dw	65535	; assembler added errata NOP
  8607  000F66  501C               	movf	___flmul@bexp^0,w,c
  8608  000F68  B4D8               	btfsc	status,2,c
  8609  000F6A  EFB9  F007         	goto	u3501
  8610  000F6E  EFBC  F007         	goto	u3500
  8611  000F72                     u3501:
  8612  000F72  FFFF               	dw	65535	; assembler added errata NOP
  8613  000F74  EFD3  F007         	goto	l3501
  8614  000F78                     u3500:
  8615  000F78  FFFF               	dw	65535	; assembler added errata NOP
  8616  000F7A  281C               	incf	___flmul@bexp^0,w,c
  8617  000F7C  A4D8               	btfss	status,2,c
  8618  000F7E  EFC3  F007         	goto	u3511
  8619  000F82  EFC6  F007         	goto	u3510
  8620  000F86                     u3511:
  8621  000F86  FFFF               	dw	65535	; assembler added errata NOP
  8622  000F88  EFCF  F007         	goto	l3499
  8623  000F8C                     u3510:
  8624  000F8C  FFFF               	dw	65535	; assembler added errata NOP
  8625  000F8E  0E00               	movlw	0
  8626  000F90  6E0A               	movwf	___flmul@b^0,c
  8627  000F92  0E00               	movlw	0
  8628  000F94  6E0B               	movwf	(___flmul@b+1)^0,c
  8629  000F96  0E00               	movlw	0
  8630  000F98  6E0C               	movwf	(___flmul@b+2)^0,c
  8631  000F9A  0E00               	movlw	0
  8632  000F9C  6E0D               	movwf	(___flmul@b+3)^0,c
  8633  000F9E                     l3499:
  8634  000F9E  FFFF               	dw	65535	; assembler added errata NOP
  8635  000FA0  8E0C               	bsf	(___flmul@b+2)^0,7,c
  8636  000FA2  EFDC  F007         	goto	l3503
  8637  000FA6                     l3501:
  8638  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  8639  000FA8  0E00               	movlw	0
  8640  000FAA  6E0A               	movwf	___flmul@b^0,c
  8641  000FAC  0E00               	movlw	0
  8642  000FAE  6E0B               	movwf	(___flmul@b+1)^0,c
  8643  000FB0  0E00               	movlw	0
  8644  000FB2  6E0C               	movwf	(___flmul@b+2)^0,c
  8645  000FB4  0E00               	movlw	0
  8646  000FB6  6E0D               	movwf	(___flmul@b+3)^0,c
  8647  000FB8                     l3503:
  8648  000FB8  FFFF               	dw	65535	; assembler added errata NOP
  8649  000FBA  5011               	movf	(___flmul@a+3)^0,w,c
  8650  000FBC  0B80               	andlw	128
  8651  000FBE  1A16               	xorwf	___flmul@sign^0,f,c
  8652  000FC0  5011               	movf	(___flmul@a+3)^0,w,c
  8653  000FC2  2411               	addwf	(___flmul@a+3)^0,w,c
  8654  000FC4  6E1B               	movwf	___flmul@aexp^0,c
  8655  000FC6  AE10               	btfss	(___flmul@a+2)^0,7,c
  8656  000FC8  EFE8  F007         	goto	u3521
  8657  000FCC  EFEB  F007         	goto	u3520
  8658  000FD0                     u3521:
  8659  000FD0  FFFF               	dw	65535	; assembler added errata NOP
  8660  000FD2  EFED  F007         	goto	l3511
  8661  000FD6                     u3520:
  8662  000FD6  FFFF               	dw	65535	; assembler added errata NOP
  8663  000FD8  801B               	bsf	___flmul@aexp^0,0,c
  8664  000FDA                     l3511:
  8665  000FDA  FFFF               	dw	65535	; assembler added errata NOP
  8666  000FDC  501B               	movf	___flmul@aexp^0,w,c
  8667  000FDE  B4D8               	btfsc	status,2,c
  8668  000FE0  EFF4  F007         	goto	u3531
  8669  000FE4  EFF7  F007         	goto	u3530
  8670  000FE8                     u3531:
  8671  000FE8  FFFF               	dw	65535	; assembler added errata NOP
  8672  000FEA  EF0E  F008         	goto	l3519
  8673  000FEE                     u3530:
  8674  000FEE  FFFF               	dw	65535	; assembler added errata NOP
  8675  000FF0  281B               	incf	___flmul@aexp^0,w,c
  8676  000FF2  A4D8               	btfss	status,2,c
  8677  000FF4  EFFE  F007         	goto	u3541
  8678  000FF8  EF01  F008         	goto	u3540
  8679  000FFC                     u3541:
  8680  000FFC  FFFF               	dw	65535	; assembler added errata NOP
  8681  000FFE  EF0A  F008         	goto	l3517
  8682  001002                     u3540:
  8683  001002  FFFF               	dw	65535	; assembler added errata NOP
  8684  001004  0E00               	movlw	0
  8685  001006  6E0E               	movwf	___flmul@a^0,c
  8686  001008  0E00               	movlw	0
  8687  00100A  6E0F               	movwf	(___flmul@a+1)^0,c
  8688  00100C  0E00               	movlw	0
  8689  00100E  6E10               	movwf	(___flmul@a+2)^0,c
  8690  001010  0E00               	movlw	0
  8691  001012  6E11               	movwf	(___flmul@a+3)^0,c
  8692  001014                     l3517:
  8693  001014  FFFF               	dw	65535	; assembler added errata NOP
  8694  001016  8E10               	bsf	(___flmul@a+2)^0,7,c
  8695  001018  EF17  F008         	goto	l1122
  8696  00101C                     l3519:
  8697  00101C  FFFF               	dw	65535	; assembler added errata NOP
  8698  00101E  0E00               	movlw	0
  8699  001020  6E0E               	movwf	___flmul@a^0,c
  8700  001022  0E00               	movlw	0
  8701  001024  6E0F               	movwf	(___flmul@a+1)^0,c
  8702  001026  0E00               	movlw	0
  8703  001028  6E10               	movwf	(___flmul@a+2)^0,c
  8704  00102A  0E00               	movlw	0
  8705  00102C  6E11               	movwf	(___flmul@a+3)^0,c
  8706  00102E                     l1122:
  8707  00102E  FFFF               	dw	65535	; assembler added errata NOP
  8708  001030  501B               	movf	___flmul@aexp^0,w,c
  8709  001032  B4D8               	btfsc	status,2,c
  8710  001034  EF1E  F008         	goto	u3551
  8711  001038  EF21  F008         	goto	u3550
  8712  00103C                     u3551:
  8713  00103C  FFFF               	dw	65535	; assembler added errata NOP
  8714  00103E  EF2B  F008         	goto	l3523
  8715  001042                     u3550:
  8716  001042  FFFF               	dw	65535	; assembler added errata NOP
  8717  001044  501C               	movf	___flmul@bexp^0,w,c
  8718  001046  A4D8               	btfss	status,2,c
  8719  001048  EF28  F008         	goto	u3561
  8720  00104C  EF2B  F008         	goto	u3560
  8721  001050                     u3561:
  8722  001050  FFFF               	dw	65535	; assembler added errata NOP
  8723  001052  EF36  F008         	goto	l3527
  8724  001056                     u3560:
  8725  001056                     l3523:
  8726  001056  FFFF               	dw	65535	; assembler added errata NOP
  8727  001058  0E00               	movlw	0
  8728  00105A  6E0A               	movwf	?___flmul^0,c
  8729  00105C  0E00               	movlw	0
  8730  00105E  6E0B               	movwf	(?___flmul+1)^0,c
  8731  001060  0E00               	movlw	0
  8732  001062  6E0C               	movwf	(?___flmul+2)^0,c
  8733  001064  0E00               	movlw	0
  8734  001066  6E0D               	movwf	(?___flmul+3)^0,c
  8735  001068  EFF0  F009         	goto	l1126
  8736  00106C                     l3527:
  8737  00106C  FFFF               	dw	65535	; assembler added errata NOP
  8738  00106E  5010               	movf	(___flmul@a+2)^0,w,c
  8739  001070  020A               	mulwf	___flmul@b^0,c
  8740  001072  CFF3 F021          	movff	prodl,___flmul@temp
  8741  001076  CFF4 F022          	movff	prodh,___flmul@temp+1
  8742  00107A  5021               	movf	___flmul@temp^0,w,c
  8743  00107C  6E17               	movwf	___flmul@grs^0,c
  8744  00107E  6A18               	clrf	(___flmul@grs+1)^0,c
  8745  001080  6A19               	clrf	(___flmul@grs+2)^0,c
  8746  001082  6A1A               	clrf	(___flmul@grs+3)^0,c
  8747  001084  5022               	movf	(___flmul@temp+1)^0,w,c
  8748  001086  6E1D               	movwf	___flmul@prod^0,c
  8749  001088  6A1E               	clrf	(___flmul@prod+1)^0,c
  8750  00108A  6A1F               	clrf	(___flmul@prod+2)^0,c
  8751  00108C  6A20               	clrf	(___flmul@prod+3)^0,c
  8752  00108E  500F               	movf	(___flmul@a+1)^0,w,c
  8753  001090  020B               	mulwf	(___flmul@b+1)^0,c
  8754  001092  CFF3 F021          	movff	prodl,___flmul@temp
  8755  001096  CFF4 F022          	movff	prodh,___flmul@temp+1
  8756  00109A  5021               	movf	___flmul@temp^0,w,c
  8757  00109C  2617               	addwf	___flmul@grs^0,f,c
  8758  00109E  0E00               	movlw	0
  8759  0010A0  2218               	addwfc	(___flmul@grs+1)^0,f,c
  8760  0010A2  2219               	addwfc	(___flmul@grs+2)^0,f,c
  8761  0010A4  221A               	addwfc	(___flmul@grs+3)^0,f,c
  8762  0010A6  5022               	movf	(___flmul@temp+1)^0,w,c
  8763  0010A8  261D               	addwf	___flmul@prod^0,f,c
  8764  0010AA  0E00               	movlw	0
  8765  0010AC  221E               	addwfc	(___flmul@prod+1)^0,f,c
  8766  0010AE  221F               	addwfc	(___flmul@prod+2)^0,f,c
  8767  0010B0  2220               	addwfc	(___flmul@prod+3)^0,f,c
  8768  0010B2  500E               	movf	___flmul@a^0,w,c
  8769  0010B4  020C               	mulwf	(___flmul@b+2)^0,c
  8770  0010B6  CFF3 F021          	movff	prodl,___flmul@temp
  8771  0010BA  CFF4 F022          	movff	prodh,___flmul@temp+1
  8772  0010BE  5021               	movf	___flmul@temp^0,w,c
  8773  0010C0  2617               	addwf	___flmul@grs^0,f,c
  8774  0010C2  0E00               	movlw	0
  8775  0010C4  2218               	addwfc	(___flmul@grs+1)^0,f,c
  8776  0010C6  2219               	addwfc	(___flmul@grs+2)^0,f,c
  8777  0010C8  221A               	addwfc	(___flmul@grs+3)^0,f,c
  8778  0010CA  5022               	movf	(___flmul@temp+1)^0,w,c
  8779  0010CC  261D               	addwf	___flmul@prod^0,f,c
  8780  0010CE  0E00               	movlw	0
  8781  0010D0  221E               	addwfc	(___flmul@prod+1)^0,f,c
  8782  0010D2  221F               	addwfc	(___flmul@prod+2)^0,f,c
  8783  0010D4  2220               	addwfc	(___flmul@prod+3)^0,f,c
  8784  0010D6  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  8785  0010DA  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  8786  0010DE  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  8787  0010E2  6A17               	clrf	___flmul@grs^0,c
  8788  0010E4  500E               	movf	___flmul@a^0,w,c
  8789  0010E6  020B               	mulwf	(___flmul@b+1)^0,c
  8790  0010E8  CFF3 F021          	movff	prodl,___flmul@temp
  8791  0010EC  CFF4 F022          	movff	prodh,___flmul@temp+1
  8792  0010F0  5021               	movf	___flmul@temp^0,w,c
  8793  0010F2  2617               	addwf	___flmul@grs^0,f,c
  8794  0010F4  5022               	movf	(___flmul@temp+1)^0,w,c
  8795  0010F6  2218               	addwfc	(___flmul@grs+1)^0,f,c
  8796  0010F8  0E00               	movlw	0
  8797  0010FA  2219               	addwfc	(___flmul@grs+2)^0,f,c
  8798  0010FC  0E00               	movlw	0
  8799  0010FE  221A               	addwfc	(___flmul@grs+3)^0,f,c
  8800  001100  500F               	movf	(___flmul@a+1)^0,w,c
  8801  001102  020A               	mulwf	___flmul@b^0,c
  8802  001104  CFF3 F021          	movff	prodl,___flmul@temp
  8803  001108  CFF4 F022          	movff	prodh,___flmul@temp+1
  8804  00110C  5021               	movf	___flmul@temp^0,w,c
  8805  00110E  2617               	addwf	___flmul@grs^0,f,c
  8806  001110  5022               	movf	(___flmul@temp+1)^0,w,c
  8807  001112  2218               	addwfc	(___flmul@grs+1)^0,f,c
  8808  001114  0E00               	movlw	0
  8809  001116  2219               	addwfc	(___flmul@grs+2)^0,f,c
  8810  001118  0E00               	movlw	0
  8811  00111A  221A               	addwfc	(___flmul@grs+3)^0,f,c
  8812  00111C  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  8813  001120  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  8814  001124  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  8815  001128  6A17               	clrf	___flmul@grs^0,c
  8816  00112A  500E               	movf	___flmul@a^0,w,c
  8817  00112C  020A               	mulwf	___flmul@b^0,c
  8818  00112E  CFF3 F021          	movff	prodl,___flmul@temp
  8819  001132  CFF4 F022          	movff	prodh,___flmul@temp+1
  8820  001136  5021               	movf	___flmul@temp^0,w,c
  8821  001138  2617               	addwf	___flmul@grs^0,f,c
  8822  00113A  5022               	movf	(___flmul@temp+1)^0,w,c
  8823  00113C  2218               	addwfc	(___flmul@grs+1)^0,f,c
  8824  00113E  0E00               	movlw	0
  8825  001140  2219               	addwfc	(___flmul@grs+2)^0,f,c
  8826  001142  0E00               	movlw	0
  8827  001144  221A               	addwfc	(___flmul@grs+3)^0,f,c
  8828  001146  5010               	movf	(___flmul@a+2)^0,w,c
  8829  001148  020B               	mulwf	(___flmul@b+1)^0,c
  8830  00114A  CFF3 F021          	movff	prodl,___flmul@temp
  8831  00114E  CFF4 F022          	movff	prodh,___flmul@temp+1
  8832  001152  5021               	movf	___flmul@temp^0,w,c
  8833  001154  261D               	addwf	___flmul@prod^0,f,c
  8834  001156  5022               	movf	(___flmul@temp+1)^0,w,c
  8835  001158  221E               	addwfc	(___flmul@prod+1)^0,f,c
  8836  00115A  0E00               	movlw	0
  8837  00115C  221F               	addwfc	(___flmul@prod+2)^0,f,c
  8838  00115E  0E00               	movlw	0
  8839  001160  2220               	addwfc	(___flmul@prod+3)^0,f,c
  8840  001162  500F               	movf	(___flmul@a+1)^0,w,c
  8841  001164  020C               	mulwf	(___flmul@b+2)^0,c
  8842  001166  CFF3 F021          	movff	prodl,___flmul@temp
  8843  00116A  CFF4 F022          	movff	prodh,___flmul@temp+1
  8844  00116E  5021               	movf	___flmul@temp^0,w,c
  8845  001170  261D               	addwf	___flmul@prod^0,f,c
  8846  001172  5022               	movf	(___flmul@temp+1)^0,w,c
  8847  001174  221E               	addwfc	(___flmul@prod+1)^0,f,c
  8848  001176  0E00               	movlw	0
  8849  001178  221F               	addwfc	(___flmul@prod+2)^0,f,c
  8850  00117A  0E00               	movlw	0
  8851  00117C  2220               	addwfc	(___flmul@prod+3)^0,f,c
  8852  00117E  5010               	movf	(___flmul@a+2)^0,w,c
  8853  001180  020C               	mulwf	(___flmul@b+2)^0,c
  8854  001182  CFF3 F021          	movff	prodl,___flmul@temp
  8855  001186  CFF4 F022          	movff	prodh,___flmul@temp+1
  8856  00118A  5021               	movf	___flmul@temp^0,w,c
  8857  00118C  6E12               	movwf	??___flmul^0,c
  8858  00118E  5022               	movf	(___flmul@temp+1)^0,w,c
  8859  001190  6E13               	movwf	(??___flmul+1)^0,c
  8860  001192  6A14               	clrf	(??___flmul+2)^0,c
  8861  001194  6A15               	clrf	(??___flmul+3)^0,c
  8862  001196  C014  F015         	movff	??___flmul+2,??___flmul+3
  8863  00119A  C013  F014         	movff	??___flmul+1,??___flmul+2
  8864  00119E  C012  F013         	movff	??___flmul,??___flmul+1
  8865  0011A2  6A12               	clrf	??___flmul^0,c
  8866  0011A4  5012               	movf	??___flmul^0,w,c
  8867  0011A6  261D               	addwf	___flmul@prod^0,f,c
  8868  0011A8  5013               	movf	(??___flmul+1)^0,w,c
  8869  0011AA  221E               	addwfc	(___flmul@prod+1)^0,f,c
  8870  0011AC  5014               	movf	(??___flmul+2)^0,w,c
  8871  0011AE  221F               	addwfc	(___flmul@prod+2)^0,f,c
  8872  0011B0  5015               	movf	(??___flmul+3)^0,w,c
  8873  0011B2  2220               	addwfc	(___flmul@prod+3)^0,f,c
  8874  0011B4  C017  F012         	movff	___flmul@grs,??___flmul
  8875  0011B8  C018  F013         	movff	___flmul@grs+1,??___flmul+1
  8876  0011BC  C019  F014         	movff	___flmul@grs+2,??___flmul+2
  8877  0011C0  C01A  F015         	movff	___flmul@grs+3,??___flmul+3
  8878  0011C4  0E19               	movlw	25
  8879  0011C6  EFEB  F008         	goto	u3570
  8880  0011CA                     u3575:
  8881  0011CA  FFFF               	dw	65535	; assembler added errata NOP
  8882  0011CC  90D8               	bcf	status,0,c
  8883  0011CE  3215               	rrcf	(??___flmul+3)^0,f,c
  8884  0011D0  3214               	rrcf	(??___flmul+2)^0,f,c
  8885  0011D2  3213               	rrcf	(??___flmul+1)^0,f,c
  8886  0011D4  3212               	rrcf	??___flmul^0,f,c
  8887  0011D6                     u3570:
  8888  0011D6  FFFF               	dw	65535	; assembler added errata NOP
  8889  0011D8  2EE8               	decfsz	wreg,f,c
  8890  0011DA  EFE5  F008         	goto	u3575
  8891  0011DE  5012               	movf	??___flmul^0,w,c
  8892  0011E0  261D               	addwf	___flmul@prod^0,f,c
  8893  0011E2  5013               	movf	(??___flmul+1)^0,w,c
  8894  0011E4  221E               	addwfc	(___flmul@prod+1)^0,f,c
  8895  0011E6  5014               	movf	(??___flmul+2)^0,w,c
  8896  0011E8  221F               	addwfc	(___flmul@prod+2)^0,f,c
  8897  0011EA  5015               	movf	(??___flmul+3)^0,w,c
  8898  0011EC  2220               	addwfc	(___flmul@prod+3)^0,f,c
  8899  0011EE  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  8900  0011F2  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  8901  0011F6  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  8902  0011FA  6A17               	clrf	___flmul@grs^0,c
  8903  0011FC  501B               	movf	___flmul@aexp^0,w,c
  8904  0011FE  C01C  F012         	movff	___flmul@bexp,??___flmul
  8905  001202  6A13               	clrf	(??___flmul+1)^0,c
  8906  001204  2612               	addwf	??___flmul^0,f,c
  8907  001206  0E00               	movlw	0
  8908  001208  2213               	addwfc	(??___flmul+1)^0,f,c
  8909  00120A  0E82               	movlw	130
  8910  00120C  2412               	addwf	??___flmul^0,w,c
  8911  00120E  6E21               	movwf	___flmul@temp^0,c
  8912  001210  0EFF               	movlw	255
  8913  001212  2013               	addwfc	(??___flmul+1)^0,w,c
  8914  001214  6E22               	movwf	(___flmul@temp+1)^0,c
  8915  001216  EF26  F009         	goto	l3575
  8916  00121A                     l3569:
  8917  00121A  FFFF               	dw	65535	; assembler added errata NOP
  8918  00121C  90D8               	bcf	status,0,c
  8919  00121E  361D               	rlcf	___flmul@prod^0,f,c
  8920  001220  361E               	rlcf	(___flmul@prod+1)^0,f,c
  8921  001222  361F               	rlcf	(___flmul@prod+2)^0,f,c
  8922  001224  3620               	rlcf	(___flmul@prod+3)^0,f,c
  8923  001226  AE1A               	btfss	(___flmul@grs+3)^0,7,c
  8924  001228  EF18  F009         	goto	u3581
  8925  00122C  EF1B  F009         	goto	u3580
  8926  001230                     u3581:
  8927  001230  FFFF               	dw	65535	; assembler added errata NOP
  8928  001232  EF1D  F009         	goto	l1129
  8929  001236                     u3580:
  8930  001236  FFFF               	dw	65535	; assembler added errata NOP
  8931  001238  801D               	bsf	___flmul@prod^0,0,c
  8932  00123A                     l1129:
  8933  00123A  FFFF               	dw	65535	; assembler added errata NOP
  8934  00123C  90D8               	bcf	status,0,c
  8935  00123E  3617               	rlcf	___flmul@grs^0,f,c
  8936  001240  3618               	rlcf	(___flmul@grs+1)^0,f,c
  8937  001242  3619               	rlcf	(___flmul@grs+2)^0,f,c
  8938  001244  361A               	rlcf	(___flmul@grs+3)^0,f,c
  8939  001246  0621               	decf	___flmul@temp^0,f,c
  8940  001248  A0D8               	btfss	status,0,c
  8941  00124A  0622               	decf	(___flmul@temp+1)^0,f,c
  8942  00124C                     l3575:
  8943  00124C  FFFF               	dw	65535	; assembler added errata NOP
  8944  00124E  AE1F               	btfss	(___flmul@prod+2)^0,7,c
  8945  001250  EF2C  F009         	goto	u3591
  8946  001254  EF2F  F009         	goto	u3590
  8947  001258                     u3591:
  8948  001258  FFFF               	dw	65535	; assembler added errata NOP
  8949  00125A  EF0D  F009         	goto	l3569
  8950  00125E                     u3590:
  8951  00125E  FFFF               	dw	65535	; assembler added errata NOP
  8952  001260  0E00               	movlw	0
  8953  001262  6E1B               	movwf	___flmul@aexp^0,c
  8954  001264  AE1A               	btfss	(___flmul@grs+3)^0,7,c
  8955  001266  EF37  F009         	goto	u3601
  8956  00126A  EF3A  F009         	goto	u3600
  8957  00126E                     u3601:
  8958  00126E  FFFF               	dw	65535	; assembler added errata NOP
  8959  001270  EF65  F009         	goto	l1131
  8960  001274                     u3600:
  8961  001274  FFFF               	dw	65535	; assembler added errata NOP
  8962  001276  0EFF               	movlw	255
  8963  001278  1417               	andwf	___flmul@grs^0,w,c
  8964  00127A  6E12               	movwf	??___flmul^0,c
  8965  00127C  0EFF               	movlw	255
  8966  00127E  1418               	andwf	(___flmul@grs+1)^0,w,c
  8967  001280  6E13               	movwf	(??___flmul+1)^0,c
  8968  001282  0EFF               	movlw	255
  8969  001284  1419               	andwf	(___flmul@grs+2)^0,w,c
  8970  001286  6E14               	movwf	(??___flmul+2)^0,c
  8971  001288  0E7F               	movlw	127
  8972  00128A  141A               	andwf	(___flmul@grs+3)^0,w,c
  8973  00128C  6E15               	movwf	(??___flmul+3)^0,c
  8974  00128E  5012               	movf	??___flmul^0,w,c
  8975  001290  1013               	iorwf	(??___flmul+1)^0,w,c
  8976  001292  1014               	iorwf	(??___flmul+2)^0,w,c
  8977  001294  1015               	iorwf	(??___flmul+3)^0,w,c
  8978  001296  B4D8               	btfsc	status,2,c
  8979  001298  EF50  F009         	goto	u3611
  8980  00129C  EF53  F009         	goto	u3610
  8981  0012A0                     u3611:
  8982  0012A0  FFFF               	dw	65535	; assembler added errata NOP
  8983  0012A2  EF59  F009         	goto	l1132
  8984  0012A6                     u3610:
  8985  0012A6  FFFF               	dw	65535	; assembler added errata NOP
  8986  0012A8                     l3583:
  8987  0012A8  FFFF               	dw	65535	; assembler added errata NOP
  8988  0012AA  0E01               	movlw	1
  8989  0012AC  6E1B               	movwf	___flmul@aexp^0,c
  8990  0012AE  EF65  F009         	goto	l1131
  8991  0012B2                     l1132:
  8992  0012B2  FFFF               	dw	65535	; assembler added errata NOP
  8993  0012B4  A01D               	btfss	___flmul@prod^0,0,c
  8994  0012B6  EF5F  F009         	goto	u3621
  8995  0012BA  EF62  F009         	goto	u3620
  8996  0012BE                     u3621:
  8997  0012BE  FFFF               	dw	65535	; assembler added errata NOP
  8998  0012C0  EF65  F009         	goto	l1131
  8999  0012C4                     u3620:
  9000  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  9001  0012C6  EF54  F009         	goto	l3583
  9002  0012CA                     l1131:
  9003  0012CA  FFFF               	dw	65535	; assembler added errata NOP
  9004  0012CC  501B               	movf	___flmul@aexp^0,w,c
  9005  0012CE  B4D8               	btfsc	status,2,c
  9006  0012D0  EF6C  F009         	goto	u3631
  9007  0012D4  EF6F  F009         	goto	u3630
  9008  0012D8                     u3631:
  9009  0012D8  FFFF               	dw	65535	; assembler added errata NOP
  9010  0012DA  EF96  F009         	goto	l3595
  9011  0012DE                     u3630:
  9012  0012DE  FFFF               	dw	65535	; assembler added errata NOP
  9013  0012E0  0E01               	movlw	1
  9014  0012E2  261D               	addwf	___flmul@prod^0,f,c
  9015  0012E4  0E00               	movlw	0
  9016  0012E6  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9017  0012E8  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9018  0012EA  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9019  0012EC  A020               	btfss	(___flmul@prod+3)^0,0,c
  9020  0012EE  EF7B  F009         	goto	u3641
  9021  0012F2  EF7E  F009         	goto	u3640
  9022  0012F6                     u3641:
  9023  0012F6  FFFF               	dw	65535	; assembler added errata NOP
  9024  0012F8  EF96  F009         	goto	l3595
  9025  0012FC                     u3640:
  9026  0012FC  FFFF               	dw	65535	; assembler added errata NOP
  9027  0012FE  C01D  F012         	movff	___flmul@prod,??___flmul
  9028  001302  C01E  F013         	movff	___flmul@prod+1,??___flmul+1
  9029  001306  C01F  F014         	movff	___flmul@prod+2,??___flmul+2
  9030  00130A  C020  F015         	movff	___flmul@prod+3,??___flmul+3
  9031  00130E  3415               	rlcf	(??___flmul+3)^0,w,c
  9032  001310  3215               	rrcf	(??___flmul+3)^0,f,c
  9033  001312  3214               	rrcf	(??___flmul+2)^0,f,c
  9034  001314  3213               	rrcf	(??___flmul+1)^0,f,c
  9035  001316  3212               	rrcf	??___flmul^0,f,c
  9036  001318  C012  F01D         	movff	??___flmul,___flmul@prod
  9037  00131C  C013  F01E         	movff	??___flmul+1,___flmul@prod+1
  9038  001320  C014  F01F         	movff	??___flmul+2,___flmul@prod+2
  9039  001324  C015  F020         	movff	??___flmul+3,___flmul@prod+3
  9040  001328  4A21               	infsnz	___flmul@temp^0,f,c
  9041  00132A  2A22               	incf	(___flmul@temp+1)^0,f,c
  9042  00132C                     l3595:
  9043  00132C  FFFF               	dw	65535	; assembler added errata NOP
  9044  00132E  BE22               	btfsc	(___flmul@temp+1)^0,7,c
  9045  001330  EFA2  F009         	goto	u3651
  9046  001334  5022               	movf	(___flmul@temp+1)^0,w,c
  9047  001336  E109               	bnz	u3650
  9048  001338  2821               	incf	___flmul@temp^0,w,c
  9049  00133A  A0D8               	btfss	status,0,c
  9050  00133C  EFA2  F009         	goto	u3651
  9051  001340  EFA5  F009         	goto	u3650
  9052  001344                     u3651:
  9053  001344  FFFF               	dw	65535	; assembler added errata NOP
  9054  001346  EFB0  F009         	goto	l3599
  9055  00134A                     u3650:
  9056  00134A  FFFF               	dw	65535	; assembler added errata NOP
  9057  00134C  0E00               	movlw	0
  9058  00134E  6E1D               	movwf	___flmul@prod^0,c
  9059  001350  0E00               	movlw	0
  9060  001352  6E1E               	movwf	(___flmul@prod+1)^0,c
  9061  001354  0E80               	movlw	128
  9062  001356  6E1F               	movwf	(___flmul@prod+2)^0,c
  9063  001358  0E7F               	movlw	127
  9064  00135A  6E20               	movwf	(___flmul@prod+3)^0,c
  9065  00135C  EFE5  F009         	goto	l3611
  9066  001360                     l3599:
  9067  001360  FFFF               	dw	65535	; assembler added errata NOP
  9068  001362  BE22               	btfsc	(___flmul@temp+1)^0,7,c
  9069  001364  EFBF  F009         	goto	u3660
  9070  001368  5022               	movf	(___flmul@temp+1)^0,w,c
  9071  00136A  E106               	bnz	u3661
  9072  00136C  0421               	decf	___flmul@temp^0,w,c
  9073  00136E  B0D8               	btfsc	status,0,c
  9074  001370  EFBC  F009         	goto	u3661
  9075  001374  EFBF  F009         	goto	u3660
  9076  001378                     u3661:
  9077  001378  FFFF               	dw	65535	; assembler added errata NOP
  9078  00137A  EFCC  F009         	goto	l1139
  9079  00137E                     u3660:
  9080  00137E  FFFF               	dw	65535	; assembler added errata NOP
  9081  001380  0E00               	movlw	0
  9082  001382  6E1D               	movwf	___flmul@prod^0,c
  9083  001384  0E00               	movlw	0
  9084  001386  6E1E               	movwf	(___flmul@prod+1)^0,c
  9085  001388  0E00               	movlw	0
  9086  00138A  6E1F               	movwf	(___flmul@prod+2)^0,c
  9087  00138C  0E00               	movlw	0
  9088  00138E  6E20               	movwf	(___flmul@prod+3)^0,c
  9089  001390  0E00               	movlw	0
  9090  001392  6E16               	movwf	___flmul@sign^0,c
  9091  001394  EFE5  F009         	goto	l3611
  9092  001398                     l1139:
  9093  001398  FFFF               	dw	65535	; assembler added errata NOP
  9094  00139A  C021  F01C         	movff	___flmul@temp,___flmul@bexp
  9095  00139E  0EFF               	movlw	255
  9096  0013A0  161D               	andwf	___flmul@prod^0,f,c
  9097  0013A2  0EFF               	movlw	255
  9098  0013A4  161E               	andwf	(___flmul@prod+1)^0,f,c
  9099  0013A6  0E7F               	movlw	127
  9100  0013A8  161F               	andwf	(___flmul@prod+2)^0,f,c
  9101  0013AA  0E00               	movlw	0
  9102  0013AC  1620               	andwf	(___flmul@prod+3)^0,f,c
  9103  0013AE  A01C               	btfss	___flmul@bexp^0,0,c
  9104  0013B0  EFDC  F009         	goto	u3671
  9105  0013B4  EFDF  F009         	goto	u3670
  9106  0013B8                     u3671:
  9107  0013B8  FFFF               	dw	65535	; assembler added errata NOP
  9108  0013BA  EFE1  F009         	goto	l3609
  9109  0013BE                     u3670:
  9110  0013BE  FFFF               	dw	65535	; assembler added errata NOP
  9111  0013C0  8E1F               	bsf	(___flmul@prod+2)^0,7,c
  9112  0013C2                     l3609:
  9113  0013C2  FFFF               	dw	65535	; assembler added errata NOP
  9114  0013C4  90D8               	bcf	status,0,c
  9115  0013C6  301C               	rrcf	___flmul@bexp^0,w,c
  9116  0013C8  6E20               	movwf	(___flmul@prod+3)^0,c
  9117  0013CA                     l3611:
  9118  0013CA  FFFF               	dw	65535	; assembler added errata NOP
  9119  0013CC  5016               	movf	___flmul@sign^0,w,c
  9120  0013CE  1220               	iorwf	(___flmul@prod+3)^0,f,c
  9121  0013D0  C01D  F00A         	movff	___flmul@prod,?___flmul
  9122  0013D4  C01E  F00B         	movff	___flmul@prod+1,?___flmul+1
  9123  0013D8  C01F  F00C         	movff	___flmul@prod+2,?___flmul+2
  9124  0013DC  C020  F00D         	movff	___flmul@prod+3,?___flmul+3
  9125  0013E0                     l1126:
  9126  0013E0  FFFF               	dw	65535	; assembler added errata NOP
  9127  0013E2  0012               	return		;funcret
  9128  0013E4  FFFF               	dw	65535	; errata NOP
  9129  0013E6                     __end_of___flmul:
  9130                           	callstack 0
  9131                           
  9132 ;; *************** function ___flge *****************
  9133 ;; Defined at:
  9134 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;  ff1             4   48[COMRAM] unsigned char 
  9137 ;;  ff2             4   52[COMRAM] unsigned char 
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;		None
  9140 ;; Return value:  Size  Location     Type
  9141 ;;		None               void
  9142 ;; Registers used:
  9143 ;;		wreg, status,2, status,0
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9149 ;;      Params:         8       0       0       0       0       0       0
  9150 ;;      Locals:         0       0       0       0       0       0       0
  9151 ;;      Temps:          4       0       0       0       0       0       0
  9152 ;;      Totals:        12       0       0       0       0       0       0
  9153 ;;Total ram usage:       12 bytes
  9154 ;; Hardware stack levels used: 1
  9155 ;; Hardware stack levels required when called: 2
  9156 ;; This function calls:
  9157 ;;		Nothing
  9158 ;; This function is called by:
  9159 ;;		_pick_and_place
  9160 ;;		_roundf
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text33
  9165  0026DA                     __ptext33:
  9166                           	callstack 0
  9167  0026DA                     ___flge:
  9168                           	callstack 0
  9169  0026DA  FFFF               	dw	65535	; assembler added errata NOP
  9170  0026DC  0E00               	movlw	0
  9171  0026DE  1431               	andwf	___flge@ff1^0,w,c
  9172  0026E0  6E39               	movwf	??___flge^0,c
  9173  0026E2  0E00               	movlw	0
  9174  0026E4  1432               	andwf	(___flge@ff1+1)^0,w,c
  9175  0026E6  6E3A               	movwf	(??___flge+1)^0,c
  9176  0026E8  0E80               	movlw	128
  9177  0026EA  1433               	andwf	(___flge@ff1+2)^0,w,c
  9178  0026EC  6E3B               	movwf	(??___flge+2)^0,c
  9179  0026EE  0E7F               	movlw	127
  9180  0026F0  1434               	andwf	(___flge@ff1+3)^0,w,c
  9181  0026F2  6E3C               	movwf	(??___flge+3)^0,c
  9182  0026F4  5039               	movf	??___flge^0,w,c
  9183  0026F6  103A               	iorwf	(??___flge+1)^0,w,c
  9184  0026F8  103B               	iorwf	(??___flge+2)^0,w,c
  9185  0026FA  103C               	iorwf	(??___flge+3)^0,w,c
  9186  0026FC  A4D8               	btfss	status,2,c
  9187  0026FE  EF83  F013         	goto	u5291
  9188  002702  EF86  F013         	goto	u5290
  9189  002706                     u5291:
  9190  002706  FFFF               	dw	65535	; assembler added errata NOP
  9191  002708  EF8F  F013         	goto	l4675
  9192  00270C                     u5290:
  9193  00270C  FFFF               	dw	65535	; assembler added errata NOP
  9194  00270E  0E00               	movlw	0
  9195  002710  6E31               	movwf	___flge@ff1^0,c
  9196  002712  0E00               	movlw	0
  9197  002714  6E32               	movwf	(___flge@ff1+1)^0,c
  9198  002716  0E00               	movlw	0
  9199  002718  6E33               	movwf	(___flge@ff1+2)^0,c
  9200  00271A  0E00               	movlw	0
  9201  00271C  6E34               	movwf	(___flge@ff1+3)^0,c
  9202  00271E                     l4675:
  9203  00271E  FFFF               	dw	65535	; assembler added errata NOP
  9204  002720  0E00               	movlw	0
  9205  002722  1435               	andwf	___flge@ff2^0,w,c
  9206  002724  6E39               	movwf	??___flge^0,c
  9207  002726  0E00               	movlw	0
  9208  002728  1436               	andwf	(___flge@ff2+1)^0,w,c
  9209  00272A  6E3A               	movwf	(??___flge+1)^0,c
  9210  00272C  0E80               	movlw	128
  9211  00272E  1437               	andwf	(___flge@ff2+2)^0,w,c
  9212  002730  6E3B               	movwf	(??___flge+2)^0,c
  9213  002732  0E7F               	movlw	127
  9214  002734  1438               	andwf	(___flge@ff2+3)^0,w,c
  9215  002736  6E3C               	movwf	(??___flge+3)^0,c
  9216  002738  5039               	movf	??___flge^0,w,c
  9217  00273A  103A               	iorwf	(??___flge+1)^0,w,c
  9218  00273C  103B               	iorwf	(??___flge+2)^0,w,c
  9219  00273E  103C               	iorwf	(??___flge+3)^0,w,c
  9220  002740  A4D8               	btfss	status,2,c
  9221  002742  EFA5  F013         	goto	u5301
  9222  002746  EFA8  F013         	goto	u5300
  9223  00274A                     u5301:
  9224  00274A  FFFF               	dw	65535	; assembler added errata NOP
  9225  00274C  EFB1  F013         	goto	l4679
  9226  002750                     u5300:
  9227  002750  FFFF               	dw	65535	; assembler added errata NOP
  9228  002752  0E00               	movlw	0
  9229  002754  6E35               	movwf	___flge@ff2^0,c
  9230  002756  0E00               	movlw	0
  9231  002758  6E36               	movwf	(___flge@ff2+1)^0,c
  9232  00275A  0E00               	movlw	0
  9233  00275C  6E37               	movwf	(___flge@ff2+2)^0,c
  9234  00275E  0E00               	movlw	0
  9235  002760  6E38               	movwf	(___flge@ff2+3)^0,c
  9236  002762                     l4679:
  9237  002762  FFFF               	dw	65535	; assembler added errata NOP
  9238  002764  AE34               	btfss	(___flge@ff1+3)^0,7,c
  9239  002766  EFB7  F013         	goto	u5311
  9240  00276A  EFBA  F013         	goto	u5310
  9241  00276E                     u5311:
  9242  00276E  FFFF               	dw	65535	; assembler added errata NOP
  9243  002770  EFC4  F013         	goto	l4683
  9244  002774                     u5310:
  9245  002774  FFFF               	dw	65535	; assembler added errata NOP
  9246  002776  6C31               	negf	___flge@ff1^0,c
  9247  002778  1E32               	comf	(___flge@ff1+1)^0,f,c
  9248  00277A  B0D8               	btfsc	status,0,c
  9249  00277C  2A32               	incf	(___flge@ff1+1)^0,f,c
  9250  00277E  1E33               	comf	(___flge@ff1+2)^0,f,c
  9251  002780  B0D8               	btfsc	status,0,c
  9252  002782  2A33               	incf	(___flge@ff1+2)^0,f,c
  9253  002784  0E80               	movlw	128
  9254  002786  5634               	subfwb	(___flge@ff1+3)^0,f,c
  9255  002788                     l4683:
  9256  002788  FFFF               	dw	65535	; assembler added errata NOP
  9257  00278A  AE38               	btfss	(___flge@ff2+3)^0,7,c
  9258  00278C  EFCA  F013         	goto	u5321
  9259  002790  EFCD  F013         	goto	u5320
  9260  002794                     u5321:
  9261  002794  FFFF               	dw	65535	; assembler added errata NOP
  9262  002796  EFD7  F013         	goto	l773
  9263  00279A                     u5320:
  9264  00279A  FFFF               	dw	65535	; assembler added errata NOP
  9265  00279C  6C35               	negf	___flge@ff2^0,c
  9266  00279E  1E36               	comf	(___flge@ff2+1)^0,f,c
  9267  0027A0  B0D8               	btfsc	status,0,c
  9268  0027A2  2A36               	incf	(___flge@ff2+1)^0,f,c
  9269  0027A4  1E37               	comf	(___flge@ff2+2)^0,f,c
  9270  0027A6  B0D8               	btfsc	status,0,c
  9271  0027A8  2A37               	incf	(___flge@ff2+2)^0,f,c
  9272  0027AA  0E80               	movlw	128
  9273  0027AC  5638               	subfwb	(___flge@ff2+3)^0,f,c
  9274  0027AE                     l773:
  9275  0027AE  FFFF               	dw	65535	; assembler added errata NOP
  9276  0027B0  0E00               	movlw	0
  9277  0027B2  1A31               	xorwf	___flge@ff1^0,f,c
  9278  0027B4  0E00               	movlw	0
  9279  0027B6  1A32               	xorwf	(___flge@ff1+1)^0,f,c
  9280  0027B8  0E00               	movlw	0
  9281  0027BA  1A33               	xorwf	(___flge@ff1+2)^0,f,c
  9282  0027BC  0E80               	movlw	128
  9283  0027BE  1A34               	xorwf	(___flge@ff1+3)^0,f,c
  9284  0027C0  0E00               	movlw	0
  9285  0027C2  1A35               	xorwf	___flge@ff2^0,f,c
  9286  0027C4  0E00               	movlw	0
  9287  0027C6  1A36               	xorwf	(___flge@ff2+1)^0,f,c
  9288  0027C8  0E00               	movlw	0
  9289  0027CA  1A37               	xorwf	(___flge@ff2+2)^0,f,c
  9290  0027CC  0E80               	movlw	128
  9291  0027CE  1A38               	xorwf	(___flge@ff2+3)^0,f,c
  9292  0027D0  5035               	movf	___flge@ff2^0,w,c
  9293  0027D2  5C31               	subwf	___flge@ff1^0,w,c
  9294  0027D4  5036               	movf	(___flge@ff2+1)^0,w,c
  9295  0027D6  5832               	subwfb	(___flge@ff1+1)^0,w,c
  9296  0027D8  5037               	movf	(___flge@ff2+2)^0,w,c
  9297  0027DA  5833               	subwfb	(___flge@ff1+2)^0,w,c
  9298  0027DC  5038               	movf	(___flge@ff2+3)^0,w,c
  9299  0027DE  5834               	subwfb	(___flge@ff1+3)^0,w,c
  9300  0027E0  B0D8               	btfsc	status,0,c
  9301  0027E2  EFF5  F013         	goto	u5331
  9302  0027E6  EFF8  F013         	goto	u5330
  9303  0027EA                     u5331:
  9304  0027EA  FFFF               	dw	65535	; assembler added errata NOP
  9305  0027EC  EFFC  F013         	goto	l4689
  9306  0027F0                     u5330:
  9307  0027F0  FFFF               	dw	65535	; assembler added errata NOP
  9308  0027F2  90D8               	bcf	status,0,c
  9309  0027F4  EFFE  F013         	goto	l778
  9310  0027F8                     l4689:
  9311  0027F8  FFFF               	dw	65535	; assembler added errata NOP
  9312  0027FA  80D8               	bsf	status,0,c
  9313  0027FC                     l778:
  9314  0027FC  FFFF               	dw	65535	; assembler added errata NOP
  9315  0027FE  0012               	return		;funcret
  9316  002800  FFFF               	dw	65535	; errata NOP
  9317  002802                     __end_of___flge:
  9318                           	callstack 0
  9319                           
  9320 ;; *************** function ___fltol *****************
  9321 ;; Defined at:
  9322 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;  f1              4   86[COMRAM] unsigned char 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  exp1            1   91[COMRAM] unsigned char 
  9327 ;;  sign1           1   90[COMRAM] unsigned char 
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  4   86[COMRAM] long 
  9330 ;; Registers used:
  9331 ;;		wreg, status,2, status,0
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9337 ;;      Params:         4       0       0       0       0       0       0
  9338 ;;      Locals:         2       0       0       0       0       0       0
  9339 ;;      Temps:          0       4       0       0       0       0       0
  9340 ;;      Totals:         6       4       0       0       0       0       0
  9341 ;;Total ram usage:       10 bytes
  9342 ;; Hardware stack levels used: 1
  9343 ;; Hardware stack levels required when called: 2
  9344 ;; This function calls:
  9345 ;;		Nothing
  9346 ;; This function is called by:
  9347 ;;		_init_USART
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           	psect	text34
  9352  0025A2                     __ptext34:
  9353                           	callstack 0
  9354  0025A2                     ___fltol:
  9355                           	callstack 0
  9356  0025A2  FFFF               	dw	65535	; assembler added errata NOP
  9357  0025A4  3459               	rlcf	(___fltol@f1+2)^0,w,c
  9358  0025A6  345A               	rlcf	(___fltol@f1+3)^0,w,c
  9359  0025A8  6E5C               	movwf	___fltol@exp1^0,c
  9360  0025AA  505C               	movf	___fltol@exp1^0,w,c
  9361  0025AC  A4D8               	btfss	status,2,c
  9362  0025AE  EFDB  F012         	goto	u6131
  9363  0025B2  EFDE  F012         	goto	u6130
  9364  0025B6                     u6131:
  9365  0025B6  FFFF               	dw	65535	; assembler added errata NOP
  9366  0025B8  EFEA  F012         	goto	l5111
  9367  0025BC                     u6130:
  9368  0025BC  FFFF               	dw	65535	; assembler added errata NOP
  9369  0025BE                     l5107:
  9370  0025BE  FFFF               	dw	65535	; assembler added errata NOP
  9371  0025C0  0E00               	movlw	0
  9372  0025C2  6E57               	movwf	?___fltol^0,c
  9373  0025C4  0E00               	movlw	0
  9374  0025C6  6E58               	movwf	(?___fltol+1)^0,c
  9375  0025C8  0E00               	movlw	0
  9376  0025CA  6E59               	movwf	(?___fltol+2)^0,c
  9377  0025CC  0E00               	movlw	0
  9378  0025CE  6E5A               	movwf	(?___fltol+3)^0,c
  9379  0025D0  EF6A  F013         	goto	l805
  9380  0025D4                     l5111:
  9381  0025D4  FFFF               	dw	65535	; assembler added errata NOP
  9382  0025D6  C057  F0E0         	movff	___fltol@f1,??___fltol
  9383  0025DA  C058  F0E1         	movff	___fltol@f1+1,??___fltol+1
  9384  0025DE  C059  F0E2         	movff	___fltol@f1+2,??___fltol+2
  9385  0025E2  C05A  F0E3         	movff	___fltol@f1+3,??___fltol+3
  9386  0025E6  0E20               	movlw	32
  9387  0025E8  EFFD  F012         	goto	u6140
  9388  0025EC                     u6145:
  9389  0025EC  FFFF               	dw	65535	; assembler added errata NOP
  9390  0025EE  0100               	movlb	0	; () banked
  9391  0025F0  90D8               	bcf	status,0,c
  9392  0025F2  33E3               	rrcf	(??___fltol+3)& (0+255),f,b
  9393  0025F4  33E2               	rrcf	(??___fltol+2)& (0+255),f,b
  9394  0025F6  33E1               	rrcf	(??___fltol+1)& (0+255),f,b
  9395  0025F8  33E0               	rrcf	??___fltol& (0+255),f,b
  9396  0025FA                     u6140:
  9397  0025FA  FFFF               	dw	65535	; assembler added errata NOP
  9398  0025FC  2EE8               	decfsz	wreg,f,c
  9399  0025FE  EFF6  F012         	goto	u6145
  9400  002602  51E0               	movf	??___fltol& (0+255),w,b
  9401  002604  6E5B               	movwf	___fltol@sign1^0,c
  9402  002606                     
  9403                           ; BSR set to: 0
  9404  002606  8E59               	bsf	(___fltol@f1+2)^0,7,c
  9405  002608                     
  9406                           ; BSR set to: 0
  9407  002608  0EFF               	movlw	255
  9408  00260A  1657               	andwf	___fltol@f1^0,f,c
  9409  00260C  0EFF               	movlw	255
  9410  00260E  1658               	andwf	(___fltol@f1+1)^0,f,c
  9411  002610  0EFF               	movlw	255
  9412  002612  1659               	andwf	(___fltol@f1+2)^0,f,c
  9413  002614  0E00               	movlw	0
  9414  002616  165A               	andwf	(___fltol@f1+3)^0,f,c
  9415  002618                     
  9416                           ; BSR set to: 0
  9417  002618  0E96               	movlw	150
  9418  00261A  5E5C               	subwf	___fltol@exp1^0,f,c
  9419  00261C                     
  9420                           ; BSR set to: 0
  9421  00261C  BE5C               	btfsc	___fltol@exp1^0,7,c
  9422  00261E  EF16  F013         	goto	u6150
  9423  002622  EF13  F013         	goto	u6151
  9424  002626                     u6151:
  9425  002626  FFFF               	dw	65535	; assembler added errata NOP
  9426  002628  EF30  F013         	goto	l5131
  9427  00262C                     u6150:
  9428  00262C  FFFF               	dw	65535	; assembler added errata NOP
  9429  00262E                     
  9430                           ; BSR set to: 0
  9431  00262E  505C               	movf	___fltol@exp1^0,w,c
  9432  002630  0A80               	xorlw	128
  9433  002632  0F97               	addlw	151
  9434  002634  B0D8               	btfsc	status,0,c
  9435  002636  EF1F  F013         	goto	u6161
  9436  00263A  EF22  F013         	goto	u6160
  9437  00263E                     u6161:
  9438  00263E  FFFF               	dw	65535	; assembler added errata NOP
  9439  002640  EF25  F013         	goto	l5127
  9440  002644                     u6160:
  9441  002644  FFFF               	dw	65535	; assembler added errata NOP
  9442  002646  EFDF  F012         	goto	l5107
  9443  00264A                     l5127:
  9444  00264A  FFFF               	dw	65535	; assembler added errata NOP
  9445  00264C  90D8               	bcf	status,0,c
  9446  00264E  325A               	rrcf	(___fltol@f1+3)^0,f,c
  9447  002650  3259               	rrcf	(___fltol@f1+2)^0,f,c
  9448  002652  3258               	rrcf	(___fltol@f1+1)^0,f,c
  9449  002654  3257               	rrcf	___fltol@f1^0,f,c
  9450  002656  3E5C               	incfsz	___fltol@exp1^0,f,c
  9451  002658  EF25  F013         	goto	l5127
  9452  00265C  EF4E  F013         	goto	l5141
  9453  002660                     l5131:
  9454  002660  FFFF               	dw	65535	; assembler added errata NOP
  9455                           
  9456                           ; BSR set to: 0
  9457  002662  0E1F               	movlw	31
  9458  002664  645C               	cpfsgt	___fltol@exp1^0,c
  9459  002666  EF37  F013         	goto	u6171
  9460  00266A  EF3A  F013         	goto	u6170
  9461  00266E                     u6171:
  9462  00266E  FFFF               	dw	65535	; assembler added errata NOP
  9463  002670  EF44  F013         	goto	l5139
  9464  002674                     u6170:
  9465  002674  FFFF               	dw	65535	; assembler added errata NOP
  9466  002676  EFDF  F012         	goto	l5107
  9467  00267A                     l5137:
  9468  00267A  FFFF               	dw	65535	; assembler added errata NOP
  9469  00267C  90D8               	bcf	status,0,c
  9470  00267E  3657               	rlcf	___fltol@f1^0,f,c
  9471  002680  3658               	rlcf	(___fltol@f1+1)^0,f,c
  9472  002682  3659               	rlcf	(___fltol@f1+2)^0,f,c
  9473  002684  365A               	rlcf	(___fltol@f1+3)^0,f,c
  9474  002686  065C               	decf	___fltol@exp1^0,f,c
  9475  002688                     l5139:
  9476  002688  FFFF               	dw	65535	; assembler added errata NOP
  9477  00268A  505C               	movf	___fltol@exp1^0,w,c
  9478  00268C  A4D8               	btfss	status,2,c
  9479  00268E  EF4B  F013         	goto	u6181
  9480  002692  EF4E  F013         	goto	u6180
  9481  002696                     u6181:
  9482  002696  FFFF               	dw	65535	; assembler added errata NOP
  9483  002698  EF3D  F013         	goto	l5137
  9484  00269C                     u6180:
  9485  00269C                     l5141:
  9486  00269C  FFFF               	dw	65535	; assembler added errata NOP
  9487  00269E  505B               	movf	___fltol@sign1^0,w,c
  9488  0026A0  B4D8               	btfsc	status,2,c
  9489  0026A2  EF55  F013         	goto	u6191
  9490  0026A6  EF58  F013         	goto	u6190
  9491  0026AA                     u6191:
  9492  0026AA  FFFF               	dw	65535	; assembler added errata NOP
  9493  0026AC  EF61  F013         	goto	l5145
  9494  0026B0                     u6190:
  9495  0026B0  FFFF               	dw	65535	; assembler added errata NOP
  9496  0026B2  1E5A               	comf	(___fltol@f1+3)^0,f,c
  9497  0026B4  1E59               	comf	(___fltol@f1+2)^0,f,c
  9498  0026B6  1E58               	comf	(___fltol@f1+1)^0,f,c
  9499  0026B8  6C57               	negf	___fltol@f1^0,c
  9500  0026BA  0E00               	movlw	0
  9501  0026BC  2258               	addwfc	(___fltol@f1+1)^0,f,c
  9502  0026BE  2259               	addwfc	(___fltol@f1+2)^0,f,c
  9503  0026C0  225A               	addwfc	(___fltol@f1+3)^0,f,c
  9504  0026C2                     l5145:
  9505  0026C2  FFFF               	dw	65535	; assembler added errata NOP
  9506  0026C4  C057  F057         	movff	___fltol@f1,?___fltol
  9507  0026C8  C058  F058         	movff	___fltol@f1+1,?___fltol+1
  9508  0026CC  C059  F059         	movff	___fltol@f1+2,?___fltol+2
  9509  0026D0  C05A  F05A         	movff	___fltol@f1+3,?___fltol+3
  9510  0026D4                     l805:
  9511  0026D4  FFFF               	dw	65535	; assembler added errata NOP
  9512  0026D6  0012               	return		;funcret
  9513  0026D8  FFFF               	dw	65535	; errata NOP
  9514  0026DA                     __end_of___fltol:
  9515                           	callstack 0
  9516                           
  9517 ;; *************** function _init_Timers *****************
  9518 ;; Defined at:
  9519 ;;		line 44 in file "init_PIC.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;		None
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;		None
  9524 ;; Return value:  Size  Location     Type
  9525 ;;                  1    wreg      void 
  9526 ;; Registers used:
  9527 ;;		wreg, status,2
  9528 ;; Tracked objects:
  9529 ;;		On entry : 0/0
  9530 ;;		On exit  : 0/0
  9531 ;;		Unchanged: 0/0
  9532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9533 ;;      Params:         0       0       0       0       0       0       0
  9534 ;;      Locals:         0       0       0       0       0       0       0
  9535 ;;      Temps:          0       0       0       0       0       0       0
  9536 ;;      Totals:         0       0       0       0       0       0       0
  9537 ;;Total ram usage:        0 bytes
  9538 ;; Hardware stack levels used: 1
  9539 ;; Hardware stack levels required when called: 2
  9540 ;; This function calls:
  9541 ;;		Nothing
  9542 ;; This function is called by:
  9543 ;;		_main
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547                           	psect	text35
  9548  003374                     __ptext35:
  9549                           	callstack 0
  9550  003374                     _init_Timers:
  9551                           	callstack 0
  9552  003374  FFFF               	dw	65535	; assembler added errata NOP
  9553  003376                     
  9554                           ;init_PIC.c: 45:     T0CONbits.T08BIT = 0;
  9555  003376  9CD5               	bcf	213,6,c	;volatile
  9556                           
  9557                           ;init_PIC.c: 46:  T0CONbits.T0CS = 0;
  9558  003378  9AD5               	bcf	213,5,c	;volatile
  9559                           
  9560                           ;init_PIC.c: 47:  T0CONbits.PSA = 1;
  9561  00337A  86D5               	bsf	213,3,c	;volatile
  9562                           
  9563                           ;init_PIC.c: 48:  T0CONbits.TMR0ON = 0;
  9564  00337C  9ED5               	bcf	213,7,c	;volatile
  9565  00337E                     
  9566                           ;init_PIC.c: 51:  TMR0H = 0xB2;
  9567  00337E  0EB2               	movlw	178
  9568  003380  6ED7               	movwf	215,c	;volatile
  9569                           
  9570                           ;init_PIC.c: 52:  TMR0L = 0x04;
  9571  003382  0E04               	movlw	4
  9572  003384  6ED6               	movwf	214,c	;volatile
  9573  003386                     
  9574                           ;init_PIC.c: 55:     T1CONbits.RD16 = 1;
  9575  003386  8ECD               	bsf	205,7,c	;volatile
  9576  003388                     
  9577                           ;init_PIC.c: 56:  T1CONbits.T1CKPS1 = 0;
  9578  003388  9ACD               	bcf	205,5,c	;volatile
  9579  00338A                     
  9580                           ;init_PIC.c: 57:  T1CONbits.T1CKPS0 = 0;
  9581  00338A  98CD               	bcf	205,4,c	;volatile
  9582  00338C                     
  9583                           ;init_PIC.c: 58:  T1CONbits.T1OSCEN = 0;
  9584  00338C  96CD               	bcf	205,3,c	;volatile
  9585  00338E                     
  9586                           ;init_PIC.c: 59:  T1CONbits.TMR1CS = 0;
  9587  00338E  92CD               	bcf	205,1,c	;volatile
  9588  003390                     
  9589                           ;init_PIC.c: 60:  T1CONbits.TMR1ON = 0;
  9590  003390  90CD               	bcf	205,0,c	;volatile
  9591                           
  9592                           ;init_PIC.c: 63:  TMR1H = 0xFA;
  9593  003392  0EFA               	movlw	250
  9594  003394  6ECF               	movwf	207,c	;volatile
  9595                           
  9596                           ;init_PIC.c: 64:     TMR1L = 0x4D;
  9597  003396  0E4D               	movlw	77
  9598  003398  6ECE               	movwf	206,c	;volatile
  9599  00339A  0012               	return		;funcret
  9600  00339C  FFFF               	dw	65535	; errata NOP
  9601  00339E                     __end_of_init_Timers:
  9602                           	callstack 0
  9603                           
  9604 ;; *************** function _init_PORTS *****************
  9605 ;; Defined at:
  9606 ;;		line 21 in file "init_PIC.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;		None
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;		None
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  1    wreg      void 
  9613 ;; Registers used:
  9614 ;;		wreg, status,2
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9620 ;;      Params:         0       0       0       0       0       0       0
  9621 ;;      Locals:         0       0       0       0       0       0       0
  9622 ;;      Temps:          0       0       0       0       0       0       0
  9623 ;;      Totals:         0       0       0       0       0       0       0
  9624 ;;Total ram usage:        0 bytes
  9625 ;; Hardware stack levels used: 1
  9626 ;; Hardware stack levels required when called: 2
  9627 ;; This function calls:
  9628 ;;		Nothing
  9629 ;; This function is called by:
  9630 ;;		_main
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text36
  9635  00339E                     __ptext36:
  9636                           	callstack 0
  9637  00339E                     _init_PORTS:
  9638                           	callstack 0
  9639  00339E  FFFF               	dw	65535	; assembler added errata NOP
  9640  0033A0                     
  9641                           ;init_PIC.c: 25:     TRISD = 0x00;
  9642  0033A0  0E00               	movlw	0
  9643  0033A2  6E95               	movwf	149,c	;volatile
  9644                           
  9645                           ;init_PIC.c: 26:     TRISA = 0x00;
  9646  0033A4  0E00               	movlw	0
  9647  0033A6  6E92               	movwf	146,c	;volatile
  9648                           
  9649                           ;init_PIC.c: 27:     TRISB = 0X03;
  9650  0033A8  0E03               	movlw	3
  9651  0033AA  6E93               	movwf	147,c	;volatile
  9652                           
  9653                           ;init_PIC.c: 28:     PORTA = 0x00;
  9654  0033AC  0E00               	movlw	0
  9655  0033AE  6E80               	movwf	128,c	;volatile
  9656                           
  9657                           ;init_PIC.c: 29:     PORTD = 0x00;
  9658  0033B0  0E00               	movlw	0
  9659  0033B2  6E83               	movwf	131,c	;volatile
  9660                           
  9661                           ;init_PIC.c: 34:     LATC = 0;
  9662  0033B4  0E00               	movlw	0
  9663  0033B6  6E8B               	movwf	139,c	;volatile
  9664                           
  9665                           ;init_PIC.c: 35:     PORTC = 0;
  9666  0033B8  0E00               	movlw	0
  9667  0033BA  6E82               	movwf	130,c	;volatile
  9668  0033BC                     
  9669                           ;init_PIC.c: 36:     TRISCbits.RC7 = 1;
  9670  0033BC  8E94               	bsf	148,7,c	;volatile
  9671  0033BE                     
  9672                           ;init_PIC.c: 37:     TRISCbits.RC6 = 0;
  9673  0033BE  9C94               	bcf	148,6,c	;volatile
  9674  0033C0                     
  9675                           ;init_PIC.c: 38:     TRISCbits.RC2 = 0;
  9676  0033C0  9494               	bcf	148,2,c	;volatile
  9677  0033C2  0012               	return		;funcret
  9678  0033C4  FFFF               	dw	65535	; errata NOP
  9679  0033C6                     __end_of_init_PORTS:
  9680                           	callstack 0
  9681                           
  9682 ;; *************** function _Rx_char_USART *****************
  9683 ;; Defined at:
  9684 ;;		line 713 in file "main.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;		None
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;  i               2    7[COMRAM] int 
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  1    wreg      void 
  9691 ;; Registers used:
  9692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9698 ;;      Params:         0       0       0       0       0       0       0
  9699 ;;      Locals:         2       0       0       0       0       0       0
  9700 ;;      Temps:          5       0       0       0       0       0       0
  9701 ;;      Totals:         7       0       0       0       0       0       0
  9702 ;;Total ram usage:        7 bytes
  9703 ;; Hardware stack levels used: 1
  9704 ;; Hardware stack levels required when called: 1
  9705 ;; This function calls:
  9706 ;;		_set_new_pos
  9707 ;; This function is called by:
  9708 ;;		Interrupt level 2
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712                           	psect	intcode
  9713  000008                     __pintcode:
  9714                           	callstack 0
  9715  000008                     _Rx_char_USART:
  9716                           	callstack 0
  9717  000008  FFFF               	dw	65535	; assembler added errata NOP
  9718                           
  9719                           ;incstack = 0
  9720  00000A  8275               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9721  00000C  CFD9 F006          	movff	fsr2l,??_Rx_char_USART+3
  9722  000010  CFDA F007          	movff	fsr2h,??_Rx_char_USART+4
  9723  000014                     
  9724                           ;main.c: 715:     if(PIE1bits.RCIE && PIR1bits.RCIF){
  9725  000014  AA9D               	btfss	157,5,c	;volatile
  9726  000016  EF0F  F000         	goto	i2u467_41
  9727  00001A  EF12  F000         	goto	i2u467_40
  9728  00001E                     i2u467_41:
  9729  00001E  FFFF               	dw	65535	; assembler added errata NOP
  9730  000020  EF60  F000         	goto	i2l4237
  9731  000024                     i2u467_40:
  9732  000024  FFFF               	dw	65535	; assembler added errata NOP
  9733  000026  AA9E               	btfss	158,5,c	;volatile
  9734  000028  EF18  F000         	goto	i2u468_41
  9735  00002C  EF1B  F000         	goto	i2u468_40
  9736  000030                     i2u468_41:
  9737  000030  FFFF               	dw	65535	; assembler added errata NOP
  9738  000032  EF60  F000         	goto	i2l4237
  9739  000036                     i2u468_40:
  9740  000036  FFFF               	dw	65535	; assembler added errata NOP
  9741  000038                     
  9742                           ;main.c: 716:     int i=0;
  9743  000038  0E00               	movlw	0
  9744  00003A  6E09               	movwf	(Rx_char_USART@i+1)^0,c
  9745  00003C  0E00               	movlw	0
  9746  00003E  6E08               	movwf	Rx_char_USART@i^0,c
  9747  000040                     i2l493:
  9748  000040  FFFF               	dw	65535	; assembler added errata NOP
  9749  000042  B2F2               	btfsc	242,1,c	;volatile
  9750  000044  EF26  F000         	goto	i2u469_41
  9751  000048  EF29  F000         	goto	i2u469_40
  9752  00004C                     i2u469_41:
  9753  00004C  FFFF               	dw	65535	; assembler added errata NOP
  9754  00004E  EF32  F000         	goto	i2l4227
  9755  000052                     i2u469_40:
  9756  000052  FFFF               	dw	65535	; assembler added errata NOP
  9757  000054  AA9E               	btfss	3998,5,c	;volatile
  9758  000056  EF2F  F000         	goto	i2u470_41
  9759  00005A  EF32  F000         	goto	i2u470_40
  9760  00005E                     i2u470_41:
  9761  00005E  FFFF               	dw	65535	; assembler added errata NOP
  9762  000060  EF20  F000         	goto	i2l493
  9763  000064                     i2u470_40:
  9764  000064                     i2l4227:
  9765  000064  FFFF               	dw	65535	; assembler added errata NOP
  9766                           
  9767                           ;main.c: 720:         input_str[i]=RCREG;
  9768  000066  0ED2               	movlw	low _input_str
  9769  000068  2408               	addwf	Rx_char_USART@i^0,w,c
  9770  00006A  6ED9               	movwf	fsr2l,c
  9771  00006C  0E00               	movlw	high _input_str
  9772  00006E  2009               	addwfc	(Rx_char_USART@i+1)^0,w,c
  9773  000070  6EDA               	movwf	fsr2h,c
  9774  000072  CFAE FFDF          	movff	4014,indf2	;volatile
  9775  000076                     
  9776                           ;main.c: 721:     }while(INTCONbits.INT0IF==0 && input_str[i++] != '\n');
  9777  000076  B2F2               	btfsc	242,1,c	;volatile
  9778  000078  EF40  F000         	goto	i2u471_41
  9779  00007C  EF43  F000         	goto	i2u471_40
  9780  000080                     i2u471_41:
  9781  000080  FFFF               	dw	65535	; assembler added errata NOP
  9782  000082  EF5A  F000         	goto	i2l500
  9783  000086                     i2u471_40:
  9784  000086  FFFF               	dw	65535	; assembler added errata NOP
  9785  000088  5008               	movf	Rx_char_USART@i^0,w,c
  9786  00008A  6E03               	movwf	??_Rx_char_USART^0,c
  9787  00008C  5009               	movf	(Rx_char_USART@i+1)^0,w,c
  9788  00008E  6E04               	movwf	(??_Rx_char_USART+1)^0,c
  9789  000090  4A08               	infsnz	Rx_char_USART@i^0,f,c
  9790  000092  2A09               	incf	(Rx_char_USART@i+1)^0,f,c
  9791  000094  0ED2               	movlw	low _input_str
  9792  000096  2403               	addwf	??_Rx_char_USART^0,w,c
  9793  000098  6ED9               	movwf	fsr2l,c
  9794  00009A  0E00               	movlw	high _input_str
  9795  00009C  2004               	addwfc	(??_Rx_char_USART+1)^0,w,c
  9796  00009E  6EDA               	movwf	fsr2h,c
  9797  0000A0  0E0A               	movlw	10
  9798  0000A2  18DE               	xorwf	postinc2,w,c
  9799  0000A4  A4D8               	btfss	status,2,c
  9800  0000A6  EF57  F000         	goto	i2u472_41
  9801  0000AA  EF5A  F000         	goto	i2u472_40
  9802  0000AE                     i2u472_41:
  9803  0000AE  FFFF               	dw	65535	; assembler added errata NOP
  9804  0000B0  EF20  F000         	goto	i2l493
  9805  0000B4                     i2u472_40:
  9806  0000B4                     i2l500:
  9807  0000B4  FFFF               	dw	65535	; assembler added errata NOP
  9808                           
  9809                           ;main.c: 723:     PIR1bits.RCIF = 0;
  9810  0000B6  9A9E               	bcf	158,5,c	;volatile
  9811  0000B8                     
  9812                           ;main.c: 724:     New_char_RX = 1;
  9813  0000B8  0E01               	movlw	1
  9814  0000BA  6E74               	movwf	_New_char_RX^0,c
  9815  0000BC                     
  9816                           ;main.c: 725:     State = input_str[0];
  9817  0000BC  C0D2  F0CF         	movff	_input_str,_State	;volatile
  9818  0000C0                     i2l4237:
  9819  0000C0  FFFF               	dw	65535	; assembler added errata NOP
  9820                           
  9821                           ;main.c: 727:     if(INTCONbits.INT0IF==1 && INTCONbits.INT0IE==1){
  9822  0000C2  A2F2               	btfss	242,1,c	;volatile
  9823  0000C4  EF66  F000         	goto	i2u473_41
  9824  0000C8  EF69  F000         	goto	i2u473_40
  9825  0000CC                     i2u473_41:
  9826  0000CC  FFFF               	dw	65535	; assembler added errata NOP
  9827  0000CE  EF79  F000         	goto	i2l4245
  9828  0000D2                     i2u473_40:
  9829  0000D2  FFFF               	dw	65535	; assembler added errata NOP
  9830  0000D4  A8F2               	btfss	242,4,c	;volatile
  9831  0000D6  EF6F  F000         	goto	i2u474_41
  9832  0000DA  EF72  F000         	goto	i2u474_40
  9833  0000DE                     i2u474_41:
  9834  0000DE  FFFF               	dw	65535	; assembler added errata NOP
  9835  0000E0  EF79  F000         	goto	i2l4245
  9836  0000E4                     i2u474_40:
  9837  0000E4  FFFF               	dw	65535	; assembler added errata NOP
  9838  0000E6                     
  9839                           ;main.c: 728:         INTCONbits.INT0IF=0;
  9840  0000E6  92F2               	bcf	242,1,c	;volatile
  9841  0000E8                     
  9842                           ;main.c: 730:         input_str[0]="Q";
  9843  0000E8  0EFD               	movlw	low (low STR_20)
  9844  0000EA  0100               	movlb	0	; () banked
  9845  0000EC  6FD2               	movwf	_input_str& (0+255),b	;volatile
  9846                           
  9847                           ;main.c: 731:         stop=1;
  9848  0000EE  0E01               	movlw	1
  9849  0000F0  6E72               	movwf	_stop^0,c
  9850  0000F2                     i2l4245:
  9851  0000F2  FFFF               	dw	65535	; assembler added errata NOP
  9852                           
  9853                           ;main.c: 733:     if(INTCON3bits.INT1IF==1 && INTCON3bits.INT1IE==1){
  9854  0000F4  A0F0               	btfss	240,0,c	;volatile
  9855  0000F6  EF7F  F000         	goto	i2u475_41
  9856  0000FA  EF82  F000         	goto	i2u475_40
  9857  0000FE                     i2u475_41:
  9858  0000FE  FFFF               	dw	65535	; assembler added errata NOP
  9859  000100  EF8F  F000         	goto	i2l4253
  9860  000104                     i2u475_40:
  9861  000104  FFFF               	dw	65535	; assembler added errata NOP
  9862  000106  A6F0               	btfss	240,3,c	;volatile
  9863  000108  EF88  F000         	goto	i2u476_41
  9864  00010C  EF8B  F000         	goto	i2u476_40
  9865  000110                     i2u476_41:
  9866  000110  FFFF               	dw	65535	; assembler added errata NOP
  9867  000112  EF8F  F000         	goto	i2l4253
  9868  000116                     i2u476_40:
  9869  000116  FFFF               	dw	65535	; assembler added errata NOP
  9870  000118                     
  9871                           ;main.c: 734:         INTCON3bits.INT1IF=0;
  9872  000118  90F0               	bcf	240,0,c	;volatile
  9873  00011A                     
  9874                           ;main.c: 735:         component_present=1;
  9875  00011A  0E01               	movlw	1
  9876  00011C  6E73               	movwf	_component_present^0,c
  9877  00011E                     i2l4253:
  9878  00011E  FFFF               	dw	65535	; assembler added errata NOP
  9879                           
  9880                           ;main.c: 738:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  9881  000120  AAF2               	btfss	242,5,c	;volatile
  9882  000122  EF95  F000         	goto	i2u477_41
  9883  000126  EF98  F000         	goto	i2u477_40
  9884  00012A                     i2u477_41:
  9885  00012A  FFFF               	dw	65535	; assembler added errata NOP
  9886  00012C  EFAF  F000         	goto	i2l4267
  9887  000130                     i2u477_40:
  9888  000130  FFFF               	dw	65535	; assembler added errata NOP
  9889  000132  A4F2               	btfss	242,2,c	;volatile
  9890  000134  EF9E  F000         	goto	i2u478_41
  9891  000138  EFA1  F000         	goto	i2u478_40
  9892  00013C                     i2u478_41:
  9893  00013C  FFFF               	dw	65535	; assembler added errata NOP
  9894  00013E  EFAF  F000         	goto	i2l4267
  9895  000142                     i2u478_40:
  9896  000142  FFFF               	dw	65535	; assembler added errata NOP
  9897  000144                     
  9898                           ;main.c: 739:         {;main.c: 741:          TMR0H = 0xB2;
  9899  000144  0EB2               	movlw	178
  9900  000146  6ED7               	movwf	215,c	;volatile
  9901                           
  9902                           ;main.c: 742:             TMR0L = 0x04;
  9903  000148  0E04               	movlw	4
  9904  00014A  6ED6               	movwf	214,c	;volatile
  9905  00014C                     
  9906                           ;main.c: 743:    set_new_pos(new_TMR1H, new_TMR1L);
  9907  00014C  C0CD  F001         	movff	_new_TMR1L@main$F817,set_new_pos@nTMR1L
  9908  000150  0100               	movlb	0	; () banked
  9909  000152  51CE               	movf	_new_TMR1H@main$F816& (0+255),w,b
  9910  000154  EC03  F01A         	call	_set_new_pos
  9911  000158                     
  9912                           ;main.c: 744:             T0CONbits.TMR0ON = 1;
  9913  000158  8ED5               	bsf	213,7,c	;volatile
  9914  00015A                     
  9915                           ;main.c: 745:    T1CONbits.TMR1ON = 1;
  9916  00015A  80CD               	bsf	205,0,c	;volatile
  9917  00015C                     
  9918                           ;main.c: 746:             INTCONbits.TMR0IF = 0;
  9919  00015C  94F2               	bcf	242,2,c	;volatile
  9920  00015E                     i2l4267:
  9921  00015E  FFFF               	dw	65535	; assembler added errata NOP
  9922                           
  9923                           ;main.c: 748:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF)
  9924  000160  A09D               	btfss	157,0,c	;volatile
  9925  000162  EFB5  F000         	goto	i2u479_41
  9926  000166  EFB8  F000         	goto	i2u479_40
  9927  00016A                     i2u479_41:
  9928  00016A  FFFF               	dw	65535	; assembler added errata NOP
  9929  00016C  EFC5  F000         	goto	i2l505
  9930  000170                     i2u479_40:
  9931  000170  FFFF               	dw	65535	; assembler added errata NOP
  9932  000172  A09E               	btfss	158,0,c	;volatile
  9933  000174  EFBE  F000         	goto	i2u480_41
  9934  000178  EFC1  F000         	goto	i2u480_40
  9935  00017C                     i2u480_41:
  9936  00017C  FFFF               	dw	65535	; assembler added errata NOP
  9937  00017E  EFC5  F000         	goto	i2l505
  9938  000182                     i2u480_40:
  9939  000182  FFFF               	dw	65535	; assembler added errata NOP
  9940  000184                     
  9941                           ;main.c: 749:         {;main.c: 750:             LATCbits.LC2 = 0;
  9942  000184  948B               	bcf	139,2,c	;volatile
  9943                           
  9944                           ;main.c: 751:             T1CONbits.TMR1ON = 0;
  9945  000186  90CD               	bcf	205,0,c	;volatile
  9946                           
  9947                           ;main.c: 752:          PIR1bits.TMR1IF = 0;
  9948  000188  909E               	bcf	158,0,c	;volatile
  9949  00018A                     i2l505:
  9950  00018A  FFFF               	dw	65535	; assembler added errata NOP
  9951  00018C  C007  FFDA         	movff	??_Rx_char_USART+4,fsr2h
  9952  000190  C006  FFD9         	movff	??_Rx_char_USART+3,fsr2l
  9953  000194  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9954  000196  0011               	retfie		f
  9955  000198  FFFF               	dw	65535	; errata NOP
  9956  00019A                     __end_of_Rx_char_USART:
  9957                           	callstack 0
  9958                           
  9959 ;; *************** function _set_new_pos *****************
  9960 ;; Defined at:
  9961 ;;		line 528 in file "main.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;  nTMR1H          1    wreg     unsigned char 
  9964 ;;  nTMR1L          1    0[COMRAM] unsigned char 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  nTMR1H          1    1[COMRAM] unsigned char 
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  1    wreg      void 
  9969 ;; Registers used:
  9970 ;;		wreg
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9976 ;;      Params:         1       0       0       0       0       0       0
  9977 ;;      Locals:         1       0       0       0       0       0       0
  9978 ;;      Temps:          0       0       0       0       0       0       0
  9979 ;;      Totals:         2       0       0       0       0       0       0
  9980 ;;Total ram usage:        2 bytes
  9981 ;; Hardware stack levels used: 1
  9982 ;; This function calls:
  9983 ;;		Nothing
  9984 ;; This function is called by:
  9985 ;;		_Rx_char_USART
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989                           	psect	text38
  9990  003406                     __ptext38:
  9991                           	callstack 0
  9992  003406                     _set_new_pos:
  9993                           	callstack 0
  9994  003406  FFFF               	dw	65535	; assembler added errata NOP
  9995                           
  9996                           ;incstack = 0
  9997                           ;set_new_pos@nTMR1H stored from wreg
  9998  003408  6E02               	movwf	set_new_pos@nTMR1H^0,c
  9999  00340A                     
 10000                           ;main.c: 528: void set_new_pos(uint8_t nTMR1H, uint8_t nTMR1L);main.c: 529: {;main.c: 53
      +                          0:     TMR1H = nTMR1H;
 10001  00340A  C002  FFCF         	movff	set_new_pos@nTMR1H,4047	;volatile
 10002  00340E                     
 10003                           ;main.c: 531:     TMR1L = nTMR1L;
 10004  00340E  C001  FFCE         	movff	set_new_pos@nTMR1L,4046	;volatile
 10005  003412                     
 10006                           ;main.c: 551:     LATCbits.LC2 = 1;
 10007  003412  848B               	bsf	139,2,c	;volatile
 10008  003414                     
 10009                           ;main.c: 552:  T1CONbits.TMR1ON = 1;
 10010  003414  80CD               	bsf	205,0,c	;volatile
 10011  003416  0012               	return		;funcret
 10012  003418  FFFF               	dw	65535	; errata NOP
 10013  00341A                     __end_of_set_new_pos:
 10014                           	callstack 0
 10015                           
 10016                           	psect	rparam
 10017  0000                     
 10018                           	psect	temp
 10019  000075                     btemp:
 10020                           	callstack 0
 10021  000075                     	ds	1
 10022  0000                     int$flags	set	btemp
 10023  0000                     wtemp8	set	btemp+1
 10024  0000                     ttemp5	set	btemp+1
 10025  0000                     ttemp6	set	btemp+4
 10026  0000                     ttemp7	set	btemp+8
 10027                           
 10028                           	psect	idloc
 10029                           
 10030                           ;Config register IDLOC0 @ 0x200000
 10031                           ;	unspecified, using default values
 10032  200000                     	org	2097152
 10033  200000  FF                 	db	255
 10034                           
 10035                           ;Config register IDLOC1 @ 0x200001
 10036                           ;	unspecified, using default values
 10037  200001                     	org	2097153
 10038  200001  FF                 	db	255
 10039                           
 10040                           ;Config register IDLOC2 @ 0x200002
 10041                           ;	unspecified, using default values
 10042  200002                     	org	2097154
 10043  200002  FF                 	db	255
 10044                           
 10045                           ;Config register IDLOC3 @ 0x200003
 10046                           ;	unspecified, using default values
 10047  200003                     	org	2097155
 10048  200003  FF                 	db	255
 10049                           
 10050                           ;Config register IDLOC4 @ 0x200004
 10051                           ;	unspecified, using default values
 10052  200004                     	org	2097156
 10053  200004  FF                 	db	255
 10054                           
 10055                           ;Config register IDLOC5 @ 0x200005
 10056                           ;	unspecified, using default values
 10057  200005                     	org	2097157
 10058  200005  FF                 	db	255
 10059                           
 10060                           ;Config register IDLOC6 @ 0x200006
 10061                           ;	unspecified, using default values
 10062  200006                     	org	2097158
 10063  200006  FF                 	db	255
 10064                           
 10065                           ;Config register IDLOC7 @ 0x200007
 10066                           ;	unspecified, using default values
 10067  200007                     	org	2097159
 10068  200007  FF                 	db	255
 10069                           
 10070                           	psect	config
 10071                           
 10072                           ; Padding undefined space
 10073  300000                     	org	3145728
 10074  300000  FF                 	db	255
 10075                           
 10076                           ;Config register CONFIG1H @ 0x300001
 10077                           ;	Oscillator Selection bits
 10078                           ;	OSC = XT, XT oscillator
 10079                           ;	Oscillator System Clock Switch Enable bit
 10080                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 10081  300001                     	org	3145729
 10082  300001  21                 	db	33
 10083                           
 10084                           ;Config register CONFIG2L @ 0x300002
 10085                           ;	Power-up Timer Enable bit
 10086                           ;	PWRT = OFF, PWRT disabled
 10087                           ;	Brown-out Reset Enable bit
 10088                           ;	BOR = OFF, Brown-out Reset disabled
 10089                           ;	Brown-out Reset Voltage bits
 10090                           ;	BORV = 20, VBOR set to 2.0V
 10091  300002                     	org	3145730
 10092  300002  0D                 	db	13
 10093                           
 10094                           ;Config register CONFIG2H @ 0x300003
 10095                           ;	Watchdog Timer Enable bit
 10096                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10097                           ;	Watchdog Timer Postscale Select bits
 10098                           ;	WDTPS = 128, 1:128
 10099  300003                     	org	3145731
 10100  300003  0E                 	db	14
 10101                           
 10102                           ; Padding undefined space
 10103  300004                     	org	3145732
 10104  300004  FF                 	db	255
 10105                           
 10106                           ;Config register CONFIG3H @ 0x300005
 10107                           ;	CCP2 Mux bit
 10108                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
 10109  300005                     	org	3145733
 10110  300005  00                 	db	0
 10111                           
 10112                           ;Config register CONFIG4L @ 0x300006
 10113                           ;	Stack Full/Underflow Reset Enable bit
 10114                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
 10115                           ;	Low Voltage ICSP Enable bit
 10116                           ;	LVP = OFF, Low Voltage ICSP disabled
 10117                           ;	Background Debugger Enable bit
 10118                           ;	DEBUG = 0x1, unprogrammed default
 10119  300006                     	org	3145734
 10120  300006  80                 	db	128
 10121                           
 10122                           ; Padding undefined space
 10123  300007                     	org	3145735
 10124  300007  FF                 	db	255
 10125                           
 10126                           ;Config register CONFIG5L @ 0x300008
 10127                           ;	Code Protection bit
 10128                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 10129                           ;	Code Protection bit
 10130                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 10131                           ;	Code Protection bit
 10132                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 10133                           ;	Code Protection bit
 10134                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 10135  300008                     	org	3145736
 10136  300008  0F                 	db	15
 10137                           
 10138                           ;Config register CONFIG5H @ 0x300009
 10139                           ;	Boot Block Code Protection bit
 10140                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 10141                           ;	Data EEPROM Code Protection bit
 10142                           ;	CPD = OFF, Data EEPROM not code protected
 10143  300009                     	org	3145737
 10144  300009  C0                 	db	192
 10145                           
 10146                           ;Config register CONFIG6L @ 0x30000A
 10147                           ;	Write Protection bit
 10148                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 10149                           ;	Write Protection bit
 10150                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 10151                           ;	Write Protection bit
 10152                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 10153                           ;	Write Protection bit
 10154                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 10155  30000A                     	org	3145738
 10156  30000A  0F                 	db	15
 10157                           
 10158                           ;Config register CONFIG6H @ 0x30000B
 10159                           ;	Configuration Register Write Protection bit
 10160                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 10161                           ;	Boot Block Write Protection bit
 10162                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 10163                           ;	Data EEPROM Write Protection bit
 10164                           ;	WRTD = OFF, Data EEPROM not write protected
 10165  30000B                     	org	3145739
 10166  30000B  E0                 	db	224
 10167                           
 10168                           ;Config register CONFIG7L @ 0x30000C
 10169                           ;	Table Read Protection bit
 10170                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 10171                           ;	Table Read Protection bit
 10172                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 10173                           ;	Table Read Protection bit
 10174                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 10175                           ;	Table Read Protection bit
 10176                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 10177  30000C                     	org	3145740
 10178  30000C  0F                 	db	15
 10179                           
 10180                           ;Config register CONFIG7H @ 0x30000D
 10181                           ;	Boot Block Table Read Protection bit
 10182                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 10183  30000D                     	org	3145741
 10184  30000D  40                 	db	64
 10185                           tosu	equ	0xFFF
 10186                           tosh	equ	0xFFE
 10187                           tosl	equ	0xFFD
 10188                           stkptr	equ	0xFFC
 10189                           pclatu	equ	0xFFB
 10190                           pclath	equ	0xFFA
 10191                           pcl	equ	0xFF9
 10192                           tblptru	equ	0xFF8
 10193                           tblptrh	equ	0xFF7
 10194                           tblptrl	equ	0xFF6
 10195                           tablat	equ	0xFF5
 10196                           prodh	equ	0xFF4
 10197                           prodl	equ	0xFF3
 10198                           indf0	equ	0xFEF
 10199                           postinc0	equ	0xFEE
 10200                           postdec0	equ	0xFED
 10201                           preinc0	equ	0xFEC
 10202                           plusw0	equ	0xFEB
 10203                           fsr0h	equ	0xFEA
 10204                           fsr0l	equ	0xFE9
 10205                           wreg	equ	0xFE8
 10206                           indf1	equ	0xFE7
 10207                           postinc1	equ	0xFE6
 10208                           postdec1	equ	0xFE5
 10209                           preinc1	equ	0xFE4
 10210                           plusw1	equ	0xFE3
 10211                           fsr1h	equ	0xFE2
 10212                           fsr1l	equ	0xFE1
 10213                           bsr	equ	0xFE0
 10214                           indf2	equ	0xFDF
 10215                           postinc2	equ	0xFDE
 10216                           postdec2	equ	0xFDD
 10217                           preinc2	equ	0xFDC
 10218                           plusw2	equ	0xFDB
 10219                           fsr2h	equ	0xFDA
 10220                           fsr2l	equ	0xFD9
 10221                           status	equ	0xFD8

Data Sizes:
    Strings     666
    Constant    20
    Data        31
    BSS         88
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     92     116
    BANK0           128      4     100
    BANK1           256     35      35
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strncat@s	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    strncat@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strncat@a	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> input_str(BANK0[10]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 82
		 -> STR_19(CODE[23]), STR_18(CODE[17]), STR_17(CODE[70]), STR_16(CODE[19]), 
		 -> STR_15(CODE[63]), STR_14(CODE[20]), STR_13(CODE[30]), STR_12(CODE[29]), 
		 -> STR_11(CODE[29]), STR_10(CODE[29]), STR_9(CODE[28]), STR_8(CODE[28]), 
		 -> STR_7(CODE[52]), STR_6(CODE[26]), add_component@add_componnt(COMRAM[2]), STR_5(CODE[40]), 
		 -> STR_4(CODE[27]), STR_3(CODE[32]), sequence(BANK0[4]), STR_2(CODE[20]), 
		 -> STR_1(CODE[82]), 


Critical Paths under _main in COMRAM

    _start_up_menu->_pick_and_place
    _return_to_initial->_Twister
    _return_to_initial->_X_axis
    _return_to_initial->_Y_axis
    _return_to_initial->_Z_axis
    _remove_component->_strrchr
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _pick_and_place->___flge
    ___fldiv->___xxtofl
    _Z_axis->_ms_delay
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _change_sequence->_print_string
    _add_component->_atoi
    _strncat->_strlen
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    _Rx_char_USART->_set_new_pos

Critical Paths under _main in BANK0

    _init_USART->___fltol

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    _start_up_menu->_pick_and_place

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   66320
                         _init_PORTS
                        _init_Timers
                         _init_USART
                    _init_interrupts
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                        5     5      0   55087
                                             62 COMRAM     5     5      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
                  _return_to_initial
 ---------------------------------------------------------------------------------
 (2) _return_to_initial                                    9     9      0   15340
                                             16 COMRAM     9     9      0
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
 ---------------------------------------------------------------------------------
 (2) _remove_component                                     5     5      0    4368
                                             27 COMRAM     5     5      0
                            _memmove
                       _print_string
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4     942
                                             23 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     406
                                             13 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     592
                                             13 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _pick_and_place                                      37    37      0   26069
                                             60 COMRAM     2     2      0
                                              0 BANK1     35    35      0
                            _Tweezer
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
                            ___fldiv
                             ___flge
                           ___xxtofl
                   _fetch_parameters
                           _ms_delay
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _fetch_parameters                                     1     1      0     124
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2183
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Z_axis                                               1     1      0    3798
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Y_axis                                               1     1      0    3798
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _X_axis                                               1     1      0    3798
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Twister                                              1     1      0    3798
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _ms_delay                                             6     4      2    3736
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _Tweezer                                              1     1      0      62
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                      5     5      0    2386
                                             15 COMRAM     5     5      0
                       _print_string
 ---------------------------------------------------------------------------------
 (2) _add_component                                        2     2      0    4569
                                             31 COMRAM     2     2      0
                               _atoi
                       _print_string
                            _strncat
 ---------------------------------------------------------------------------------
 (3) _strncat                                              8     2      6     712
                                             13 COMRAM     6     0      6
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     318
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2    2290
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    1456
                                             16 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     207
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     161
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11233
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10806
                                             60 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              9 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              9 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                             48 COMRAM    12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             86 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Rx_char_USART                                        7     7      0     165
                                              2 COMRAM     7     7      0
                        _set_new_pos
 ---------------------------------------------------------------------------------
 (6) _set_new_pos                                          2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_Timers
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _print_string
       _strncat
         _strlen
     _change_sequence
       _print_string
     _pick_and_place
       _Tweezer
       _Twister
         _ms_delay
       _X_axis
         _ms_delay
       _Y_axis
         _ms_delay
       _Z_axis
         _ms_delay
       ___fldiv
       ___flge
       ___xxtofl
       _fetch_parameters
       _ms_delay
       _print_string
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _print_string
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen
     _return_to_initial
       _Twister
       _X_axis
       _Y_axis
       _Z_axis

 _Rx_char_USART (ROOT)
   _set_new_pos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      23       7       13.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80      4      64       5       78.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5C      74       1       92.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB      15        0.0%
DATA                 0      0      FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 28 20:12:00 2021

                                                     ___fldiv@aexp 0030  
                                                     ___fldiv@bexp 002F  
                                                     ___fldiv@sign 0028  
                                                               l50 339A  
                                                               l53 33E2  
                                                               l47 33C2  
                                                               l72 32E0  
                                                               l81 2E82  
                                                               l77 2E26  
                                              ___wmul@multiplicand 000C  
                                           __size_of_start_up_menu 017A  
                                                              l322 2908  
                                                              l308 1DFC  
                                                              l350 2DE0  
                                                              l343 2A06  
                                                              l360 308C  
                                                              l336 2B06  
                                                              l432 06D6  
                                                              l264 232A  
                                                              l273 2F1A  
                                                              l329 2C06  
                                                              l441 0782  
                                                              l257 2328  
                                                              l508 3370  
                                                              l357 305C  
                                                              l374 259C  
                                                              l462 0996  
                                                              l470 23C6  
                                                              l368 314A  
                                                              l473 240C  
                                                              l378 259C  
                                                              l467 2380  
                                                              l388 02A8  
                                                              l805 26D4  
                                                              l397 0354  
                                                              l479 2464  
                                                              l773 27AE  
                                                              l782 32A0  
                                                              l778 27FC  
                                                ??_init_interrupts 000A  
                                                              wreg 000FE8  
                                                     ___flmul@aexp 001B  
                                                     ___flmul@bexp 001C  
                                                     ___flmul@sign 0016  
                                                     ___flmul@temp 0021  
                                                     ___flmul@prod 001D  
                                                     ___fltol@exp1 005C  
                                                             l1101 1680  
                                                             l1103 1710  
                                                             l1104 16F8  
                                                             l1122 102E  
                                                             l1210 21B0  
                                                             l1131 12CA  
                                                             l1132 12B2  
                                                             l1036 0BE2  
                                                             l1053 0D26  
                                                             l1045 0F3C  
                                                             l1037 0BCC  
                                                             l1213 325E  
                                                             l1221 30EE  
                                                             l1126 13E0  
                                                             l1062 0E2A  
                                                             l1038 0B82  
                                                             l1063 0E12  
                                                             l1207 21A6  
                                                             l1129 123A  
                                                             l1242 1BF8  
                                                             l1090 1812  
                                                             l1170 1F0C  
                                                             l1234 2D00  
                                                             l1139 1398  
                                                             l3003 0E40  
                                                             l3011 0E9E  
                                                             l1163 1E60  
                                                             l1092 162A  
                                                             l3021 0F04  
                                                             l3013 0EB4  
                                                             l3005 0E4C  
                                                             l1078 3194  
                                                             l1166 1FF2  
                                                             l3031 0F2A  
                                                             l3023 0F0A  
                                                             l3015 0EC6  
                                                             l3007 0E5E  
                                                             l3111 218A  
                                                             l3103 211A  
                                                             l1255 321C  
                                                             l1095 15E4  
                                                             l1272 331A  
                                                             l3025 0F0E  
                                                             l3017 0EEC  
                                                             l3009 0E9C  
                                                             l3041 30E2  
                                                             l1265 2FA0  
                                                             l3121 2F38  
                                                             l1177 1F78  
                                                             l3027 0F16  
                                                             l3019 0EF0  
                                                             l3043 30E6  
                                                             l3035 3092  
                                                             l3107 215E  
                                                             l3131 2F74  
                                                             l3123 2F40  
                                                             l3051 2FA6  
                                                             l3029 0F28  
                                                             l3037 3098  
                                                             l3109 2174  
                                                             l3133 2F8E  
                                                             l3125 2F54  
                                                             l3117 2F20  
                                                             l3061 2FF8  
                                                             l3053 2FAE  
                                                             l1278 3020  
                                                             l3047 3220  
                                                             l3039 30B0  
                                                             l3135 2F9C  
                                                             l3127 2F58  
                                                             l3119 2F20  
                                                             l3151 2C90  
                                                             l3143 2C0E  
                                                             l3063 3018  
                                                             l3055 2FB8  
                                                             l2601 337E  
                                                             l3081 201A  
                                                             l3129 2F5C  
                                                             l5001 1C2C  
                                                             l3161 2CE6  
                                                             l3145 2C38  
                                                             l3153 2CB0  
                                                             l3057 2FE8  
                                                             l2611 338E  
                                                             l2603 3386  
                                                             l3091 207C  
                                                             l3083 2038  
                                                             l3075 1FFA  
                                                             l5011 1C6C  
                                                             l5003 1C42  
                                                             l3155 2CC8  
                                                             l3147 2C5E  
                                                             l3139 32E6  
                                                             l2613 3390  
                                                             l2605 3388  
                                                             l3501 0FA6  
                                                             l2621 33DA  
                                                             l3093 2096  
                                                             l3085 2070  
                                                             l3077 200E  
                                                             l5021 1CBC  
                                                             l5013 1C82  
                                                             l5005 1C46  
                                                             l3157 2CDE  
                                                             l3149 2C6E  
                                                             l5101 28E8  
                                                             l2607 338A  
                                                             l5111 25D4  
                                                             l3511 0FDA  
                                                             l3503 0FB8  
                                                             l2623 33DC  
                                                             l3095 20A0  
                                                             l3087 2074  
                                                             l3079 2014  
                                                             l5031 1D0A  
                                                             l5023 1CD0  
                                                             l5015 1C96  
                                                             l5007 1C5C  
                                                             l3159 2CE2  
                                                             l5103 2902  
                                                             l2609 338C  
                                                             l5121 262E  
                                                             l5113 2606  
                                                             l5105 25A4  
                                                             l3601 1380  
                                                             l3521 1044  
                                                             l3513 0FF0  
                                                             l3505 0FC0  
                                                             l2625 33DE  
                                                             l2617 33C8  
                                                             l3097 20AA  
                                                             l2801 31E0  
                                                             l5041 1D48  
                                                             l5033 1D0E  
                                                             l5025 1CD4  
                                                             l5017 1C9A  
                                                             l5009 1C60  
                                                             l4401 2A6C  
                                                             l5131 2660  
                                                             l5115 2608  
                                                             l5107 25BE  
                                                             l3603 139E  
                                                             l3611 13CA  
                                                             l3531 1084  
                                                             l3523 1056  
                                                             l3515 1004  
                                                             l3507 0FC6  
                                                             l2627 33E0  
                                                             l2619 33D2  
                                                             l3099 20E0  
                                                             l2803 31EC  
                                                             l5051 1D8E  
                                                             l5043 1D54  
                                                             l5035 1D1A  
                                                             l5027 1CE0  
                                                             l5019 1CA6  
                                                             l4323 30F4  
                                                             l4411 2AAA  
                                                             l4403 2A78  
                                                             l5211 332C  
                                                             l5141 269C  
                                                             l5117 2618  
                                                             l3613 13D0  
                                                             l3605 13AE  
                                                             l3541 10D6  
                                                             l3533 109A  
                                                             l3517 1014  
                                                             l3509 0FD8  
                                                             l2901 0B00  
                                                             l5301 20C8  
                                                             l4341 2DF4  
                                                             l2805 31F2  
                                                             l5061 1DBE  
                                                             l5053 1DA4  
                                                             l5045 1D6A  
                                                             l5037 1D30  
                                                             l5029 1CF6  
                                                             l4325 3100  
                                                             l4501 2DDA  
                                                             l4421 2AE6  
                                                             l4413 2AB6  
                                                             l4405 2A88  
                                                             l5221 3338  
                                                             l5213 3330  
                                                             l5205 331E  
                                                             l2591 33BC  
                                                             l5143 26B2  
                                                             l5127 264A  
                                                             l5119 261C  
                                                             l3607 13C0  
                                                             l3551 111C  
                                                             l3543 10E4  
                                                             l3535 10A6  
                                                             l3527 106C  
                                                             l3519 101C  
                                                             l2903 0B04  
                                                             l2911 0B14  
                                                             l5151 32D2  
                                                             l4343 2E3A  
                                                             l2807 3210  
                                                             l5063 1DC4  
                                                             l5047 1D7E  
                                                             l5039 1D44  
                                                             l5055 1DB8  
                                                             l4511 307C  
                                                             l4503 302A  
                                                             l4335 312A  
                                                             l4327 3106  
                                                             l4351 2B38  
                                                             l4423 2AF6  
                                                             l4415 2AC6  
                                                             l4407 2A90  
                                                             l4431 2938  
                                                             l5071 2804  
                                                             l5223 333E  
                                                             l5215 3332  
                                                             l5207 3324  
                                                             l2593 33BE  
                                                             l5145 26C2  
                                                             l5137 267A  
                                                             l5129 2656  
                                                             l3609 13C2  
                                                             l3561 118A  
                                                             l3553 1136  
                                                             l3545 10F0  
                                                             l3537 10BE  
                                                             l3529 107A  
                                                             l2921 0B96  
                                                             l2913 0B1A  
                                                             l2905 0B08  
                                                             l2841 09D2  
                                                             l2833 099C  
                                                             l3617 3150  
                                                             l5161 32DC  
                                                             l5153 32D4  
                                                             l4345 2E3E  
                                                             l5065 1DE0  
                                                             l5049 1D82  
                                                             l4513 3080  
                                                             l4505 303E  
                                                             l4337 3130  
                                                             l4329 3122  
                                                             l4361 2B6C  
                                                             l4353 2B3C  
                                                             l4417 2ACA  
                                                             l4409 2AA6  
                                                             l4425 2B00  
                                                             l4441 296C  
                                                             l4433 293C  
                                                             l4601 15A6  
                                                             l4521 24B8  
                                                             l5081 2854  
                                                             l5073 281C  
                                                             l5217 3334  
                                                             l5209 3328  
                                                             l2595 33C0  
                                                             l5139 2688  
                                                             l3571 1226  
                                                             l3563 11B4  
                                                             l3555 1146  
                                                             l3547 1100  
                                                             l3539 10CA  
                                                             l3491 0F62  
                                                             l2931 0BCA  
                                                             l2923 0BA2  
                                                             l2915 0B48  
                                                             l2907 0B0C  
                                                             l2851 0A14  
                                                             l2843 09E6  
                                                             l2835 09A8  
                                                             l3619 3160  
                                                             l5163 32DE  
                                                             l5155 32D6  
                                                             l2827 334C  
                                                             l4339 2DE8  
                                                             l5067 1DEC  
                                                             l4507 3052  
                                                             l4515 3086  
                                                             l4371 2BAA  
                                                             l4363 2B78  
                                                             l4355 2B48  
                                                             l4347 2B10  
                                                             l4419 2ADA  
                                                             l4451 29AA  
                                                             l4443 2978  
                                                             l4435 2948  
                                                             l4427 2910  
                                                             l4611 1614  
                                                             l4603 15BC  
                                                             l4531 2568  
                                                             l4523 24D0  
                                                             l5091 2892  
                                                             l5075 2832  
                                                             l5171 21E2  
                                                             l5219 3336  
                                                             l2589 33A0  
                                                             l3581 1276  
                                                             l3573 1238  
                                                             l3565 11EE  
                                                             l3557 1162  
                                                             l3549 110C  
                                                             l3493 0F64  
                                                             l3645 3264  
                                                             l2941 0C30  
                                                             l2933 0BF6  
                                                             l2925 0BA8  
                                                             l2917 0B6A  
                                                             l2909 0B10  
                                                             l2861 0A4E  
                                                             l2853 0A1C  
                                                             l2845 09F6  
                                                             l2837 09BA  
                                                             l5157 32D8  
                                                             l5149 32A6  
                                                             l2829 3368  
                                                             l5069 1DF8  
                                                             l4509 3072  
                                                             l4381 2BE6  
                                                             l4373 2BB6  
                                                             l4365 2B88  
                                                             l4357 2B58  
                                                             l4349 2B24  
                                                             l4461 29E6  
                                                             l4453 29B6  
                                                             l4445 2988  
                                                             l4437 2958  
                                                             l4429 2924  
                                                             l4621 1660  
                                                             l4613 1616  
                                                             l4605 15D0  
                                                             l4541 141E  
                                                             l4533 13E8  
                                                             l4701 1E8E  
                                                             l4525 2504  
                                                             l4517 246E  
                                                             l5093 28C6  
                                                             l5077 2836  
                                                             l5181 225A  
                                                             l5173 2208  
                                                             l5165 21B8  
                                                             l2599 3376  
                                                             l3591 12FE  
                                                             l3583 12A8  
                                                             l3575 124C  
                                                             l3567 11FC  
                                                             l3559 116E  
                                                             l3495 0F7A  
                                                             l3487 0F44  
                                                             l3647 327E  
                                                             l2951 0C7A  
                                                             l2943 0C42  
                                                             l2935 0C0A  
                                                             l2927 0BBC  
                                                             l2919 0B7A  
                                                             l2871 0A8E  
                                                             l2863 0A50  
                                                             l2855 0A32  
                                                             l2847 09FA  
                                                             l2839 09BC  
                                                             l5159 32DA  
                                                             l4471 2D32  
                                                             l4383 2BF6  
                                                             l4375 2BC6  
                                                             l4359 2B5C  
                                                             l4367 2B90  
                                                             l4391 2A38  
                                                             l4463 29F6  
                                                             l4455 29C6  
                                                             l4439 295C  
                                                             l4447 2990  
                                                             l4631 16AA  
                                                             l4623 166C  
                                                             l4615 1626  
                                                             l4607 15E2  
                                                             l4551 1460  
                                                             l4543 1432  
                                                             l4535 13F4  
                                                             l4711 1EF2  
                                                             l4527 251C  
                                                             l4519 2484  
                                                             l5095 28D2  
                                                             l5087 286E  
                                                             l5079 283A  
                                                             l5191 22C8  
                                                             l5175 2210  
                                                             l5183 2286  
                                                             l5167 21C4  
                                                             l3593 1328  
                                                             l3577 1260  
                                                             l3569 121A  
                                                             l3497 0F8E  
                                                             l3489 0F50  
                                                             l3649 328E  
                                                             l2961 0CEE  
                                                             l2953 0C7C  
                                                             l2945 0C54  
                                                             l2929 0BBE  
                                                             l2881 0AD6  
                                                             l2865 0A66  
                                                             l2873 0A96  
                                                             l2857 0A34  
                                                             l2849 0A02  
                                                             l4481 2D66  
                                                             l4473 2D36  
                                                             l4377 2BCA  
                                                             l4369 2BA6  
                                                             l4385 2C00  
                                                             l4393 2A3C  
                                                             l4457 29CA  
                                                             l4449 29A6  
                                                             l4465 2A00  
                                                             l4641 1732  
                                                             l4633 16BC  
                                                             l4625 167E  
                                                             l4617 1640  
                                                             l4609 15F0  
                                                             l4561 1498  
                                                             l4553 1468  
                                                             l4545 1442  
                                                             l4537 1406  
                                                             l4721 1F66  
                                                             l4713 1EF6  
                                                             l4705 1EA2  
                                                             l4529 2550  
                                                             l5089 2886  
                                                             l4801 2420  
                                                             l5193 22D2  
                                                             l5185 229C  
                                                             l5177 2232  
                                                             l5169 21DA  
                                                             l3587 12E0  
                                                             l3595 132C  
                                                             l3579 1264  
                                                             l3499 0F9E  
                                                             l2971 0D56  
                                                             l2963 0CF0  
                                                             l2955 0C88  
                                                             l2947 0C60  
                                                             l2939 0C1E  
                                                             l2891 0AEC  
                                                             l2883 0ADC  
                                                             l2875 0AA8  
                                                             l2867 0A7A  
                                                             l2859 0A3C  
                                                             l4491 2DA0  
                                                             l4483 2D72  
                                                             l4475 2D42  
                                                             l4467 2D0A  
                                                             l4379 2BDA  
                                                             l4395 2A48  
                                                             l4387 2A10  
                                                             l4459 29DA  
                                                             l4651 17A8  
                                                             l4643 1744  
                                                             l4635 16EE  
                                                             l4619 165A  
                                                             l4627 1692  
                                                             l4571 14DA  
                                                             l4563 14AC  
                                                             l4555 146E  
                                                             l4547 1446  
                                                             l4539 1408  
                                                             l4731 1FCC  
                                                             l4723 1F8C  
                                                             l4715 1F02  
                                                             l4707 1EAC  
                                                             l4811 01AE  
                                                             l5099 28DA  
                                                             l4803 2428  
                                                             l5187 22B4  
                                                             l5179 2246  
                                                             l3597 134C  
                                                             l3589 12EC  
                                                             l2981 0D8A  
                                                             l2965 0D04  
                                                             l2949 0C66  
                                                             l2957 0C8E  
                                                             l2893 0AF0  
                                                             l2885 0AE0  
                                                             l2877 0AC0  
                                                             l2869 0A8A  
                                                             l4741 183A  
                                                             l4493 2DB0  
                                                             l4477 2D52  
                                                             l4485 2D7A  
                                                             l4469 2D1E  
                                                             l4397 2A58  
                                                             l4389 2A24  
                                                             l4661 1802  
                                                             l4653 17C8  
                                                             l4645 176E  
                                                             l4629 16A6  
                                                             l4573 14F6  
                                                             l4565 14BC  
                                                             l4557 1480  
                                                             l4549 144E  
                                                             l4733 1FDE  
                                                             l4725 1F8E  
                                                             l4717 1F44  
                                                             l4709 1EBA  
                                                             l4901 05A0  
                                                             l4821 0240  
                                                             l4813 01B4  
                                                             l4805 242C  
                                                             l5189 22BE  
                                                             l5197 22E0  
                                                             l4671 26DC  
                                                             l3599 1360  
                                                             l2983 0D9E  
                                                             l2975 0D6A  
                                                             l2991 0DC4  
                                                             l2959 0CBA  
                                                             l2967 0D14  
                                                             l2895 0AF4  
                                                             l2887 0AE4  
                                                             l2879 0AD2  
                                                             l4751 192A  
                                                             l4743 188A  
                                                             l4495 2DB4  
                                                             l4487 2D90  
                                                             l4479 2D56  
                                                             l4399 2A5C  
                                                             l4663 1806  
                                                             l4655 17E4  
                                                             l4639 1726  
                                                             l4647 1772  
                                                             l4591 1552  
                                                             l4575 1506  
                                                             l4583 1528  
                                                             l4567 14C0  
                                                             l4559 1482  
                                                             l4735 1FE0  
                                                             l4727 1F94  
                                                             l4719 1F52  
                                                             l4911 0662  
                                                             l4903 05A8  
                                                             l4831 02CC  
                                                             l4823 0248  
                                                             l4815 01DE  
                                                             l4807 2452  
                                                             l4681 2776  
                                                             l4673 270E  
                                                             l2985 0DA6  
                                                             l2977 0D76  
                                                             l2969 0D42  
                                                             l2993 0DD6  
                                                             l2897 0AF8  
                                                             l2889 0AE8  
                                                             l4761 1ADA  
                                                             l4745 189E  
                                                             l4497 2DC4  
                                                             l4489 2D94  
                                                             l4657 17EA  
                                                             l4649 1792  
                                                             l4593 156E  
                                                             l4585 153E  
                                                             l4577 150E  
                                                             l4569 14C8  
                                                             l4729 1FB8  
                                                             l4921 06C8  
                                                             l4913 066E  
                                                             l4905 05AE  
                                                             l4841 0326  
                                                             l4833 02DE  
                                                             l4825 024E  
                                                             l4817 0208  
                                                             l4809 01A4  
                                                             l4683 2788  
                                                             l4675 271E  
                                                             l2995 0DDC  
                                                             l2987 0DAC  
                                                             l2979 0D88  
                                                             l2899 0AFC  
                                                             l4763 1B46  
                                                             l4755 1962  
                                                             l4747 18E4  
                                                             l4739 181A  
                                                             l4499 2DD0  
                                                             l4659 17FC  
                                                             l4595 157E  
                                                             l4587 153E  
                                                             l4579 1514  
                                                             l4931 0728  
                                                             l4923 06FA  
                                                             l4915 0676  
                                                             l4907 05D0  
                                                             l4851 03A0  
                                                             l4843 0346  
                                                             l4835 02EC  
                                                             l4827 027A  
                                                             l4819 0232  
                                                             l5299 22F8  
                                                             l4685 279C  
                                                             l4677 2752  
                                                             l2997 0DEE  
                                                             l2989 0DC2  
                                                             l4765 1B7C  
                                                             l4757 1A36  
                                                             l4749 1908  
                                                             l4597 158E  
                                                             l4693 1E04  
                                                             l4941 07C6  
                                                             l4933 0754  
                                                             l4925 070C  
                                                             l4917 067C  
                                                             l4909 05E2  
                                                             l4861 048C  
                                                             l4853 03A6  
                                                             l4845 0378  
                                                             l4837 02F4  
                                                             l4829 029A  
                                                             l4781 235A  
                                                             l4773 2332  
                                                             l4687 27F2  
                                                             l4679 2762  
                                                             l2999 0E08  
                                                             l4767 1BC2  
                                                             l4759 1AA2  
                                                             l4599 159E  
                                                             l4695 1E18  
                                                             l4951 082E  
                                                             l4943 07CE  
                                                             l4935 0774  
                                                             l4927 071A  
                                                             l4919 06A8  
                                                             l4863 049E  
                                                             l4855 03D2  
                                                             l4847 038A  
                                                             l4839 02FA  
                                                             l4791 23CE  
                                                             l4783 2388  
                                                             l4775 233A  
                                                             l4689 27F8  
                                                             l4769 1BE6  
                                                             l4697 1E2A  
                                                             l4961 08EA  
                                                             l4953 08BA  
                                                             l4945 07D4  
                                                             l4937 07A6  
                                                             l4929 0722  
                                                             l4881 0514  
                                                             l4873 04CC  
                                                             l4865 04A6  
                                                             l4857 03F2  
                                                             l4849 0398  
                                                             l4793 23DA  
                                                             l4785 2394  
                                                             l4777 234E  
                                                             l4699 1E72  
                                                             l4971 093C  
                                                             l4963 090C  
                                                             l4955 08CC  
                                                             l4947 0800  
                                                             l4939 07B8  
                                                             l4891 0550  
                                                             l4883 0522  
                                                             l4875 04F0  
                                                             l4867 04B2  
                                                             l4859 0400  
                                                             l4795 23E2  
                                                             l4787 239C  
                                                             l4779 2356  
                                                             l4981 0986  
                                                             l4973 0942  
                                                             l4965 091E  
                                                             l4957 08DC  
                                                             l4949 0820  
                                                             l4893 0556  
                                                             l4877 0504  
                                                             l4885 052C  
                                                             l4797 23E6  
                                                             l4789 23A0  
                                                             l4991 2ECA  
                                                             l4983 098E  
                                                             l4975 0964  
                                                             l4967 0926  
                                                             l4959 08E4  
                                                             l4895 0578  
                                                             l4887 053A  
                                                             l4799 2414  
                                                             l4993 2EE8  
                                                             l4985 2E88  
                                                             l4977 0976  
                                                             l4969 0934  
                                                             l4897 058A  
                                                             l4889 0548  
                                                             l4995 2F16  
                                                             l4987 2EAC  
                                                             l4979 097E  
                                                             l4899 0592  
                                                             l4997 1C00  
                                                             l4989 2EB4  
                                                             l4999 1C08  
                                                             STR_1 7D65  
                                                             STR_2 7FC5  
                                                             STR_3 7E98  
                                                             STR_4 7F65  
                                                             STR_5 7E70  
                                                             STR_6 7F80  
                                                             STR_7 7E3C  
                                                             STR_8 7F2D  
                                                             STR_9 7F49  
                                                             u3000 2F72  
                                                             u3001 2F6C  
                                                             u3010 2F8E  
                                                             u3011 2F88  
                                                             u3020 2C36  
                                                             u3021 2C30  
                                                             u3030 2C5C  
                                                             u3031 2C56  
                                                             _LATC 000F8B  
                                                             u3040 2CAA  
                                                             u3041 2CA4  
                                                             u2410 320E  
                                                             u3050 2CC6  
                                                             u2411 3208  
                                                             u3051 2CC0  
                                                             u2500 0A78  
                                                             u3060 2D00  
                                                             u2501 0A72  
                                                             u3061 2CFA  
                                                             u2510 0ABE  
                                                             u2511 0AB8  
                                                             u2600 0C08  
                                                             u2520 0AD0  
                                                             u2440 09B8  
                                                             u5000 3050  
                                                             u2601 0C02  
                                                             u2521 0ACA  
                                                             u2441 09B2  
                                                             u5001 304A  
                                                             u2610 0C40  
                                                             u2530 0B46  
                                                             u2450 09D0  
                                                             u5010 3070  
                                                             u2611 0C3A  
                                                             u2531 0B40  
                                                             u2451 09CA  
                                                             u5011 306A  
                                                             u3500 0F78  
                                                             u2700 0DC0  
                                                             u2620 0C52  
                                                             u2540 0B62  
                                                             u2460 09E4  
                                                             u5100 1496  
                                                             u5020 2482  
                                                             u3501 0F72  
                                                             u2701 0DBA  
                                                             u2621 0C4C  
                                                             u2541 0B5A  
                                                             u2461 09DE  
                                                             u5101 1490  
                                                             u5021 247C  
                                                             u3510 0F8C  
                                                             u2710 0DD6  
                                                             u2630 0C78  
                                                             u2550 0B66  
                                                             u2470 0A30  
                                                             u5110 14AA  
                                                             u5030 24CE  
                                                             u3511 0F86  
                                                             u2711 0DD0  
                                                             u2631 0C72  
                                                             u2471 0A2A  
                                                             u5111 14A4  
                                                             u5031 24C8  
                                                             u3600 1274  
                                                             u3520 0FD6  
                                                             u2800 0EEA  
                                                             u2720 0DEC  
                                                             u2640 0CB8  
                                                             u2560 0B94  
                                                             u2480 0A4C  
                                                             u6000 2F14  
                                                             u5200 16A4  
                                                             u5120 14F4  
                                                             u5040 251A  
                                                             u3601 126E  
                                                             u3521 0FD0  
                                                             u2801 0EE4  
                                                             u2721 0DE6  
                                                             u2641 0CB2  
                                                             u2561 0B8E  
                                                             u2481 0A46  
                                                             u6001 2F0E  
                                                             u5201 169E  
                                                             u5121 14EE  
                                                             u5041 2514  
                                                             u3610 12A6  
                                                             u3530 0FEE  
                                                             u2810 0F02  
                                                             u2730 0E06  
                                                             u2650 0D02  
                                                             u2570 0BBA  
                                                             u2490 0A64  
                                                             u6010 1C40  
                                                             u5210 16BA  
                                                             u5130 153C  
                                                             u5050 2566  
                                                             u3611 12A0  
                                                             u3531 0FE8  
                                                             u2811 0EFC  
                                                             u2731 0E00  
                                                             u2651 0CFC  
                                                             u2571 0BB4  
                                                             u2491 0A5E  
                                                             u6011 1C3A  
                                                             u5211 16B4  
                                                             u5131 1536  
                                                             u5051 2560  
                                                             u5300 2750  
                                                             u3620 12C4  
                                                             u3540 1002  
                                                             u2820 0F26  
                                                             u2740 0E24  
                                                             u2660 0D40  
                                                             u2580 0BE2  
                                                             u6020 1C5A  
                                                             u5220 16EC  
                                                             u5140 15BA  
                                                             u5060 1404  
                                                             u6100 2868  
                                                             u5301 274A  
                                                             u3621 12BE  
                                                             u3541 0FFC  
                                                             u2821 0F20  
                                                             u2741 0E1E  
                                                             u2661 0D3A  
                                                             u2581 0BDC  
                                                             u6021 1C54  
                                                             u5221 16E6  
                                                             u5141 15B4  
                                                             u5061 13FE  
                                                             u6101 2862  
                                                             u5310 2774  
                                                             u3630 12DE  
                                                             u3550 1042  
                                                             u2750 0E3E  
                                                             u2670 0D54  
                                                             u2590 0BF4  
                                                             u2830 30AE  
                                                             u6030 1C80  
                                                             u5230 170A  
                                                             u5150 15E0  
                                                             u5070 141C  
                                                             u6110 2884  
                                                             u5311 276E  
                                                             u3631 12D8  
                                                             u3551 103C  
                                                             u2751 0E38  
                                                             u2671 0D4E  
                                                             u2591 0BEE  
                                                             u2831 30A8  
                                                             u6031 1C7A  
                                                             u5231 1704  
                                                             u5151 15DA  
                                                             u5071 1416  
                                                             u6111 287E  
                                                             u5320 279A  
                                                             u3640 12FC  
                                                             u3560 1056  
                                                             u2760 0E5C  
                                                             u2680 0D86  
                                                             u2840 30E0  
                                                             u6040 1CBA  
                                                             u5240 1724  
                                                             u5160 1612  
                                                             u5080 1430  
                                                             u5400 1F78  
                                                             u6120 28FC  
                                                             u6200 21D8  
                                                             u5321 2794  
                                                             u3641 12F6  
                                                             u3561 1050  
                                                             u2761 0E56  
                                                             u2681 0D80  
                                                             u2841 30DA  
                                                             u6041 1CB4  
                                                             u5241 171E  
                                                             u5161 160C  
                                                             u5081 142A  
                                                             u5401 1F72  
                                                             u6121 28F6  
                                                             u6201 21D2  
                                                             u6130 25BC  
                                                             u5330 27F0  
                                                             u3650 134A  
                                                             u3570 11D6  
                                                             u3490 0F60  
                                                             u3730 327C  
                                                             u2770 0E9A  
                                                             u2690 0D9C  
                                                             u2850 3254  
                                                             u2930 2036  
                                                             u6050 1CF4  
                                                             u5250 1742  
                                                             u5170 163E  
                                                             u5090 147E  
                                                             u5410 1F8A  
                                                             u6210 2258  
                                                             u6131 25B6  
                                                             u5331 27EA  
                                                             u3651 1344  
                                                             u3491 0F5A  
                                                             u3731 3276  
                                                             u2771 0E94  
                                                             u2691 0D96  
                                                             u2851 324C  
                                                             u2931 2030  
                                                             u6051 1CEE  
                                                             u5251 173C  
                                                             u5171 1638  
                                                             u5091 1478  
                                                             u5411 1F84  
                                                             u6211 2252  
                                                             u6140 25FA  
                                                             u3660 137E  
                                                             u3580 1236  
                                                             u2780 0EB2  
                                                             u5500 1AD8  
                                                             u2860 3258  
                                                             u2940 206E  
                                                             u6060 1D2E  
                                                             u5260 1790  
                                                             u5180 1658  
                                                             u5420 1FCA  
                                                             u5340 1E16  
                                                             u6220 2286  
                                                             u3661 1378  
                                                             u3581 1230  
                                                             u2781 0EAC  
                                                             u5501 1AD2  
                                                             u2941 2068  
                                                             u6061 1D28  
                                                             u5261 178A  
                                                             u5181 1652  
                                                             u5421 1FC4  
                                                             u5341 1E10  
                                                             u6221 2280  
                                                             u6150 262C  
                                                             u3670 13BE  
                                                             u3590 125E  
                                                             u2790 0EC6  
                                                             u5510 1BA0  
                                                             u2950 2090  
                                                             u6070 1D68  
                                                             u5270 17C6  
                                                             u5190 167C  
                                                             u5430 1FDC  
                                                             u5350 1E28  
                                                             u2870 2FE6  
                                                             u6230 229A  
                                                             u6151 2626  
                                                             u3671 13B8  
                                                             u3591 1258  
                                                             u3575 11CA  
                                                             u2791 0EC0  
                                                             u2951 208A  
                                                             u6071 1D62  
                                                             u5271 17C0  
                                                             u5191 1676  
                                                             u5431 1FD6  
                                                             u5351 1E22  
                                                             u2871 2FE0  
                                                             u6231 2294  
                                                             u6160 2644  
                                                             u5520 1BC0  
                                                             u5440 185C  
                                                             u2960 2154  
                                                             u6080 1DA2  
                                                             u5280 17FA  
                                                             u5360 1E8C  
                                                             u5600 0200  
                                                             u2880 3016  
                                                             u6240 22AE  
                                                             u6161 263E  
                                                             u6145 25EC  
                                                             u5521 1BBA  
                                                             u2961 214C  
                                                             u6081 1D9C  
                                                             u5281 17F4  
                                                             u5361 1E86  
                                                             u5601 01F8  
                                                             u2881 3010  
                                                             u6241 22A8  
                                                             u6170 2674  
                                                             u5290 270C  
                                                             u5450 1888  
                                                             u2970 2158  
                                                             u4810 3120  
                                                             u5370 1EEC  
                                                             u5610 0204  
                                                             u6090 2830  
                                                             u5530 237E  
                                                             u6171 266E  
                                                             u5291 2706  
                                                             u5515 1B94  
                                                             u5451 1882  
                                                             u4811 311A  
                                                             u5371 1EE6  
                                                             u6091 282A  
                                                             u5531 2378  
                                                             u6180 269C  
                                                             u5460 18C2  
                                                             u2980 2172  
                                                             u4820 3148  
                                                             u4900 2A22  
                                                             u5380 1F3E  
                                                             u5700 03D0  
                                                             u5620 022A  
                                                             u5540 23C4  
                                                             _RCIF 007CF5  
                                                             u6181 2696  
                                                             u5445 1850  
                                                             u2981 216C  
                                                             u4821 3142  
                                                             u4901 2A1C  
                                                             u5381 1F38  
                                                             u5701 03CA  
                                                             u5621 0222  
                                                             u5541 23BE  
                                                             u6190 26B0  
                                                             u5470 18E2  
                                                             u2990 2188  
                                                             u4830 2E24  
                                                             u4910 2A36  
                                                             u5390 1F64  
                                                             u5710 048A  
                                                             u5630 022E  
                                                             u5550 240A  
                                                             u6191 26AA  
                                                             u5471 18DC  
                                                             u2991 2182  
                                                             u4911 2A30  
                                                             u5391 1F5E  
                                                             u5711 0484  
                                                             u5551 2404  
                                                             u5480 1928  
                                                             u4840 2E38  
                                                             u4920 2AA4  
                                                             u5800 0606  
                                                             u5720 049E  
                                                             u5640 0278  
                                                             u5560 2450  
                                                             u5481 1922  
                                                             u5465 18B6  
                                                             u4841 2E32  
                                                             u4921 2A9E  
                                                             u5801 05FE  
                                                             u5721 0498  
                                                             u5641 0272  
                                                             u5561 244A  
                                                             u5490 1A34  
                                                             u4850 2E6E  
                                                             u4930 2922  
                                                             u5810 060A  
                                                             u5730 04C6  
                                                             u5650 02CA  
                                                             u5570 2464  
                                                             u5491 1A2E  
                                                             u4931 291C  
                                                             u5731 04C0  
                                                             u5651 02C4  
                                                             u5571 245E  
                                                             u4860 2E80  
                                                             u4940 2936  
                                                             u5900 07A4  
                                                             u5820 0630  
                                                             u5740 04EE  
                                                             u5660 02DE  
                                                             u5580 01D6  
                                                             u4861 2E7A  
                                                             u4837 2E1A  
                                                             u4941 2930  
                                                             u5901 079E  
                                                             u5821 0628  
                                                             u5741 04E8  
                                                             u5661 02D8  
                                                             u5581 01CE  
                                                             u4870 2B22  
                                                             u4950 29A4  
                                                             u5910 07B8  
                                                             u5830 0634  
                                                             u5750 0502  
                                                             u5670 0324  
                                                             u5590 01DA  
                                                             u4871 2B1C  
                                                             u4951 299E  
                                                             u5911 07B2  
                                                             u5751 04FC  
                                                             u5671 031E  
                                                             u4960 2D1C  
                                                             u4880 2B36  
                                                             u5920 07FE  
                                                             u5840 065A  
                                                             u5760 0576  
                                                             u5680 0376  
                                                             u4857 2E64  
                                                             u4961 2D16  
                                                             u4881 2B30  
                                                             u5921 07F8  
                                                             u5841 0652  
                                                             u5761 0570  
                                                             u5681 0370  
                                                             u4970 2D30  
                                                             u4890 2BA4  
                                                             u5930 08B8  
                                                             u5850 065E  
                                                             u5770 058A  
                                                             u5690 038A  
                                                             u4971 2D2A  
                                                             u4891 2B9E  
                                                             u5931 08B2  
                                                             u5771 0584  
                                                             u5691 0384  
                                                             u4980 2D8E  
                                                             u5940 08CC  
                                                             u5860 06A6  
                                                             u5780 05CE  
                                                             u4981 2D88  
                                                             u5941 08C6  
                                                             u5861 06A0  
                                                             u5781 05C8  
                                                             u4990 303C  
                                                             u5950 090A  
                                                             u5870 06F8  
                                                             u5790 05E2  
                                                             u4991 3036  
                                                             u5951 0904  
                                                             u5871 06F2  
                                                             u5791 05DC  
                                                             u5960 091E  
                                                             u5880 070C  
                                                             u5961 0918  
                                                             u5881 0706  
                                                             u5970 0962  
                                                             u5890 0752  
                                                             u5971 095C  
                                                             u5891 074C  
                                                             u5980 0976  
                                                             u5981 0970  
                                                             u5990 2EC8  
                                                             u5991 2EC2  
                                                             _Fosc 7D61  
                                                             _Tosc 00C5  
                                                             _atoi 1FF8  
                                                             _main 331E  
                                                             fsr1h 000FE2  
                                                             fsr2h 000FDA  
                                                             indf1 000FE7  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0075  
                                                             _stop 0072  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 019A  
                                                       _Angle_diff 005D  
                                                  ___fldiv@new_exp 0029  
                                                     ___param_bank 000000  
                                                     ?_init_Timers 0001  
                                                    ___fltol@sign1 005B  
                                                            ?_atoi 0011  
                                                  __end_of___fladd 0F42  
                                                            ?_main 0001  
                                                  __end_of___fldiv 1818  
                                                  __end_of___flneg 32A4  
                                                            STR_10 7F10  
                                                            STR_11 7ED6  
                                                            STR_20 7FFD  
                                                            STR_12 7EF3  
                                                            STR_13 7EB8  
                                                            STR_14 7FB1  
                                                            STR_15 7DFD  
                                                            STR_16 7FD9  
                                                            STR_17 7DB7  
                                                            STR_18 7FEC  
                                                            STR_19 7F9A  
                                                  __end_of___flmul 13E6  
                                                  __end_of___flsub 3198  
                                                  __end_of___fltol 26DA  
                                                  __end_of_Tweezer 3092  
                                                  __end_of_Twister 2DE6  
                                                            i2l500 00B4  
                                                            i2l353 3416  
                                                            i2l505 018A  
                                                            i2l493 0040  
                                                            _RCREG 000FAE  
                                                            _TMR0H 000FD7  
                                                            _TMR1H 000FCF  
                                                            _TMR0L 000FD6  
                                                            _TMR1L 000FCE  
                                                            _SPBRG 000FAF  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                 Twister@direction 0010  
                                                            _X_dir 0071  
                                                            _Y_dir 0070  
                                                            _State 00CF  
                                                            _Steps 00B8  
                                           __size_of_add_component 0202  
                                                  __end_of_isdigit 3262  
                                                  __end_of_memmove 2D06  
                                                            atoi@n 001E  
                                                            atoi@s 0011  
                               __end_of_desired_BaudRate@main$F786 7D59  
                                       _desired_BaudRate@main$F786 7D55  
                                                            _toint 7D51  
                                                  __end_of_isspace 30F2  
                                                            tablat 000FF5  
                                                    _start_up_menu 21B6  
                                                  _change_sequence 2E86  
                                         __end_of_fetch_parameters 25A2  
                                                            ttemp5 0076  
                                                            ttemp6 0079  
                                                  Y_axis@direction 0010  
                                                            ttemp7 007D  
                                                            status 000FD8  
                                                            wtemp8 0076  
                                                  __end_of_strncat 2FA4  
                                                  __end_of_strrchr 331E  
                                                     __end_of_Fosc 7D65  
                                                  __initialization 3198  
                                                     __end_of_atoi 21B6  
                                                     __end_of_main 334A  
                                                       _Pick_Angle 0065  
                                                           ??_atoi 0013  
                                                           ??_main 005D  
                                                    __activetblptr 000002  
                                                    print_string@i 000E  
                                                   ?_start_up_menu 0001  
                                                           i2l4221 0026  
                                                           i2l4231 0088  
                                                           i2l4223 0038  
                                                           i2l4241 00E6  
                                                           i2l4233 00B8  
                                                           i2l4225 0054  
                                                           i2l4171 3414  
                                                           i2l4251 011A  
                                                           i2l4243 00E8  
                                                           i2l4235 00BC  
                                                           i2l4227 0064  
                                                           i2l4219 0014  
                                                           i2l4165 340A  
                                                           i2l4261 0158  
                                                           i2l4253 011E  
                                                           i2l4245 00F2  
                                                           i2l4229 0076  
                                                           i2l4237 00C0  
                                                           i2l4167 340E  
                                                           i2l4271 0184  
                                                           i2l4263 015A  
                                                           i2l4255 0132  
                                                           i2l4247 0106  
                                                           i2l4239 00D4  
                                                           i2l4169 3412  
                                                           i2l4265 015C  
                                                           i2l4257 0144  
                                                           i2l4249 0118  
                                                           i2l4259 014C  
                                                           i2l4267 015E  
                                                           i2l4269 0172  
                                                 __end_of___xxtofl 1FF8  
                                          remove_component@rm_comp 001E  
                                                           _X_Pick 006D  
                                                           _Y_Pick 0069  
                                                           _X_diff 0061  
                                                           _Y_diff 005F  
                                                           _X_axis 2B0C  
                                                           _Y_axis 2A0C  
                                                           _Z_axis 290C  
                                                    _add_component 1BFE  
                                                ?_remove_component 0001  
                                                           _Step_X 00B6  
                                                           _Step_Y 00B4  
                                                           _Step_Z 00B2  
                                                           ___flge 26DA  
                                                     ?_set_new_pos 0001  
                                                        ??___fladd 0012  
                                                           ___wmul 334A  
                                                        ??___fldiv 0020  
                                                        ??___flneg 000E  
                                                        ??___flmul 0012  
                                                        ??___flsub 0022  
                                                        ??___fltol 00E0  
                                                        ??_Tweezer 000A  
                                                 ??_pick_and_place 003D  
                                               ??_remove_component 001C  
                                                        ??_Twister 0010  
                                                           clear_0 31BE  
                                                           clear_1 31CA  
                                                           isa$std 000001  
                                                 __end_of_ms_delay 314E  
                                                           _roundf 1818  
                                                           _strlen 31DE  
                                                        ??_isdigit 000C  
                                                        ??_memmove 0014  
                                                    _Place_Angle_D 00A4  
                                                       _Step_Angle 00B0  
                                                     __mediumconst 7D50  
                                                        ??_isspace 000C  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                          __end_of_change_sequence 2F1E  
                                         fetch_parameters@Componnt 000A  
                                                        ??_strncat 0014  
                                                        ??_strrchr 001C  
                                                _return_to_initial 2330  
                                                       ___flge@ff1 0031  
                                                       ___flge@ff2 0035  
                                                     ___xxtofl@arg 0014  
                                                     ___xxtofl@exp 0013  
                                                     ___xxtofl@val 000A  
                                                       __accesstop 0080  
                                          __end_of__initialization 31D0  
                                               __size_of___memrchr 0082  
                                               ?_return_to_initial 0001  
                                                       ___flneg@f1 000A  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0057  
                                               _pick_and_place$901 0109  
                                               _pick_and_place$912 0115  
                                               _pick_and_place$904 010D  
                                               _pick_and_place$914 0119  
                                               _pick_and_place$916 011D  
                                               _pick_and_place$898 0105  
                                                   ?_add_component 0001  
                                                  _init_interrupts 33C6  
                                              ??_return_to_initial 0011  
                                                   __pcstackCOMRAM 0001  
                                              _new_TMR1H@main$F816 00CE  
                                                     __pidataBANK0 33E6  
                                                    __end_of_toint 7D55  
                                             __size_of_init_Timers 002A  
                                                      ms_delay@val 000A  
                                                 _desired_BaudRate 7D59  
                                        __end_of_return_to_initial 246A  
                                                  ??_start_up_menu 003F  
                                                      _Place_Angle 0063  
                                                      _New_char_RX 0074  
                                                       __pbssBANK0 0080  
                                            __end_of_Rx_char_USART 019A  
                                        remove_component@indxToDel 001F  
                                                       __pnvCOMRAM 0074  
                                                       _angle_diff 00A2  
                                                          ?_X_axis 0001  
                                                          ?_Y_axis 0001  
                                                          ?_Z_axis 0001  
                                                          ?___flge 0031  
                                              _new_TMR1L@main$F817 00CD  
                                                          ?___wmul 000A  
                                                          ?_roundf 003D  
                                                __end_of___memrchr 3026  
                                                          ?_strlen 000A  
                                                set_new_pos@nTMR1H 0002  
                                                set_new_pos@nTMR1L 0001  
                                                          _INTCON2 000FF1  
                                                          _INTCON3 000FF0  
                                                        ?___xxtofl 000A  
                                              pick_and_place@i_910 0111  
                                              pick_and_place@i_902 010B  
                                              pick_and_place@i_911 0113  
                                              pick_and_place@i_913 0117  
                                              pick_and_place@i_915 011B  
                                              pick_and_place@i_908 010F  
                                              pick_and_place@i_917 011F  
                                              pick_and_place@i_918 0121  
                                              pick_and_place@i_899 0107  
                                                 ?_change_sequence 0001  
                                                          _RX_Char 00C0  
                                          __end_of_init_interrupts 33E6  
                                                ?_fetch_parameters 0001  
                                                  ??_add_component 0020  
                                                        ?_ms_delay 000A  
                                                          _X_Place 006B  
                                                          _Y_Place 0067  
                                               ??_fetch_parameters 000A  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  pick_and_place@i 0103  
                                                  pick_and_place@j 0101  
                                                       _init_PORTS 339E  
                                                       _init_USART 32A4  
                                                  __size_of_X_axis 0100  
                                                  __size_of_Y_axis 0100  
                                                          _Rot_dir 006F  
                                                  __size_of_Z_axis 0100  
                                                  __size_of___flge 0128  
                                                          ___fladd 099A  
                                                          ___fldiv 13E6  
                                                          ___flneg 3262  
                                                          ___flmul 0F42  
                                                          ___flsub 314E  
                                                          ___fltol 25A2  
                                                          _Tweezer 3026  
                                                  __size_of___wmul 002A  
                                                          _Twister 2D06  
                                             __size_of_set_new_pos 0014  
                                                          __pcinit 3198  
                                                          __ramtop 0600  
                                                          __ptext0 331E  
                                                          __ptext1 21B6  
                                                          __ptext2 2330  
                                                          __ptext3 2802  
                                                          __ptext4 32E4  
                                                          __ptext5 2FA4  
                                                          __ptext6 2C0C  
                                                          __ptext7 019E  
                                                          __ptext8 246A  
                                                          __ptext9 1E00  
                                                        _T0CONbits 000FD5  
                                                  __size_of_roundf 03E6  
                                                  __size_of_strlen 0042  
                                                        _T1CONbits 000FCD  
                                                          _isdigit 3220  
                                                          _memmove 2C0C  
                                                       ??___xxtofl 000E  
                                                          _isspace 3092  
                                       __size_of_return_to_initial 013A  
                                                          atoi@neg 0017  
                                                    Tweezer@action 000A  
                                                          _strncat 2F1E  
                                                          _strrchr 32E4  
                                             end_of_initialization 31D0  
                                              remove_component@ptr 001C  
                                                    __Lmediumconst 7D50  
                                                       ??_ms_delay 000C  
                                                        _RCSTAbits 000FAB  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                          roundf@e 0049  
                                                          roundf@u 004F  
                                                          roundf@x 003D  
                                                          roundf@y 0053  
                                                          strlen@a 000C  
                                                          strlen@s 000A  
                                               add_component@F3138 00C9  
                                                      ___fladd@grs 0019  
                                                    ___xxtofl@sign 0012  
                                        __size_of_remove_component 010A  
                                                        _TRISCbits 000F94  
                                                      ___fldiv@grs 002B  
                                                      ___fldiv@rem 0024  
                                                    ?_print_string 000A  
                                                      ___flmul@grs 0017  
                                                 ?_init_interrupts 0001  
                                                        _TXSTAbits 000FAC  
                                                      ___memrchr@c 0010  
                                                      ___memrchr@m 000E  
                                                      ___memrchr@n 0012  
                                                      ___memrchr@s 0016  
                                         __end_of_desired_BaudRate 7D5D  
                                                      ?_init_PORTS 0001  
                                                      ?_init_USART 0001  
                                                   __end_of_X_axis 2C0C  
                                                   __end_of_Y_axis 2B0C  
                                                   __end_of_Z_axis 2A0C  
                                                   __end_of___flge 2802  
                                                   __end_of___wmul 3374  
                                                   __end_of_roundf 1BFE  
                                                   __end_of_strlen 3220  
                                              start_initialization 3198  
                                                   ??_print_string 000C  
                                                        _X_Place_D 00A8  
                                                        _Y_Place_D 00A6  
                                                  X_axis@direction 0010  
                                                     _Pick_Angle_D 00AA  
                                                   _Tosc@main$F785 00C1  
                                                         ??_X_axis 0010  
                                                         ??_Y_axis 0010  
                                                         ??_Z_axis 0010  
                                                         ??___flge 0039  
                                                         ??___wmul 000E  
                                                      __pdataBANK0 00C1  
                                                   _lenth_of_array 00CB  
                                                    ??_init_Timers 000A  
                                               return_to_initial@i 0012  
                                                         ??_roundf 0041  
                                                         ??_strlen 000C  
                                                        ___fladd@a 000E  
                                                        ___fladd@b 000A  
                                                        ___fldiv@a 001C  
                                                        ___fldiv@b 0018  
                                                        ___flmul@a 000E  
                                                        ___flmul@b 000A  
                                                      __pbssCOMRAM 005D  
                                                 change_sequence@i 0013  
                                                        ___flsub@a 001E  
                                                        ___flsub@b 001A  
                                                    __pcstackBANK0 00E0  
                                                    __pcstackBANK1 0100  
                                          __size_of_pick_and_place 07FC  
                                                        ___memrchr 2FA4  
                                                __size_of___xxtofl 01F8  
                                              __size_of_init_PORTS 0028  
                                              __size_of_init_USART 0040  
                                            __end_of_start_up_menu 2330  
                                                        _atoi$1386 0019  
                                                        _atoi$1387 001D  
                                                        _atoi$1388 001B  
                                                  Z_axis@direction 0010  
                                                __size_of_ms_delay 005C  
                                                        __pintcode 0008  
                                                    __pmediumconst 7D50  
                                                         ?___fladd 000A  
                                                         ?___fldiv 0018  
                                                         ?___flneg 000A  
                                                         ?___flmul 000A  
                                                         ?___flsub 001A  
                                                         ?___fltol 0057  
                                                         ?_Tweezer 0001  
                                                         ?_Twister 0001  
                                                   Rx_char_USART@i 0008  
                                        __size_of_fetch_parameters 0138  
                                           __size_of_Rx_char_USART 0192  
                                                print_string@strng 000A  
                                                         ?_isdigit 000A  
                                                         ?_memmove 000E  
                                                         ?_isspace 000A  
                                              __end_of_init_Timers 339E  
                                                 _remove_component 2802  
                                                   _Fosc@main$F784 7D5D  
                                                       ?___memrchr 000E  
                                                        _new_TMR1H 00D1  
                                                        _new_TMR1L 00D0  
                                                         ?_strncat 000E  
                                                         ?_strrchr 0018  
                                                _component_present 0073  
                                                        _input_str 00D2  
                                                   ___wmul@product 000E  
                                                         _LATCbits 000F8B  
                                         __size_of_change_sequence 0098  
                                                         _PIE1bits 000F9D  
                                            __end_of_add_component 1E00  
                                                         _PIR1bits 000F9E  
                                                         i2u470_40 0064  
                                                         i2u470_41 005E  
                                                         i2u471_40 0086  
                                                         i2u471_41 0080  
                                                         i2u480_40 0182  
                                                         i2u472_40 00B4  
                                                         i2u480_41 017C  
                                                         i2u472_41 00AE  
                                                         i2u473_40 00D2  
                                                         i2u473_41 00CC  
                                                         i2u474_40 00E4  
                                                         i2u474_41 00DE  
                                                         i2u475_40 0104  
                                                         i2u467_40 0024  
                                                         i2u475_41 00FE  
                                                         i2u467_41 001E  
                                                         i2u476_40 0116  
                                                         i2u468_40 0036  
                                                         i2u476_41 0110  
                                                         i2u468_41 0030  
                                                         i2u477_40 0130  
                                                         i2u469_40 0052  
                                                         i2u477_41 012A  
                                                         i2u469_41 004C  
                                                         i2u478_40 0142  
                                                         i2u478_41 013C  
                                                         i2u479_40 0170  
                                                         i2u479_41 016A  
                                                    ??_set_new_pos 0002  
                                             __end_of_print_string 2E86  
                                                        _testarray 0080  
                                                ___wmul@multiplier 000A  
                                           __end_of_Fosc@main$F784 7D61  
                                                     _isspace$1404 0010  
                                                      _INTCON3bits 000FF0  
                                                        copy_data0 31AC  
                                                         _X_Pick_D 00AE  
                                                    _Rx_char_USART 0008  
                                                         _Y_Pick_D 00AC  
                                                       roundf@F528 009E  
                                                         __Hrparam 0000  
                                                     ??_init_PORTS 000A  
                                                     ??_init_USART 005D  
                                                         __Lrparam 0000  
                                                        memmove@d1 000E  
                                                        memmove@s1 0010  
                                                 __size_of___fladd 05A8  
                                                 __size_of___fldiv 0432  
                                                 __size_of___flneg 0042  
                                                 __size_of___flmul 04A4  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 0138  
                                                 __size_of_Tweezer 006C  
                                                 __size_of_Twister 00E0  
                                                      _init_Timers 3374  
                                              __end_of_set_new_pos 341A  
                                                        ms_delay@i 000C  
                                                        ms_delay@j 000E  
                                                         ___xxtofl 1E00  
                                                   _pick_and_place 019E  
                                                 __size_of_isdigit 0042  
                                                 __size_of_memmove 00FA  
                                                      ??___memrchr 0014  
                                                 __size_of_isspace 0060  
                                                         __ptext10 13E6  
                                                         __ptext11 290C  
                                                         __ptext20 31DE  
                                                         __ptext12 2A0C  
                                                         __ptext21 2DE6  
                                                         __ptext13 2B0C  
                                                         __ptext30 099A  
                                                         __ptext22 1FF8  
                                                         __ptext14 2D06  
                                                         __ptext31 3262  
                                                         __ptext23 3092  
                                                         __ptext15 30F2  
                                                         __ptext32 0F42  
                                                         __ptext24 3220  
                                                         __ptext16 3026  
                                                         __ptext33 26DA  
                                                         __ptext25 334A  
                                                         __ptext17 2E86  
                                                         __ptext34 25A2  
                                                         __ptext26 33C6  
                                                         __ptext18 1BFE  
                                                         __ptext35 3374  
                                                         __ptext27 32A4  
                                                         __ptext19 2F1E  
                                                         __ptext36 339E  
                                                         __ptext28 1818  
                                                         __ptext29 314E  
                                                         __ptext38 3406  
                                               __end_of_init_PORTS 33C6  
                                               __end_of_init_USART 32E4  
                                                 __size_of_strncat 0086  
                                                 __size_of_strrchr 003A  
                                                   ?_Rx_char_USART 0001  
                                                    __size_of_atoi 01BE  
                                                    __size_of_main 002C  
                                                         _ms_delay 30F2  
                                                         isa$xinst 000000  
                                                         _sequence 00DC  
                                         __size_of_init_interrupts 0020  
                                                ??_change_sequence 0010  
                                                         int$flags 0075  
                                                         _rotation 00BA  
                                                 _fetch_parameters 246A  
                                           __end_of_pick_and_place 099A  
                                                       _INTCONbits 000FF2  
                                           return_to_initial@i_921 0014  
                                           return_to_initial@i_922 0016  
                                           return_to_initial@i_923 0018  
                                                         isdigit@c 000A  
                                                         memmove@d 0016  
                                                         memmove@n 0012  
                                                         memmove@s 0018  
                                                         intlevel2 341A  
                                                         isspace@c 000A  
                                                   _displacement_X 00BE  
                                                   _displacement_Y 00BC  
                                            __size_of_print_string 00A0  
                                         __end_of_remove_component 290C  
                                                      _set_new_pos 3406  
                                           pick_and_place@Componnt 0100  
                                                  ?_pick_and_place 0001  
                                                         strncat@d 000E  
                                                         strncat@n 0012  
                                                         strncat@s 0010  
                                                         strrchr@c 001A  
                                                         strrchr@s 0018  
                                                    ___fladd@signs 0016  
                                                  ??_Rx_char_USART 0003  
                                                     _print_string 2DE6  
                                                     ___fladd@aexp 0017  
                                                     ___fladd@bexp 0018  
                                        add_component@add_componnt 0020  
                                                   start_up_menu@i 0042  
                                                      _roundf$1660 004B  
                                                      _roundf$1661 0045  
