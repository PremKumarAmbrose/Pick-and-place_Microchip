

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 26 00:07:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F452 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  0031E4                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _State
    98  0031E4  30                 	db	48
    99                           
   100                           	psect	idataBANK0
   101  0031B4                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _Tosc@main$F497
   105  0031B4  37BD               	dw	14269
   106  0031B6  3486               	dw	13446
   107                           
   108                           ;initializer for _Tosc
   109  0031B8  37BD               	dw	14269
   110  0031BA  3486               	dw	13446
   111                           
   112                           ;initializer for add_component@F3131
   113  0031BC  20                 	db	32
   114  0031BD  00                 	db	0
   115                           
   116                           ;initializer for _lenth_of_array
   117  0031BE  001E               	dw	30
   118                           
   119                           ;initializer for _input_str
   120  0031C0  20                 	db	32
   121  0031C1  00                 	db	0
   122  0031C2  00                 	db	0
   123  0031C3  00                 	db	0
   124  0031C4  00                 	db	0
   125  0031C5  00                 	db	0
   126  0031C6  00                 	db	0
   127  0031C7  00                 	db	0
   128  0031C8  00                 	db	0
   129  0031C9  00                 	db	0
   130                           
   131                           ;initializer for _sequence
   132  0031CA  43                 	db	67
   133  0031CB  41                 	db	65
   134  0031CC  42                 	db	66
   135  0031CD  00                 	db	0
   136                           
   137                           	psect	mediumconst
   138  007D78                     __pmediumconst:
   139                           	callstack 0
   140  007D78  00                 	db	0
   141  007D79  0000               	dw	0
   142  007D7B  4B00               	dw	19200
   143  007D7D                     __end_of_toint:
   144                           	callstack 0
   145  007D7D  0000               	dw	0
   146  007D7F  4616               	dw	17942
   147  007D81                     __end_of_desired_BaudRate@main$F498:
   148                           	callstack 0
   149  007D81  0000               	dw	0
   150  007D83  4616               	dw	17942
   151  007D85                     __end_of_desired_BaudRate:
   152                           	callstack 0
   153  007D85  2400               	dw	9216
   154  007D87  4A74               	dw	19060
   155  007D89                     __end_of_Fosc@main$F496:
   156                           	callstack 0
   157  007D89  2400               	dw	9216
   158  007D8B  4A74               	dw	19060
   159  007D8D                     __end_of_Fosc:
   160                           	callstack 0
   161  007D8D                     STR_1:
   162  007D8D  0A                 	db	10
   163  007D8E  0A                 	db	10
   164  007D8F  31                 	db	49	;'1'
   165  007D90  2E                 	db	46
   166  007D91  20                 	db	32
   167  007D92  53                 	db	83	;'S'
   168  007D93  74                 	db	116	;'t'
   169  007D94  61                 	db	97	;'a'
   170  007D95  72                 	db	114	;'r'
   171  007D96  74                 	db	116	;'t'
   172  007D97  20                 	db	32
   173  007D98  53                 	db	83	;'S'
   174  007D99  65                 	db	101	;'e'
   175  007D9A  71                 	db	113	;'q'
   176  007D9B  75                 	db	117	;'u'
   177  007D9C  65                 	db	101	;'e'
   178  007D9D  6E                 	db	110	;'n'
   179  007D9E  63                 	db	99	;'c'
   180  007D9F  65                 	db	101	;'e'
   181  007DA0  0A                 	db	10
   182  007DA1  32                 	db	50	;'2'
   183  007DA2  2E                 	db	46
   184  007DA3  20                 	db	32
   185  007DA4  43                 	db	67	;'C'
   186  007DA5  68                 	db	104	;'h'
   187  007DA6  61                 	db	97	;'a'
   188  007DA7  6E                 	db	110	;'n'
   189  007DA8  67                 	db	103	;'g'
   190  007DA9  65                 	db	101	;'e'
   191  007DAA  20                 	db	32
   192  007DAB  73                 	db	115	;'s'
   193  007DAC  65                 	db	101	;'e'
   194  007DAD  71                 	db	113	;'q'
   195  007DAE  75                 	db	117	;'u'
   196  007DAF  65                 	db	101	;'e'
   197  007DB0  6E                 	db	110	;'n'
   198  007DB1  63                 	db	99	;'c'
   199  007DB2  65                 	db	101	;'e'
   200  007DB3  0A                 	db	10
   201  007DB4  33                 	db	51	;'3'
   202  007DB5  2E                 	db	46
   203  007DB6  20                 	db	32
   204  007DB7  41                 	db	65	;'A'
   205  007DB8  64                 	db	100	;'d'
   206  007DB9  64                 	db	100	;'d'
   207  007DBA  20                 	db	32
   208  007DBB  6E                 	db	110	;'n'
   209  007DBC  65                 	db	101	;'e'
   210  007DBD  77                 	db	119	;'w'
   211  007DBE  20                 	db	32
   212  007DBF  63                 	db	99	;'c'
   213  007DC0  6F                 	db	111	;'o'
   214  007DC1  6D                 	db	109	;'m'
   215  007DC2  70                 	db	112	;'p'
   216  007DC3  6F                 	db	111	;'o'
   217  007DC4  6E                 	db	110	;'n'
   218  007DC5  65                 	db	101	;'e'
   219  007DC6  6E                 	db	110	;'n'
   220  007DC7  74                 	db	116	;'t'
   221  007DC8  0A                 	db	10
   222  007DC9  34                 	db	52	;'4'
   223  007DCA  2E                 	db	46
   224  007DCB  20                 	db	32
   225  007DCC  52                 	db	82	;'R'
   226  007DCD  65                 	db	101	;'e'
   227  007DCE  6D                 	db	109	;'m'
   228  007DCF  6F                 	db	111	;'o'
   229  007DD0  76                 	db	118	;'v'
   230  007DD1  65                 	db	101	;'e'
   231  007DD2  20                 	db	32
   232  007DD3  61                 	db	97	;'a'
   233  007DD4  20                 	db	32
   234  007DD5  63                 	db	99	;'c'
   235  007DD6  6F                 	db	111	;'o'
   236  007DD7  6D                 	db	109	;'m'
   237  007DD8  70                 	db	112	;'p'
   238  007DD9  6F                 	db	111	;'o'
   239  007DDA  6E                 	db	110	;'n'
   240  007DDB  65                 	db	101	;'e'
   241  007DDC  6E                 	db	110	;'n'
   242  007DDD  74                 	db	116	;'t'
   243  007DDE  00                 	db	0
   244  007DDF                     STR_17:
   245  007DDF  0A                 	db	10
   246  007DE0  63                 	db	99	;'c'
   247  007DE1  6F                 	db	111	;'o'
   248  007DE2  6D                 	db	109	;'m'
   249  007DE3  70                 	db	112	;'p'
   250  007DE4  6F                 	db	111	;'o'
   251  007DE5  6E                 	db	110	;'n'
   252  007DE6  65                 	db	101	;'e'
   253  007DE7  6E                 	db	110	;'n'
   254  007DE8  74                 	db	116	;'t'
   255  007DE9  20                 	db	32
   256  007DEA  69                 	db	105	;'i'
   257  007DEB  73                 	db	115	;'s'
   258  007DEC  20                 	db	32
   259  007DED  6E                 	db	110	;'n'
   260  007DEE  6F                 	db	111	;'o'
   261  007DEF  74                 	db	116	;'t'
   262  007DF0  20                 	db	32
   263  007DF1  69                 	db	105	;'i'
   264  007DF2  6E                 	db	110	;'n'
   265  007DF3  20                 	db	32
   266  007DF4  74                 	db	116	;'t'
   267  007DF5  68                 	db	104	;'h'
   268  007DF6  65                 	db	101	;'e'
   269  007DF7  20                 	db	32
   270  007DF8  73                 	db	115	;'s'
   271  007DF9  65                 	db	101	;'e'
   272  007DFA  71                 	db	113	;'q'
   273  007DFB  75                 	db	117	;'u'
   274  007DFC  65                 	db	101	;'e'
   275  007DFD  6E                 	db	110	;'n'
   276  007DFE  63                 	db	99	;'c'
   277  007DFF  65                 	db	101	;'e'
   278  007E00  2E                 	db	46
   279  007E01  20                 	db	32
   280  007E02  54                 	db	84	;'T'
   281  007E03  72                 	db	114	;'r'
   282  007E04  79                 	db	121	;'y'
   283  007E05  20                 	db	32
   284  007E06  73                 	db	115	;'s'
   285  007E07  65                 	db	101	;'e'
   286  007E08  6C                 	db	108	;'l'
   287  007E09  65                 	db	101	;'e'
   288  007E0A  63                 	db	99	;'c'
   289  007E0B  74                 	db	116	;'t'
   290  007E0C  69                 	db	105	;'i'
   291  007E0D  6E                 	db	110	;'n'
   292  007E0E  67                 	db	103	;'g'
   293  007E0F  20                 	db	32
   294  007E10  61                 	db	97	;'a'
   295  007E11  6E                 	db	110	;'n'
   296  007E12  6F                 	db	111	;'o'
   297  007E13  74                 	db	116	;'t'
   298  007E14  68                 	db	104	;'h'
   299  007E15  65                 	db	101	;'e'
   300  007E16  72                 	db	114	;'r'
   301  007E17  20                 	db	32
   302  007E18  63                 	db	99	;'c'
   303  007E19  6F                 	db	111	;'o'
   304  007E1A  6D                 	db	109	;'m'
   305  007E1B  70                 	db	112	;'p'
   306  007E1C  6F                 	db	111	;'o'
   307  007E1D  6E                 	db	110	;'n'
   308  007E1E  65                 	db	101	;'e'
   309  007E1F  6E                 	db	110	;'n'
   310  007E20  74                 	db	116	;'t'
   311  007E21  3A                 	db	58	;':'
   312  007E22  20                 	db	32
   313  007E23  0A                 	db	10
   314  007E24  00                 	db	0
   315  007E25                     STR_15:
   316  007E25  0A                 	db	10
   317  007E26  57                 	db	87	;'W'
   318  007E27  68                 	db	104	;'h'
   319  007E28  69                 	db	105	;'i'
   320  007E29  63                 	db	99	;'c'
   321  007E2A  68                 	db	104	;'h'
   322  007E2B  20                 	db	32
   323  007E2C  63                 	db	99	;'c'
   324  007E2D  6F                 	db	111	;'o'
   325  007E2E  6D                 	db	109	;'m'
   326  007E2F  70                 	db	112	;'p'
   327  007E30  6F                 	db	111	;'o'
   328  007E31  6E                 	db	110	;'n'
   329  007E32  65                 	db	101	;'e'
   330  007E33  6E                 	db	110	;'n'
   331  007E34  74                 	db	116	;'t'
   332  007E35  20                 	db	32
   333  007E36  77                 	db	119	;'w'
   334  007E37  6F                 	db	111	;'o'
   335  007E38  75                 	db	117	;'u'
   336  007E39  6C                 	db	108	;'l'
   337  007E3A  64                 	db	100	;'d'
   338  007E3B  20                 	db	32
   339  007E3C  79                 	db	121	;'y'
   340  007E3D  6F                 	db	111	;'o'
   341  007E3E  75                 	db	117	;'u'
   342  007E3F  20                 	db	32
   343  007E40  6C                 	db	108	;'l'
   344  007E41  69                 	db	105	;'i'
   345  007E42  6B                 	db	107	;'k'
   346  007E43  65                 	db	101	;'e'
   347  007E44  20                 	db	32
   348  007E45  74                 	db	116	;'t'
   349  007E46  6F                 	db	111	;'o'
   350  007E47  20                 	db	32
   351  007E48  72                 	db	114	;'r'
   352  007E49  65                 	db	101	;'e'
   353  007E4A  6D                 	db	109	;'m'
   354  007E4B  6F                 	db	111	;'o'
   355  007E4C  76                 	db	118	;'v'
   356  007E4D  65                 	db	101	;'e'
   357  007E4E  20                 	db	32
   358  007E4F  66                 	db	102	;'f'
   359  007E50  72                 	db	114	;'r'
   360  007E51  6F                 	db	111	;'o'
   361  007E52  6D                 	db	109	;'m'
   362  007E53  20                 	db	32
   363  007E54  74                 	db	116	;'t'
   364  007E55  68                 	db	104	;'h'
   365  007E56  65                 	db	101	;'e'
   366  007E57  20                 	db	32
   367  007E58  20                 	db	32
   368  007E59  73                 	db	115	;'s'
   369  007E5A  65                 	db	101	;'e'
   370  007E5B  71                 	db	113	;'q'
   371  007E5C  75                 	db	117	;'u'
   372  007E5D  65                 	db	101	;'e'
   373  007E5E  6E                 	db	110	;'n'
   374  007E5F  63                 	db	99	;'c'
   375  007E60  65                 	db	101	;'e'
   376  007E61  3F                 	db	63	;'?'
   377  007E62  0A                 	db	10
   378  007E63  00                 	db	0
   379  007E64                     STR_7:
   380  007E64  0A                 	db	10
   381  007E65  45                 	db	69	;'E'
   382  007E66  6E                 	db	110	;'n'
   383  007E67  74                 	db	116	;'t'
   384  007E68  65                 	db	101	;'e'
   385  007E69  72                 	db	114	;'r'
   386  007E6A  20                 	db	32
   387  007E6B  74                 	db	116	;'t'
   388  007E6C  68                 	db	104	;'h'
   389  007E6D  65                 	db	101	;'e'
   390  007E6E  20                 	db	32
   391  007E6F  63                 	db	99	;'c'
   392  007E70  6F                 	db	111	;'o'
   393  007E71  6D                 	db	109	;'m'
   394  007E72  70                 	db	112	;'p'
   395  007E73  6F                 	db	111	;'o'
   396  007E74  6E                 	db	110	;'n'
   397  007E75  65                 	db	101	;'e'
   398  007E76  6E                 	db	110	;'n'
   399  007E77  74                 	db	116	;'t'
   400  007E78  20                 	db	32
   401  007E79  79                 	db	121	;'y'
   402  007E7A  6F                 	db	111	;'o'
   403  007E7B  75                 	db	117	;'u'
   404  007E7C  20                 	db	32
   405  007E7D  77                 	db	119	;'w'
   406  007E7E  61                 	db	97	;'a'
   407  007E7F  6E                 	db	110	;'n'
   408  007E80  74                 	db	116	;'t'
   409  007E81  20                 	db	32
   410  007E82  74                 	db	116	;'t'
   411  007E83  6F                 	db	111	;'o'
   412  007E84  20                 	db	32
   413  007E85  61                 	db	97	;'a'
   414  007E86  64                 	db	100	;'d'
   415  007E87  64                 	db	100	;'d'
   416  007E88  3A                 	db	58	;':'
   417  007E89  20                 	db	32
   418  007E8A  41                 	db	65	;'A'
   419  007E8B  2C                 	db	44
   420  007E8C  20                 	db	32
   421  007E8D  42                 	db	66	;'B'
   422  007E8E  2C                 	db	44
   423  007E8F  20                 	db	32
   424  007E90  43                 	db	67	;'C'
   425  007E91  20                 	db	32
   426  007E92  6F                 	db	111	;'o'
   427  007E93  72                 	db	114	;'r'
   428  007E94  20                 	db	32
   429  007E95  44                 	db	68	;'D'
   430  007E96  3F                 	db	63	;'?'
   431  007E97  00                 	db	0
   432  007E98                     STR_5:
   433  007E98  0A                 	db	10
   434  007E99  50                 	db	80	;'P'
   435  007E9A  6C                 	db	108	;'l'
   436  007E9B  65                 	db	101	;'e'
   437  007E9C  61                 	db	97	;'a'
   438  007E9D  73                 	db	115	;'s'
   439  007E9E  65                 	db	101	;'e'
   440  007E9F  20                 	db	32
   441  007EA0  67                 	db	103	;'g'
   442  007EA1  69                 	db	105	;'i'
   443  007EA2  76                 	db	118	;'v'
   444  007EA3  65                 	db	101	;'e'
   445  007EA4  20                 	db	32
   446  007EA5  74                 	db	116	;'t'
   447  007EA6  68                 	db	104	;'h'
   448  007EA7  65                 	db	101	;'e'
   449  007EA8  20                 	db	32
   450  007EA9  6E                 	db	110	;'n'
   451  007EAA  65                 	db	101	;'e'
   452  007EAB  77                 	db	119	;'w'
   453  007EAC  20                 	db	32
   454  007EAD  73                 	db	115	;'s'
   455  007EAE  65                 	db	101	;'e'
   456  007EAF  71                 	db	113	;'q'
   457  007EB0  75                 	db	117	;'u'
   458  007EB1  65                 	db	101	;'e'
   459  007EB2  6E                 	db	110	;'n'
   460  007EB3  63                 	db	99	;'c'
   461  007EB4  65                 	db	101	;'e'
   462  007EB5  20                 	db	32
   463  007EB6  61                 	db	97	;'a'
   464  007EB7  73                 	db	115	;'s'
   465  007EB8  20                 	db	32
   466  007EB9  69                 	db	105	;'i'
   467  007EBA  6E                 	db	110	;'n'
   468  007EBB  70                 	db	112	;'p'
   469  007EBC  75                 	db	117	;'u'
   470  007EBD  74                 	db	116	;'t'
   471  007EBE  0D                 	db	13
   472  007EBF  00                 	db	0
   473  007EC0                     STR_3:
   474  007EC0  0A                 	db	10
   475  007EC1  45                 	db	69	;'E'
   476  007EC2  6E                 	db	110	;'n'
   477  007EC3  74                 	db	116	;'t'
   478  007EC4  65                 	db	101	;'e'
   479  007EC5  72                 	db	114	;'r'
   480  007EC6  20                 	db	32
   481  007EC7  27                 	db	39
   482  007EC8  51                 	db	81	;'Q'
   483  007EC9  27                 	db	39
   484  007ECA  20                 	db	32
   485  007ECB  74                 	db	116	;'t'
   486  007ECC  6F                 	db	111	;'o'
   487  007ECD  20                 	db	32
   488  007ECE  65                 	db	101	;'e'
   489  007ECF  78                 	db	120	;'x'
   490  007ED0  69                 	db	105	;'i'
   491  007ED1  74                 	db	116	;'t'
   492  007ED2  20                 	db	32
   493  007ED3  74                 	db	116	;'t'
   494  007ED4  6F                 	db	111	;'o'
   495  007ED5  20                 	db	32
   496  007ED6  4D                 	db	77	;'M'
   497  007ED7  41                 	db	65	;'A'
   498  007ED8  49                 	db	73	;'I'
   499  007ED9  4E                 	db	78	;'N'
   500  007EDA  20                 	db	32
   501  007EDB  4D                 	db	77	;'M'
   502  007EDC  45                 	db	69	;'E'
   503  007EDD  4E                 	db	78	;'N'
   504  007EDE  55                 	db	85	;'U'
   505  007EDF  00                 	db	0
   506  007EE0                     STR_13:
   507  007EE0  0A                 	db	10
   508  007EE1  45                 	db	69	;'E'
   509  007EE2  6E                 	db	110	;'n'
   510  007EE3  74                 	db	116	;'t'
   511  007EE4  65                 	db	101	;'e'
   512  007EE5  72                 	db	114	;'r'
   513  007EE6  20                 	db	32
   514  007EE7  74                 	db	116	;'t'
   515  007EE8  68                 	db	104	;'h'
   516  007EE9  65                 	db	101	;'e'
   517  007EEA  20                 	db	32
   518  007EEB  70                 	db	112	;'p'
   519  007EEC  6C                 	db	108	;'l'
   520  007EED  61                 	db	97	;'a'
   521  007EEE  63                 	db	99	;'c'
   522  007EEF  65                 	db	101	;'e'
   523  007EF0  20                 	db	32
   524  007EF1  6F                 	db	111	;'o'
   525  007EF2  72                 	db	114	;'r'
   526  007EF3  69                 	db	105	;'i'
   527  007EF4  65                 	db	101	;'e'
   528  007EF5  6E                 	db	110	;'n'
   529  007EF6  74                 	db	116	;'t'
   530  007EF7  61                 	db	97	;'a'
   531  007EF8  74                 	db	116	;'t'
   532  007EF9  69                 	db	105	;'i'
   533  007EFA  6F                 	db	111	;'o'
   534  007EFB  6E                 	db	110	;'n'
   535  007EFC  3A                 	db	58	;':'
   536  007EFD  00                 	db	0
   537  007EFE                     STR_11:
   538  007EFE  0A                 	db	10
   539  007EFF  45                 	db	69	;'E'
   540  007F00  6E                 	db	110	;'n'
   541  007F01  74                 	db	116	;'t'
   542  007F02  65                 	db	101	;'e'
   543  007F03  72                 	db	114	;'r'
   544  007F04  20                 	db	32
   545  007F05  74                 	db	116	;'t'
   546  007F06  68                 	db	104	;'h'
   547  007F07  65                 	db	101	;'e'
   548  007F08  20                 	db	32
   549  007F09  70                 	db	112	;'p'
   550  007F0A  6C                 	db	108	;'l'
   551  007F0B  61                 	db	97	;'a'
   552  007F0C  63                 	db	99	;'c'
   553  007F0D  65                 	db	101	;'e'
   554  007F0E  20                 	db	32
   555  007F0F  70                 	db	112	;'p'
   556  007F10  6F                 	db	111	;'o'
   557  007F11  73                 	db	115	;'s'
   558  007F12  69                 	db	105	;'i'
   559  007F13  74                 	db	116	;'t'
   560  007F14  69                 	db	105	;'i'
   561  007F15  6F                 	db	111	;'o'
   562  007F16  6E                 	db	110	;'n'
   563  007F17  20                 	db	32
   564  007F18  58                 	db	88	;'X'
   565  007F19  3A                 	db	58	;':'
   566  007F1A  00                 	db	0
   567  007F1B                     STR_12:
   568  007F1B  0A                 	db	10
   569  007F1C  45                 	db	69	;'E'
   570  007F1D  6E                 	db	110	;'n'
   571  007F1E  74                 	db	116	;'t'
   572  007F1F  65                 	db	101	;'e'
   573  007F20  72                 	db	114	;'r'
   574  007F21  20                 	db	32
   575  007F22  74                 	db	116	;'t'
   576  007F23  68                 	db	104	;'h'
   577  007F24  65                 	db	101	;'e'
   578  007F25  20                 	db	32
   579  007F26  70                 	db	112	;'p'
   580  007F27  6C                 	db	108	;'l'
   581  007F28  61                 	db	97	;'a'
   582  007F29  63                 	db	99	;'c'
   583  007F2A  65                 	db	101	;'e'
   584  007F2B  20                 	db	32
   585  007F2C  70                 	db	112	;'p'
   586  007F2D  6F                 	db	111	;'o'
   587  007F2E  73                 	db	115	;'s'
   588  007F2F  69                 	db	105	;'i'
   589  007F30  74                 	db	116	;'t'
   590  007F31  69                 	db	105	;'i'
   591  007F32  6F                 	db	111	;'o'
   592  007F33  6E                 	db	110	;'n'
   593  007F34  20                 	db	32
   594  007F35  59                 	db	89	;'Y'
   595  007F36  3A                 	db	58	;':'
   596  007F37  00                 	db	0
   597  007F38                     STR_10:
   598  007F38  0A                 	db	10
   599  007F39  45                 	db	69	;'E'
   600  007F3A  6E                 	db	110	;'n'
   601  007F3B  74                 	db	116	;'t'
   602  007F3C  65                 	db	101	;'e'
   603  007F3D  72                 	db	114	;'r'
   604  007F3E  20                 	db	32
   605  007F3F  74                 	db	116	;'t'
   606  007F40  68                 	db	104	;'h'
   607  007F41  65                 	db	101	;'e'
   608  007F42  20                 	db	32
   609  007F43  70                 	db	112	;'p'
   610  007F44  69                 	db	105	;'i'
   611  007F45  63                 	db	99	;'c'
   612  007F46  6B                 	db	107	;'k'
   613  007F47  20                 	db	32
   614  007F48  6F                 	db	111	;'o'
   615  007F49  72                 	db	114	;'r'
   616  007F4A  69                 	db	105	;'i'
   617  007F4B  65                 	db	101	;'e'
   618  007F4C  6E                 	db	110	;'n'
   619  007F4D  74                 	db	116	;'t'
   620  007F4E  61                 	db	97	;'a'
   621  007F4F  74                 	db	116	;'t'
   622  007F50  69                 	db	105	;'i'
   623  007F51  6F                 	db	111	;'o'
   624  007F52  6E                 	db	110	;'n'
   625  007F53  3A                 	db	58	;':'
   626  007F54  00                 	db	0
   627  007F55                     STR_8:
   628  007F55  0A                 	db	10
   629  007F56  45                 	db	69	;'E'
   630  007F57  6E                 	db	110	;'n'
   631  007F58  74                 	db	116	;'t'
   632  007F59  65                 	db	101	;'e'
   633  007F5A  72                 	db	114	;'r'
   634  007F5B  20                 	db	32
   635  007F5C  74                 	db	116	;'t'
   636  007F5D  68                 	db	104	;'h'
   637  007F5E  65                 	db	101	;'e'
   638  007F5F  20                 	db	32
   639  007F60  70                 	db	112	;'p'
   640  007F61  69                 	db	105	;'i'
   641  007F62  63                 	db	99	;'c'
   642  007F63  6B                 	db	107	;'k'
   643  007F64  20                 	db	32
   644  007F65  70                 	db	112	;'p'
   645  007F66  6F                 	db	111	;'o'
   646  007F67  73                 	db	115	;'s'
   647  007F68  69                 	db	105	;'i'
   648  007F69  74                 	db	116	;'t'
   649  007F6A  69                 	db	105	;'i'
   650  007F6B  6F                 	db	111	;'o'
   651  007F6C  6E                 	db	110	;'n'
   652  007F6D  20                 	db	32
   653  007F6E  58                 	db	88	;'X'
   654  007F6F  3A                 	db	58	;':'
   655  007F70  00                 	db	0
   656  007F71                     STR_9:
   657  007F71  0A                 	db	10
   658  007F72  45                 	db	69	;'E'
   659  007F73  6E                 	db	110	;'n'
   660  007F74  74                 	db	116	;'t'
   661  007F75  65                 	db	101	;'e'
   662  007F76  72                 	db	114	;'r'
   663  007F77  20                 	db	32
   664  007F78  74                 	db	116	;'t'
   665  007F79  68                 	db	104	;'h'
   666  007F7A  65                 	db	101	;'e'
   667  007F7B  20                 	db	32
   668  007F7C  70                 	db	112	;'p'
   669  007F7D  69                 	db	105	;'i'
   670  007F7E  63                 	db	99	;'c'
   671  007F7F  6B                 	db	107	;'k'
   672  007F80  20                 	db	32
   673  007F81  70                 	db	112	;'p'
   674  007F82  6F                 	db	111	;'o'
   675  007F83  73                 	db	115	;'s'
   676  007F84  69                 	db	105	;'i'
   677  007F85  74                 	db	116	;'t'
   678  007F86  69                 	db	105	;'i'
   679  007F87  6F                 	db	111	;'o'
   680  007F88  6E                 	db	110	;'n'
   681  007F89  20                 	db	32
   682  007F8A  59                 	db	89	;'Y'
   683  007F8B  3A                 	db	58	;':'
   684  007F8C  00                 	db	0
   685  007F8D                     STR_4:
   686  007F8D  0A                 	db	10
   687  007F8E  54                 	db	84	;'T'
   688  007F8F  68                 	db	104	;'h'
   689  007F90  65                 	db	101	;'e'
   690  007F91  20                 	db	32
   691  007F92  63                 	db	99	;'c'
   692  007F93  75                 	db	117	;'u'
   693  007F94  72                 	db	114	;'r'
   694  007F95  72                 	db	114	;'r'
   695  007F96  65                 	db	101	;'e'
   696  007F97  6E                 	db	110	;'n'
   697  007F98  74                 	db	116	;'t'
   698  007F99  20                 	db	32
   699  007F9A  73                 	db	115	;'s'
   700  007F9B  65                 	db	101	;'e'
   701  007F9C  71                 	db	113	;'q'
   702  007F9D  75                 	db	117	;'u'
   703  007F9E  65                 	db	101	;'e'
   704  007F9F  6E                 	db	110	;'n'
   705  007FA0  63                 	db	99	;'c'
   706  007FA1  65                 	db	101	;'e'
   707  007FA2  20                 	db	32
   708  007FA3  69                 	db	105	;'i'
   709  007FA4  73                 	db	115	;'s'
   710  007FA5  3A                 	db	58	;':'
   711  007FA6  20                 	db	32
   712  007FA7  00                 	db	0
   713  007FA8                     STR_6:
   714  007FA8  0A                 	db	10
   715  007FA9  54                 	db	84	;'T'
   716  007FAA  68                 	db	104	;'h'
   717  007FAB  65                 	db	101	;'e'
   718  007FAC  20                 	db	32
   719  007FAD  43                 	db	67	;'C'
   720  007FAE  75                 	db	117	;'u'
   721  007FAF  72                 	db	114	;'r'
   722  007FB0  72                 	db	114	;'r'
   723  007FB1  65                 	db	101	;'e'
   724  007FB2  6E                 	db	110	;'n'
   725  007FB3  74                 	db	116	;'t'
   726  007FB4  20                 	db	32
   727  007FB5  73                 	db	115	;'s'
   728  007FB6  65                 	db	101	;'e'
   729  007FB7  71                 	db	113	;'q'
   730  007FB8  75                 	db	117	;'u'
   731  007FB9  65                 	db	101	;'e'
   732  007FBA  6E                 	db	110	;'n'
   733  007FBB  63                 	db	99	;'c'
   734  007FBC  65                 	db	101	;'e'
   735  007FBD  20                 	db	32
   736  007FBE  69                 	db	105	;'i'
   737  007FBF  73                 	db	115	;'s'
   738  007FC0  3A                 	db	58	;':'
   739  007FC1  00                 	db	0
   740  007FC2                     STR_14:
   741  007FC2  0A                 	db	10
   742  007FC3  0A                 	db	10
   743  007FC4  43                 	db	67	;'C'
   744  007FC5  6F                 	db	111	;'o'
   745  007FC6  6D                 	db	109	;'m'
   746  007FC7  70                 	db	112	;'p'
   747  007FC8  6F                 	db	111	;'o'
   748  007FC9  6E                 	db	110	;'n'
   749  007FCA  65                 	db	101	;'e'
   750  007FCB  6E                 	db	110	;'n'
   751  007FCC  74                 	db	116	;'t'
   752  007FCD  20                 	db	32
   753  007FCE  41                 	db	65	;'A'
   754  007FCF  64                 	db	100	;'d'
   755  007FD0  64                 	db	100	;'d'
   756  007FD1  65                 	db	101	;'e'
   757  007FD2  64                 	db	100	;'d'
   758  007FD3  3A                 	db	58	;':'
   759  007FD4  20                 	db	32
   760  007FD5  00                 	db	0
   761  007FD6                     STR_2:
   762  007FD6  0A                 	db	10
   763  007FD7  53                 	db	83	;'S'
   764  007FD8  74                 	db	116	;'t'
   765  007FD9  61                 	db	97	;'a'
   766  007FDA  72                 	db	114	;'r'
   767  007FDB  74                 	db	116	;'t'
   768  007FDC  69                 	db	105	;'i'
   769  007FDD  6E                 	db	110	;'n'
   770  007FDE  67                 	db	103	;'g'
   771  007FDF  20                 	db	32
   772  007FE0  73                 	db	115	;'s'
   773  007FE1  65                 	db	101	;'e'
   774  007FE2  71                 	db	113	;'q'
   775  007FE3  75                 	db	117	;'u'
   776  007FE4  65                 	db	101	;'e'
   777  007FE5  6E                 	db	110	;'n'
   778  007FE6  63                 	db	99	;'c'
   779  007FE7  65                 	db	101	;'e'
   780  007FE8  3A                 	db	58	;':'
   781  007FE9  00                 	db	0
   782  007FEA                     STR_16:
   783  007FEA  0A                 	db	10
   784  007FEB  63                 	db	99	;'c'
   785  007FEC  6F                 	db	111	;'o'
   786  007FED  6D                 	db	109	;'m'
   787  007FEE  70                 	db	112	;'p'
   788  007FEF  6F                 	db	111	;'o'
   789  007FF0  6E                 	db	110	;'n'
   790  007FF1  65                 	db	101	;'e'
   791  007FF2  6E                 	db	110	;'n'
   792  007FF3  74                 	db	116	;'t'
   793  007FF4  20                 	db	32
   794  007FF5  72                 	db	114	;'r'
   795  007FF6  65                 	db	101	;'e'
   796  007FF7  6D                 	db	109	;'m'
   797  007FF8  6F                 	db	111	;'o'
   798  007FF9  76                 	db	118	;'v'
   799  007FFA  65                 	db	101	;'e'
   800  007FFB  64                 	db	100	;'d'
   801  007FFC  00                 	db	0
   802  007FFD                     STR_18:
   803  007FFD  51                 	db	81	;'Q'
   804  007FFE  00                 	db	0
   805  007FFF  00                 	db	0	; dummy byte at the end
   806  0000                     
   807                           	psect	nvCOMRAM
   808  000076                     __pnvCOMRAM:
   809                           	callstack 0
   810  000076                     _New_char_RX:
   811                           	callstack 0
   812  000076                     	ds	1
   813  0000                     _RCREG	set	4014
   814  0000                     _PORTB	set	3969
   815  0000                     _TXREG	set	4013
   816  0000                     _RCSTAbits	set	4011
   817  0000                     _TXSTAbits	set	4012
   818  0000                     _SPBRG	set	4015
   819  0000                     _INTCON2	set	4081
   820  0000                     _INTCONbits	set	4082
   821  0000                     _PIE1bits	set	3997
   822  0000                     _PIR1bits	set	3998
   823  0000                     _TRISCbits	set	3988
   824  0000                     _PORTC	set	3970
   825  0000                     _LATC	set	3979
   826  0000                     _PORTD	set	3971
   827  0000                     _PORTA	set	3968
   828  0000                     _TRISB	set	3987
   829  0000                     _TRISA	set	3986
   830  0000                     _TRISD	set	3989
   831  0000                     _RCIF	set	31989
   832                           
   833                           ; #config settings
   834                           
   835                           	psect	cinit
   836  002F60                     __pcinit:
   837                           	callstack 0
   838  002F60                     start_initialization:
   839                           	callstack 0
   840  002F60                     __initialization:
   841                           	callstack 0
   842                           
   843                           ; Initialize objects allocated to BANK0 (26 bytes)
   844                           ; load TBLPTR registers with __pidataBANK0
   845  002F60  0EB4               	movlw	low __pidataBANK0
   846  002F62  6EF6               	movwf	tblptrl,c
   847  002F64  0E31               	movlw	high __pidataBANK0
   848  002F66  6EF7               	movwf	tblptrh,c
   849  002F68  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   850  002F6A  6EF8               	movwf	tblptru,c
   851  002F6C  EE00  F0DF         	lfsr	0,__pdataBANK0
   852  002F70  EE10 F01A          	lfsr	1,26
   853  002F74                     copy_data0:
   854  002F74  0009               	tblrd		*+
   855  002F76  CFF5 FFEE          	movff	tablat,postinc0
   856  002F7A  50E5               	movf	postdec1,w,c
   857  002F7C  50E1               	movf	fsr1l,w,c
   858  002F7E  E1FA               	bnz	copy_data0
   859                           
   860                           ; Initialize objects allocated to COMRAM (1 bytes)
   861                           ; load TBLPTR registers with __pidataCOMRAM
   862  002F80  0EE4               	movlw	low __pidataCOMRAM
   863  002F82  6EF6               	movwf	tblptrl,c
   864  002F84  0E31               	movlw	high __pidataCOMRAM
   865  002F86  6EF7               	movwf	tblptrh,c
   866  002F88  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   867  002F8A  6EF8               	movwf	tblptru,c
   868  002F8C  0009               	tblrd		*+	;fetch initializer
   869  002F8E  CFF5 F077          	movff	tablat,__pdataCOMRAM
   870                           
   871                           ; Clear objects allocated to BANK0 (62 bytes)
   872  002F92  EE00  F080         	lfsr	0,__pbssBANK0
   873  002F96  0E3E               	movlw	62
   874  002F98                     clear_0:
   875  002F98  6AEE               	clrf	postinc0,c
   876  002F9A  06E8               	decf	wreg,f,c
   877  002F9C  E1FD               	bnz	clear_0
   878                           
   879                           ; Clear objects allocated to COMRAM (25 bytes)
   880  002F9E  EE00  F05D         	lfsr	0,__pbssCOMRAM
   881  002FA2  0E19               	movlw	25
   882  002FA4                     clear_1:
   883  002FA4  6AEE               	clrf	postinc0,c
   884  002FA6  06E8               	decf	wreg,f,c
   885  002FA8  E1FD               	bnz	clear_1
   886  002FAA                     end_of_initialization:
   887                           	callstack 0
   888  002FAA                     __end_of__initialization:
   889                           	callstack 0
   890  002FAA  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   891  002FAC  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   892  002FAE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   893  002FB0  6EF8               	movwf	tblptru,c
   894  002FB2  0100               	movlb	0
   895  002FB4  EFC9  F018         	goto	_main	;jump to C main() function
   896                           
   897                           	psect	bssCOMRAM
   898  00005D                     __pbssCOMRAM:
   899                           	callstack 0
   900  00005D                     _Steps:
   901                           	callstack 0
   902  00005D                     	ds	2
   903  00005F                     _Angle_diff:
   904                           	callstack 0
   905  00005F                     	ds	2
   906  000061                     _Y_diff:
   907                           	callstack 0
   908  000061                     	ds	2
   909  000063                     _X_diff:
   910                           	callstack 0
   911  000063                     	ds	2
   912  000065                     _Place_Angle:
   913                           	callstack 0
   914  000065                     	ds	2
   915  000067                     _Pick_Angle:
   916                           	callstack 0
   917  000067                     	ds	2
   918  000069                     _Y_Place:
   919                           	callstack 0
   920  000069                     	ds	2
   921  00006B                     _Y_Pick:
   922                           	callstack 0
   923  00006B                     	ds	2
   924  00006D                     _X_Place:
   925                           	callstack 0
   926  00006D                     	ds	2
   927  00006F                     _X_Pick:
   928                           	callstack 0
   929  00006F                     	ds	2
   930  000071                     _RX_Char:
   931                           	callstack 0
   932  000071                     	ds	1
   933  000072                     _Rot_dir:
   934                           	callstack 0
   935  000072                     	ds	1
   936  000073                     _Y_dir:
   937                           	callstack 0
   938  000073                     	ds	1
   939  000074                     _X_dir:
   940                           	callstack 0
   941  000074                     	ds	1
   942  000075                     _stop:
   943                           	callstack 0
   944  000075                     	ds	1
   945                           
   946                           	psect	dataCOMRAM
   947  000077                     __pdataCOMRAM:
   948                           	callstack 0
   949  000077                     _State:
   950                           	callstack 0
   951  000077                     	ds	1
   952                           
   953                           	psect	bssBANK0
   954  000080                     __pbssBANK0:
   955                           	callstack 0
   956  000080                     _testarray:
   957                           	callstack 0
   958  000080                     	ds	30
   959  00009E                     roundf@F528:
   960                           	callstack 0
   961  00009E                     	ds	4
   962  0000A2                     _angle_diff:
   963                           	callstack 0
   964  0000A2                     	ds	2
   965  0000A4                     _Place_Angle_D:
   966                           	callstack 0
   967  0000A4                     	ds	2
   968  0000A6                     _Y_Place_D:
   969                           	callstack 0
   970  0000A6                     	ds	2
   971  0000A8                     _X_Place_D:
   972                           	callstack 0
   973  0000A8                     	ds	2
   974  0000AA                     _Pick_Angle_D:
   975                           	callstack 0
   976  0000AA                     	ds	2
   977  0000AC                     _Y_Pick_D:
   978                           	callstack 0
   979  0000AC                     	ds	2
   980  0000AE                     _X_Pick_D:
   981                           	callstack 0
   982  0000AE                     	ds	2
   983  0000B0                     _Step_Angle:
   984                           	callstack 0
   985  0000B0                     	ds	2
   986  0000B2                     _Step_Z:
   987                           	callstack 0
   988  0000B2                     	ds	2
   989  0000B4                     _Step_Y:
   990                           	callstack 0
   991  0000B4                     	ds	2
   992  0000B6                     _Step_X:
   993                           	callstack 0
   994  0000B6                     	ds	2
   995  0000B8                     _rotation:
   996                           	callstack 0
   997  0000B8                     	ds	2
   998  0000BA                     _displacement_Y:
   999                           	callstack 0
  1000  0000BA                     	ds	2
  1001  0000BC                     _displacement_X:
  1002                           	callstack 0
  1003  0000BC                     	ds	2
  1004                           
  1005                           	psect	dataBANK0
  1006  0000DF                     __pdataBANK0:
  1007                           	callstack 0
  1008  0000DF                     	ds	4
  1009  0000E3                     	ds	4
  1010  0000E7                     add_component@F3131:
  1011                           	callstack 0
  1012  0000E7                     	ds	2
  1013  0000E9                     _lenth_of_array:
  1014                           	callstack 0
  1015  0000E9                     	ds	2
  1016  0000EB                     _input_str:
  1017                           	callstack 0
  1018  0000EB                     	ds	10
  1019  0000F5                     _sequence:
  1020                           	callstack 0
  1021  0000F5                     	ds	4
  1022                           
  1023                           	psect	cstackBANK0
  1024  0000BE                     __pcstackBANK0:
  1025                           	callstack 0
  1026  0000BE                     pick_and_place@Componnt:
  1027                           	callstack 0
  1028  0000BE                     ___fltol@sign1:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x0
  1032  0000BE                     	ds	1
  1033  0000BF                     ___fltol@exp1:
  1034                           	callstack 0
  1035  0000BF                     pick_and_place@i:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x1
  1039  0000BF                     	ds	2
  1040  0000C1                     _pick_and_place$594:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x3
  1044  0000C1                     	ds	2
  1045  0000C3                     pick_and_place@i_595:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x5
  1049  0000C3                     	ds	2
  1050  0000C5                     _pick_and_place$597:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x7
  1054  0000C5                     	ds	2
  1055  0000C7                     pick_and_place@i_598:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x9
  1059  0000C7                     	ds	2
  1060  0000C9                     _pick_and_place$600:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0xB
  1064  0000C9                     	ds	2
  1065  0000CB                     pick_and_place@i_601:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0xD
  1069  0000CB                     	ds	2
  1070  0000CD                     pick_and_place@i_603:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0xF
  1074  0000CD                     	ds	2
  1075  0000CF                     pick_and_place@i_604:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x11
  1079  0000CF                     	ds	2
  1080  0000D1                     _pick_and_place$605:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x13
  1084  0000D1                     	ds	2
  1085  0000D3                     pick_and_place@i_606:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x15
  1089  0000D3                     	ds	2
  1090  0000D5                     _pick_and_place$607:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x17
  1094  0000D5                     	ds	2
  1095  0000D7                     pick_and_place@i_608:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x19
  1099  0000D7                     	ds	2
  1100  0000D9                     _pick_and_place$609:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x1B
  1104  0000D9                     	ds	2
  1105  0000DB                     pick_and_place@i_610:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x1D
  1109  0000DB                     	ds	2
  1110  0000DD                     pick_and_place@i_611:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x1F
  1114  0000DD                     	ds	2
  1115                           
  1116                           	psect	cstackCOMRAM
  1117  000001                     __pcstackCOMRAM:
  1118                           	callstack 0
  1119  000001                     ??_Rx_char_USART:
  1120  000001                     
  1121                           ; 2 bytes @ 0x0
  1122  000001                     	ds	5
  1123  000006                     Rx_char_USART@i:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x5
  1127  000006                     	ds	2
  1128  000008                     ?_strlen:
  1129                           	callstack 0
  1130  000008                     ?_isspace:
  1131                           	callstack 0
  1132  000008                     ?_isdigit:
  1133                           	callstack 0
  1134  000008                     ?___wmul:
  1135                           	callstack 0
  1136  000008                     ?___fladd:
  1137                           	callstack 0
  1138  000008                     ?___flmul:
  1139                           	callstack 0
  1140  000008                     ?___flneg:
  1141                           	callstack 0
  1142  000008                     ?___xxtofl:
  1143                           	callstack 0
  1144  000008                     fetch_parameters@Componnt:
  1145                           	callstack 0
  1146  000008                     print_string@strng:
  1147                           	callstack 0
  1148  000008                     ms_delay@val:
  1149                           	callstack 0
  1150  000008                     ___wmul@multiplier:
  1151                           	callstack 0
  1152  000008                     isdigit@c:
  1153                           	callstack 0
  1154  000008                     isspace@c:
  1155                           	callstack 0
  1156  000008                     strlen@s:
  1157                           	callstack 0
  1158  000008                     ___flneg@f1:
  1159                           	callstack 0
  1160  000008                     ___fladd@b:
  1161                           	callstack 0
  1162  000008                     ___flmul@b:
  1163                           	callstack 0
  1164  000008                     ___xxtofl@val:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x7
  1168  000008                     	ds	2
  1169  00000A                     ??_isspace:
  1170  00000A                     ??_isdigit:
  1171  00000A                     ??_print_string:
  1172  00000A                     ms_delay@i:
  1173                           	callstack 0
  1174  00000A                     ___wmul@multiplicand:
  1175                           	callstack 0
  1176  00000A                     strlen@a:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x9
  1180  00000A                     	ds	2
  1181  00000C                     ??___xxtofl:
  1182  00000C                     ?___memrchr:
  1183                           	callstack 0
  1184  00000C                     print_string@i:
  1185                           	callstack 0
  1186  00000C                     ms_delay@j:
  1187                           	callstack 0
  1188  00000C                     ___wmul@product:
  1189                           	callstack 0
  1190  00000C                     memmove@d1:
  1191                           	callstack 0
  1192  00000C                     strncat@d:
  1193                           	callstack 0
  1194  00000C                     ___memrchr@m:
  1195                           	callstack 0
  1196  00000C                     ___fladd@a:
  1197                           	callstack 0
  1198  00000C                     ___flmul@a:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0xB
  1202  00000C                     	ds	2
  1203  00000E                     ??_change_sequence:
  1204  00000E                     X_axis@direction:
  1205                           	callstack 0
  1206  00000E                     Y_axis@direction:
  1207                           	callstack 0
  1208  00000E                     Z_axis@direction:
  1209                           	callstack 0
  1210  00000E                     Twister@direction:
  1211                           	callstack 0
  1212  00000E                     _isspace$1096:
  1213                           	callstack 0
  1214  00000E                     memmove@s1:
  1215                           	callstack 0
  1216  00000E                     strncat@s:
  1217                           	callstack 0
  1218  00000E                     ___memrchr@c:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0xD
  1222  00000E                     	ds	1
  1223  00000F                     ??_return_to_initial:
  1224  00000F                     ?_atoi:
  1225                           	callstack 0
  1226  00000F                     atoi@s:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0xE
  1230  00000F                     	ds	1
  1231  000010                     ??___fladd:
  1232  000010                     ??___flmul:
  1233  000010                     ___xxtofl@sign:
  1234                           	callstack 0
  1235  000010                     return_to_initial@i:
  1236                           	callstack 0
  1237  000010                     memmove@n:
  1238                           	callstack 0
  1239  000010                     strncat@n:
  1240                           	callstack 0
  1241  000010                     ___memrchr@n:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0xF
  1245  000010                     	ds	1
  1246  000011                     ??_atoi:
  1247  000011                     ___xxtofl@exp:
  1248                           	callstack 0
  1249  000011                     change_sequence@i:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x10
  1253  000011                     	ds	1
  1254  000012                     ??_memmove:
  1255  000012                     ??___memrchr:
  1256  000012                     return_to_initial@i_614:
  1257                           	callstack 0
  1258  000012                     ___xxtofl@arg:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x11
  1262  000012                     	ds	2
  1263  000014                     ___fladd@signs:
  1264                           	callstack 0
  1265  000014                     ___flmul@sign:
  1266                           	callstack 0
  1267  000014                     return_to_initial@i_615:
  1268                           	callstack 0
  1269  000014                     memmove@d:
  1270                           	callstack 0
  1271  000014                     ___memrchr@s:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x13
  1275  000014                     	ds	1
  1276  000015                     ___fladd@aexp:
  1277                           	callstack 0
  1278  000015                     atoi@neg:
  1279                           	callstack 0
  1280  000015                     ___flmul@grs:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x14
  1284  000015                     	ds	1
  1285  000016                     ?_strrchr:
  1286                           	callstack 0
  1287  000016                     ?___fldiv:
  1288                           	callstack 0
  1289  000016                     ___fladd@bexp:
  1290                           	callstack 0
  1291  000016                     return_to_initial@i_616:
  1292                           	callstack 0
  1293  000016                     memmove@s:
  1294                           	callstack 0
  1295  000016                     strrchr@s:
  1296                           	callstack 0
  1297  000016                     ___fldiv@b:
  1298                           	callstack 0
  1299                           
  1300                           ; 4 bytes @ 0x15
  1301  000016                     	ds	1
  1302  000017                     ___fladd@grs:
  1303                           	callstack 0
  1304  000017                     _atoi$1078:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x16
  1308  000017                     	ds	1
  1309  000018                     ?___flsub:
  1310                           	callstack 0
  1311  000018                     strrchr@c:
  1312                           	callstack 0
  1313  000018                     ___flsub@b:
  1314                           	callstack 0
  1315                           
  1316                           ; 4 bytes @ 0x17
  1317  000018                     	ds	1
  1318  000019                     ___flmul@aexp:
  1319                           	callstack 0
  1320  000019                     _atoi$1080:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x18
  1324  000019                     	ds	1
  1325  00001A                     ___flmul@bexp:
  1326                           	callstack 0
  1327  00001A                     remove_component@ptr:
  1328                           	callstack 0
  1329  00001A                     ___fldiv@a:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x19
  1333  00001A                     	ds	1
  1334  00001B                     _atoi$1079:
  1335                           	callstack 0
  1336  00001B                     ___flmul@prod:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x1A
  1340  00001B                     	ds	1
  1341  00001C                     remove_component@rm_comp:
  1342                           	callstack 0
  1343  00001C                     atoi@n:
  1344                           	callstack 0
  1345  00001C                     ___flsub@a:
  1346                           	callstack 0
  1347                           
  1348                           ; 4 bytes @ 0x1B
  1349  00001C                     	ds	1
  1350  00001D                     remove_component@indxToDel:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x1C
  1354  00001D                     	ds	1
  1355  00001E                     ??___fldiv:
  1356  00001E                     add_component@add_componnt:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x1D
  1360  00001E                     	ds	1
  1361  00001F                     ___flmul@temp:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x1E
  1365  00001F                     	ds	1
  1366  000020                     
  1367                           ; 1 bytes @ 0x1F
  1368  000020                     	ds	2
  1369  000022                     ___fldiv@rem:
  1370                           	callstack 0
  1371                           
  1372                           ; 4 bytes @ 0x21
  1373  000022                     	ds	4
  1374  000026                     ___fldiv@sign:
  1375                           	callstack 0
  1376                           
  1377                           ; 1 bytes @ 0x25
  1378  000026                     	ds	1
  1379  000027                     ___fldiv@new_exp:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x26
  1383  000027                     	ds	2
  1384  000029                     ___fldiv@grs:
  1385                           	callstack 0
  1386                           
  1387                           ; 4 bytes @ 0x28
  1388  000029                     	ds	4
  1389  00002D                     ___fldiv@bexp:
  1390                           	callstack 0
  1391                           
  1392                           ; 1 bytes @ 0x2C
  1393  00002D                     	ds	1
  1394  00002E                     ___fldiv@aexp:
  1395                           	callstack 0
  1396                           
  1397                           ; 1 bytes @ 0x2D
  1398  00002E                     	ds	1
  1399  00002F                     ___flge@ff1:
  1400                           	callstack 0
  1401                           
  1402                           ; 4 bytes @ 0x2E
  1403  00002F                     	ds	4
  1404  000033                     ___flge@ff2:
  1405                           	callstack 0
  1406                           
  1407                           ; 4 bytes @ 0x32
  1408  000033                     	ds	4
  1409  000037                     ??___flge:
  1410                           
  1411                           ; 1 bytes @ 0x36
  1412  000037                     	ds	4
  1413  00003B                     ??_pick_and_place:
  1414  00003B                     ?_roundf:
  1415                           	callstack 0
  1416  00003B                     roundf@x:
  1417                           	callstack 0
  1418                           
  1419                           ; 4 bytes @ 0x3A
  1420  00003B                     	ds	2
  1421  00003D                     ??_start_up_menu:
  1422                           
  1423                           ; 1 bytes @ 0x3C
  1424  00003D                     	ds	2
  1425  00003F                     ??_roundf:
  1426                           
  1427                           ; 1 bytes @ 0x3E
  1428  00003F                     	ds	1
  1429  000040                     start_up_menu@i:
  1430                           	callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x3F
  1433  000040                     	ds	3
  1434  000043                     _roundf$1350:
  1435                           	callstack 0
  1436                           
  1437                           ; 4 bytes @ 0x42
  1438  000043                     	ds	4
  1439  000047                     roundf@e:
  1440                           	callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x46
  1443  000047                     	ds	2
  1444  000049                     _roundf$1349:
  1445                           	callstack 0
  1446                           
  1447                           ; 4 bytes @ 0x48
  1448  000049                     	ds	4
  1449  00004D                     roundf@u:
  1450                           	callstack 0
  1451                           
  1452                           ; 4 bytes @ 0x4C
  1453  00004D                     	ds	4
  1454  000051                     roundf@y:
  1455                           	callstack 0
  1456                           
  1457                           ; 4 bytes @ 0x50
  1458  000051                     	ds	4
  1459  000055                     ?___fltol:
  1460                           	callstack 0
  1461  000055                     ___fltol@f1:
  1462                           	callstack 0
  1463                           
  1464                           ; 4 bytes @ 0x54
  1465  000055                     	ds	4
  1466  000059                     ??___fltol:
  1467                           
  1468                           ; 1 bytes @ 0x58
  1469  000059                     	ds	4
  1470  00005D                     
  1471                           ; 1 bytes @ 0x5C
  1472 ;;
  1473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1474 ;;
  1475 ;; *************** function _main *****************
  1476 ;; Defined at:
  1477 ;;		line 185 in file "main.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1491 ;;      Params:         0       0       0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0       0       0
  1494 ;;      Totals:         0       0       0       0       0       0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels required when called: 5
  1497 ;; This function calls:
  1498 ;;		_init_PORTS
  1499 ;;		_init_USART
  1500 ;;		_init_interrupts
  1501 ;;		_start_up_menu
  1502 ;; This function is called by:
  1503 ;;		Startup code after reset
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text0
  1508  003192                     __ptext0:
  1509                           	callstack 0
  1510  003192                     _main:
  1511                           	callstack 26
  1512  003192  FFFF               	dw	65535	; assembler added errata NOP
  1513                           
  1514                           ;main.c: 189:     init_PORTS();
  1515  003194  ECB6  F018         	call	_init_PORTS	;wreg free
  1516  003198                     
  1517                           ;main.c: 190:     init_USART();
  1518  003198  EC64  F018         	call	_init_USART	;wreg free
  1519  00319C                     
  1520                           ;main.c: 191:     init_interrupts();
  1521  00319C  ECE7  F018         	call	_init_interrupts	;wreg free
  1522  0031A0                     
  1523                           ;main.c: 192:     (INTCONbits.GIE = 1);
  1524  0031A0  8EF2               	bsf	242,7,c	;volatile
  1525  0031A2                     l4732:
  1526  0031A2  FFFF               	dw	65535	; assembler added errata NOP
  1527                           
  1528                           ;main.c: 194:         New_char_RX=0;
  1529  0031A4  0E00               	movlw	0
  1530  0031A6  6E76               	movwf	_New_char_RX^0,c
  1531  0031A8                     
  1532                           ;main.c: 195:         start_up_menu();
  1533  0031A8  EC1F  F010         	call	_start_up_menu	;wreg free
  1534  0031AC  EFD1  F018         	goto	l4732
  1535  0031B0  EF6E  F000         	goto	start
  1536  0031B4                     __end_of_main:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _start_up_menu *****************
  1540 ;; Defined at:
  1541 ;;		line 203 in file "main.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  i               2   63[COMRAM] int 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1555 ;;      Params:         0       0       0       0       0       0       0
  1556 ;;      Locals:         2       0       0       0       0       0       0
  1557 ;;      Temps:          3       0       0       0       0       0       0
  1558 ;;      Totals:         5       0       0       0       0       0       0
  1559 ;;Total ram usage:        5 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 4
  1562 ;; This function calls:
  1563 ;;		_add_component
  1564 ;;		_change_sequence
  1565 ;;		_pick_and_place
  1566 ;;		_print_string
  1567 ;;		_remove_component
  1568 ;;		_return_to_initial
  1569 ;; This function is called by:
  1570 ;;		_main
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text1
  1575  00203E                     __ptext1:
  1576                           	callstack 0
  1577  00203E                     _start_up_menu:
  1578                           	callstack 0
  1579  00203E  FFFF               	dw	65535	; assembler added errata NOP
  1580  002040                     
  1581                           ;main.c: 205:     print_string("\n\n1. Start Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component");
  1582  002040  0E8D               	movlw	low STR_1
  1583  002042  6E08               	movwf	print_string@strng^0,c
  1584  002044  0E7D               	movlw	high STR_1
  1585  002046  6E09               	movwf	(print_string@strng+1)^0,c
  1586  002048  EC32  F016         	call	_print_string	;wreg free
  1587  00204C                     l4688:
  1588  00204C  FFFF               	dw	65535	; assembler added errata NOP
  1589                           
  1590                           ;main.c: 208:         if(New_char_RX){
  1591  00204E  5076               	movf	_New_char_RX^0,w,c
  1592  002050  B4D8               	btfsc	status,2,c
  1593  002052  EF2D  F010         	goto	u5691
  1594  002056  EF30  F010         	goto	u5690
  1595  00205A                     u5691:
  1596  00205A  FFFF               	dw	65535	; assembler added errata NOP
  1597  00205C  EF26  F010         	goto	l4688
  1598  002060                     u5690:
  1599  002060  FFFF               	dw	65535	; assembler added errata NOP
  1600  002062                     
  1601                           ;main.c: 209:             New_char_RX=0;
  1602  002062  0E00               	movlw	0
  1603  002064  6E76               	movwf	_New_char_RX^0,c
  1604                           
  1605                           ;main.c: 210:             switch(State){
  1606  002066  EFB4  F010         	goto	l4718
  1607  00206A                     l4692:
  1608  00206A  FFFF               	dw	65535	; assembler added errata NOP
  1609                           
  1610                           ;main.c: 212:                     print_string("\nStarting sequence:");
  1611  00206C  0ED6               	movlw	low STR_2
  1612  00206E  6E08               	movwf	print_string@strng^0,c
  1613  002070  0E7F               	movlw	high STR_2
  1614  002072  6E09               	movwf	(print_string@strng+1)^0,c
  1615  002074  EC32  F016         	call	_print_string	;wreg free
  1616                           
  1617                           ;main.c: 213:                     print_string(sequence);
  1618  002078  0EF5               	movlw	low _sequence
  1619  00207A  6E08               	movwf	print_string@strng^0,c
  1620  00207C  0E00               	movlw	high _sequence
  1621  00207E  6E09               	movwf	(print_string@strng+1)^0,c
  1622  002080  EC32  F016         	call	_print_string	;wreg free
  1623                           
  1624                           ;main.c: 214:                     print_string("\nEnter 'Q' to exit to MAIN MENU");
  1625  002084  0EC0               	movlw	low STR_3
  1626  002086  6E08               	movwf	print_string@strng^0,c
  1627  002088  0E7E               	movlw	high STR_3
  1628  00208A  6E09               	movwf	(print_string@strng+1)^0,c
  1629  00208C  EC32  F016         	call	_print_string	;wreg free
  1630  002090                     
  1631                           ;main.c: 215:                     return_to_initial();
  1632  002090  EC13  F012         	call	_return_to_initial	;wreg free
  1633                           
  1634                           ;main.c: 216:                     while(!New_char_RX && !stop){
  1635  002094  EF87  F010         	goto	l4704
  1636  002098                     l4696:
  1637  002098  FFFF               	dw	65535	; assembler added errata NOP
  1638                           
  1639                           ;main.c: 217:                         int i =0;
  1640  00209A  0E00               	movlw	0
  1641  00209C  6E41               	movwf	(start_up_menu@i+1)^0,c
  1642  00209E  0E00               	movlw	0
  1643  0020A0  6E40               	movwf	start_up_menu@i^0,c
  1644                           
  1645                           ;main.c: 218:                         X_diff=0;
  1646  0020A2  0E00               	movlw	0
  1647  0020A4  6E64               	movwf	(_X_diff+1)^0,c
  1648  0020A6  0E00               	movlw	0
  1649  0020A8  6E63               	movwf	_X_diff^0,c
  1650                           
  1651                           ;main.c: 219:                         Y_diff=0;
  1652  0020AA  0E00               	movlw	0
  1653  0020AC  6E62               	movwf	(_Y_diff+1)^0,c
  1654  0020AE  0E00               	movlw	0
  1655  0020B0  6E61               	movwf	_Y_diff^0,c
  1656                           
  1657                           ;main.c: 220:                         Angle_diff=0;
  1658  0020B2  0E00               	movlw	0
  1659  0020B4  6E60               	movwf	(_Angle_diff+1)^0,c
  1660  0020B6  0E00               	movlw	0
  1661  0020B8  6E5F               	movwf	_Angle_diff^0,c
  1662  0020BA                     l4698:
  1663  0020BA  FFFF               	dw	65535	; assembler added errata NOP
  1664                           
  1665                           ;main.c: 222:                             pick_and_place(sequence[i]);
  1666  0020BC  0EF5               	movlw	low _sequence
  1667  0020BE  2440               	addwf	start_up_menu@i^0,w,c
  1668  0020C0  6ED9               	movwf	fsr2l,c
  1669  0020C2  0E00               	movlw	high _sequence
  1670  0020C4  2041               	addwfc	(start_up_menu@i+1)^0,w,c
  1671  0020C6  6EDA               	movwf	fsr2h,c
  1672  0020C8  50DF               	movf	indf2,w,c
  1673  0020CA  EC70  F000         	call	_pick_and_place
  1674  0020CE                     
  1675                           ;main.c: 223:                         }while(!stop && sequence[i++]!='\n');
  1676  0020CE  5075               	movf	_stop^0,w,c
  1677  0020D0  A4D8               	btfss	status,2,c
  1678  0020D2  EF6D  F010         	goto	u5701
  1679  0020D6  EF70  F010         	goto	u5700
  1680  0020DA                     u5701:
  1681  0020DA  FFFF               	dw	65535	; assembler added errata NOP
  1682  0020DC  EF87  F010         	goto	l4704
  1683  0020E0                     u5700:
  1684  0020E0  FFFF               	dw	65535	; assembler added errata NOP
  1685  0020E2  5040               	movf	start_up_menu@i^0,w,c
  1686  0020E4  6E3D               	movwf	??_start_up_menu^0,c
  1687  0020E6  5041               	movf	(start_up_menu@i+1)^0,w,c
  1688  0020E8  6E3E               	movwf	(??_start_up_menu+1)^0,c
  1689  0020EA  4A40               	infsnz	start_up_menu@i^0,f,c
  1690  0020EC  2A41               	incf	(start_up_menu@i+1)^0,f,c
  1691  0020EE  0EF5               	movlw	low _sequence
  1692  0020F0  243D               	addwf	??_start_up_menu^0,w,c
  1693  0020F2  6ED9               	movwf	fsr2l,c
  1694  0020F4  0E00               	movlw	high _sequence
  1695  0020F6  203E               	addwfc	(??_start_up_menu+1)^0,w,c
  1696  0020F8  6EDA               	movwf	fsr2h,c
  1697  0020FA  0E0A               	movlw	10
  1698  0020FC  18DE               	xorwf	postinc2,w,c
  1699  0020FE  A4D8               	btfss	status,2,c
  1700  002100  EF84  F010         	goto	u5711
  1701  002104  EF87  F010         	goto	u5710
  1702  002108                     u5711:
  1703  002108  FFFF               	dw	65535	; assembler added errata NOP
  1704  00210A  EF5D  F010         	goto	l4698
  1705  00210E                     u5710:
  1706  00210E                     l4704:
  1707  00210E  FFFF               	dw	65535	; assembler added errata NOP
  1708                           
  1709                           ;main.c: 216:                     while(!New_char_RX && !stop){
  1710  002110  5076               	movf	_New_char_RX^0,w,c
  1711  002112  A4D8               	btfss	status,2,c
  1712  002114  EF8E  F010         	goto	u5721
  1713  002118  EF91  F010         	goto	u5720
  1714  00211C                     u5721:
  1715  00211C  FFFF               	dw	65535	; assembler added errata NOP
  1716  00211E  EFD7  F010         	goto	l208
  1717  002122                     u5720:
  1718  002122  FFFF               	dw	65535	; assembler added errata NOP
  1719  002124  5075               	movf	_stop^0,w,c
  1720  002126  B4D8               	btfsc	status,2,c
  1721  002128  EF98  F010         	goto	u5731
  1722  00212C  EF9B  F010         	goto	u5730
  1723  002130                     u5731:
  1724  002130  FFFF               	dw	65535	; assembler added errata NOP
  1725  002132  EF4C  F010         	goto	l4696
  1726  002136                     u5730:
  1727  002136  FFFF               	dw	65535	; assembler added errata NOP
  1728  002138  EFD8  F010         	goto	l215
  1729  00213C                     l4708:
  1730  00213C  FFFF               	dw	65535	; assembler added errata NOP
  1731                           
  1732                           ;main.c: 228:                     change_sequence();
  1733  00213E  EC82  F016         	call	_change_sequence	;wreg free
  1734                           
  1735                           ;main.c: 230:                     break;
  1736  002142  EFD8  F010         	goto	l215
  1737  002146                     l4710:
  1738  002146  FFFF               	dw	65535	; assembler added errata NOP
  1739                           
  1740                           ;main.c: 233:                     add_component();
  1741  002148  EC44  F00D         	call	_add_component	;wreg free
  1742                           
  1743                           ;main.c: 235:                     break;
  1744  00214C  EFD8  F010         	goto	l215
  1745  002150                     l4712:
  1746  002150  FFFF               	dw	65535	; assembler added errata NOP
  1747                           
  1748                           ;main.c: 238:                     remove_component();
  1749  002152  EC40  F013         	call	_remove_component	;wreg free
  1750                           
  1751                           ;main.c: 240:                     break;
  1752  002156  EFD8  F010         	goto	l215
  1753  00215A                     l4714:
  1754  00215A  FFFF               	dw	65535	; assembler added errata NOP
  1755                           
  1756                           ;main.c: 243:                     New_char_RX=0;
  1757  00215C  0E00               	movlw	0
  1758  00215E  6E76               	movwf	_New_char_RX^0,c
  1759                           
  1760                           ;main.c: 244:                     stop=0;
  1761  002160  0E00               	movlw	0
  1762  002162  6E75               	movwf	_stop^0,c
  1763                           
  1764                           ;main.c: 245:                     break;
  1765  002164  EFD8  F010         	goto	l215
  1766  002168                     l4718:
  1767  002168  FFFF               	dw	65535	; assembler added errata NOP
  1768  00216A  5077               	movf	_State^0,w,c
  1769  00216C  6E3D               	movwf	??_start_up_menu^0,c
  1770  00216E  6A3E               	clrf	(??_start_up_menu+1)^0,c
  1771                           
  1772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1773                           ; Switch size 1, requested type "simple"
  1774                           ; Number of cases is 1, Range of values is 0 to 0
  1775                           ; switch strategies available:
  1776                           ; Name         Instructions Cycles
  1777                           ; simple_byte            4     3 (average)
  1778                           ;	Chosen strategy is simple_byte
  1779  002170  503E               	movf	(??_start_up_menu+1)^0,w,c
  1780  002172  0A00               	xorlw	0	; case 0
  1781  002174  B4D8               	btfsc	status,2,c
  1782  002176  EFBF  F010         	goto	l4800
  1783  00217A  EFD8  F010         	goto	l215
  1784  00217E                     l4800:
  1785  00217E  FFFF               	dw	65535	; assembler added errata NOP
  1786                           
  1787                           ; Switch size 1, requested type "simple"
  1788                           ; Number of cases is 5, Range of values is 49 to 81
  1789                           ; switch strategies available:
  1790                           ; Name         Instructions Cycles
  1791                           ; simple_byte           16     9 (average)
  1792                           ;	Chosen strategy is simple_byte
  1793  002180  503D               	movf	??_start_up_menu^0,w,c
  1794  002182  0A31               	xorlw	49	; case 49
  1795  002184  B4D8               	btfsc	status,2,c
  1796  002186  EF35  F010         	goto	l4692
  1797  00218A  0A03               	xorlw	3	; case 50
  1798  00218C  B4D8               	btfsc	status,2,c
  1799  00218E  EF9E  F010         	goto	l4708
  1800  002192  0A01               	xorlw	1	; case 51
  1801  002194  B4D8               	btfsc	status,2,c
  1802  002196  EFA3  F010         	goto	l4710
  1803  00219A  0A07               	xorlw	7	; case 52
  1804  00219C  B4D8               	btfsc	status,2,c
  1805  00219E  EFA8  F010         	goto	l4712
  1806  0021A2  0A65               	xorlw	101	; case 81
  1807  0021A4  B4D8               	btfsc	status,2,c
  1808  0021A6  EFAD  F010         	goto	l4714
  1809  0021AA  EFD8  F010         	goto	l215
  1810  0021AE                     l208:
  1811  0021AE  FFFF               	dw	65535	; assembler added errata NOP
  1812  0021B0                     l215:
  1813  0021B0  FFFF               	dw	65535	; assembler added errata NOP
  1814  0021B2  0012               	return		;funcret
  1815  0021B4  FFFF               	dw	65535	; errata NOP
  1816  0021B6                     __end_of_start_up_menu:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _return_to_initial *****************
  1820 ;; Defined at:
  1821 ;;		line 606 in file "main.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  i               2   21[COMRAM] int 
  1826 ;;  i               2   19[COMRAM] int 
  1827 ;;  i               2   17[COMRAM] int 
  1828 ;;  i               2   15[COMRAM] int 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1838 ;;      Params:         0       0       0       0       0       0       0
  1839 ;;      Locals:         8       0       0       0       0       0       0
  1840 ;;      Temps:          1       0       0       0       0       0       0
  1841 ;;      Totals:         9       0       0       0       0       0       0
  1842 ;;Total ram usage:        9 bytes
  1843 ;; Hardware stack levels used: 1
  1844 ;; Hardware stack levels required when called: 3
  1845 ;; This function calls:
  1846 ;;		_Twister
  1847 ;;		_X_axis
  1848 ;;		_Y_axis
  1849 ;;		_Z_axis
  1850 ;; This function is called by:
  1851 ;;		_start_up_menu
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text2
  1856  002426                     __ptext2:
  1857                           	callstack 0
  1858  002426                     _return_to_initial:
  1859                           	callstack 0
  1860  002426  FFFF               	dw	65535	; assembler added errata NOP
  1861  002428                     
  1862                           ;main.c: 608:     New_char_RX=0;
  1863  002428  0E00               	movlw	0
  1864  00242A  6E76               	movwf	_New_char_RX^0,c
  1865                           
  1866                           ;main.c: 609:     stop=0;
  1867  00242C  0E00               	movlw	0
  1868  00242E  6E75               	movwf	_stop^0,c
  1869  002430                     
  1870                           ;main.c: 610:     Steps=Step_X;
  1871  002430  C0B6  F05D         	movff	_Step_X,_Steps
  1872  002434  C0B7  F05E         	movff	_Step_X+1,_Steps+1
  1873                           
  1874                           ;main.c: 611:     for(int i = 0; i<Steps; i++){X_axis(0);}
  1875  002438  0E00               	movlw	0
  1876  00243A  6E11               	movwf	(return_to_initial@i+1)^0,c
  1877  00243C  0E00               	movlw	0
  1878  00243E  6E10               	movwf	return_to_initial@i^0,c
  1879  002440  EF28  F012         	goto	l4460
  1880  002444                     l4456:
  1881  002444  FFFF               	dw	65535	; assembler added errata NOP
  1882  002446  0E00               	movlw	0
  1883  002448  ECC5  F014         	call	_X_axis
  1884  00244C  4A10               	infsnz	return_to_initial@i^0,f,c
  1885  00244E  2A11               	incf	(return_to_initial@i+1)^0,f,c
  1886  002450                     l4460:
  1887  002450  FFFF               	dw	65535	; assembler added errata NOP
  1888  002452  505D               	movf	_Steps^0,w,c
  1889  002454  5C10               	subwf	return_to_initial@i^0,w,c
  1890  002456  5011               	movf	(return_to_initial@i+1)^0,w,c
  1891  002458  0A80               	xorlw	128
  1892  00245A  6E0F               	movwf	??_return_to_initial^0,c
  1893  00245C  505E               	movf	(_Steps+1)^0,w,c
  1894  00245E  0A80               	xorlw	128
  1895  002460  580F               	subwfb	??_return_to_initial^0,w,c
  1896  002462  A0D8               	btfss	status,0,c
  1897  002464  EF36  F012         	goto	u5191
  1898  002468  EF39  F012         	goto	u5190
  1899  00246C                     u5191:
  1900  00246C  FFFF               	dw	65535	; assembler added errata NOP
  1901  00246E  EF22  F012         	goto	l4456
  1902  002472                     u5190:
  1903  002472  FFFF               	dw	65535	; assembler added errata NOP
  1904  002474                     
  1905                           ;main.c: 612:     Steps=Step_Y;
  1906  002474  C0B4  F05D         	movff	_Step_Y,_Steps
  1907  002478  C0B5  F05E         	movff	_Step_Y+1,_Steps+1
  1908  00247C                     
  1909                           ;main.c: 613:     for(int i = 0; i<Steps; i++){Y_axis(0);}
  1910  00247C  0E00               	movlw	0
  1911  00247E  6E13               	movwf	(return_to_initial@i_614+1)^0,c
  1912  002480  0E00               	movlw	0
  1913  002482  6E12               	movwf	return_to_initial@i_614^0,c
  1914  002484  EF4A  F012         	goto	l4468
  1915  002488                     l4464:
  1916  002488  FFFF               	dw	65535	; assembler added errata NOP
  1917  00248A  0E00               	movlw	0
  1918  00248C  EC45  F014         	call	_Y_axis
  1919  002490  4A12               	infsnz	return_to_initial@i_614^0,f,c
  1920  002492  2A13               	incf	(return_to_initial@i_614+1)^0,f,c
  1921  002494                     l4468:
  1922  002494  FFFF               	dw	65535	; assembler added errata NOP
  1923  002496  505D               	movf	_Steps^0,w,c
  1924  002498  5C12               	subwf	return_to_initial@i_614^0,w,c
  1925  00249A  5013               	movf	(return_to_initial@i_614+1)^0,w,c
  1926  00249C  0A80               	xorlw	128
  1927  00249E  6E0F               	movwf	??_return_to_initial^0,c
  1928  0024A0  505E               	movf	(_Steps+1)^0,w,c
  1929  0024A2  0A80               	xorlw	128
  1930  0024A4  580F               	subwfb	??_return_to_initial^0,w,c
  1931  0024A6  A0D8               	btfss	status,0,c
  1932  0024A8  EF58  F012         	goto	u5201
  1933  0024AC  EF5B  F012         	goto	u5200
  1934  0024B0                     u5201:
  1935  0024B0  FFFF               	dw	65535	; assembler added errata NOP
  1936  0024B2  EF44  F012         	goto	l4464
  1937  0024B6                     u5200:
  1938  0024B6  FFFF               	dw	65535	; assembler added errata NOP
  1939  0024B8                     
  1940                           ;main.c: 614:     Steps=Step_Angle;
  1941  0024B8  C0B0  F05D         	movff	_Step_Angle,_Steps
  1942  0024BC  C0B1  F05E         	movff	_Step_Angle+1,_Steps+1
  1943  0024C0                     
  1944                           ;main.c: 615:     for(int i = 0; i<Steps; i++){Twister(0);}
  1945  0024C0  0E00               	movlw	0
  1946  0024C2  6E15               	movwf	(return_to_initial@i_615+1)^0,c
  1947  0024C4  0E00               	movlw	0
  1948  0024C6  6E14               	movwf	return_to_initial@i_615^0,c
  1949  0024C8  EF6C  F012         	goto	l4476
  1950  0024CC                     l4472:
  1951  0024CC  FFFF               	dw	65535	; assembler added errata NOP
  1952  0024CE  0E00               	movlw	0
  1953  0024D0  ECC2  F015         	call	_Twister
  1954  0024D4  4A14               	infsnz	return_to_initial@i_615^0,f,c
  1955  0024D6  2A15               	incf	(return_to_initial@i_615+1)^0,f,c
  1956  0024D8                     l4476:
  1957  0024D8  FFFF               	dw	65535	; assembler added errata NOP
  1958  0024DA  505D               	movf	_Steps^0,w,c
  1959  0024DC  5C14               	subwf	return_to_initial@i_615^0,w,c
  1960  0024DE  5015               	movf	(return_to_initial@i_615+1)^0,w,c
  1961  0024E0  0A80               	xorlw	128
  1962  0024E2  6E0F               	movwf	??_return_to_initial^0,c
  1963  0024E4  505E               	movf	(_Steps+1)^0,w,c
  1964  0024E6  0A80               	xorlw	128
  1965  0024E8  580F               	subwfb	??_return_to_initial^0,w,c
  1966  0024EA  A0D8               	btfss	status,0,c
  1967  0024EC  EF7A  F012         	goto	u5211
  1968  0024F0  EF7D  F012         	goto	u5210
  1969  0024F4                     u5211:
  1970  0024F4  FFFF               	dw	65535	; assembler added errata NOP
  1971  0024F6  EF66  F012         	goto	l4472
  1972  0024FA                     u5210:
  1973  0024FA  FFFF               	dw	65535	; assembler added errata NOP
  1974  0024FC                     
  1975                           ;main.c: 616:     Steps=Step_Z;
  1976  0024FC  C0B2  F05D         	movff	_Step_Z,_Steps
  1977  002500  C0B3  F05E         	movff	_Step_Z+1,_Steps+1
  1978  002504                     
  1979                           ;main.c: 617:     for(int i=0; i<Steps && !stop; i++){Z_axis(0);}
  1980  002504  0E00               	movlw	0
  1981  002506  6E17               	movwf	(return_to_initial@i_616+1)^0,c
  1982  002508  0E00               	movlw	0
  1983  00250A  6E16               	movwf	return_to_initial@i_616^0,c
  1984  00250C  EF8E  F012         	goto	l4484
  1985  002510                     l4480:
  1986  002510  FFFF               	dw	65535	; assembler added errata NOP
  1987  002512  0E00               	movlw	0
  1988  002514  ECC5  F013         	call	_Z_axis
  1989  002518  4A16               	infsnz	return_to_initial@i_616^0,f,c
  1990  00251A  2A17               	incf	(return_to_initial@i_616+1)^0,f,c
  1991  00251C                     l4484:
  1992  00251C  FFFF               	dw	65535	; assembler added errata NOP
  1993  00251E  505D               	movf	_Steps^0,w,c
  1994  002520  5C16               	subwf	return_to_initial@i_616^0,w,c
  1995  002522  5017               	movf	(return_to_initial@i_616+1)^0,w,c
  1996  002524  0A80               	xorlw	128
  1997  002526  6E0F               	movwf	??_return_to_initial^0,c
  1998  002528  505E               	movf	(_Steps+1)^0,w,c
  1999  00252A  0A80               	xorlw	128
  2000  00252C  580F               	subwfb	??_return_to_initial^0,w,c
  2001  00252E  B0D8               	btfsc	status,0,c
  2002  002530  EF9C  F012         	goto	u5221
  2003  002534  EF9F  F012         	goto	u5220
  2004  002538                     u5221:
  2005  002538  FFFF               	dw	65535	; assembler added errata NOP
  2006  00253A  EFA9  F012         	goto	l418
  2007  00253E                     u5220:
  2008  00253E  FFFF               	dw	65535	; assembler added errata NOP
  2009  002540  5075               	movf	_stop^0,w,c
  2010  002542  B4D8               	btfsc	status,2,c
  2011  002544  EFA6  F012         	goto	u5231
  2012  002548  EFA9  F012         	goto	u5230
  2013  00254C                     u5231:
  2014  00254C  FFFF               	dw	65535	; assembler added errata NOP
  2015  00254E  EF88  F012         	goto	l4480
  2016  002552                     u5230:
  2017  002552                     l418:
  2018  002552  FFFF               	dw	65535	; assembler added errata NOP
  2019  002554  0012               	return		;funcret
  2020  002556  FFFF               	dw	65535	; errata NOP
  2021  002558                     __end_of_return_to_initial:
  2022                           	callstack 0
  2023                           
  2024 ;; *************** function _remove_component *****************
  2025 ;; Defined at:
  2026 ;;		line 341 in file "main.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  indxToDel       2   28[COMRAM] int 
  2031 ;;  ptr             2   25[COMRAM] PTR unsigned char 
  2032 ;;		 -> sequence(4), NULL(0), 
  2033 ;;  rm_comp         1   27[COMRAM] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2043 ;;      Params:         0       0       0       0       0       0       0
  2044 ;;      Locals:         5       0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0
  2046 ;;      Totals:         5       0       0       0       0       0       0
  2047 ;;Total ram usage:        5 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; Hardware stack levels required when called: 3
  2050 ;; This function calls:
  2051 ;;		_memmove
  2052 ;;		_print_string
  2053 ;;		_strlen
  2054 ;;		_strrchr
  2055 ;; This function is called by:
  2056 ;;		_start_up_menu
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text3
  2061  002680                     __ptext3:
  2062                           	callstack 0
  2063  002680                     _remove_component:
  2064                           	callstack 0
  2065  002680  FFFF               	dw	65535	; assembler added errata NOP
  2066  002682                     
  2067                           ;main.c: 342:     print_string("\nWhich component would you like to remove from the  seq
      +                          uence?\n");
  2068  002682  0E25               	movlw	low STR_15
  2069  002684  6E08               	movwf	print_string@strng^0,c
  2070  002686  0E7E               	movlw	high STR_15
  2071  002688  6E09               	movwf	(print_string@strng+1)^0,c
  2072  00268A  EC32  F016         	call	_print_string	;wreg free
  2073                           
  2074                           ;main.c: 343:     print_string(sequence);
  2075  00268E  0EF5               	movlw	low _sequence
  2076  002690  6E08               	movwf	print_string@strng^0,c
  2077  002692  0E00               	movlw	high _sequence
  2078  002694  6E09               	movwf	(print_string@strng+1)^0,c
  2079  002696  EC32  F016         	call	_print_string	;wreg free
  2080  00269A                     l3796:
  2081  00269A  FFFF               	dw	65535	; assembler added errata NOP
  2082                           
  2083                           ;main.c: 345:         if(New_char_RX){
  2084  00269C  5076               	movf	_New_char_RX^0,w,c
  2085  00269E  B4D8               	btfsc	status,2,c
  2086  0026A0  EF54  F013         	goto	u4301
  2087  0026A4  EF57  F013         	goto	u4300
  2088  0026A8                     u4301:
  2089  0026A8  FFFF               	dw	65535	; assembler added errata NOP
  2090  0026AA  EF4D  F013         	goto	l3796
  2091  0026AE                     u4300:
  2092  0026AE  FFFF               	dw	65535	; assembler added errata NOP
  2093  0026B0                     
  2094                           ;main.c: 346:             New_char_RX=0;
  2095  0026B0  0E00               	movlw	0
  2096  0026B2  6E76               	movwf	_New_char_RX^0,c
  2097  0026B4                     
  2098                           ;main.c: 347:             char rm_comp = input_str[0];
  2099  0026B4  C0EB  F01C         	movff	_input_str,remove_component@rm_comp	;volatile
  2100  0026B8                     
  2101                           ;main.c: 348:             char *ptr;;main.c: 349:             int indxToDel;;main.c: 350
      +                          :             ptr=strrchr(sequence,rm_comp);
  2102  0026B8  0EF5               	movlw	low _sequence
  2103  0026BA  6E16               	movwf	strrchr@s^0,c
  2104  0026BC  0E00               	movlw	high _sequence
  2105  0026BE  6E17               	movwf	(strrchr@s+1)^0,c
  2106  0026C0  C01C  F018         	movff	remove_component@rm_comp,strrchr@c
  2107  0026C4  6A19               	clrf	(strrchr@c+1)^0,c
  2108  0026C6  EC84  F018         	call	_strrchr	;wreg free
  2109  0026CA  C016  F01A         	movff	?_strrchr,remove_component@ptr
  2110  0026CE  C017  F01B         	movff	?_strrchr+1,remove_component@ptr+1
  2111  0026D2                     
  2112                           ;main.c: 352:             if (rm_comp=='Q'){
  2113  0026D2  0E51               	movlw	81
  2114  0026D4  181C               	xorwf	remove_component@rm_comp^0,w,c
  2115  0026D6  A4D8               	btfss	status,2,c
  2116  0026D8  EF70  F013         	goto	u4311
  2117  0026DC  EF73  F013         	goto	u4310
  2118  0026E0                     u4311:
  2119  0026E0  FFFF               	dw	65535	; assembler added errata NOP
  2120  0026E2  EF76  F013         	goto	l3810
  2121  0026E6                     u4310:
  2122  0026E6  FFFF               	dw	65535	; assembler added errata NOP
  2123  0026E8  EFC0  F013         	goto	l3826
  2124  0026EC                     l3810:
  2125  0026EC  FFFF               	dw	65535	; assembler added errata NOP
  2126  0026EE  501A               	movf	remove_component@ptr^0,w,c
  2127  0026F0  101B               	iorwf	(remove_component@ptr+1)^0,w,c
  2128  0026F2  B4D8               	btfsc	status,2,c
  2129  0026F4  EF7E  F013         	goto	u4321
  2130  0026F8  EF81  F013         	goto	u4320
  2131  0026FC                     u4321:
  2132  0026FC  FFFF               	dw	65535	; assembler added errata NOP
  2133  0026FE  EFAC  F013         	goto	l3822
  2134  002702                     u4320:
  2135  002702  FFFF               	dw	65535	; assembler added errata NOP
  2136  002704                     
  2137                           ;main.c: 356:                 indxToDel = ptr - sequence;
  2138  002704  0EF5               	movlw	low _sequence
  2139  002706  5C1A               	subwf	remove_component@ptr^0,w,c
  2140  002708  6E1D               	movwf	remove_component@indxToDel^0,c
  2141  00270A  0E00               	movlw	high _sequence
  2142  00270C  581B               	subwfb	(remove_component@ptr+1)^0,w,c
  2143  00270E  6E1E               	movwf	(remove_component@indxToDel+1)^0,c
  2144  002710                     
  2145                           ;main.c: 357:                 memmove(&sequence[indxToDel], &sequence[indxToDel + 1], st
      +                          rlen(sequence) - indxToDel);
  2146  002710  0EF5               	movlw	low _sequence
  2147  002712  241D               	addwf	remove_component@indxToDel^0,w,c
  2148  002714  6E0C               	movwf	memmove@d1^0,c
  2149  002716  0E00               	movlw	high _sequence
  2150  002718  201E               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2151  00271A  6E0D               	movwf	(memmove@d1+1)^0,c
  2152  00271C  0EF6               	movlw	low (_sequence+1)
  2153  00271E  241D               	addwf	remove_component@indxToDel^0,w,c
  2154  002720  6E0E               	movwf	memmove@s1^0,c
  2155  002722  0E00               	movlw	high (_sequence+1)
  2156  002724  201E               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2157  002726  6E0F               	movwf	(memmove@s1+1)^0,c
  2158  002728  0EF5               	movlw	low _sequence
  2159  00272A  6E08               	movwf	strlen@s^0,c
  2160  00272C  0E00               	movlw	high _sequence
  2161  00272E  6E09               	movwf	(strlen@s+1)^0,c
  2162  002730  EC01  F018         	call	_strlen	;wreg free
  2163  002734  501D               	movf	remove_component@indxToDel^0,w,c
  2164  002736  5C08               	subwf	?_strlen^0,w,c
  2165  002738  6E10               	movwf	memmove@n^0,c
  2166  00273A  501E               	movf	(remove_component@indxToDel+1)^0,w,c
  2167  00273C  5809               	subwfb	(?_strlen+1)^0,w,c
  2168  00273E  6E11               	movwf	(memmove@n+1)^0,c
  2169  002740  EC45  F015         	call	_memmove	;wreg free
  2170  002744                     
  2171                           ;main.c: 358:                 print_string("\ncomponent removed");
  2172  002744  0EEA               	movlw	low STR_16
  2173  002746  6E08               	movwf	print_string@strng^0,c
  2174  002748  0E7F               	movlw	high STR_16
  2175  00274A  6E09               	movwf	(print_string@strng+1)^0,c
  2176  00274C  EC32  F016         	call	_print_string	;wreg free
  2177  002750                     
  2178                           ;main.c: 359:                 stop=0;
  2179  002750  0E00               	movlw	0
  2180  002752  6E75               	movwf	_stop^0,c
  2181                           
  2182                           ;main.c: 360:                 break;
  2183  002754  EFC0  F013         	goto	l3826
  2184  002758                     l3822:
  2185  002758  FFFF               	dw	65535	; assembler added errata NOP
  2186                           
  2187                           ;main.c: 364:                 print_string("\ncomponent is not in the sequence. Try sele
      +                          cting another component: \n");
  2188  00275A  0EDF               	movlw	low STR_17
  2189  00275C  6E08               	movwf	print_string@strng^0,c
  2190  00275E  0E7D               	movlw	high STR_17
  2191  002760  6E09               	movwf	(print_string@strng+1)^0,c
  2192  002762  EC32  F016         	call	_print_string	;wreg free
  2193  002766                     l3824:
  2194  002766  FFFF               	dw	65535	; assembler added errata NOP
  2195  002768  5076               	movf	_New_char_RX^0,w,c
  2196  00276A  B4D8               	btfsc	status,2,c
  2197  00276C  EFBA  F013         	goto	u4331
  2198  002770  EFBD  F013         	goto	u4330
  2199  002774                     u4331:
  2200  002774  FFFF               	dw	65535	; assembler added errata NOP
  2201  002776  EFB3  F013         	goto	l3824
  2202  00277A                     u4330:
  2203  00277A  FFFF               	dw	65535	; assembler added errata NOP
  2204  00277C  EF4D  F013         	goto	l3796
  2205  002780                     l3826:
  2206  002780  FFFF               	dw	65535	; assembler added errata NOP
  2207                           
  2208                           ;main.c: 369:     New_char_RX=0;
  2209  002782  0E00               	movlw	0
  2210  002784  6E76               	movwf	_New_char_RX^0,c
  2211  002786  0012               	return		;funcret
  2212  002788  FFFF               	dw	65535	; errata NOP
  2213  00278A                     __end_of_remove_component:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _strrchr *****************
  2217 ;; Defined at:
  2218 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2221 ;;		 -> sequence(4), 
  2222 ;;  c               2   23[COMRAM] int 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2   21[COMRAM] PTR unsigned char 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2234 ;;      Params:         4       0       0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0
  2237 ;;      Totals:         4       0       0       0       0       0       0
  2238 ;;Total ram usage:        4 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 2
  2241 ;; This function calls:
  2242 ;;		___memrchr
  2243 ;;		_strlen
  2244 ;; This function is called by:
  2245 ;;		_remove_component
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text4
  2250  003108                     __ptext4:
  2251                           	callstack 0
  2252  003108                     _strrchr:
  2253                           	callstack 0
  2254  003108  FFFF               	dw	65535	; assembler added errata NOP
  2255  00310A  C016  F00C         	movff	strrchr@s,___memrchr@m
  2256  00310E  C017  F00D         	movff	strrchr@s+1,___memrchr@m+1
  2257  003112  C018  F00E         	movff	strrchr@c,___memrchr@c
  2258  003116  C019  F00F         	movff	strrchr@c+1,___memrchr@c+1
  2259  00311A  C016  F008         	movff	strrchr@s,strlen@s
  2260  00311E  C017  F009         	movff	strrchr@s+1,strlen@s+1
  2261  003122  EC01  F018         	call	_strlen	;wreg free
  2262  003126  0E01               	movlw	1
  2263  003128  2408               	addwf	?_strlen^0,w,c
  2264  00312A  6E10               	movwf	___memrchr@n^0,c
  2265  00312C  0E00               	movlw	0
  2266  00312E  2009               	addwfc	(?_strlen+1)^0,w,c
  2267  003130  6E11               	movwf	(___memrchr@n+1)^0,c
  2268  003132  EC11  F017         	call	___memrchr	;wreg free
  2269  003136  C00C  F016         	movff	?___memrchr,?_strrchr
  2270  00313A  C00D  F017         	movff	?___memrchr+1,?_strrchr+1
  2271  00313E  0012               	return		;funcret
  2272  003140  FFFF               	dw	65535	; errata NOP
  2273  003142                     __end_of_strrchr:
  2274                           	callstack 0
  2275                           
  2276 ;; *************** function ___memrchr *****************
  2277 ;; Defined at:
  2278 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  m               2   11[COMRAM] PTR const void 
  2281 ;;		 -> sequence(4), 
  2282 ;;  c               2   13[COMRAM] int 
  2283 ;;  n               2   15[COMRAM] unsigned int 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  s               2   19[COMRAM] PTR const unsigned char 
  2286 ;;		 -> sequence(4), 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  2   11[COMRAM] PTR void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2296 ;;      Params:         6       0       0       0       0       0       0
  2297 ;;      Locals:         2       0       0       0       0       0       0
  2298 ;;      Temps:          2       0       0       0       0       0       0
  2299 ;;      Totals:        10       0       0       0       0       0       0
  2300 ;;Total ram usage:       10 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 1
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_strrchr
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text5
  2311  002E22                     __ptext5:
  2312                           	callstack 0
  2313  002E22                     ___memrchr:
  2314                           	callstack 0
  2315  002E22  FFFF               	dw	65535	; assembler added errata NOP
  2316  002E24  C00C  F014         	movff	___memrchr@m,___memrchr@s
  2317  002E28  C00D  F015         	movff	___memrchr@m+1,___memrchr@s+1
  2318  002E2C  C00E  F00E         	movff	___memrchr@c,___memrchr@c
  2319  002E30  6A0F               	clrf	(___memrchr@c+1)^0,c
  2320  002E32  EF3B  F017         	goto	l2876
  2321  002E36                     l2870:
  2322  002E36  FFFF               	dw	65535	; assembler added errata NOP
  2323  002E38  5010               	movf	___memrchr@n^0,w,c
  2324  002E3A  2414               	addwf	___memrchr@s^0,w,c
  2325  002E3C  6ED9               	movwf	fsr2l,c
  2326  002E3E  5011               	movf	(___memrchr@n+1)^0,w,c
  2327  002E40  2015               	addwfc	(___memrchr@s+1)^0,w,c
  2328  002E42  6EDA               	movwf	fsr2h,c
  2329  002E44  50DF               	movf	indf2,w,c
  2330  002E46  6E12               	movwf	??___memrchr^0,c
  2331  002E48  6A13               	clrf	(??___memrchr+1)^0,c
  2332  002E4A  500E               	movf	___memrchr@c^0,w,c
  2333  002E4C  1812               	xorwf	??___memrchr^0,w,c
  2334  002E4E  E107               	bnz	u2741
  2335  002E50  500F               	movf	(___memrchr@c+1)^0,w,c
  2336  002E52  1813               	xorwf	(??___memrchr+1)^0,w,c
  2337  002E54  A4D8               	btfss	status,2,c
  2338  002E56  EF2F  F017         	goto	u2741
  2339  002E5A  EF32  F017         	goto	u2740
  2340  002E5E                     u2741:
  2341  002E5E  FFFF               	dw	65535	; assembler added errata NOP
  2342  002E60  EF3B  F017         	goto	l2876
  2343  002E64                     u2740:
  2344  002E64  FFFF               	dw	65535	; assembler added errata NOP
  2345  002E66  5010               	movf	___memrchr@n^0,w,c
  2346  002E68  2414               	addwf	___memrchr@s^0,w,c
  2347  002E6A  6E0C               	movwf	?___memrchr^0,c
  2348  002E6C  5011               	movf	(___memrchr@n+1)^0,w,c
  2349  002E6E  2015               	addwfc	(___memrchr@s+1)^0,w,c
  2350  002E70  6E0D               	movwf	(?___memrchr+1)^0,c
  2351  002E72  EF4F  F017         	goto	l1213
  2352  002E76                     l2876:
  2353  002E76  FFFF               	dw	65535	; assembler added errata NOP
  2354  002E78  0610               	decf	___memrchr@n^0,f,c
  2355  002E7A  A0D8               	btfss	status,0,c
  2356  002E7C  0611               	decf	(___memrchr@n+1)^0,f,c
  2357  002E7E  2810               	incf	___memrchr@n^0,w,c
  2358  002E80  E106               	bnz	u2751
  2359  002E82  2811               	incf	(___memrchr@n+1)^0,w,c
  2360  002E84  A4D8               	btfss	status,2,c
  2361  002E86  EF47  F017         	goto	u2751
  2362  002E8A  EF4A  F017         	goto	u2750
  2363  002E8E                     u2751:
  2364  002E8E  FFFF               	dw	65535	; assembler added errata NOP
  2365  002E90  EF1B  F017         	goto	l2870
  2366  002E94                     u2750:
  2367  002E94  FFFF               	dw	65535	; assembler added errata NOP
  2368  002E96  0E00               	movlw	0
  2369  002E98  6E0C               	movwf	?___memrchr^0,c
  2370  002E9A  0E00               	movlw	0
  2371  002E9C  6E0D               	movwf	(?___memrchr+1)^0,c
  2372  002E9E                     l1213:
  2373  002E9E  FFFF               	dw	65535	; assembler added errata NOP
  2374  002EA0  0012               	return		;funcret
  2375  002EA2  FFFF               	dw	65535	; errata NOP
  2376  002EA4                     __end_of___memrchr:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function _memmove *****************
  2380 ;; Defined at:
  2381 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  d1              2   11[COMRAM] PTR void 
  2384 ;;		 -> sequence(4), 
  2385 ;;  s1              2   13[COMRAM] PTR const void 
  2386 ;;		 -> sequence(4), 
  2387 ;;  n               2   15[COMRAM] unsigned int 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2390 ;;		 -> sequence(4), 
  2391 ;;  d               2   19[COMRAM] PTR unsigned char 
  2392 ;;		 -> sequence(4), 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  2   11[COMRAM] PTR void 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2402 ;;      Params:         6       0       0       0       0       0       0
  2403 ;;      Locals:         4       0       0       0       0       0       0
  2404 ;;      Temps:          2       0       0       0       0       0       0
  2405 ;;      Totals:        12       0       0       0       0       0       0
  2406 ;;Total ram usage:       12 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 1
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_remove_component
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text6
  2417  002A8A                     __ptext6:
  2418                           	callstack 0
  2419  002A8A                     _memmove:
  2420                           	callstack 0
  2421  002A8A  FFFF               	dw	65535	; assembler added errata NOP
  2422  002A8C  C00E  F016         	movff	memmove@s1,memmove@s
  2423  002A90  C00F  F017         	movff	memmove@s1+1,memmove@s+1
  2424  002A94  C00C  F014         	movff	memmove@d1,memmove@d
  2425  002A98  C00D  F015         	movff	memmove@d1+1,memmove@d+1
  2426  002A9C  5014               	movf	memmove@d^0,w,c
  2427  002A9E  5C16               	subwf	memmove@s^0,w,c
  2428  002AA0  5015               	movf	(memmove@d+1)^0,w,c
  2429  002AA2  5817               	subwfb	(memmove@s+1)^0,w,c
  2430  002AA4  B0D8               	btfsc	status,0,c
  2431  002AA6  EF57  F015         	goto	u2891
  2432  002AAA  EF5A  F015         	goto	u2890
  2433  002AAE                     u2891:
  2434  002AAE  FFFF               	dw	65535	; assembler added errata NOP
  2435  002AB0  EF97  F015         	goto	l2968
  2436  002AB4                     u2890:
  2437  002AB4  FFFF               	dw	65535	; assembler added errata NOP
  2438  002AB6  5010               	movf	memmove@n^0,w,c
  2439  002AB8  2416               	addwf	memmove@s^0,w,c
  2440  002ABA  6E12               	movwf	??_memmove^0,c
  2441  002ABC  5011               	movf	(memmove@n+1)^0,w,c
  2442  002ABE  2017               	addwfc	(memmove@s+1)^0,w,c
  2443  002AC0  6E13               	movwf	(??_memmove+1)^0,c
  2444  002AC2  5012               	movf	??_memmove^0,w,c
  2445  002AC4  5C14               	subwf	memmove@d^0,w,c
  2446  002AC6  5013               	movf	(??_memmove+1)^0,w,c
  2447  002AC8  5815               	subwfb	(memmove@d+1)^0,w,c
  2448  002ACA  B0D8               	btfsc	status,0,c
  2449  002ACC  EF6A  F015         	goto	u2901
  2450  002AD0  EF6D  F015         	goto	u2900
  2451  002AD4                     u2901:
  2452  002AD4  FFFF               	dw	65535	; assembler added errata NOP
  2453  002AD6  EF97  F015         	goto	l2968
  2454  002ADA                     u2900:
  2455  002ADA  FFFF               	dw	65535	; assembler added errata NOP
  2456  002ADC  5010               	movf	memmove@n^0,w,c
  2457  002ADE  2616               	addwf	memmove@s^0,f,c
  2458  002AE0  5011               	movf	(memmove@n+1)^0,w,c
  2459  002AE2  2217               	addwfc	(memmove@s+1)^0,f,c
  2460  002AE4  5010               	movf	memmove@n^0,w,c
  2461  002AE6  2614               	addwf	memmove@d^0,f,c
  2462  002AE8  5011               	movf	(memmove@n+1)^0,w,c
  2463  002AEA  2215               	addwfc	(memmove@d+1)^0,f,c
  2464  002AEC                     l2964:
  2465  002AEC  FFFF               	dw	65535	; assembler added errata NOP
  2466  002AEE  0616               	decf	memmove@s^0,f,c
  2467  002AF0  A0D8               	btfss	status,0,c
  2468  002AF2  0617               	decf	(memmove@s+1)^0,f,c
  2469  002AF4  C016  FFD9         	movff	memmove@s,fsr2l
  2470  002AF8  C017  FFDA         	movff	memmove@s+1,fsr2h
  2471  002AFC  0614               	decf	memmove@d^0,f,c
  2472  002AFE  A0D8               	btfss	status,0,c
  2473  002B00  0615               	decf	(memmove@d+1)^0,f,c
  2474  002B02  C014  FFE1         	movff	memmove@d,fsr1l
  2475  002B06  C015  FFE2         	movff	memmove@d+1,fsr1h
  2476  002B0A  CFDF FFE7          	movff	indf2,indf1
  2477  002B0E  0610               	decf	memmove@n^0,f,c
  2478  002B10  A0D8               	btfss	status,0,c
  2479  002B12  0611               	decf	(memmove@n+1)^0,f,c
  2480  002B14  5010               	movf	memmove@n^0,w,c
  2481  002B16  1011               	iorwf	(memmove@n+1)^0,w,c
  2482  002B18  A4D8               	btfss	status,2,c
  2483  002B1A  EF91  F015         	goto	u2911
  2484  002B1E  EF94  F015         	goto	u2910
  2485  002B22                     u2911:
  2486  002B22  FFFF               	dw	65535	; assembler added errata NOP
  2487  002B24  EF76  F015         	goto	l2964
  2488  002B28                     u2910:
  2489  002B28  FFFF               	dw	65535	; assembler added errata NOP
  2490  002B2A  EFBF  F015         	goto	l1169
  2491  002B2E                     l2968:
  2492  002B2E  FFFF               	dw	65535	; assembler added errata NOP
  2493  002B30  5010               	movf	memmove@n^0,w,c
  2494  002B32  1011               	iorwf	(memmove@n+1)^0,w,c
  2495  002B34  B4D8               	btfsc	status,2,c
  2496  002B36  EF9F  F015         	goto	u2921
  2497  002B3A  EFA2  F015         	goto	u2920
  2498  002B3E                     u2921:
  2499  002B3E  FFFF               	dw	65535	; assembler added errata NOP
  2500  002B40  EFBF  F015         	goto	l1169
  2501  002B44                     u2920:
  2502  002B44  FFFF               	dw	65535	; assembler added errata NOP
  2503  002B46                     l2970:
  2504  002B46  FFFF               	dw	65535	; assembler added errata NOP
  2505  002B48  C016  FFD9         	movff	memmove@s,fsr2l
  2506  002B4C  C017  FFDA         	movff	memmove@s+1,fsr2h
  2507  002B50  C014  FFE1         	movff	memmove@d,fsr1l
  2508  002B54  C015  FFE2         	movff	memmove@d+1,fsr1h
  2509  002B58  CFDF FFE7          	movff	indf2,indf1
  2510  002B5C  4A16               	infsnz	memmove@s^0,f,c
  2511  002B5E  2A17               	incf	(memmove@s+1)^0,f,c
  2512  002B60  4A14               	infsnz	memmove@d^0,f,c
  2513  002B62  2A15               	incf	(memmove@d+1)^0,f,c
  2514  002B64  0610               	decf	memmove@n^0,f,c
  2515  002B66  A0D8               	btfss	status,0,c
  2516  002B68  0611               	decf	(memmove@n+1)^0,f,c
  2517  002B6A  5010               	movf	memmove@n^0,w,c
  2518  002B6C  1011               	iorwf	(memmove@n+1)^0,w,c
  2519  002B6E  A4D8               	btfss	status,2,c
  2520  002B70  EFBC  F015         	goto	u2931
  2521  002B74  EFBF  F015         	goto	u2930
  2522  002B78                     u2931:
  2523  002B78  FFFF               	dw	65535	; assembler added errata NOP
  2524  002B7A  EFA3  F015         	goto	l2970
  2525  002B7E                     u2930:
  2526  002B7E                     l1169:
  2527  002B7E  FFFF               	dw	65535	; assembler added errata NOP
  2528  002B80  0012               	return		;funcret
  2529  002B82  FFFF               	dw	65535	; errata NOP
  2530  002B84                     __end_of_memmove:
  2531                           	callstack 0
  2532                           
  2533 ;; *************** function _pick_and_place *****************
  2534 ;; Defined at:
  2535 ;;		line 564 in file "main.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  Componnt        1    wreg     unsigned char 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  Componnt        1    0[BANK0 ] unsigned char 
  2540 ;;  i               2   31[BANK0 ] int 
  2541 ;;  i               2   29[BANK0 ] int 
  2542 ;;  i               2   25[BANK0 ] int 
  2543 ;;  i               2   21[BANK0 ] int 
  2544 ;;  i               2   17[BANK0 ] int 
  2545 ;;  i               2   15[BANK0 ] int 
  2546 ;;  i               2   13[BANK0 ] int 
  2547 ;;  i               2    9[BANK0 ] int 
  2548 ;;  i               2    5[BANK0 ] int 
  2549 ;;  i               2    1[BANK0 ] int 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  2   74[None  ] int 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2559 ;;      Params:         0       0       0       0       0       0       0
  2560 ;;      Locals:         0      33       0       0       0       0       0
  2561 ;;      Temps:          2       0       0       0       0       0       0
  2562 ;;      Totals:         2      33       0       0       0       0       0
  2563 ;;Total ram usage:       35 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 3
  2566 ;; This function calls:
  2567 ;;		_Twister
  2568 ;;		_X_axis
  2569 ;;		_Y_axis
  2570 ;;		_Z_axis
  2571 ;;		___fldiv
  2572 ;;		___flge
  2573 ;;		___xxtofl
  2574 ;;		_fetch_parameters
  2575 ;; This function is called by:
  2576 ;;		_start_up_menu
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text7
  2581  0000E0                     __ptext7:
  2582                           	callstack 0
  2583  0000E0                     _pick_and_place:
  2584                           	callstack 0
  2585  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  2586                           
  2587                           ;incstack = 0
  2588                           ;pick_and_place@Componnt stored from wreg
  2589  0000E2  0100               	movlb	0	; () banked
  2590  0000E4  6FBE               	movwf	pick_and_place@Componnt& (0+255),b
  2591  0000E6                     
  2592                           ;main.c: 564: int pick_and_place(char Componnt);main.c: 565: {;main.c: 568:     fetch_pa
      +                          rameters(Componnt);
  2593  0000E6  0100               	movlb	0	; () banked
  2594  0000E8  51BE               	movf	pick_and_place@Componnt& (0+255),w,b
  2595  0000EA  ECDB  F010         	call	_fetch_parameters
  2596  0000EE                     
  2597                           ;main.c: 570:         X_dir=((X_diff<X_Pick)? 1:0);
  2598  0000EE  506F               	movf	_X_Pick^0,w,c
  2599  0000F0  5C63               	subwf	_X_diff^0,w,c
  2600  0000F2  5064               	movf	(_X_diff+1)^0,w,c
  2601  0000F4  0A80               	xorlw	128
  2602  0000F6  6E3B               	movwf	??_pick_and_place^0,c
  2603  0000F8  5070               	movf	(_X_Pick+1)^0,w,c
  2604  0000FA  0A80               	xorlw	128
  2605  0000FC  583B               	subwfb	??_pick_and_place^0,w,c
  2606  0000FE  A0D8               	btfss	status,0,c
  2607  000100  EF84  F000         	goto	u5241
  2608  000104  EF88  F000         	goto	u5240
  2609  000108                     u5241:
  2610  000108  FFFF               	dw	65535	; assembler added errata NOP
  2611  00010A  0E01               	movlw	1
  2612  00010C  EF8A  F000         	goto	u5250
  2613  000110                     u5240:
  2614  000110  FFFF               	dw	65535	; assembler added errata NOP
  2615  000112  0E00               	movlw	0
  2616  000114                     u5250:
  2617  000114  FFFF               	dw	65535	; assembler added errata NOP
  2618  000116  6E74               	movwf	_X_dir^0,c
  2619  000118                     
  2620                           ;main.c: 571:         Y_dir=((Y_diff<Y_Pick)? 1:0);
  2621  000118  506B               	movf	_Y_Pick^0,w,c
  2622  00011A  5C61               	subwf	_Y_diff^0,w,c
  2623  00011C  5062               	movf	(_Y_diff+1)^0,w,c
  2624  00011E  0A80               	xorlw	128
  2625  000120  6E3B               	movwf	??_pick_and_place^0,c
  2626  000122  506C               	movf	(_Y_Pick+1)^0,w,c
  2627  000124  0A80               	xorlw	128
  2628  000126  583B               	subwfb	??_pick_and_place^0,w,c
  2629  000128  A0D8               	btfss	status,0,c
  2630  00012A  EF99  F000         	goto	u5261
  2631  00012E  EF9D  F000         	goto	u5260
  2632  000132                     u5261:
  2633  000132  FFFF               	dw	65535	; assembler added errata NOP
  2634  000134  0E01               	movlw	1
  2635  000136  EF9F  F000         	goto	u5270
  2636  00013A                     u5260:
  2637  00013A  FFFF               	dw	65535	; assembler added errata NOP
  2638  00013C  0E00               	movlw	0
  2639  00013E                     u5270:
  2640  00013E  FFFF               	dw	65535	; assembler added errata NOP
  2641  000140  6E73               	movwf	_Y_dir^0,c
  2642  000142                     
  2643                           ;main.c: 572:         Rot_dir=((Angle_diff<Pick_Angle)? 1:0);
  2644  000142  5067               	movf	_Pick_Angle^0,w,c
  2645  000144  5C5F               	subwf	_Angle_diff^0,w,c
  2646  000146  5060               	movf	(_Angle_diff+1)^0,w,c
  2647  000148  0A80               	xorlw	128
  2648  00014A  6E3B               	movwf	??_pick_and_place^0,c
  2649  00014C  5068               	movf	(_Pick_Angle+1)^0,w,c
  2650  00014E  0A80               	xorlw	128
  2651  000150  583B               	subwfb	??_pick_and_place^0,w,c
  2652  000152  A0D8               	btfss	status,0,c
  2653  000154  EFAE  F000         	goto	u5281
  2654  000158  EFB2  F000         	goto	u5280
  2655  00015C                     u5281:
  2656  00015C  FFFF               	dw	65535	; assembler added errata NOP
  2657  00015E  0E01               	movlw	1
  2658  000160  EFB4  F000         	goto	u5290
  2659  000164                     u5280:
  2660  000164  FFFF               	dw	65535	; assembler added errata NOP
  2661  000166  0E00               	movlw	0
  2662  000168                     u5290:
  2663  000168  FFFF               	dw	65535	; assembler added errata NOP
  2664  00016A  6E72               	movwf	_Rot_dir^0,c
  2665  00016C                     
  2666                           ;main.c: 574:         for(int i = 0; (i<(((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_Pi
      +                          ck-X_diff)))) && !stop; i++){X_axis(X_dir);}
  2667  00016C  0E00               	movlw	0
  2668  00016E  0100               	movlb	0	; () banked
  2669  000170  6FC0               	movwf	(pick_and_place@i+1)& (0+255),b
  2670  000172  0E00               	movlw	0
  2671  000174  6FBF               	movwf	pick_and_place@i& (0+255),b
  2672  000176  EFC4  F000         	goto	l4502
  2673  00017A                     l4498:
  2674  00017A  FFFF               	dw	65535	; assembler added errata NOP
  2675                           
  2676                           ; BSR set to: 0
  2677  00017C  5074               	movf	_X_dir^0,w,c
  2678  00017E  ECC5  F014         	call	_X_axis
  2679  000182  0100               	movlb	0	; () banked
  2680  000184  4BBF               	infsnz	pick_and_place@i& (0+255),f,b
  2681  000186  2BC0               	incf	(pick_and_place@i+1)& (0+255),f,b
  2682  000188                     l4502:
  2683  000188  FFFF               	dw	65535	; assembler added errata NOP
  2684                           
  2685                           ; BSR set to: 0
  2686  00018A  5063               	movf	_X_diff^0,w,c
  2687  00018C  5C6F               	subwf	_X_Pick^0,w,c
  2688  00018E  6E3B               	movwf	??_pick_and_place^0,c
  2689  000190  5064               	movf	(_X_diff+1)^0,w,c
  2690  000192  5870               	subwfb	(_X_Pick+1)^0,w,c
  2691  000194  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2692  000196  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2693  000198  EFD9  F000         	goto	u5300
  2694  00019C  503C               	movf	(??_pick_and_place+1)^0,w,c
  2695  00019E  E106               	bnz	u5301
  2696  0001A0  043B               	decf	??_pick_and_place^0,w,c
  2697  0001A2  B0D8               	btfsc	status,0,c
  2698  0001A4  EFD6  F000         	goto	u5301
  2699  0001A8  EFD9  F000         	goto	u5300
  2700  0001AC                     u5301:
  2701  0001AC  FFFF               	dw	65535	; assembler added errata NOP
  2702  0001AE  EFEA  F000         	goto	l4506
  2703  0001B2                     u5300:
  2704  0001B2  FFFF               	dw	65535	; assembler added errata NOP
  2705  0001B4                     
  2706                           ; BSR set to: 0
  2707  0001B4  5063               	movf	_X_diff^0,w,c
  2708  0001B6  5C6F               	subwf	_X_Pick^0,w,c
  2709  0001B8  6E3B               	movwf	??_pick_and_place^0,c
  2710  0001BA  5064               	movf	(_X_diff+1)^0,w,c
  2711  0001BC  5870               	subwfb	(_X_Pick+1)^0,w,c
  2712  0001BE  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2713  0001C0  1E3B               	comf	??_pick_and_place^0,f,c
  2714  0001C2  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2715  0001C4  4A3B               	infsnz	??_pick_and_place^0,f,c
  2716  0001C6  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2717  0001C8  C03B  F0C1         	movff	??_pick_and_place,_pick_and_place$594
  2718  0001CC  C03C  F0C2         	movff	??_pick_and_place+1,_pick_and_place$594+1
  2719  0001D0  EFF1  F000         	goto	l334
  2720  0001D4                     l4506:
  2721  0001D4  FFFF               	dw	65535	; assembler added errata NOP
  2722                           
  2723                           ; BSR set to: 0
  2724  0001D6  5063               	movf	_X_diff^0,w,c
  2725  0001D8  5C6F               	subwf	_X_Pick^0,w,c
  2726  0001DA  6FC1               	movwf	_pick_and_place$594& (0+255),b
  2727  0001DC  5064               	movf	(_X_diff+1)^0,w,c
  2728  0001DE  5870               	subwfb	(_X_Pick+1)^0,w,c
  2729  0001E0  6FC2               	movwf	(_pick_and_place$594+1)& (0+255),b
  2730  0001E2                     l334:
  2731  0001E2  FFFF               	dw	65535	; assembler added errata NOP
  2732                           
  2733                           ; BSR set to: 0
  2734  0001E4  51C1               	movf	_pick_and_place$594& (0+255),w,b
  2735  0001E6  5DBF               	subwf	pick_and_place@i& (0+255),w,b
  2736  0001E8  51C0               	movf	(pick_and_place@i+1)& (0+255),w,b
  2737  0001EA  0A80               	xorlw	128
  2738  0001EC  6E3B               	movwf	??_pick_and_place^0,c
  2739  0001EE  51C2               	movf	(_pick_and_place$594+1)& (0+255),w,b
  2740  0001F0  0A80               	xorlw	128
  2741  0001F2  583B               	subwfb	??_pick_and_place^0,w,c
  2742  0001F4  B0D8               	btfsc	status,0,c
  2743  0001F6  EFFF  F000         	goto	u5311
  2744  0001FA  EF02  F001         	goto	u5310
  2745  0001FE                     u5311:
  2746  0001FE  FFFF               	dw	65535	; assembler added errata NOP
  2747  000200  EF0C  F001         	goto	l4510
  2748  000204                     u5310:
  2749  000204  FFFF               	dw	65535	; assembler added errata NOP
  2750  000206                     
  2751                           ; BSR set to: 0
  2752  000206  5075               	movf	_stop^0,w,c
  2753  000208  B4D8               	btfsc	status,2,c
  2754  00020A  EF09  F001         	goto	u5321
  2755  00020E  EF0C  F001         	goto	u5320
  2756  000212                     u5321:
  2757  000212  FFFF               	dw	65535	; assembler added errata NOP
  2758  000214  EFBD  F000         	goto	l4498
  2759  000218                     u5320:
  2760  000218                     l4510:
  2761  000218  FFFF               	dw	65535	; assembler added errata NOP
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;main.c: 576:         for(int i = 0; (i<(((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_Pi
      +                          ck-Y_diff)))) && !stop; i++){Y_axis(Y_dir);}
  2765  00021A  0E00               	movlw	0
  2766  00021C  6FC4               	movwf	(pick_and_place@i_595+1)& (0+255),b
  2767  00021E  0E00               	movlw	0
  2768  000220  6FC3               	movwf	pick_and_place@i_595& (0+255),b
  2769  000222  EF1A  F001         	goto	l4516
  2770  000226                     l4512:
  2771  000226  FFFF               	dw	65535	; assembler added errata NOP
  2772                           
  2773                           ; BSR set to: 0
  2774  000228  5073               	movf	_Y_dir^0,w,c
  2775  00022A  EC45  F014         	call	_Y_axis
  2776  00022E  0100               	movlb	0	; () banked
  2777  000230  4BC3               	infsnz	pick_and_place@i_595& (0+255),f,b
  2778  000232  2BC4               	incf	(pick_and_place@i_595+1)& (0+255),f,b
  2779  000234                     l4516:
  2780  000234  FFFF               	dw	65535	; assembler added errata NOP
  2781                           
  2782                           ; BSR set to: 0
  2783  000236  5061               	movf	_Y_diff^0,w,c
  2784  000238  5C6B               	subwf	_Y_Pick^0,w,c
  2785  00023A  6E3B               	movwf	??_pick_and_place^0,c
  2786  00023C  5062               	movf	(_Y_diff+1)^0,w,c
  2787  00023E  586C               	subwfb	(_Y_Pick+1)^0,w,c
  2788  000240  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2789  000242  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2790  000244  EF2F  F001         	goto	u5330
  2791  000248  503C               	movf	(??_pick_and_place+1)^0,w,c
  2792  00024A  E106               	bnz	u5331
  2793  00024C  043B               	decf	??_pick_and_place^0,w,c
  2794  00024E  B0D8               	btfsc	status,0,c
  2795  000250  EF2C  F001         	goto	u5331
  2796  000254  EF2F  F001         	goto	u5330
  2797  000258                     u5331:
  2798  000258  FFFF               	dw	65535	; assembler added errata NOP
  2799  00025A  EF40  F001         	goto	l4520
  2800  00025E                     u5330:
  2801  00025E  FFFF               	dw	65535	; assembler added errata NOP
  2802  000260                     
  2803                           ; BSR set to: 0
  2804  000260  5061               	movf	_Y_diff^0,w,c
  2805  000262  5C6B               	subwf	_Y_Pick^0,w,c
  2806  000264  6E3B               	movwf	??_pick_and_place^0,c
  2807  000266  5062               	movf	(_Y_diff+1)^0,w,c
  2808  000268  586C               	subwfb	(_Y_Pick+1)^0,w,c
  2809  00026A  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2810  00026C  1E3B               	comf	??_pick_and_place^0,f,c
  2811  00026E  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2812  000270  4A3B               	infsnz	??_pick_and_place^0,f,c
  2813  000272  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2814  000274  C03B  F0C5         	movff	??_pick_and_place,_pick_and_place$597
  2815  000278  C03C  F0C6         	movff	??_pick_and_place+1,_pick_and_place$597+1
  2816  00027C  EF47  F001         	goto	l343
  2817  000280                     l4520:
  2818  000280  FFFF               	dw	65535	; assembler added errata NOP
  2819                           
  2820                           ; BSR set to: 0
  2821  000282  5061               	movf	_Y_diff^0,w,c
  2822  000284  5C6B               	subwf	_Y_Pick^0,w,c
  2823  000286  6FC5               	movwf	_pick_and_place$597& (0+255),b
  2824  000288  5062               	movf	(_Y_diff+1)^0,w,c
  2825  00028A  586C               	subwfb	(_Y_Pick+1)^0,w,c
  2826  00028C  6FC6               	movwf	(_pick_and_place$597+1)& (0+255),b
  2827  00028E                     l343:
  2828  00028E  FFFF               	dw	65535	; assembler added errata NOP
  2829                           
  2830                           ; BSR set to: 0
  2831  000290  51C5               	movf	_pick_and_place$597& (0+255),w,b
  2832  000292  5DC3               	subwf	pick_and_place@i_595& (0+255),w,b
  2833  000294  51C4               	movf	(pick_and_place@i_595+1)& (0+255),w,b
  2834  000296  0A80               	xorlw	128
  2835  000298  6E3B               	movwf	??_pick_and_place^0,c
  2836  00029A  51C6               	movf	(_pick_and_place$597+1)& (0+255),w,b
  2837  00029C  0A80               	xorlw	128
  2838  00029E  583B               	subwfb	??_pick_and_place^0,w,c
  2839  0002A0  B0D8               	btfsc	status,0,c
  2840  0002A2  EF55  F001         	goto	u5341
  2841  0002A6  EF58  F001         	goto	u5340
  2842  0002AA                     u5341:
  2843  0002AA  FFFF               	dw	65535	; assembler added errata NOP
  2844  0002AC  EF62  F001         	goto	l4524
  2845  0002B0                     u5340:
  2846  0002B0  FFFF               	dw	65535	; assembler added errata NOP
  2847  0002B2                     
  2848                           ; BSR set to: 0
  2849  0002B2  5075               	movf	_stop^0,w,c
  2850  0002B4  B4D8               	btfsc	status,2,c
  2851  0002B6  EF5F  F001         	goto	u5351
  2852  0002BA  EF62  F001         	goto	u5350
  2853  0002BE                     u5351:
  2854  0002BE  FFFF               	dw	65535	; assembler added errata NOP
  2855  0002C0  EF13  F001         	goto	l4512
  2856  0002C4                     u5350:
  2857  0002C4                     l4524:
  2858  0002C4  FFFF               	dw	65535	; assembler added errata NOP
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;main.c: 578:         for(int i = 0; (i<(((Angle_diff-Pick_Angle) > 0 ? (Angle_diff-Pick
      +                          _Angle) : -(Angle_diff-Pick_Angle))/3.6)) && !stop; i++){Twister(Rot_dir);}
  2862  0002C6  0E00               	movlw	0
  2863  0002C8  6FC8               	movwf	(pick_and_place@i_598+1)& (0+255),b
  2864  0002CA  0E00               	movlw	0
  2865  0002CC  6FC7               	movwf	pick_and_place@i_598& (0+255),b
  2866  0002CE  EF70  F001         	goto	l4530
  2867  0002D2                     l4526:
  2868  0002D2  FFFF               	dw	65535	; assembler added errata NOP
  2869  0002D4  5072               	movf	_Rot_dir^0,w,c
  2870  0002D6  ECC2  F015         	call	_Twister
  2871  0002DA  0100               	movlb	0	; () banked
  2872  0002DC  4BC7               	infsnz	pick_and_place@i_598& (0+255),f,b
  2873  0002DE  2BC8               	incf	(pick_and_place@i_598+1)& (0+255),f,b
  2874  0002E0                     l4530:
  2875  0002E0  FFFF               	dw	65535	; assembler added errata NOP
  2876                           
  2877                           ; BSR set to: 0
  2878  0002E2  5067               	movf	_Pick_Angle^0,w,c
  2879  0002E4  5C5F               	subwf	_Angle_diff^0,w,c
  2880  0002E6  6E3B               	movwf	??_pick_and_place^0,c
  2881  0002E8  5068               	movf	(_Pick_Angle+1)^0,w,c
  2882  0002EA  5860               	subwfb	(_Angle_diff+1)^0,w,c
  2883  0002EC  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2884  0002EE  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2885  0002F0  EF85  F001         	goto	u5360
  2886  0002F4  503C               	movf	(??_pick_and_place+1)^0,w,c
  2887  0002F6  E106               	bnz	u5361
  2888  0002F8  043B               	decf	??_pick_and_place^0,w,c
  2889  0002FA  B0D8               	btfsc	status,0,c
  2890  0002FC  EF82  F001         	goto	u5361
  2891  000300  EF85  F001         	goto	u5360
  2892  000304                     u5361:
  2893  000304  FFFF               	dw	65535	; assembler added errata NOP
  2894  000306  EF96  F001         	goto	l4534
  2895  00030A                     u5360:
  2896  00030A  FFFF               	dw	65535	; assembler added errata NOP
  2897  00030C                     
  2898                           ; BSR set to: 0
  2899  00030C  5067               	movf	_Pick_Angle^0,w,c
  2900  00030E  5C5F               	subwf	_Angle_diff^0,w,c
  2901  000310  6E3B               	movwf	??_pick_and_place^0,c
  2902  000312  5068               	movf	(_Pick_Angle+1)^0,w,c
  2903  000314  5860               	subwfb	(_Angle_diff+1)^0,w,c
  2904  000316  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2905  000318  1E3B               	comf	??_pick_and_place^0,f,c
  2906  00031A  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2907  00031C  4A3B               	infsnz	??_pick_and_place^0,f,c
  2908  00031E  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2909  000320  C03B  F0C9         	movff	??_pick_and_place,_pick_and_place$600
  2910  000324  C03C  F0CA         	movff	??_pick_and_place+1,_pick_and_place$600+1
  2911  000328  EF9D  F001         	goto	l4536
  2912  00032C                     l4534:
  2913  00032C  FFFF               	dw	65535	; assembler added errata NOP
  2914                           
  2915                           ; BSR set to: 0
  2916  00032E  5067               	movf	_Pick_Angle^0,w,c
  2917  000330  5C5F               	subwf	_Angle_diff^0,w,c
  2918  000332  6FC9               	movwf	_pick_and_place$600& (0+255),b
  2919  000334  5068               	movf	(_Pick_Angle+1)^0,w,c
  2920  000336  5860               	subwfb	(_Angle_diff+1)^0,w,c
  2921  000338  6FCA               	movwf	(_pick_and_place$600+1)& (0+255),b
  2922  00033A                     l4536:
  2923  00033A  FFFF               	dw	65535	; assembler added errata NOP
  2924                           
  2925                           ; BSR set to: 0
  2926  00033C  C0C7  F008         	movff	pick_and_place@i_598,___xxtofl@val
  2927  000340  C0C8  F009         	movff	pick_and_place@i_598+1,___xxtofl@val+1
  2928  000344  0E00               	movlw	0
  2929  000346  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  2930  000348  0EFF               	movlw	-1
  2931  00034A  6E0A               	movwf	(___xxtofl@val+2)^0,c
  2932  00034C  6E0B               	movwf	(___xxtofl@val+3)^0,c
  2933  00034E  0E01               	movlw	1
  2934  000350  EC44  F00E         	call	___xxtofl
  2935  000354  C008  F02F         	movff	?___xxtofl,___flge@ff1
  2936  000358  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
  2937  00035C  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
  2938  000360  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
  2939  000364  0E66               	movlw	102
  2940  000366  6E1A               	movwf	___fldiv@a^0,c
  2941  000368  0E66               	movlw	102
  2942  00036A  6E1B               	movwf	(___fldiv@a+1)^0,c
  2943  00036C  0E66               	movlw	102
  2944  00036E  6E1C               	movwf	(___fldiv@a+2)^0,c
  2945  000370  0E40               	movlw	64
  2946  000372  6E1D               	movwf	(___fldiv@a+3)^0,c
  2947  000374  C0C9  F008         	movff	_pick_and_place$600,___xxtofl@val
  2948  000378  C0CA  F009         	movff	_pick_and_place$600+1,___xxtofl@val+1
  2949  00037C  0E00               	movlw	0
  2950  00037E  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  2951  000380  0EFF               	movlw	-1
  2952  000382  6E0A               	movwf	(___xxtofl@val+2)^0,c
  2953  000384  6E0B               	movwf	(___xxtofl@val+3)^0,c
  2954  000386  0E01               	movlw	1
  2955  000388  EC44  F00E         	call	___xxtofl
  2956  00038C  C008  F016         	movff	?___xxtofl,___fldiv@b
  2957  000390  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  2958  000394  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  2959  000398  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  2960  00039C  EC38  F009         	call	___fldiv	;wreg free
  2961  0003A0  C016  F033         	movff	?___fldiv,___flge@ff2
  2962  0003A4  C017  F034         	movff	?___fldiv+1,___flge@ff2+1
  2963  0003A8  C018  F035         	movff	?___fldiv+2,___flge@ff2+2
  2964  0003AC  C019  F036         	movff	?___fldiv+3,___flge@ff2+3
  2965  0003B0  ECAC  F012         	call	___flge	;wreg free
  2966  0003B4  B0D8               	btfsc	status,0,c
  2967  0003B6  EFDF  F001         	goto	u5371
  2968  0003BA  EFE2  F001         	goto	u5370
  2969  0003BE                     u5371:
  2970  0003BE  FFFF               	dw	65535	; assembler added errata NOP
  2971  0003C0  EFEC  F001         	goto	l4540
  2972  0003C4                     u5370:
  2973  0003C4  FFFF               	dw	65535	; assembler added errata NOP
  2974  0003C6  5075               	movf	_stop^0,w,c
  2975  0003C8  B4D8               	btfsc	status,2,c
  2976  0003CA  EFE9  F001         	goto	u5381
  2977  0003CE  EFEC  F001         	goto	u5380
  2978  0003D2                     u5381:
  2979  0003D2  FFFF               	dw	65535	; assembler added errata NOP
  2980  0003D4  EF69  F001         	goto	l4526
  2981  0003D8                     u5380:
  2982  0003D8                     l4540:
  2983  0003D8  FFFF               	dw	65535	; assembler added errata NOP
  2984                           
  2985                           ;main.c: 580:         for(int i=0; i<3 && !stop; i++){Z_axis(1);}
  2986  0003DA  0E00               	movlw	0
  2987  0003DC  0100               	movlb	0	; () banked
  2988  0003DE  6FCC               	movwf	(pick_and_place@i_601+1)& (0+255),b
  2989  0003E0  0E00               	movlw	0
  2990  0003E2  6FCB               	movwf	pick_and_place@i_601& (0+255),b
  2991  0003E4  EFFB  F001         	goto	l4546
  2992  0003E8                     l4542:
  2993  0003E8  FFFF               	dw	65535	; assembler added errata NOP
  2994                           
  2995                           ; BSR set to: 0
  2996  0003EA  0E01               	movlw	1
  2997  0003EC  ECC5  F013         	call	_Z_axis
  2998  0003F0  0100               	movlb	0	; () banked
  2999  0003F2  4BCB               	infsnz	pick_and_place@i_601& (0+255),f,b
  3000  0003F4  2BCC               	incf	(pick_and_place@i_601+1)& (0+255),f,b
  3001  0003F6                     l4546:
  3002  0003F6  FFFF               	dw	65535	; assembler added errata NOP
  3003                           
  3004                           ; BSR set to: 0
  3005  0003F8  BFCC               	btfsc	(pick_and_place@i_601+1)& (0+255),7,b
  3006  0003FA  EF0B  F002         	goto	u5390
  3007  0003FE  51CC               	movf	(pick_and_place@i_601+1)& (0+255),w,b
  3008  000400  E107               	bnz	u5391
  3009  000402  0E03               	movlw	3
  3010  000404  5DCB               	subwf	pick_and_place@i_601& (0+255),w,b
  3011  000406  B0D8               	btfsc	status,0,c
  3012  000408  EF08  F002         	goto	u5391
  3013  00040C  EF0B  F002         	goto	u5390
  3014  000410                     u5391:
  3015  000410  FFFF               	dw	65535	; assembler added errata NOP
  3016  000412  EF15  F002         	goto	l4550
  3017  000416                     u5390:
  3018  000416  FFFF               	dw	65535	; assembler added errata NOP
  3019  000418                     
  3020                           ; BSR set to: 0
  3021  000418  5075               	movf	_stop^0,w,c
  3022  00041A  B4D8               	btfsc	status,2,c
  3023  00041C  EF12  F002         	goto	u5401
  3024  000420  EF15  F002         	goto	u5400
  3025  000424                     u5401:
  3026  000424  FFFF               	dw	65535	; assembler added errata NOP
  3027  000426  EFF4  F001         	goto	l4542
  3028  00042A                     u5400:
  3029  00042A                     l4550:
  3030  00042A  FFFF               	dw	65535	; assembler added errata NOP
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;main.c: 583:         for(int i=0; i<3 && !stop; i++){Z_axis(0);}
  3034  00042C  0E00               	movlw	0
  3035  00042E  6FCE               	movwf	(pick_and_place@i_603+1)& (0+255),b
  3036  000430  0E00               	movlw	0
  3037  000432  6FCD               	movwf	pick_and_place@i_603& (0+255),b
  3038  000434  EF23  F002         	goto	l4556
  3039  000438                     l4552:
  3040  000438  FFFF               	dw	65535	; assembler added errata NOP
  3041                           
  3042                           ; BSR set to: 0
  3043  00043A  0E00               	movlw	0
  3044  00043C  ECC5  F013         	call	_Z_axis
  3045  000440  0100               	movlb	0	; () banked
  3046  000442  4BCD               	infsnz	pick_and_place@i_603& (0+255),f,b
  3047  000444  2BCE               	incf	(pick_and_place@i_603+1)& (0+255),f,b
  3048  000446                     l4556:
  3049  000446  FFFF               	dw	65535	; assembler added errata NOP
  3050                           
  3051                           ; BSR set to: 0
  3052  000448  BFCE               	btfsc	(pick_and_place@i_603+1)& (0+255),7,b
  3053  00044A  EF33  F002         	goto	u5410
  3054  00044E  51CE               	movf	(pick_and_place@i_603+1)& (0+255),w,b
  3055  000450  E107               	bnz	u5411
  3056  000452  0E03               	movlw	3
  3057  000454  5DCD               	subwf	pick_and_place@i_603& (0+255),w,b
  3058  000456  B0D8               	btfsc	status,0,c
  3059  000458  EF30  F002         	goto	u5411
  3060  00045C  EF33  F002         	goto	u5410
  3061  000460                     u5411:
  3062  000460  FFFF               	dw	65535	; assembler added errata NOP
  3063  000462  EF3D  F002         	goto	l4560
  3064  000466                     u5410:
  3065  000466  FFFF               	dw	65535	; assembler added errata NOP
  3066  000468                     
  3067                           ; BSR set to: 0
  3068  000468  5075               	movf	_stop^0,w,c
  3069  00046A  B4D8               	btfsc	status,2,c
  3070  00046C  EF3A  F002         	goto	u5421
  3071  000470  EF3D  F002         	goto	u5420
  3072  000474                     u5421:
  3073  000474  FFFF               	dw	65535	; assembler added errata NOP
  3074  000476  EF1C  F002         	goto	l4552
  3075  00047A                     u5420:
  3076  00047A                     l4560:
  3077  00047A  FFFF               	dw	65535	; assembler added errata NOP
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;main.c: 587:         X_dir=((X_Pick<X_Place)? 1:0);
  3081  00047C  506D               	movf	_X_Place^0,w,c
  3082  00047E  5C6F               	subwf	_X_Pick^0,w,c
  3083  000480  5070               	movf	(_X_Pick+1)^0,w,c
  3084  000482  0A80               	xorlw	128
  3085  000484  6E3B               	movwf	??_pick_and_place^0,c
  3086  000486  506E               	movf	(_X_Place+1)^0,w,c
  3087  000488  0A80               	xorlw	128
  3088  00048A  583B               	subwfb	??_pick_and_place^0,w,c
  3089  00048C  A0D8               	btfss	status,0,c
  3090  00048E  EF4B  F002         	goto	u5431
  3091  000492  EF4F  F002         	goto	u5430
  3092  000496                     u5431:
  3093  000496  FFFF               	dw	65535	; assembler added errata NOP
  3094  000498  0E01               	movlw	1
  3095  00049A  EF51  F002         	goto	u5440
  3096  00049E                     u5430:
  3097  00049E  FFFF               	dw	65535	; assembler added errata NOP
  3098  0004A0  0E00               	movlw	0
  3099  0004A2                     u5440:
  3100  0004A2  FFFF               	dw	65535	; assembler added errata NOP
  3101  0004A4  6E74               	movwf	_X_dir^0,c
  3102                           
  3103                           ;main.c: 588:         Y_dir=((Y_Pick<Y_Place)? 1:0);
  3104  0004A6  5069               	movf	_Y_Place^0,w,c
  3105  0004A8  5C6B               	subwf	_Y_Pick^0,w,c
  3106  0004AA  506C               	movf	(_Y_Pick+1)^0,w,c
  3107  0004AC  0A80               	xorlw	128
  3108  0004AE  6E3B               	movwf	??_pick_and_place^0,c
  3109  0004B0  506A               	movf	(_Y_Place+1)^0,w,c
  3110  0004B2  0A80               	xorlw	128
  3111  0004B4  583B               	subwfb	??_pick_and_place^0,w,c
  3112  0004B6  A0D8               	btfss	status,0,c
  3113  0004B8  EF60  F002         	goto	u5451
  3114  0004BC  EF64  F002         	goto	u5450
  3115  0004C0                     u5451:
  3116  0004C0  FFFF               	dw	65535	; assembler added errata NOP
  3117  0004C2  0E01               	movlw	1
  3118  0004C4  EF66  F002         	goto	u5460
  3119  0004C8                     u5450:
  3120  0004C8  FFFF               	dw	65535	; assembler added errata NOP
  3121  0004CA  0E00               	movlw	0
  3122  0004CC                     u5460:
  3123  0004CC  FFFF               	dw	65535	; assembler added errata NOP
  3124  0004CE  6E73               	movwf	_Y_dir^0,c
  3125                           
  3126                           ;main.c: 589:         Rot_dir=((Pick_Angle<Place_Angle)? 1:0);
  3127  0004D0  5065               	movf	_Place_Angle^0,w,c
  3128  0004D2  5C67               	subwf	_Pick_Angle^0,w,c
  3129  0004D4  5068               	movf	(_Pick_Angle+1)^0,w,c
  3130  0004D6  0A80               	xorlw	128
  3131  0004D8  6E3B               	movwf	??_pick_and_place^0,c
  3132  0004DA  5066               	movf	(_Place_Angle+1)^0,w,c
  3133  0004DC  0A80               	xorlw	128
  3134  0004DE  583B               	subwfb	??_pick_and_place^0,w,c
  3135  0004E0  A0D8               	btfss	status,0,c
  3136  0004E2  EF75  F002         	goto	u5471
  3137  0004E6  EF79  F002         	goto	u5470
  3138  0004EA                     u5471:
  3139  0004EA  FFFF               	dw	65535	; assembler added errata NOP
  3140  0004EC  0E01               	movlw	1
  3141  0004EE  EF7B  F002         	goto	u5480
  3142  0004F2                     u5470:
  3143  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  3144  0004F4  0E00               	movlw	0
  3145  0004F6                     u5480:
  3146  0004F6  FFFF               	dw	65535	; assembler added errata NOP
  3147  0004F8  6E72               	movwf	_Rot_dir^0,c
  3148  0004FA                     
  3149                           ; BSR set to: 0
  3150                           ;main.c: 591:         for(int i = 0; (i<(((X_Place-X_Pick) > 0 ? (X_Place-X_Pick) : -(X_
      +                          Place-X_Pick)))) && !stop; i++){X_axis(X_dir);}
  3151  0004FA  0E00               	movlw	0
  3152  0004FC  6FD0               	movwf	(pick_and_place@i_604+1)& (0+255),b
  3153  0004FE  0E00               	movlw	0
  3154  000500  6FCF               	movwf	pick_and_place@i_604& (0+255),b
  3155  000502  EF8A  F002         	goto	l4568
  3156  000506                     l4564:
  3157  000506  FFFF               	dw	65535	; assembler added errata NOP
  3158                           
  3159                           ; BSR set to: 0
  3160  000508  5074               	movf	_X_dir^0,w,c
  3161  00050A  ECC5  F014         	call	_X_axis
  3162  00050E  0100               	movlb	0	; () banked
  3163  000510  4BCF               	infsnz	pick_and_place@i_604& (0+255),f,b
  3164  000512  2BD0               	incf	(pick_and_place@i_604+1)& (0+255),f,b
  3165  000514                     l4568:
  3166  000514  FFFF               	dw	65535	; assembler added errata NOP
  3167                           
  3168                           ; BSR set to: 0
  3169  000516  506F               	movf	_X_Pick^0,w,c
  3170  000518  5C6D               	subwf	_X_Place^0,w,c
  3171  00051A  6E3B               	movwf	??_pick_and_place^0,c
  3172  00051C  5070               	movf	(_X_Pick+1)^0,w,c
  3173  00051E  586E               	subwfb	(_X_Place+1)^0,w,c
  3174  000520  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3175  000522  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3176  000524  EF9F  F002         	goto	u5490
  3177  000528  503C               	movf	(??_pick_and_place+1)^0,w,c
  3178  00052A  E106               	bnz	u5491
  3179  00052C  043B               	decf	??_pick_and_place^0,w,c
  3180  00052E  B0D8               	btfsc	status,0,c
  3181  000530  EF9C  F002         	goto	u5491
  3182  000534  EF9F  F002         	goto	u5490
  3183  000538                     u5491:
  3184  000538  FFFF               	dw	65535	; assembler added errata NOP
  3185  00053A  EFB0  F002         	goto	l4572
  3186  00053E                     u5490:
  3187  00053E  FFFF               	dw	65535	; assembler added errata NOP
  3188  000540                     
  3189                           ; BSR set to: 0
  3190  000540  506F               	movf	_X_Pick^0,w,c
  3191  000542  5C6D               	subwf	_X_Place^0,w,c
  3192  000544  6E3B               	movwf	??_pick_and_place^0,c
  3193  000546  5070               	movf	(_X_Pick+1)^0,w,c
  3194  000548  586E               	subwfb	(_X_Place+1)^0,w,c
  3195  00054A  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3196  00054C  1E3B               	comf	??_pick_and_place^0,f,c
  3197  00054E  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3198  000550  4A3B               	infsnz	??_pick_and_place^0,f,c
  3199  000552  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3200  000554  C03B  F0D1         	movff	??_pick_and_place,_pick_and_place$605
  3201  000558  C03C  F0D2         	movff	??_pick_and_place+1,_pick_and_place$605+1
  3202  00055C  EFB7  F002         	goto	l371
  3203  000560                     l4572:
  3204  000560  FFFF               	dw	65535	; assembler added errata NOP
  3205                           
  3206                           ; BSR set to: 0
  3207  000562  506F               	movf	_X_Pick^0,w,c
  3208  000564  5C6D               	subwf	_X_Place^0,w,c
  3209  000566  6FD1               	movwf	_pick_and_place$605& (0+255),b
  3210  000568  5070               	movf	(_X_Pick+1)^0,w,c
  3211  00056A  586E               	subwfb	(_X_Place+1)^0,w,c
  3212  00056C  6FD2               	movwf	(_pick_and_place$605+1)& (0+255),b
  3213  00056E                     l371:
  3214  00056E  FFFF               	dw	65535	; assembler added errata NOP
  3215                           
  3216                           ; BSR set to: 0
  3217  000570  51D1               	movf	_pick_and_place$605& (0+255),w,b
  3218  000572  5DCF               	subwf	pick_and_place@i_604& (0+255),w,b
  3219  000574  51D0               	movf	(pick_and_place@i_604+1)& (0+255),w,b
  3220  000576  0A80               	xorlw	128
  3221  000578  6E3B               	movwf	??_pick_and_place^0,c
  3222  00057A  51D2               	movf	(_pick_and_place$605+1)& (0+255),w,b
  3223  00057C  0A80               	xorlw	128
  3224  00057E  583B               	subwfb	??_pick_and_place^0,w,c
  3225  000580  B0D8               	btfsc	status,0,c
  3226  000582  EFC5  F002         	goto	u5501
  3227  000586  EFC8  F002         	goto	u5500
  3228  00058A                     u5501:
  3229  00058A  FFFF               	dw	65535	; assembler added errata NOP
  3230  00058C  EFD2  F002         	goto	l4576
  3231  000590                     u5500:
  3232  000590  FFFF               	dw	65535	; assembler added errata NOP
  3233  000592                     
  3234                           ; BSR set to: 0
  3235  000592  5075               	movf	_stop^0,w,c
  3236  000594  B4D8               	btfsc	status,2,c
  3237  000596  EFCF  F002         	goto	u5511
  3238  00059A  EFD2  F002         	goto	u5510
  3239  00059E                     u5511:
  3240  00059E  FFFF               	dw	65535	; assembler added errata NOP
  3241  0005A0  EF83  F002         	goto	l4564
  3242  0005A4                     u5510:
  3243  0005A4                     l4576:
  3244  0005A4  FFFF               	dw	65535	; assembler added errata NOP
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;main.c: 592:         for(int i = 0; (i<(((Y_Place-Y_Pick) > 0 ? (Y_Place-Y_Pick) : -(Y_
      +                          Place-Y_Pick)))) && !stop; i++){Y_axis(Y_dir);}
  3248  0005A6  0E00               	movlw	0
  3249  0005A8  6FD4               	movwf	(pick_and_place@i_606+1)& (0+255),b
  3250  0005AA  0E00               	movlw	0
  3251  0005AC  6FD3               	movwf	pick_and_place@i_606& (0+255),b
  3252  0005AE  EFE0  F002         	goto	l4582
  3253  0005B2                     l4578:
  3254  0005B2  FFFF               	dw	65535	; assembler added errata NOP
  3255                           
  3256                           ; BSR set to: 0
  3257  0005B4  5073               	movf	_Y_dir^0,w,c
  3258  0005B6  EC45  F014         	call	_Y_axis
  3259  0005BA  0100               	movlb	0	; () banked
  3260  0005BC  4BD3               	infsnz	pick_and_place@i_606& (0+255),f,b
  3261  0005BE  2BD4               	incf	(pick_and_place@i_606+1)& (0+255),f,b
  3262  0005C0                     l4582:
  3263  0005C0  FFFF               	dw	65535	; assembler added errata NOP
  3264                           
  3265                           ; BSR set to: 0
  3266  0005C2  506B               	movf	_Y_Pick^0,w,c
  3267  0005C4  5C69               	subwf	_Y_Place^0,w,c
  3268  0005C6  6E3B               	movwf	??_pick_and_place^0,c
  3269  0005C8  506C               	movf	(_Y_Pick+1)^0,w,c
  3270  0005CA  586A               	subwfb	(_Y_Place+1)^0,w,c
  3271  0005CC  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3272  0005CE  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3273  0005D0  EFF5  F002         	goto	u5520
  3274  0005D4  503C               	movf	(??_pick_and_place+1)^0,w,c
  3275  0005D6  E106               	bnz	u5521
  3276  0005D8  043B               	decf	??_pick_and_place^0,w,c
  3277  0005DA  B0D8               	btfsc	status,0,c
  3278  0005DC  EFF2  F002         	goto	u5521
  3279  0005E0  EFF5  F002         	goto	u5520
  3280  0005E4                     u5521:
  3281  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  3282  0005E6  EF06  F003         	goto	l4586
  3283  0005EA                     u5520:
  3284  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  3285  0005EC                     
  3286                           ; BSR set to: 0
  3287  0005EC  506B               	movf	_Y_Pick^0,w,c
  3288  0005EE  5C69               	subwf	_Y_Place^0,w,c
  3289  0005F0  6E3B               	movwf	??_pick_and_place^0,c
  3290  0005F2  506C               	movf	(_Y_Pick+1)^0,w,c
  3291  0005F4  586A               	subwfb	(_Y_Place+1)^0,w,c
  3292  0005F6  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3293  0005F8  1E3B               	comf	??_pick_and_place^0,f,c
  3294  0005FA  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3295  0005FC  4A3B               	infsnz	??_pick_and_place^0,f,c
  3296  0005FE  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3297  000600  C03B  F0D5         	movff	??_pick_and_place,_pick_and_place$607
  3298  000604  C03C  F0D6         	movff	??_pick_and_place+1,_pick_and_place$607+1
  3299  000608  EF0D  F003         	goto	l380
  3300  00060C                     l4586:
  3301  00060C  FFFF               	dw	65535	; assembler added errata NOP
  3302                           
  3303                           ; BSR set to: 0
  3304  00060E  506B               	movf	_Y_Pick^0,w,c
  3305  000610  5C69               	subwf	_Y_Place^0,w,c
  3306  000612  6FD5               	movwf	_pick_and_place$607& (0+255),b
  3307  000614  506C               	movf	(_Y_Pick+1)^0,w,c
  3308  000616  586A               	subwfb	(_Y_Place+1)^0,w,c
  3309  000618  6FD6               	movwf	(_pick_and_place$607+1)& (0+255),b
  3310  00061A                     l380:
  3311  00061A  FFFF               	dw	65535	; assembler added errata NOP
  3312                           
  3313                           ; BSR set to: 0
  3314  00061C  51D5               	movf	_pick_and_place$607& (0+255),w,b
  3315  00061E  5DD3               	subwf	pick_and_place@i_606& (0+255),w,b
  3316  000620  51D4               	movf	(pick_and_place@i_606+1)& (0+255),w,b
  3317  000622  0A80               	xorlw	128
  3318  000624  6E3B               	movwf	??_pick_and_place^0,c
  3319  000626  51D6               	movf	(_pick_and_place$607+1)& (0+255),w,b
  3320  000628  0A80               	xorlw	128
  3321  00062A  583B               	subwfb	??_pick_and_place^0,w,c
  3322  00062C  B0D8               	btfsc	status,0,c
  3323  00062E  EF1B  F003         	goto	u5531
  3324  000632  EF1E  F003         	goto	u5530
  3325  000636                     u5531:
  3326  000636  FFFF               	dw	65535	; assembler added errata NOP
  3327  000638  EF28  F003         	goto	l4590
  3328  00063C                     u5530:
  3329  00063C  FFFF               	dw	65535	; assembler added errata NOP
  3330  00063E                     
  3331                           ; BSR set to: 0
  3332  00063E  5075               	movf	_stop^0,w,c
  3333  000640  B4D8               	btfsc	status,2,c
  3334  000642  EF25  F003         	goto	u5541
  3335  000646  EF28  F003         	goto	u5540
  3336  00064A                     u5541:
  3337  00064A  FFFF               	dw	65535	; assembler added errata NOP
  3338  00064C  EFD9  F002         	goto	l4578
  3339  000650                     u5540:
  3340  000650                     l4590:
  3341  000650  FFFF               	dw	65535	; assembler added errata NOP
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;main.c: 593:         for(int i = 0; (i<(((Pick_Angle-Place_Angle) > 0 ? (Pick_Angle-Pla
      +                          ce_Angle) : -(Pick_Angle-Place_Angle))/3.6)) && !stop; i++){Twister(Rot_dir);}
  3345  000652  0E00               	movlw	0
  3346  000654  6FD8               	movwf	(pick_and_place@i_608+1)& (0+255),b
  3347  000656  0E00               	movlw	0
  3348  000658  6FD7               	movwf	pick_and_place@i_608& (0+255),b
  3349  00065A  EF36  F003         	goto	l4596
  3350  00065E                     l4592:
  3351  00065E  FFFF               	dw	65535	; assembler added errata NOP
  3352  000660  5072               	movf	_Rot_dir^0,w,c
  3353  000662  ECC2  F015         	call	_Twister
  3354  000666  0100               	movlb	0	; () banked
  3355  000668  4BD7               	infsnz	pick_and_place@i_608& (0+255),f,b
  3356  00066A  2BD8               	incf	(pick_and_place@i_608+1)& (0+255),f,b
  3357  00066C                     l4596:
  3358  00066C  FFFF               	dw	65535	; assembler added errata NOP
  3359                           
  3360                           ; BSR set to: 0
  3361  00066E  5065               	movf	_Place_Angle^0,w,c
  3362  000670  5C67               	subwf	_Pick_Angle^0,w,c
  3363  000672  6E3B               	movwf	??_pick_and_place^0,c
  3364  000674  5066               	movf	(_Place_Angle+1)^0,w,c
  3365  000676  5868               	subwfb	(_Pick_Angle+1)^0,w,c
  3366  000678  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3367  00067A  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3368  00067C  EF4B  F003         	goto	u5550
  3369  000680  503C               	movf	(??_pick_and_place+1)^0,w,c
  3370  000682  E106               	bnz	u5551
  3371  000684  043B               	decf	??_pick_and_place^0,w,c
  3372  000686  B0D8               	btfsc	status,0,c
  3373  000688  EF48  F003         	goto	u5551
  3374  00068C  EF4B  F003         	goto	u5550
  3375  000690                     u5551:
  3376  000690  FFFF               	dw	65535	; assembler added errata NOP
  3377  000692  EF5C  F003         	goto	l4600
  3378  000696                     u5550:
  3379  000696  FFFF               	dw	65535	; assembler added errata NOP
  3380  000698                     
  3381                           ; BSR set to: 0
  3382  000698  5065               	movf	_Place_Angle^0,w,c
  3383  00069A  5C67               	subwf	_Pick_Angle^0,w,c
  3384  00069C  6E3B               	movwf	??_pick_and_place^0,c
  3385  00069E  5066               	movf	(_Place_Angle+1)^0,w,c
  3386  0006A0  5868               	subwfb	(_Pick_Angle+1)^0,w,c
  3387  0006A2  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3388  0006A4  1E3B               	comf	??_pick_and_place^0,f,c
  3389  0006A6  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3390  0006A8  4A3B               	infsnz	??_pick_and_place^0,f,c
  3391  0006AA  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3392  0006AC  C03B  F0D9         	movff	??_pick_and_place,_pick_and_place$609
  3393  0006B0  C03C  F0DA         	movff	??_pick_and_place+1,_pick_and_place$609+1
  3394  0006B4  EF63  F003         	goto	l4602
  3395  0006B8                     l4600:
  3396  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  3397                           
  3398                           ; BSR set to: 0
  3399  0006BA  5065               	movf	_Place_Angle^0,w,c
  3400  0006BC  5C67               	subwf	_Pick_Angle^0,w,c
  3401  0006BE  6FD9               	movwf	_pick_and_place$609& (0+255),b
  3402  0006C0  5066               	movf	(_Place_Angle+1)^0,w,c
  3403  0006C2  5868               	subwfb	(_Pick_Angle+1)^0,w,c
  3404  0006C4  6FDA               	movwf	(_pick_and_place$609+1)& (0+255),b
  3405  0006C6                     l4602:
  3406  0006C6  FFFF               	dw	65535	; assembler added errata NOP
  3407                           
  3408                           ; BSR set to: 0
  3409  0006C8  C0D7  F008         	movff	pick_and_place@i_608,___xxtofl@val
  3410  0006CC  C0D8  F009         	movff	pick_and_place@i_608+1,___xxtofl@val+1
  3411  0006D0  0E00               	movlw	0
  3412  0006D2  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3413  0006D4  0EFF               	movlw	-1
  3414  0006D6  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3415  0006D8  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3416  0006DA  0E01               	movlw	1
  3417  0006DC  EC44  F00E         	call	___xxtofl
  3418  0006E0  C008  F02F         	movff	?___xxtofl,___flge@ff1
  3419  0006E4  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
  3420  0006E8  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
  3421  0006EC  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
  3422  0006F0  0E66               	movlw	102
  3423  0006F2  6E1A               	movwf	___fldiv@a^0,c
  3424  0006F4  0E66               	movlw	102
  3425  0006F6  6E1B               	movwf	(___fldiv@a+1)^0,c
  3426  0006F8  0E66               	movlw	102
  3427  0006FA  6E1C               	movwf	(___fldiv@a+2)^0,c
  3428  0006FC  0E40               	movlw	64
  3429  0006FE  6E1D               	movwf	(___fldiv@a+3)^0,c
  3430  000700  C0D9  F008         	movff	_pick_and_place$609,___xxtofl@val
  3431  000704  C0DA  F009         	movff	_pick_and_place$609+1,___xxtofl@val+1
  3432  000708  0E00               	movlw	0
  3433  00070A  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3434  00070C  0EFF               	movlw	-1
  3435  00070E  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3436  000710  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3437  000712  0E01               	movlw	1
  3438  000714  EC44  F00E         	call	___xxtofl
  3439  000718  C008  F016         	movff	?___xxtofl,___fldiv@b
  3440  00071C  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  3441  000720  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  3442  000724  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  3443  000728  EC38  F009         	call	___fldiv	;wreg free
  3444  00072C  C016  F033         	movff	?___fldiv,___flge@ff2
  3445  000730  C017  F034         	movff	?___fldiv+1,___flge@ff2+1
  3446  000734  C018  F035         	movff	?___fldiv+2,___flge@ff2+2
  3447  000738  C019  F036         	movff	?___fldiv+3,___flge@ff2+3
  3448  00073C  ECAC  F012         	call	___flge	;wreg free
  3449  000740  B0D8               	btfsc	status,0,c
  3450  000742  EFA5  F003         	goto	u5561
  3451  000746  EFA8  F003         	goto	u5560
  3452  00074A                     u5561:
  3453  00074A  FFFF               	dw	65535	; assembler added errata NOP
  3454  00074C  EFB2  F003         	goto	l4606
  3455  000750                     u5560:
  3456  000750  FFFF               	dw	65535	; assembler added errata NOP
  3457  000752  5075               	movf	_stop^0,w,c
  3458  000754  B4D8               	btfsc	status,2,c
  3459  000756  EFAF  F003         	goto	u5571
  3460  00075A  EFB2  F003         	goto	u5570
  3461  00075E                     u5571:
  3462  00075E  FFFF               	dw	65535	; assembler added errata NOP
  3463  000760  EF2F  F003         	goto	l4592
  3464  000764                     u5570:
  3465  000764                     l4606:
  3466  000764  FFFF               	dw	65535	; assembler added errata NOP
  3467                           
  3468                           ;main.c: 594:         for(int i=0; i<3 && !stop; i++){Z_axis(1);}
  3469  000766  0E00               	movlw	0
  3470  000768  0100               	movlb	0	; () banked
  3471  00076A  6FDC               	movwf	(pick_and_place@i_610+1)& (0+255),b
  3472  00076C  0E00               	movlw	0
  3473  00076E  6FDB               	movwf	pick_and_place@i_610& (0+255),b
  3474  000770  EFC1  F003         	goto	l4612
  3475  000774                     l4608:
  3476  000774  FFFF               	dw	65535	; assembler added errata NOP
  3477                           
  3478                           ; BSR set to: 0
  3479  000776  0E01               	movlw	1
  3480  000778  ECC5  F013         	call	_Z_axis
  3481  00077C  0100               	movlb	0	; () banked
  3482  00077E  4BDB               	infsnz	pick_and_place@i_610& (0+255),f,b
  3483  000780  2BDC               	incf	(pick_and_place@i_610+1)& (0+255),f,b
  3484  000782                     l4612:
  3485  000782  FFFF               	dw	65535	; assembler added errata NOP
  3486                           
  3487                           ; BSR set to: 0
  3488  000784  BFDC               	btfsc	(pick_and_place@i_610+1)& (0+255),7,b
  3489  000786  EFD1  F003         	goto	u5580
  3490  00078A  51DC               	movf	(pick_and_place@i_610+1)& (0+255),w,b
  3491  00078C  E107               	bnz	u5581
  3492  00078E  0E03               	movlw	3
  3493  000790  5DDB               	subwf	pick_and_place@i_610& (0+255),w,b
  3494  000792  B0D8               	btfsc	status,0,c
  3495  000794  EFCE  F003         	goto	u5581
  3496  000798  EFD1  F003         	goto	u5580
  3497  00079C                     u5581:
  3498  00079C  FFFF               	dw	65535	; assembler added errata NOP
  3499  00079E  EFDB  F003         	goto	l4616
  3500  0007A2                     u5580:
  3501  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  3502  0007A4                     
  3503                           ; BSR set to: 0
  3504  0007A4  5075               	movf	_stop^0,w,c
  3505  0007A6  B4D8               	btfsc	status,2,c
  3506  0007A8  EFD8  F003         	goto	u5591
  3507  0007AC  EFDB  F003         	goto	u5590
  3508  0007B0                     u5591:
  3509  0007B0  FFFF               	dw	65535	; assembler added errata NOP
  3510  0007B2  EFBA  F003         	goto	l4608
  3511  0007B6                     u5590:
  3512  0007B6                     l4616:
  3513  0007B6  FFFF               	dw	65535	; assembler added errata NOP
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;main.c: 597:         for(int i=0; i<3 && !stop; i++){Z_axis(0);}
  3517  0007B8  0E00               	movlw	0
  3518  0007BA  6FDE               	movwf	(pick_and_place@i_611+1)& (0+255),b
  3519  0007BC  0E00               	movlw	0
  3520  0007BE  6FDD               	movwf	pick_and_place@i_611& (0+255),b
  3521  0007C0  EFE9  F003         	goto	l4622
  3522  0007C4                     l4618:
  3523  0007C4  FFFF               	dw	65535	; assembler added errata NOP
  3524                           
  3525                           ; BSR set to: 0
  3526  0007C6  0E00               	movlw	0
  3527  0007C8  ECC5  F013         	call	_Z_axis
  3528  0007CC  0100               	movlb	0	; () banked
  3529  0007CE  4BDD               	infsnz	pick_and_place@i_611& (0+255),f,b
  3530  0007D0  2BDE               	incf	(pick_and_place@i_611+1)& (0+255),f,b
  3531  0007D2                     l4622:
  3532  0007D2  FFFF               	dw	65535	; assembler added errata NOP
  3533                           
  3534                           ; BSR set to: 0
  3535  0007D4  BFDE               	btfsc	(pick_and_place@i_611+1)& (0+255),7,b
  3536  0007D6  EFF9  F003         	goto	u5600
  3537  0007DA  51DE               	movf	(pick_and_place@i_611+1)& (0+255),w,b
  3538  0007DC  E107               	bnz	u5601
  3539  0007DE  0E03               	movlw	3
  3540  0007E0  5DDD               	subwf	pick_and_place@i_611& (0+255),w,b
  3541  0007E2  B0D8               	btfsc	status,0,c
  3542  0007E4  EFF6  F003         	goto	u5601
  3543  0007E8  EFF9  F003         	goto	u5600
  3544  0007EC                     u5601:
  3545  0007EC  FFFF               	dw	65535	; assembler added errata NOP
  3546  0007EE  EF03  F004         	goto	l400
  3547  0007F2                     u5600:
  3548  0007F2  FFFF               	dw	65535	; assembler added errata NOP
  3549  0007F4                     
  3550                           ; BSR set to: 0
  3551  0007F4  5075               	movf	_stop^0,w,c
  3552  0007F6  B4D8               	btfsc	status,2,c
  3553  0007F8  EF00  F004         	goto	u5611
  3554  0007FC  EF03  F004         	goto	u5610
  3555  000800                     u5611:
  3556  000800  FFFF               	dw	65535	; assembler added errata NOP
  3557  000802  EFE2  F003         	goto	l4618
  3558  000806                     u5610:
  3559  000806                     l400:
  3560  000806  FFFF               	dw	65535	; assembler added errata NOP
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;main.c: 599:         Angle_diff= Place_Angle;
  3564  000808  C065  F05F         	movff	_Place_Angle,_Angle_diff
  3565  00080C  C066  F060         	movff	_Place_Angle+1,_Angle_diff+1
  3566                           
  3567                           ;main.c: 600:         X_diff = X_Place;
  3568  000810  C06D  F063         	movff	_X_Place,_X_diff
  3569  000814  C06E  F064         	movff	_X_Place+1,_X_diff+1
  3570                           
  3571                           ;main.c: 601:         Y_diff = Y_Place;
  3572  000818  C069  F061         	movff	_Y_Place,_Y_diff
  3573  00081C  C06A  F062         	movff	_Y_Place+1,_Y_diff+1
  3574  000820                     
  3575                           ; BSR set to: 0
  3576  000820  0012               	return		;funcret
  3577  000822  FFFF               	dw	65535	; errata NOP
  3578  000824                     __end_of_pick_and_place:
  3579                           	callstack 0
  3580                           
  3581 ;; *************** function _fetch_parameters *****************
  3582 ;; Defined at:
  3583 ;;		line 523 in file "main.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  Componnt        1    wreg     unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  Componnt        1    7[COMRAM] unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  2  316[None  ] int 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3597 ;;      Params:         0       0       0       0       0       0       0
  3598 ;;      Locals:         1       0       0       0       0       0       0
  3599 ;;      Temps:          0       0       0       0       0       0       0
  3600 ;;      Totals:         1       0       0       0       0       0       0
  3601 ;;Total ram usage:        1 bytes
  3602 ;; Hardware stack levels used: 1
  3603 ;; Hardware stack levels required when called: 1
  3604 ;; This function calls:
  3605 ;;		Nothing
  3606 ;; This function is called by:
  3607 ;;		_pick_and_place
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text8
  3612  0021B6                     __ptext8:
  3613                           	callstack 0
  3614  0021B6                     _fetch_parameters:
  3615                           	callstack 0
  3616  0021B6  FFFF               	dw	65535	; assembler added errata NOP
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;incstack = 0
  3620                           ;fetch_parameters@Componnt stored from wreg
  3621  0021B8  6E08               	movwf	fetch_parameters@Componnt^0,c
  3622  0021BA                     
  3623                           ;main.c: 524:     if(Componnt=='A')
  3624  0021BA  0E41               	movlw	65
  3625  0021BC  1808               	xorwf	fetch_parameters@Componnt^0,w,c
  3626  0021BE  A4D8               	btfss	status,2,c
  3627  0021C0  EFE4  F010         	goto	u4681
  3628  0021C4  EFE7  F010         	goto	u4680
  3629  0021C8                     u4681:
  3630  0021C8  FFFF               	dw	65535	; assembler added errata NOP
  3631  0021CA  EF02  F011         	goto	l4200
  3632  0021CE                     u4680:
  3633  0021CE  FFFF               	dw	65535	; assembler added errata NOP
  3634  0021D0                     
  3635                           ;main.c: 525:         {;main.c: 526:             X_Pick=3;
  3636  0021D0  0E00               	movlw	0
  3637  0021D2  6E70               	movwf	(_X_Pick+1)^0,c
  3638  0021D4  0E03               	movlw	3
  3639  0021D6  6E6F               	movwf	_X_Pick^0,c
  3640                           
  3641                           ;main.c: 527:             Y_Pick=4;
  3642  0021D8  0E00               	movlw	0
  3643  0021DA  6E6C               	movwf	(_Y_Pick+1)^0,c
  3644  0021DC  0E04               	movlw	4
  3645  0021DE  6E6B               	movwf	_Y_Pick^0,c
  3646                           
  3647                           ;main.c: 528:             Pick_Angle=0;
  3648  0021E0  0E00               	movlw	0
  3649  0021E2  6E68               	movwf	(_Pick_Angle+1)^0,c
  3650  0021E4  0E00               	movlw	0
  3651  0021E6  6E67               	movwf	_Pick_Angle^0,c
  3652                           
  3653                           ;main.c: 530:             X_Place=17;
  3654  0021E8  0E00               	movlw	0
  3655  0021EA  6E6E               	movwf	(_X_Place+1)^0,c
  3656  0021EC  0E11               	movlw	17
  3657  0021EE  6E6D               	movwf	_X_Place^0,c
  3658                           
  3659                           ;main.c: 531:             Y_Place=5;
  3660  0021F0  0E00               	movlw	0
  3661  0021F2  6E6A               	movwf	(_Y_Place+1)^0,c
  3662  0021F4  0E05               	movlw	5
  3663  0021F6  6E69               	movwf	_Y_Place^0,c
  3664                           
  3665                           ;main.c: 532:             Place_Angle=270;
  3666  0021F8  0E01               	movlw	1
  3667  0021FA  6E66               	movwf	(_Place_Angle+1)^0,c
  3668  0021FC  0E0E               	movlw	14
  3669  0021FE  6E65               	movwf	_Place_Angle^0,c
  3670                           
  3671                           ;main.c: 533:         }
  3672  002200  EF74  F011         	goto	l324
  3673  002204                     l4200:
  3674  002204  FFFF               	dw	65535	; assembler added errata NOP
  3675  002206  0E42               	movlw	66
  3676  002208  1808               	xorwf	fetch_parameters@Componnt^0,w,c
  3677  00220A  A4D8               	btfss	status,2,c
  3678  00220C  EF0A  F011         	goto	u4691
  3679  002210  EF0D  F011         	goto	u4690
  3680  002214                     u4691:
  3681  002214  FFFF               	dw	65535	; assembler added errata NOP
  3682  002216  EF28  F011         	goto	l4204
  3683  00221A                     u4690:
  3684  00221A  FFFF               	dw	65535	; assembler added errata NOP
  3685  00221C                     
  3686                           ;main.c: 535:             X_Pick=3;
  3687  00221C  0E00               	movlw	0
  3688  00221E  6E70               	movwf	(_X_Pick+1)^0,c
  3689  002220  0E03               	movlw	3
  3690  002222  6E6F               	movwf	_X_Pick^0,c
  3691                           
  3692                           ;main.c: 536:             Y_Pick=10;
  3693  002224  0E00               	movlw	0
  3694  002226  6E6C               	movwf	(_Y_Pick+1)^0,c
  3695  002228  0E0A               	movlw	10
  3696  00222A  6E6B               	movwf	_Y_Pick^0,c
  3697                           
  3698                           ;main.c: 537:             Pick_Angle=90;
  3699  00222C  0E00               	movlw	0
  3700  00222E  6E68               	movwf	(_Pick_Angle+1)^0,c
  3701  002230  0E5A               	movlw	90
  3702  002232  6E67               	movwf	_Pick_Angle^0,c
  3703                           
  3704                           ;main.c: 539:             X_Place=10;
  3705  002234  0E00               	movlw	0
  3706  002236  6E6E               	movwf	(_X_Place+1)^0,c
  3707  002238  0E0A               	movlw	10
  3708  00223A  6E6D               	movwf	_X_Place^0,c
  3709                           
  3710                           ;main.c: 540:              Y_Place=5;
  3711  00223C  0E00               	movlw	0
  3712  00223E  6E6A               	movwf	(_Y_Place+1)^0,c
  3713  002240  0E05               	movlw	5
  3714  002242  6E69               	movwf	_Y_Place^0,c
  3715                           
  3716                           ;main.c: 541:             Place_Angle=180;
  3717  002244  0E00               	movlw	0
  3718  002246  6E66               	movwf	(_Place_Angle+1)^0,c
  3719  002248  0EB4               	movlw	180
  3720  00224A  6E65               	movwf	_Place_Angle^0,c
  3721                           
  3722                           ;main.c: 542:         }
  3723  00224C  EF74  F011         	goto	l324
  3724  002250                     l4204:
  3725  002250  FFFF               	dw	65535	; assembler added errata NOP
  3726  002252  0E43               	movlw	67
  3727  002254  1808               	xorwf	fetch_parameters@Componnt^0,w,c
  3728  002256  A4D8               	btfss	status,2,c
  3729  002258  EF30  F011         	goto	u4701
  3730  00225C  EF33  F011         	goto	u4700
  3731  002260                     u4701:
  3732  002260  FFFF               	dw	65535	; assembler added errata NOP
  3733  002262  EF4E  F011         	goto	l4208
  3734  002266                     u4700:
  3735  002266  FFFF               	dw	65535	; assembler added errata NOP
  3736  002268                     
  3737                           ;main.c: 544:             X_Pick=3;
  3738  002268  0E00               	movlw	0
  3739  00226A  6E70               	movwf	(_X_Pick+1)^0,c
  3740  00226C  0E03               	movlw	3
  3741  00226E  6E6F               	movwf	_X_Pick^0,c
  3742                           
  3743                           ;main.c: 545:             Y_Pick=15;
  3744  002270  0E00               	movlw	0
  3745  002272  6E6C               	movwf	(_Y_Pick+1)^0,c
  3746  002274  0E0F               	movlw	15
  3747  002276  6E6B               	movwf	_Y_Pick^0,c
  3748                           
  3749                           ;main.c: 546:             Pick_Angle=90;
  3750  002278  0E00               	movlw	0
  3751  00227A  6E68               	movwf	(_Pick_Angle+1)^0,c
  3752  00227C  0E5A               	movlw	90
  3753  00227E  6E67               	movwf	_Pick_Angle^0,c
  3754                           
  3755                           ;main.c: 548:             X_Place=16;
  3756  002280  0E00               	movlw	0
  3757  002282  6E6E               	movwf	(_X_Place+1)^0,c
  3758  002284  0E10               	movlw	16
  3759  002286  6E6D               	movwf	_X_Place^0,c
  3760                           
  3761                           ;main.c: 549:             Y_Place=14;
  3762  002288  0E00               	movlw	0
  3763  00228A  6E6A               	movwf	(_Y_Place+1)^0,c
  3764  00228C  0E0E               	movlw	14
  3765  00228E  6E69               	movwf	_Y_Place^0,c
  3766                           
  3767                           ;main.c: 550:             Place_Angle=270;
  3768  002290  0E01               	movlw	1
  3769  002292  6E66               	movwf	(_Place_Angle+1)^0,c
  3770  002294  0E0E               	movlw	14
  3771  002296  6E65               	movwf	_Place_Angle^0,c
  3772                           
  3773                           ;main.c: 551:         }
  3774  002298  EF74  F011         	goto	l324
  3775  00229C                     l4208:
  3776  00229C  FFFF               	dw	65535	; assembler added errata NOP
  3777  00229E  0E44               	movlw	68
  3778  0022A0  1808               	xorwf	fetch_parameters@Componnt^0,w,c
  3779  0022A2  A4D8               	btfss	status,2,c
  3780  0022A4  EF56  F011         	goto	u4711
  3781  0022A8  EF59  F011         	goto	u4710
  3782  0022AC                     u4711:
  3783  0022AC  FFFF               	dw	65535	; assembler added errata NOP
  3784  0022AE  EF74  F011         	goto	l320
  3785  0022B2                     u4710:
  3786  0022B2  FFFF               	dw	65535	; assembler added errata NOP
  3787  0022B4                     
  3788                           ;main.c: 553:             X_Pick=X_Pick_D;
  3789  0022B4  C0AE  F06F         	movff	_X_Pick_D,_X_Pick
  3790  0022B8  C0AF  F070         	movff	_X_Pick_D+1,_X_Pick+1
  3791                           
  3792                           ;main.c: 554:             Y_Pick=Y_Pick_D;
  3793  0022BC  C0AC  F06B         	movff	_Y_Pick_D,_Y_Pick
  3794  0022C0  C0AD  F06C         	movff	_Y_Pick_D+1,_Y_Pick+1
  3795                           
  3796                           ;main.c: 555:             Pick_Angle=Pick_Angle_D;
  3797  0022C4  C0AA  F067         	movff	_Pick_Angle_D,_Pick_Angle
  3798  0022C8  C0AB  F068         	movff	_Pick_Angle_D+1,_Pick_Angle+1
  3799                           
  3800                           ;main.c: 557:             X_Place=X_Place_D;
  3801  0022CC  C0A8  F06D         	movff	_X_Place_D,_X_Place
  3802  0022D0  C0A9  F06E         	movff	_X_Place_D+1,_X_Place+1
  3803                           
  3804                           ;main.c: 558:             Y_Place=Y_Place_D;
  3805  0022D4  C0A6  F069         	movff	_Y_Place_D,_Y_Place
  3806  0022D8  C0A7  F06A         	movff	_Y_Place_D+1,_Y_Place+1
  3807                           
  3808                           ;main.c: 559:             Place_Angle=Place_Angle_D;
  3809  0022DC  C0A4  F065         	movff	_Place_Angle_D,_Place_Angle
  3810  0022E0  C0A5  F066         	movff	_Place_Angle_D+1,_Place_Angle+1
  3811  0022E4  EF74  F011         	goto	l324
  3812  0022E8                     l320:
  3813  0022E8                     l324:
  3814  0022E8  FFFF               	dw	65535	; assembler added errata NOP
  3815  0022EA  0012               	return		;funcret
  3816  0022EC  FFFF               	dw	65535	; errata NOP
  3817  0022EE                     __end_of_fetch_parameters:
  3818                           	callstack 0
  3819                           
  3820 ;; *************** function ___xxtofl *****************
  3821 ;; Defined at:
  3822 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  sign            1    wreg     unsigned char 
  3825 ;;  val             4    7[COMRAM] long 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  sign            1   15[COMRAM] unsigned char 
  3828 ;;  arg             4   17[COMRAM] unsigned long 
  3829 ;;  exp             1   16[COMRAM] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  4    7[COMRAM] unsigned char 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3839 ;;      Params:         4       0       0       0       0       0       0
  3840 ;;      Locals:         6       0       0       0       0       0       0
  3841 ;;      Temps:          4       0       0       0       0       0       0
  3842 ;;      Totals:        14       0       0       0       0       0       0
  3843 ;;Total ram usage:       14 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 1
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_pick_and_place
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text9
  3854  001C88                     __ptext9:
  3855                           	callstack 0
  3856  001C88                     ___xxtofl:
  3857                           	callstack 0
  3858  001C88  FFFF               	dw	65535	; assembler added errata NOP
  3859                           
  3860                           ;incstack = 0
  3861                           ;___xxtofl@sign stored from wreg
  3862  001C8A  6E10               	movwf	___xxtofl@sign^0,c
  3863  001C8C  5010               	movf	___xxtofl@sign^0,w,c
  3864  001C8E  B4D8               	btfsc	status,2,c
  3865  001C90  EF4C  F00E         	goto	u5001
  3866  001C94  EF4F  F00E         	goto	u5000
  3867  001C98                     u5001:
  3868  001C98  FFFF               	dw	65535	; assembler added errata NOP
  3869  001C9A  EF74  F00E         	goto	l1098
  3870  001C9E                     u5000:
  3871  001C9E  FFFF               	dw	65535	; assembler added errata NOP
  3872  001CA0  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  3873  001CA2  EF58  F00E         	goto	u5010
  3874  001CA6  EF55  F00E         	goto	u5011
  3875  001CAA                     u5011:
  3876  001CAA  FFFF               	dw	65535	; assembler added errata NOP
  3877  001CAC  EF74  F00E         	goto	l1098
  3878  001CB0                     u5010:
  3879  001CB0  FFFF               	dw	65535	; assembler added errata NOP
  3880  001CB2  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  3881  001CB6  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  3882  001CBA  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  3883  001CBE  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  3884  001CC2  1E0C               	comf	??___xxtofl^0,f,c
  3885  001CC4  1E0D               	comf	(??___xxtofl+1)^0,f,c
  3886  001CC6  1E0E               	comf	(??___xxtofl+2)^0,f,c
  3887  001CC8  1E0F               	comf	(??___xxtofl+3)^0,f,c
  3888  001CCA  2A0C               	incf	??___xxtofl^0,f,c
  3889  001CCC  0E00               	movlw	0
  3890  001CCE  220D               	addwfc	(??___xxtofl+1)^0,f,c
  3891  001CD0  220E               	addwfc	(??___xxtofl+2)^0,f,c
  3892  001CD2  220F               	addwfc	(??___xxtofl+3)^0,f,c
  3893  001CD4  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  3894  001CD8  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  3895  001CDC  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  3896  001CE0  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  3897  001CE4  EF7D  F00E         	goto	l4378
  3898  001CE8                     l1098:
  3899  001CE8  FFFF               	dw	65535	; assembler added errata NOP
  3900  001CEA  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  3901  001CEE  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3902  001CF2  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3903  001CF6  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3904  001CFA                     l4378:
  3905  001CFA  FFFF               	dw	65535	; assembler added errata NOP
  3906  001CFC  5008               	movf	___xxtofl@val^0,w,c
  3907  001CFE  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  3908  001D00  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  3909  001D02  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  3910  001D04  A4D8               	btfss	status,2,c
  3911  001D06  EF87  F00E         	goto	u5021
  3912  001D0A  EF8A  F00E         	goto	u5020
  3913  001D0E                     u5021:
  3914  001D0E  FFFF               	dw	65535	; assembler added errata NOP
  3915  001D10  EF95  F00E         	goto	l4384
  3916  001D14                     u5020:
  3917  001D14  FFFF               	dw	65535	; assembler added errata NOP
  3918  001D16  0E00               	movlw	0
  3919  001D18  6E08               	movwf	?___xxtofl^0,c
  3920  001D1A  0E00               	movlw	0
  3921  001D1C  6E09               	movwf	(?___xxtofl+1)^0,c
  3922  001D1E  0E00               	movlw	0
  3923  001D20  6E0A               	movwf	(?___xxtofl+2)^0,c
  3924  001D22  0E00               	movlw	0
  3925  001D24  6E0B               	movwf	(?___xxtofl+3)^0,c
  3926  001D26  EF3D  F00F         	goto	l1101
  3927  001D2A                     l4384:
  3928  001D2A  FFFF               	dw	65535	; assembler added errata NOP
  3929  001D2C  0E96               	movlw	150
  3930  001D2E  6E11               	movwf	___xxtofl@exp^0,c
  3931  001D30  EFA1  F00E         	goto	l4388
  3932  001D34                     l4386:
  3933  001D34  FFFF               	dw	65535	; assembler added errata NOP
  3934  001D36  2A11               	incf	___xxtofl@exp^0,f,c
  3935  001D38  90D8               	bcf	status,0,c
  3936  001D3A  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  3937  001D3C  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  3938  001D3E  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  3939  001D40  3212               	rrcf	___xxtofl@arg^0,f,c
  3940  001D42                     l4388:
  3941  001D42  FFFF               	dw	65535	; assembler added errata NOP
  3942  001D44  0E00               	movlw	0
  3943  001D46  1412               	andwf	___xxtofl@arg^0,w,c
  3944  001D48  6E0C               	movwf	??___xxtofl^0,c
  3945  001D4A  0E00               	movlw	0
  3946  001D4C  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  3947  001D4E  6E0D               	movwf	(??___xxtofl+1)^0,c
  3948  001D50  0E00               	movlw	0
  3949  001D52  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  3950  001D54  6E0E               	movwf	(??___xxtofl+2)^0,c
  3951  001D56  0EFE               	movlw	254
  3952  001D58  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  3953  001D5A  6E0F               	movwf	(??___xxtofl+3)^0,c
  3954  001D5C  500C               	movf	??___xxtofl^0,w,c
  3955  001D5E  100D               	iorwf	(??___xxtofl+1)^0,w,c
  3956  001D60  100E               	iorwf	(??___xxtofl+2)^0,w,c
  3957  001D62  100F               	iorwf	(??___xxtofl+3)^0,w,c
  3958  001D64  A4D8               	btfss	status,2,c
  3959  001D66  EFB7  F00E         	goto	u5031
  3960  001D6A  EFBA  F00E         	goto	u5030
  3961  001D6E                     u5031:
  3962  001D6E  FFFF               	dw	65535	; assembler added errata NOP
  3963  001D70  EF9A  F00E         	goto	l4386
  3964  001D74                     u5030:
  3965  001D74  FFFF               	dw	65535	; assembler added errata NOP
  3966  001D76  EFCA  F00E         	goto	l1105
  3967  001D7A                     l4390:
  3968  001D7A  FFFF               	dw	65535	; assembler added errata NOP
  3969  001D7C  2A11               	incf	___xxtofl@exp^0,f,c
  3970  001D7E  0E01               	movlw	1
  3971  001D80  2612               	addwf	___xxtofl@arg^0,f,c
  3972  001D82  0E00               	movlw	0
  3973  001D84  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  3974  001D86  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  3975  001D88  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  3976  001D8A  90D8               	bcf	status,0,c
  3977  001D8C  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  3978  001D8E  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  3979  001D90  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  3980  001D92  3212               	rrcf	___xxtofl@arg^0,f,c
  3981  001D94                     l1105:
  3982  001D94  FFFF               	dw	65535	; assembler added errata NOP
  3983  001D96  0E00               	movlw	0
  3984  001D98  1412               	andwf	___xxtofl@arg^0,w,c
  3985  001D9A  6E0C               	movwf	??___xxtofl^0,c
  3986  001D9C  0E00               	movlw	0
  3987  001D9E  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  3988  001DA0  6E0D               	movwf	(??___xxtofl+1)^0,c
  3989  001DA2  0E00               	movlw	0
  3990  001DA4  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  3991  001DA6  6E0E               	movwf	(??___xxtofl+2)^0,c
  3992  001DA8  0EFF               	movlw	255
  3993  001DAA  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  3994  001DAC  6E0F               	movwf	(??___xxtofl+3)^0,c
  3995  001DAE  500C               	movf	??___xxtofl^0,w,c
  3996  001DB0  100D               	iorwf	(??___xxtofl+1)^0,w,c
  3997  001DB2  100E               	iorwf	(??___xxtofl+2)^0,w,c
  3998  001DB4  100F               	iorwf	(??___xxtofl+3)^0,w,c
  3999  001DB6  A4D8               	btfss	status,2,c
  4000  001DB8  EFE0  F00E         	goto	u5041
  4001  001DBC  EFE3  F00E         	goto	u5040
  4002  001DC0                     u5041:
  4003  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  4004  001DC2  EFBD  F00E         	goto	l4390
  4005  001DC6                     u5040:
  4006  001DC6  FFFF               	dw	65535	; assembler added errata NOP
  4007  001DC8  EFED  F00E         	goto	l4398
  4008  001DCC                     l4396:
  4009  001DCC  FFFF               	dw	65535	; assembler added errata NOP
  4010  001DCE  0611               	decf	___xxtofl@exp^0,f,c
  4011  001DD0  90D8               	bcf	status,0,c
  4012  001DD2  3612               	rlcf	___xxtofl@arg^0,f,c
  4013  001DD4  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  4014  001DD6  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  4015  001DD8  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  4016  001DDA                     l4398:
  4017  001DDA  FFFF               	dw	65535	; assembler added errata NOP
  4018  001DDC  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  4019  001DDE  EFF3  F00E         	goto	u5051
  4020  001DE2  EFF6  F00E         	goto	u5050
  4021  001DE6                     u5051:
  4022  001DE6  FFFF               	dw	65535	; assembler added errata NOP
  4023  001DE8  EF00  F00F         	goto	l1112
  4024  001DEC                     u5050:
  4025  001DEC  FFFF               	dw	65535	; assembler added errata NOP
  4026  001DEE  0E02               	movlw	2
  4027  001DF0  6011               	cpfslt	___xxtofl@exp^0,c
  4028  001DF2  EFFD  F00E         	goto	u5061
  4029  001DF6  EF00  F00F         	goto	u5060
  4030  001DFA                     u5061:
  4031  001DFA  FFFF               	dw	65535	; assembler added errata NOP
  4032  001DFC  EFE6  F00E         	goto	l4396
  4033  001E00                     u5060:
  4034  001E00                     l1112:
  4035  001E00  FFFF               	dw	65535	; assembler added errata NOP
  4036  001E02  B011               	btfsc	___xxtofl@exp^0,0,c
  4037  001E04  EF06  F00F         	goto	u5071
  4038  001E08  EF09  F00F         	goto	u5070
  4039  001E0C                     u5071:
  4040  001E0C  FFFF               	dw	65535	; assembler added errata NOP
  4041  001E0E  EF0B  F00F         	goto	l4404
  4042  001E12                     u5070:
  4043  001E12  FFFF               	dw	65535	; assembler added errata NOP
  4044  001E14  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  4045  001E16                     l4404:
  4046  001E16  FFFF               	dw	65535	; assembler added errata NOP
  4047  001E18  90D8               	bcf	status,0,c
  4048  001E1A  3211               	rrcf	___xxtofl@exp^0,f,c
  4049  001E1C  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  4050  001E20  6A0D               	clrf	(??___xxtofl+1)^0,c
  4051  001E22  6A0E               	clrf	(??___xxtofl+2)^0,c
  4052  001E24  6A0F               	clrf	(??___xxtofl+3)^0,c
  4053  001E26  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  4054  001E2A  6A0E               	clrf	(??___xxtofl+2)^0,c
  4055  001E2C  6A0D               	clrf	(??___xxtofl+1)^0,c
  4056  001E2E  6A0C               	clrf	??___xxtofl^0,c
  4057  001E30  500C               	movf	??___xxtofl^0,w,c
  4058  001E32  1212               	iorwf	___xxtofl@arg^0,f,c
  4059  001E34  500D               	movf	(??___xxtofl+1)^0,w,c
  4060  001E36  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  4061  001E38  500E               	movf	(??___xxtofl+2)^0,w,c
  4062  001E3A  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  4063  001E3C  500F               	movf	(??___xxtofl+3)^0,w,c
  4064  001E3E  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  4065  001E40  5010               	movf	___xxtofl@sign^0,w,c
  4066  001E42  B4D8               	btfsc	status,2,c
  4067  001E44  EF26  F00F         	goto	u5081
  4068  001E48  EF29  F00F         	goto	u5080
  4069  001E4C                     u5081:
  4070  001E4C  FFFF               	dw	65535	; assembler added errata NOP
  4071  001E4E  EF34  F00F         	goto	l4414
  4072  001E52                     u5080:
  4073  001E52  FFFF               	dw	65535	; assembler added errata NOP
  4074  001E54  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  4075  001E56  EF32  F00F         	goto	u5090
  4076  001E5A  EF2F  F00F         	goto	u5091
  4077  001E5E                     u5091:
  4078  001E5E  FFFF               	dw	65535	; assembler added errata NOP
  4079  001E60  EF34  F00F         	goto	l4414
  4080  001E64                     u5090:
  4081  001E64  FFFF               	dw	65535	; assembler added errata NOP
  4082  001E66  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  4083  001E68                     l4414:
  4084  001E68  FFFF               	dw	65535	; assembler added errata NOP
  4085  001E6A  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  4086  001E6E  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  4087  001E72  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  4088  001E76  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  4089  001E7A                     l1101:
  4090  001E7A  FFFF               	dw	65535	; assembler added errata NOP
  4091  001E7C  0012               	return		;funcret
  4092  001E7E  FFFF               	dw	65535	; errata NOP
  4093  001E80                     __end_of___xxtofl:
  4094                           	callstack 0
  4095                           
  4096 ;; *************** function ___fldiv *****************
  4097 ;; Defined at:
  4098 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  b               4   21[COMRAM] unsigned char 
  4101 ;;  a               4   25[COMRAM] unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  grs             4   40[COMRAM] unsigned long 
  4104 ;;  rem             4   33[COMRAM] unsigned long 
  4105 ;;  new_exp         2   38[COMRAM] short 
  4106 ;;  aexp            1   45[COMRAM] unsigned char 
  4107 ;;  bexp            1   44[COMRAM] unsigned char 
  4108 ;;  sign            1   37[COMRAM] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  4   21[COMRAM] unsigned char 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4118 ;;      Params:         8       0       0       0       0       0       0
  4119 ;;      Locals:        13       0       0       0       0       0       0
  4120 ;;      Temps:          4       0       0       0       0       0       0
  4121 ;;      Totals:        25       0       0       0       0       0       0
  4122 ;;Total ram usage:       25 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; Hardware stack levels required when called: 1
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_pick_and_place
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text10
  4133  001270                     __ptext10:
  4134                           	callstack 0
  4135  001270                     ___fldiv:
  4136                           	callstack 0
  4137  001270  FFFF               	dw	65535	; assembler added errata NOP
  4138  001272  5019               	movf	(___fldiv@b+3)^0,w,c
  4139  001274  0B80               	andlw	128
  4140  001276  6E26               	movwf	___fldiv@sign^0,c
  4141  001278  5019               	movf	(___fldiv@b+3)^0,w,c
  4142  00127A  2419               	addwf	(___fldiv@b+3)^0,w,c
  4143  00127C  6E2D               	movwf	___fldiv@bexp^0,c
  4144  00127E  AE18               	btfss	(___fldiv@b+2)^0,7,c
  4145  001280  EF44  F009         	goto	u4721
  4146  001284  EF47  F009         	goto	u4720
  4147  001288                     u4721:
  4148  001288  FFFF               	dw	65535	; assembler added errata NOP
  4149  00128A  EF49  F009         	goto	l4218
  4150  00128E                     u4720:
  4151  00128E  FFFF               	dw	65535	; assembler added errata NOP
  4152  001290  802D               	bsf	___fldiv@bexp^0,0,c
  4153  001292                     l4218:
  4154  001292  FFFF               	dw	65535	; assembler added errata NOP
  4155  001294  502D               	movf	___fldiv@bexp^0,w,c
  4156  001296  B4D8               	btfsc	status,2,c
  4157  001298  EF50  F009         	goto	u4731
  4158  00129C  EF53  F009         	goto	u4730
  4159  0012A0                     u4731:
  4160  0012A0  FFFF               	dw	65535	; assembler added errata NOP
  4161  0012A2  EF6C  F009         	goto	l4228
  4162  0012A6                     u4730:
  4163  0012A6  FFFF               	dw	65535	; assembler added errata NOP
  4164  0012A8  282D               	incf	___fldiv@bexp^0,w,c
  4165  0012AA  A4D8               	btfss	status,2,c
  4166  0012AC  EF5A  F009         	goto	u4741
  4167  0012B0  EF5D  F009         	goto	u4740
  4168  0012B4                     u4741:
  4169  0012B4  FFFF               	dw	65535	; assembler added errata NOP
  4170  0012B6  EF66  F009         	goto	l4224
  4171  0012BA                     u4740:
  4172  0012BA  FFFF               	dw	65535	; assembler added errata NOP
  4173  0012BC  0E00               	movlw	0
  4174  0012BE  6E16               	movwf	___fldiv@b^0,c
  4175  0012C0  0E00               	movlw	0
  4176  0012C2  6E17               	movwf	(___fldiv@b+1)^0,c
  4177  0012C4  0E00               	movlw	0
  4178  0012C6  6E18               	movwf	(___fldiv@b+2)^0,c
  4179  0012C8  0E00               	movlw	0
  4180  0012CA  6E19               	movwf	(___fldiv@b+3)^0,c
  4181  0012CC                     l4224:
  4182  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  4183  0012CE  8E18               	bsf	(___fldiv@b+2)^0,7,c
  4184  0012D0  0E00               	movlw	0
  4185  0012D2  6E19               	movwf	(___fldiv@b+3)^0,c
  4186  0012D4  EF75  F009         	goto	l4230
  4187  0012D8                     l4228:
  4188  0012D8  FFFF               	dw	65535	; assembler added errata NOP
  4189  0012DA  0E00               	movlw	0
  4190  0012DC  6E16               	movwf	___fldiv@b^0,c
  4191  0012DE  0E00               	movlw	0
  4192  0012E0  6E17               	movwf	(___fldiv@b+1)^0,c
  4193  0012E2  0E00               	movlw	0
  4194  0012E4  6E18               	movwf	(___fldiv@b+2)^0,c
  4195  0012E6  0E00               	movlw	0
  4196  0012E8  6E19               	movwf	(___fldiv@b+3)^0,c
  4197  0012EA                     l4230:
  4198  0012EA  FFFF               	dw	65535	; assembler added errata NOP
  4199  0012EC  501D               	movf	(___fldiv@a+3)^0,w,c
  4200  0012EE  0B80               	andlw	128
  4201  0012F0  1A26               	xorwf	___fldiv@sign^0,f,c
  4202  0012F2  501D               	movf	(___fldiv@a+3)^0,w,c
  4203  0012F4  241D               	addwf	(___fldiv@a+3)^0,w,c
  4204  0012F6  6E2E               	movwf	___fldiv@aexp^0,c
  4205  0012F8  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  4206  0012FA  EF81  F009         	goto	u4751
  4207  0012FE  EF84  F009         	goto	u4750
  4208  001302                     u4751:
  4209  001302  FFFF               	dw	65535	; assembler added errata NOP
  4210  001304  EF86  F009         	goto	l4238
  4211  001308                     u4750:
  4212  001308  FFFF               	dw	65535	; assembler added errata NOP
  4213  00130A  802E               	bsf	___fldiv@aexp^0,0,c
  4214  00130C                     l4238:
  4215  00130C  FFFF               	dw	65535	; assembler added errata NOP
  4216  00130E  502E               	movf	___fldiv@aexp^0,w,c
  4217  001310  B4D8               	btfsc	status,2,c
  4218  001312  EF8D  F009         	goto	u4761
  4219  001316  EF90  F009         	goto	u4760
  4220  00131A                     u4761:
  4221  00131A  FFFF               	dw	65535	; assembler added errata NOP
  4222  00131C  EFA9  F009         	goto	l4248
  4223  001320                     u4760:
  4224  001320  FFFF               	dw	65535	; assembler added errata NOP
  4225  001322  282E               	incf	___fldiv@aexp^0,w,c
  4226  001324  A4D8               	btfss	status,2,c
  4227  001326  EF97  F009         	goto	u4771
  4228  00132A  EF9A  F009         	goto	u4770
  4229  00132E                     u4771:
  4230  00132E  FFFF               	dw	65535	; assembler added errata NOP
  4231  001330  EFA3  F009         	goto	l4244
  4232  001334                     u4770:
  4233  001334  FFFF               	dw	65535	; assembler added errata NOP
  4234  001336  0E00               	movlw	0
  4235  001338  6E1A               	movwf	___fldiv@a^0,c
  4236  00133A  0E00               	movlw	0
  4237  00133C  6E1B               	movwf	(___fldiv@a+1)^0,c
  4238  00133E  0E00               	movlw	0
  4239  001340  6E1C               	movwf	(___fldiv@a+2)^0,c
  4240  001342  0E00               	movlw	0
  4241  001344  6E1D               	movwf	(___fldiv@a+3)^0,c
  4242  001346                     l4244:
  4243  001346  FFFF               	dw	65535	; assembler added errata NOP
  4244  001348  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  4245  00134A  0E00               	movlw	0
  4246  00134C  6E1D               	movwf	(___fldiv@a+3)^0,c
  4247  00134E  EFB2  F009         	goto	l4250
  4248  001352                     l4248:
  4249  001352  FFFF               	dw	65535	; assembler added errata NOP
  4250  001354  0E00               	movlw	0
  4251  001356  6E1A               	movwf	___fldiv@a^0,c
  4252  001358  0E00               	movlw	0
  4253  00135A  6E1B               	movwf	(___fldiv@a+1)^0,c
  4254  00135C  0E00               	movlw	0
  4255  00135E  6E1C               	movwf	(___fldiv@a+2)^0,c
  4256  001360  0E00               	movlw	0
  4257  001362  6E1D               	movwf	(___fldiv@a+3)^0,c
  4258  001364                     l4250:
  4259  001364  FFFF               	dw	65535	; assembler added errata NOP
  4260  001366  501A               	movf	___fldiv@a^0,w,c
  4261  001368  101B               	iorwf	(___fldiv@a+1)^0,w,c
  4262  00136A  101C               	iorwf	(___fldiv@a+2)^0,w,c
  4263  00136C  101D               	iorwf	(___fldiv@a+3)^0,w,c
  4264  00136E  A4D8               	btfss	status,2,c
  4265  001370  EFBC  F009         	goto	u4781
  4266  001374  EFBF  F009         	goto	u4780
  4267  001378                     u4781:
  4268  001378  FFFF               	dw	65535	; assembler added errata NOP
  4269  00137A  EFD9  F009         	goto	l4262
  4270  00137E                     u4780:
  4271  00137E  FFFF               	dw	65535	; assembler added errata NOP
  4272  001380  0E00               	movlw	0
  4273  001382  6E16               	movwf	___fldiv@b^0,c
  4274  001384  0E00               	movlw	0
  4275  001386  6E17               	movwf	(___fldiv@b+1)^0,c
  4276  001388  0E00               	movlw	0
  4277  00138A  6E18               	movwf	(___fldiv@b+2)^0,c
  4278  00138C  0E00               	movlw	0
  4279  00138E  6E19               	movwf	(___fldiv@b+3)^0,c
  4280  001390  0E80               	movlw	128
  4281  001392  1218               	iorwf	(___fldiv@b+2)^0,f,c
  4282  001394  0E7F               	movlw	127
  4283  001396  1219               	iorwf	(___fldiv@b+3)^0,f,c
  4284  001398                     l4256:
  4285  001398  FFFF               	dw	65535	; assembler added errata NOP
  4286  00139A  5026               	movf	___fldiv@sign^0,w,c
  4287  00139C  1219               	iorwf	(___fldiv@b+3)^0,f,c
  4288  00139E  C016  F016         	movff	___fldiv@b,?___fldiv
  4289  0013A2  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  4290  0013A6  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  4291  0013AA  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  4292  0013AE  EF4E  F00B         	goto	l1025
  4293  0013B2                     l4262:
  4294  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  4295  0013B4  502D               	movf	___fldiv@bexp^0,w,c
  4296  0013B6  A4D8               	btfss	status,2,c
  4297  0013B8  EFE0  F009         	goto	u4791
  4298  0013BC  EFE3  F009         	goto	u4790
  4299  0013C0                     u4791:
  4300  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  4301  0013C2  EFEE  F009         	goto	l4270
  4302  0013C6                     u4790:
  4303  0013C6  FFFF               	dw	65535	; assembler added errata NOP
  4304  0013C8  0E00               	movlw	0
  4305  0013CA  6E16               	movwf	?___fldiv^0,c
  4306  0013CC  0E00               	movlw	0
  4307  0013CE  6E17               	movwf	(?___fldiv+1)^0,c
  4308  0013D0  0E00               	movlw	0
  4309  0013D2  6E18               	movwf	(?___fldiv+2)^0,c
  4310  0013D4  0E00               	movlw	0
  4311  0013D6  6E19               	movwf	(?___fldiv+3)^0,c
  4312  0013D8  EF4E  F00B         	goto	l1025
  4313  0013DC                     l4270:
  4314  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  4315  0013DE  502E               	movf	___fldiv@aexp^0,w,c
  4316  0013E0  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  4317  0013E4  6A1F               	clrf	(??___fldiv+1)^0,c
  4318  0013E6  5E1E               	subwf	??___fldiv^0,f,c
  4319  0013E8  0E00               	movlw	0
  4320  0013EA  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  4321  0013EC  0E7F               	movlw	127
  4322  0013EE  241E               	addwf	??___fldiv^0,w,c
  4323  0013F0  6E27               	movwf	___fldiv@new_exp^0,c
  4324  0013F2  0E00               	movlw	0
  4325  0013F4  201F               	addwfc	(??___fldiv+1)^0,w,c
  4326  0013F6  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4327  0013F8  C016  F022         	movff	___fldiv@b,___fldiv@rem
  4328  0013FC  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  4329  001400  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  4330  001404  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  4331  001408  0E00               	movlw	0
  4332  00140A  6E16               	movwf	___fldiv@b^0,c
  4333  00140C  0E00               	movlw	0
  4334  00140E  6E17               	movwf	(___fldiv@b+1)^0,c
  4335  001410  0E00               	movlw	0
  4336  001412  6E18               	movwf	(___fldiv@b+2)^0,c
  4337  001414  0E00               	movlw	0
  4338  001416  6E19               	movwf	(___fldiv@b+3)^0,c
  4339  001418  0E00               	movlw	0
  4340  00141A  6E29               	movwf	___fldiv@grs^0,c
  4341  00141C  0E00               	movlw	0
  4342  00141E  6E2A               	movwf	(___fldiv@grs+1)^0,c
  4343  001420  0E00               	movlw	0
  4344  001422  6E2B               	movwf	(___fldiv@grs+2)^0,c
  4345  001424  0E00               	movlw	0
  4346  001426  6E2C               	movwf	(___fldiv@grs+3)^0,c
  4347  001428  0E00               	movlw	0
  4348  00142A  6E2E               	movwf	___fldiv@aexp^0,c
  4349  00142C  EF5A  F00A         	goto	l1027
  4350  001430                     l4280:
  4351  001430  FFFF               	dw	65535	; assembler added errata NOP
  4352  001432  502E               	movf	___fldiv@aexp^0,w,c
  4353  001434  B4D8               	btfsc	status,2,c
  4354  001436  EF1F  F00A         	goto	u4801
  4355  00143A  EF22  F00A         	goto	u4800
  4356  00143E                     u4801:
  4357  00143E  FFFF               	dw	65535	; assembler added errata NOP
  4358  001440  EF3D  F00A         	goto	l4288
  4359  001444                     u4800:
  4360  001444  FFFF               	dw	65535	; assembler added errata NOP
  4361  001446  90D8               	bcf	status,0,c
  4362  001448  3622               	rlcf	___fldiv@rem^0,f,c
  4363  00144A  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  4364  00144C  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  4365  00144E  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  4366  001450  90D8               	bcf	status,0,c
  4367  001452  3616               	rlcf	___fldiv@b^0,f,c
  4368  001454  3617               	rlcf	(___fldiv@b+1)^0,f,c
  4369  001456  3618               	rlcf	(___fldiv@b+2)^0,f,c
  4370  001458  3619               	rlcf	(___fldiv@b+3)^0,f,c
  4371  00145A  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  4372  00145C  EF32  F00A         	goto	u4811
  4373  001460  EF35  F00A         	goto	u4810
  4374  001464                     u4811:
  4375  001464  FFFF               	dw	65535	; assembler added errata NOP
  4376  001466  EF37  F00A         	goto	l1030
  4377  00146A                     u4810:
  4378  00146A  FFFF               	dw	65535	; assembler added errata NOP
  4379  00146C  8016               	bsf	___fldiv@b^0,0,c
  4380  00146E                     l1030:
  4381  00146E  FFFF               	dw	65535	; assembler added errata NOP
  4382  001470  90D8               	bcf	status,0,c
  4383  001472  3629               	rlcf	___fldiv@grs^0,f,c
  4384  001474  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  4385  001476  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  4386  001478  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  4387  00147A                     l4288:
  4388  00147A  FFFF               	dw	65535	; assembler added errata NOP
  4389  00147C  501A               	movf	___fldiv@a^0,w,c
  4390  00147E  5C22               	subwf	___fldiv@rem^0,w,c
  4391  001480  501B               	movf	(___fldiv@a+1)^0,w,c
  4392  001482  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  4393  001484  501C               	movf	(___fldiv@a+2)^0,w,c
  4394  001486  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  4395  001488  501D               	movf	(___fldiv@a+3)^0,w,c
  4396  00148A  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  4397  00148C  A0D8               	btfss	status,0,c
  4398  00148E  EF4B  F00A         	goto	u4821
  4399  001492  EF4E  F00A         	goto	u4820
  4400  001496                     u4821:
  4401  001496  FFFF               	dw	65535	; assembler added errata NOP
  4402  001498  EF58  F00A         	goto	l4294
  4403  00149C                     u4820:
  4404  00149C  FFFF               	dw	65535	; assembler added errata NOP
  4405  00149E  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  4406  0014A0  501A               	movf	___fldiv@a^0,w,c
  4407  0014A2  5E22               	subwf	___fldiv@rem^0,f,c
  4408  0014A4  501B               	movf	(___fldiv@a+1)^0,w,c
  4409  0014A6  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  4410  0014A8  501C               	movf	(___fldiv@a+2)^0,w,c
  4411  0014AA  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  4412  0014AC  501D               	movf	(___fldiv@a+3)^0,w,c
  4413  0014AE  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  4414  0014B0                     l4294:
  4415  0014B0  FFFF               	dw	65535	; assembler added errata NOP
  4416  0014B2  2A2E               	incf	___fldiv@aexp^0,f,c
  4417  0014B4                     l1027:
  4418  0014B4  FFFF               	dw	65535	; assembler added errata NOP
  4419  0014B6  0E19               	movlw	25
  4420  0014B8  642E               	cpfsgt	___fldiv@aexp^0,c
  4421  0014BA  EF61  F00A         	goto	u4831
  4422  0014BE  EF64  F00A         	goto	u4830
  4423  0014C2                     u4831:
  4424  0014C2  FFFF               	dw	65535	; assembler added errata NOP
  4425  0014C4  EF18  F00A         	goto	l4280
  4426  0014C8                     u4830:
  4427  0014C8  FFFF               	dw	65535	; assembler added errata NOP
  4428  0014CA  5022               	movf	___fldiv@rem^0,w,c
  4429  0014CC  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  4430  0014CE  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  4431  0014D0  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  4432  0014D2  B4D8               	btfsc	status,2,c
  4433  0014D4  EF6E  F00A         	goto	u4841
  4434  0014D8  EF71  F00A         	goto	u4840
  4435  0014DC                     u4841:
  4436  0014DC  FFFF               	dw	65535	; assembler added errata NOP
  4437  0014DE  EF8E  F00A         	goto	l4306
  4438  0014E2                     u4840:
  4439  0014E2  FFFF               	dw	65535	; assembler added errata NOP
  4440  0014E4  8029               	bsf	___fldiv@grs^0,0,c
  4441  0014E6  EF8E  F00A         	goto	l4306
  4442  0014EA                     l4300:
  4443  0014EA  FFFF               	dw	65535	; assembler added errata NOP
  4444  0014EC  90D8               	bcf	status,0,c
  4445  0014EE  3616               	rlcf	___fldiv@b^0,f,c
  4446  0014F0  3617               	rlcf	(___fldiv@b+1)^0,f,c
  4447  0014F2  3618               	rlcf	(___fldiv@b+2)^0,f,c
  4448  0014F4  3619               	rlcf	(___fldiv@b+3)^0,f,c
  4449  0014F6  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  4450  0014F8  EF80  F00A         	goto	u4851
  4451  0014FC  EF83  F00A         	goto	u4850
  4452  001500                     u4851:
  4453  001500  FFFF               	dw	65535	; assembler added errata NOP
  4454  001502  EF85  F00A         	goto	l1036
  4455  001506                     u4850:
  4456  001506  FFFF               	dw	65535	; assembler added errata NOP
  4457  001508  8016               	bsf	___fldiv@b^0,0,c
  4458  00150A                     l1036:
  4459  00150A  FFFF               	dw	65535	; assembler added errata NOP
  4460  00150C  90D8               	bcf	status,0,c
  4461  00150E  3629               	rlcf	___fldiv@grs^0,f,c
  4462  001510  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  4463  001512  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  4464  001514  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  4465  001516  0627               	decf	___fldiv@new_exp^0,f,c
  4466  001518  A0D8               	btfss	status,0,c
  4467  00151A  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  4468  00151C                     l4306:
  4469  00151C  FFFF               	dw	65535	; assembler added errata NOP
  4470  00151E  AE18               	btfss	(___fldiv@b+2)^0,7,c
  4471  001520  EF94  F00A         	goto	u4861
  4472  001524  EF97  F00A         	goto	u4860
  4473  001528                     u4861:
  4474  001528  FFFF               	dw	65535	; assembler added errata NOP
  4475  00152A  EF75  F00A         	goto	l4300
  4476  00152E                     u4860:
  4477  00152E  FFFF               	dw	65535	; assembler added errata NOP
  4478  001530  0E00               	movlw	0
  4479  001532  6E2E               	movwf	___fldiv@aexp^0,c
  4480  001534  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  4481  001536  EF9F  F00A         	goto	u4871
  4482  00153A  EFA2  F00A         	goto	u4870
  4483  00153E                     u4871:
  4484  00153E  FFFF               	dw	65535	; assembler added errata NOP
  4485  001540  EFCD  F00A         	goto	l1038
  4486  001544                     u4870:
  4487  001544  FFFF               	dw	65535	; assembler added errata NOP
  4488  001546  0EFF               	movlw	255
  4489  001548  1429               	andwf	___fldiv@grs^0,w,c
  4490  00154A  6E1E               	movwf	??___fldiv^0,c
  4491  00154C  0EFF               	movlw	255
  4492  00154E  142A               	andwf	(___fldiv@grs+1)^0,w,c
  4493  001550  6E1F               	movwf	(??___fldiv+1)^0,c
  4494  001552  0EFF               	movlw	255
  4495  001554  142B               	andwf	(___fldiv@grs+2)^0,w,c
  4496  001556  6E20               	movwf	(??___fldiv+2)^0,c
  4497  001558  0E7F               	movlw	127
  4498  00155A  142C               	andwf	(___fldiv@grs+3)^0,w,c
  4499  00155C  6E21               	movwf	(??___fldiv+3)^0,c
  4500  00155E  501E               	movf	??___fldiv^0,w,c
  4501  001560  101F               	iorwf	(??___fldiv+1)^0,w,c
  4502  001562  1020               	iorwf	(??___fldiv+2)^0,w,c
  4503  001564  1021               	iorwf	(??___fldiv+3)^0,w,c
  4504  001566  B4D8               	btfsc	status,2,c
  4505  001568  EFB8  F00A         	goto	u4881
  4506  00156C  EFBB  F00A         	goto	u4880
  4507  001570                     u4881:
  4508  001570  FFFF               	dw	65535	; assembler added errata NOP
  4509  001572  EFC1  F00A         	goto	l1039
  4510  001576                     u4880:
  4511  001576  FFFF               	dw	65535	; assembler added errata NOP
  4512  001578                     l4314:
  4513  001578  FFFF               	dw	65535	; assembler added errata NOP
  4514  00157A  0E01               	movlw	1
  4515  00157C  6E2E               	movwf	___fldiv@aexp^0,c
  4516  00157E  EFCD  F00A         	goto	l1038
  4517  001582                     l1039:
  4518  001582  FFFF               	dw	65535	; assembler added errata NOP
  4519  001584  A016               	btfss	___fldiv@b^0,0,c
  4520  001586  EFC7  F00A         	goto	u4891
  4521  00158A  EFCA  F00A         	goto	u4890
  4522  00158E                     u4891:
  4523  00158E  FFFF               	dw	65535	; assembler added errata NOP
  4524  001590  EFCD  F00A         	goto	l1038
  4525  001594                     u4890:
  4526  001594  FFFF               	dw	65535	; assembler added errata NOP
  4527  001596  EFBC  F00A         	goto	l4314
  4528  00159A                     l1038:
  4529  00159A  FFFF               	dw	65535	; assembler added errata NOP
  4530  00159C  502E               	movf	___fldiv@aexp^0,w,c
  4531  00159E  B4D8               	btfsc	status,2,c
  4532  0015A0  EFD4  F00A         	goto	u4901
  4533  0015A4  EFD7  F00A         	goto	u4900
  4534  0015A8                     u4901:
  4535  0015A8  FFFF               	dw	65535	; assembler added errata NOP
  4536  0015AA  EFFE  F00A         	goto	l4326
  4537  0015AE                     u4900:
  4538  0015AE  FFFF               	dw	65535	; assembler added errata NOP
  4539  0015B0  0E01               	movlw	1
  4540  0015B2  2616               	addwf	___fldiv@b^0,f,c
  4541  0015B4  0E00               	movlw	0
  4542  0015B6  2217               	addwfc	(___fldiv@b+1)^0,f,c
  4543  0015B8  2218               	addwfc	(___fldiv@b+2)^0,f,c
  4544  0015BA  2219               	addwfc	(___fldiv@b+3)^0,f,c
  4545  0015BC  A019               	btfss	(___fldiv@b+3)^0,0,c
  4546  0015BE  EFE3  F00A         	goto	u4911
  4547  0015C2  EFE6  F00A         	goto	u4910
  4548  0015C6                     u4911:
  4549  0015C6  FFFF               	dw	65535	; assembler added errata NOP
  4550  0015C8  EFFE  F00A         	goto	l4326
  4551  0015CC                     u4910:
  4552  0015CC  FFFF               	dw	65535	; assembler added errata NOP
  4553  0015CE  C016  F01E         	movff	___fldiv@b,??___fldiv
  4554  0015D2  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  4555  0015D6  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  4556  0015DA  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  4557  0015DE  3421               	rlcf	(??___fldiv+3)^0,w,c
  4558  0015E0  3221               	rrcf	(??___fldiv+3)^0,f,c
  4559  0015E2  3220               	rrcf	(??___fldiv+2)^0,f,c
  4560  0015E4  321F               	rrcf	(??___fldiv+1)^0,f,c
  4561  0015E6  321E               	rrcf	??___fldiv^0,f,c
  4562  0015E8  C01E  F016         	movff	??___fldiv,___fldiv@b
  4563  0015EC  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  4564  0015F0  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  4565  0015F4  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  4566  0015F8  4A27               	infsnz	___fldiv@new_exp^0,f,c
  4567  0015FA  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  4568  0015FC                     l4326:
  4569  0015FC  FFFF               	dw	65535	; assembler added errata NOP
  4570  0015FE  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4571  001600  EF0A  F00B         	goto	u4921
  4572  001604  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  4573  001606  E109               	bnz	u4920
  4574  001608  2827               	incf	___fldiv@new_exp^0,w,c
  4575  00160A  A0D8               	btfss	status,0,c
  4576  00160C  EF0A  F00B         	goto	u4921
  4577  001610  EF0D  F00B         	goto	u4920
  4578  001614                     u4921:
  4579  001614  FFFF               	dw	65535	; assembler added errata NOP
  4580  001616  EF19  F00B         	goto	l4330
  4581  00161A                     u4920:
  4582  00161A  FFFF               	dw	65535	; assembler added errata NOP
  4583  00161C  0E00               	movlw	0
  4584  00161E  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4585  001620  6827               	setf	___fldiv@new_exp^0,c
  4586  001622  0E00               	movlw	0
  4587  001624  6E16               	movwf	___fldiv@b^0,c
  4588  001626  0E00               	movlw	0
  4589  001628  6E17               	movwf	(___fldiv@b+1)^0,c
  4590  00162A  0E00               	movlw	0
  4591  00162C  6E18               	movwf	(___fldiv@b+2)^0,c
  4592  00162E  0E00               	movlw	0
  4593  001630  6E19               	movwf	(___fldiv@b+3)^0,c
  4594  001632                     l4330:
  4595  001632  FFFF               	dw	65535	; assembler added errata NOP
  4596  001634  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4597  001636  EF28  F00B         	goto	u4930
  4598  00163A  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  4599  00163C  E106               	bnz	u4931
  4600  00163E  0427               	decf	___fldiv@new_exp^0,w,c
  4601  001640  B0D8               	btfsc	status,0,c
  4602  001642  EF25  F00B         	goto	u4931
  4603  001646  EF28  F00B         	goto	u4930
  4604  00164A                     u4931:
  4605  00164A  FFFF               	dw	65535	; assembler added errata NOP
  4606  00164C  EF37  F00B         	goto	l4334
  4607  001650                     u4930:
  4608  001650  FFFF               	dw	65535	; assembler added errata NOP
  4609  001652  0E00               	movlw	0
  4610  001654  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4611  001656  0E00               	movlw	0
  4612  001658  6E27               	movwf	___fldiv@new_exp^0,c
  4613  00165A  0E00               	movlw	0
  4614  00165C  6E16               	movwf	___fldiv@b^0,c
  4615  00165E  0E00               	movlw	0
  4616  001660  6E17               	movwf	(___fldiv@b+1)^0,c
  4617  001662  0E00               	movlw	0
  4618  001664  6E18               	movwf	(___fldiv@b+2)^0,c
  4619  001666  0E00               	movlw	0
  4620  001668  6E19               	movwf	(___fldiv@b+3)^0,c
  4621  00166A  0E00               	movlw	0
  4622  00166C  6E26               	movwf	___fldiv@sign^0,c
  4623  00166E                     l4334:
  4624  00166E  FFFF               	dw	65535	; assembler added errata NOP
  4625  001670  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  4626  001674  A02D               	btfss	___fldiv@bexp^0,0,c
  4627  001676  EF3F  F00B         	goto	u4941
  4628  00167A  EF42  F00B         	goto	u4940
  4629  00167E                     u4941:
  4630  00167E  FFFF               	dw	65535	; assembler added errata NOP
  4631  001680  EF46  F00B         	goto	l4340
  4632  001684                     u4940:
  4633  001684  FFFF               	dw	65535	; assembler added errata NOP
  4634  001686  8E18               	bsf	(___fldiv@b+2)^0,7,c
  4635  001688  EF48  F00B         	goto	l4342
  4636  00168C                     l4340:
  4637  00168C  FFFF               	dw	65535	; assembler added errata NOP
  4638  00168E  9E18               	bcf	(___fldiv@b+2)^0,7,c
  4639  001690                     l4342:
  4640  001690  FFFF               	dw	65535	; assembler added errata NOP
  4641  001692  90D8               	bcf	status,0,c
  4642  001694  302D               	rrcf	___fldiv@bexp^0,w,c
  4643  001696  6E19               	movwf	(___fldiv@b+3)^0,c
  4644  001698  EFCC  F009         	goto	l4256
  4645  00169C                     l1025:
  4646  00169C  FFFF               	dw	65535	; assembler added errata NOP
  4647  00169E  0012               	return		;funcret
  4648  0016A0  FFFF               	dw	65535	; errata NOP
  4649  0016A2                     __end_of___fldiv:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function _Z_axis *****************
  4653 ;; Defined at:
  4654 ;;		line 444 in file "main.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  direction       1    wreg     unsigned char 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  direction       1   13[COMRAM] unsigned char 
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  1    wreg      void 
  4661 ;; Registers used:
  4662 ;;		wreg, status,2, status,0, cstack
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4668 ;;      Params:         0       0       0       0       0       0       0
  4669 ;;      Locals:         1       0       0       0       0       0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0
  4671 ;;      Totals:         1       0       0       0       0       0       0
  4672 ;;Total ram usage:        1 bytes
  4673 ;; Hardware stack levels used: 1
  4674 ;; Hardware stack levels required when called: 2
  4675 ;; This function calls:
  4676 ;;		_ms_delay
  4677 ;; This function is called by:
  4678 ;;		_pick_and_place
  4679 ;;		_return_to_initial
  4680 ;;		_Z_axis_and_Tweezer
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text11
  4685  00278A                     __ptext11:
  4686                           	callstack 0
  4687  00278A                     _Z_axis:
  4688                           	callstack 0
  4689  00278A  FFFF               	dw	65535	; assembler added errata NOP
  4690                           
  4691                           ;incstack = 0
  4692                           ;Z_axis@direction stored from wreg
  4693  00278C  6E0E               	movwf	Z_axis@direction^0,c
  4694  00278E                     
  4695                           ;main.c: 445:     if(!New_char_RX){
  4696  00278E  5076               	movf	_New_char_RX^0,w,c
  4697  002790  A4D8               	btfss	status,2,c
  4698  002792  EFCD  F013         	goto	u4621
  4699  002796  EFD0  F013         	goto	u4620
  4700  00279A                     u4621:
  4701  00279A  FFFF               	dw	65535	; assembler added errata NOP
  4702  00279C  EF3F  F014         	goto	l4158
  4703  0027A0                     u4620:
  4704  0027A0  FFFF               	dw	65535	; assembler added errata NOP
  4705  0027A2                     
  4706                           ;main.c: 446:         if (direction == 0){
  4707  0027A2  500E               	movf	Z_axis@direction^0,w,c
  4708  0027A4  A4D8               	btfss	status,2,c
  4709  0027A6  EFD7  F013         	goto	u4631
  4710  0027AA  EFDA  F013         	goto	u4630
  4711  0027AE                     u4631:
  4712  0027AE  FFFF               	dw	65535	; assembler added errata NOP
  4713  0027B0  EF07  F014         	goto	l4140
  4714  0027B4                     u4630:
  4715  0027B4  FFFF               	dw	65535	; assembler added errata NOP
  4716  0027B6                     
  4717                           ;main.c: 447:             PORTD = 0b00000011;
  4718  0027B6  0E03               	movlw	3
  4719  0027B8  6E83               	movwf	131,c	;volatile
  4720  0027BA                     
  4721                           ;main.c: 448:             ms_delay(1);
  4722  0027BA  0E00               	movlw	0
  4723  0027BC  6E09               	movwf	(ms_delay@val+1)^0,c
  4724  0027BE  0E01               	movlw	1
  4725  0027C0  6E08               	movwf	ms_delay@val^0,c
  4726  0027C2  EC82  F017         	call	_ms_delay	;wreg free
  4727  0027C6                     
  4728                           ;main.c: 449:             PORTD = 0b00000110;
  4729  0027C6  0E06               	movlw	6
  4730  0027C8  6E83               	movwf	131,c	;volatile
  4731                           
  4732                           ;main.c: 450:             ms_delay(1);
  4733  0027CA  0E00               	movlw	0
  4734  0027CC  6E09               	movwf	(ms_delay@val+1)^0,c
  4735  0027CE  0E01               	movlw	1
  4736  0027D0  6E08               	movwf	ms_delay@val^0,c
  4737  0027D2  EC82  F017         	call	_ms_delay	;wreg free
  4738  0027D6                     
  4739                           ;main.c: 451:             PORTD = 0b00001100;
  4740  0027D6  0E0C               	movlw	12
  4741  0027D8  6E83               	movwf	131,c	;volatile
  4742  0027DA                     
  4743                           ;main.c: 452:             ms_delay(1);
  4744  0027DA  0E00               	movlw	0
  4745  0027DC  6E09               	movwf	(ms_delay@val+1)^0,c
  4746  0027DE  0E01               	movlw	1
  4747  0027E0  6E08               	movwf	ms_delay@val^0,c
  4748  0027E2  EC82  F017         	call	_ms_delay	;wreg free
  4749                           
  4750                           ;main.c: 453:             PORTD = 0b00001001;
  4751  0027E6  0E09               	movlw	9
  4752  0027E8  6E83               	movwf	131,c	;volatile
  4753  0027EA                     
  4754                           ;main.c: 454:             ms_delay(1);
  4755  0027EA  0E00               	movlw	0
  4756  0027EC  6E09               	movwf	(ms_delay@val+1)^0,c
  4757  0027EE  0E01               	movlw	1
  4758  0027F0  6E08               	movwf	ms_delay@val^0,c
  4759  0027F2  EC82  F017         	call	_ms_delay	;wreg free
  4760  0027F6                     
  4761                           ;main.c: 455:             PORTD = 0b00000011;
  4762  0027F6  0E03               	movlw	3
  4763  0027F8  6E83               	movwf	131,c	;volatile
  4764                           
  4765                           ;main.c: 456:             ms_delay(5);
  4766  0027FA  0E00               	movlw	0
  4767  0027FC  6E09               	movwf	(ms_delay@val+1)^0,c
  4768  0027FE  0E05               	movlw	5
  4769  002800  6E08               	movwf	ms_delay@val^0,c
  4770  002802  EC82  F017         	call	_ms_delay	;wreg free
  4771  002806                     
  4772                           ;main.c: 457:             Step_Z--;
  4773  002806  0100               	movlb	0	; () banked
  4774  002808  07B2               	decf	_Step_Z& (0+255),f,b
  4775  00280A  A0D8               	btfss	status,0,c
  4776  00280C  07B3               	decf	(_Step_Z+1)& (0+255),f,b
  4777  00280E                     l4140:
  4778  00280E  FFFF               	dw	65535	; assembler added errata NOP
  4779                           
  4780                           ;main.c: 459:         if (direction == 1){
  4781  002810  040E               	decf	Z_axis@direction^0,w,c
  4782  002812  A4D8               	btfss	status,2,c
  4783  002814  EF0E  F014         	goto	u4641
  4784  002818  EF11  F014         	goto	u4640
  4785  00281C                     u4641:
  4786  00281C  FFFF               	dw	65535	; assembler added errata NOP
  4787  00281E  EF42  F014         	goto	l294
  4788  002822                     u4640:
  4789  002822  FFFF               	dw	65535	; assembler added errata NOP
  4790  002824                     
  4791                           ;main.c: 460:             PORTD = 0b00001001;
  4792  002824  0E09               	movlw	9
  4793  002826  6E83               	movwf	131,c	;volatile
  4794  002828                     
  4795                           ;main.c: 461:             ms_delay(1);
  4796  002828  0E00               	movlw	0
  4797  00282A  6E09               	movwf	(ms_delay@val+1)^0,c
  4798  00282C  0E01               	movlw	1
  4799  00282E  6E08               	movwf	ms_delay@val^0,c
  4800  002830  EC82  F017         	call	_ms_delay	;wreg free
  4801  002834                     
  4802                           ;main.c: 462:             PORTD = 0b00001100;
  4803  002834  0E0C               	movlw	12
  4804  002836  6E83               	movwf	131,c	;volatile
  4805                           
  4806                           ;main.c: 463:             ms_delay(1);
  4807  002838  0E00               	movlw	0
  4808  00283A  6E09               	movwf	(ms_delay@val+1)^0,c
  4809  00283C  0E01               	movlw	1
  4810  00283E  6E08               	movwf	ms_delay@val^0,c
  4811  002840  EC82  F017         	call	_ms_delay	;wreg free
  4812  002844                     
  4813                           ;main.c: 464:             PORTD = 0b00000110;
  4814  002844  0E06               	movlw	6
  4815  002846  6E83               	movwf	131,c	;volatile
  4816  002848                     
  4817                           ;main.c: 465:             ms_delay(1);
  4818  002848  0E00               	movlw	0
  4819  00284A  6E09               	movwf	(ms_delay@val+1)^0,c
  4820  00284C  0E01               	movlw	1
  4821  00284E  6E08               	movwf	ms_delay@val^0,c
  4822  002850  EC82  F017         	call	_ms_delay	;wreg free
  4823                           
  4824                           ;main.c: 466:             PORTD = 0b00000011;
  4825  002854  0E03               	movlw	3
  4826  002856  6E83               	movwf	131,c	;volatile
  4827  002858                     
  4828                           ;main.c: 467:             ms_delay(1);
  4829  002858  0E00               	movlw	0
  4830  00285A  6E09               	movwf	(ms_delay@val+1)^0,c
  4831  00285C  0E01               	movlw	1
  4832  00285E  6E08               	movwf	ms_delay@val^0,c
  4833  002860  EC82  F017         	call	_ms_delay	;wreg free
  4834  002864                     
  4835                           ;main.c: 468:             PORTD = 0b00001001;
  4836  002864  0E09               	movlw	9
  4837  002866  6E83               	movwf	131,c	;volatile
  4838                           
  4839                           ;main.c: 469:             ms_delay(5);
  4840  002868  0E00               	movlw	0
  4841  00286A  6E09               	movwf	(ms_delay@val+1)^0,c
  4842  00286C  0E05               	movlw	5
  4843  00286E  6E08               	movwf	ms_delay@val^0,c
  4844  002870  EC82  F017         	call	_ms_delay	;wreg free
  4845  002874                     
  4846                           ;main.c: 470:             Step_Z++;
  4847  002874  0100               	movlb	0	; () banked
  4848  002876  4BB2               	infsnz	_Step_Z& (0+255),f,b
  4849  002878  2BB3               	incf	(_Step_Z+1)& (0+255),f,b
  4850  00287A  EF42  F014         	goto	l294
  4851  00287E                     l4158:
  4852  00287E  FFFF               	dw	65535	; assembler added errata NOP
  4853                           
  4854                           ;main.c: 474:         stop=1;
  4855  002880  0E01               	movlw	1
  4856  002882  6E75               	movwf	_stop^0,c
  4857  002884                     l294:
  4858  002884  FFFF               	dw	65535	; assembler added errata NOP
  4859  002886  0012               	return		;funcret
  4860  002888  FFFF               	dw	65535	; errata NOP
  4861  00288A                     __end_of_Z_axis:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function _Y_axis *****************
  4865 ;; Defined at:
  4866 ;;		line 410 in file "main.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  direction       1    wreg     unsigned char 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  direction       1   13[COMRAM] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4880 ;;      Params:         0       0       0       0       0       0       0
  4881 ;;      Locals:         1       0       0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0
  4883 ;;      Totals:         1       0       0       0       0       0       0
  4884 ;;Total ram usage:        1 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 2
  4887 ;; This function calls:
  4888 ;;		_ms_delay
  4889 ;; This function is called by:
  4890 ;;		_pick_and_place
  4891 ;;		_return_to_initial
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text12
  4896  00288A                     __ptext12:
  4897                           	callstack 0
  4898  00288A                     _Y_axis:
  4899                           	callstack 0
  4900  00288A  FFFF               	dw	65535	; assembler added errata NOP
  4901                           
  4902                           ;incstack = 0
  4903                           ;Y_axis@direction stored from wreg
  4904  00288C  6E0E               	movwf	Y_axis@direction^0,c
  4905  00288E                     
  4906                           ;main.c: 411:     if(!New_char_RX){
  4907  00288E  5076               	movf	_New_char_RX^0,w,c
  4908  002890  A4D8               	btfss	status,2,c
  4909  002892  EF4D  F014         	goto	u4591
  4910  002896  EF50  F014         	goto	u4590
  4911  00289A                     u4591:
  4912  00289A  FFFF               	dw	65535	; assembler added errata NOP
  4913  00289C  EFBF  F014         	goto	l4118
  4914  0028A0                     u4590:
  4915  0028A0  FFFF               	dw	65535	; assembler added errata NOP
  4916  0028A2                     
  4917                           ;main.c: 412:         if (direction == 0){
  4918  0028A2  500E               	movf	Y_axis@direction^0,w,c
  4919  0028A4  A4D8               	btfss	status,2,c
  4920  0028A6  EF57  F014         	goto	u4601
  4921  0028AA  EF5A  F014         	goto	u4600
  4922  0028AE                     u4601:
  4923  0028AE  FFFF               	dw	65535	; assembler added errata NOP
  4924  0028B0  EF87  F014         	goto	l4100
  4925  0028B4                     u4600:
  4926  0028B4  FFFF               	dw	65535	; assembler added errata NOP
  4927  0028B6                     
  4928                           ;main.c: 413:             PORTB = 0b00110000;
  4929  0028B6  0E30               	movlw	48
  4930  0028B8  6E81               	movwf	129,c	;volatile
  4931  0028BA                     
  4932                           ;main.c: 414:             ms_delay(1);
  4933  0028BA  0E00               	movlw	0
  4934  0028BC  6E09               	movwf	(ms_delay@val+1)^0,c
  4935  0028BE  0E01               	movlw	1
  4936  0028C0  6E08               	movwf	ms_delay@val^0,c
  4937  0028C2  EC82  F017         	call	_ms_delay	;wreg free
  4938  0028C6                     
  4939                           ;main.c: 415:             PORTB = 0b01100000;
  4940  0028C6  0E60               	movlw	96
  4941  0028C8  6E81               	movwf	129,c	;volatile
  4942                           
  4943                           ;main.c: 416:             ms_delay(1);
  4944  0028CA  0E00               	movlw	0
  4945  0028CC  6E09               	movwf	(ms_delay@val+1)^0,c
  4946  0028CE  0E01               	movlw	1
  4947  0028D0  6E08               	movwf	ms_delay@val^0,c
  4948  0028D2  EC82  F017         	call	_ms_delay	;wreg free
  4949  0028D6                     
  4950                           ;main.c: 417:             PORTB = 0b11000000;
  4951  0028D6  0EC0               	movlw	192
  4952  0028D8  6E81               	movwf	129,c	;volatile
  4953  0028DA                     
  4954                           ;main.c: 418:             ms_delay(1);
  4955  0028DA  0E00               	movlw	0
  4956  0028DC  6E09               	movwf	(ms_delay@val+1)^0,c
  4957  0028DE  0E01               	movlw	1
  4958  0028E0  6E08               	movwf	ms_delay@val^0,c
  4959  0028E2  EC82  F017         	call	_ms_delay	;wreg free
  4960                           
  4961                           ;main.c: 419:             PORTB = 0b10010000;
  4962  0028E6  0E90               	movlw	144
  4963  0028E8  6E81               	movwf	129,c	;volatile
  4964  0028EA                     
  4965                           ;main.c: 420:             ms_delay(1);
  4966  0028EA  0E00               	movlw	0
  4967  0028EC  6E09               	movwf	(ms_delay@val+1)^0,c
  4968  0028EE  0E01               	movlw	1
  4969  0028F0  6E08               	movwf	ms_delay@val^0,c
  4970  0028F2  EC82  F017         	call	_ms_delay	;wreg free
  4971  0028F6                     
  4972                           ;main.c: 421:             PORTB = 0b00110000;
  4973  0028F6  0E30               	movlw	48
  4974  0028F8  6E81               	movwf	129,c	;volatile
  4975                           
  4976                           ;main.c: 422:             ms_delay(1);
  4977  0028FA  0E00               	movlw	0
  4978  0028FC  6E09               	movwf	(ms_delay@val+1)^0,c
  4979  0028FE  0E01               	movlw	1
  4980  002900  6E08               	movwf	ms_delay@val^0,c
  4981  002902  EC82  F017         	call	_ms_delay	;wreg free
  4982  002906                     
  4983                           ;main.c: 423:             Step_Y--;
  4984  002906  0100               	movlb	0	; () banked
  4985  002908  07B4               	decf	_Step_Y& (0+255),f,b
  4986  00290A  A0D8               	btfss	status,0,c
  4987  00290C  07B5               	decf	(_Step_Y+1)& (0+255),f,b
  4988  00290E                     l4100:
  4989  00290E  FFFF               	dw	65535	; assembler added errata NOP
  4990                           
  4991                           ;main.c: 425:         if (direction == 1){
  4992  002910  040E               	decf	Y_axis@direction^0,w,c
  4993  002912  A4D8               	btfss	status,2,c
  4994  002914  EF8E  F014         	goto	u4611
  4995  002918  EF91  F014         	goto	u4610
  4996  00291C                     u4611:
  4997  00291C  FFFF               	dw	65535	; assembler added errata NOP
  4998  00291E  EFC2  F014         	goto	l287
  4999  002922                     u4610:
  5000  002922  FFFF               	dw	65535	; assembler added errata NOP
  5001  002924                     
  5002                           ;main.c: 426:             PORTB = 0b10010000;
  5003  002924  0E90               	movlw	144
  5004  002926  6E81               	movwf	129,c	;volatile
  5005  002928                     
  5006                           ;main.c: 427:             ms_delay(1);
  5007  002928  0E00               	movlw	0
  5008  00292A  6E09               	movwf	(ms_delay@val+1)^0,c
  5009  00292C  0E01               	movlw	1
  5010  00292E  6E08               	movwf	ms_delay@val^0,c
  5011  002930  EC82  F017         	call	_ms_delay	;wreg free
  5012  002934                     
  5013                           ;main.c: 428:             PORTB = 0b11000000;
  5014  002934  0EC0               	movlw	192
  5015  002936  6E81               	movwf	129,c	;volatile
  5016                           
  5017                           ;main.c: 429:             ms_delay(1);
  5018  002938  0E00               	movlw	0
  5019  00293A  6E09               	movwf	(ms_delay@val+1)^0,c
  5020  00293C  0E01               	movlw	1
  5021  00293E  6E08               	movwf	ms_delay@val^0,c
  5022  002940  EC82  F017         	call	_ms_delay	;wreg free
  5023  002944                     
  5024                           ;main.c: 430:             PORTB = 0b01100000;
  5025  002944  0E60               	movlw	96
  5026  002946  6E81               	movwf	129,c	;volatile
  5027  002948                     
  5028                           ;main.c: 431:             ms_delay(1);
  5029  002948  0E00               	movlw	0
  5030  00294A  6E09               	movwf	(ms_delay@val+1)^0,c
  5031  00294C  0E01               	movlw	1
  5032  00294E  6E08               	movwf	ms_delay@val^0,c
  5033  002950  EC82  F017         	call	_ms_delay	;wreg free
  5034                           
  5035                           ;main.c: 432:             PORTB = 0b00110000;
  5036  002954  0E30               	movlw	48
  5037  002956  6E81               	movwf	129,c	;volatile
  5038  002958                     
  5039                           ;main.c: 433:             ms_delay(1);
  5040  002958  0E00               	movlw	0
  5041  00295A  6E09               	movwf	(ms_delay@val+1)^0,c
  5042  00295C  0E01               	movlw	1
  5043  00295E  6E08               	movwf	ms_delay@val^0,c
  5044  002960  EC82  F017         	call	_ms_delay	;wreg free
  5045  002964                     
  5046                           ;main.c: 434:             PORTB = 0b10010000;
  5047  002964  0E90               	movlw	144
  5048  002966  6E81               	movwf	129,c	;volatile
  5049                           
  5050                           ;main.c: 435:             ms_delay(1);
  5051  002968  0E00               	movlw	0
  5052  00296A  6E09               	movwf	(ms_delay@val+1)^0,c
  5053  00296C  0E01               	movlw	1
  5054  00296E  6E08               	movwf	ms_delay@val^0,c
  5055  002970  EC82  F017         	call	_ms_delay	;wreg free
  5056  002974                     
  5057                           ;main.c: 436:             Step_Y++;
  5058  002974  0100               	movlb	0	; () banked
  5059  002976  4BB4               	infsnz	_Step_Y& (0+255),f,b
  5060  002978  2BB5               	incf	(_Step_Y+1)& (0+255),f,b
  5061  00297A  EFC2  F014         	goto	l287
  5062  00297E                     l4118:
  5063  00297E  FFFF               	dw	65535	; assembler added errata NOP
  5064                           
  5065                           ;main.c: 440:         stop=1;
  5066  002980  0E01               	movlw	1
  5067  002982  6E75               	movwf	_stop^0,c
  5068  002984                     l287:
  5069  002984  FFFF               	dw	65535	; assembler added errata NOP
  5070  002986  0012               	return		;funcret
  5071  002988  FFFF               	dw	65535	; errata NOP
  5072  00298A                     __end_of_Y_axis:
  5073                           	callstack 0
  5074                           
  5075 ;; *************** function _X_axis *****************
  5076 ;; Defined at:
  5077 ;;		line 376 in file "main.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  direction       1    wreg     unsigned char 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  direction       1   13[COMRAM] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      void 
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5091 ;;      Params:         0       0       0       0       0       0       0
  5092 ;;      Locals:         1       0       0       0       0       0       0
  5093 ;;      Temps:          0       0       0       0       0       0       0
  5094 ;;      Totals:         1       0       0       0       0       0       0
  5095 ;;Total ram usage:        1 bytes
  5096 ;; Hardware stack levels used: 1
  5097 ;; Hardware stack levels required when called: 2
  5098 ;; This function calls:
  5099 ;;		_ms_delay
  5100 ;; This function is called by:
  5101 ;;		_pick_and_place
  5102 ;;		_return_to_initial
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text13
  5107  00298A                     __ptext13:
  5108                           	callstack 0
  5109  00298A                     _X_axis:
  5110                           	callstack 0
  5111  00298A  FFFF               	dw	65535	; assembler added errata NOP
  5112                           
  5113                           ;incstack = 0
  5114                           ;X_axis@direction stored from wreg
  5115  00298C  6E0E               	movwf	X_axis@direction^0,c
  5116  00298E                     
  5117                           ;main.c: 377:     if(!New_char_RX){
  5118  00298E  5076               	movf	_New_char_RX^0,w,c
  5119  002990  A4D8               	btfss	status,2,c
  5120  002992  EFCD  F014         	goto	u4561
  5121  002996  EFD0  F014         	goto	u4560
  5122  00299A                     u4561:
  5123  00299A  FFFF               	dw	65535	; assembler added errata NOP
  5124  00299C  EF3F  F015         	goto	l4078
  5125  0029A0                     u4560:
  5126  0029A0  FFFF               	dw	65535	; assembler added errata NOP
  5127  0029A2                     
  5128                           ;main.c: 378:         if (direction == 0){
  5129  0029A2  500E               	movf	X_axis@direction^0,w,c
  5130  0029A4  A4D8               	btfss	status,2,c
  5131  0029A6  EFD7  F014         	goto	u4571
  5132  0029AA  EFDA  F014         	goto	u4570
  5133  0029AE                     u4571:
  5134  0029AE  FFFF               	dw	65535	; assembler added errata NOP
  5135  0029B0  EF07  F015         	goto	l4060
  5136  0029B4                     u4570:
  5137  0029B4  FFFF               	dw	65535	; assembler added errata NOP
  5138  0029B6                     
  5139                           ;main.c: 379:             PORTA = 0b00000011;
  5140  0029B6  0E03               	movlw	3
  5141  0029B8  6E80               	movwf	128,c	;volatile
  5142  0029BA                     
  5143                           ;main.c: 380:             ms_delay(1);
  5144  0029BA  0E00               	movlw	0
  5145  0029BC  6E09               	movwf	(ms_delay@val+1)^0,c
  5146  0029BE  0E01               	movlw	1
  5147  0029C0  6E08               	movwf	ms_delay@val^0,c
  5148  0029C2  EC82  F017         	call	_ms_delay	;wreg free
  5149  0029C6                     
  5150                           ;main.c: 381:             PORTA = 0b00000110;
  5151  0029C6  0E06               	movlw	6
  5152  0029C8  6E80               	movwf	128,c	;volatile
  5153                           
  5154                           ;main.c: 382:             ms_delay(1);
  5155  0029CA  0E00               	movlw	0
  5156  0029CC  6E09               	movwf	(ms_delay@val+1)^0,c
  5157  0029CE  0E01               	movlw	1
  5158  0029D0  6E08               	movwf	ms_delay@val^0,c
  5159  0029D2  EC82  F017         	call	_ms_delay	;wreg free
  5160  0029D6                     
  5161                           ;main.c: 383:             PORTA = 0b00001100;
  5162  0029D6  0E0C               	movlw	12
  5163  0029D8  6E80               	movwf	128,c	;volatile
  5164  0029DA                     
  5165                           ;main.c: 384:             ms_delay(1);
  5166  0029DA  0E00               	movlw	0
  5167  0029DC  6E09               	movwf	(ms_delay@val+1)^0,c
  5168  0029DE  0E01               	movlw	1
  5169  0029E0  6E08               	movwf	ms_delay@val^0,c
  5170  0029E2  EC82  F017         	call	_ms_delay	;wreg free
  5171                           
  5172                           ;main.c: 385:             PORTA = 0b00001001;
  5173  0029E6  0E09               	movlw	9
  5174  0029E8  6E80               	movwf	128,c	;volatile
  5175  0029EA                     
  5176                           ;main.c: 386:             ms_delay(1);
  5177  0029EA  0E00               	movlw	0
  5178  0029EC  6E09               	movwf	(ms_delay@val+1)^0,c
  5179  0029EE  0E01               	movlw	1
  5180  0029F0  6E08               	movwf	ms_delay@val^0,c
  5181  0029F2  EC82  F017         	call	_ms_delay	;wreg free
  5182  0029F6                     
  5183                           ;main.c: 387:             PORTA = 0b00000011;
  5184  0029F6  0E03               	movlw	3
  5185  0029F8  6E80               	movwf	128,c	;volatile
  5186                           
  5187                           ;main.c: 388:             ms_delay(1);
  5188  0029FA  0E00               	movlw	0
  5189  0029FC  6E09               	movwf	(ms_delay@val+1)^0,c
  5190  0029FE  0E01               	movlw	1
  5191  002A00  6E08               	movwf	ms_delay@val^0,c
  5192  002A02  EC82  F017         	call	_ms_delay	;wreg free
  5193  002A06                     
  5194                           ;main.c: 389:             Step_X--;
  5195  002A06  0100               	movlb	0	; () banked
  5196  002A08  07B6               	decf	_Step_X& (0+255),f,b
  5197  002A0A  A0D8               	btfss	status,0,c
  5198  002A0C  07B7               	decf	(_Step_X+1)& (0+255),f,b
  5199  002A0E                     l4060:
  5200  002A0E  FFFF               	dw	65535	; assembler added errata NOP
  5201                           
  5202                           ;main.c: 391:         if (direction == 1){
  5203  002A10  040E               	decf	X_axis@direction^0,w,c
  5204  002A12  A4D8               	btfss	status,2,c
  5205  002A14  EF0E  F015         	goto	u4581
  5206  002A18  EF11  F015         	goto	u4580
  5207  002A1C                     u4581:
  5208  002A1C  FFFF               	dw	65535	; assembler added errata NOP
  5209  002A1E  EF42  F015         	goto	l280
  5210  002A22                     u4580:
  5211  002A22  FFFF               	dw	65535	; assembler added errata NOP
  5212  002A24                     
  5213                           ;main.c: 392:             PORTA = 0b00001001;
  5214  002A24  0E09               	movlw	9
  5215  002A26  6E80               	movwf	128,c	;volatile
  5216  002A28                     
  5217                           ;main.c: 393:             ms_delay(1);
  5218  002A28  0E00               	movlw	0
  5219  002A2A  6E09               	movwf	(ms_delay@val+1)^0,c
  5220  002A2C  0E01               	movlw	1
  5221  002A2E  6E08               	movwf	ms_delay@val^0,c
  5222  002A30  EC82  F017         	call	_ms_delay	;wreg free
  5223  002A34                     
  5224                           ;main.c: 394:             PORTA = 0b00001100;
  5225  002A34  0E0C               	movlw	12
  5226  002A36  6E80               	movwf	128,c	;volatile
  5227                           
  5228                           ;main.c: 395:             ms_delay(1);
  5229  002A38  0E00               	movlw	0
  5230  002A3A  6E09               	movwf	(ms_delay@val+1)^0,c
  5231  002A3C  0E01               	movlw	1
  5232  002A3E  6E08               	movwf	ms_delay@val^0,c
  5233  002A40  EC82  F017         	call	_ms_delay	;wreg free
  5234  002A44                     
  5235                           ;main.c: 396:             PORTA = 0b00000110;
  5236  002A44  0E06               	movlw	6
  5237  002A46  6E80               	movwf	128,c	;volatile
  5238  002A48                     
  5239                           ;main.c: 397:             ms_delay(1);
  5240  002A48  0E00               	movlw	0
  5241  002A4A  6E09               	movwf	(ms_delay@val+1)^0,c
  5242  002A4C  0E01               	movlw	1
  5243  002A4E  6E08               	movwf	ms_delay@val^0,c
  5244  002A50  EC82  F017         	call	_ms_delay	;wreg free
  5245                           
  5246                           ;main.c: 398:             PORTA = 0b00000011;
  5247  002A54  0E03               	movlw	3
  5248  002A56  6E80               	movwf	128,c	;volatile
  5249  002A58                     
  5250                           ;main.c: 399:             ms_delay(1);
  5251  002A58  0E00               	movlw	0
  5252  002A5A  6E09               	movwf	(ms_delay@val+1)^0,c
  5253  002A5C  0E01               	movlw	1
  5254  002A5E  6E08               	movwf	ms_delay@val^0,c
  5255  002A60  EC82  F017         	call	_ms_delay	;wreg free
  5256  002A64                     
  5257                           ;main.c: 400:             PORTA = 0b00001001;
  5258  002A64  0E09               	movlw	9
  5259  002A66  6E80               	movwf	128,c	;volatile
  5260                           
  5261                           ;main.c: 401:             ms_delay(1);
  5262  002A68  0E00               	movlw	0
  5263  002A6A  6E09               	movwf	(ms_delay@val+1)^0,c
  5264  002A6C  0E01               	movlw	1
  5265  002A6E  6E08               	movwf	ms_delay@val^0,c
  5266  002A70  EC82  F017         	call	_ms_delay	;wreg free
  5267  002A74                     
  5268                           ;main.c: 402:             Step_X++;
  5269  002A74  0100               	movlb	0	; () banked
  5270  002A76  4BB6               	infsnz	_Step_X& (0+255),f,b
  5271  002A78  2BB7               	incf	(_Step_X+1)& (0+255),f,b
  5272  002A7A  EF42  F015         	goto	l280
  5273  002A7E                     l4078:
  5274  002A7E  FFFF               	dw	65535	; assembler added errata NOP
  5275                           
  5276                           ;main.c: 406:         stop=1;
  5277  002A80  0E01               	movlw	1
  5278  002A82  6E75               	movwf	_stop^0,c
  5279  002A84                     l280:
  5280  002A84  FFFF               	dw	65535	; assembler added errata NOP
  5281  002A86  0012               	return		;funcret
  5282  002A88  FFFF               	dw	65535	; errata NOP
  5283  002A8A                     __end_of_X_axis:
  5284                           	callstack 0
  5285                           
  5286 ;; *************** function _Twister *****************
  5287 ;; Defined at:
  5288 ;;		line 478 in file "main.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;  direction       1    wreg     unsigned char 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  direction       1   13[COMRAM] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      void 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5302 ;;      Params:         0       0       0       0       0       0       0
  5303 ;;      Locals:         1       0       0       0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0
  5305 ;;      Totals:         1       0       0       0       0       0       0
  5306 ;;Total ram usage:        1 bytes
  5307 ;; Hardware stack levels used: 1
  5308 ;; Hardware stack levels required when called: 2
  5309 ;; This function calls:
  5310 ;;		_ms_delay
  5311 ;; This function is called by:
  5312 ;;		_pick_and_place
  5313 ;;		_return_to_initial
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text14
  5318  002B84                     __ptext14:
  5319                           	callstack 0
  5320  002B84                     _Twister:
  5321                           	callstack 0
  5322  002B84  FFFF               	dw	65535	; assembler added errata NOP
  5323                           
  5324                           ;incstack = 0
  5325                           ;Twister@direction stored from wreg
  5326  002B86  6E0E               	movwf	Twister@direction^0,c
  5327  002B88                     
  5328                           ;main.c: 479:     if(!New_char_RX){
  5329  002B88  5076               	movf	_New_char_RX^0,w,c
  5330  002B8A  A4D8               	btfss	status,2,c
  5331  002B8C  EFCA  F015         	goto	u4651
  5332  002B90  EFCD  F015         	goto	u4650
  5333  002B94                     u4651:
  5334  002B94  FFFF               	dw	65535	; assembler added errata NOP
  5335  002B96  EF2C  F016         	goto	l4194
  5336  002B9A                     u4650:
  5337  002B9A  FFFF               	dw	65535	; assembler added errata NOP
  5338  002B9C                     
  5339                           ;main.c: 480:         if (direction == 0){
  5340  002B9C  500E               	movf	Twister@direction^0,w,c
  5341  002B9E  A4D8               	btfss	status,2,c
  5342  002BA0  EFD4  F015         	goto	u4661
  5343  002BA4  EFD7  F015         	goto	u4660
  5344  002BA8                     u4661:
  5345  002BA8  FFFF               	dw	65535	; assembler added errata NOP
  5346  002BAA  EFFC  F015         	goto	l4178
  5347  002BAE                     u4660:
  5348  002BAE  FFFF               	dw	65535	; assembler added errata NOP
  5349  002BB0                     
  5350                           ;main.c: 481:             PORTD = 0b00110000;
  5351  002BB0  0E30               	movlw	48
  5352  002BB2  6E83               	movwf	131,c	;volatile
  5353  002BB4                     
  5354                           ;main.c: 482:             ms_delay(1);
  5355  002BB4  0E00               	movlw	0
  5356  002BB6  6E09               	movwf	(ms_delay@val+1)^0,c
  5357  002BB8  0E01               	movlw	1
  5358  002BBA  6E08               	movwf	ms_delay@val^0,c
  5359  002BBC  EC82  F017         	call	_ms_delay	;wreg free
  5360  002BC0                     
  5361                           ;main.c: 483:             PORTD = 0b11000000;
  5362  002BC0  0EC0               	movlw	192
  5363  002BC2  6E83               	movwf	131,c	;volatile
  5364                           
  5365                           ;main.c: 484:             ms_delay(1);
  5366  002BC4  0E00               	movlw	0
  5367  002BC6  6E09               	movwf	(ms_delay@val+1)^0,c
  5368  002BC8  0E01               	movlw	1
  5369  002BCA  6E08               	movwf	ms_delay@val^0,c
  5370  002BCC  EC82  F017         	call	_ms_delay	;wreg free
  5371  002BD0                     
  5372                           ;main.c: 485:             PORTD = 0b10010000;
  5373  002BD0  0E90               	movlw	144
  5374  002BD2  6E83               	movwf	131,c	;volatile
  5375  002BD4                     
  5376                           ;main.c: 486:             ms_delay(1);
  5377  002BD4  0E00               	movlw	0
  5378  002BD6  6E09               	movwf	(ms_delay@val+1)^0,c
  5379  002BD8  0E01               	movlw	1
  5380  002BDA  6E08               	movwf	ms_delay@val^0,c
  5381  002BDC  EC82  F017         	call	_ms_delay	;wreg free
  5382                           
  5383                           ;main.c: 487:             PORTD = 0b00110000;
  5384  002BE0  0E30               	movlw	48
  5385  002BE2  6E83               	movwf	131,c	;volatile
  5386  002BE4                     
  5387                           ;main.c: 488:             ms_delay(1);
  5388  002BE4  0E00               	movlw	0
  5389  002BE6  6E09               	movwf	(ms_delay@val+1)^0,c
  5390  002BE8  0E01               	movlw	1
  5391  002BEA  6E08               	movwf	ms_delay@val^0,c
  5392  002BEC  EC82  F017         	call	_ms_delay	;wreg free
  5393  002BF0                     
  5394                           ;main.c: 489:             Step_Angle--;
  5395  002BF0  0100               	movlb	0	; () banked
  5396  002BF2  07B0               	decf	_Step_Angle& (0+255),f,b
  5397  002BF4  A0D8               	btfss	status,0,c
  5398  002BF6  07B1               	decf	(_Step_Angle+1)& (0+255),f,b
  5399  002BF8                     l4178:
  5400  002BF8  FFFF               	dw	65535	; assembler added errata NOP
  5401                           
  5402                           ;main.c: 491:         if (direction == 1){
  5403  002BFA  040E               	decf	Twister@direction^0,w,c
  5404  002BFC  A4D8               	btfss	status,2,c
  5405  002BFE  EF03  F016         	goto	u4671
  5406  002C02  EF06  F016         	goto	u4670
  5407  002C06                     u4671:
  5408  002C06  FFFF               	dw	65535	; assembler added errata NOP
  5409  002C08  EF2F  F016         	goto	l301
  5410  002C0C                     u4670:
  5411  002C0C  FFFF               	dw	65535	; assembler added errata NOP
  5412  002C0E                     
  5413                           ;main.c: 492:             PORTD = 0b10010000;
  5414  002C0E  0E90               	movlw	144
  5415  002C10  6E83               	movwf	131,c	;volatile
  5416  002C12                     
  5417                           ;main.c: 493:             ms_delay(1);
  5418  002C12  0E00               	movlw	0
  5419  002C14  6E09               	movwf	(ms_delay@val+1)^0,c
  5420  002C16  0E01               	movlw	1
  5421  002C18  6E08               	movwf	ms_delay@val^0,c
  5422  002C1A  EC82  F017         	call	_ms_delay	;wreg free
  5423  002C1E                     
  5424                           ;main.c: 494:             PORTD = 0b01100000;
  5425  002C1E  0E60               	movlw	96
  5426  002C20  6E83               	movwf	131,c	;volatile
  5427                           
  5428                           ;main.c: 495:             ms_delay(1);
  5429  002C22  0E00               	movlw	0
  5430  002C24  6E09               	movwf	(ms_delay@val+1)^0,c
  5431  002C26  0E01               	movlw	1
  5432  002C28  6E08               	movwf	ms_delay@val^0,c
  5433  002C2A  EC82  F017         	call	_ms_delay	;wreg free
  5434  002C2E                     
  5435                           ;main.c: 496:             PORTD = 0b00110000;
  5436  002C2E  0E30               	movlw	48
  5437  002C30  6E83               	movwf	131,c	;volatile
  5438  002C32                     
  5439                           ;main.c: 497:             ms_delay(1);
  5440  002C32  0E00               	movlw	0
  5441  002C34  6E09               	movwf	(ms_delay@val+1)^0,c
  5442  002C36  0E01               	movlw	1
  5443  002C38  6E08               	movwf	ms_delay@val^0,c
  5444  002C3A  EC82  F017         	call	_ms_delay	;wreg free
  5445                           
  5446                           ;main.c: 498:             PORTD = 0b10010000;
  5447  002C3E  0E90               	movlw	144
  5448  002C40  6E83               	movwf	131,c	;volatile
  5449  002C42                     
  5450                           ;main.c: 499:             ms_delay(1);
  5451  002C42  0E00               	movlw	0
  5452  002C44  6E09               	movwf	(ms_delay@val+1)^0,c
  5453  002C46  0E01               	movlw	1
  5454  002C48  6E08               	movwf	ms_delay@val^0,c
  5455  002C4A  EC82  F017         	call	_ms_delay	;wreg free
  5456  002C4E                     
  5457                           ;main.c: 500:             Step_Angle++;
  5458  002C4E  0100               	movlb	0	; () banked
  5459  002C50  4BB0               	infsnz	_Step_Angle& (0+255),f,b
  5460  002C52  2BB1               	incf	(_Step_Angle+1)& (0+255),f,b
  5461  002C54  EF2F  F016         	goto	l301
  5462  002C58                     l4194:
  5463  002C58  FFFF               	dw	65535	; assembler added errata NOP
  5464                           
  5465                           ;main.c: 504:         stop=1;
  5466  002C5A  0E01               	movlw	1
  5467  002C5C  6E75               	movwf	_stop^0,c
  5468  002C5E                     l301:
  5469  002C5E  FFFF               	dw	65535	; assembler added errata NOP
  5470  002C60  0012               	return		;funcret
  5471  002C62  FFFF               	dw	65535	; errata NOP
  5472  002C64                     __end_of_Twister:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _ms_delay *****************
  5476 ;; Defined at:
  5477 ;;		line 517 in file "main.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  val             2    7[COMRAM] unsigned int 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  j               2   11[COMRAM] unsigned int 
  5482 ;;  i               2    9[COMRAM] unsigned int 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      void 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5492 ;;      Params:         2       0       0       0       0       0       0
  5493 ;;      Locals:         4       0       0       0       0       0       0
  5494 ;;      Temps:          0       0       0       0       0       0       0
  5495 ;;      Totals:         6       0       0       0       0       0       0
  5496 ;;Total ram usage:        6 bytes
  5497 ;; Hardware stack levels used: 1
  5498 ;; Hardware stack levels required when called: 1
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_X_axis
  5503 ;;		_Y_axis
  5504 ;;		_Z_axis
  5505 ;;		_Twister
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text15
  5510  002F04                     __ptext15:
  5511                           	callstack 0
  5512  002F04                     _ms_delay:
  5513                           	callstack 0
  5514  002F04  FFFF               	dw	65535	; assembler added errata NOP
  5515  002F06                     
  5516                           ;main.c: 517: void ms_delay(unsigned int val);main.c: 518: {;main.c: 519:      unsigned 
      +                          int i,j;;main.c: 520:         for(i=0;i<val;i++)
  5517  002F06  0E00               	movlw	0
  5518  002F08  6E0B               	movwf	(ms_delay@i+1)^0,c
  5519  002F0A  0E00               	movlw	0
  5520  002F0C  6E0A               	movwf	ms_delay@i^0,c
  5521  002F0E  EF8C  F017         	goto	l4028
  5522  002F12                     l4026:
  5523  002F12  FFFF               	dw	65535	; assembler added errata NOP
  5524                           
  5525                           ;main.c: 521: ; for(j=0;j<1650;j++);
  5526  002F14  4A0A               	infsnz	ms_delay@i^0,f,c
  5527  002F16  2A0B               	incf	(ms_delay@i+1)^0,f,c
  5528  002F18                     l4028:
  5529  002F18  FFFF               	dw	65535	; assembler added errata NOP
  5530  002F1A  5008               	movf	ms_delay@val^0,w,c
  5531  002F1C  5C0A               	subwf	ms_delay@i^0,w,c
  5532  002F1E  5009               	movf	(ms_delay@val+1)^0,w,c
  5533  002F20  580B               	subwfb	(ms_delay@i+1)^0,w,c
  5534  002F22  A0D8               	btfss	status,0,c
  5535  002F24  EF96  F017         	goto	u4541
  5536  002F28  EF99  F017         	goto	u4540
  5537  002F2C                     u4541:
  5538  002F2C  FFFF               	dw	65535	; assembler added errata NOP
  5539  002F2E  EF89  F017         	goto	l4026
  5540  002F32                     u4540:
  5541  002F32  FFFF               	dw	65535	; assembler added errata NOP
  5542  002F34  0E00               	movlw	0
  5543  002F36  6E0D               	movwf	(ms_delay@j+1)^0,c
  5544  002F38  0E00               	movlw	0
  5545  002F3A  6E0C               	movwf	ms_delay@j^0,c
  5546  002F3C                     l4036:
  5547  002F3C  FFFF               	dw	65535	; assembler added errata NOP
  5548  002F3E  4A0C               	infsnz	ms_delay@j^0,f,c
  5549  002F40  2A0D               	incf	(ms_delay@j+1)^0,f,c
  5550  002F42  0E72               	movlw	114
  5551  002F44  5C0C               	subwf	ms_delay@j^0,w,c
  5552  002F46  0E06               	movlw	6
  5553  002F48  580D               	subwfb	(ms_delay@j+1)^0,w,c
  5554  002F4A  A0D8               	btfss	status,0,c
  5555  002F4C  EFAA  F017         	goto	u4551
  5556  002F50  EFAD  F017         	goto	u4550
  5557  002F54                     u4551:
  5558  002F54  FFFF               	dw	65535	; assembler added errata NOP
  5559  002F56  EF9E  F017         	goto	l4036
  5560  002F5A                     u4550:
  5561  002F5A  FFFF               	dw	65535	; assembler added errata NOP
  5562  002F5C  0012               	return		;funcret
  5563  002F5E  FFFF               	dw	65535	; errata NOP
  5564  002F60                     __end_of_ms_delay:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function _change_sequence *****************
  5568 ;; Defined at:
  5569 ;;		line 252 in file "main.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  i               2   16[COMRAM] int 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5583 ;;      Params:         0       0       0       0       0       0       0
  5584 ;;      Locals:         2       0       0       0       0       0       0
  5585 ;;      Temps:          3       0       0       0       0       0       0
  5586 ;;      Totals:         5       0       0       0       0       0       0
  5587 ;;Total ram usage:        5 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 2
  5590 ;; This function calls:
  5591 ;;		_print_string
  5592 ;; This function is called by:
  5593 ;;		_start_up_menu
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text16
  5598  002D04                     __ptext16:
  5599                           	callstack 0
  5600  002D04                     _change_sequence:
  5601                           	callstack 0
  5602  002D04  FFFF               	dw	65535	; assembler added errata NOP
  5603  002D06                     
  5604                           ;main.c: 253:     print_string("\nThe current sequence is: ");
  5605  002D06  0E8D               	movlw	low STR_4
  5606  002D08  6E08               	movwf	print_string@strng^0,c
  5607  002D0A  0E7F               	movlw	high STR_4
  5608  002D0C  6E09               	movwf	(print_string@strng+1)^0,c
  5609  002D0E  EC32  F016         	call	_print_string	;wreg free
  5610                           
  5611                           ;main.c: 254:     print_string(sequence);
  5612  002D12  0EF5               	movlw	low _sequence
  5613  002D14  6E08               	movwf	print_string@strng^0,c
  5614  002D16  0E00               	movlw	high _sequence
  5615  002D18  6E09               	movwf	(print_string@strng+1)^0,c
  5616  002D1A  EC32  F016         	call	_print_string	;wreg free
  5617                           
  5618                           ;main.c: 255:     print_string("\nPlease give the new sequence as input\r");
  5619  002D1E  0E98               	movlw	low STR_5
  5620  002D20  6E08               	movwf	print_string@strng^0,c
  5621  002D22  0E7E               	movlw	high STR_5
  5622  002D24  6E09               	movwf	(print_string@strng+1)^0,c
  5623  002D26  EC32  F016         	call	_print_string	;wreg free
  5624  002D2A                     
  5625                           ;main.c: 256:     int i = 0;
  5626  002D2A  0E00               	movlw	0
  5627  002D2C  6E12               	movwf	(change_sequence@i+1)^0,c
  5628  002D2E  0E00               	movlw	0
  5629  002D30  6E11               	movwf	change_sequence@i^0,c
  5630  002D32                     l3712:
  5631  002D32  FFFF               	dw	65535	; assembler added errata NOP
  5632                           
  5633                           ;main.c: 258:         if(New_char_RX){
  5634  002D34  5076               	movf	_New_char_RX^0,w,c
  5635  002D36  B4D8               	btfsc	status,2,c
  5636  002D38  EFA0  F016         	goto	u4201
  5637  002D3C  EFA3  F016         	goto	u4200
  5638  002D40                     u4201:
  5639  002D40  FFFF               	dw	65535	; assembler added errata NOP
  5640  002D42  EF99  F016         	goto	l3712
  5641  002D46                     u4200:
  5642  002D46  FFFF               	dw	65535	; assembler added errata NOP
  5643  002D48                     l3714:
  5644  002D48  FFFF               	dw	65535	; assembler added errata NOP
  5645                           
  5646                           ;main.c: 260:                 sequence[i]=input_str[i];
  5647  002D4A  0EEB               	movlw	low _input_str
  5648  002D4C  2411               	addwf	change_sequence@i^0,w,c
  5649  002D4E  6ED9               	movwf	fsr2l,c
  5650  002D50  0E00               	movlw	high _input_str
  5651  002D52  2012               	addwfc	(change_sequence@i+1)^0,w,c
  5652  002D54  6EDA               	movwf	fsr2h,c
  5653  002D56  0EF5               	movlw	low _sequence
  5654  002D58  2411               	addwf	change_sequence@i^0,w,c
  5655  002D5A  6EE1               	movwf	fsr1l,c
  5656  002D5C  0E00               	movlw	high _sequence
  5657  002D5E  2012               	addwfc	(change_sequence@i+1)^0,w,c
  5658  002D60  6EE2               	movwf	fsr1h,c
  5659  002D62  CFDF FFE7          	movff	indf2,indf1
  5660  002D66                     
  5661                           ;main.c: 261:             }while(input_str[i++]!='\n');
  5662  002D66  5011               	movf	change_sequence@i^0,w,c
  5663  002D68  6E0E               	movwf	??_change_sequence^0,c
  5664  002D6A  5012               	movf	(change_sequence@i+1)^0,w,c
  5665  002D6C  6E0F               	movwf	(??_change_sequence+1)^0,c
  5666  002D6E  4A11               	infsnz	change_sequence@i^0,f,c
  5667  002D70  2A12               	incf	(change_sequence@i+1)^0,f,c
  5668  002D72  0EEB               	movlw	low _input_str
  5669  002D74  240E               	addwf	??_change_sequence^0,w,c
  5670  002D76  6ED9               	movwf	fsr2l,c
  5671  002D78  0E00               	movlw	high _input_str
  5672  002D7A  200F               	addwfc	(??_change_sequence+1)^0,w,c
  5673  002D7C  6EDA               	movwf	fsr2h,c
  5674  002D7E  0E0A               	movlw	10
  5675  002D80  18DE               	xorwf	postinc2,w,c
  5676  002D82  A4D8               	btfss	status,2,c
  5677  002D84  EFC6  F016         	goto	u4211
  5678  002D88  EFC9  F016         	goto	u4210
  5679  002D8C                     u4211:
  5680  002D8C  FFFF               	dw	65535	; assembler added errata NOP
  5681  002D8E  EFA4  F016         	goto	l3714
  5682  002D92                     u4210:
  5683  002D92  FFFF               	dw	65535	; assembler added errata NOP
  5684  002D94                     
  5685                           ;main.c: 262:             New_char_RX=0;
  5686  002D94  0E00               	movlw	0
  5687  002D96  6E76               	movwf	_New_char_RX^0,c
  5688  002D98  0012               	return		;funcret
  5689  002D9A  FFFF               	dw	65535	; errata NOP
  5690  002D9C                     __end_of_change_sequence:
  5691                           	callstack 0
  5692                           
  5693 ;; *************** function _add_component *****************
  5694 ;; Defined at:
  5695 ;;		line 268 in file "main.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;  add_componnt    2   29[COMRAM] unsigned char [2]
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5709 ;;      Params:         0       0       0       0       0       0       0
  5710 ;;      Locals:         2       0       0       0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0
  5712 ;;      Totals:         2       0       0       0       0       0       0
  5713 ;;Total ram usage:        2 bytes
  5714 ;; Hardware stack levels used: 1
  5715 ;; Hardware stack levels required when called: 3
  5716 ;; This function calls:
  5717 ;;		_atoi
  5718 ;;		_print_string
  5719 ;;		_strncat
  5720 ;; This function is called by:
  5721 ;;		_start_up_menu
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text17
  5726  001A88                     __ptext17:
  5727                           	callstack 0
  5728  001A88                     _add_component:
  5729                           	callstack 0
  5730  001A88  FFFF               	dw	65535	; assembler added errata NOP
  5731  001A8A                     
  5732                           ;main.c: 269:     char add_componnt[]=" ";
  5733  001A8A  C0E7  F01E         	movff	add_component@F3131,add_component@add_componnt
  5734  001A8E  C0E8  F01F         	movff	add_component@F3131+1,add_component@add_componnt+1
  5735  001A92                     
  5736                           ;main.c: 270:     print_string("\nThe Current sequence is:");
  5737  001A92  0EA8               	movlw	low STR_6
  5738  001A94  6E08               	movwf	print_string@strng^0,c
  5739  001A96  0E7F               	movlw	high STR_6
  5740  001A98  6E09               	movwf	(print_string@strng+1)^0,c
  5741  001A9A  EC32  F016         	call	_print_string	;wreg free
  5742                           
  5743                           ;main.c: 271:     print_string(sequence);
  5744  001A9E  0EF5               	movlw	low _sequence
  5745  001AA0  6E08               	movwf	print_string@strng^0,c
  5746  001AA2  0E00               	movlw	high _sequence
  5747  001AA4  6E09               	movwf	(print_string@strng+1)^0,c
  5748  001AA6  EC32  F016         	call	_print_string	;wreg free
  5749                           
  5750                           ;main.c: 272:     print_string("\nEnter the component you want to add: A, B, C or D?");
  5751  001AAA  0E64               	movlw	low STR_7
  5752  001AAC  6E08               	movwf	print_string@strng^0,c
  5753  001AAE  0E7E               	movlw	high STR_7
  5754  001AB0  6E09               	movwf	(print_string@strng+1)^0,c
  5755  001AB2  EC32  F016         	call	_print_string	;wreg free
  5756  001AB6                     l3724:
  5757  001AB6  FFFF               	dw	65535	; assembler added errata NOP
  5758                           
  5759                           ;main.c: 274:         if(New_char_RX){
  5760  001AB8  5076               	movf	_New_char_RX^0,w,c
  5761  001ABA  B4D8               	btfsc	status,2,c
  5762  001ABC  EF62  F00D         	goto	u4221
  5763  001AC0  EF65  F00D         	goto	u4220
  5764  001AC4                     u4221:
  5765  001AC4  FFFF               	dw	65535	; assembler added errata NOP
  5766  001AC6  EF5B  F00D         	goto	l3724
  5767  001ACA                     u4220:
  5768  001ACA  FFFF               	dw	65535	; assembler added errata NOP
  5769  001ACC                     
  5770                           ;main.c: 275:             add_componnt[0]=input_str[0];
  5771  001ACC  C0EB  F01E         	movff	_input_str,add_component@add_componnt	;volatile
  5772  001AD0                     
  5773                           ;main.c: 276:             if(add_componnt[0]=='D'){
  5774  001AD0  0E44               	movlw	68
  5775  001AD2  181E               	xorwf	add_component@add_componnt^0,w,c
  5776  001AD4  A4D8               	btfss	status,2,c
  5777  001AD6  EF6F  F00D         	goto	u4231
  5778  001ADA  EF72  F00D         	goto	u4230
  5779  001ADE                     u4231:
  5780  001ADE  FFFF               	dw	65535	; assembler added errata NOP
  5781  001AE0  EF21  F00E         	goto	l3778
  5782  001AE4                     u4230:
  5783  001AE4  FFFF               	dw	65535	; assembler added errata NOP
  5784  001AE6                     
  5785                           ;main.c: 277:                 New_char_RX=0;
  5786  001AE6  0E00               	movlw	0
  5787  001AE8  6E76               	movwf	_New_char_RX^0,c
  5788  001AEA                     
  5789                           ;main.c: 278:                 print_string("\nEnter the pick position X:");
  5790  001AEA  0E55               	movlw	low STR_8
  5791  001AEC  6E08               	movwf	print_string@strng^0,c
  5792  001AEE  0E7F               	movlw	high STR_8
  5793  001AF0  6E09               	movwf	(print_string@strng+1)^0,c
  5794  001AF2  EC32  F016         	call	_print_string	;wreg free
  5795  001AF6                     l3734:
  5796  001AF6  FFFF               	dw	65535	; assembler added errata NOP
  5797                           
  5798                           ;main.c: 280:                     if(New_char_RX){
  5799  001AF8  5076               	movf	_New_char_RX^0,w,c
  5800  001AFA  B4D8               	btfsc	status,2,c
  5801  001AFC  EF82  F00D         	goto	u4241
  5802  001B00  EF85  F00D         	goto	u4240
  5803  001B04                     u4241:
  5804  001B04  FFFF               	dw	65535	; assembler added errata NOP
  5805  001B06  EF7B  F00D         	goto	l3734
  5806  001B0A                     u4240:
  5807  001B0A  FFFF               	dw	65535	; assembler added errata NOP
  5808  001B0C                     
  5809                           ;main.c: 281:                         X_Pick_D=atoi(input_str);
  5810  001B0C  0EEB               	movlw	low _input_str
  5811  001B0E  6E0F               	movwf	atoi@s^0,c
  5812  001B10  0E00               	movlw	high _input_str
  5813  001B12  6E10               	movwf	(atoi@s+1)^0,c
  5814  001B14  EC40  F00F         	call	_atoi	;wreg free
  5815  001B18  C00F  F0AE         	movff	?_atoi,_X_Pick_D
  5816  001B1C  C010  F0AF         	movff	?_atoi+1,_X_Pick_D+1
  5817  001B20                     
  5818                           ;main.c: 282:                         New_char_RX=0;
  5819  001B20  0E00               	movlw	0
  5820  001B22  6E76               	movwf	_New_char_RX^0,c
  5821  001B24                     
  5822                           ;main.c: 286:                 print_string("\nEnter the pick position Y:");
  5823  001B24  0E71               	movlw	low STR_9
  5824  001B26  6E08               	movwf	print_string@strng^0,c
  5825  001B28  0E7F               	movlw	high STR_9
  5826  001B2A  6E09               	movwf	(print_string@strng+1)^0,c
  5827  001B2C  EC32  F016         	call	_print_string	;wreg free
  5828  001B30                     l3742:
  5829  001B30  FFFF               	dw	65535	; assembler added errata NOP
  5830                           
  5831                           ;main.c: 288:                     if(New_char_RX){
  5832  001B32  5076               	movf	_New_char_RX^0,w,c
  5833  001B34  B4D8               	btfsc	status,2,c
  5834  001B36  EF9F  F00D         	goto	u4251
  5835  001B3A  EFA2  F00D         	goto	u4250
  5836  001B3E                     u4251:
  5837  001B3E  FFFF               	dw	65535	; assembler added errata NOP
  5838  001B40  EF98  F00D         	goto	l3742
  5839  001B44                     u4250:
  5840  001B44  FFFF               	dw	65535	; assembler added errata NOP
  5841  001B46                     
  5842                           ;main.c: 289:                         Y_Pick_D=(atoi(input_str));
  5843  001B46  0EEB               	movlw	low _input_str
  5844  001B48  6E0F               	movwf	atoi@s^0,c
  5845  001B4A  0E00               	movlw	high _input_str
  5846  001B4C  6E10               	movwf	(atoi@s+1)^0,c
  5847  001B4E  EC40  F00F         	call	_atoi	;wreg free
  5848  001B52  C00F  F0AC         	movff	?_atoi,_Y_Pick_D
  5849  001B56  C010  F0AD         	movff	?_atoi+1,_Y_Pick_D+1
  5850  001B5A                     
  5851                           ;main.c: 290:                         New_char_RX=0;
  5852  001B5A  0E00               	movlw	0
  5853  001B5C  6E76               	movwf	_New_char_RX^0,c
  5854  001B5E                     
  5855                           ;main.c: 294:                 print_string("\nEnter the pick orientation:");
  5856  001B5E  0E38               	movlw	low STR_10
  5857  001B60  6E08               	movwf	print_string@strng^0,c
  5858  001B62  0E7F               	movlw	high STR_10
  5859  001B64  6E09               	movwf	(print_string@strng+1)^0,c
  5860  001B66  EC32  F016         	call	_print_string	;wreg free
  5861  001B6A                     l3750:
  5862  001B6A  FFFF               	dw	65535	; assembler added errata NOP
  5863                           
  5864                           ;main.c: 296:                     if(New_char_RX){
  5865  001B6C  5076               	movf	_New_char_RX^0,w,c
  5866  001B6E  B4D8               	btfsc	status,2,c
  5867  001B70  EFBC  F00D         	goto	u4261
  5868  001B74  EFBF  F00D         	goto	u4260
  5869  001B78                     u4261:
  5870  001B78  FFFF               	dw	65535	; assembler added errata NOP
  5871  001B7A  EFB5  F00D         	goto	l3750
  5872  001B7E                     u4260:
  5873  001B7E  FFFF               	dw	65535	; assembler added errata NOP
  5874  001B80                     
  5875                           ;main.c: 297:                         Pick_Angle_D=(atoi(input_str));
  5876  001B80  0EEB               	movlw	low _input_str
  5877  001B82  6E0F               	movwf	atoi@s^0,c
  5878  001B84  0E00               	movlw	high _input_str
  5879  001B86  6E10               	movwf	(atoi@s+1)^0,c
  5880  001B88  EC40  F00F         	call	_atoi	;wreg free
  5881  001B8C  C00F  F0AA         	movff	?_atoi,_Pick_Angle_D
  5882  001B90  C010  F0AB         	movff	?_atoi+1,_Pick_Angle_D+1
  5883  001B94                     
  5884                           ;main.c: 298:                         New_char_RX=0;
  5885  001B94  0E00               	movlw	0
  5886  001B96  6E76               	movwf	_New_char_RX^0,c
  5887  001B98                     
  5888                           ;main.c: 302:                 print_string("\nEnter the place position X:");
  5889  001B98  0EFE               	movlw	low STR_11
  5890  001B9A  6E08               	movwf	print_string@strng^0,c
  5891  001B9C  0E7E               	movlw	high STR_11
  5892  001B9E  6E09               	movwf	(print_string@strng+1)^0,c
  5893  001BA0  EC32  F016         	call	_print_string	;wreg free
  5894  001BA4                     l3758:
  5895  001BA4  FFFF               	dw	65535	; assembler added errata NOP
  5896                           
  5897                           ;main.c: 304:                     if(New_char_RX){
  5898  001BA6  5076               	movf	_New_char_RX^0,w,c
  5899  001BA8  B4D8               	btfsc	status,2,c
  5900  001BAA  EFD9  F00D         	goto	u4271
  5901  001BAE  EFDC  F00D         	goto	u4270
  5902  001BB2                     u4271:
  5903  001BB2  FFFF               	dw	65535	; assembler added errata NOP
  5904  001BB4  EFD2  F00D         	goto	l3758
  5905  001BB8                     u4270:
  5906  001BB8  FFFF               	dw	65535	; assembler added errata NOP
  5907  001BBA                     
  5908                           ;main.c: 305:                         X_Place_D=(atoi(input_str));
  5909  001BBA  0EEB               	movlw	low _input_str
  5910  001BBC  6E0F               	movwf	atoi@s^0,c
  5911  001BBE  0E00               	movlw	high _input_str
  5912  001BC0  6E10               	movwf	(atoi@s+1)^0,c
  5913  001BC2  EC40  F00F         	call	_atoi	;wreg free
  5914  001BC6  C00F  F0A8         	movff	?_atoi,_X_Place_D
  5915  001BCA  C010  F0A9         	movff	?_atoi+1,_X_Place_D+1
  5916  001BCE                     
  5917                           ;main.c: 306:                         New_char_RX=0;
  5918  001BCE  0E00               	movlw	0
  5919  001BD0  6E76               	movwf	_New_char_RX^0,c
  5920  001BD2                     
  5921                           ;main.c: 310:                 print_string("\nEnter the place position Y:");
  5922  001BD2  0E1B               	movlw	low STR_12
  5923  001BD4  6E08               	movwf	print_string@strng^0,c
  5924  001BD6  0E7F               	movlw	high STR_12
  5925  001BD8  6E09               	movwf	(print_string@strng+1)^0,c
  5926  001BDA  EC32  F016         	call	_print_string	;wreg free
  5927  001BDE                     l3766:
  5928  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  5929                           
  5930                           ;main.c: 312:                     if(New_char_RX){
  5931  001BE0  5076               	movf	_New_char_RX^0,w,c
  5932  001BE2  B4D8               	btfsc	status,2,c
  5933  001BE4  EFF6  F00D         	goto	u4281
  5934  001BE8  EFF9  F00D         	goto	u4280
  5935  001BEC                     u4281:
  5936  001BEC  FFFF               	dw	65535	; assembler added errata NOP
  5937  001BEE  EFEF  F00D         	goto	l3766
  5938  001BF2                     u4280:
  5939  001BF2  FFFF               	dw	65535	; assembler added errata NOP
  5940  001BF4                     
  5941                           ;main.c: 313:                         Y_Place_D=(atoi(input_str));
  5942  001BF4  0EEB               	movlw	low _input_str
  5943  001BF6  6E0F               	movwf	atoi@s^0,c
  5944  001BF8  0E00               	movlw	high _input_str
  5945  001BFA  6E10               	movwf	(atoi@s+1)^0,c
  5946  001BFC  EC40  F00F         	call	_atoi	;wreg free
  5947  001C00  C00F  F0A6         	movff	?_atoi,_Y_Place_D
  5948  001C04  C010  F0A7         	movff	?_atoi+1,_Y_Place_D+1
  5949  001C08                     
  5950                           ;main.c: 314:                         New_char_RX=0;
  5951  001C08  0E00               	movlw	0
  5952  001C0A  6E76               	movwf	_New_char_RX^0,c
  5953  001C0C                     
  5954                           ;main.c: 318:                 print_string("\nEnter the place orientation:");
  5955  001C0C  0EE0               	movlw	low STR_13
  5956  001C0E  6E08               	movwf	print_string@strng^0,c
  5957  001C10  0E7E               	movlw	high STR_13
  5958  001C12  6E09               	movwf	(print_string@strng+1)^0,c
  5959  001C14  EC32  F016         	call	_print_string	;wreg free
  5960  001C18                     l3774:
  5961  001C18  FFFF               	dw	65535	; assembler added errata NOP
  5962                           
  5963                           ;main.c: 320:                         if(New_char_RX){
  5964  001C1A  5076               	movf	_New_char_RX^0,w,c
  5965  001C1C  B4D8               	btfsc	status,2,c
  5966  001C1E  EF13  F00E         	goto	u4291
  5967  001C22  EF16  F00E         	goto	u4290
  5968  001C26                     u4291:
  5969  001C26  FFFF               	dw	65535	; assembler added errata NOP
  5970  001C28  EF0C  F00E         	goto	l3774
  5971  001C2C                     u4290:
  5972  001C2C  FFFF               	dw	65535	; assembler added errata NOP
  5973  001C2E                     
  5974                           ;main.c: 321:                         Place_Angle_D=(atoi(input_str));
  5975  001C2E  0EEB               	movlw	low _input_str
  5976  001C30  6E0F               	movwf	atoi@s^0,c
  5977  001C32  0E00               	movlw	high _input_str
  5978  001C34  6E10               	movwf	(atoi@s+1)^0,c
  5979  001C36  EC40  F00F         	call	_atoi	;wreg free
  5980  001C3A  C00F  F0A4         	movff	?_atoi,_Place_Angle_D
  5981  001C3E  C010  F0A5         	movff	?_atoi+1,_Place_Angle_D+1
  5982  001C42                     l3778:
  5983  001C42  FFFF               	dw	65535	; assembler added errata NOP
  5984                           
  5985                           ;main.c: 322:                         New_char_RX=0;
  5986  001C44  0E00               	movlw	0
  5987  001C46  6E76               	movwf	_New_char_RX^0,c
  5988  001C48                     
  5989                           ;main.c: 334:     State='0';
  5990  001C48  0E30               	movlw	48
  5991  001C4A  6E77               	movwf	_State^0,c
  5992  001C4C                     
  5993                           ;main.c: 335:     strncat(sequence,add_componnt,1);
  5994  001C4C  0EF5               	movlw	low _sequence
  5995  001C4E  6E0C               	movwf	strncat@d^0,c
  5996  001C50  0E00               	movlw	high _sequence
  5997  001C52  6E0D               	movwf	(strncat@d+1)^0,c
  5998  001C54  0E1E               	movlw	low add_component@add_componnt
  5999  001C56  6E0E               	movwf	strncat@s^0,c
  6000  001C58  0E00               	movlw	high add_component@add_componnt
  6001  001C5A  6E0F               	movwf	(strncat@s+1)^0,c
  6002  001C5C  0E00               	movlw	0
  6003  001C5E  6E11               	movwf	(strncat@n+1)^0,c
  6004  001C60  0E01               	movlw	1
  6005  001C62  6E10               	movwf	strncat@n^0,c
  6006  001C64  ECCE  F016         	call	_strncat	;wreg free
  6007  001C68                     
  6008                           ;main.c: 336:     print_string("\n\nComponent Added: ");
  6009  001C68  0EC2               	movlw	low STR_14
  6010  001C6A  6E08               	movwf	print_string@strng^0,c
  6011  001C6C  0E7F               	movlw	high STR_14
  6012  001C6E  6E09               	movwf	(print_string@strng+1)^0,c
  6013  001C70  EC32  F016         	call	_print_string	;wreg free
  6014  001C74                     
  6015                           ;main.c: 337:     print_string(add_componnt);
  6016  001C74  0E1E               	movlw	low add_component@add_componnt
  6017  001C76  6E08               	movwf	print_string@strng^0,c
  6018  001C78  0E00               	movlw	high add_component@add_componnt
  6019  001C7A  6E09               	movwf	(print_string@strng+1)^0,c
  6020  001C7C  EC32  F016         	call	_print_string	;wreg free
  6021  001C80                     
  6022                           ;main.c: 338:     New_char_RX=0;
  6023  001C80  0E00               	movlw	0
  6024  001C82  6E76               	movwf	_New_char_RX^0,c
  6025  001C84  0012               	return		;funcret
  6026  001C86  FFFF               	dw	65535	; errata NOP
  6027  001C88                     __end_of_add_component:
  6028                           	callstack 0
  6029                           
  6030 ;; *************** function _strncat *****************
  6031 ;; Defined at:
  6032 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strncat.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  d               2   11[COMRAM] PTR unsigned char 
  6035 ;;		 -> sequence(4), 
  6036 ;;  s               2   13[COMRAM] PTR const unsigned char 
  6037 ;;		 -> add_component@add_componnt(2), 
  6038 ;;  n               2   15[COMRAM] unsigned int 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  a               2    0        PTR unsigned char 
  6041 ;;		 -> sequence(4), 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  2   11[COMRAM] PTR unsigned char 
  6044 ;; Registers used:
  6045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6051 ;;      Params:         6       0       0       0       0       0       0
  6052 ;;      Locals:         0       0       0       0       0       0       0
  6053 ;;      Temps:          0       0       0       0       0       0       0
  6054 ;;      Totals:         6       0       0       0       0       0       0
  6055 ;;Total ram usage:        6 bytes
  6056 ;; Hardware stack levels used: 1
  6057 ;; Hardware stack levels required when called: 2
  6058 ;; This function calls:
  6059 ;;		_strlen
  6060 ;; This function is called by:
  6061 ;;		_add_component
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text18
  6066  002D9C                     __ptext18:
  6067                           	callstack 0
  6068  002D9C                     _strncat:
  6069                           	callstack 0
  6070  002D9C  FFFF               	dw	65535	; assembler added errata NOP
  6071  002D9E  C00C  F008         	movff	strncat@d,strlen@s
  6072  002DA2  C00D  F009         	movff	strncat@d+1,strlen@s+1
  6073  002DA6  EC01  F018         	call	_strlen	;wreg free
  6074  002DAA  5008               	movf	?_strlen^0,w,c
  6075  002DAC  260C               	addwf	strncat@d^0,f,c
  6076  002DAE  5009               	movf	(?_strlen+1)^0,w,c
  6077  002DB0  220D               	addwfc	(strncat@d+1)^0,f,c
  6078  002DB2  EFED  F016         	goto	l2944
  6079  002DB6                     l2936:
  6080  002DB6  FFFF               	dw	65535	; assembler added errata NOP
  6081  002DB8  0610               	decf	strncat@n^0,f,c
  6082  002DBA  A0D8               	btfss	status,0,c
  6083  002DBC  0611               	decf	(strncat@n+1)^0,f,c
  6084  002DBE  C00E  FFD9         	movff	strncat@s,fsr2l
  6085  002DC2  C00F  FFDA         	movff	strncat@s+1,fsr2h
  6086  002DC6  C00C  FFE1         	movff	strncat@d,fsr1l
  6087  002DCA  C00D  FFE2         	movff	strncat@d+1,fsr1h
  6088  002DCE  CFDF FFE7          	movff	indf2,indf1
  6089  002DD2  4A0E               	infsnz	strncat@s^0,f,c
  6090  002DD4  2A0F               	incf	(strncat@s+1)^0,f,c
  6091  002DD6  4A0C               	infsnz	strncat@d^0,f,c
  6092  002DD8  2A0D               	incf	(strncat@d+1)^0,f,c
  6093  002DDA                     l2944:
  6094  002DDA  FFFF               	dw	65535	; assembler added errata NOP
  6095  002DDC  5010               	movf	strncat@n^0,w,c
  6096  002DDE  1011               	iorwf	(strncat@n+1)^0,w,c
  6097  002DE0  B4D8               	btfsc	status,2,c
  6098  002DE2  EFF5  F016         	goto	u2871
  6099  002DE6  EFF8  F016         	goto	u2870
  6100  002DEA                     u2871:
  6101  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  6102  002DEC  EF06  F017         	goto	l2948
  6103  002DF0                     u2870:
  6104  002DF0  FFFF               	dw	65535	; assembler added errata NOP
  6105  002DF2  C00E  FFD9         	movff	strncat@s,fsr2l
  6106  002DF6  C00F  FFDA         	movff	strncat@s+1,fsr2h
  6107  002DFA  50DF               	movf	indf2,w,c
  6108  002DFC  A4D8               	btfss	status,2,c
  6109  002DFE  EF03  F017         	goto	u2881
  6110  002E02  EF06  F017         	goto	u2880
  6111  002E06                     u2881:
  6112  002E06  FFFF               	dw	65535	; assembler added errata NOP
  6113  002E08  EFDB  F016         	goto	l2936
  6114  002E0C                     u2880:
  6115  002E0C                     l2948:
  6116  002E0C  FFFF               	dw	65535	; assembler added errata NOP
  6117  002E0E  C00C  FFD9         	movff	strncat@d,fsr2l
  6118  002E12  C00D  FFDA         	movff	strncat@d+1,fsr2h
  6119  002E16  0E00               	movlw	0
  6120  002E18  6EDF               	movwf	indf2,c
  6121  002E1A  4A0C               	infsnz	strncat@d^0,f,c
  6122  002E1C  2A0D               	incf	(strncat@d+1)^0,f,c
  6123  002E1E  0012               	return		;funcret
  6124  002E20  FFFF               	dw	65535	; errata NOP
  6125  002E22                     __end_of_strncat:
  6126                           	callstack 0
  6127                           
  6128 ;; *************** function _strlen *****************
  6129 ;; Defined at:
  6130 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6133 ;;		 -> sequence(4), 
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;  a               2    9[COMRAM] PTR const unsigned char 
  6136 ;;		 -> sequence(4), 
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  2    7[COMRAM] unsigned int 
  6139 ;; Registers used:
  6140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6146 ;;      Params:         2       0       0       0       0       0       0
  6147 ;;      Locals:         2       0       0       0       0       0       0
  6148 ;;      Temps:          0       0       0       0       0       0       0
  6149 ;;      Totals:         4       0       0       0       0       0       0
  6150 ;;Total ram usage:        4 bytes
  6151 ;; Hardware stack levels used: 1
  6152 ;; Hardware stack levels required when called: 1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_remove_component
  6157 ;;		_strncat
  6158 ;;		_strrchr
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text19
  6163  003002                     __ptext19:
  6164                           	callstack 0
  6165  003002                     _strlen:
  6166                           	callstack 0
  6167  003002  FFFF               	dw	65535	; assembler added errata NOP
  6168  003004  C008  F00A         	movff	strlen@s,strlen@a
  6169  003008  C009  F00B         	movff	strlen@s+1,strlen@a+1
  6170  00300C  EF0B  F018         	goto	l2620
  6171  003010                     l2618:
  6172  003010  FFFF               	dw	65535	; assembler added errata NOP
  6173  003012  4A08               	infsnz	strlen@s^0,f,c
  6174  003014  2A09               	incf	(strlen@s+1)^0,f,c
  6175  003016                     l2620:
  6176  003016  FFFF               	dw	65535	; assembler added errata NOP
  6177  003018  C008  FFD9         	movff	strlen@s,fsr2l
  6178  00301C  C009  FFDA         	movff	strlen@s+1,fsr2h
  6179  003020  50DF               	movf	indf2,w,c
  6180  003022  A4D8               	btfss	status,2,c
  6181  003024  EF16  F018         	goto	u2281
  6182  003028  EF19  F018         	goto	u2280
  6183  00302C                     u2281:
  6184  00302C  FFFF               	dw	65535	; assembler added errata NOP
  6185  00302E  EF08  F018         	goto	l2618
  6186  003032                     u2280:
  6187  003032  FFFF               	dw	65535	; assembler added errata NOP
  6188  003034  500A               	movf	strlen@a^0,w,c
  6189  003036  5C08               	subwf	strlen@s^0,w,c
  6190  003038  6E08               	movwf	?_strlen^0,c
  6191  00303A  500B               	movf	(strlen@a+1)^0,w,c
  6192  00303C  5809               	subwfb	(strlen@s+1)^0,w,c
  6193  00303E  6E09               	movwf	(?_strlen+1)^0,c
  6194  003040  0012               	return		;funcret
  6195  003042  FFFF               	dw	65535	; errata NOP
  6196  003044                     __end_of_strlen:
  6197                           	callstack 0
  6198                           
  6199 ;; *************** function _print_string *****************
  6200 ;; Defined at:
  6201 ;;		line 44 in file "serial_rs232.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  strng           2    7[COMRAM] PTR unsigned char 
  6204 ;;		 -> STR_17(70), STR_16(19), STR_15(63), STR_14(20), 
  6205 ;;		 -> STR_13(30), STR_12(29), STR_11(29), STR_10(29), 
  6206 ;;		 -> STR_9(28), STR_8(28), STR_7(52), STR_6(26), 
  6207 ;;		 -> add_component@add_componnt(2), STR_5(40), STR_4(27), STR_3(32), 
  6208 ;;		 -> sequence(4), STR_2(20), STR_1(82), 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  i               2   11[COMRAM] int 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6220 ;;      Params:         2       0       0       0       0       0       0
  6221 ;;      Locals:         2       0       0       0       0       0       0
  6222 ;;      Temps:          2       0       0       0       0       0       0
  6223 ;;      Totals:         6       0       0       0       0       0       0
  6224 ;;Total ram usage:        6 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 1
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_start_up_menu
  6231 ;;		_change_sequence
  6232 ;;		_add_component
  6233 ;;		_remove_component
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text20
  6238  002C64                     __ptext20:
  6239                           	callstack 0
  6240  002C64                     _print_string:
  6241                           	callstack 0
  6242  002C64  FFFF               	dw	65535	; assembler added errata NOP
  6243  002C66                     
  6244                           ;serial_rs232.c: 44: void print_string(char strng[]);serial_rs232.c: 45: {;serial_rs232.
      +                          c: 46:     for(int i=0; strng[i]!=((void*)0);i++){
  6245  002C66  0E00               	movlw	0
  6246  002C68  6E0D               	movwf	(print_string@i+1)^0,c
  6247  002C6A  0E00               	movlw	0
  6248  002C6C  6E0C               	movwf	print_string@i^0,c
  6249  002C6E  EF5E  F016         	goto	l2888
  6250  002C72                     l2884:
  6251  002C72  FFFF               	dw	65535	; assembler added errata NOP
  6252                           
  6253                           ;serial_rs232.c: 47:         TXREG=strng[i];
  6254  002C74  500C               	movf	print_string@i^0,w,c
  6255  002C76  2408               	addwf	print_string@strng^0,w,c
  6256  002C78  6E0A               	movwf	??_print_string^0,c
  6257  002C7A  500D               	movf	(print_string@i+1)^0,w,c
  6258  002C7C  2009               	addwfc	(print_string@strng+1)^0,w,c
  6259  002C7E  6E0B               	movwf	(??_print_string+1)^0,c
  6260  002C80  C00A  FFF6         	movff	??_print_string,tblptrl
  6261  002C84  C00B  FFF7         	movff	??_print_string+1,tblptrh
  6262  002C88  6AF8               	clrf	tblptru,c
  6263  002C8A  0E05               	movlw	(high __ramtop+-1)
  6264  002C8C  64F7               	cpfsgt	tblptrh,c
  6265  002C8E  D004               	bra	u2767
  6266  002C90  0008               	tblrd		*
  6267  002C92  FFFF               	dw	65535	; errata NOP
  6268  002C94  50F5               	movf	tablat,w,c
  6269  002C96  D005               	bra	u2760
  6270  002C98                     u2767:
  6271  002C98  CFF6 FFE1          	movff	tblptrl,fsr1l
  6272  002C9C  CFF7 FFE2          	movff	tblptrh,fsr1h
  6273  002CA0  50E7               	movf	indf1,w,c
  6274  002CA2                     u2760:
  6275  002CA2  6EAD               	movwf	173,c	;volatile
  6276  002CA4                     l54:
  6277  002CA4  FFFF               	dw	65535	; assembler added errata NOP
  6278  002CA6  A2AC               	btfss	172,1,c	;volatile
  6279  002CA8  EF58  F016         	goto	u2771
  6280  002CAC  EF5B  F016         	goto	u2770
  6281  002CB0                     u2771:
  6282  002CB0  FFFF               	dw	65535	; assembler added errata NOP
  6283  002CB2  EF52  F016         	goto	l54
  6284  002CB6                     u2770:
  6285  002CB6  FFFF               	dw	65535	; assembler added errata NOP
  6286  002CB8                     
  6287                           ;serial_rs232.c: 49:     }
  6288  002CB8  4A0C               	infsnz	print_string@i^0,f,c
  6289  002CBA  2A0D               	incf	(print_string@i+1)^0,f,c
  6290  002CBC                     l2888:
  6291  002CBC  FFFF               	dw	65535	; assembler added errata NOP
  6292  002CBE  500C               	movf	print_string@i^0,w,c
  6293  002CC0  2408               	addwf	print_string@strng^0,w,c
  6294  002CC2  6E0A               	movwf	??_print_string^0,c
  6295  002CC4  500D               	movf	(print_string@i+1)^0,w,c
  6296  002CC6  2009               	addwfc	(print_string@strng+1)^0,w,c
  6297  002CC8  6E0B               	movwf	(??_print_string+1)^0,c
  6298  002CCA  C00A  FFF6         	movff	??_print_string,tblptrl
  6299  002CCE  C00B  FFF7         	movff	??_print_string+1,tblptrh
  6300  002CD2  6AF8               	clrf	tblptru,c
  6301  002CD4  0E05               	movlw	(high __ramtop+-1)
  6302  002CD6  64F7               	cpfsgt	tblptrh,c
  6303  002CD8  D004               	bra	u2787
  6304  002CDA  0008               	tblrd		*
  6305  002CDC  FFFF               	dw	65535	; errata NOP
  6306  002CDE  50F5               	movf	tablat,w,c
  6307  002CE0  D005               	bra	u2780
  6308  002CE2                     u2787:
  6309  002CE2  CFF6 FFE1          	movff	tblptrl,fsr1l
  6310  002CE6  CFF7 FFE2          	movff	tblptrh,fsr1h
  6311  002CEA  50E7               	movf	indf1,w,c
  6312  002CEC                     u2780:
  6313  002CEC  0900               	iorlw	0
  6314  002CEE  A4D8               	btfss	status,2,c
  6315  002CF0  EF7C  F016         	goto	u2791
  6316  002CF4  EF7F  F016         	goto	u2790
  6317  002CF8                     u2791:
  6318  002CF8  FFFF               	dw	65535	; assembler added errata NOP
  6319  002CFA  EF39  F016         	goto	l2884
  6320  002CFE                     u2790:
  6321  002CFE  FFFF               	dw	65535	; assembler added errata NOP
  6322  002D00  0012               	return		;funcret
  6323  002D02  FFFF               	dw	65535	; errata NOP
  6324  002D04                     __end_of_print_string:
  6325                           	callstack 0
  6326                           
  6327 ;; *************** function _atoi *****************
  6328 ;; Defined at:
  6329 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6332 ;;		 -> input_str(10), 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;  n               2   27[COMRAM] int 
  6335 ;;  neg             2   20[COMRAM] int 
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  2   14[COMRAM] int 
  6338 ;; Registers used:
  6339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6345 ;;      Params:         2       0       0       0       0       0       0
  6346 ;;      Locals:         9       0       0       0       0       0       0
  6347 ;;      Temps:          4       0       0       0       0       0       0
  6348 ;;      Totals:        15       0       0       0       0       0       0
  6349 ;;Total ram usage:       15 bytes
  6350 ;; Hardware stack levels used: 1
  6351 ;; Hardware stack levels required when called: 2
  6352 ;; This function calls:
  6353 ;;		___wmul
  6354 ;;		_isdigit
  6355 ;;		_isspace
  6356 ;; This function is called by:
  6357 ;;		_add_component
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text21
  6362  001E80                     __ptext21:
  6363                           	callstack 0
  6364  001E80                     _atoi:
  6365                           	callstack 0
  6366  001E80  FFFF               	dw	65535	; assembler added errata NOP
  6367  001E82  0E00               	movlw	0
  6368  001E84  6E1D               	movwf	(atoi@n+1)^0,c
  6369  001E86  0E00               	movlw	0
  6370  001E88  6E1C               	movwf	atoi@n^0,c
  6371  001E8A  0E00               	movlw	0
  6372  001E8C  6E16               	movwf	(atoi@neg+1)^0,c
  6373  001E8E  0E00               	movlw	0
  6374  001E90  6E15               	movwf	atoi@neg^0,c
  6375  001E92  EF4E  F00F         	goto	l2894
  6376  001E96                     l2892:
  6377  001E96  FFFF               	dw	65535	; assembler added errata NOP
  6378  001E98  4A0F               	infsnz	atoi@s^0,f,c
  6379  001E9A  2A10               	incf	(atoi@s+1)^0,f,c
  6380  001E9C                     l2894:
  6381  001E9C  FFFF               	dw	65535	; assembler added errata NOP
  6382  001E9E  0E01               	movlw	1
  6383  001EA0  6E1B               	movwf	_atoi$1079^0,c
  6384  001EA2  C00F  FFD9         	movff	atoi@s,fsr2l
  6385  001EA6  C010  FFDA         	movff	atoi@s+1,fsr2h
  6386  001EAA  0E20               	movlw	32
  6387  001EAC  18DE               	xorwf	postinc2,w,c
  6388  001EAE  B4D8               	btfsc	status,2,c
  6389  001EB0  EF5C  F00F         	goto	u2801
  6390  001EB4  EF5F  F00F         	goto	u2800
  6391  001EB8                     u2801:
  6392  001EB8  FFFF               	dw	65535	; assembler added errata NOP
  6393  001EBA  EF7E  F00F         	goto	l2902
  6394  001EBE                     u2800:
  6395  001EBE  FFFF               	dw	65535	; assembler added errata NOP
  6396  001EC0  0EF7               	movlw	247
  6397  001EC2  6E11               	movwf	??_atoi^0,c
  6398  001EC4  0EFF               	movlw	255
  6399  001EC6  6E12               	movwf	(??_atoi+1)^0,c
  6400  001EC8  C00F  FFD9         	movff	atoi@s,fsr2l
  6401  001ECC  C010  FFDA         	movff	atoi@s+1,fsr2h
  6402  001ED0  50DF               	movf	indf2,w,c
  6403  001ED2  6E13               	movwf	(??_atoi+2)^0,c
  6404  001ED4  6A14               	clrf	(??_atoi+3)^0,c
  6405  001ED6  5011               	movf	??_atoi^0,w,c
  6406  001ED8  2613               	addwf	(??_atoi+2)^0,f,c
  6407  001EDA  5012               	movf	(??_atoi+1)^0,w,c
  6408  001EDC  2214               	addwfc	(??_atoi+3)^0,f,c
  6409  001EDE  5014               	movf	(??_atoi+3)^0,w,c
  6410  001EE0  E10A               	bnz	u2810
  6411  001EE2  0E05               	movlw	5
  6412  001EE4  5C13               	subwf	(??_atoi+2)^0,w,c
  6413  001EE6  A0D8               	btfss	status,0,c
  6414  001EE8  EF78  F00F         	goto	u2811
  6415  001EEC  EF7B  F00F         	goto	u2810
  6416  001EF0                     u2811:
  6417  001EF0  FFFF               	dw	65535	; assembler added errata NOP
  6418  001EF2  EF7E  F00F         	goto	l2902
  6419  001EF6                     u2810:
  6420  001EF6  FFFF               	dw	65535	; assembler added errata NOP
  6421  001EF8  0E00               	movlw	0
  6422  001EFA  6E1B               	movwf	_atoi$1079^0,c
  6423  001EFC                     l2902:
  6424  001EFC  FFFF               	dw	65535	; assembler added errata NOP
  6425  001EFE  C01B  F017         	movff	_atoi$1079,_atoi$1078
  6426  001F02  6A18               	clrf	(_atoi$1078+1)^0,c
  6427  001F04  5017               	movf	_atoi$1078^0,w,c
  6428  001F06  1018               	iorwf	(_atoi$1078+1)^0,w,c
  6429  001F08  A4D8               	btfss	status,2,c
  6430  001F0A  EF89  F00F         	goto	u2821
  6431  001F0E  EF8C  F00F         	goto	u2820
  6432  001F12                     u2821:
  6433  001F12  FFFF               	dw	65535	; assembler added errata NOP
  6434  001F14  EF4B  F00F         	goto	l2892
  6435  001F18                     u2820:
  6436  001F18  FFFF               	dw	65535	; assembler added errata NOP
  6437  001F1A  EF99  F00F         	goto	l2912
  6438  001F1E                     l2908:
  6439  001F1E  FFFF               	dw	65535	; assembler added errata NOP
  6440  001F20  0E00               	movlw	0
  6441  001F22  6E16               	movwf	(atoi@neg+1)^0,c
  6442  001F24  0E01               	movlw	1
  6443  001F26  6E15               	movwf	atoi@neg^0,c
  6444  001F28                     l2910:
  6445  001F28  FFFF               	dw	65535	; assembler added errata NOP
  6446  001F2A  4A0F               	infsnz	atoi@s^0,f,c
  6447  001F2C  2A10               	incf	(atoi@s+1)^0,f,c
  6448  001F2E  EFD1  F00F         	goto	l2918
  6449  001F32                     l2912:
  6450  001F32  FFFF               	dw	65535	; assembler added errata NOP
  6451  001F34  C00F  FFD9         	movff	atoi@s,fsr2l
  6452  001F38  C010  FFDA         	movff	atoi@s+1,fsr2h
  6453  001F3C  50DF               	movf	indf2,w,c
  6454  001F3E  6E11               	movwf	??_atoi^0,c
  6455  001F40  6A12               	clrf	(??_atoi+1)^0,c
  6456                           
  6457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6458                           ; Switch size 1, requested type "simple"
  6459                           ; Number of cases is 1, Range of values is 0 to 0
  6460                           ; switch strategies available:
  6461                           ; Name         Instructions Cycles
  6462                           ; simple_byte            4     3 (average)
  6463                           ;	Chosen strategy is simple_byte
  6464  001F42  5012               	movf	(??_atoi+1)^0,w,c
  6465  001F44  0A00               	xorlw	0	; case 0
  6466  001F46  B4D8               	btfsc	status,2,c
  6467  001F48  EFA8  F00F         	goto	l4802
  6468  001F4C  EFD1  F00F         	goto	l2918
  6469  001F50                     l4802:
  6470  001F50  FFFF               	dw	65535	; assembler added errata NOP
  6471                           
  6472                           ; Switch size 1, requested type "simple"
  6473                           ; Number of cases is 2, Range of values is 43 to 45
  6474                           ; switch strategies available:
  6475                           ; Name         Instructions Cycles
  6476                           ; simple_byte            7     4 (average)
  6477                           ;	Chosen strategy is simple_byte
  6478  001F52  5011               	movf	??_atoi^0,w,c
  6479  001F54  0A2B               	xorlw	43	; case 43
  6480  001F56  B4D8               	btfsc	status,2,c
  6481  001F58  EF94  F00F         	goto	l2910
  6482  001F5C  0A06               	xorlw	6	; case 45
  6483  001F5E  B4D8               	btfsc	status,2,c
  6484  001F60  EF8F  F00F         	goto	l2908
  6485  001F64  EFD1  F00F         	goto	l2918
  6486  001F68                     l2914:
  6487  001F68  FFFF               	dw	65535	; assembler added errata NOP
  6488  001F6A  C01C  F008         	movff	atoi@n,___wmul@multiplier
  6489  001F6E  C01D  F009         	movff	atoi@n+1,___wmul@multiplier+1
  6490  001F72  0E00               	movlw	0
  6491  001F74  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  6492  001F76  0E0A               	movlw	10
  6493  001F78  6E0A               	movwf	___wmul@multiplicand^0,c
  6494  001F7A  ECA1  F018         	call	___wmul	;wreg free
  6495  001F7E  C00F  FFD9         	movff	atoi@s,fsr2l
  6496  001F82  C010  FFDA         	movff	atoi@s+1,fsr2h
  6497  001F86  50DF               	movf	indf2,w,c
  6498  001F88  6E11               	movwf	??_atoi^0,c
  6499  001F8A  5011               	movf	??_atoi^0,w,c
  6500  001F8C  5E08               	subwf	?___wmul^0,f,c
  6501  001F8E  0E00               	movlw	0
  6502  001F90  5A09               	subwfb	(?___wmul+1)^0,f,c
  6503  001F92  0E30               	movlw	48
  6504  001F94  2408               	addwf	?___wmul^0,w,c
  6505  001F96  6E1C               	movwf	atoi@n^0,c
  6506  001F98  0E00               	movlw	0
  6507  001F9A  2009               	addwfc	(?___wmul+1)^0,w,c
  6508  001F9C  6E1D               	movwf	(atoi@n+1)^0,c
  6509  001F9E  EF94  F00F         	goto	l2910
  6510  001FA2                     l2918:
  6511  001FA2  FFFF               	dw	65535	; assembler added errata NOP
  6512  001FA4  0ED0               	movlw	208
  6513  001FA6  6E11               	movwf	??_atoi^0,c
  6514  001FA8  0EFF               	movlw	255
  6515  001FAA  6E12               	movwf	(??_atoi+1)^0,c
  6516  001FAC  C00F  FFD9         	movff	atoi@s,fsr2l
  6517  001FB0  C010  FFDA         	movff	atoi@s+1,fsr2h
  6518  001FB4  50DF               	movf	indf2,w,c
  6519  001FB6  6E13               	movwf	(??_atoi+2)^0,c
  6520  001FB8  6A14               	clrf	(??_atoi+3)^0,c
  6521  001FBA  5011               	movf	??_atoi^0,w,c
  6522  001FBC  2613               	addwf	(??_atoi+2)^0,f,c
  6523  001FBE  5012               	movf	(??_atoi+1)^0,w,c
  6524  001FC0  2214               	addwfc	(??_atoi+3)^0,f,c
  6525  001FC2  5014               	movf	(??_atoi+3)^0,w,c
  6526  001FC4  E10B               	bnz	u2830
  6527  001FC6  0E0A               	movlw	10
  6528  001FC8  5C13               	subwf	(??_atoi+2)^0,w,c
  6529  001FCA  A0D8               	btfss	status,0,c
  6530  001FCC  EFEA  F00F         	goto	u2831
  6531  001FD0  EFEE  F00F         	goto	u2830
  6532  001FD4                     u2831:
  6533  001FD4  FFFF               	dw	65535	; assembler added errata NOP
  6534  001FD6  0E01               	movlw	1
  6535  001FD8  EFF0  F00F         	goto	u2840
  6536  001FDC                     u2830:
  6537  001FDC  FFFF               	dw	65535	; assembler added errata NOP
  6538  001FDE  0E00               	movlw	0
  6539  001FE0                     u2840:
  6540  001FE0  FFFF               	dw	65535	; assembler added errata NOP
  6541  001FE2  6E19               	movwf	_atoi$1080^0,c
  6542  001FE4  6A1A               	clrf	(_atoi$1080+1)^0,c
  6543  001FE6  5019               	movf	_atoi$1080^0,w,c
  6544  001FE8  101A               	iorwf	(_atoi$1080+1)^0,w,c
  6545  001FEA  A4D8               	btfss	status,2,c
  6546  001FEC  EFFA  F00F         	goto	u2851
  6547  001FF0  EFFD  F00F         	goto	u2850
  6548  001FF4                     u2851:
  6549  001FF4  FFFF               	dw	65535	; assembler added errata NOP
  6550  001FF6  EFB4  F00F         	goto	l2914
  6551  001FFA                     u2850:
  6552  001FFA  FFFF               	dw	65535	; assembler added errata NOP
  6553  001FFC  5015               	movf	atoi@neg^0,w,c
  6554  001FFE  1016               	iorwf	(atoi@neg+1)^0,w,c
  6555  002000  A4D8               	btfss	status,2,c
  6556  002002  EF05  F010         	goto	u2861
  6557  002006  EF08  F010         	goto	u2860
  6558  00200A                     u2861:
  6559  00200A  FFFF               	dw	65535	; assembler added errata NOP
  6560  00200C  EF17  F010         	goto	l1142
  6561  002010                     u2860:
  6562  002010  FFFF               	dw	65535	; assembler added errata NOP
  6563  002012  C01C  F011         	movff	atoi@n,??_atoi
  6564  002016  C01D  F012         	movff	atoi@n+1,??_atoi+1
  6565  00201A  1E11               	comf	??_atoi^0,f,c
  6566  00201C  1E12               	comf	(??_atoi+1)^0,f,c
  6567  00201E  4A11               	infsnz	??_atoi^0,f,c
  6568  002020  2A12               	incf	(??_atoi+1)^0,f,c
  6569  002022  C011  F00F         	movff	??_atoi,?_atoi
  6570  002026  C012  F010         	movff	??_atoi+1,?_atoi+1
  6571  00202A  EF1C  F010         	goto	l1145
  6572  00202E                     l1142:
  6573  00202E  FFFF               	dw	65535	; assembler added errata NOP
  6574  002030  C01C  F00F         	movff	atoi@n,?_atoi
  6575  002034  C01D  F010         	movff	atoi@n+1,?_atoi+1
  6576  002038                     l1145:
  6577  002038  FFFF               	dw	65535	; assembler added errata NOP
  6578  00203A  0012               	return		;funcret
  6579  00203C  FFFF               	dw	65535	; errata NOP
  6580  00203E                     __end_of_atoi:
  6581                           	callstack 0
  6582                           
  6583 ;; *************** function _isspace *****************
  6584 ;; Defined at:
  6585 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  c               2    7[COMRAM] int 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  2    7[COMRAM] int 
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6599 ;;      Params:         2       0       0       0       0       0       0
  6600 ;;      Locals:         1       0       0       0       0       0       0
  6601 ;;      Temps:          4       0       0       0       0       0       0
  6602 ;;      Totals:         7       0       0       0       0       0       0
  6603 ;;Total ram usage:        7 bytes
  6604 ;; Hardware stack levels used: 1
  6605 ;; Hardware stack levels required when called: 1
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		_atoi
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text22
  6614  002EA4                     __ptext22:
  6615                           	callstack 0
  6616  002EA4                     _isspace:
  6617                           	callstack 26
  6618  002EA4  FFFF               	dw	65535	; assembler added errata NOP
  6619  002EA6  0E01               	movlw	1
  6620  002EA8  6E0E               	movwf	_isspace$1096^0,c
  6621  002EAA  0E20               	movlw	32
  6622  002EAC  1808               	xorwf	isspace@c^0,w,c
  6623  002EAE  1009               	iorwf	(isspace@c+1)^0,w,c
  6624  002EB0  B4D8               	btfsc	status,2,c
  6625  002EB2  EF5D  F017         	goto	u2701
  6626  002EB6  EF60  F017         	goto	u2700
  6627  002EBA                     u2701:
  6628  002EBA  FFFF               	dw	65535	; assembler added errata NOP
  6629  002EBC  EF7C  F017         	goto	l2858
  6630  002EC0                     u2700:
  6631  002EC0  FFFF               	dw	65535	; assembler added errata NOP
  6632  002EC2  0EF7               	movlw	247
  6633  002EC4  6E0A               	movwf	??_isspace^0,c
  6634  002EC6  0EFF               	movlw	255
  6635  002EC8  6E0B               	movwf	(??_isspace+1)^0,c
  6636  002ECA  C008  F00C         	movff	isspace@c,??_isspace+2
  6637  002ECE  C009  F00D         	movff	isspace@c+1,??_isspace+3
  6638  002ED2  500A               	movf	??_isspace^0,w,c
  6639  002ED4  260C               	addwf	(??_isspace+2)^0,f,c
  6640  002ED6  500B               	movf	(??_isspace+1)^0,w,c
  6641  002ED8  220D               	addwfc	(??_isspace+3)^0,f,c
  6642  002EDA  500D               	movf	(??_isspace+3)^0,w,c
  6643  002EDC  E10A               	bnz	u2710
  6644  002EDE  0E05               	movlw	5
  6645  002EE0  5C0C               	subwf	(??_isspace+2)^0,w,c
  6646  002EE2  A0D8               	btfss	status,0,c
  6647  002EE4  EF76  F017         	goto	u2711
  6648  002EE8  EF79  F017         	goto	u2710
  6649  002EEC                     u2711:
  6650  002EEC  FFFF               	dw	65535	; assembler added errata NOP
  6651  002EEE  EF7C  F017         	goto	l2858
  6652  002EF2                     u2710:
  6653  002EF2  FFFF               	dw	65535	; assembler added errata NOP
  6654  002EF4  0E00               	movlw	0
  6655  002EF6  6E0E               	movwf	_isspace$1096^0,c
  6656  002EF8                     l2858:
  6657  002EF8  FFFF               	dw	65535	; assembler added errata NOP
  6658  002EFA  C00E  F008         	movff	_isspace$1096,?_isspace
  6659  002EFE  6A09               	clrf	(?_isspace+1)^0,c
  6660  002F00  0012               	return		;funcret
  6661  002F02  FFFF               	dw	65535	; errata NOP
  6662  002F04                     __end_of_isspace:
  6663                           	callstack 0
  6664                           
  6665 ;; *************** function _isdigit *****************
  6666 ;; Defined at:
  6667 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  c               2    7[COMRAM] int 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;		None
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  2    7[COMRAM] int 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6681 ;;      Params:         2       0       0       0       0       0       0
  6682 ;;      Locals:         0       0       0       0       0       0       0
  6683 ;;      Temps:          4       0       0       0       0       0       0
  6684 ;;      Totals:         6       0       0       0       0       0       0
  6685 ;;Total ram usage:        6 bytes
  6686 ;; Hardware stack levels used: 1
  6687 ;; Hardware stack levels required when called: 1
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_atoi
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text23
  6696  003044                     __ptext23:
  6697                           	callstack 0
  6698  003044                     _isdigit:
  6699                           	callstack 26
  6700  003044  FFFF               	dw	65535	; assembler added errata NOP
  6701  003046  0ED0               	movlw	208
  6702  003048  6E0A               	movwf	??_isdigit^0,c
  6703  00304A  0EFF               	movlw	255
  6704  00304C  6E0B               	movwf	(??_isdigit+1)^0,c
  6705  00304E  C008  F00C         	movff	isdigit@c,??_isdigit+2
  6706  003052  C009  F00D         	movff	isdigit@c+1,??_isdigit+3
  6707  003056  500A               	movf	??_isdigit^0,w,c
  6708  003058  260C               	addwf	(??_isdigit+2)^0,f,c
  6709  00305A  500B               	movf	(??_isdigit+1)^0,w,c
  6710  00305C  220D               	addwfc	(??_isdigit+3)^0,f,c
  6711  00305E  500D               	movf	(??_isdigit+3)^0,w,c
  6712  003060  E10B               	bnz	u2720
  6713  003062  0E0A               	movlw	10
  6714  003064  5C0C               	subwf	(??_isdigit+2)^0,w,c
  6715  003066  A0D8               	btfss	status,0,c
  6716  003068  EF38  F018         	goto	u2721
  6717  00306C  EF3C  F018         	goto	u2720
  6718  003070                     u2721:
  6719  003070  FFFF               	dw	65535	; assembler added errata NOP
  6720  003072  0E01               	movlw	1
  6721  003074  EF3E  F018         	goto	u2730
  6722  003078                     u2720:
  6723  003078  FFFF               	dw	65535	; assembler added errata NOP
  6724  00307A  0E00               	movlw	0
  6725  00307C                     u2730:
  6726  00307C  FFFF               	dw	65535	; assembler added errata NOP
  6727  00307E  6E08               	movwf	?_isdigit^0,c
  6728  003080  6A09               	clrf	(?_isdigit+1)^0,c
  6729  003082  0012               	return		;funcret
  6730  003084  FFFF               	dw	65535	; errata NOP
  6731  003086                     __end_of_isdigit:
  6732                           	callstack 0
  6733                           
  6734 ;; *************** function ___wmul *****************
  6735 ;; Defined at:
  6736 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  multiplier      2    7[COMRAM] unsigned int 
  6739 ;;  multiplicand    2    9[COMRAM] unsigned int 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;  product         2   11[COMRAM] unsigned int 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  2    7[COMRAM] unsigned int 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2, status,0, prodl, prodh
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6751 ;;      Params:         4       0       0       0       0       0       0
  6752 ;;      Locals:         2       0       0       0       0       0       0
  6753 ;;      Temps:          0       0       0       0       0       0       0
  6754 ;;      Totals:         6       0       0       0       0       0       0
  6755 ;;Total ram usage:        6 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; Hardware stack levels required when called: 1
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_atoi
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text24
  6766  003142                     __ptext24:
  6767                           	callstack 0
  6768  003142                     ___wmul:
  6769                           	callstack 0
  6770  003142  FFFF               	dw	65535	; assembler added errata NOP
  6771  003144  5008               	movf	___wmul@multiplier^0,w,c
  6772  003146  020A               	mulwf	___wmul@multiplicand^0,c
  6773  003148  CFF3 F00C          	movff	prodl,___wmul@product
  6774  00314C  CFF4 F00D          	movff	prodh,___wmul@product+1
  6775  003150  5008               	movf	___wmul@multiplier^0,w,c
  6776  003152  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  6777  003154  50F3               	movf	243,w,c
  6778  003156  260D               	addwf	(___wmul@product+1)^0,f,c
  6779  003158  5009               	movf	(___wmul@multiplier+1)^0,w,c
  6780  00315A  020A               	mulwf	___wmul@multiplicand^0,c
  6781  00315C  50F3               	movf	243,w,c
  6782  00315E  260D               	addwf	(___wmul@product+1)^0,f,c
  6783  003160  C00C  F008         	movff	___wmul@product,?___wmul
  6784  003164  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  6785  003168  0012               	return		;funcret
  6786  00316A  FFFF               	dw	65535	; errata NOP
  6787  00316C                     __end_of___wmul:
  6788                           	callstack 0
  6789                           
  6790 ;; *************** function _init_interrupts *****************
  6791 ;; Defined at:
  6792 ;;		line 32 in file "init_PIC.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;		None
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;		None
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  1    wreg      void 
  6799 ;; Registers used:
  6800 ;;		wreg, status,2
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6806 ;;      Params:         0       0       0       0       0       0       0
  6807 ;;      Locals:         0       0       0       0       0       0       0
  6808 ;;      Temps:          0       0       0       0       0       0       0
  6809 ;;      Totals:         0       0       0       0       0       0       0
  6810 ;;Total ram usage:        0 bytes
  6811 ;; Hardware stack levels used: 1
  6812 ;; Hardware stack levels required when called: 1
  6813 ;; This function calls:
  6814 ;;		Nothing
  6815 ;; This function is called by:
  6816 ;;		_main
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text25
  6821  0031CE                     __ptext25:
  6822                           	callstack 0
  6823  0031CE                     _init_interrupts:
  6824                           	callstack 0
  6825  0031CE  FFFF               	dw	65535	; assembler added errata NOP
  6826  0031D0                     
  6827                           ;init_PIC.c: 34:     PIR1bits.RCIF = 0;
  6828  0031D0  9A9E               	bcf	158,5,c	;volatile
  6829                           
  6830                           ;init_PIC.c: 35:  PIE1bits.RCIE = 1;
  6831  0031D2  8A9D               	bsf	157,5,c	;volatile
  6832                           
  6833                           ;init_PIC.c: 36:  INTCONbits.PEIE = 1;
  6834  0031D4  8CF2               	bsf	242,6,c	;volatile
  6835  0031D6                     
  6836                           ;init_PIC.c: 40:     INTCON2=0x00;
  6837  0031D6  0E00               	movlw	0
  6838  0031D8  6EF1               	movwf	241,c	;volatile
  6839  0031DA                     
  6840                           ;init_PIC.c: 41:     INTCONbits.INT0IF=0;
  6841  0031DA  92F2               	bcf	242,1,c	;volatile
  6842  0031DC                     
  6843                           ;init_PIC.c: 42:     INTCONbits.INT0IE=1;
  6844  0031DC  88F2               	bsf	242,4,c	;volatile
  6845  0031DE  0012               	return		;funcret
  6846  0031E0  FFFF               	dw	65535	; errata NOP
  6847  0031E2                     __end_of_init_interrupts:
  6848                           	callstack 0
  6849                           
  6850 ;; *************** function _init_USART *****************
  6851 ;; Defined at:
  6852 ;;		line 17 in file "serial_rs232.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6866 ;;      Params:         0       0       0       0       0       0       0
  6867 ;;      Locals:         0       0       0       0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0
  6869 ;;      Totals:         0       0       0       0       0       0       0
  6870 ;;Total ram usage:        0 bytes
  6871 ;; Hardware stack levels used: 1
  6872 ;; Hardware stack levels required when called: 4
  6873 ;; This function calls:
  6874 ;;		___fltol
  6875 ;;		_roundf
  6876 ;; This function is called by:
  6877 ;;		_main
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text26
  6882  0030C8                     __ptext26:
  6883                           	callstack 0
  6884  0030C8                     _init_USART:
  6885                           	callstack 0
  6886  0030C8  FFFF               	dw	65535	; assembler added errata NOP
  6887  0030CA                     
  6888                           ;serial_rs232.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  6889  0030CA  0E55               	movlw	85
  6890  0030CC  6E3B               	movwf	roundf@x^0,c
  6891  0030CE  0E55               	movlw	85
  6892  0030D0  6E3C               	movwf	(roundf@x+1)^0,c
  6893  0030D2  0EC8               	movlw	200
  6894  0030D4  6E3D               	movwf	(roundf@x+2)^0,c
  6895  0030D6  0E41               	movlw	65
  6896  0030D8  6E3E               	movwf	(roundf@x+3)^0,c
  6897  0030DA  EC51  F00B         	call	_roundf	;wreg free
  6898  0030DE  C03B  F055         	movff	?_roundf,___fltol@f1
  6899  0030E2  C03C  F056         	movff	?_roundf+1,___fltol@f1+1
  6900  0030E6  C03D  F057         	movff	?_roundf+2,___fltol@f1+2
  6901  0030EA  C03E  F058         	movff	?_roundf+3,___fltol@f1+3
  6902  0030EE  EC77  F011         	call	___fltol	;wreg free
  6903  0030F2  5055               	movf	?___fltol^0,w,c
  6904  0030F4  6EAF               	movwf	175,c	;volatile
  6905  0030F6                     
  6906                           ;serial_rs232.c: 35:  TXSTAbits.TX9=0;
  6907  0030F6  9CAC               	bcf	172,6,c	;volatile
  6908  0030F8                     
  6909                           ;serial_rs232.c: 36:     TXSTAbits.TXEN=1;
  6910  0030F8  8AAC               	bsf	172,5,c	;volatile
  6911  0030FA                     
  6912                           ;serial_rs232.c: 37:     TXSTAbits.SYNC=0;
  6913  0030FA  98AC               	bcf	172,4,c	;volatile
  6914  0030FC                     
  6915                           ;serial_rs232.c: 38:     TXSTAbits.BRGH=1;
  6916  0030FC  84AC               	bsf	172,2,c	;volatile
  6917  0030FE                     
  6918                           ;serial_rs232.c: 39:     RCSTAbits.SPEN=1;
  6919  0030FE  8EAB               	bsf	171,7,c	;volatile
  6920  003100                     
  6921                           ;serial_rs232.c: 40:     RCSTAbits.RX9=0;
  6922  003100  9CAB               	bcf	171,6,c	;volatile
  6923  003102                     
  6924                           ;serial_rs232.c: 41:     RCSTAbits.CREN=1;
  6925  003102  88AB               	bsf	171,4,c	;volatile
  6926  003104  0012               	return		;funcret
  6927  003106  FFFF               	dw	65535	; errata NOP
  6928  003108                     __end_of_init_USART:
  6929                           	callstack 0
  6930                           
  6931 ;; *************** function _roundf *****************
  6932 ;; Defined at:
  6933 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  x               4   58[COMRAM] float 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  y               4   80[COMRAM] float 
  6938 ;;  u               4   76[COMRAM] struct .
  6939 ;;  e               2   70[COMRAM] int 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  4   58[COMRAM] float 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6949 ;;      Params:         4       0       0       0       0       0       0
  6950 ;;      Locals:        18       0       0       0       0       0       0
  6951 ;;      Temps:          4       0       0       0       0       0       0
  6952 ;;      Totals:        26       0       0       0       0       0       0
  6953 ;;Total ram usage:       26 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; Hardware stack levels required when called: 3
  6956 ;; This function calls:
  6957 ;;		___fladd
  6958 ;;		___flge
  6959 ;;		___flmul
  6960 ;;		___flneg
  6961 ;;		___flsub
  6962 ;; This function is called by:
  6963 ;;		_init_USART
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text27
  6968  0016A2                     __ptext27:
  6969                           	callstack 0
  6970  0016A2                     _roundf:
  6971                           	callstack 0
  6972  0016A2  FFFF               	dw	65535	; assembler added errata NOP
  6973  0016A4  C09E  F04D         	movff	roundf@F528,roundf@u
  6974  0016A8  C09F  F04E         	movff	roundf@F528+1,roundf@u+1
  6975  0016AC  C0A0  F04F         	movff	roundf@F528+2,roundf@u+2
  6976  0016B0  C0A1  F050         	movff	roundf@F528+3,roundf@u+3
  6977  0016B4  C03B  F04D         	movff	roundf@x,roundf@u
  6978  0016B8  C03C  F04E         	movff	roundf@x+1,roundf@u+1
  6979  0016BC  C03D  F04F         	movff	roundf@x+2,roundf@u+2
  6980  0016C0  C03E  F050         	movff	roundf@x+3,roundf@u+3
  6981  0016C4  C04D  F03F         	movff	roundf@u,??_roundf
  6982  0016C8  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6983  0016CC  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6984  0016D0  C050  F042         	movff	roundf@u+3,??_roundf+3
  6985  0016D4  0E18               	movlw	24
  6986  0016D6  EF73  F00B         	goto	u5100
  6987  0016DA                     u5105:
  6988  0016DA  FFFF               	dw	65535	; assembler added errata NOP
  6989  0016DC  90D8               	bcf	status,0,c
  6990  0016DE  3242               	rrcf	(??_roundf+3)^0,f,c
  6991  0016E0  3241               	rrcf	(??_roundf+2)^0,f,c
  6992  0016E2  3240               	rrcf	(??_roundf+1)^0,f,c
  6993  0016E4  323F               	rrcf	??_roundf^0,f,c
  6994  0016E6                     u5100:
  6995  0016E6  FFFF               	dw	65535	; assembler added errata NOP
  6996  0016E8  2EE8               	decfsz	wreg,f,c
  6997  0016EA  EF6D  F00B         	goto	u5105
  6998  0016EE  503F               	movf	??_roundf^0,w,c
  6999  0016F0  6E47               	movwf	roundf@e^0,c
  7000  0016F2  6A48               	clrf	(roundf@e+1)^0,c
  7001  0016F4  BE48               	btfsc	(roundf@e+1)^0,7,c
  7002  0016F6  EF86  F00B         	goto	u5111
  7003  0016FA  5048               	movf	(roundf@e+1)^0,w,c
  7004  0016FC  E10A               	bnz	u5110
  7005  0016FE  0E96               	movlw	150
  7006  001700  5C47               	subwf	roundf@e^0,w,c
  7007  001702  A0D8               	btfss	status,0,c
  7008  001704  EF86  F00B         	goto	u5111
  7009  001708  EF89  F00B         	goto	u5110
  7010  00170C                     u5111:
  7011  00170C  FFFF               	dw	65535	; assembler added errata NOP
  7012  00170E  EF94  F00B         	goto	l4424
  7013  001712                     u5110:
  7014  001712  FFFF               	dw	65535	; assembler added errata NOP
  7015  001714  C03B  F03B         	movff	roundf@x,?_roundf
  7016  001718  C03C  F03C         	movff	roundf@x+1,?_roundf+1
  7017  00171C  C03D  F03D         	movff	roundf@x+2,?_roundf+2
  7018  001720  C03E  F03E         	movff	roundf@x+3,?_roundf+3
  7019  001724  EF41  F00D         	goto	l1177
  7020  001728                     l4424:
  7021  001728  FFFF               	dw	65535	; assembler added errata NOP
  7022  00172A  C04D  F03F         	movff	roundf@u,??_roundf
  7023  00172E  C04E  F040         	movff	roundf@u+1,??_roundf+1
  7024  001732  C04F  F041         	movff	roundf@u+2,??_roundf+2
  7025  001736  C050  F042         	movff	roundf@u+3,??_roundf+3
  7026  00173A  0E20               	movlw	32
  7027  00173C  EFA6  F00B         	goto	u5120
  7028  001740                     u5125:
  7029  001740  FFFF               	dw	65535	; assembler added errata NOP
  7030  001742  90D8               	bcf	status,0,c
  7031  001744  3242               	rrcf	(??_roundf+3)^0,f,c
  7032  001746  3241               	rrcf	(??_roundf+2)^0,f,c
  7033  001748  3240               	rrcf	(??_roundf+1)^0,f,c
  7034  00174A  323F               	rrcf	??_roundf^0,f,c
  7035  00174C                     u5120:
  7036  00174C  FFFF               	dw	65535	; assembler added errata NOP
  7037  00174E  2EE8               	decfsz	wreg,f,c
  7038  001750  EFA0  F00B         	goto	u5125
  7039  001754  503F               	movf	??_roundf^0,w,c
  7040  001756  1040               	iorwf	(??_roundf+1)^0,w,c
  7041  001758  1041               	iorwf	(??_roundf+2)^0,w,c
  7042  00175A  1042               	iorwf	(??_roundf+3)^0,w,c
  7043  00175C  B4D8               	btfsc	status,2,c
  7044  00175E  EFB3  F00B         	goto	u5131
  7045  001762  EFB6  F00B         	goto	u5130
  7046  001766                     u5131:
  7047  001766  FFFF               	dw	65535	; assembler added errata NOP
  7048  001768  EFC9  F00B         	goto	l4428
  7049  00176C                     u5130:
  7050  00176C  FFFF               	dw	65535	; assembler added errata NOP
  7051  00176E  C03B  F008         	movff	roundf@x,___flneg@f1
  7052  001772  C03C  F009         	movff	roundf@x+1,___flneg@f1+1
  7053  001776  C03D  F00A         	movff	roundf@x+2,___flneg@f1+2
  7054  00177A  C03E  F00B         	movff	roundf@x+3,___flneg@f1+3
  7055  00177E  EC43  F018         	call	___flneg	;wreg free
  7056  001782  C008  F03B         	movff	?___flneg,roundf@x
  7057  001786  C009  F03C         	movff	?___flneg+1,roundf@x+1
  7058  00178A  C00A  F03D         	movff	?___flneg+2,roundf@x+2
  7059  00178E  C00B  F03E         	movff	?___flneg+3,roundf@x+3
  7060  001792                     l4428:
  7061  001792  FFFF               	dw	65535	; assembler added errata NOP
  7062  001794  BE48               	btfsc	(roundf@e+1)^0,7,c
  7063  001796  EFD9  F00B         	goto	u5140
  7064  00179A  5048               	movf	(roundf@e+1)^0,w,c
  7065  00179C  E107               	bnz	u5141
  7066  00179E  0E7E               	movlw	126
  7067  0017A0  5C47               	subwf	roundf@e^0,w,c
  7068  0017A2  B0D8               	btfsc	status,0,c
  7069  0017A4  EFD6  F00B         	goto	u5141
  7070  0017A8  EFD9  F00B         	goto	u5140
  7071  0017AC                     u5141:
  7072  0017AC  FFFF               	dw	65535	; assembler added errata NOP
  7073  0017AE  EFF6  F00B         	goto	l4434
  7074  0017B2                     u5140:
  7075  0017B2  FFFF               	dw	65535	; assembler added errata NOP
  7076  0017B4  C04D  F008         	movff	roundf@u,___flmul@b
  7077  0017B8  C04E  F009         	movff	roundf@u+1,___flmul@b+1
  7078  0017BC  C04F  F00A         	movff	roundf@u+2,___flmul@b+2
  7079  0017C0  C050  F00B         	movff	roundf@u+3,___flmul@b+3
  7080  0017C4  0E00               	movlw	0
  7081  0017C6  6E0C               	movwf	___flmul@a^0,c
  7082  0017C8  0E00               	movlw	0
  7083  0017CA  6E0D               	movwf	(___flmul@a+1)^0,c
  7084  0017CC  0E00               	movlw	0
  7085  0017CE  6E0E               	movwf	(___flmul@a+2)^0,c
  7086  0017D0  0E00               	movlw	0
  7087  0017D2  6E0F               	movwf	(___flmul@a+3)^0,c
  7088  0017D4  ECE6  F006         	call	___flmul	;wreg free
  7089  0017D8  C008  F03B         	movff	?___flmul,?_roundf
  7090  0017DC  C009  F03C         	movff	?___flmul+1,?_roundf+1
  7091  0017E0  C00A  F03D         	movff	?___flmul+2,?_roundf+2
  7092  0017E4  C00B  F03E         	movff	?___flmul+3,?_roundf+3
  7093  0017E8  EF41  F00D         	goto	l1177
  7094  0017EC                     l4434:
  7095  0017EC  FFFF               	dw	65535	; assembler added errata NOP
  7096  0017EE  0E00               	movlw	0
  7097  0017F0  6E0C               	movwf	___fladd@a^0,c
  7098  0017F2  0E00               	movlw	0
  7099  0017F4  6E0D               	movwf	(___fladd@a+1)^0,c
  7100  0017F6  0E00               	movlw	0
  7101  0017F8  6E0E               	movwf	(___fladd@a+2)^0,c
  7102  0017FA  0E4B               	movlw	75
  7103  0017FC  6E0F               	movwf	(___fladd@a+3)^0,c
  7104  0017FE  C03B  F008         	movff	roundf@x,___fladd@b
  7105  001802  C03C  F009         	movff	roundf@x+1,___fladd@b+1
  7106  001806  C03D  F00A         	movff	roundf@x+2,___fladd@b+2
  7107  00180A  C03E  F00B         	movff	roundf@x+3,___fladd@b+3
  7108  00180E  EC12  F004         	call	___fladd	;wreg free
  7109  001812  C008  F049         	movff	?___fladd,_roundf$1349
  7110  001816  C009  F04A         	movff	?___fladd+1,_roundf$1349+1
  7111  00181A  C00A  F04B         	movff	?___fladd+2,_roundf$1349+2
  7112  00181E  C00B  F04C         	movff	?___fladd+3,_roundf$1349+3
  7113  001822  0E00               	movlw	0
  7114  001824  6E0C               	movwf	___fladd@a^0,c
  7115  001826  0E00               	movlw	0
  7116  001828  6E0D               	movwf	(___fladd@a+1)^0,c
  7117  00182A  0E00               	movlw	0
  7118  00182C  6E0E               	movwf	(___fladd@a+2)^0,c
  7119  00182E  0ECB               	movlw	203
  7120  001830  6E0F               	movwf	(___fladd@a+3)^0,c
  7121  001832  C049  F008         	movff	_roundf$1349,___fladd@b
  7122  001836  C04A  F009         	movff	_roundf$1349+1,___fladd@b+1
  7123  00183A  C04B  F00A         	movff	_roundf$1349+2,___fladd@b+2
  7124  00183E  C04C  F00B         	movff	_roundf$1349+3,___fladd@b+3
  7125  001842  EC12  F004         	call	___fladd	;wreg free
  7126  001846  C008  F043         	movff	?___fladd,_roundf$1350
  7127  00184A  C009  F044         	movff	?___fladd+1,_roundf$1350+1
  7128  00184E  C00A  F045         	movff	?___fladd+2,_roundf$1350+2
  7129  001852  C00B  F046         	movff	?___fladd+3,_roundf$1350+3
  7130  001856  C043  F018         	movff	_roundf$1350,___flsub@b
  7131  00185A  C044  F019         	movff	_roundf$1350+1,___flsub@b+1
  7132  00185E  C045  F01A         	movff	_roundf$1350+2,___flsub@b+2
  7133  001862  C046  F01B         	movff	_roundf$1350+3,___flsub@b+3
  7134  001866  C03B  F01C         	movff	roundf@x,___flsub@a
  7135  00186A  C03C  F01D         	movff	roundf@x+1,___flsub@a+1
  7136  00186E  C03D  F01E         	movff	roundf@x+2,___flsub@a+2
  7137  001872  C03E  F01F         	movff	roundf@x+3,___flsub@a+3
  7138  001876  ECDC  F017         	call	___flsub	;wreg free
  7139  00187A  C018  F051         	movff	?___flsub,roundf@y
  7140  00187E  C019  F052         	movff	?___flsub+1,roundf@y+1
  7141  001882  C01A  F053         	movff	?___flsub+2,roundf@y+2
  7142  001886  C01B  F054         	movff	?___flsub+3,roundf@y+3
  7143  00188A  0E00               	movlw	0
  7144  00188C  6E2F               	movwf	___flge@ff1^0,c
  7145  00188E  0E00               	movlw	0
  7146  001890  6E30               	movwf	(___flge@ff1+1)^0,c
  7147  001892  0E00               	movlw	0
  7148  001894  6E31               	movwf	(___flge@ff1+2)^0,c
  7149  001896  0E3F               	movlw	63
  7150  001898  6E32               	movwf	(___flge@ff1+3)^0,c
  7151  00189A  C051  F033         	movff	roundf@y,___flge@ff2
  7152  00189E  C052  F034         	movff	roundf@y+1,___flge@ff2+1
  7153  0018A2  C053  F035         	movff	roundf@y+2,___flge@ff2+2
  7154  0018A6  C054  F036         	movff	roundf@y+3,___flge@ff2+3
  7155  0018AA  ECAC  F012         	call	___flge	;wreg free
  7156  0018AE  B0D8               	btfsc	status,0,c
  7157  0018B0  EF5C  F00C         	goto	u5151
  7158  0018B4  EF5F  F00C         	goto	u5150
  7159  0018B8                     u5151:
  7160  0018B8  FFFF               	dw	65535	; assembler added errata NOP
  7161  0018BA  EF96  F00C         	goto	l4438
  7162  0018BE                     u5150:
  7163  0018BE  FFFF               	dw	65535	; assembler added errata NOP
  7164  0018C0  C03B  F00C         	movff	roundf@x,___fladd@a
  7165  0018C4  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  7166  0018C8  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  7167  0018CC  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  7168  0018D0  C051  F008         	movff	roundf@y,___fladd@b
  7169  0018D4  C052  F009         	movff	roundf@y+1,___fladd@b+1
  7170  0018D8  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  7171  0018DC  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  7172  0018E0  EC12  F004         	call	___fladd	;wreg free
  7173  0018E4  C008  F049         	movff	?___fladd,_roundf$1349
  7174  0018E8  C009  F04A         	movff	?___fladd+1,_roundf$1349+1
  7175  0018EC  C00A  F04B         	movff	?___fladd+2,_roundf$1349+2
  7176  0018F0  C00B  F04C         	movff	?___fladd+3,_roundf$1349+3
  7177  0018F4  C049  F008         	movff	_roundf$1349,___fladd@b
  7178  0018F8  C04A  F009         	movff	_roundf$1349+1,___fladd@b+1
  7179  0018FC  C04B  F00A         	movff	_roundf$1349+2,___fladd@b+2
  7180  001900  C04C  F00B         	movff	_roundf$1349+3,___fladd@b+3
  7181  001904  0E00               	movlw	0
  7182  001906  6E0C               	movwf	___fladd@a^0,c
  7183  001908  0E00               	movlw	0
  7184  00190A  6E0D               	movwf	(___fladd@a+1)^0,c
  7185  00190C  0E80               	movlw	128
  7186  00190E  6E0E               	movwf	(___fladd@a+2)^0,c
  7187  001910  0EBF               	movlw	191
  7188  001912  6E0F               	movwf	(___fladd@a+3)^0,c
  7189  001914  EC12  F004         	call	___fladd	;wreg free
  7190  001918  C008  F051         	movff	?___fladd,roundf@y
  7191  00191C  C009  F052         	movff	?___fladd+1,roundf@y+1
  7192  001920  C00A  F053         	movff	?___fladd+2,roundf@y+2
  7193  001924  C00B  F054         	movff	?___fladd+3,roundf@y+3
  7194  001928  EF03  F00D         	goto	l4444
  7195  00192C                     l4438:
  7196  00192C  FFFF               	dw	65535	; assembler added errata NOP
  7197  00192E  0E00               	movlw	0
  7198  001930  6E2F               	movwf	___flge@ff1^0,c
  7199  001932  0E00               	movlw	0
  7200  001934  6E30               	movwf	(___flge@ff1+1)^0,c
  7201  001936  0E00               	movlw	0
  7202  001938  6E31               	movwf	(___flge@ff1+2)^0,c
  7203  00193A  0EBF               	movlw	191
  7204  00193C  6E32               	movwf	(___flge@ff1+3)^0,c
  7205  00193E  C051  F033         	movff	roundf@y,___flge@ff2
  7206  001942  C052  F034         	movff	roundf@y+1,___flge@ff2+1
  7207  001946  C053  F035         	movff	roundf@y+2,___flge@ff2+2
  7208  00194A  C054  F036         	movff	roundf@y+3,___flge@ff2+3
  7209  00194E  ECAC  F012         	call	___flge	;wreg free
  7210  001952  A0D8               	btfss	status,0,c
  7211  001954  EFAE  F00C         	goto	u5161
  7212  001958  EFB1  F00C         	goto	u5160
  7213  00195C                     u5161:
  7214  00195C  FFFF               	dw	65535	; assembler added errata NOP
  7215  00195E  EFE8  F00C         	goto	l4442
  7216  001962                     u5160:
  7217  001962  FFFF               	dw	65535	; assembler added errata NOP
  7218  001964  C03B  F00C         	movff	roundf@x,___fladd@a
  7219  001968  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  7220  00196C  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  7221  001970  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  7222  001974  C051  F008         	movff	roundf@y,___fladd@b
  7223  001978  C052  F009         	movff	roundf@y+1,___fladd@b+1
  7224  00197C  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  7225  001980  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  7226  001984  EC12  F004         	call	___fladd	;wreg free
  7227  001988  C008  F049         	movff	?___fladd,_roundf$1349
  7228  00198C  C009  F04A         	movff	?___fladd+1,_roundf$1349+1
  7229  001990  C00A  F04B         	movff	?___fladd+2,_roundf$1349+2
  7230  001994  C00B  F04C         	movff	?___fladd+3,_roundf$1349+3
  7231  001998  C049  F008         	movff	_roundf$1349,___fladd@b
  7232  00199C  C04A  F009         	movff	_roundf$1349+1,___fladd@b+1
  7233  0019A0  C04B  F00A         	movff	_roundf$1349+2,___fladd@b+2
  7234  0019A4  C04C  F00B         	movff	_roundf$1349+3,___fladd@b+3
  7235  0019A8  0E00               	movlw	0
  7236  0019AA  6E0C               	movwf	___fladd@a^0,c
  7237  0019AC  0E00               	movlw	0
  7238  0019AE  6E0D               	movwf	(___fladd@a+1)^0,c
  7239  0019B0  0E80               	movlw	128
  7240  0019B2  6E0E               	movwf	(___fladd@a+2)^0,c
  7241  0019B4  0E3F               	movlw	63
  7242  0019B6  6E0F               	movwf	(___fladd@a+3)^0,c
  7243  0019B8  EC12  F004         	call	___fladd	;wreg free
  7244  0019BC  C008  F051         	movff	?___fladd,roundf@y
  7245  0019C0  C009  F052         	movff	?___fladd+1,roundf@y+1
  7246  0019C4  C00A  F053         	movff	?___fladd+2,roundf@y+2
  7247  0019C8  C00B  F054         	movff	?___fladd+3,roundf@y+3
  7248  0019CC  EF03  F00D         	goto	l4444
  7249  0019D0                     l4442:
  7250  0019D0  FFFF               	dw	65535	; assembler added errata NOP
  7251  0019D2  C051  F008         	movff	roundf@y,___fladd@b
  7252  0019D6  C052  F009         	movff	roundf@y+1,___fladd@b+1
  7253  0019DA  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  7254  0019DE  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  7255  0019E2  C03B  F00C         	movff	roundf@x,___fladd@a
  7256  0019E6  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  7257  0019EA  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  7258  0019EE  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  7259  0019F2  EC12  F004         	call	___fladd	;wreg free
  7260  0019F6  C008  F051         	movff	?___fladd,roundf@y
  7261  0019FA  C009  F052         	movff	?___fladd+1,roundf@y+1
  7262  0019FE  C00A  F053         	movff	?___fladd+2,roundf@y+2
  7263  001A02  C00B  F054         	movff	?___fladd+3,roundf@y+3
  7264  001A06                     l4444:
  7265  001A06  FFFF               	dw	65535	; assembler added errata NOP
  7266  001A08  C04D  F03F         	movff	roundf@u,??_roundf
  7267  001A0C  C04E  F040         	movff	roundf@u+1,??_roundf+1
  7268  001A10  C04F  F041         	movff	roundf@u+2,??_roundf+2
  7269  001A14  C050  F042         	movff	roundf@u+3,??_roundf+3
  7270  001A18  0E20               	movlw	32
  7271  001A1A  EF15  F00D         	goto	u5170
  7272  001A1E                     u5175:
  7273  001A1E  FFFF               	dw	65535	; assembler added errata NOP
  7274  001A20  90D8               	bcf	status,0,c
  7275  001A22  3242               	rrcf	(??_roundf+3)^0,f,c
  7276  001A24  3241               	rrcf	(??_roundf+2)^0,f,c
  7277  001A26  3240               	rrcf	(??_roundf+1)^0,f,c
  7278  001A28  323F               	rrcf	??_roundf^0,f,c
  7279  001A2A                     u5170:
  7280  001A2A  FFFF               	dw	65535	; assembler added errata NOP
  7281  001A2C  2EE8               	decfsz	wreg,f,c
  7282  001A2E  EF0F  F00D         	goto	u5175
  7283  001A32  503F               	movf	??_roundf^0,w,c
  7284  001A34  1040               	iorwf	(??_roundf+1)^0,w,c
  7285  001A36  1041               	iorwf	(??_roundf+2)^0,w,c
  7286  001A38  1042               	iorwf	(??_roundf+3)^0,w,c
  7287  001A3A  B4D8               	btfsc	status,2,c
  7288  001A3C  EF22  F00D         	goto	u5181
  7289  001A40  EF25  F00D         	goto	u5180
  7290  001A44                     u5181:
  7291  001A44  FFFF               	dw	65535	; assembler added errata NOP
  7292  001A46  EF38  F00D         	goto	l4448
  7293  001A4A                     u5180:
  7294  001A4A  FFFF               	dw	65535	; assembler added errata NOP
  7295  001A4C  C051  F008         	movff	roundf@y,___flneg@f1
  7296  001A50  C052  F009         	movff	roundf@y+1,___flneg@f1+1
  7297  001A54  C053  F00A         	movff	roundf@y+2,___flneg@f1+2
  7298  001A58  C054  F00B         	movff	roundf@y+3,___flneg@f1+3
  7299  001A5C  EC43  F018         	call	___flneg	;wreg free
  7300  001A60  C008  F051         	movff	?___flneg,roundf@y
  7301  001A64  C009  F052         	movff	?___flneg+1,roundf@y+1
  7302  001A68  C00A  F053         	movff	?___flneg+2,roundf@y+2
  7303  001A6C  C00B  F054         	movff	?___flneg+3,roundf@y+3
  7304  001A70                     l4448:
  7305  001A70  FFFF               	dw	65535	; assembler added errata NOP
  7306  001A72  C051  F03B         	movff	roundf@y,?_roundf
  7307  001A76  C052  F03C         	movff	roundf@y+1,?_roundf+1
  7308  001A7A  C053  F03D         	movff	roundf@y+2,?_roundf+2
  7309  001A7E  C054  F03E         	movff	roundf@y+3,?_roundf+3
  7310  001A82                     l1177:
  7311  001A82  FFFF               	dw	65535	; assembler added errata NOP
  7312  001A84  0012               	return		;funcret
  7313  001A86  FFFF               	dw	65535	; errata NOP
  7314  001A88                     __end_of_roundf:
  7315                           	callstack 0
  7316                           
  7317 ;; *************** function ___flsub *****************
  7318 ;; Defined at:
  7319 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  b               4   23[COMRAM] float 
  7322 ;;  a               4   27[COMRAM] float 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;		None
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  4   23[COMRAM] float 
  7327 ;; Registers used:
  7328 ;;		wreg, status,2, status,0, cstack
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7334 ;;      Params:         8       0       0       0       0       0       0
  7335 ;;      Locals:         0       0       0       0       0       0       0
  7336 ;;      Temps:          0       0       0       0       0       0       0
  7337 ;;      Totals:         8       0       0       0       0       0       0
  7338 ;;Total ram usage:        8 bytes
  7339 ;; Hardware stack levels used: 1
  7340 ;; Hardware stack levels required when called: 2
  7341 ;; This function calls:
  7342 ;;		___fladd
  7343 ;; This function is called by:
  7344 ;;		_roundf
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text28
  7349  002FB8                     __ptext28:
  7350                           	callstack 0
  7351  002FB8                     ___flsub:
  7352                           	callstack 0
  7353  002FB8  FFFF               	dw	65535	; assembler added errata NOP
  7354  002FBA  0E00               	movlw	0
  7355  002FBC  1A1C               	xorwf	___flsub@a^0,f,c
  7356  002FBE  0E00               	movlw	0
  7357  002FC0  1A1D               	xorwf	(___flsub@a+1)^0,f,c
  7358  002FC2  0E00               	movlw	0
  7359  002FC4  1A1E               	xorwf	(___flsub@a+2)^0,f,c
  7360  002FC6  0E80               	movlw	128
  7361  002FC8  1A1F               	xorwf	(___flsub@a+3)^0,f,c
  7362  002FCA  C018  F008         	movff	___flsub@b,___fladd@b
  7363  002FCE  C019  F009         	movff	___flsub@b+1,___fladd@b+1
  7364  002FD2  C01A  F00A         	movff	___flsub@b+2,___fladd@b+2
  7365  002FD6  C01B  F00B         	movff	___flsub@b+3,___fladd@b+3
  7366  002FDA  C01C  F00C         	movff	___flsub@a,___fladd@a
  7367  002FDE  C01D  F00D         	movff	___flsub@a+1,___fladd@a+1
  7368  002FE2  C01E  F00E         	movff	___flsub@a+2,___fladd@a+2
  7369  002FE6  C01F  F00F         	movff	___flsub@a+3,___fladd@a+3
  7370  002FEA  EC12  F004         	call	___fladd	;wreg free
  7371  002FEE  C008  F018         	movff	?___fladd,?___flsub
  7372  002FF2  C009  F019         	movff	?___fladd+1,?___flsub+1
  7373  002FF6  C00A  F01A         	movff	?___fladd+2,?___flsub+2
  7374  002FFA  C00B  F01B         	movff	?___fladd+3,?___flsub+3
  7375  002FFE  0012               	return		;funcret
  7376  003000  FFFF               	dw	65535	; errata NOP
  7377  003002                     __end_of___flsub:
  7378                           	callstack 0
  7379                           
  7380 ;; *************** function ___fladd *****************
  7381 ;; Defined at:
  7382 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  b               4    7[COMRAM] float 
  7385 ;;  a               4   11[COMRAM] float 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  grs             1   22[COMRAM] unsigned char 
  7388 ;;  bexp            1   21[COMRAM] unsigned char 
  7389 ;;  aexp            1   20[COMRAM] unsigned char 
  7390 ;;  signs           1   19[COMRAM] unsigned char 
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  4    7[COMRAM] unsigned char 
  7393 ;; Registers used:
  7394 ;;		wreg, status,2, status,0
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7400 ;;      Params:         8       0       0       0       0       0       0
  7401 ;;      Locals:         4       0       0       0       0       0       0
  7402 ;;      Temps:          4       0       0       0       0       0       0
  7403 ;;      Totals:        16       0       0       0       0       0       0
  7404 ;;Total ram usage:       16 bytes
  7405 ;; Hardware stack levels used: 1
  7406 ;; Hardware stack levels required when called: 1
  7407 ;; This function calls:
  7408 ;;		Nothing
  7409 ;; This function is called by:
  7410 ;;		___flsub
  7411 ;;		_roundf
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           	psect	text29
  7416  000824                     __ptext29:
  7417                           	callstack 0
  7418  000824                     ___fladd:
  7419                           	callstack 0
  7420  000824  FFFF               	dw	65535	; assembler added errata NOP
  7421  000826  500B               	movf	(___fladd@b+3)^0,w,c
  7422  000828  0B80               	andlw	128
  7423  00082A  6E14               	movwf	___fladd@signs^0,c
  7424  00082C  500B               	movf	(___fladd@b+3)^0,w,c
  7425  00082E  240B               	addwf	(___fladd@b+3)^0,w,c
  7426  000830  6E16               	movwf	___fladd@bexp^0,c
  7427  000832  AE0A               	btfss	(___fladd@b+2)^0,7,c
  7428  000834  EF1E  F004         	goto	u2311
  7429  000838  EF21  F004         	goto	u2310
  7430  00083C                     u2311:
  7431  00083C  FFFF               	dw	65535	; assembler added errata NOP
  7432  00083E  EF23  F004         	goto	l2654
  7433  000842                     u2310:
  7434  000842  FFFF               	dw	65535	; assembler added errata NOP
  7435  000844  8016               	bsf	___fladd@bexp^0,0,c
  7436  000846                     l2654:
  7437  000846  FFFF               	dw	65535	; assembler added errata NOP
  7438  000848  5016               	movf	___fladd@bexp^0,w,c
  7439  00084A  B4D8               	btfsc	status,2,c
  7440  00084C  EF2A  F004         	goto	u2321
  7441  000850  EF2D  F004         	goto	u2320
  7442  000854                     u2321:
  7443  000854  FFFF               	dw	65535	; assembler added errata NOP
  7444  000856  EF46  F004         	goto	l2664
  7445  00085A                     u2320:
  7446  00085A  FFFF               	dw	65535	; assembler added errata NOP
  7447  00085C  2816               	incf	___fladd@bexp^0,w,c
  7448  00085E  A4D8               	btfss	status,2,c
  7449  000860  EF34  F004         	goto	u2331
  7450  000864  EF37  F004         	goto	u2330
  7451  000868                     u2331:
  7452  000868  FFFF               	dw	65535	; assembler added errata NOP
  7453  00086A  EF40  F004         	goto	l2660
  7454  00086E                     u2330:
  7455  00086E  FFFF               	dw	65535	; assembler added errata NOP
  7456  000870  0E00               	movlw	0
  7457  000872  6E08               	movwf	___fladd@b^0,c
  7458  000874  0E00               	movlw	0
  7459  000876  6E09               	movwf	(___fladd@b+1)^0,c
  7460  000878  0E00               	movlw	0
  7461  00087A  6E0A               	movwf	(___fladd@b+2)^0,c
  7462  00087C  0E00               	movlw	0
  7463  00087E  6E0B               	movwf	(___fladd@b+3)^0,c
  7464  000880                     l2660:
  7465  000880  FFFF               	dw	65535	; assembler added errata NOP
  7466  000882  8E0A               	bsf	(___fladd@b+2)^0,7,c
  7467  000884  0E00               	movlw	0
  7468  000886  6E0B               	movwf	(___fladd@b+3)^0,c
  7469  000888  EF4F  F004         	goto	l2666
  7470  00088C                     l2664:
  7471  00088C  FFFF               	dw	65535	; assembler added errata NOP
  7472  00088E  0E00               	movlw	0
  7473  000890  6E08               	movwf	___fladd@b^0,c
  7474  000892  0E00               	movlw	0
  7475  000894  6E09               	movwf	(___fladd@b+1)^0,c
  7476  000896  0E00               	movlw	0
  7477  000898  6E0A               	movwf	(___fladd@b+2)^0,c
  7478  00089A  0E00               	movlw	0
  7479  00089C  6E0B               	movwf	(___fladd@b+3)^0,c
  7480  00089E                     l2666:
  7481  00089E  FFFF               	dw	65535	; assembler added errata NOP
  7482  0008A0  500F               	movf	(___fladd@a+3)^0,w,c
  7483  0008A2  0B80               	andlw	128
  7484  0008A4  6E15               	movwf	___fladd@aexp^0,c
  7485  0008A6  5014               	movf	___fladd@signs^0,w,c
  7486  0008A8  1815               	xorwf	___fladd@aexp^0,w,c
  7487  0008AA  B4D8               	btfsc	status,2,c
  7488  0008AC  EF5A  F004         	goto	u2341
  7489  0008B0  EF5D  F004         	goto	u2340
  7490  0008B4                     u2341:
  7491  0008B4  FFFF               	dw	65535	; assembler added errata NOP
  7492  0008B6  EF5F  F004         	goto	l2672
  7493  0008BA                     u2340:
  7494  0008BA  FFFF               	dw	65535	; assembler added errata NOP
  7495  0008BC  8C14               	bsf	___fladd@signs^0,6,c
  7496  0008BE                     l2672:
  7497  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  7498  0008C0  500F               	movf	(___fladd@a+3)^0,w,c
  7499  0008C2  240F               	addwf	(___fladd@a+3)^0,w,c
  7500  0008C4  6E15               	movwf	___fladd@aexp^0,c
  7501  0008C6  AE0E               	btfss	(___fladd@a+2)^0,7,c
  7502  0008C8  EF68  F004         	goto	u2351
  7503  0008CC  EF6B  F004         	goto	u2350
  7504  0008D0                     u2351:
  7505  0008D0  FFFF               	dw	65535	; assembler added errata NOP
  7506  0008D2  EF6D  F004         	goto	l2678
  7507  0008D6                     u2350:
  7508  0008D6  FFFF               	dw	65535	; assembler added errata NOP
  7509  0008D8  8015               	bsf	___fladd@aexp^0,0,c
  7510  0008DA                     l2678:
  7511  0008DA  FFFF               	dw	65535	; assembler added errata NOP
  7512  0008DC  5015               	movf	___fladd@aexp^0,w,c
  7513  0008DE  B4D8               	btfsc	status,2,c
  7514  0008E0  EF74  F004         	goto	u2361
  7515  0008E4  EF77  F004         	goto	u2360
  7516  0008E8                     u2361:
  7517  0008E8  FFFF               	dw	65535	; assembler added errata NOP
  7518  0008EA  EF90  F004         	goto	l2688
  7519  0008EE                     u2360:
  7520  0008EE  FFFF               	dw	65535	; assembler added errata NOP
  7521  0008F0  2815               	incf	___fladd@aexp^0,w,c
  7522  0008F2  A4D8               	btfss	status,2,c
  7523  0008F4  EF7E  F004         	goto	u2371
  7524  0008F8  EF81  F004         	goto	u2370
  7525  0008FC                     u2371:
  7526  0008FC  FFFF               	dw	65535	; assembler added errata NOP
  7527  0008FE  EF8A  F004         	goto	l2684
  7528  000902                     u2370:
  7529  000902  FFFF               	dw	65535	; assembler added errata NOP
  7530  000904  0E00               	movlw	0
  7531  000906  6E0C               	movwf	___fladd@a^0,c
  7532  000908  0E00               	movlw	0
  7533  00090A  6E0D               	movwf	(___fladd@a+1)^0,c
  7534  00090C  0E00               	movlw	0
  7535  00090E  6E0E               	movwf	(___fladd@a+2)^0,c
  7536  000910  0E00               	movlw	0
  7537  000912  6E0F               	movwf	(___fladd@a+3)^0,c
  7538  000914                     l2684:
  7539  000914  FFFF               	dw	65535	; assembler added errata NOP
  7540  000916  8E0E               	bsf	(___fladd@a+2)^0,7,c
  7541  000918  0E00               	movlw	0
  7542  00091A  6E0F               	movwf	(___fladd@a+3)^0,c
  7543  00091C  EF99  F004         	goto	l2690
  7544  000920                     l2688:
  7545  000920  FFFF               	dw	65535	; assembler added errata NOP
  7546  000922  0E00               	movlw	0
  7547  000924  6E0C               	movwf	___fladd@a^0,c
  7548  000926  0E00               	movlw	0
  7549  000928  6E0D               	movwf	(___fladd@a+1)^0,c
  7550  00092A  0E00               	movlw	0
  7551  00092C  6E0E               	movwf	(___fladd@a+2)^0,c
  7552  00092E  0E00               	movlw	0
  7553  000930  6E0F               	movwf	(___fladd@a+3)^0,c
  7554  000932                     l2690:
  7555  000932  FFFF               	dw	65535	; assembler added errata NOP
  7556  000934  5016               	movf	___fladd@bexp^0,w,c
  7557  000936  5C15               	subwf	___fladd@aexp^0,w,c
  7558  000938  B0D8               	btfsc	status,0,c
  7559  00093A  EFA1  F004         	goto	u2381
  7560  00093E  EFA4  F004         	goto	u2380
  7561  000942                     u2381:
  7562  000942  FFFF               	dw	65535	; assembler added errata NOP
  7563  000944  EFCF  F004         	goto	l2726
  7564  000948                     u2380:
  7565  000948  FFFF               	dw	65535	; assembler added errata NOP
  7566  00094A  AC14               	btfss	___fladd@signs^0,6,c
  7567  00094C  EFAA  F004         	goto	u2391
  7568  000950  EFAD  F004         	goto	u2390
  7569  000954                     u2391:
  7570  000954  FFFF               	dw	65535	; assembler added errata NOP
  7571  000956  EFB0  F004         	goto	l2696
  7572  00095A                     u2390:
  7573  00095A  FFFF               	dw	65535	; assembler added errata NOP
  7574  00095C  0E80               	movlw	128
  7575  00095E  1A14               	xorwf	___fladd@signs^0,f,c
  7576  000960                     l2696:
  7577  000960  FFFF               	dw	65535	; assembler added errata NOP
  7578  000962  C016  F017         	movff	___fladd@bexp,___fladd@grs
  7579  000966  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  7580  00096A  C017  F015         	movff	___fladd@grs,___fladd@aexp
  7581  00096E  C008  F017         	movff	___fladd@b,___fladd@grs
  7582  000972  C00C  F008         	movff	___fladd@a,___fladd@b
  7583  000976  C017  F00C         	movff	___fladd@grs,___fladd@a
  7584  00097A  C009  F017         	movff	___fladd@b+1,___fladd@grs
  7585  00097E  C00D  F009         	movff	___fladd@a+1,___fladd@b+1
  7586  000982  C017  F00D         	movff	___fladd@grs,___fladd@a+1
  7587  000986  C00A  F017         	movff	___fladd@b+2,___fladd@grs
  7588  00098A  C00E  F00A         	movff	___fladd@a+2,___fladd@b+2
  7589  00098E  C017  F00E         	movff	___fladd@grs,___fladd@a+2
  7590  000992  C00B  F017         	movff	___fladd@b+3,___fladd@grs
  7591  000996  C00F  F00B         	movff	___fladd@a+3,___fladd@b+3
  7592  00099A  C017  F00F         	movff	___fladd@grs,___fladd@a+3
  7593  00099E                     l2726:
  7594  00099E  FFFF               	dw	65535	; assembler added errata NOP
  7595  0009A0  0E00               	movlw	0
  7596  0009A2  6E17               	movwf	___fladd@grs^0,c
  7597  0009A4  5016               	movf	___fladd@bexp^0,w,c
  7598  0009A6  C015  F010         	movff	___fladd@aexp,??___fladd
  7599  0009AA  6A11               	clrf	(??___fladd+1)^0,c
  7600  0009AC  5E10               	subwf	??___fladd^0,f,c
  7601  0009AE  0E00               	movlw	0
  7602  0009B0  5A11               	subwfb	(??___fladd+1)^0,f,c
  7603  0009B2  BE11               	btfsc	(??___fladd+1)^0,7,c
  7604  0009B4  EFE5  F004         	goto	u2401
  7605  0009B8  5011               	movf	(??___fladd+1)^0,w,c
  7606  0009BA  E10A               	bnz	u2400
  7607  0009BC  0E1A               	movlw	26
  7608  0009BE  5C10               	subwf	??___fladd^0,w,c
  7609  0009C0  A0D8               	btfss	status,0,c
  7610  0009C2  EFE5  F004         	goto	u2401
  7611  0009C6  EFE8  F004         	goto	u2400
  7612  0009CA                     u2401:
  7613  0009CA  FFFF               	dw	65535	; assembler added errata NOP
  7614  0009CC  EF2B  F005         	goto	l972
  7615  0009D0                     u2400:
  7616  0009D0  FFFF               	dw	65535	; assembler added errata NOP
  7617  0009D2  5008               	movf	___fladd@b^0,w,c
  7618  0009D4  1009               	iorwf	(___fladd@b+1)^0,w,c
  7619  0009D6  100A               	iorwf	(___fladd@b+2)^0,w,c
  7620  0009D8  100B               	iorwf	(___fladd@b+3)^0,w,c
  7621  0009DA  A4D8               	btfss	status,2,c
  7622  0009DC  EFF2  F004         	goto	u2411
  7623  0009E0  EFF6  F004         	goto	u2410
  7624  0009E4                     u2411:
  7625  0009E4  FFFF               	dw	65535	; assembler added errata NOP
  7626  0009E6  0E01               	movlw	1
  7627  0009E8  EFF8  F004         	goto	u2420
  7628  0009EC                     u2410:
  7629  0009EC  FFFF               	dw	65535	; assembler added errata NOP
  7630  0009EE  0E00               	movlw	0
  7631  0009F0                     u2420:
  7632  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  7633  0009F2  6E17               	movwf	___fladd@grs^0,c
  7634  0009F4  0E00               	movlw	0
  7635  0009F6  6E08               	movwf	___fladd@b^0,c
  7636  0009F8  0E00               	movlw	0
  7637  0009FA  6E09               	movwf	(___fladd@b+1)^0,c
  7638  0009FC  0E00               	movlw	0
  7639  0009FE  6E0A               	movwf	(___fladd@b+2)^0,c
  7640  000A00  0E00               	movlw	0
  7641  000A02  6E0B               	movwf	(___fladd@b+3)^0,c
  7642  000A04  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  7643  000A08  EF36  F005         	goto	l971
  7644  000A0C                     l973:
  7645  000A0C  FFFF               	dw	65535	; assembler added errata NOP
  7646  000A0E  A017               	btfss	___fladd@grs^0,0,c
  7647  000A10  EF0C  F005         	goto	u2431
  7648  000A14  EF0F  F005         	goto	u2430
  7649  000A18                     u2431:
  7650  000A18  FFFF               	dw	65535	; assembler added errata NOP
  7651  000A1A  EF16  F005         	goto	l2738
  7652  000A1E                     u2430:
  7653  000A1E  FFFF               	dw	65535	; assembler added errata NOP
  7654  000A20  90D8               	bcf	status,0,c
  7655  000A22  3017               	rrcf	___fladd@grs^0,w,c
  7656  000A24  0901               	iorlw	1
  7657  000A26  6E17               	movwf	___fladd@grs^0,c
  7658  000A28  EF19  F005         	goto	l2740
  7659  000A2C                     l2738:
  7660  000A2C  FFFF               	dw	65535	; assembler added errata NOP
  7661  000A2E  90D8               	bcf	status,0,c
  7662  000A30  3217               	rrcf	___fladd@grs^0,f,c
  7663  000A32                     l2740:
  7664  000A32  FFFF               	dw	65535	; assembler added errata NOP
  7665  000A34  A008               	btfss	___fladd@b^0,0,c
  7666  000A36  EF1F  F005         	goto	u2441
  7667  000A3A  EF22  F005         	goto	u2440
  7668  000A3E                     u2441:
  7669  000A3E  FFFF               	dw	65535	; assembler added errata NOP
  7670  000A40  EF24  F005         	goto	l2744
  7671  000A44                     u2440:
  7672  000A44  FFFF               	dw	65535	; assembler added errata NOP
  7673  000A46  8E17               	bsf	___fladd@grs^0,7,c
  7674  000A48                     l2744:
  7675  000A48  FFFF               	dw	65535	; assembler added errata NOP
  7676  000A4A  340B               	rlcf	(___fladd@b+3)^0,w,c
  7677  000A4C  320B               	rrcf	(___fladd@b+3)^0,f,c
  7678  000A4E  320A               	rrcf	(___fladd@b+2)^0,f,c
  7679  000A50  3209               	rrcf	(___fladd@b+1)^0,f,c
  7680  000A52  3208               	rrcf	___fladd@b^0,f,c
  7681  000A54  2A16               	incf	___fladd@bexp^0,f,c
  7682  000A56                     l972:
  7683  000A56  FFFF               	dw	65535	; assembler added errata NOP
  7684  000A58  5015               	movf	___fladd@aexp^0,w,c
  7685  000A5A  5C16               	subwf	___fladd@bexp^0,w,c
  7686  000A5C  A0D8               	btfss	status,0,c
  7687  000A5E  EF33  F005         	goto	u2451
  7688  000A62  EF36  F005         	goto	u2450
  7689  000A66                     u2451:
  7690  000A66  FFFF               	dw	65535	; assembler added errata NOP
  7691  000A68  EF06  F005         	goto	l973
  7692  000A6C                     u2450:
  7693  000A6C                     l971:
  7694  000A6C  FFFF               	dw	65535	; assembler added errata NOP
  7695  000A6E  BC14               	btfsc	___fladd@signs^0,6,c
  7696  000A70  EF3C  F005         	goto	u2461
  7697  000A74  EF3F  F005         	goto	u2460
  7698  000A78                     u2461:
  7699  000A78  FFFF               	dw	65535	; assembler added errata NOP
  7700  000A7A  EF8C  F005         	goto	l2772
  7701  000A7E                     u2460:
  7702  000A7E  FFFF               	dw	65535	; assembler added errata NOP
  7703  000A80  5016               	movf	___fladd@bexp^0,w,c
  7704  000A82  A4D8               	btfss	status,2,c
  7705  000A84  EF46  F005         	goto	u2471
  7706  000A88  EF49  F005         	goto	u2470
  7707  000A8C                     u2471:
  7708  000A8C  FFFF               	dw	65535	; assembler added errata NOP
  7709  000A8E  EF54  F005         	goto	l2754
  7710  000A92                     u2470:
  7711  000A92  FFFF               	dw	65535	; assembler added errata NOP
  7712  000A94  0E00               	movlw	0
  7713  000A96  6E08               	movwf	?___fladd^0,c
  7714  000A98  0E00               	movlw	0
  7715  000A9A  6E09               	movwf	(?___fladd+1)^0,c
  7716  000A9C  0E00               	movlw	0
  7717  000A9E  6E0A               	movwf	(?___fladd+2)^0,c
  7718  000AA0  0E00               	movlw	0
  7719  000AA2  6E0B               	movwf	(?___fladd+3)^0,c
  7720  000AA4  EFE3  F006         	goto	l980
  7721  000AA8                     l2754:
  7722  000AA8  FFFF               	dw	65535	; assembler added errata NOP
  7723  000AAA  500C               	movf	___fladd@a^0,w,c
  7724  000AAC  2608               	addwf	___fladd@b^0,f,c
  7725  000AAE  500D               	movf	(___fladd@a+1)^0,w,c
  7726  000AB0  2209               	addwfc	(___fladd@b+1)^0,f,c
  7727  000AB2  500E               	movf	(___fladd@a+2)^0,w,c
  7728  000AB4  220A               	addwfc	(___fladd@b+2)^0,f,c
  7729  000AB6  500F               	movf	(___fladd@a+3)^0,w,c
  7730  000AB8  220B               	addwfc	(___fladd@b+3)^0,f,c
  7731  000ABA  A00B               	btfss	(___fladd@b+3)^0,0,c
  7732  000ABC  EF62  F005         	goto	u2481
  7733  000AC0  EF65  F005         	goto	u2480
  7734  000AC4                     u2481:
  7735  000AC4  FFFF               	dw	65535	; assembler added errata NOP
  7736  000AC6  EF30  F006         	goto	l2808
  7737  000ACA                     u2480:
  7738  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  7739  000ACC  A017               	btfss	___fladd@grs^0,0,c
  7740  000ACE  EF6B  F005         	goto	u2491
  7741  000AD2  EF6E  F005         	goto	u2490
  7742  000AD6                     u2491:
  7743  000AD6  FFFF               	dw	65535	; assembler added errata NOP
  7744  000AD8  EF75  F005         	goto	l2762
  7745  000ADC                     u2490:
  7746  000ADC  FFFF               	dw	65535	; assembler added errata NOP
  7747  000ADE  90D8               	bcf	status,0,c
  7748  000AE0  3017               	rrcf	___fladd@grs^0,w,c
  7749  000AE2  0901               	iorlw	1
  7750  000AE4  6E17               	movwf	___fladd@grs^0,c
  7751  000AE6  EF78  F005         	goto	l2764
  7752  000AEA                     l2762:
  7753  000AEA  FFFF               	dw	65535	; assembler added errata NOP
  7754  000AEC  90D8               	bcf	status,0,c
  7755  000AEE  3217               	rrcf	___fladd@grs^0,f,c
  7756  000AF0                     l2764:
  7757  000AF0  FFFF               	dw	65535	; assembler added errata NOP
  7758  000AF2  A008               	btfss	___fladd@b^0,0,c
  7759  000AF4  EF7E  F005         	goto	u2501
  7760  000AF8  EF81  F005         	goto	u2500
  7761  000AFC                     u2501:
  7762  000AFC  FFFF               	dw	65535	; assembler added errata NOP
  7763  000AFE  EF83  F005         	goto	l2768
  7764  000B02                     u2500:
  7765  000B02  FFFF               	dw	65535	; assembler added errata NOP
  7766  000B04  8E17               	bsf	___fladd@grs^0,7,c
  7767  000B06                     l2768:
  7768  000B06  FFFF               	dw	65535	; assembler added errata NOP
  7769  000B08  340B               	rlcf	(___fladd@b+3)^0,w,c
  7770  000B0A  320B               	rrcf	(___fladd@b+3)^0,f,c
  7771  000B0C  320A               	rrcf	(___fladd@b+2)^0,f,c
  7772  000B0E  3209               	rrcf	(___fladd@b+1)^0,f,c
  7773  000B10  3208               	rrcf	___fladd@b^0,f,c
  7774  000B12  2A16               	incf	___fladd@bexp^0,f,c
  7775  000B14  EF30  F006         	goto	l2808
  7776  000B18                     l2772:
  7777  000B18  FFFF               	dw	65535	; assembler added errata NOP
  7778  000B1A  500C               	movf	___fladd@a^0,w,c
  7779  000B1C  5C08               	subwf	___fladd@b^0,w,c
  7780  000B1E  500D               	movf	(___fladd@a+1)^0,w,c
  7781  000B20  5809               	subwfb	(___fladd@b+1)^0,w,c
  7782  000B22  500E               	movf	(___fladd@a+2)^0,w,c
  7783  000B24  580A               	subwfb	(___fladd@b+2)^0,w,c
  7784  000B26  500B               	movf	(___fladd@b+3)^0,w,c
  7785  000B28  0A80               	xorlw	128
  7786  000B2A  6E10               	movwf	??___fladd^0,c
  7787  000B2C  500F               	movf	(___fladd@a+3)^0,w,c
  7788  000B2E  0A80               	xorlw	128
  7789  000B30  5810               	subwfb	??___fladd^0,w,c
  7790  000B32  B0D8               	btfsc	status,0,c
  7791  000B34  EF9E  F005         	goto	u2511
  7792  000B38  EFA1  F005         	goto	u2510
  7793  000B3C                     u2511:
  7794  000B3C  FFFF               	dw	65535	; assembler added errata NOP
  7795  000B3E  EFCF  F005         	goto	l2782
  7796  000B42                     u2510:
  7797  000B42  FFFF               	dw	65535	; assembler added errata NOP
  7798  000B44  5008               	movf	___fladd@b^0,w,c
  7799  000B46  5C0C               	subwf	___fladd@a^0,w,c
  7800  000B48  6E10               	movwf	??___fladd^0,c
  7801  000B4A  5009               	movf	(___fladd@b+1)^0,w,c
  7802  000B4C  580D               	subwfb	(___fladd@a+1)^0,w,c
  7803  000B4E  6E11               	movwf	(??___fladd+1)^0,c
  7804  000B50  500A               	movf	(___fladd@b+2)^0,w,c
  7805  000B52  580E               	subwfb	(___fladd@a+2)^0,w,c
  7806  000B54  6E12               	movwf	(??___fladd+2)^0,c
  7807  000B56  500B               	movf	(___fladd@b+3)^0,w,c
  7808  000B58  580F               	subwfb	(___fladd@a+3)^0,w,c
  7809  000B5A  6E13               	movwf	(??___fladd+3)^0,c
  7810  000B5C  0EFF               	movlw	255
  7811  000B5E  2410               	addwf	??___fladd^0,w,c
  7812  000B60  6E08               	movwf	___fladd@b^0,c
  7813  000B62  0EFF               	movlw	255
  7814  000B64  2011               	addwfc	(??___fladd+1)^0,w,c
  7815  000B66  6E09               	movwf	(___fladd@b+1)^0,c
  7816  000B68  0EFF               	movlw	255
  7817  000B6A  2012               	addwfc	(??___fladd+2)^0,w,c
  7818  000B6C  6E0A               	movwf	(___fladd@b+2)^0,c
  7819  000B6E  0EFF               	movlw	255
  7820  000B70  2013               	addwfc	(??___fladd+3)^0,w,c
  7821  000B72  6E0B               	movwf	(___fladd@b+3)^0,c
  7822  000B74  0E80               	movlw	128
  7823  000B76  1A14               	xorwf	___fladd@signs^0,f,c
  7824  000B78  6C17               	negf	___fladd@grs^0,c
  7825  000B7A  5017               	movf	___fladd@grs^0,w,c
  7826  000B7C  A4D8               	btfss	status,2,c
  7827  000B7E  EFC3  F005         	goto	u2521
  7828  000B82  EFC6  F005         	goto	u2520
  7829  000B86                     u2521:
  7830  000B86  FFFF               	dw	65535	; assembler added errata NOP
  7831  000B88  EFD8  F005         	goto	l988
  7832  000B8C                     u2520:
  7833  000B8C  FFFF               	dw	65535	; assembler added errata NOP
  7834  000B8E  0E01               	movlw	1
  7835  000B90  2608               	addwf	___fladd@b^0,f,c
  7836  000B92  0E00               	movlw	0
  7837  000B94  2209               	addwfc	(___fladd@b+1)^0,f,c
  7838  000B96  220A               	addwfc	(___fladd@b+2)^0,f,c
  7839  000B98  220B               	addwfc	(___fladd@b+3)^0,f,c
  7840  000B9A  EFD8  F005         	goto	l988
  7841  000B9E                     l2782:
  7842  000B9E  FFFF               	dw	65535	; assembler added errata NOP
  7843  000BA0  500C               	movf	___fladd@a^0,w,c
  7844  000BA2  5E08               	subwf	___fladd@b^0,f,c
  7845  000BA4  500D               	movf	(___fladd@a+1)^0,w,c
  7846  000BA6  5A09               	subwfb	(___fladd@b+1)^0,f,c
  7847  000BA8  500E               	movf	(___fladd@a+2)^0,w,c
  7848  000BAA  5A0A               	subwfb	(___fladd@b+2)^0,f,c
  7849  000BAC  500F               	movf	(___fladd@a+3)^0,w,c
  7850  000BAE  5A0B               	subwfb	(___fladd@b+3)^0,f,c
  7851  000BB0                     l988:
  7852  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  7853  000BB2  5008               	movf	___fladd@b^0,w,c
  7854  000BB4  1009               	iorwf	(___fladd@b+1)^0,w,c
  7855  000BB6  100A               	iorwf	(___fladd@b+2)^0,w,c
  7856  000BB8  100B               	iorwf	(___fladd@b+3)^0,w,c
  7857  000BBA  A4D8               	btfss	status,2,c
  7858  000BBC  EFE2  F005         	goto	u2531
  7859  000BC0  EFE5  F005         	goto	u2530
  7860  000BC4                     u2531:
  7861  000BC4  FFFF               	dw	65535	; assembler added errata NOP
  7862  000BC6  EF27  F006         	goto	l2806
  7863  000BCA                     u2530:
  7864  000BCA  FFFF               	dw	65535	; assembler added errata NOP
  7865  000BCC  5017               	movf	___fladd@grs^0,w,c
  7866  000BCE  A4D8               	btfss	status,2,c
  7867  000BD0  EFEC  F005         	goto	u2541
  7868  000BD4  EFEF  F005         	goto	u2540
  7869  000BD8                     u2541:
  7870  000BD8  FFFF               	dw	65535	; assembler added errata NOP
  7871  000BDA  EF27  F006         	goto	l2806
  7872  000BDE                     u2540:
  7873  000BDE  FFFF               	dw	65535	; assembler added errata NOP
  7874  000BE0  0E00               	movlw	0
  7875  000BE2  6E08               	movwf	?___fladd^0,c
  7876  000BE4  0E00               	movlw	0
  7877  000BE6  6E09               	movwf	(?___fladd+1)^0,c
  7878  000BE8  0E00               	movlw	0
  7879  000BEA  6E0A               	movwf	(?___fladd+2)^0,c
  7880  000BEC  0E00               	movlw	0
  7881  000BEE  6E0B               	movwf	(?___fladd+3)^0,c
  7882  000BF0  EFE3  F006         	goto	l980
  7883  000BF4                     l2790:
  7884  000BF4  FFFF               	dw	65535	; assembler added errata NOP
  7885  000BF6  90D8               	bcf	status,0,c
  7886  000BF8  3608               	rlcf	___fladd@b^0,f,c
  7887  000BFA  3609               	rlcf	(___fladd@b+1)^0,f,c
  7888  000BFC  360A               	rlcf	(___fladd@b+2)^0,f,c
  7889  000BFE  360B               	rlcf	(___fladd@b+3)^0,f,c
  7890  000C00  AE17               	btfss	___fladd@grs^0,7,c
  7891  000C02  EF05  F006         	goto	u2551
  7892  000C06  EF08  F006         	goto	u2550
  7893  000C0A                     u2551:
  7894  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  7895  000C0C  EF0A  F006         	goto	l2796
  7896  000C10                     u2550:
  7897  000C10  FFFF               	dw	65535	; assembler added errata NOP
  7898  000C12  8008               	bsf	___fladd@b^0,0,c
  7899  000C14                     l2796:
  7900  000C14  FFFF               	dw	65535	; assembler added errata NOP
  7901  000C16  A017               	btfss	___fladd@grs^0,0,c
  7902  000C18  EF10  F006         	goto	u2561
  7903  000C1C  EF13  F006         	goto	u2560
  7904  000C20                     u2561:
  7905  000C20  FFFF               	dw	65535	; assembler added errata NOP
  7906  000C22  EF18  F006         	goto	l2800
  7907  000C26                     u2560:
  7908  000C26  FFFF               	dw	65535	; assembler added errata NOP
  7909  000C28  80D8               	bsf	status,0,c
  7910  000C2A  3617               	rlcf	___fladd@grs^0,f,c
  7911  000C2C  EF1B  F006         	goto	l2802
  7912  000C30                     l2800:
  7913  000C30  FFFF               	dw	65535	; assembler added errata NOP
  7914  000C32  90D8               	bcf	status,0,c
  7915  000C34  3617               	rlcf	___fladd@grs^0,f,c
  7916  000C36                     l2802:
  7917  000C36  FFFF               	dw	65535	; assembler added errata NOP
  7918  000C38  5016               	movf	___fladd@bexp^0,w,c
  7919  000C3A  B4D8               	btfsc	status,2,c
  7920  000C3C  EF22  F006         	goto	u2571
  7921  000C40  EF25  F006         	goto	u2570
  7922  000C44                     u2571:
  7923  000C44  FFFF               	dw	65535	; assembler added errata NOP
  7924  000C46  EF27  F006         	goto	l2806
  7925  000C4A                     u2570:
  7926  000C4A  FFFF               	dw	65535	; assembler added errata NOP
  7927  000C4C  0616               	decf	___fladd@bexp^0,f,c
  7928  000C4E                     l2806:
  7929  000C4E  FFFF               	dw	65535	; assembler added errata NOP
  7930  000C50  AE0A               	btfss	(___fladd@b+2)^0,7,c
  7931  000C52  EF2D  F006         	goto	u2581
  7932  000C56  EF30  F006         	goto	u2580
  7933  000C5A                     u2581:
  7934  000C5A  FFFF               	dw	65535	; assembler added errata NOP
  7935  000C5C  EFFA  F005         	goto	l2790
  7936  000C60                     u2580:
  7937  000C60                     l2808:
  7938  000C60  FFFF               	dw	65535	; assembler added errata NOP
  7939  000C62  0E00               	movlw	0
  7940  000C64  6E15               	movwf	___fladd@aexp^0,c
  7941  000C66  AE17               	btfss	___fladd@grs^0,7,c
  7942  000C68  EF38  F006         	goto	u2591
  7943  000C6C  EF3B  F006         	goto	u2590
  7944  000C70                     u2591:
  7945  000C70  FFFF               	dw	65535	; assembler added errata NOP
  7946  000C72  EF5A  F006         	goto	l997
  7947  000C76                     u2590:
  7948  000C76  FFFF               	dw	65535	; assembler added errata NOP
  7949  000C78  C017  F010         	movff	___fladd@grs,??___fladd
  7950  000C7C  0E7F               	movlw	127
  7951  000C7E  1610               	andwf	??___fladd^0,f,c
  7952  000C80  B4D8               	btfsc	status,2,c
  7953  000C82  EF45  F006         	goto	u2601
  7954  000C86  EF48  F006         	goto	u2600
  7955  000C8A                     u2601:
  7956  000C8A  FFFF               	dw	65535	; assembler added errata NOP
  7957  000C8C  EF4E  F006         	goto	l998
  7958  000C90                     u2600:
  7959  000C90  FFFF               	dw	65535	; assembler added errata NOP
  7960  000C92                     l2814:
  7961  000C92  FFFF               	dw	65535	; assembler added errata NOP
  7962  000C94  0E01               	movlw	1
  7963  000C96  6E15               	movwf	___fladd@aexp^0,c
  7964  000C98  EF5A  F006         	goto	l997
  7965  000C9C                     l998:
  7966  000C9C  FFFF               	dw	65535	; assembler added errata NOP
  7967  000C9E  A008               	btfss	___fladd@b^0,0,c
  7968  000CA0  EF54  F006         	goto	u2611
  7969  000CA4  EF57  F006         	goto	u2610
  7970  000CA8                     u2611:
  7971  000CA8  FFFF               	dw	65535	; assembler added errata NOP
  7972  000CAA  EF5A  F006         	goto	l997
  7973  000CAE                     u2610:
  7974  000CAE  FFFF               	dw	65535	; assembler added errata NOP
  7975  000CB0  EF49  F006         	goto	l2814
  7976  000CB4                     l997:
  7977  000CB4  FFFF               	dw	65535	; assembler added errata NOP
  7978  000CB6  5015               	movf	___fladd@aexp^0,w,c
  7979  000CB8  B4D8               	btfsc	status,2,c
  7980  000CBA  EF61  F006         	goto	u2621
  7981  000CBE  EF64  F006         	goto	u2620
  7982  000CC2                     u2621:
  7983  000CC2  FFFF               	dw	65535	; assembler added errata NOP
  7984  000CC4  EF94  F006         	goto	l2826
  7985  000CC8                     u2620:
  7986  000CC8  FFFF               	dw	65535	; assembler added errata NOP
  7987  000CCA  0E01               	movlw	1
  7988  000CCC  2608               	addwf	___fladd@b^0,f,c
  7989  000CCE  0E00               	movlw	0
  7990  000CD0  2209               	addwfc	(___fladd@b+1)^0,f,c
  7991  000CD2  220A               	addwfc	(___fladd@b+2)^0,f,c
  7992  000CD4  220B               	addwfc	(___fladd@b+3)^0,f,c
  7993  000CD6  A00B               	btfss	(___fladd@b+3)^0,0,c
  7994  000CD8  EF70  F006         	goto	u2631
  7995  000CDC  EF73  F006         	goto	u2630
  7996  000CE0                     u2631:
  7997  000CE0  FFFF               	dw	65535	; assembler added errata NOP
  7998  000CE2  EF94  F006         	goto	l2826
  7999  000CE6                     u2630:
  8000  000CE6  FFFF               	dw	65535	; assembler added errata NOP
  8001  000CE8  C008  F010         	movff	___fladd@b,??___fladd
  8002  000CEC  C009  F011         	movff	___fladd@b+1,??___fladd+1
  8003  000CF0  C00A  F012         	movff	___fladd@b+2,??___fladd+2
  8004  000CF4  C00B  F013         	movff	___fladd@b+3,??___fladd+3
  8005  000CF8  3413               	rlcf	(??___fladd+3)^0,w,c
  8006  000CFA  3213               	rrcf	(??___fladd+3)^0,f,c
  8007  000CFC  3212               	rrcf	(??___fladd+2)^0,f,c
  8008  000CFE  3211               	rrcf	(??___fladd+1)^0,f,c
  8009  000D00  3210               	rrcf	??___fladd^0,f,c
  8010  000D02  C010  F008         	movff	??___fladd,___fladd@b
  8011  000D06  C011  F009         	movff	??___fladd+1,___fladd@b+1
  8012  000D0A  C012  F00A         	movff	??___fladd+2,___fladd@b+2
  8013  000D0E  C013  F00B         	movff	??___fladd+3,___fladd@b+3
  8014  000D12  2816               	incf	___fladd@bexp^0,w,c
  8015  000D14  B4D8               	btfsc	status,2,c
  8016  000D16  EF8F  F006         	goto	u2641
  8017  000D1A  EF92  F006         	goto	u2640
  8018  000D1E                     u2641:
  8019  000D1E  FFFF               	dw	65535	; assembler added errata NOP
  8020  000D20  EF94  F006         	goto	l2826
  8021  000D24                     u2640:
  8022  000D24  FFFF               	dw	65535	; assembler added errata NOP
  8023  000D26  2A16               	incf	___fladd@bexp^0,f,c
  8024  000D28                     l2826:
  8025  000D28  FFFF               	dw	65535	; assembler added errata NOP
  8026  000D2A  2816               	incf	___fladd@bexp^0,w,c
  8027  000D2C  B4D8               	btfsc	status,2,c
  8028  000D2E  EF9B  F006         	goto	u2651
  8029  000D32  EF9E  F006         	goto	u2650
  8030  000D36                     u2651:
  8031  000D36  FFFF               	dw	65535	; assembler added errata NOP
  8032  000D38  EFA8  F006         	goto	l2830
  8033  000D3C                     u2650:
  8034  000D3C  FFFF               	dw	65535	; assembler added errata NOP
  8035  000D3E  5016               	movf	___fladd@bexp^0,w,c
  8036  000D40  A4D8               	btfss	status,2,c
  8037  000D42  EFA5  F006         	goto	u2661
  8038  000D46  EFA8  F006         	goto	u2660
  8039  000D4A                     u2661:
  8040  000D4A  FFFF               	dw	65535	; assembler added errata NOP
  8041  000D4C  EFBD  F006         	goto	l2834
  8042  000D50                     u2660:
  8043  000D50                     l2830:
  8044  000D50  FFFF               	dw	65535	; assembler added errata NOP
  8045  000D52  0E00               	movlw	0
  8046  000D54  6E08               	movwf	___fladd@b^0,c
  8047  000D56  0E00               	movlw	0
  8048  000D58  6E09               	movwf	(___fladd@b+1)^0,c
  8049  000D5A  0E00               	movlw	0
  8050  000D5C  6E0A               	movwf	(___fladd@b+2)^0,c
  8051  000D5E  0E00               	movlw	0
  8052  000D60  6E0B               	movwf	(___fladd@b+3)^0,c
  8053  000D62  5016               	movf	___fladd@bexp^0,w,c
  8054  000D64  A4D8               	btfss	status,2,c
  8055  000D66  EFB7  F006         	goto	u2671
  8056  000D6A  EFBA  F006         	goto	u2670
  8057  000D6E                     u2671:
  8058  000D6E  FFFF               	dw	65535	; assembler added errata NOP
  8059  000D70  EFBD  F006         	goto	l2834
  8060  000D74                     u2670:
  8061  000D74  FFFF               	dw	65535	; assembler added errata NOP
  8062  000D76  0E00               	movlw	0
  8063  000D78  6E14               	movwf	___fladd@signs^0,c
  8064  000D7A                     l2834:
  8065  000D7A  FFFF               	dw	65535	; assembler added errata NOP
  8066  000D7C  A016               	btfss	___fladd@bexp^0,0,c
  8067  000D7E  EFC3  F006         	goto	u2681
  8068  000D82  EFC6  F006         	goto	u2680
  8069  000D86                     u2681:
  8070  000D86  FFFF               	dw	65535	; assembler added errata NOP
  8071  000D88  EFCA  F006         	goto	l2838
  8072  000D8C                     u2680:
  8073  000D8C  FFFF               	dw	65535	; assembler added errata NOP
  8074  000D8E  8E0A               	bsf	(___fladd@b+2)^0,7,c
  8075  000D90  EFCC  F006         	goto	l2840
  8076  000D94                     l2838:
  8077  000D94  FFFF               	dw	65535	; assembler added errata NOP
  8078  000D96  9E0A               	bcf	(___fladd@b+2)^0,7,c
  8079  000D98                     l2840:
  8080  000D98  FFFF               	dw	65535	; assembler added errata NOP
  8081  000D9A  90D8               	bcf	status,0,c
  8082  000D9C  3016               	rrcf	___fladd@bexp^0,w,c
  8083  000D9E  6E0B               	movwf	(___fladd@b+3)^0,c
  8084  000DA0  AE14               	btfss	___fladd@signs^0,7,c
  8085  000DA2  EFD5  F006         	goto	u2691
  8086  000DA6  EFD8  F006         	goto	u2690
  8087  000DAA                     u2691:
  8088  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  8089  000DAC  EFDA  F006         	goto	l2846
  8090  000DB0                     u2690:
  8091  000DB0  FFFF               	dw	65535	; assembler added errata NOP
  8092  000DB2  8E0B               	bsf	(___fladd@b+3)^0,7,c
  8093  000DB4                     l2846:
  8094  000DB4  FFFF               	dw	65535	; assembler added errata NOP
  8095  000DB6  C008  F008         	movff	___fladd@b,?___fladd
  8096  000DBA  C009  F009         	movff	___fladd@b+1,?___fladd+1
  8097  000DBE  C00A  F00A         	movff	___fladd@b+2,?___fladd+2
  8098  000DC2  C00B  F00B         	movff	___fladd@b+3,?___fladd+3
  8099  000DC6                     l980:
  8100  000DC6  FFFF               	dw	65535	; assembler added errata NOP
  8101  000DC8  0012               	return		;funcret
  8102  000DCA  FFFF               	dw	65535	; errata NOP
  8103  000DCC                     __end_of___fladd:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function ___flneg *****************
  8107 ;; Defined at:
  8108 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  f1              4    7[COMRAM] unsigned char 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  4    7[COMRAM] unsigned char 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8122 ;;      Params:         4       0       0       0       0       0       0
  8123 ;;      Locals:         0       0       0       0       0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0
  8125 ;;      Totals:         4       0       0       0       0       0       0
  8126 ;;Total ram usage:        4 bytes
  8127 ;; Hardware stack levels used: 1
  8128 ;; Hardware stack levels required when called: 1
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_roundf
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           	psect	text30
  8137  003086                     __ptext30:
  8138                           	callstack 0
  8139  003086                     ___flneg:
  8140                           	callstack 0
  8141  003086  FFFF               	dw	65535	; assembler added errata NOP
  8142  003088  5008               	movf	___flneg@f1^0,w,c
  8143  00308A  1009               	iorwf	(___flneg@f1+1)^0,w,c
  8144  00308C  100A               	iorwf	(___flneg@f1+2)^0,w,c
  8145  00308E  100B               	iorwf	(___flneg@f1+3)^0,w,c
  8146  003090  B4D8               	btfsc	status,2,c
  8147  003092  EF4D  F018         	goto	u3571
  8148  003096  EF50  F018         	goto	u3570
  8149  00309A                     u3571:
  8150  00309A  FFFF               	dw	65535	; assembler added errata NOP
  8151  00309C  EF59  F018         	goto	l3450
  8152  0030A0                     u3570:
  8153  0030A0  FFFF               	dw	65535	; assembler added errata NOP
  8154  0030A2  0E00               	movlw	0
  8155  0030A4  1A08               	xorwf	___flneg@f1^0,f,c
  8156  0030A6  0E00               	movlw	0
  8157  0030A8  1A09               	xorwf	(___flneg@f1+1)^0,f,c
  8158  0030AA  0E00               	movlw	0
  8159  0030AC  1A0A               	xorwf	(___flneg@f1+2)^0,f,c
  8160  0030AE  0E80               	movlw	128
  8161  0030B0  1A0B               	xorwf	(___flneg@f1+3)^0,f,c
  8162  0030B2                     l3450:
  8163  0030B2  FFFF               	dw	65535	; assembler added errata NOP
  8164  0030B4  C008  F008         	movff	___flneg@f1,?___flneg
  8165  0030B8  C009  F009         	movff	___flneg@f1+1,?___flneg+1
  8166  0030BC  C00A  F00A         	movff	___flneg@f1+2,?___flneg+2
  8167  0030C0  C00B  F00B         	movff	___flneg@f1+3,?___flneg+3
  8168  0030C4  0012               	return		;funcret
  8169  0030C6  FFFF               	dw	65535	; errata NOP
  8170  0030C8                     __end_of___flneg:
  8171                           	callstack 0
  8172                           
  8173 ;; *************** function ___flmul *****************
  8174 ;; Defined at:
  8175 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  b               4    7[COMRAM] unsigned char 
  8178 ;;  a               4   11[COMRAM] unsigned char 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  prod            4   26[COMRAM] struct .
  8181 ;;  grs             4   20[COMRAM] unsigned long 
  8182 ;;  temp            2   30[COMRAM] struct .
  8183 ;;  bexp            1   25[COMRAM] unsigned char 
  8184 ;;  aexp            1   24[COMRAM] unsigned char 
  8185 ;;  sign            1   19[COMRAM] unsigned char 
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  4    7[COMRAM] unsigned char 
  8188 ;; Registers used:
  8189 ;;		wreg, status,2, status,0, prodl, prodh
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8195 ;;      Params:         8       0       0       0       0       0       0
  8196 ;;      Locals:        13       0       0       0       0       0       0
  8197 ;;      Temps:          4       0       0       0       0       0       0
  8198 ;;      Totals:        25       0       0       0       0       0       0
  8199 ;;Total ram usage:       25 bytes
  8200 ;; Hardware stack levels used: 1
  8201 ;; Hardware stack levels required when called: 1
  8202 ;; This function calls:
  8203 ;;		Nothing
  8204 ;; This function is called by:
  8205 ;;		_roundf
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           	psect	text31
  8210  000DCC                     __ptext31:
  8211                           	callstack 0
  8212  000DCC                     ___flmul:
  8213                           	callstack 0
  8214  000DCC  FFFF               	dw	65535	; assembler added errata NOP
  8215  000DCE  500B               	movf	(___flmul@b+3)^0,w,c
  8216  000DD0  0B80               	andlw	128
  8217  000DD2  6E14               	movwf	___flmul@sign^0,c
  8218  000DD4  500B               	movf	(___flmul@b+3)^0,w,c
  8219  000DD6  240B               	addwf	(___flmul@b+3)^0,w,c
  8220  000DD8  6E1A               	movwf	___flmul@bexp^0,c
  8221  000DDA  AE0A               	btfss	(___flmul@b+2)^0,7,c
  8222  000DDC  EFF2  F006         	goto	u3331
  8223  000DE0  EFF5  F006         	goto	u3330
  8224  000DE4                     u3331:
  8225  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  8226  000DE6  EFF7  F006         	goto	l3294
  8227  000DEA                     u3330:
  8228  000DEA  FFFF               	dw	65535	; assembler added errata NOP
  8229  000DEC  801A               	bsf	___flmul@bexp^0,0,c
  8230  000DEE                     l3294:
  8231  000DEE  FFFF               	dw	65535	; assembler added errata NOP
  8232  000DF0  501A               	movf	___flmul@bexp^0,w,c
  8233  000DF2  B4D8               	btfsc	status,2,c
  8234  000DF4  EFFE  F006         	goto	u3341
  8235  000DF8  EF01  F007         	goto	u3340
  8236  000DFC                     u3341:
  8237  000DFC  FFFF               	dw	65535	; assembler added errata NOP
  8238  000DFE  EF18  F007         	goto	l3302
  8239  000E02                     u3340:
  8240  000E02  FFFF               	dw	65535	; assembler added errata NOP
  8241  000E04  281A               	incf	___flmul@bexp^0,w,c
  8242  000E06  A4D8               	btfss	status,2,c
  8243  000E08  EF08  F007         	goto	u3351
  8244  000E0C  EF0B  F007         	goto	u3350
  8245  000E10                     u3351:
  8246  000E10  FFFF               	dw	65535	; assembler added errata NOP
  8247  000E12  EF14  F007         	goto	l3300
  8248  000E16                     u3350:
  8249  000E16  FFFF               	dw	65535	; assembler added errata NOP
  8250  000E18  0E00               	movlw	0
  8251  000E1A  6E08               	movwf	___flmul@b^0,c
  8252  000E1C  0E00               	movlw	0
  8253  000E1E  6E09               	movwf	(___flmul@b+1)^0,c
  8254  000E20  0E00               	movlw	0
  8255  000E22  6E0A               	movwf	(___flmul@b+2)^0,c
  8256  000E24  0E00               	movlw	0
  8257  000E26  6E0B               	movwf	(___flmul@b+3)^0,c
  8258  000E28                     l3300:
  8259  000E28  FFFF               	dw	65535	; assembler added errata NOP
  8260  000E2A  8E0A               	bsf	(___flmul@b+2)^0,7,c
  8261  000E2C  EF21  F007         	goto	l3304
  8262  000E30                     l3302:
  8263  000E30  FFFF               	dw	65535	; assembler added errata NOP
  8264  000E32  0E00               	movlw	0
  8265  000E34  6E08               	movwf	___flmul@b^0,c
  8266  000E36  0E00               	movlw	0
  8267  000E38  6E09               	movwf	(___flmul@b+1)^0,c
  8268  000E3A  0E00               	movlw	0
  8269  000E3C  6E0A               	movwf	(___flmul@b+2)^0,c
  8270  000E3E  0E00               	movlw	0
  8271  000E40  6E0B               	movwf	(___flmul@b+3)^0,c
  8272  000E42                     l3304:
  8273  000E42  FFFF               	dw	65535	; assembler added errata NOP
  8274  000E44  500F               	movf	(___flmul@a+3)^0,w,c
  8275  000E46  0B80               	andlw	128
  8276  000E48  1A14               	xorwf	___flmul@sign^0,f,c
  8277  000E4A  500F               	movf	(___flmul@a+3)^0,w,c
  8278  000E4C  240F               	addwf	(___flmul@a+3)^0,w,c
  8279  000E4E  6E19               	movwf	___flmul@aexp^0,c
  8280  000E50  AE0E               	btfss	(___flmul@a+2)^0,7,c
  8281  000E52  EF2D  F007         	goto	u3361
  8282  000E56  EF30  F007         	goto	u3360
  8283  000E5A                     u3361:
  8284  000E5A  FFFF               	dw	65535	; assembler added errata NOP
  8285  000E5C  EF32  F007         	goto	l3312
  8286  000E60                     u3360:
  8287  000E60  FFFF               	dw	65535	; assembler added errata NOP
  8288  000E62  8019               	bsf	___flmul@aexp^0,0,c
  8289  000E64                     l3312:
  8290  000E64  FFFF               	dw	65535	; assembler added errata NOP
  8291  000E66  5019               	movf	___flmul@aexp^0,w,c
  8292  000E68  B4D8               	btfsc	status,2,c
  8293  000E6A  EF39  F007         	goto	u3371
  8294  000E6E  EF3C  F007         	goto	u3370
  8295  000E72                     u3371:
  8296  000E72  FFFF               	dw	65535	; assembler added errata NOP
  8297  000E74  EF53  F007         	goto	l3320
  8298  000E78                     u3370:
  8299  000E78  FFFF               	dw	65535	; assembler added errata NOP
  8300  000E7A  2819               	incf	___flmul@aexp^0,w,c
  8301  000E7C  A4D8               	btfss	status,2,c
  8302  000E7E  EF43  F007         	goto	u3381
  8303  000E82  EF46  F007         	goto	u3380
  8304  000E86                     u3381:
  8305  000E86  FFFF               	dw	65535	; assembler added errata NOP
  8306  000E88  EF4F  F007         	goto	l3318
  8307  000E8C                     u3380:
  8308  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  8309  000E8E  0E00               	movlw	0
  8310  000E90  6E0C               	movwf	___flmul@a^0,c
  8311  000E92  0E00               	movlw	0
  8312  000E94  6E0D               	movwf	(___flmul@a+1)^0,c
  8313  000E96  0E00               	movlw	0
  8314  000E98  6E0E               	movwf	(___flmul@a+2)^0,c
  8315  000E9A  0E00               	movlw	0
  8316  000E9C  6E0F               	movwf	(___flmul@a+3)^0,c
  8317  000E9E                     l3318:
  8318  000E9E  FFFF               	dw	65535	; assembler added errata NOP
  8319  000EA0  8E0E               	bsf	(___flmul@a+2)^0,7,c
  8320  000EA2  EF5C  F007         	goto	l1057
  8321  000EA6                     l3320:
  8322  000EA6  FFFF               	dw	65535	; assembler added errata NOP
  8323  000EA8  0E00               	movlw	0
  8324  000EAA  6E0C               	movwf	___flmul@a^0,c
  8325  000EAC  0E00               	movlw	0
  8326  000EAE  6E0D               	movwf	(___flmul@a+1)^0,c
  8327  000EB0  0E00               	movlw	0
  8328  000EB2  6E0E               	movwf	(___flmul@a+2)^0,c
  8329  000EB4  0E00               	movlw	0
  8330  000EB6  6E0F               	movwf	(___flmul@a+3)^0,c
  8331  000EB8                     l1057:
  8332  000EB8  FFFF               	dw	65535	; assembler added errata NOP
  8333  000EBA  5019               	movf	___flmul@aexp^0,w,c
  8334  000EBC  B4D8               	btfsc	status,2,c
  8335  000EBE  EF63  F007         	goto	u3391
  8336  000EC2  EF66  F007         	goto	u3390
  8337  000EC6                     u3391:
  8338  000EC6  FFFF               	dw	65535	; assembler added errata NOP
  8339  000EC8  EF70  F007         	goto	l3324
  8340  000ECC                     u3390:
  8341  000ECC  FFFF               	dw	65535	; assembler added errata NOP
  8342  000ECE  501A               	movf	___flmul@bexp^0,w,c
  8343  000ED0  A4D8               	btfss	status,2,c
  8344  000ED2  EF6D  F007         	goto	u3401
  8345  000ED6  EF70  F007         	goto	u3400
  8346  000EDA                     u3401:
  8347  000EDA  FFFF               	dw	65535	; assembler added errata NOP
  8348  000EDC  EF7B  F007         	goto	l3328
  8349  000EE0                     u3400:
  8350  000EE0                     l3324:
  8351  000EE0  FFFF               	dw	65535	; assembler added errata NOP
  8352  000EE2  0E00               	movlw	0
  8353  000EE4  6E08               	movwf	?___flmul^0,c
  8354  000EE6  0E00               	movlw	0
  8355  000EE8  6E09               	movwf	(?___flmul+1)^0,c
  8356  000EEA  0E00               	movlw	0
  8357  000EEC  6E0A               	movwf	(?___flmul+2)^0,c
  8358  000EEE  0E00               	movlw	0
  8359  000EF0  6E0B               	movwf	(?___flmul+3)^0,c
  8360  000EF2  EF35  F009         	goto	l1061
  8361  000EF6                     l3328:
  8362  000EF6  FFFF               	dw	65535	; assembler added errata NOP
  8363  000EF8  500E               	movf	(___flmul@a+2)^0,w,c
  8364  000EFA  0208               	mulwf	___flmul@b^0,c
  8365  000EFC  CFF3 F01F          	movff	prodl,___flmul@temp
  8366  000F00  CFF4 F020          	movff	prodh,___flmul@temp+1
  8367  000F04  501F               	movf	___flmul@temp^0,w,c
  8368  000F06  6E15               	movwf	___flmul@grs^0,c
  8369  000F08  6A16               	clrf	(___flmul@grs+1)^0,c
  8370  000F0A  6A17               	clrf	(___flmul@grs+2)^0,c
  8371  000F0C  6A18               	clrf	(___flmul@grs+3)^0,c
  8372  000F0E  5020               	movf	(___flmul@temp+1)^0,w,c
  8373  000F10  6E1B               	movwf	___flmul@prod^0,c
  8374  000F12  6A1C               	clrf	(___flmul@prod+1)^0,c
  8375  000F14  6A1D               	clrf	(___flmul@prod+2)^0,c
  8376  000F16  6A1E               	clrf	(___flmul@prod+3)^0,c
  8377  000F18  500D               	movf	(___flmul@a+1)^0,w,c
  8378  000F1A  0209               	mulwf	(___flmul@b+1)^0,c
  8379  000F1C  CFF3 F01F          	movff	prodl,___flmul@temp
  8380  000F20  CFF4 F020          	movff	prodh,___flmul@temp+1
  8381  000F24  501F               	movf	___flmul@temp^0,w,c
  8382  000F26  2615               	addwf	___flmul@grs^0,f,c
  8383  000F28  0E00               	movlw	0
  8384  000F2A  2216               	addwfc	(___flmul@grs+1)^0,f,c
  8385  000F2C  2217               	addwfc	(___flmul@grs+2)^0,f,c
  8386  000F2E  2218               	addwfc	(___flmul@grs+3)^0,f,c
  8387  000F30  5020               	movf	(___flmul@temp+1)^0,w,c
  8388  000F32  261B               	addwf	___flmul@prod^0,f,c
  8389  000F34  0E00               	movlw	0
  8390  000F36  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8391  000F38  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8392  000F3A  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8393  000F3C  500C               	movf	___flmul@a^0,w,c
  8394  000F3E  020A               	mulwf	(___flmul@b+2)^0,c
  8395  000F40  CFF3 F01F          	movff	prodl,___flmul@temp
  8396  000F44  CFF4 F020          	movff	prodh,___flmul@temp+1
  8397  000F48  501F               	movf	___flmul@temp^0,w,c
  8398  000F4A  2615               	addwf	___flmul@grs^0,f,c
  8399  000F4C  0E00               	movlw	0
  8400  000F4E  2216               	addwfc	(___flmul@grs+1)^0,f,c
  8401  000F50  2217               	addwfc	(___flmul@grs+2)^0,f,c
  8402  000F52  2218               	addwfc	(___flmul@grs+3)^0,f,c
  8403  000F54  5020               	movf	(___flmul@temp+1)^0,w,c
  8404  000F56  261B               	addwf	___flmul@prod^0,f,c
  8405  000F58  0E00               	movlw	0
  8406  000F5A  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8407  000F5C  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8408  000F5E  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8409  000F60  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  8410  000F64  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  8411  000F68  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  8412  000F6C  6A15               	clrf	___flmul@grs^0,c
  8413  000F6E  500C               	movf	___flmul@a^0,w,c
  8414  000F70  0209               	mulwf	(___flmul@b+1)^0,c
  8415  000F72  CFF3 F01F          	movff	prodl,___flmul@temp
  8416  000F76  CFF4 F020          	movff	prodh,___flmul@temp+1
  8417  000F7A  501F               	movf	___flmul@temp^0,w,c
  8418  000F7C  2615               	addwf	___flmul@grs^0,f,c
  8419  000F7E  5020               	movf	(___flmul@temp+1)^0,w,c
  8420  000F80  2216               	addwfc	(___flmul@grs+1)^0,f,c
  8421  000F82  0E00               	movlw	0
  8422  000F84  2217               	addwfc	(___flmul@grs+2)^0,f,c
  8423  000F86  0E00               	movlw	0
  8424  000F88  2218               	addwfc	(___flmul@grs+3)^0,f,c
  8425  000F8A  500D               	movf	(___flmul@a+1)^0,w,c
  8426  000F8C  0208               	mulwf	___flmul@b^0,c
  8427  000F8E  CFF3 F01F          	movff	prodl,___flmul@temp
  8428  000F92  CFF4 F020          	movff	prodh,___flmul@temp+1
  8429  000F96  501F               	movf	___flmul@temp^0,w,c
  8430  000F98  2615               	addwf	___flmul@grs^0,f,c
  8431  000F9A  5020               	movf	(___flmul@temp+1)^0,w,c
  8432  000F9C  2216               	addwfc	(___flmul@grs+1)^0,f,c
  8433  000F9E  0E00               	movlw	0
  8434  000FA0  2217               	addwfc	(___flmul@grs+2)^0,f,c
  8435  000FA2  0E00               	movlw	0
  8436  000FA4  2218               	addwfc	(___flmul@grs+3)^0,f,c
  8437  000FA6  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  8438  000FAA  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  8439  000FAE  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  8440  000FB2  6A15               	clrf	___flmul@grs^0,c
  8441  000FB4  500C               	movf	___flmul@a^0,w,c
  8442  000FB6  0208               	mulwf	___flmul@b^0,c
  8443  000FB8  CFF3 F01F          	movff	prodl,___flmul@temp
  8444  000FBC  CFF4 F020          	movff	prodh,___flmul@temp+1
  8445  000FC0  501F               	movf	___flmul@temp^0,w,c
  8446  000FC2  2615               	addwf	___flmul@grs^0,f,c
  8447  000FC4  5020               	movf	(___flmul@temp+1)^0,w,c
  8448  000FC6  2216               	addwfc	(___flmul@grs+1)^0,f,c
  8449  000FC8  0E00               	movlw	0
  8450  000FCA  2217               	addwfc	(___flmul@grs+2)^0,f,c
  8451  000FCC  0E00               	movlw	0
  8452  000FCE  2218               	addwfc	(___flmul@grs+3)^0,f,c
  8453  000FD0  500E               	movf	(___flmul@a+2)^0,w,c
  8454  000FD2  0209               	mulwf	(___flmul@b+1)^0,c
  8455  000FD4  CFF3 F01F          	movff	prodl,___flmul@temp
  8456  000FD8  CFF4 F020          	movff	prodh,___flmul@temp+1
  8457  000FDC  501F               	movf	___flmul@temp^0,w,c
  8458  000FDE  261B               	addwf	___flmul@prod^0,f,c
  8459  000FE0  5020               	movf	(___flmul@temp+1)^0,w,c
  8460  000FE2  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8461  000FE4  0E00               	movlw	0
  8462  000FE6  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8463  000FE8  0E00               	movlw	0
  8464  000FEA  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8465  000FEC  500D               	movf	(___flmul@a+1)^0,w,c
  8466  000FEE  020A               	mulwf	(___flmul@b+2)^0,c
  8467  000FF0  CFF3 F01F          	movff	prodl,___flmul@temp
  8468  000FF4  CFF4 F020          	movff	prodh,___flmul@temp+1
  8469  000FF8  501F               	movf	___flmul@temp^0,w,c
  8470  000FFA  261B               	addwf	___flmul@prod^0,f,c
  8471  000FFC  5020               	movf	(___flmul@temp+1)^0,w,c
  8472  000FFE  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8473  001000  0E00               	movlw	0
  8474  001002  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8475  001004  0E00               	movlw	0
  8476  001006  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8477  001008  500E               	movf	(___flmul@a+2)^0,w,c
  8478  00100A  020A               	mulwf	(___flmul@b+2)^0,c
  8479  00100C  CFF3 F01F          	movff	prodl,___flmul@temp
  8480  001010  CFF4 F020          	movff	prodh,___flmul@temp+1
  8481  001014  501F               	movf	___flmul@temp^0,w,c
  8482  001016  6E10               	movwf	??___flmul^0,c
  8483  001018  5020               	movf	(___flmul@temp+1)^0,w,c
  8484  00101A  6E11               	movwf	(??___flmul+1)^0,c
  8485  00101C  6A12               	clrf	(??___flmul+2)^0,c
  8486  00101E  6A13               	clrf	(??___flmul+3)^0,c
  8487  001020  C012  F013         	movff	??___flmul+2,??___flmul+3
  8488  001024  C011  F012         	movff	??___flmul+1,??___flmul+2
  8489  001028  C010  F011         	movff	??___flmul,??___flmul+1
  8490  00102C  6A10               	clrf	??___flmul^0,c
  8491  00102E  5010               	movf	??___flmul^0,w,c
  8492  001030  261B               	addwf	___flmul@prod^0,f,c
  8493  001032  5011               	movf	(??___flmul+1)^0,w,c
  8494  001034  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8495  001036  5012               	movf	(??___flmul+2)^0,w,c
  8496  001038  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8497  00103A  5013               	movf	(??___flmul+3)^0,w,c
  8498  00103C  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8499  00103E  C015  F010         	movff	___flmul@grs,??___flmul
  8500  001042  C016  F011         	movff	___flmul@grs+1,??___flmul+1
  8501  001046  C017  F012         	movff	___flmul@grs+2,??___flmul+2
  8502  00104A  C018  F013         	movff	___flmul@grs+3,??___flmul+3
  8503  00104E  0E19               	movlw	25
  8504  001050  EF30  F008         	goto	u3410
  8505  001054                     u3415:
  8506  001054  FFFF               	dw	65535	; assembler added errata NOP
  8507  001056  90D8               	bcf	status,0,c
  8508  001058  3213               	rrcf	(??___flmul+3)^0,f,c
  8509  00105A  3212               	rrcf	(??___flmul+2)^0,f,c
  8510  00105C  3211               	rrcf	(??___flmul+1)^0,f,c
  8511  00105E  3210               	rrcf	??___flmul^0,f,c
  8512  001060                     u3410:
  8513  001060  FFFF               	dw	65535	; assembler added errata NOP
  8514  001062  2EE8               	decfsz	wreg,f,c
  8515  001064  EF2A  F008         	goto	u3415
  8516  001068  5010               	movf	??___flmul^0,w,c
  8517  00106A  261B               	addwf	___flmul@prod^0,f,c
  8518  00106C  5011               	movf	(??___flmul+1)^0,w,c
  8519  00106E  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8520  001070  5012               	movf	(??___flmul+2)^0,w,c
  8521  001072  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8522  001074  5013               	movf	(??___flmul+3)^0,w,c
  8523  001076  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8524  001078  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  8525  00107C  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  8526  001080  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  8527  001084  6A15               	clrf	___flmul@grs^0,c
  8528  001086  5019               	movf	___flmul@aexp^0,w,c
  8529  001088  C01A  F010         	movff	___flmul@bexp,??___flmul
  8530  00108C  6A11               	clrf	(??___flmul+1)^0,c
  8531  00108E  2610               	addwf	??___flmul^0,f,c
  8532  001090  0E00               	movlw	0
  8533  001092  2211               	addwfc	(??___flmul+1)^0,f,c
  8534  001094  0E82               	movlw	130
  8535  001096  2410               	addwf	??___flmul^0,w,c
  8536  001098  6E1F               	movwf	___flmul@temp^0,c
  8537  00109A  0EFF               	movlw	255
  8538  00109C  2011               	addwfc	(??___flmul+1)^0,w,c
  8539  00109E  6E20               	movwf	(___flmul@temp+1)^0,c
  8540  0010A0  EF6B  F008         	goto	l3376
  8541  0010A4                     l3370:
  8542  0010A4  FFFF               	dw	65535	; assembler added errata NOP
  8543  0010A6  90D8               	bcf	status,0,c
  8544  0010A8  361B               	rlcf	___flmul@prod^0,f,c
  8545  0010AA  361C               	rlcf	(___flmul@prod+1)^0,f,c
  8546  0010AC  361D               	rlcf	(___flmul@prod+2)^0,f,c
  8547  0010AE  361E               	rlcf	(___flmul@prod+3)^0,f,c
  8548  0010B0  AE18               	btfss	(___flmul@grs+3)^0,7,c
  8549  0010B2  EF5D  F008         	goto	u3421
  8550  0010B6  EF60  F008         	goto	u3420
  8551  0010BA                     u3421:
  8552  0010BA  FFFF               	dw	65535	; assembler added errata NOP
  8553  0010BC  EF62  F008         	goto	l1064
  8554  0010C0                     u3420:
  8555  0010C0  FFFF               	dw	65535	; assembler added errata NOP
  8556  0010C2  801B               	bsf	___flmul@prod^0,0,c
  8557  0010C4                     l1064:
  8558  0010C4  FFFF               	dw	65535	; assembler added errata NOP
  8559  0010C6  90D8               	bcf	status,0,c
  8560  0010C8  3615               	rlcf	___flmul@grs^0,f,c
  8561  0010CA  3616               	rlcf	(___flmul@grs+1)^0,f,c
  8562  0010CC  3617               	rlcf	(___flmul@grs+2)^0,f,c
  8563  0010CE  3618               	rlcf	(___flmul@grs+3)^0,f,c
  8564  0010D0  061F               	decf	___flmul@temp^0,f,c
  8565  0010D2  A0D8               	btfss	status,0,c
  8566  0010D4  0620               	decf	(___flmul@temp+1)^0,f,c
  8567  0010D6                     l3376:
  8568  0010D6  FFFF               	dw	65535	; assembler added errata NOP
  8569  0010D8  AE1D               	btfss	(___flmul@prod+2)^0,7,c
  8570  0010DA  EF71  F008         	goto	u3431
  8571  0010DE  EF74  F008         	goto	u3430
  8572  0010E2                     u3431:
  8573  0010E2  FFFF               	dw	65535	; assembler added errata NOP
  8574  0010E4  EF52  F008         	goto	l3370
  8575  0010E8                     u3430:
  8576  0010E8  FFFF               	dw	65535	; assembler added errata NOP
  8577  0010EA  0E00               	movlw	0
  8578  0010EC  6E19               	movwf	___flmul@aexp^0,c
  8579  0010EE  AE18               	btfss	(___flmul@grs+3)^0,7,c
  8580  0010F0  EF7C  F008         	goto	u3441
  8581  0010F4  EF7F  F008         	goto	u3440
  8582  0010F8                     u3441:
  8583  0010F8  FFFF               	dw	65535	; assembler added errata NOP
  8584  0010FA  EFAA  F008         	goto	l1066
  8585  0010FE                     u3440:
  8586  0010FE  FFFF               	dw	65535	; assembler added errata NOP
  8587  001100  0EFF               	movlw	255
  8588  001102  1415               	andwf	___flmul@grs^0,w,c
  8589  001104  6E10               	movwf	??___flmul^0,c
  8590  001106  0EFF               	movlw	255
  8591  001108  1416               	andwf	(___flmul@grs+1)^0,w,c
  8592  00110A  6E11               	movwf	(??___flmul+1)^0,c
  8593  00110C  0EFF               	movlw	255
  8594  00110E  1417               	andwf	(___flmul@grs+2)^0,w,c
  8595  001110  6E12               	movwf	(??___flmul+2)^0,c
  8596  001112  0E7F               	movlw	127
  8597  001114  1418               	andwf	(___flmul@grs+3)^0,w,c
  8598  001116  6E13               	movwf	(??___flmul+3)^0,c
  8599  001118  5010               	movf	??___flmul^0,w,c
  8600  00111A  1011               	iorwf	(??___flmul+1)^0,w,c
  8601  00111C  1012               	iorwf	(??___flmul+2)^0,w,c
  8602  00111E  1013               	iorwf	(??___flmul+3)^0,w,c
  8603  001120  B4D8               	btfsc	status,2,c
  8604  001122  EF95  F008         	goto	u3451
  8605  001126  EF98  F008         	goto	u3450
  8606  00112A                     u3451:
  8607  00112A  FFFF               	dw	65535	; assembler added errata NOP
  8608  00112C  EF9E  F008         	goto	l1067
  8609  001130                     u3450:
  8610  001130  FFFF               	dw	65535	; assembler added errata NOP
  8611  001132                     l3384:
  8612  001132  FFFF               	dw	65535	; assembler added errata NOP
  8613  001134  0E01               	movlw	1
  8614  001136  6E19               	movwf	___flmul@aexp^0,c
  8615  001138  EFAA  F008         	goto	l1066
  8616  00113C                     l1067:
  8617  00113C  FFFF               	dw	65535	; assembler added errata NOP
  8618  00113E  A01B               	btfss	___flmul@prod^0,0,c
  8619  001140  EFA4  F008         	goto	u3461
  8620  001144  EFA7  F008         	goto	u3460
  8621  001148                     u3461:
  8622  001148  FFFF               	dw	65535	; assembler added errata NOP
  8623  00114A  EFAA  F008         	goto	l1066
  8624  00114E                     u3460:
  8625  00114E  FFFF               	dw	65535	; assembler added errata NOP
  8626  001150  EF99  F008         	goto	l3384
  8627  001154                     l1066:
  8628  001154  FFFF               	dw	65535	; assembler added errata NOP
  8629  001156  5019               	movf	___flmul@aexp^0,w,c
  8630  001158  B4D8               	btfsc	status,2,c
  8631  00115A  EFB1  F008         	goto	u3471
  8632  00115E  EFB4  F008         	goto	u3470
  8633  001162                     u3471:
  8634  001162  FFFF               	dw	65535	; assembler added errata NOP
  8635  001164  EFDB  F008         	goto	l3396
  8636  001168                     u3470:
  8637  001168  FFFF               	dw	65535	; assembler added errata NOP
  8638  00116A  0E01               	movlw	1
  8639  00116C  261B               	addwf	___flmul@prod^0,f,c
  8640  00116E  0E00               	movlw	0
  8641  001170  221C               	addwfc	(___flmul@prod+1)^0,f,c
  8642  001172  221D               	addwfc	(___flmul@prod+2)^0,f,c
  8643  001174  221E               	addwfc	(___flmul@prod+3)^0,f,c
  8644  001176  A01E               	btfss	(___flmul@prod+3)^0,0,c
  8645  001178  EFC0  F008         	goto	u3481
  8646  00117C  EFC3  F008         	goto	u3480
  8647  001180                     u3481:
  8648  001180  FFFF               	dw	65535	; assembler added errata NOP
  8649  001182  EFDB  F008         	goto	l3396
  8650  001186                     u3480:
  8651  001186  FFFF               	dw	65535	; assembler added errata NOP
  8652  001188  C01B  F010         	movff	___flmul@prod,??___flmul
  8653  00118C  C01C  F011         	movff	___flmul@prod+1,??___flmul+1
  8654  001190  C01D  F012         	movff	___flmul@prod+2,??___flmul+2
  8655  001194  C01E  F013         	movff	___flmul@prod+3,??___flmul+3
  8656  001198  3413               	rlcf	(??___flmul+3)^0,w,c
  8657  00119A  3213               	rrcf	(??___flmul+3)^0,f,c
  8658  00119C  3212               	rrcf	(??___flmul+2)^0,f,c
  8659  00119E  3211               	rrcf	(??___flmul+1)^0,f,c
  8660  0011A0  3210               	rrcf	??___flmul^0,f,c
  8661  0011A2  C010  F01B         	movff	??___flmul,___flmul@prod
  8662  0011A6  C011  F01C         	movff	??___flmul+1,___flmul@prod+1
  8663  0011AA  C012  F01D         	movff	??___flmul+2,___flmul@prod+2
  8664  0011AE  C013  F01E         	movff	??___flmul+3,___flmul@prod+3
  8665  0011B2  4A1F               	infsnz	___flmul@temp^0,f,c
  8666  0011B4  2A20               	incf	(___flmul@temp+1)^0,f,c
  8667  0011B6                     l3396:
  8668  0011B6  FFFF               	dw	65535	; assembler added errata NOP
  8669  0011B8  BE20               	btfsc	(___flmul@temp+1)^0,7,c
  8670  0011BA  EFE7  F008         	goto	u3491
  8671  0011BE  5020               	movf	(___flmul@temp+1)^0,w,c
  8672  0011C0  E109               	bnz	u3490
  8673  0011C2  281F               	incf	___flmul@temp^0,w,c
  8674  0011C4  A0D8               	btfss	status,0,c
  8675  0011C6  EFE7  F008         	goto	u3491
  8676  0011CA  EFEA  F008         	goto	u3490
  8677  0011CE                     u3491:
  8678  0011CE  FFFF               	dw	65535	; assembler added errata NOP
  8679  0011D0  EFF5  F008         	goto	l3400
  8680  0011D4                     u3490:
  8681  0011D4  FFFF               	dw	65535	; assembler added errata NOP
  8682  0011D6  0E00               	movlw	0
  8683  0011D8  6E1B               	movwf	___flmul@prod^0,c
  8684  0011DA  0E00               	movlw	0
  8685  0011DC  6E1C               	movwf	(___flmul@prod+1)^0,c
  8686  0011DE  0E80               	movlw	128
  8687  0011E0  6E1D               	movwf	(___flmul@prod+2)^0,c
  8688  0011E2  0E7F               	movlw	127
  8689  0011E4  6E1E               	movwf	(___flmul@prod+3)^0,c
  8690  0011E6  EF2A  F009         	goto	l3412
  8691  0011EA                     l3400:
  8692  0011EA  FFFF               	dw	65535	; assembler added errata NOP
  8693  0011EC  BE20               	btfsc	(___flmul@temp+1)^0,7,c
  8694  0011EE  EF04  F009         	goto	u3500
  8695  0011F2  5020               	movf	(___flmul@temp+1)^0,w,c
  8696  0011F4  E106               	bnz	u3501
  8697  0011F6  041F               	decf	___flmul@temp^0,w,c
  8698  0011F8  B0D8               	btfsc	status,0,c
  8699  0011FA  EF01  F009         	goto	u3501
  8700  0011FE  EF04  F009         	goto	u3500
  8701  001202                     u3501:
  8702  001202  FFFF               	dw	65535	; assembler added errata NOP
  8703  001204  EF11  F009         	goto	l1074
  8704  001208                     u3500:
  8705  001208  FFFF               	dw	65535	; assembler added errata NOP
  8706  00120A  0E00               	movlw	0
  8707  00120C  6E1B               	movwf	___flmul@prod^0,c
  8708  00120E  0E00               	movlw	0
  8709  001210  6E1C               	movwf	(___flmul@prod+1)^0,c
  8710  001212  0E00               	movlw	0
  8711  001214  6E1D               	movwf	(___flmul@prod+2)^0,c
  8712  001216  0E00               	movlw	0
  8713  001218  6E1E               	movwf	(___flmul@prod+3)^0,c
  8714  00121A  0E00               	movlw	0
  8715  00121C  6E14               	movwf	___flmul@sign^0,c
  8716  00121E  EF2A  F009         	goto	l3412
  8717  001222                     l1074:
  8718  001222  FFFF               	dw	65535	; assembler added errata NOP
  8719  001224  C01F  F01A         	movff	___flmul@temp,___flmul@bexp
  8720  001228  0EFF               	movlw	255
  8721  00122A  161B               	andwf	___flmul@prod^0,f,c
  8722  00122C  0EFF               	movlw	255
  8723  00122E  161C               	andwf	(___flmul@prod+1)^0,f,c
  8724  001230  0E7F               	movlw	127
  8725  001232  161D               	andwf	(___flmul@prod+2)^0,f,c
  8726  001234  0E00               	movlw	0
  8727  001236  161E               	andwf	(___flmul@prod+3)^0,f,c
  8728  001238  A01A               	btfss	___flmul@bexp^0,0,c
  8729  00123A  EF21  F009         	goto	u3511
  8730  00123E  EF24  F009         	goto	u3510
  8731  001242                     u3511:
  8732  001242  FFFF               	dw	65535	; assembler added errata NOP
  8733  001244  EF26  F009         	goto	l3410
  8734  001248                     u3510:
  8735  001248  FFFF               	dw	65535	; assembler added errata NOP
  8736  00124A  8E1D               	bsf	(___flmul@prod+2)^0,7,c
  8737  00124C                     l3410:
  8738  00124C  FFFF               	dw	65535	; assembler added errata NOP
  8739  00124E  90D8               	bcf	status,0,c
  8740  001250  301A               	rrcf	___flmul@bexp^0,w,c
  8741  001252  6E1E               	movwf	(___flmul@prod+3)^0,c
  8742  001254                     l3412:
  8743  001254  FFFF               	dw	65535	; assembler added errata NOP
  8744  001256  5014               	movf	___flmul@sign^0,w,c
  8745  001258  121E               	iorwf	(___flmul@prod+3)^0,f,c
  8746  00125A  C01B  F008         	movff	___flmul@prod,?___flmul
  8747  00125E  C01C  F009         	movff	___flmul@prod+1,?___flmul+1
  8748  001262  C01D  F00A         	movff	___flmul@prod+2,?___flmul+2
  8749  001266  C01E  F00B         	movff	___flmul@prod+3,?___flmul+3
  8750  00126A                     l1061:
  8751  00126A  FFFF               	dw	65535	; assembler added errata NOP
  8752  00126C  0012               	return		;funcret
  8753  00126E  FFFF               	dw	65535	; errata NOP
  8754  001270                     __end_of___flmul:
  8755                           	callstack 0
  8756                           
  8757 ;; *************** function ___flge *****************
  8758 ;; Defined at:
  8759 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  ff1             4   46[COMRAM] unsigned char 
  8762 ;;  ff2             4   50[COMRAM] unsigned char 
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;		None
  8765 ;; Return value:  Size  Location     Type
  8766 ;;		None               void
  8767 ;; Registers used:
  8768 ;;		wreg, status,2, status,0
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8774 ;;      Params:         8       0       0       0       0       0       0
  8775 ;;      Locals:         0       0       0       0       0       0       0
  8776 ;;      Temps:          4       0       0       0       0       0       0
  8777 ;;      Totals:        12       0       0       0       0       0       0
  8778 ;;Total ram usage:       12 bytes
  8779 ;; Hardware stack levels used: 1
  8780 ;; Hardware stack levels required when called: 1
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_pick_and_place
  8785 ;;		_roundf
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           	psect	text32
  8790  002558                     __ptext32:
  8791                           	callstack 0
  8792  002558                     ___flge:
  8793                           	callstack 0
  8794  002558  FFFF               	dw	65535	; assembler added errata NOP
  8795  00255A  0E00               	movlw	0
  8796  00255C  142F               	andwf	___flge@ff1^0,w,c
  8797  00255E  6E37               	movwf	??___flge^0,c
  8798  002560  0E00               	movlw	0
  8799  002562  1430               	andwf	(___flge@ff1+1)^0,w,c
  8800  002564  6E38               	movwf	(??___flge+1)^0,c
  8801  002566  0E80               	movlw	128
  8802  002568  1431               	andwf	(___flge@ff1+2)^0,w,c
  8803  00256A  6E39               	movwf	(??___flge+2)^0,c
  8804  00256C  0E7F               	movlw	127
  8805  00256E  1432               	andwf	(___flge@ff1+3)^0,w,c
  8806  002570  6E3A               	movwf	(??___flge+3)^0,c
  8807  002572  5037               	movf	??___flge^0,w,c
  8808  002574  1038               	iorwf	(??___flge+1)^0,w,c
  8809  002576  1039               	iorwf	(??___flge+2)^0,w,c
  8810  002578  103A               	iorwf	(??___flge+3)^0,w,c
  8811  00257A  A4D8               	btfss	status,2,c
  8812  00257C  EFC2  F012         	goto	u4951
  8813  002580  EFC5  F012         	goto	u4950
  8814  002584                     u4951:
  8815  002584  FFFF               	dw	65535	; assembler added errata NOP
  8816  002586  EFCE  F012         	goto	l4354
  8817  00258A                     u4950:
  8818  00258A  FFFF               	dw	65535	; assembler added errata NOP
  8819  00258C  0E00               	movlw	0
  8820  00258E  6E2F               	movwf	___flge@ff1^0,c
  8821  002590  0E00               	movlw	0
  8822  002592  6E30               	movwf	(___flge@ff1+1)^0,c
  8823  002594  0E00               	movlw	0
  8824  002596  6E31               	movwf	(___flge@ff1+2)^0,c
  8825  002598  0E00               	movlw	0
  8826  00259A  6E32               	movwf	(___flge@ff1+3)^0,c
  8827  00259C                     l4354:
  8828  00259C  FFFF               	dw	65535	; assembler added errata NOP
  8829  00259E  0E00               	movlw	0
  8830  0025A0  1433               	andwf	___flge@ff2^0,w,c
  8831  0025A2  6E37               	movwf	??___flge^0,c
  8832  0025A4  0E00               	movlw	0
  8833  0025A6  1434               	andwf	(___flge@ff2+1)^0,w,c
  8834  0025A8  6E38               	movwf	(??___flge+1)^0,c
  8835  0025AA  0E80               	movlw	128
  8836  0025AC  1435               	andwf	(___flge@ff2+2)^0,w,c
  8837  0025AE  6E39               	movwf	(??___flge+2)^0,c
  8838  0025B0  0E7F               	movlw	127
  8839  0025B2  1436               	andwf	(___flge@ff2+3)^0,w,c
  8840  0025B4  6E3A               	movwf	(??___flge+3)^0,c
  8841  0025B6  5037               	movf	??___flge^0,w,c
  8842  0025B8  1038               	iorwf	(??___flge+1)^0,w,c
  8843  0025BA  1039               	iorwf	(??___flge+2)^0,w,c
  8844  0025BC  103A               	iorwf	(??___flge+3)^0,w,c
  8845  0025BE  A4D8               	btfss	status,2,c
  8846  0025C0  EFE4  F012         	goto	u4961
  8847  0025C4  EFE7  F012         	goto	u4960
  8848  0025C8                     u4961:
  8849  0025C8  FFFF               	dw	65535	; assembler added errata NOP
  8850  0025CA  EFF0  F012         	goto	l4358
  8851  0025CE                     u4960:
  8852  0025CE  FFFF               	dw	65535	; assembler added errata NOP
  8853  0025D0  0E00               	movlw	0
  8854  0025D2  6E33               	movwf	___flge@ff2^0,c
  8855  0025D4  0E00               	movlw	0
  8856  0025D6  6E34               	movwf	(___flge@ff2+1)^0,c
  8857  0025D8  0E00               	movlw	0
  8858  0025DA  6E35               	movwf	(___flge@ff2+2)^0,c
  8859  0025DC  0E00               	movlw	0
  8860  0025DE  6E36               	movwf	(___flge@ff2+3)^0,c
  8861  0025E0                     l4358:
  8862  0025E0  FFFF               	dw	65535	; assembler added errata NOP
  8863  0025E2  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8864  0025E4  EFF6  F012         	goto	u4971
  8865  0025E8  EFF9  F012         	goto	u4970
  8866  0025EC                     u4971:
  8867  0025EC  FFFF               	dw	65535	; assembler added errata NOP
  8868  0025EE  EF03  F013         	goto	l4362
  8869  0025F2                     u4970:
  8870  0025F2  FFFF               	dw	65535	; assembler added errata NOP
  8871  0025F4  6C2F               	negf	___flge@ff1^0,c
  8872  0025F6  1E30               	comf	(___flge@ff1+1)^0,f,c
  8873  0025F8  B0D8               	btfsc	status,0,c
  8874  0025FA  2A30               	incf	(___flge@ff1+1)^0,f,c
  8875  0025FC  1E31               	comf	(___flge@ff1+2)^0,f,c
  8876  0025FE  B0D8               	btfsc	status,0,c
  8877  002600  2A31               	incf	(___flge@ff1+2)^0,f,c
  8878  002602  0E80               	movlw	128
  8879  002604  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8880  002606                     l4362:
  8881  002606  FFFF               	dw	65535	; assembler added errata NOP
  8882  002608  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8883  00260A  EF09  F013         	goto	u4981
  8884  00260E  EF0C  F013         	goto	u4980
  8885  002612                     u4981:
  8886  002612  FFFF               	dw	65535	; assembler added errata NOP
  8887  002614  EF16  F013         	goto	l708
  8888  002618                     u4980:
  8889  002618  FFFF               	dw	65535	; assembler added errata NOP
  8890  00261A  6C33               	negf	___flge@ff2^0,c
  8891  00261C  1E34               	comf	(___flge@ff2+1)^0,f,c
  8892  00261E  B0D8               	btfsc	status,0,c
  8893  002620  2A34               	incf	(___flge@ff2+1)^0,f,c
  8894  002622  1E35               	comf	(___flge@ff2+2)^0,f,c
  8895  002624  B0D8               	btfsc	status,0,c
  8896  002626  2A35               	incf	(___flge@ff2+2)^0,f,c
  8897  002628  0E80               	movlw	128
  8898  00262A  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8899  00262C                     l708:
  8900  00262C  FFFF               	dw	65535	; assembler added errata NOP
  8901  00262E  0E00               	movlw	0
  8902  002630  1A2F               	xorwf	___flge@ff1^0,f,c
  8903  002632  0E00               	movlw	0
  8904  002634  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8905  002636  0E00               	movlw	0
  8906  002638  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8907  00263A  0E80               	movlw	128
  8908  00263C  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8909  00263E  0E00               	movlw	0
  8910  002640  1A33               	xorwf	___flge@ff2^0,f,c
  8911  002642  0E00               	movlw	0
  8912  002644  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8913  002646  0E00               	movlw	0
  8914  002648  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8915  00264A  0E80               	movlw	128
  8916  00264C  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8917  00264E  5033               	movf	___flge@ff2^0,w,c
  8918  002650  5C2F               	subwf	___flge@ff1^0,w,c
  8919  002652  5034               	movf	(___flge@ff2+1)^0,w,c
  8920  002654  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8921  002656  5035               	movf	(___flge@ff2+2)^0,w,c
  8922  002658  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8923  00265A  5036               	movf	(___flge@ff2+3)^0,w,c
  8924  00265C  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8925  00265E  B0D8               	btfsc	status,0,c
  8926  002660  EF34  F013         	goto	u4991
  8927  002664  EF37  F013         	goto	u4990
  8928  002668                     u4991:
  8929  002668  FFFF               	dw	65535	; assembler added errata NOP
  8930  00266A  EF3B  F013         	goto	l4368
  8931  00266E                     u4990:
  8932  00266E  FFFF               	dw	65535	; assembler added errata NOP
  8933  002670  90D8               	bcf	status,0,c
  8934  002672  EF3D  F013         	goto	l713
  8935  002676                     l4368:
  8936  002676  FFFF               	dw	65535	; assembler added errata NOP
  8937  002678  80D8               	bsf	status,0,c
  8938  00267A                     l713:
  8939  00267A  FFFF               	dw	65535	; assembler added errata NOP
  8940  00267C  0012               	return		;funcret
  8941  00267E  FFFF               	dw	65535	; errata NOP
  8942  002680                     __end_of___flge:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function ___fltol *****************
  8946 ;; Defined at:
  8947 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  f1              4   84[COMRAM] unsigned char 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  exp1            1    1[BANK0 ] unsigned char 
  8952 ;;  sign1           1    0[BANK0 ] unsigned char 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  4   84[COMRAM] long 
  8955 ;; Registers used:
  8956 ;;		wreg, status,2, status,0
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8962 ;;      Params:         4       0       0       0       0       0       0
  8963 ;;      Locals:         0       2       0       0       0       0       0
  8964 ;;      Temps:          4       0       0       0       0       0       0
  8965 ;;      Totals:         8       2       0       0       0       0       0
  8966 ;;Total ram usage:       10 bytes
  8967 ;; Hardware stack levels used: 1
  8968 ;; Hardware stack levels required when called: 1
  8969 ;; This function calls:
  8970 ;;		Nothing
  8971 ;; This function is called by:
  8972 ;;		_init_USART
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text33
  8977  0022EE                     __ptext33:
  8978                           	callstack 0
  8979  0022EE                     ___fltol:
  8980                           	callstack 0
  8981  0022EE  FFFF               	dw	65535	; assembler added errata NOP
  8982  0022F0  3457               	rlcf	(___fltol@f1+2)^0,w,c
  8983  0022F2  3458               	rlcf	(___fltol@f1+3)^0,w,c
  8984  0022F4  0100               	movlb	0	; () banked
  8985  0022F6  6FBF               	movwf	___fltol@exp1& (0+255),b
  8986  0022F8  51BF               	movf	___fltol@exp1& (0+255),w,b
  8987  0022FA  A4D8               	btfss	status,2,c
  8988  0022FC  EF82  F011         	goto	u5621
  8989  002300  EF85  F011         	goto	u5620
  8990  002304                     u5621:
  8991  002304  FFFF               	dw	65535	; assembler added errata NOP
  8992  002306  EF91  F011         	goto	l4632
  8993  00230A                     u5620:
  8994  00230A  FFFF               	dw	65535	; assembler added errata NOP
  8995  00230C                     l4628:
  8996  00230C  FFFF               	dw	65535	; assembler added errata NOP
  8997                           
  8998                           ; BSR set to: 0
  8999  00230E  0E00               	movlw	0
  9000  002310  6E55               	movwf	?___fltol^0,c
  9001  002312  0E00               	movlw	0
  9002  002314  6E56               	movwf	(?___fltol+1)^0,c
  9003  002316  0E00               	movlw	0
  9004  002318  6E57               	movwf	(?___fltol+2)^0,c
  9005  00231A  0E00               	movlw	0
  9006  00231C  6E58               	movwf	(?___fltol+3)^0,c
  9007  00231E  EF10  F012         	goto	l740
  9008  002322                     l4632:
  9009  002322  FFFF               	dw	65535	; assembler added errata NOP
  9010                           
  9011                           ; BSR set to: 0
  9012  002324  C055  F059         	movff	___fltol@f1,??___fltol
  9013  002328  C056  F05A         	movff	___fltol@f1+1,??___fltol+1
  9014  00232C  C057  F05B         	movff	___fltol@f1+2,??___fltol+2
  9015  002330  C058  F05C         	movff	___fltol@f1+3,??___fltol+3
  9016  002334  0E20               	movlw	32
  9017  002336  EFA3  F011         	goto	u5630
  9018  00233A                     u5635:
  9019  00233A  FFFF               	dw	65535	; assembler added errata NOP
  9020  00233C  90D8               	bcf	status,0,c
  9021  00233E  325C               	rrcf	(??___fltol+3)^0,f,c
  9022  002340  325B               	rrcf	(??___fltol+2)^0,f,c
  9023  002342  325A               	rrcf	(??___fltol+1)^0,f,c
  9024  002344  3259               	rrcf	??___fltol^0,f,c
  9025  002346                     u5630:
  9026  002346  FFFF               	dw	65535	; assembler added errata NOP
  9027  002348  2EE8               	decfsz	wreg,f,c
  9028  00234A  EF9D  F011         	goto	u5635
  9029  00234E  5059               	movf	??___fltol^0,w,c
  9030  002350  6FBE               	movwf	___fltol@sign1& (0+255),b
  9031  002352                     
  9032                           ; BSR set to: 0
  9033  002352  8E57               	bsf	(___fltol@f1+2)^0,7,c
  9034  002354                     
  9035                           ; BSR set to: 0
  9036  002354  0EFF               	movlw	255
  9037  002356  1655               	andwf	___fltol@f1^0,f,c
  9038  002358  0EFF               	movlw	255
  9039  00235A  1656               	andwf	(___fltol@f1+1)^0,f,c
  9040  00235C  0EFF               	movlw	255
  9041  00235E  1657               	andwf	(___fltol@f1+2)^0,f,c
  9042  002360  0E00               	movlw	0
  9043  002362  1658               	andwf	(___fltol@f1+3)^0,f,c
  9044  002364                     
  9045                           ; BSR set to: 0
  9046  002364  0E96               	movlw	150
  9047  002366  5FBF               	subwf	___fltol@exp1& (0+255),f,b
  9048  002368                     
  9049                           ; BSR set to: 0
  9050  002368  BFBF               	btfsc	___fltol@exp1& (0+255),7,b
  9051  00236A  EFBC  F011         	goto	u5640
  9052  00236E  EFB9  F011         	goto	u5641
  9053  002372                     u5641:
  9054  002372  FFFF               	dw	65535	; assembler added errata NOP
  9055  002374  EFD6  F011         	goto	l4652
  9056  002378                     u5640:
  9057  002378  FFFF               	dw	65535	; assembler added errata NOP
  9058  00237A                     
  9059                           ; BSR set to: 0
  9060  00237A  51BF               	movf	___fltol@exp1& (0+255),w,b
  9061  00237C  0A80               	xorlw	128
  9062  00237E  0F97               	addlw	151
  9063  002380  B0D8               	btfsc	status,0,c
  9064  002382  EFC5  F011         	goto	u5651
  9065  002386  EFC8  F011         	goto	u5650
  9066  00238A                     u5651:
  9067  00238A  FFFF               	dw	65535	; assembler added errata NOP
  9068  00238C  EFCB  F011         	goto	l4648
  9069  002390                     u5650:
  9070  002390  FFFF               	dw	65535	; assembler added errata NOP
  9071  002392  EF86  F011         	goto	l4628
  9072  002396                     l4648:
  9073  002396  FFFF               	dw	65535	; assembler added errata NOP
  9074                           
  9075                           ; BSR set to: 0
  9076  002398  90D8               	bcf	status,0,c
  9077  00239A  3258               	rrcf	(___fltol@f1+3)^0,f,c
  9078  00239C  3257               	rrcf	(___fltol@f1+2)^0,f,c
  9079  00239E  3256               	rrcf	(___fltol@f1+1)^0,f,c
  9080  0023A0  3255               	rrcf	___fltol@f1^0,f,c
  9081  0023A2                     
  9082                           ; BSR set to: 0
  9083  0023A2  3FBF               	incfsz	___fltol@exp1& (0+255),f,b
  9084  0023A4  EFCB  F011         	goto	l4648
  9085  0023A8  EFF4  F011         	goto	l4662
  9086  0023AC                     l4652:
  9087  0023AC  FFFF               	dw	65535	; assembler added errata NOP
  9088                           
  9089                           ; BSR set to: 0
  9090  0023AE  0E1F               	movlw	31
  9091  0023B0  65BF               	cpfsgt	___fltol@exp1& (0+255),b
  9092  0023B2  EFDD  F011         	goto	u5661
  9093  0023B6  EFE0  F011         	goto	u5660
  9094  0023BA                     u5661:
  9095  0023BA  FFFF               	dw	65535	; assembler added errata NOP
  9096  0023BC  EFEA  F011         	goto	l4660
  9097  0023C0                     u5660:
  9098  0023C0  FFFF               	dw	65535	; assembler added errata NOP
  9099  0023C2  EF86  F011         	goto	l4628
  9100  0023C6                     l4658:
  9101  0023C6  FFFF               	dw	65535	; assembler added errata NOP
  9102                           
  9103                           ; BSR set to: 0
  9104  0023C8  90D8               	bcf	status,0,c
  9105  0023CA  3655               	rlcf	___fltol@f1^0,f,c
  9106  0023CC  3656               	rlcf	(___fltol@f1+1)^0,f,c
  9107  0023CE  3657               	rlcf	(___fltol@f1+2)^0,f,c
  9108  0023D0  3658               	rlcf	(___fltol@f1+3)^0,f,c
  9109  0023D2  07BF               	decf	___fltol@exp1& (0+255),f,b
  9110  0023D4                     l4660:
  9111  0023D4  FFFF               	dw	65535	; assembler added errata NOP
  9112                           
  9113                           ; BSR set to: 0
  9114  0023D6  51BF               	movf	___fltol@exp1& (0+255),w,b
  9115  0023D8  A4D8               	btfss	status,2,c
  9116  0023DA  EFF1  F011         	goto	u5671
  9117  0023DE  EFF4  F011         	goto	u5670
  9118  0023E2                     u5671:
  9119  0023E2  FFFF               	dw	65535	; assembler added errata NOP
  9120  0023E4  EFE3  F011         	goto	l4658
  9121  0023E8                     u5670:
  9122  0023E8                     l4662:
  9123  0023E8  FFFF               	dw	65535	; assembler added errata NOP
  9124                           
  9125                           ; BSR set to: 0
  9126  0023EA  51BE               	movf	___fltol@sign1& (0+255),w,b
  9127  0023EC  B4D8               	btfsc	status,2,c
  9128  0023EE  EFFB  F011         	goto	u5681
  9129  0023F2  EFFE  F011         	goto	u5680
  9130  0023F6                     u5681:
  9131  0023F6  FFFF               	dw	65535	; assembler added errata NOP
  9132  0023F8  EF07  F012         	goto	l4666
  9133  0023FC                     u5680:
  9134  0023FC  FFFF               	dw	65535	; assembler added errata NOP
  9135  0023FE                     
  9136                           ; BSR set to: 0
  9137  0023FE  1E58               	comf	(___fltol@f1+3)^0,f,c
  9138  002400  1E57               	comf	(___fltol@f1+2)^0,f,c
  9139  002402  1E56               	comf	(___fltol@f1+1)^0,f,c
  9140  002404  6C55               	negf	___fltol@f1^0,c
  9141  002406  0E00               	movlw	0
  9142  002408  2256               	addwfc	(___fltol@f1+1)^0,f,c
  9143  00240A  2257               	addwfc	(___fltol@f1+2)^0,f,c
  9144  00240C  2258               	addwfc	(___fltol@f1+3)^0,f,c
  9145  00240E                     l4666:
  9146  00240E  FFFF               	dw	65535	; assembler added errata NOP
  9147                           
  9148                           ; BSR set to: 0
  9149  002410  C055  F055         	movff	___fltol@f1,?___fltol
  9150  002414  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  9151  002418  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  9152  00241C  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  9153  002420                     l740:
  9154  002420  FFFF               	dw	65535	; assembler added errata NOP
  9155                           
  9156                           ; BSR set to: 0
  9157  002422  0012               	return		;funcret
  9158  002424  FFFF               	dw	65535	; errata NOP
  9159  002426                     __end_of___fltol:
  9160                           	callstack 0
  9161                           
  9162 ;; *************** function _init_PORTS *****************
  9163 ;; Defined at:
  9164 ;;		line 9 in file "init_PIC.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;		None
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;		None
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  1    wreg      void 
  9171 ;; Registers used:
  9172 ;;		wreg, status,2
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9178 ;;      Params:         0       0       0       0       0       0       0
  9179 ;;      Locals:         0       0       0       0       0       0       0
  9180 ;;      Temps:          0       0       0       0       0       0       0
  9181 ;;      Totals:         0       0       0       0       0       0       0
  9182 ;;Total ram usage:        0 bytes
  9183 ;; Hardware stack levels used: 1
  9184 ;; Hardware stack levels required when called: 1
  9185 ;; This function calls:
  9186 ;;		Nothing
  9187 ;; This function is called by:
  9188 ;;		_main
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           	psect	text34
  9193  00316C                     __ptext34:
  9194                           	callstack 0
  9195  00316C                     _init_PORTS:
  9196                           	callstack 0
  9197  00316C  FFFF               	dw	65535	; assembler added errata NOP
  9198  00316E                     
  9199                           ;init_PIC.c: 13:     TRISD = 0x00;
  9200  00316E  0E00               	movlw	0
  9201  003170  6E95               	movwf	149,c	;volatile
  9202                           
  9203                           ;init_PIC.c: 14:     TRISA = 0x00;
  9204  003172  0E00               	movlw	0
  9205  003174  6E92               	movwf	146,c	;volatile
  9206                           
  9207                           ;init_PIC.c: 15:     TRISB = 0X0F;
  9208  003176  0E0F               	movlw	15
  9209  003178  6E93               	movwf	147,c	;volatile
  9210                           
  9211                           ;init_PIC.c: 16:     PORTA = 0x00;
  9212  00317A  0E00               	movlw	0
  9213  00317C  6E80               	movwf	128,c	;volatile
  9214                           
  9215                           ;init_PIC.c: 17:     PORTD = 0x00;
  9216  00317E  0E00               	movlw	0
  9217  003180  6E83               	movwf	131,c	;volatile
  9218                           
  9219                           ;init_PIC.c: 22:     LATC = 0;
  9220  003182  0E00               	movlw	0
  9221  003184  6E8B               	movwf	139,c	;volatile
  9222                           
  9223                           ;init_PIC.c: 23:     PORTC = 0;
  9224  003186  0E00               	movlw	0
  9225  003188  6E82               	movwf	130,c	;volatile
  9226  00318A                     
  9227                           ;init_PIC.c: 24:     TRISCbits.RC7 = 1;
  9228  00318A  8E94               	bsf	148,7,c	;volatile
  9229  00318C                     
  9230                           ;init_PIC.c: 25:     TRISCbits.RC6 = 0;
  9231  00318C  9C94               	bcf	148,6,c	;volatile
  9232  00318E  0012               	return		;funcret
  9233  003190  FFFF               	dw	65535	; errata NOP
  9234  003192                     __end_of_init_PORTS:
  9235                           	callstack 0
  9236                           
  9237 ;; *************** function _Rx_char_USART *****************
  9238 ;; Defined at:
  9239 ;;		line 637 in file "main.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;		None
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;  i               2    5[COMRAM] int 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9253 ;;      Params:         0       0       0       0       0       0       0
  9254 ;;      Locals:         2       0       0       0       0       0       0
  9255 ;;      Temps:          5       0       0       0       0       0       0
  9256 ;;      Totals:         7       0       0       0       0       0       0
  9257 ;;Total ram usage:        7 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		Interrupt level 2
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266                           	psect	intcode
  9267  000008                     __pintcode:
  9268                           	callstack 0
  9269  000008                     _Rx_char_USART:
  9270                           	callstack 0
  9271  000008  FFFF               	dw	65535	; assembler added errata NOP
  9272                           
  9273                           ;incstack = 0
  9274  00000A  8278               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9275  00000C  CFD9 F004          	movff	fsr2l,??_Rx_char_USART+3
  9276  000010  CFDA F005          	movff	fsr2h,??_Rx_char_USART+4
  9277  000014                     
  9278                           ;main.c: 639:     int i=0;
  9279  000014  0E00               	movlw	0
  9280  000016  6E07               	movwf	(Rx_char_USART@i+1)^0,c
  9281  000018  0E00               	movlw	0
  9282  00001A  6E06               	movwf	Rx_char_USART@i^0,c
  9283  00001C                     i2l431:
  9284  00001C  FFFF               	dw	65535	; assembler added errata NOP
  9285  00001E  B2F2               	btfsc	242,1,c	;volatile
  9286  000020  EF14  F000         	goto	i2u448_41
  9287  000024  EF17  F000         	goto	i2u448_40
  9288  000028                     i2u448_41:
  9289  000028  FFFF               	dw	65535	; assembler added errata NOP
  9290  00002A  EF20  F000         	goto	i2l3966
  9291  00002E                     i2u448_40:
  9292  00002E  FFFF               	dw	65535	; assembler added errata NOP
  9293  000030  AA9E               	btfss	3998,5,c	;volatile
  9294  000032  EF1D  F000         	goto	i2u449_41
  9295  000036  EF20  F000         	goto	i2u449_40
  9296  00003A                     i2u449_41:
  9297  00003A  FFFF               	dw	65535	; assembler added errata NOP
  9298  00003C  EF0E  F000         	goto	i2l431
  9299  000040                     i2u449_40:
  9300  000040                     i2l3966:
  9301  000040  FFFF               	dw	65535	; assembler added errata NOP
  9302                           
  9303                           ;main.c: 643:         input_str[i]=RCREG;
  9304  000042  0EEB               	movlw	low _input_str
  9305  000044  2406               	addwf	Rx_char_USART@i^0,w,c
  9306  000046  6ED9               	movwf	fsr2l,c
  9307  000048  0E00               	movlw	high _input_str
  9308  00004A  2007               	addwfc	(Rx_char_USART@i+1)^0,w,c
  9309  00004C  6EDA               	movwf	fsr2h,c
  9310  00004E  CFAE FFDF          	movff	4014,indf2	;volatile
  9311  000052                     
  9312                           ;main.c: 644:     }while(INTCONbits.INT0IF==0 && input_str[i++] != '\n');
  9313  000052  B2F2               	btfsc	242,1,c	;volatile
  9314  000054  EF2E  F000         	goto	i2u450_41
  9315  000058  EF31  F000         	goto	i2u450_40
  9316  00005C                     i2u450_41:
  9317  00005C  FFFF               	dw	65535	; assembler added errata NOP
  9318  00005E  EF48  F000         	goto	i2l438
  9319  000062                     i2u450_40:
  9320  000062  FFFF               	dw	65535	; assembler added errata NOP
  9321  000064  5006               	movf	Rx_char_USART@i^0,w,c
  9322  000066  6E01               	movwf	??_Rx_char_USART^0,c
  9323  000068  5007               	movf	(Rx_char_USART@i+1)^0,w,c
  9324  00006A  6E02               	movwf	(??_Rx_char_USART+1)^0,c
  9325  00006C  4A06               	infsnz	Rx_char_USART@i^0,f,c
  9326  00006E  2A07               	incf	(Rx_char_USART@i+1)^0,f,c
  9327  000070  0EEB               	movlw	low _input_str
  9328  000072  2401               	addwf	??_Rx_char_USART^0,w,c
  9329  000074  6ED9               	movwf	fsr2l,c
  9330  000076  0E00               	movlw	high _input_str
  9331  000078  2002               	addwfc	(??_Rx_char_USART+1)^0,w,c
  9332  00007A  6EDA               	movwf	fsr2h,c
  9333  00007C  0E0A               	movlw	10
  9334  00007E  18DE               	xorwf	postinc2,w,c
  9335  000080  A4D8               	btfss	status,2,c
  9336  000082  EF45  F000         	goto	i2u451_41
  9337  000086  EF48  F000         	goto	i2u451_40
  9338  00008A                     i2u451_41:
  9339  00008A  FFFF               	dw	65535	; assembler added errata NOP
  9340  00008C  EF0E  F000         	goto	i2l431
  9341  000090                     i2u451_40:
  9342  000090                     i2l438:
  9343  000090  FFFF               	dw	65535	; assembler added errata NOP
  9344                           
  9345                           ;main.c: 646:     PIR1bits.RCIF = 0;
  9346  000092  9A9E               	bcf	158,5,c	;volatile
  9347  000094                     
  9348                           ;main.c: 647:     New_char_RX = 1;
  9349  000094  0E01               	movlw	1
  9350  000096  6E76               	movwf	_New_char_RX^0,c
  9351  000098                     
  9352                           ;main.c: 648:     State = input_str[0];
  9353  000098  C0EB  F077         	movff	_input_str,_State	;volatile
  9354  00009C                     
  9355                           ;main.c: 649:     if(INTCONbits.INT0IF==1 && INTCONbits.INT0IE==1){
  9356  00009C  A2F2               	btfss	242,1,c	;volatile
  9357  00009E  EF53  F000         	goto	i2u452_41
  9358  0000A2  EF56  F000         	goto	i2u452_40
  9359  0000A6                     i2u452_41:
  9360  0000A6  FFFF               	dw	65535	; assembler added errata NOP
  9361  0000A8  EF66  F000         	goto	i2l440
  9362  0000AC                     i2u452_40:
  9363  0000AC  FFFF               	dw	65535	; assembler added errata NOP
  9364  0000AE  A8F2               	btfss	242,4,c	;volatile
  9365  0000B0  EF5C  F000         	goto	i2u453_41
  9366  0000B4  EF5F  F000         	goto	i2u453_40
  9367  0000B8                     i2u453_41:
  9368  0000B8  FFFF               	dw	65535	; assembler added errata NOP
  9369  0000BA  EF66  F000         	goto	i2l440
  9370  0000BE                     i2u453_40:
  9371  0000BE  FFFF               	dw	65535	; assembler added errata NOP
  9372  0000C0                     
  9373                           ;main.c: 650:         INTCONbits.INT0IF=0;
  9374  0000C0  92F2               	bcf	242,1,c	;volatile
  9375  0000C2                     
  9376                           ;main.c: 652:         input_str[0]="Q";
  9377  0000C2  0EFD               	movlw	low (low STR_18)
  9378  0000C4  0100               	movlb	0	; () banked
  9379  0000C6  6FEB               	movwf	_input_str& (0+255),b	;volatile
  9380                           
  9381                           ;main.c: 653:         stop=1;
  9382  0000C8  0E01               	movlw	1
  9383  0000CA  6E75               	movwf	_stop^0,c
  9384  0000CC                     i2l440:
  9385  0000CC  FFFF               	dw	65535	; assembler added errata NOP
  9386  0000CE  C005  FFDA         	movff	??_Rx_char_USART+4,fsr2h
  9387  0000D2  C004  FFD9         	movff	??_Rx_char_USART+3,fsr2l
  9388  0000D6  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9389  0000D8  0011               	retfie		f
  9390  0000DA  FFFF               	dw	65535	; errata NOP
  9391  0000DC                     __end_of_Rx_char_USART:
  9392                           	callstack 0
  9393                           
  9394                           	psect	rparam
  9395  0000                     
  9396                           	psect	temp
  9397  000078                     btemp:
  9398                           	callstack 0
  9399  000078                     	ds	1
  9400  0000                     int$flags	set	btemp
  9401  0000                     wtemp8	set	btemp+1
  9402  0000                     ttemp5	set	btemp+1
  9403  0000                     ttemp6	set	btemp+4
  9404  0000                     ttemp7	set	btemp+8
  9405                           
  9406                           	psect	idloc
  9407                           
  9408                           ;Config register IDLOC0 @ 0x200000
  9409                           ;	unspecified, using default values
  9410  200000                     	org	2097152
  9411  200000  FF                 	db	255
  9412                           
  9413                           ;Config register IDLOC1 @ 0x200001
  9414                           ;	unspecified, using default values
  9415  200001                     	org	2097153
  9416  200001  FF                 	db	255
  9417                           
  9418                           ;Config register IDLOC2 @ 0x200002
  9419                           ;	unspecified, using default values
  9420  200002                     	org	2097154
  9421  200002  FF                 	db	255
  9422                           
  9423                           ;Config register IDLOC3 @ 0x200003
  9424                           ;	unspecified, using default values
  9425  200003                     	org	2097155
  9426  200003  FF                 	db	255
  9427                           
  9428                           ;Config register IDLOC4 @ 0x200004
  9429                           ;	unspecified, using default values
  9430  200004                     	org	2097156
  9431  200004  FF                 	db	255
  9432                           
  9433                           ;Config register IDLOC5 @ 0x200005
  9434                           ;	unspecified, using default values
  9435  200005                     	org	2097157
  9436  200005  FF                 	db	255
  9437                           
  9438                           ;Config register IDLOC6 @ 0x200006
  9439                           ;	unspecified, using default values
  9440  200006                     	org	2097158
  9441  200006  FF                 	db	255
  9442                           
  9443                           ;Config register IDLOC7 @ 0x200007
  9444                           ;	unspecified, using default values
  9445  200007                     	org	2097159
  9446  200007  FF                 	db	255
  9447                           
  9448                           	psect	config
  9449                           
  9450                           ; Padding undefined space
  9451  300000                     	org	3145728
  9452  300000  FF                 	db	255
  9453                           
  9454                           ;Config register CONFIG1H @ 0x300001
  9455                           ;	Oscillator Selection bits
  9456                           ;	OSC = XT, XT oscillator
  9457                           ;	Oscillator System Clock Switch Enable bit
  9458                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  9459  300001                     	org	3145729
  9460  300001  21                 	db	33
  9461                           
  9462                           ;Config register CONFIG2L @ 0x300002
  9463                           ;	Power-up Timer Enable bit
  9464                           ;	PWRT = OFF, PWRT disabled
  9465                           ;	Brown-out Reset Enable bit
  9466                           ;	BOR = OFF, Brown-out Reset disabled
  9467                           ;	Brown-out Reset Voltage bits
  9468                           ;	BORV = 20, VBOR set to 2.0V
  9469  300002                     	org	3145730
  9470  300002  0D                 	db	13
  9471                           
  9472                           ;Config register CONFIG2H @ 0x300003
  9473                           ;	Watchdog Timer Enable bit
  9474                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9475                           ;	Watchdog Timer Postscale Select bits
  9476                           ;	WDTPS = 128, 1:128
  9477  300003                     	org	3145731
  9478  300003  0E                 	db	14
  9479                           
  9480                           ; Padding undefined space
  9481  300004                     	org	3145732
  9482  300004  FF                 	db	255
  9483                           
  9484                           ;Config register CONFIG3H @ 0x300005
  9485                           ;	CCP2 Mux bit
  9486                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  9487  300005                     	org	3145733
  9488  300005  00                 	db	0
  9489                           
  9490                           ;Config register CONFIG4L @ 0x300006
  9491                           ;	Stack Full/Underflow Reset Enable bit
  9492                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  9493                           ;	Low Voltage ICSP Enable bit
  9494                           ;	LVP = OFF, Low Voltage ICSP disabled
  9495                           ;	Background Debugger Enable bit
  9496                           ;	DEBUG = 0x1, unprogrammed default
  9497  300006                     	org	3145734
  9498  300006  80                 	db	128
  9499                           
  9500                           ; Padding undefined space
  9501  300007                     	org	3145735
  9502  300007  FF                 	db	255
  9503                           
  9504                           ;Config register CONFIG5L @ 0x300008
  9505                           ;	Code Protection bit
  9506                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  9507                           ;	Code Protection bit
  9508                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  9509                           ;	Code Protection bit
  9510                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  9511                           ;	Code Protection bit
  9512                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  9513  300008                     	org	3145736
  9514  300008  0F                 	db	15
  9515                           
  9516                           ;Config register CONFIG5H @ 0x300009
  9517                           ;	Boot Block Code Protection bit
  9518                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  9519                           ;	Data EEPROM Code Protection bit
  9520                           ;	CPD = OFF, Data EEPROM not code protected
  9521  300009                     	org	3145737
  9522  300009  C0                 	db	192
  9523                           
  9524                           ;Config register CONFIG6L @ 0x30000A
  9525                           ;	Write Protection bit
  9526                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  9527                           ;	Write Protection bit
  9528                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  9529                           ;	Write Protection bit
  9530                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  9531                           ;	Write Protection bit
  9532                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  9533  30000A                     	org	3145738
  9534  30000A  0F                 	db	15
  9535                           
  9536                           ;Config register CONFIG6H @ 0x30000B
  9537                           ;	Configuration Register Write Protection bit
  9538                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  9539                           ;	Boot Block Write Protection bit
  9540                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  9541                           ;	Data EEPROM Write Protection bit
  9542                           ;	WRTD = OFF, Data EEPROM not write protected
  9543  30000B                     	org	3145739
  9544  30000B  E0                 	db	224
  9545                           
  9546                           ;Config register CONFIG7L @ 0x30000C
  9547                           ;	Table Read Protection bit
  9548                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  9549                           ;	Table Read Protection bit
  9550                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  9551                           ;	Table Read Protection bit
  9552                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  9553                           ;	Table Read Protection bit
  9554                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  9555  30000C                     	org	3145740
  9556  30000C  0F                 	db	15
  9557                           
  9558                           ;Config register CONFIG7H @ 0x30000D
  9559                           ;	Boot Block Table Read Protection bit
  9560                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  9561  30000D                     	org	3145741
  9562  30000D  40                 	db	64
  9563                           tosu	equ	0xFFF
  9564                           tosh	equ	0xFFE
  9565                           tosl	equ	0xFFD
  9566                           stkptr	equ	0xFFC
  9567                           pclatu	equ	0xFFB
  9568                           pclath	equ	0xFFA
  9569                           pcl	equ	0xFF9
  9570                           tblptru	equ	0xFF8
  9571                           tblptrh	equ	0xFF7
  9572                           tblptrl	equ	0xFF6
  9573                           tablat	equ	0xFF5
  9574                           prodh	equ	0xFF4
  9575                           prodl	equ	0xFF3
  9576                           indf0	equ	0xFEF
  9577                           postinc0	equ	0xFEE
  9578                           postdec0	equ	0xFED
  9579                           preinc0	equ	0xFEC
  9580                           plusw0	equ	0xFEB
  9581                           fsr0h	equ	0xFEA
  9582                           fsr0l	equ	0xFE9
  9583                           wreg	equ	0xFE8
  9584                           indf1	equ	0xFE7
  9585                           postinc1	equ	0xFE6
  9586                           postdec1	equ	0xFE5
  9587                           preinc1	equ	0xFE4
  9588                           plusw1	equ	0xFE3
  9589                           fsr1h	equ	0xFE2
  9590                           fsr1l	equ	0xFE1
  9591                           bsr	equ	0xFE0
  9592                           indf2	equ	0xFDF
  9593                           postinc2	equ	0xFDE
  9594                           postdec2	equ	0xFDD
  9595                           preinc2	equ	0xFDC
  9596                           plusw2	equ	0xFDB
  9597                           fsr2h	equ	0xFDA
  9598                           fsr2l	equ	0xFD9
  9599                           status	equ	0xFD8

Data Sizes:
    Strings     626
    Constant    20
    Data        27
    BSS         87
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     92     119
    BANK0           128     33     121
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strncat@s	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    strncat@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strncat@a	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> input_str(BANK0[10]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 82
		 -> STR_17(CODE[70]), STR_16(CODE[19]), STR_15(CODE[63]), STR_14(CODE[20]), 
		 -> STR_13(CODE[30]), STR_12(CODE[29]), STR_11(CODE[29]), STR_10(CODE[29]), 
		 -> STR_9(CODE[28]), STR_8(CODE[28]), STR_7(CODE[52]), STR_6(CODE[26]), 
		 -> add_component@add_componnt(COMRAM[2]), STR_5(CODE[40]), STR_4(CODE[27]), STR_3(CODE[32]), 
		 -> sequence(BANK0[4]), STR_2(CODE[20]), STR_1(CODE[82]), 


Critical Paths under _main in COMRAM

    _start_up_menu->_pick_and_place
    _return_to_initial->_Twister
    _return_to_initial->_X_axis
    _return_to_initial->_Y_axis
    _return_to_initial->_Z_axis
    _remove_component->_strrchr
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _pick_and_place->___flge
    ___fldiv->___xxtofl
    _Z_axis->_ms_delay
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _change_sequence->_print_string
    _add_component->_atoi
    _strncat->_strlen
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    None.

Critical Paths under _main in BANK0

    _start_up_menu->_pick_and_place
    _init_USART->___fltol

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   56506
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                        5     5      0   45273
                                             60 COMRAM     5     5      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
                  _return_to_initial
 ---------------------------------------------------------------------------------
 (2) _return_to_initial                                    9     9      0   14620
                                             14 COMRAM     9     9      0
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
 ---------------------------------------------------------------------------------
 (2) _remove_component                                     5     5      0    3771
                                             25 COMRAM     5     5      0
                            _memmove
                       _print_string
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4     942
                                             21 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     406
                                             11 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     592
                                             11 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _pick_and_place                                      35    35      0   19224
                                             58 COMRAM     2     2      0
                                              0 BANK0     33    33      0
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
                            ___fldiv
                             ___flge
                           ___xxtofl
                   _fetch_parameters
 ---------------------------------------------------------------------------------
 (3) _fetch_parameters                                     1     1      0     124
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              7 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2183
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Z_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Y_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _X_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Twister                                              1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _ms_delay                                             6     4      2    3556
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                      5     5      0    1829
                                             13 COMRAM     5     5      0
                       _print_string
 ---------------------------------------------------------------------------------
 (2) _add_component                                        2     2      0    4002
                                             29 COMRAM     2     2      0
                               _atoi
                       _print_string
                            _strncat
 ---------------------------------------------------------------------------------
 (3) _strncat                                              8     2      6     712
                                             11 COMRAM     6     0      6
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     318
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2    1762
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    1456
                                             14 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     207
                                              7 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     161
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11233
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10806
                                             58 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             23 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              7 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              7 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              7 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                             46 COMRAM    12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             84 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Rx_char_USART                                        7     7      0      45
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _print_string
       _strncat
         _strlen
     _change_sequence
       _print_string
     _pick_and_place
       _Twister
         _ms_delay
       _X_axis
         _ms_delay
       _Y_axis
         _ms_delay
       _Z_axis
         _ms_delay
       ___fldiv
       ___flge
       ___xxtofl
       _fetch_parameters
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _print_string
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen
     _return_to_initial
       _Twister
       _X_axis
       _Y_axis
       _Z_axis

 _Rx_char_USART (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      79       5       94.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5C      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F0      15        0.0%
DATA                 0      0      F0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 26 00:07:56 2021

                                                     ___fldiv@aexp 002E  
                                                     ___fldiv@bexp 002D  
                                                     ___fldiv@sign 0026  
                                                               l30 31DE  
                                                               l27 318E  
                                                               l54 2CA4  
                                                               l49 3104  
                                                               l58 2D00  
                                              ___wmul@multiplicand 000A  
                                           __size_of_start_up_menu 0178  
                                                              l301 2C5E  
                                                              l215 21B0  
                                                              l224 2D98  
                                                              l320 22E8  
                                                              l400 0806  
                                                              l208 21AE  
                                                              l401 0820  
                                                              l314 2F5C  
                                                              l324 22E8  
                                                              l412 24FC  
                                                              l334 01E2  
                                                              l406 2474  
                                                              l343 028E  
                                                              l280 2A84  
                                                              l273 2786  
                                                              l409 24B8  
                                                              l418 2552  
                                                              l443 3168  
                                                              l259 1C84  
                                                              l371 056E  
                                                              l380 061A  
                                                              l294 2884  
                                                              l287 2984  
                                                              l713 267A  
                                                              l740 2420  
                                                              l708 262C  
                                                              l717 30C4  
                                                              l971 0A6C  
                                                              l980 0DC6  
                                                              l972 0A56  
                                                              l973 0A0C  
                                                              l988 0BB0  
                                                              l997 0CB4  
                                                              l998 0C9C  
                                                ??_init_interrupts 0008  
                                                              wreg 000FE8  
                                                     ___flmul@aexp 0019  
                                                     ___flmul@bexp 001A  
                                                     ___flmul@sign 0014  
                                                     ___flmul@temp 001F  
                                                     ___flmul@prod 001B  
                                                     ___fltol@exp1 00BF  
                                                             l1013 2FFE  
                                                             l1101 1E7A  
                                                             l1030 146E  
                                                             l1200 2E1E  
                                                             l1112 1E00  
                                                             l1025 169C  
                                                             l1105 1D94  
                                                             l1027 14B4  
                                                             l1036 150A  
                                                             l1061 126A  
                                                             l1213 2E9E  
                                                             l1142 202E  
                                                             l1038 159A  
                                                             l1039 1582  
                                                             l1207 313E  
                                                             l1064 10C4  
                                                             l1057 0EB8  
                                                             l1145 2038  
                                                             l1074 1222  
                                                             l1066 1154  
                                                             l1067 113C  
                                                             l1148 3082  
                                                             l1156 2F00  
                                                             l1190 3040  
                                                             l1177 1A82  
                                                             l1169 2B7E  
                                                             l1098 1CE8  
                                                             l3300 0E28  
                                                             l4100 290E  
                                                             l3310 0E62  
                                                             l3302 0E30  
                                                             l4030 2F34  
                                                             l4110 2948  
                                                             l4102 2924  
                                                             l3400 11EA  
                                                             l3320 0EA6  
                                                             l3312 0E64  
                                                             l3304 0E42  
                                                             l4024 2F06  
                                                             l4040 298E  
                                                             l4112 2958  
                                                             l4104 2928  
                                                             l4120 278E  
                                                             l4200 2204  
                                                             l3410 124C  
                                                             l3402 120A  
                                                             l3330 0F04  
                                                             l3322 0ECE  
                                                             l3314 0E7A  
                                                             l3306 0E4A  
                                                             l4026 2F12  
                                                             l4050 29D6  
                                                             l4042 29A2  
                                                             l4114 2964  
                                                             l4106 2934  
                                                             l4130 27D6  
                                                             l4122 27A2  
                                                             l4210 22B4  
                                                             l4202 221C  
                                                             l3404 1228  
                                                             l3412 1254  
                                                             l3340 0F54  
                                                             l3332 0F0E  
                                                             l3324 0EE0  
                                                             l3316 0E8E  
                                                             l3308 0E50  
                                                             l2700 096A  
                                                             l3420 2FCA  
                                                             l2620 3016  
                                                             l4036 2F3C  
                                                             l4028 2F18  
                                                             l4052 29DA  
                                                             l4044 29B6  
                                                             l4060 2A0E  
                                                             l4116 2974  
                                                             l4108 2944  
                                                             l4132 27DA  
                                                             l4124 27B6  
                                                             l4140 280E  
                                                             l4300 14EA  
                                                             l4220 12A8  
                                                             l4212 1272  
                                                             l4204 2250  
                                                             l3414 125A  
                                                             l3406 1238  
                                                             l3350 0F96  
                                                             l3342 0F60  
                                                             l3334 0F24  
                                                             l3318 0E9E  
                                                             l2710 097E  
                                                             l2702 096E  
                                                             l2622 3034  
                                                             l4038 2F42  
                                                             l4070 2A48  
                                                             l4062 2A24  
                                                             l4054 29EA  
                                                             l4046 29BA  
                                                             l4118 297E  
                                                             l4150 2848  
                                                             l4142 2824  
                                                             l4134 27EA  
                                                             l4126 27BA  
                                                             l4310 1534  
                                                             l4302 14F6  
                                                             l4230 12EA  
                                                             l4222 12BC  
                                                             l4214 127E  
                                                             l4206 2268  
                                                             l2472 316E  
                                                             l3408 124A  
                                                             l3360 0FF8  
                                                             l3352 0FA6  
                                                             l3344 0F6E  
                                                             l3336 0F30  
                                                             l3328 0EF6  
                                                             l2800 0C30  
                                                             l2720 0992  
                                                             l2712 0982  
                                                             l2704 0972  
                                                             l2480 31D0  
                                                             l2616 3004  
                                                             l4160 2B88  
                                                             l4072 2A58  
                                                             l4064 2A28  
                                                             l4056 29F6  
                                                             l4048 29C6  
                                                             l4080 288E  
                                                             l4152 2858  
                                                             l4144 2828  
                                                             l4136 27F6  
                                                             l4128 27C6  
                                                             l4320 15BC  
                                                             l4312 1546  
                                                             l4304 1508  
                                                             l4240 1322  
                                                             l4232 12F2  
                                                             l4224 12CC  
                                                             l4216 1290  
                                                             l4400 1DEE  
                                                             l4208 229C  
                                                             l2474 318A  
                                                             l3370 10A4  
                                                             l3362 1014  
                                                             l3354 0FC0  
                                                             l3346 0F7A  
                                                             l3338 0F48  
                                                             l3290 0DDA  
                                                             l3450 30B2  
                                                             l2810 0C66  
                                                             l2802 0C36  
                                                             l2730 09D2  
                                                             l2722 0996  
                                                             l2714 0986  
                                                             l2706 0976  
                                                             l2650 0832  
                                                             l3418 2FBA  
                                                             l2482 31D6  
                                                             l2642 3144  
                                                             l2618 3010  
                                                             l4170 2BD0  
                                                             l4162 2B9C  
                                                             l4074 2A64  
                                                             l4066 2A34  
                                                             l4058 2A06  
                                                             l4090 28D6  
                                                             l4082 28A2  
                                                             l4154 2864  
                                                             l4146 2834  
                                                             l4138 2806  
                                                             l4330 1632  
                                                             l4322 15CE  
                                                             l4314 1578  
                                                             l4306 151C  
                                                             l4250 1364  
                                                             l4242 1336  
                                                             l4234 12F8  
                                                             l4226 12D0  
                                                             l4218 1292  
                                                             l4410 1E54  
                                                             l4402 1E14  
                                                             l2476 318C  
                                                             l3380 10EE  
                                                             l3372 10B0  
                                                             l3364 103E  
                                                             l3356 0FD0  
                                                             l3348 0F8A  
                                                             l3292 0DEC  
                                                             l2820 0CD6  
                                                             l2812 0C78  
                                                             l2804 0C4C  
                                                             l2740 0A32  
                                                             l2732 09F4  
                                                             l2724 099A  
                                                             l2716 098A  
                                                             l2708 097A  
                                                             l2660 0880  
                                                             l2652 0844  
                                                             l4420 16C4  
                                                             l2484 31DA  
                                                             l2644 3160  
                                                             l2900 1EF8  
                                                             l4180 2C0E  
                                                             l4172 2BD4  
                                                             l4164 2BB0  
                                                             l4076 2A74  
                                                             l4068 2A44  
                                                             l4092 28DA  
                                                             l4084 28B6  
                                                             l4156 2874  
                                                             l4148 2844  
                                                             l4340 168C  
                                                             l4332 1652  
                                                             l4324 15F8  
                                                             l4308 1530  
                                                             l4252 1380  
                                                             l4244 1346  
                                                             l4236 130A  
                                                             l4228 12D8  
                                                             l4412 1E66  
                                                             l4404 1E16  
                                                             l4500 0182  
                                                             l4350 255A  
                                                             l3390 1176  
                                                             l3382 1100  
                                                             l3374 10C2  
                                                             l3366 1078  
                                                             l3358 0FEC  
                                                             l3294 0DEE  
                                                             l3446 3088  
                                                             l2830 0D50  
                                                             l2822 0CE8  
                                                             l2814 0C92  
                                                             l2806 0C4E  
                                                             l2750 0A94  
                                                             l2742 0A46  
                                                             l2734 0A04  
                                                             l2718 098E  
                                                             l2726 099E  
                                                             l2670 08BC  
                                                             l2662 0884  
                                                             l2654 0846  
                                                             l4430 17B4  
                                                             l4422 1714  
                                                             l2486 31DC  
                                                             l2910 1F28  
                                                             l2902 1EFC  
                                                             l3710 2D2A  
                                                             l4190 2C42  
                                                             l4182 2C12  
                                                             l4174 2BE4  
                                                             l4166 2BB4  
                                                             l4078 2A7E  
                                                             l4094 28EA  
                                                             l4086 28BA  
                                                             l4158 287E  
                                                             l4342 1690  
                                                             l4334 166E  
                                                             l4318 15B0  
                                                             l4326 15FC  
                                                             l4270 13DC  
                                                             l4254 1390  
                                                             l4262 13B2  
                                                             l4246 134A  
                                                             l4238 130C  
                                                             l4414 1E68  
                                                             l4406 1E1C  
                                                             l4510 0218  
                                                             l4502 0188  
                                                             l4360 25F4  
                                                             l4352 258C  
                                                             l3392 1188  
                                                             l3384 1132  
                                                             l3376 10D6  
                                                             l3368 1086  
                                                             l3296 0E04  
                                                             l3288 0DCE  
                                                             l3448 30A2  
                                                             l2840 0D98  
                                                             l2832 0D76  
                                                             l2824 0D26  
                                                             l2760 0ADE  
                                                             l2808 0C60  
                                                             l2744 0A48  
                                                             l2736 0A20  
                                                             l2728 09A4  
                                                             l2680 08F0  
                                                             l2672 08BE  
                                                             l2656 085C  
                                                             l2664 088C  
                                                             l2648 0826  
                                                             l4440 1964  
                                                             l4424 1728  
                                                             l2912 1F32  
                                                             l3720 1A8A  
                                                             l3712 2D32  
                                                             l4192 2C4E  
                                                             l4184 2C1E  
                                                             l4176 2BF0  
                                                             l4168 2BC0  
                                                             l4096 28F6  
                                                             l4088 28C6  
                                                             l4336 1674  
                                                             l4328 161C  
                                                             l4280 1430  
                                                             l4272 13F8  
                                                             l4264 13C8  
                                                             l4256 1398  
                                                             l4248 1352  
                                                             l4408 1E40  
                                                             l4600 06B8  
                                                             l4520 0280  
                                                             l4512 0226  
                                                             l4504 01B4  
                                                             l3800 26B4  
                                                             l4362 2606  
                                                             l4354 259C  
                                                             l3394 11B2  
                                                             l3378 10EA  
                                                             l3298 0E18  
                                                             l2842 0DA0  
                                                             l2834 0D7A  
                                                             l2818 0CCA  
                                                             l2826 0D28  
                                                             l2770 0B12  
                                                             l2762 0AEA  
                                                             l2754 0AA8  
                                                             l2746 0A54  
                                                             l2738 0A2C  
                                                             l2690 0932  
                                                             l2682 0904  
                                                             l2674 08C6  
                                                             l2666 089E  
                                                             l2658 0870  
                                                             l4442 19D0  
                                                             l4434 17EC  
                                                             l4426 176E  
                                                             l4418 16A4  
                                                             l2850 2EA4  
                                                             l2922 1FE6  
                                                             l2914 1F68  
                                                             l2906 1F04  
                                                             l3730 1AE6  
                                                             l3722 1A92  
                                                             l3714 2D48  
                                                             l4186 2C2E  
                                                             l4178 2BF8  
                                                             l4194 2C58  
                                                             l4098 2906  
                                                             l4338 1686  
                                                             l4290 149E  
                                                             l4282 1446  
                                                             l4274 1408  
                                                             l4266 13C8  
                                                             l4258 139E  
                                                             l4610 077C  
                                                             l4602 06C6  
                                                             l4530 02E0  
                                                             l4522 02B2  
                                                             l4514 022E  
                                                             l4506 01D4  
                                                             l3810 26EC  
                                                             l3802 26B8  
                                                             l4364 261A  
                                                             l4356 25D0  
                                                             l3388 116A  
                                                             l3396 11B6  
                                                             l2844 0DB2  
                                                             l2836 0D8E  
                                                             l2828 0D3E  
                                                             l2780 0B8E  
                                                             l2764 0AF0  
                                                             l2756 0ABA  
                                                             l2748 0A80  
                                                             l2772 0B18  
                                                             l2692 094A  
                                                             l2684 0914  
                                                             l2676 08D8  
                                                             l2668 08A6  
                                                             l4444 1A06  
                                                             l4436 18C0  
                                                             l4428 1792  
                                                             l2852 2EAA  
                                                             l2924 1FFC  
                                                             l2908 1F1E  
                                                             l2940 2DD2  
                                                             l2932 2D9E  
                                                             l3740 1B24  
                                                             l3732 1AEA  
                                                             l3724 1AB6  
                                                             l3716 2D66  
                                                             l3708 2D06  
                                                             l4188 2C32  
                                                             l4292 14A0  
                                                             l4284 145A  
                                                             l4276 1418  
                                                             l4380 1D16  
                                                             l4372 1C8C  
                                                             l4196 21BA  
                                                             l4620 07CC  
                                                             l4612 0782  
                                                             l4604 0752  
                                                             l4540 03D8  
                                                             l4532 030C  
                                                             l4524 02C4  
                                                             l4516 0234  
                                                             l4508 0206  
                                                             l3812 2704  
                                                             l3804 26D2  
                                                             l4460 2450  
                                                             l4452 2428  
                                                             l4700 20CE  
                                                             l4366 2670  
                                                             l4358 25E0  
                                                             l3398 11D6  
                                                             l2846 0DB4  
                                                             l2838 0D94  
                                                             l2790 0BF4  
                                                             l2774 0B44  
                                                             l2782 0B9E  
                                                             l2766 0B04  
                                                             l2758 0ACC  
                                                             l2694 095C  
                                                             l2686 0918  
                                                             l2678 08DA  
                                                             l4446 1A4C  
                                                             l4438 192C  
                                                             l2862 3044  
                                                             l2854 2EC2  
                                                             l2926 2012  
                                                             l2918 1FA2  
                                                             l2950 2E1A  
                                                             l2942 2DD6  
                                                             l2934 2D9E  
                                                             l3750 1B6A  
                                                             l3742 1B30  
                                                             l3734 1AF6  
                                                             l3726 1ACC  
                                                             l3718 2D94  
                                                             l4294 14B0  
                                                             l4286 146C  
                                                             l4278 1428  
                                                             l4390 1D7A  
                                                             l4374 1CA0  
                                                             l4198 21D0  
                                                             l4622 07D2  
                                                             l4614 07A4  
                                                             l4606 0764  
                                                             l4550 042A  
                                                             l4542 03E8  
                                                             l4534 032C  
                                                             l4526 02D2  
                                                             l4518 0260  
                                                             l2870 2E36  
                                                             l3814 2710  
                                                             l3822 2758  
                                                             l4470 24C0  
                                                             l4462 247C  
                                                             l4454 2430  
                                                             l4710 2146  
                                                             l4702 20E2  
                                                             l4640 2368  
                                                             l4632 2322  
                                                             l4368 2676  
                                                             l2792 0C00  
                                                             l2784 0BCC  
                                                             l2776 0B78  
                                                             l2768 0B06  
                                                             l2696 0960  
                                                             l2688 0920  
                                                             l4448 1A70  
                                                             l2856 2EF4  
                                                             l2936 2DB6  
                                                             l2944 2DDA  
                                                             l3760 1BBA  
                                                             l3752 1B80  
                                                             l3744 1B46  
                                                             l3736 1B0C  
                                                             l3728 1AD0  
                                                             l4296 14CA  
                                                             l4288 147A  
                                                             l4392 1D7E  
                                                             l4384 1D2A  
                                                             l4376 1CB2  
                                                             l4624 07F4  
                                                             l4616 07B6  
                                                             l4608 0774  
                                                             l4560 047A  
                                                             l4552 0438  
                                                             l4544 03F0  
                                                             l4536 033A  
                                                             l4528 02DA  
                                                             l2960 2AB6  
                                                             l2872 2E66  
                                                             l3824 2766  
                                                             l3816 2744  
                                                             l4480 2510  
                                                             l4472 24CC  
                                                             l4464 2488  
                                                             l4456 2444  
                                                             l4800 217E  
                                                             l4712 2150  
                                                             l4704 210E  
                                                             l4650 23A2  
                                                             l4642 237A  
                                                             l4634 2352  
                                                             l4626 22F0  
                                                             l2794 0C12  
                                                             l2786 0BE0  
                                                             l2778 0B7A  
                                                             l2698 0966  
                                                             l2858 2EF8  
                                                             l4802 1F50  
                                                             l2890 1E82  
                                                             l2882 2C66  
                                                             l2946 2DF2  
                                                             l2938 2DBE  
                                                             l3770 1C08  
                                                             l3762 1BCE  
                                                             l3754 1B94  
                                                             l3746 1B5A  
                                                             l3738 1B20  
                                                             l4298 14E4  
                                                             l4394 1D8A  
                                                             l4386 1D34  
                                                             l4378 1CFA  
                                                             l4618 07C4  
                                                             l4570 0540  
                                                             l4562 04FA  
                                                             l4554 0440  
                                                             l4546 03F6  
                                                             l4538 03C6  
                                                             l4490 00EE  
                                                             l2970 2B46  
                                                             l2962 2ADC  
                                                             l2866 2E24  
                                                             l2954 310A  
                                                             l3818 2750  
                                                             l3826 2780  
                                                             l4482 2518  
                                                             l4474 24D4  
                                                             l4466 2490  
                                                             l4458 244C  
                                                             l4714 215A  
                                                             l4706 2124  
                                                             l4730 31A0  
                                                             l4660 23D4  
                                                             l4652 23AC  
                                                             l4636 2354  
                                                             l4628 230C  
                                                             l2796 0C14  
                                                             l2892 1E96  
                                                             l2884 2C72  
                                                             l2948 2E0C  
                                                             l3772 1C0C  
                                                             l3764 1BD2  
                                                             l3756 1B98  
                                                             l3748 1B5E  
                                                             l4396 1DCC  
                                                             l4388 1D42  
                                                             l4580 05BA  
                                                             l4572 0560  
                                                             l4564 0506  
                                                             l4556 0446  
                                                             l4548 0418  
                                                             l4492 0118  
                                                             l2972 2B5C  
                                                             l2964 2AEC  
                                                             l2876 2E76  
                                                             l2868 2E2C  
                                                             l4484 251C  
                                                             l4476 24D8  
                                                             l4468 2494  
                                                             l4708 213C  
                                                             l4732 31A2  
                                                             l4724 3192  
                                                             l4662 23E8  
                                                             l4638 2364  
                                                             l2798 0C28  
                                                             l4670 30CA  
                                                             l2894 1E9C  
                                                             l2886 2CB8  
                                                             l3790 1C74  
                                                             l3774 1C18  
                                                             l3766 1BDE  
                                                             l3758 1BA4  
                                                             l4398 1DDA  
                                                             l4590 0650  
                                                             l4582 05C0  
                                                             l4574 0592  
                                                             l4566 050E  
                                                             l4558 0468  
                                                             l4494 0142  
                                                             l2974 2B60  
                                                             l2966 2B0E  
                                                             l2958 2A8C  
                                                             l2878 2E96  
                                                             l4486 2540  
                                                             l4478 2504  
                                                             l4718 2168  
                                                             l4734 31A8  
                                                             l4726 3198  
                                                             l4664 23FE  
                                                             l4648 2396  
                                                             l4680 30FE  
                                                             l4672 30F6  
                                                             l2896 1EA2  
                                                             l2888 2CBC  
                                                             l3792 1C80  
                                                             l3784 1C48  
                                                             l3776 1C2E  
                                                             l3768 1BF4  
                                                             l4592 065E  
                                                             l4584 05EC  
                                                             l4576 05A4  
                                                             l4568 0514  
                                                             l4496 016C  
                                                             l4488 00E6  
                                                             l2976 2B64  
                                                             l2968 2B2E  
                                                             l4728 319C  
                                                             l4666 240E  
                                                             l4658 23C6  
                                                             l4682 3100  
                                                             l4674 30F8  
                                                             l2898 1EC0  
                                                             l3786 1C4C  
                                                             l3778 1C42  
                                                             l4594 0666  
                                                             l4586 060C  
                                                             l4578 05B2  
                                                             l4498 017A  
                                                             l3794 2682  
                                                             l4690 2062  
                                                             l4684 3102  
                                                             l4676 30FA  
                                                             l3788 1C68  
                                                             l4596 066C  
                                                             l4588 063E  
                                                             l3796 269A  
                                                             l4692 206A  
                                                             l4678 30FC  
                                                             l4598 0698  
                                                             l3798 26B0  
                                                             l4694 2090  
                                                             l4686 2040  
                                                             l4696 2098  
                                                             l4688 204C  
                                                             l4698 20BA  
                                                             STR_1 7D8D  
                                                             STR_2 7FD6  
                                                             STR_3 7EC0  
                                                             STR_4 7F8D  
                                                             STR_5 7E98  
                                                             STR_6 7FA8  
                                                             STR_7 7E64  
                                                             STR_8 7F55  
                                                             STR_9 7F71  
                                                             u2310 0842  
                                                             u2311 083C  
                                                             _LATC 000F8B  
                                                             u2400 09D0  
                                                             u2320 085A  
                                                             u2401 09CA  
                                                             u2321 0854  
                                                             u2410 09EC  
                                                             u2330 086E  
                                                             u2411 09E4  
                                                             u2331 0868  
                                                             u2500 0B02  
                                                             u2420 09F0  
                                                             u2340 08BA  
                                                             u2501 0AFC  
                                                             u2341 08B4  
                                                             u2510 0B42  
                                                             u2430 0A1E  
                                                             u2350 08D6  
                                                             u2511 0B3C  
                                                             u2431 0A18  
                                                             u2351 08D0  
                                                             u3400 0EE0  
                                                             u2600 0C90  
                                                             u2520 0B8C  
                                                             u2440 0A44  
                                                             u2360 08EE  
                                                             u2280 3032  
                                                             u4200 2D46  
                                                             u5000 1C9E  
                                                             u3401 0EDA  
                                                             u2601 0C8A  
                                                             u2521 0B86  
                                                             u2441 0A3E  
                                                             u2361 08E8  
                                                             u2281 302C  
                                                             u4201 2D40  
                                                             u5001 1C98  
                                                             u3410 1060  
                                                             u3330 0DEA  
                                                             u2610 0CAE  
                                                             u2530 0BCA  
                                                             u2450 0A6C  
                                                             u2370 0902  
                                                             u4210 2D92  
                                                             u5010 1CB0  
                                                             u3331 0DE4  
                                                             u2611 0CA8  
                                                             u2531 0BC4  
                                                             u2451 0A66  
                                                             u2371 08FC  
                                                             u4211 2D8C  
                                                             u5011 1CAA  
                                                             u3500 1208  
                                                             u3420 10C0  
                                                             u3340 0E02  
                                                             u2620 0CC8  
                                                             u2540 0BDE  
                                                             u2460 0A7E  
                                                             u2380 0948  
                                                             u5100 16E6  
                                                             u2700 2EC0  
                                                             u4220 1ACA  
                                                             u5020 1D14  
                                                             u4300 26AE  
                                                             u3501 1202  
                                                             u3421 10BA  
                                                             u3341 0DFC  
                                                             u2621 0CC2  
                                                             u2541 0BD8  
                                                             u2461 0A78  
                                                             u2381 0942  
                                                             u2701 2EBA  
                                                             u4221 1AC4  
                                                             u5021 1D0E  
                                                             u4301 26A8  
                                                             u3510 1248  
                                                             u3430 10E8  
                                                             u3350 0E16  
                                                             u2630 0CE6  
                                                             u2550 0C10  
                                                             u2470 0A92  
                                                             u2390 095A  
                                                             u5110 1712  
                                                             u2710 2EF2  
                                                             u4230 1AE4  
                                                             u5030 1D74  
                                                             u4310 26E6  
                                                             u3511 1242  
                                                             u3431 10E2  
                                                             u3415 1054  
                                                             u3351 0E10  
                                                             u2631 0CE0  
                                                             u2551 0C0A  
                                                             u2471 0A8C  
                                                             u2391 0954  
                                                             u5111 170C  
                                                             u2711 2EEC  
                                                             u4231 1ADE  
                                                             u5031 1D6E  
                                                             u4311 26E0  
                                                             u3440 10FE  
                                                             u3360 0E60  
                                                             u2640 0D24  
                                                             u2560 0C26  
                                                             u2480 0ACA  
                                                             u5120 174C  
                                                             u2720 3078  
                                                             u2800 1EBE  
                                                             u4240 1B0A  
                                                             u5040 1DC6  
                                                             u4320 2702  
                                                             u5200 24B6  
                                                             u3441 10F8  
                                                             u3361 0E5A  
                                                             u2641 0D1E  
                                                             u2561 0C20  
                                                             u2481 0AC4  
                                                             u5105 16DA  
                                                             u2721 3070  
                                                             u2801 1EB8  
                                                             u4241 1B04  
                                                             u5041 1DC0  
                                                             u4321 26FC  
                                                             u5201 24B0  
                                                             u3450 1130  
                                                             u3370 0E78  
                                                             u2650 0D3C  
                                                             u2570 0C4A  
                                                             u2490 0ADC  
                                                             u5130 176C  
                                                             u2730 307C  
                                                             u2810 1EF6  
                                                             u4250 1B44  
                                                             u5050 1DEC  
                                                             u4330 277A  
                                                             u5210 24FA  
                                                             u3451 112A  
                                                             u3371 0E72  
                                                             u2651 0D36  
                                                             u2571 0C44  
                                                             u2491 0AD6  
                                                             u5131 1766  
                                                             u2811 1EF0  
                                                             u4251 1B3E  
                                                             u5051 1DE6  
                                                             u4331 2774  
                                                             u5211 24F4  
                                                             u3460 114E  
                                                             u3380 0E8C  
                                                             u2660 0D50  
                                                             u2580 0C60  
                                                             u5140 17B2  
                                                             u2820 1F18  
                                                             u4260 1B7E  
                                                             u5060 1E00  
                                                             u5300 01B2  
                                                             u2900 2ADA  
                                                             u2740 2E64  
                                                             u5220 253E  
                                                             u3461 1148  
                                                             u3381 0E86  
                                                             u2661 0D4A  
                                                             u2581 0C5A  
                                                             u5141 17AC  
                                                             u5125 1740  
                                                             u2821 1F12  
                                                             u4261 1B78  
                                                             u5061 1DFA  
                                                             u5301 01AC  
                                                             u2901 2AD4  
                                                             u2741 2E5E  
                                                             u5221 2538  
                                                             u3470 1168  
                                                             u3390 0ECC  
                                                             u2670 0D74  
                                                             u2590 0C76  
                                                             u5150 18BE  
                                                             u2830 1FDC  
                                                             u4270 1BB8  
                                                             u5070 1E12  
                                                             u5310 0204  
                                                             u2910 2B28  
                                                             u2750 2E94  
                                                             u5230 2552  
                                                             u3471 1162  
                                                             u3391 0EC6  
                                                             u2671 0D6E  
                                                             u2591 0C70  
                                                             u5151 18B8  
                                                             u2831 1FD4  
                                                             u4271 1BB2  
                                                             u5071 1E0C  
                                                             u5311 01FE  
                                                             u2911 2B22  
                                                             u2751 2E8E  
                                                             u5231 254C  
                                                             u3480 1186  
                                                             u2680 0D8C  
                                                             u5160 1962  
                                                             u2840 1FE0  
                                                             u2760 2CA2  
                                                             u4280 1BF2  
                                                             u4600 28B4  
                                                             u5080 1E52  
                                                             u5400 042A  
                                                             u5320 0218  
                                                             u5240 0110  
                                                             u2920 2B44  
                                                             u3481 1180  
                                                             u2681 0D86  
                                                             u5161 195C  
                                                             u4281 1BEC  
                                                             u4601 28AE  
                                                             u5081 1E4C  
                                                             u5401 0424  
                                                             u5321 0212  
                                                             u5241 0108  
                                                             u2921 2B3E  
                                                             u3490 11D4  
                                                             u3570 30A0  
                                                             u2690 0DB0  
                                                             u5170 1A2A  
                                                             u2850 1FFA  
                                                             u2770 2CB6  
                                                             u4290 1C2C  
                                                             u4610 2922  
                                                             u5090 1E64  
                                                             u5410 0466  
                                                             u5330 025E  
                                                             u5250 0114  
                                                             u2930 2B7E  
                                                             u3491 11CE  
                                                             u3571 309A  
                                                             u2691 0DAA  
                                                             u2851 1FF4  
                                                             u2771 2CB0  
                                                             u4291 1C26  
                                                             u4611 291C  
                                                             u5091 1E5E  
                                                             u5411 0460  
                                                             u5331 0258  
                                                             u2931 2B78  
                                                             u5180 1A4A  
                                                             u2860 2010  
                                                             u2780 2CEC  
                                                             u4540 2F32  
                                                             u4620 27A0  
                                                             u4700 2266  
                                                             u5500 0590  
                                                             u5420 047A  
                                                             u5340 02B0  
                                                             u5260 013A  
                                                             u5181 1A44  
                                                             u2861 200A  
                                                             u4541 2F2C  
                                                             u4621 279A  
                                                             u4701 2260  
                                                             u5501 058A  
                                                             u5421 0474  
                                                             u5341 02AA  
                                                             u5261 0132  
                                                             u2790 2CFE  
                                                             u2870 2DF0  
                                                             u4550 2F5A  
                                                             u4630 27B4  
                                                             u4710 22B2  
                                                             u5510 05A4  
                                                             u5430 049E  
                                                             u5350 02C4  
                                                             u5270 013E  
                                                             u5190 2472  
                                                             u5175 1A1E  
                                                             u2791 2CF8  
                                                             u2767 2C98  
                                                             u2871 2DEA  
                                                             u4551 2F54  
                                                             u4631 27AE  
                                                             u4711 22AC  
                                                             u5511 059E  
                                                             u5431 0496  
                                                             u5351 02BE  
                                                             u5191 246C  
                                                             u2880 2E0C  
                                                             u4560 29A0  
                                                             u4640 2822  
                                                             u4800 1444  
                                                             u4720 128E  
                                                             u5600 07F2  
                                                             u5520 05EA  
                                                             u5440 04A2  
                                                             u5360 030A  
                                                             u5280 0164  
                                                             u2881 2E06  
                                                             u4561 299A  
                                                             u4641 281C  
                                                             u4801 143E  
                                                             u4721 1288  
                                                             u5601 07EC  
                                                             u5521 05E4  
                                                             u5361 0304  
                                                             u5281 015C  
                                                             u4650 2B9A  
                                                             u4570 29B4  
                                                             u4810 146A  
                                                             u4730 12A6  
                                                             u5610 0806  
                                                             u5530 063C  
                                                             u5450 04C8  
                                                             u5370 03C4  
                                                             u5290 0168  
                                                             u2890 2AB4  
                                                             u2787 2CE2  
                                                             u4651 2B94  
                                                             u4571 29AE  
                                                             u4811 1464  
                                                             u4731 12A0  
                                                             u5611 0800  
                                                             u5531 0636  
                                                             u5451 04C0  
                                                             u5371 03BE  
                                                             u2891 2AAE  
                                                             u5620 230A  
                                                             u4660 2BAE  
                                                             u4580 2A22  
                                                             u4900 15AE  
                                                             u4820 149C  
                                                             u4740 12BA  
                                                             u5540 0650  
                                                             u5460 04CC  
                                                             u5380 03D8  
                                                             u5700 20E0  
                                                             _RCIF 007CF5  
                                                             u5621 2304  
                                                             u4661 2BA8  
                                                             u4581 2A1C  
                                                             u4901 15A8  
                                                             u4821 1496  
                                                             u4741 12B4  
                                                             u5541 064A  
                                                             u5381 03D2  
                                                             u5701 20DA  
                                                             u5630 2346  
                                                             u4670 2C0C  
                                                             u4590 28A0  
                                                             u4910 15CC  
                                                             u4830 14C8  
                                                             u4750 1308  
                                                             u5550 0696  
                                                             u5470 04F2  
                                                             u5390 0416  
                                                             u5710 210E  
                                                             u4671 2C06  
                                                             u4591 289A  
                                                             u4911 15C6  
                                                             u4831 14C2  
                                                             u4751 1302  
                                                             u5551 0690  
                                                             u5471 04EA  
                                                             u5391 0410  
                                                             u5711 2108  
                                                             u5640 2378  
                                                             u4920 161A  
                                                             u4840 14E2  
                                                             u4760 1320  
                                                             u4680 21CE  
                                                             u5560 0750  
                                                             u5480 04F6  
                                                             u5720 2122  
                                                             u5641 2372  
                                                             u4921 1614  
                                                             u4841 14DC  
                                                             u4761 131A  
                                                             u4681 21C8  
                                                             u5561 074A  
                                                             u5721 211C  
                                                             u5650 2390  
                                                             u4930 1650  
                                                             u4850 1506  
                                                             u4770 1334  
                                                             u4690 221A  
                                                             u5570 0764  
                                                             u5490 053E  
                                                             u5730 2136  
                                                             u5651 238A  
                                                             u5635 233A  
                                                             u4931 164A  
                                                             u4851 1500  
                                                             u4771 132E  
                                                             u4691 2214  
                                                             u5571 075E  
                                                             u5491 0538  
                                                             u5731 2130  
                                                             u5660 23C0  
                                                             u4940 1684  
                                                             u4860 152E  
                                                             u4780 137E  
                                                             u5580 07A2  
                                                             u5661 23BA  
                                                             u4941 167E  
                                                             u4861 1528  
                                                             u4781 1378  
                                                             u5581 079C  
                                                             u5670 23E8  
                                                             u4950 258A  
                                                             u4870 1544  
                                                             u4790 13C6  
                                                             u5590 07B6  
                                                             u5671 23E2  
                                                             u4951 2584  
                                                             u4871 153E  
                                                             u4791 13C0  
                                                             u5591 07B0  
                                                             u5680 23FC  
                                                             u4960 25CE  
                                                             u4880 1576  
                                                             u5681 23F6  
                                                             u4961 25C8  
                                                             u4881 1570  
                                                             u4970 25F2  
                                                             u4890 1594  
                                                             u5690 2060  
                                                             u4971 25EC  
                                                             u4891 158E  
                                                             u5691 205A  
                                                             u4980 2618  
                                                             u4981 2612  
                                                             u4990 266E  
                                                             u4991 2668  
                                                             _Fosc 7D89  
                                                             _Tosc 00E3  
                                                             _atoi 1E80  
                                                             _main 3192  
                                                             fsr1h 000FE2  
                                                             fsr2h 000FDA  
                                                             indf1 000FE7  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0078  
                                                             _stop 0075  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 00DC  
                                                       _Angle_diff 005F  
                                                  ___fldiv@new_exp 0027  
                                                     ___param_bank 000000  
                                                    ___fltol@sign1 00BE  
                                                            ?_atoi 000F  
                                                  __end_of___fladd 0DCC  
                                                            ?_main 0001  
                                                  __end_of___fldiv 16A2  
                                                  __end_of___flneg 30C8  
                                                            STR_10 7F38  
                                                            STR_11 7EFE  
                                                            STR_12 7F1B  
                                                            STR_13 7EE0  
                                                            STR_14 7FC2  
                                                            STR_15 7E25  
                                                            STR_16 7FEA  
                                                            STR_17 7DDF  
                                                            STR_18 7FFD  
                                                  __end_of___flmul 1270  
                                                  __end_of___flsub 3002  
                                                  __end_of___fltol 2426  
                                                  __end_of_Twister 2C64  
                                                            i2l431 001C  
                                                            i2l440 00CC  
                                                            i2l438 0090  
                                                            _RCREG 000FAE  
                                                            _SPBRG 000FAF  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                 Twister@direction 000E  
                                                            _X_dir 0074  
                                                            _Y_dir 0073  
                                                            _State 0077  
                                                            _Steps 005D  
                                           __size_of_add_component 0200  
                                                  __end_of_isdigit 3086  
                                                  __end_of_memmove 2B84  
                                                            atoi@n 001C  
                                                            atoi@s 000F  
                               __end_of_desired_BaudRate@main$F498 7D81  
                                       _desired_BaudRate@main$F498 7D7D  
                                                            _toint 7D79  
                                                  __end_of_isspace 2F04  
                                                            tablat 000FF5  
                                                    _start_up_menu 203E  
                                                  _change_sequence 2D04  
                                         __end_of_fetch_parameters 22EE  
                                                            ttemp5 0079  
                                                            ttemp6 007C  
                                                  Y_axis@direction 000E  
                                                            ttemp7 0080  
                                                            status 000FD8  
                                                            wtemp8 0079  
                                                  __end_of_strncat 2E22  
                                                  __end_of_strrchr 3142  
                                                     __end_of_Fosc 7D8D  
                                                  __initialization 2F60  
                                                     __end_of_atoi 203E  
                                                     __end_of_main 31B4  
                                                       _Pick_Angle 0067  
                                                           ??_atoi 0011  
                                                           ??_main 005D  
                                                    __activetblptr 000002  
                                                    print_string@i 000C  
                                                   ?_start_up_menu 0001  
                                                           i2l3970 0064  
                                                           i2l3962 0014  
                                                           i2l3980 00C0  
                                                           i2l3972 0094  
                                                           i2l3964 0030  
                                                           i2l3982 00C2  
                                                           i2l3974 0098  
                                                           i2l3966 0040  
                                                           i2l3976 009C  
                                                           i2l3968 0052  
                                                           i2l3978 00AE  
                                                 __end_of___xxtofl 1E80  
                                          remove_component@rm_comp 001C  
                                                           _X_Pick 006F  
                                                           _Y_Pick 006B  
                                                           _X_diff 0063  
                                                           _Y_diff 0061  
                                                           _X_axis 298A  
                                                           _Y_axis 288A  
                                                           _Z_axis 278A  
                                                    _add_component 1A88  
                                                ?_remove_component 0001  
                                                           _Step_X 00B6  
                                                           _Step_Y 00B4  
                                                           _Step_Z 00B2  
                                                           ___flge 2558  
                                                        ??___fladd 0010  
                                                           ___wmul 3142  
                                                        ??___fldiv 001E  
                                                        ??___flneg 000C  
                                                        ??___flmul 0010  
                                                        ??___flsub 0020  
                                                        ??___fltol 0059  
                                                 ??_pick_and_place 003B  
                                               ??_remove_component 001A  
                                                        ??_Twister 000E  
                                                           clear_0 2F98  
                                                           clear_1 2FA4  
                                                           isa$std 000001  
                                                 __end_of_ms_delay 2F60  
                                                           _roundf 16A2  
                                                           _strlen 3002  
                                                     __pdataCOMRAM 0077  
                                                        ??_isdigit 000A  
                                                        ??_memmove 0012  
                                                    _Place_Angle_D 00A4  
                                                       _Step_Angle 00B0  
                                                     __mediumconst 7D78  
                                                        ??_isspace 000A  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                          __end_of_change_sequence 2D9C  
                                         fetch_parameters@Componnt 0008  
                                                        ??_strncat 0012  
                                                        ??_strrchr 001A  
                                                _return_to_initial 2426  
                                                       ___flge@ff1 002F  
                                                       ___flge@ff2 0033  
                                                     ___xxtofl@arg 0012  
                                                     ___xxtofl@exp 0011  
                                                     ___xxtofl@val 0008  
                                                       __accesstop 0080  
                                          __end_of__initialization 2FAA  
                                               __size_of___memrchr 0082  
                                               ?_return_to_initial 0001  
                                                       ___flneg@f1 0008  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0055  
                                               _pick_and_place$600 00C9  
                                               _pick_and_place$605 00D1  
                                               _pick_and_place$607 00D5  
                                               _pick_and_place$609 00D9  
                                               _pick_and_place$594 00C1  
                                               _pick_and_place$597 00C5  
                                                   ?_add_component 0001  
                                                  _init_interrupts 31CE  
                                              ??_return_to_initial 000F  
                                                   __pcstackCOMRAM 0001  
                                                     __pidataBANK0 31B4  
                                                    __end_of_toint 7D7D  
                                                      ms_delay@val 0008  
                                                 _desired_BaudRate 7D81  
                                        __end_of_return_to_initial 2558  
                                                  ??_start_up_menu 003D  
                                                      _Place_Angle 0065  
                                                      _New_char_RX 0076  
                                                       __pbssBANK0 0080  
                                            __end_of_Rx_char_USART 00DC  
                                        remove_component@indxToDel 001D  
                                                       __pnvCOMRAM 0076  
                                                       _angle_diff 00A2  
                                                          ?_X_axis 0001  
                                                          ?_Y_axis 0001  
                                                          ?_Z_axis 0001  
                                                          ?___flge 002F  
                                                          ?___wmul 0008  
                                                          ?_roundf 003B  
                                                __end_of___memrchr 2EA4  
                                                          ?_strlen 0008  
                                                          _INTCON2 000FF1  
                                                        ?___xxtofl 0008  
                                              pick_and_place@i_601 00CB  
                                              pick_and_place@i_610 00DB  
                                              pick_and_place@i_611 00DD  
                                              pick_and_place@i_603 00CD  
                                              pick_and_place@i_604 00CF  
                                              pick_and_place@i_606 00D3  
                                              pick_and_place@i_608 00D7  
                                              pick_and_place@i_595 00C3  
                                              pick_and_place@i_598 00C7  
                                                 ?_change_sequence 0001  
                                                          _RX_Char 0071  
                                          __end_of_init_interrupts 31E2  
                                                ?_fetch_parameters 0001  
                                                  ??_add_component 001E  
                                                        ?_ms_delay 0008  
                                                          _X_Place 006D  
                                                          _Y_Place 0069  
                                               ??_fetch_parameters 0008  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  pick_and_place@i 00BF  
                                                       _init_PORTS 316C  
                                                       _init_USART 30C8  
                                                  __size_of_X_axis 0100  
                                                  __size_of_Y_axis 0100  
                                                          _Rot_dir 0072  
                                                  __size_of_Z_axis 0100  
                                                  __size_of___flge 0128  
                                                          ___fladd 0824  
                                                          ___fldiv 1270  
                                                          ___flneg 3086  
                                                          ___flmul 0DCC  
                                                          ___flsub 2FB8  
                                                          ___fltol 22EE  
                                                  __size_of___wmul 002A  
                                                          _Twister 2B84  
                                                          __pcinit 2F60  
                                                          __ramtop 0600  
                                                          __ptext0 3192  
                                                          __ptext1 203E  
                                                          __ptext2 2426  
                                                          __ptext3 2680  
                                                          __ptext4 3108  
                                                          __ptext5 2E22  
                                                          __ptext6 2A8A  
                                                          __ptext7 00E0  
                                                          __ptext8 21B6  
                                                          __ptext9 1C88  
                                                  __size_of_roundf 03E6  
                                                  __size_of_strlen 0042  
                                                          _isdigit 3044  
                                                          _memmove 2A8A  
                                                       ??___xxtofl 000C  
                                                          _isspace 2EA4  
                                       __size_of_return_to_initial 0132  
                                                          atoi@neg 0015  
                                                          _strncat 2D9C  
                                                          _strrchr 3108  
                                             end_of_initialization 2FAA  
                                              remove_component@ptr 001A  
                                                    __Lmediumconst 7D78  
                                                       ??_ms_delay 000A  
                                                        _RCSTAbits 000FAB  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                          roundf@e 0047  
                                                          roundf@u 004D  
                                                          roundf@x 003B  
                                                          roundf@y 0051  
                                                          strlen@a 000A  
                                                          strlen@s 0008  
                                               add_component@F3131 00E7  
                                                      ___fladd@grs 0017  
                                                    ___xxtofl@sign 0010  
                                        __size_of_remove_component 010A  
                                                        _TRISCbits 000F94  
                                                      ___fldiv@grs 0029  
                                                      ___fldiv@rem 0022  
                                                    ?_print_string 0008  
                                                      ___flmul@grs 0015  
                                                 ?_init_interrupts 0001  
                                                        _TXSTAbits 000FAC  
                                                      ___memrchr@c 000E  
                                                      ___memrchr@m 000C  
                                                      ___memrchr@n 0010  
                                                      ___memrchr@s 0014  
                                         __end_of_desired_BaudRate 7D85  
                                                      ?_init_PORTS 0001  
                                                      ?_init_USART 0001  
                                                   __end_of_X_axis 2A8A  
                                                   __end_of_Y_axis 298A  
                                                   __end_of_Z_axis 288A  
                                                   __end_of___flge 2680  
                                                   __end_of___wmul 316C  
                                                    __pidataCOMRAM 31E4  
                                                   __end_of_roundf 1A88  
                                                   __end_of_strlen 3044  
                                              start_initialization 2F60  
                                                   ??_print_string 000A  
                                                        _X_Place_D 00A8  
                                                        _Y_Place_D 00A6  
                                                  X_axis@direction 000E  
                                                     _Pick_Angle_D 00AA  
                                                   _Tosc@main$F497 00DF  
                                                         ??_X_axis 000E  
                                                         ??_Y_axis 000E  
                                                         ??_Z_axis 000E  
                                                         ??___flge 0037  
                                                         ??___wmul 000C  
                                                      __pdataBANK0 00DF  
                                                   _lenth_of_array 00E9  
                                               return_to_initial@i 0010  
                                                         ??_roundf 003F  
                                                         ??_strlen 000A  
                                                        ___fladd@a 000C  
                                                        ___fladd@b 0008  
                                                        ___fldiv@a 001A  
                                                        ___fldiv@b 0016  
                                                        ___flmul@a 000C  
                                                        ___flmul@b 0008  
                                                      __pbssCOMRAM 005D  
                                                 change_sequence@i 0011  
                                                        ___flsub@a 001C  
                                                        ___flsub@b 0018  
                                                    __pcstackBANK0 00BE  
                                          __size_of_pick_and_place 0744  
                                                        ___memrchr 2E22  
                                                __size_of___xxtofl 01F8  
                                              __size_of_init_PORTS 0026  
                                              __size_of_init_USART 0040  
                                            __end_of_start_up_menu 21B6  
                                                        _atoi$1080 0019  
                                                        _atoi$1078 0017  
                                                        _atoi$1079 001B  
                                                  Z_axis@direction 000E  
                                                __size_of_ms_delay 005C  
                                                        __pintcode 0008  
                                                    __pmediumconst 7D78  
                                                         ?___fladd 0008  
                                                         ?___fldiv 0016  
                                                         ?___flneg 0008  
                                                         ?___flmul 0008  
                                                         ?___flsub 0018  
                                                         ?___fltol 0055  
                                                         ?_Twister 0001  
                                                   Rx_char_USART@i 0006  
                                        __size_of_fetch_parameters 0138  
                                           __size_of_Rx_char_USART 00D4  
                                                print_string@strng 0008  
                                                         ?_isdigit 0008  
                                                         ?_memmove 000C  
                                                         ?_isspace 0008  
                                                 _remove_component 2680  
                                                   _Fosc@main$F496 7D85  
                                                       ?___memrchr 000C  
                                                         ?_strncat 000C  
                                                         ?_strrchr 0016  
                                                        _input_str 00EB  
                                                   ___wmul@product 000C  
                                         __size_of_change_sequence 0098  
                                                         _PIE1bits 000F9D  
                                            __end_of_add_component 1C88  
                                                         _PIR1bits 000F9E  
                                                         i2u450_40 0062  
                                                         i2u450_41 005C  
                                                         i2u451_40 0090  
                                                         i2u451_41 008A  
                                                         i2u452_40 00AC  
                                                         i2u452_41 00A6  
                                                         i2u453_40 00BE  
                                                         i2u453_41 00B8  
                                                         i2u448_40 002E  
                                                         i2u448_41 0028  
                                                         i2u449_40 0040  
                                                         i2u449_41 003A  
                                             __end_of_print_string 2D04  
                                                        _testarray 0080  
                                                ___wmul@multiplier 0008  
                                           __end_of_Fosc@main$F496 7D89  
                                                     _isspace$1096 000E  
                                                        copy_data0 2F74  
                                                         _X_Pick_D 00AE  
                                                    _Rx_char_USART 0008  
                                                         _Y_Pick_D 00AC  
                                                       roundf@F528 009E  
                                                         __Hrparam 0000  
                                                     ??_init_PORTS 0008  
                                                     ??_init_USART 005D  
                                                         __Lrparam 0000  
                                                        memmove@d1 000C  
                                                        memmove@s1 000E  
                                                 __size_of___fladd 05A8  
                                                 __size_of___fldiv 0432  
                                                 __size_of___flneg 0042  
                                                 __size_of___flmul 04A4  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 0138  
                                                 __size_of_Twister 00E0  
                                                        ms_delay@i 000A  
                                                        ms_delay@j 000C  
                                                         ___xxtofl 1C88  
                                                   _pick_and_place 00E0  
                                                 __size_of_isdigit 0042  
                                                 __size_of_memmove 00FA  
                                                      ??___memrchr 0012  
                                                 __size_of_isspace 0060  
                                                         __ptext10 1270  
                                                         __ptext11 278A  
                                                         __ptext20 2C64  
                                                         __ptext12 288A  
                                                         __ptext21 1E80  
                                                         __ptext13 298A  
                                                         __ptext30 3086  
                                                         __ptext22 2EA4  
                                                         __ptext14 2B84  
                                                         __ptext31 0DCC  
                                                         __ptext23 3044  
                                                         __ptext15 2F04  
                                                         __ptext32 2558  
                                                         __ptext24 3142  
                                                         __ptext16 2D04  
                                                         __ptext33 22EE  
                                                         __ptext25 31CE  
                                                         __ptext17 1A88  
                                                         __ptext34 316C  
                                                         __ptext26 30C8  
                                                         __ptext18 2D9C  
                                                         __ptext27 16A2  
                                                         __ptext19 3002  
                                                         __ptext28 2FB8  
                                                         __ptext29 0824  
                                               __end_of_init_PORTS 3192  
                                               __end_of_init_USART 3108  
                                                 __size_of_strncat 0086  
                                                 __size_of_strrchr 003A  
                                                   ?_Rx_char_USART 0001  
                                                    __size_of_atoi 01BE  
                                                    __size_of_main 0022  
                                                         _ms_delay 2F04  
                                                         isa$xinst 000000  
                                                         _sequence 00F5  
                                         __size_of_init_interrupts 0014  
                                                ??_change_sequence 000E  
                                                         int$flags 0078  
                                                         _rotation 00B8  
                                                 _fetch_parameters 21B6  
                                           __end_of_pick_and_place 0824  
                                                       _INTCONbits 000FF2  
                                           return_to_initial@i_614 0012  
                                           return_to_initial@i_615 0014  
                                           return_to_initial@i_616 0016  
                                                         isdigit@c 0008  
                                                         memmove@d 0014  
                                                         memmove@n 0010  
                                                         memmove@s 0016  
                                                         intlevel2 31E2  
                                                         isspace@c 0008  
                                                   _displacement_X 00BC  
                                                   _displacement_Y 00BA  
                                            __size_of_print_string 00A0  
                                         __end_of_remove_component 278A  
                                           pick_and_place@Componnt 00BE  
                                                  ?_pick_and_place 0001  
                                                         strncat@d 000C  
                                                         strncat@n 0010  
                                                         strncat@s 000E  
                                                         strrchr@c 0018  
                                                         strrchr@s 0016  
                                                    ___fladd@signs 0014  
                                                  ??_Rx_char_USART 0001  
                                                     _print_string 2C64  
                                                     ___fladd@aexp 0015  
                                                     ___fladd@bexp 0016  
                                        add_component@add_componnt 001E  
                                                   start_up_menu@i 0040  
                                                      _roundf$1350 0043  
                                                      _roundf$1349 0049  
