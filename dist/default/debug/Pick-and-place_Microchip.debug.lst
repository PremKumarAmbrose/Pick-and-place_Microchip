

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 17 19:25:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F452 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  002DB8                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for _State
    95  002DB8  30                 	db	48
    96                           
    97                           ;initializer for _sequence
    98  002DB9  43                 	db	67
    99  002DBA  41                 	db	65
   100  002DBB  42                 	db	66
   101  002DBC  00                 	db	0
   102                           
   103                           	psect	idataBANK0
   104  002D98                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _Tosc@main$F484
   108  002D98  37BD               	dw	14269
   109  002D9A  3486               	dw	13446
   110                           
   111                           ;initializer for _Tosc
   112  002D9C  37BD               	dw	14269
   113  002D9E  3486               	dw	13446
   114                           
   115                           ;initializer for _lenth_of_array
   116  002DA0  001E               	dw	30
   117                           
   118                           ;initializer for _input_str
   119  002DA2  20                 	db	32
   120  002DA3  00                 	db	0
   121  002DA4  00                 	db	0
   122  002DA5  00                 	db	0
   123  002DA6  00                 	db	0
   124  002DA7  00                 	db	0
   125  002DA8  00                 	db	0
   126  002DA9  00                 	db	0
   127  002DAA  00                 	db	0
   128  002DAB  00                 	db	0
   129                           
   130                           	psect	mediumconst
   131  007D92                     __pmediumconst:
   132                           	callstack 0
   133  007D92  00                 	db	0
   134  007D93  0000               	dw	0
   135  007D95  4B00               	dw	19200
   136  007D97                     __end_of_toint:
   137                           	callstack 0
   138  007D97  0000               	dw	0
   139  007D99  4616               	dw	17942
   140  007D9B                     __end_of_desired_BaudRate@main$F485:
   141                           	callstack 0
   142  007D9B  0000               	dw	0
   143  007D9D  4616               	dw	17942
   144  007D9F                     __end_of_desired_BaudRate:
   145                           	callstack 0
   146  007D9F  2400               	dw	9216
   147  007DA1  4A74               	dw	19060
   148  007DA3                     __end_of_Fosc@main$F483:
   149                           	callstack 0
   150  007DA3  2400               	dw	9216
   151  007DA5  4A74               	dw	19060
   152  007DA7                     __end_of_Fosc:
   153                           	callstack 0
   154  0000                     _RCREG	set	4014
   155  0000                     _TXREG	set	4013
   156  0000                     _RCSTAbits	set	4011
   157  0000                     _TXSTAbits	set	4012
   158  0000                     _SPBRG	set	4015
   159  0000                     _INTCONbits	set	4082
   160  0000                     _PIE1bits	set	3997
   161  0000                     _PIR1bits	set	3998
   162  0000                     _TRISCbits	set	3988
   163  0000                     _PORTC	set	3970
   164  0000                     _LATC	set	3979
   165  0000                     _PORTD	set	3971
   166  0000                     _PORTB	set	3969
   167  0000                     _TRISD	set	3989
   168  0000                     _TRISB	set	3987
   169  0000                     _RCIF	set	31989
   170  007DA7                     STR_1:
   171  007DA7  0A                 	db	10
   172  007DA8  0A                 	db	10
   173  007DA9  31                 	db	49	;'1'
   174  007DAA  2E                 	db	46
   175  007DAB  20                 	db	32
   176  007DAC  53                 	db	83	;'S'
   177  007DAD  74                 	db	116	;'t'
   178  007DAE  61                 	db	97	;'a'
   179  007DAF  72                 	db	114	;'r'
   180  007DB0  74                 	db	116	;'t'
   181  007DB1  20                 	db	32
   182  007DB2  53                 	db	83	;'S'
   183  007DB3  65                 	db	101	;'e'
   184  007DB4  71                 	db	113	;'q'
   185  007DB5  75                 	db	117	;'u'
   186  007DB6  65                 	db	101	;'e'
   187  007DB7  6E                 	db	110	;'n'
   188  007DB8  63                 	db	99	;'c'
   189  007DB9  65                 	db	101	;'e'
   190  007DBA  0A                 	db	10
   191  007DBB  32                 	db	50	;'2'
   192  007DBC  2E                 	db	46
   193  007DBD  20                 	db	32
   194  007DBE  43                 	db	67	;'C'
   195  007DBF  68                 	db	104	;'h'
   196  007DC0  61                 	db	97	;'a'
   197  007DC1  6E                 	db	110	;'n'
   198  007DC2  67                 	db	103	;'g'
   199  007DC3  65                 	db	101	;'e'
   200  007DC4  20                 	db	32
   201  007DC5  73                 	db	115	;'s'
   202  007DC6  65                 	db	101	;'e'
   203  007DC7  71                 	db	113	;'q'
   204  007DC8  75                 	db	117	;'u'
   205  007DC9  65                 	db	101	;'e'
   206  007DCA  6E                 	db	110	;'n'
   207  007DCB  63                 	db	99	;'c'
   208  007DCC  65                 	db	101	;'e'
   209  007DCD  0A                 	db	10
   210  007DCE  33                 	db	51	;'3'
   211  007DCF  2E                 	db	46
   212  007DD0  20                 	db	32
   213  007DD1  41                 	db	65	;'A'
   214  007DD2  64                 	db	100	;'d'
   215  007DD3  64                 	db	100	;'d'
   216  007DD4  20                 	db	32
   217  007DD5  6E                 	db	110	;'n'
   218  007DD6  65                 	db	101	;'e'
   219  007DD7  77                 	db	119	;'w'
   220  007DD8  20                 	db	32
   221  007DD9  63                 	db	99	;'c'
   222  007DDA  6F                 	db	111	;'o'
   223  007DDB  6D                 	db	109	;'m'
   224  007DDC  70                 	db	112	;'p'
   225  007DDD  6F                 	db	111	;'o'
   226  007DDE  6E                 	db	110	;'n'
   227  007DDF  65                 	db	101	;'e'
   228  007DE0  6E                 	db	110	;'n'
   229  007DE1  74                 	db	116	;'t'
   230  007DE2  0A                 	db	10
   231  007DE3  34                 	db	52	;'4'
   232  007DE4  2E                 	db	46
   233  007DE5  20                 	db	32
   234  007DE6  52                 	db	82	;'R'
   235  007DE7  65                 	db	101	;'e'
   236  007DE8  6D                 	db	109	;'m'
   237  007DE9  6F                 	db	111	;'o'
   238  007DEA  76                 	db	118	;'v'
   239  007DEB  65                 	db	101	;'e'
   240  007DEC  20                 	db	32
   241  007DED  61                 	db	97	;'a'
   242  007DEE  20                 	db	32
   243  007DEF  63                 	db	99	;'c'
   244  007DF0  6F                 	db	111	;'o'
   245  007DF1  6D                 	db	109	;'m'
   246  007DF2  70                 	db	112	;'p'
   247  007DF3  6F                 	db	111	;'o'
   248  007DF4  6E                 	db	110	;'n'
   249  007DF5  65                 	db	101	;'e'
   250  007DF6  6E                 	db	110	;'n'
   251  007DF7  74                 	db	116	;'t'
   252  007DF8  00                 	db	0
   253  007DF9                     STR_16:
   254  007DF9  0A                 	db	10
   255  007DFA  63                 	db	99	;'c'
   256  007DFB  6F                 	db	111	;'o'
   257  007DFC  6D                 	db	109	;'m'
   258  007DFD  70                 	db	112	;'p'
   259  007DFE  6F                 	db	111	;'o'
   260  007DFF  6E                 	db	110	;'n'
   261  007E00  65                 	db	101	;'e'
   262  007E01  6E                 	db	110	;'n'
   263  007E02  74                 	db	116	;'t'
   264  007E03  20                 	db	32
   265  007E04  69                 	db	105	;'i'
   266  007E05  73                 	db	115	;'s'
   267  007E06  20                 	db	32
   268  007E07  6E                 	db	110	;'n'
   269  007E08  6F                 	db	111	;'o'
   270  007E09  74                 	db	116	;'t'
   271  007E0A  20                 	db	32
   272  007E0B  69                 	db	105	;'i'
   273  007E0C  6E                 	db	110	;'n'
   274  007E0D  20                 	db	32
   275  007E0E  74                 	db	116	;'t'
   276  007E0F  68                 	db	104	;'h'
   277  007E10  65                 	db	101	;'e'
   278  007E11  20                 	db	32
   279  007E12  73                 	db	115	;'s'
   280  007E13  65                 	db	101	;'e'
   281  007E14  71                 	db	113	;'q'
   282  007E15  75                 	db	117	;'u'
   283  007E16  65                 	db	101	;'e'
   284  007E17  6E                 	db	110	;'n'
   285  007E18  63                 	db	99	;'c'
   286  007E19  65                 	db	101	;'e'
   287  007E1A  2E                 	db	46
   288  007E1B  20                 	db	32
   289  007E1C  54                 	db	84	;'T'
   290  007E1D  72                 	db	114	;'r'
   291  007E1E  79                 	db	121	;'y'
   292  007E1F  20                 	db	32
   293  007E20  73                 	db	115	;'s'
   294  007E21  65                 	db	101	;'e'
   295  007E22  6C                 	db	108	;'l'
   296  007E23  65                 	db	101	;'e'
   297  007E24  63                 	db	99	;'c'
   298  007E25  74                 	db	116	;'t'
   299  007E26  69                 	db	105	;'i'
   300  007E27  6E                 	db	110	;'n'
   301  007E28  67                 	db	103	;'g'
   302  007E29  20                 	db	32
   303  007E2A  61                 	db	97	;'a'
   304  007E2B  6E                 	db	110	;'n'
   305  007E2C  6F                 	db	111	;'o'
   306  007E2D  74                 	db	116	;'t'
   307  007E2E  68                 	db	104	;'h'
   308  007E2F  65                 	db	101	;'e'
   309  007E30  72                 	db	114	;'r'
   310  007E31  20                 	db	32
   311  007E32  63                 	db	99	;'c'
   312  007E33  6F                 	db	111	;'o'
   313  007E34  6D                 	db	109	;'m'
   314  007E35  70                 	db	112	;'p'
   315  007E36  6F                 	db	111	;'o'
   316  007E37  6E                 	db	110	;'n'
   317  007E38  65                 	db	101	;'e'
   318  007E39  6E                 	db	110	;'n'
   319  007E3A  74                 	db	116	;'t'
   320  007E3B  3A                 	db	58	;':'
   321  007E3C  20                 	db	32
   322  007E3D  0A                 	db	10
   323  007E3E  00                 	db	0
   324  007E3F                     STR_14:
   325  007E3F  0A                 	db	10
   326  007E40  57                 	db	87	;'W'
   327  007E41  68                 	db	104	;'h'
   328  007E42  69                 	db	105	;'i'
   329  007E43  63                 	db	99	;'c'
   330  007E44  68                 	db	104	;'h'
   331  007E45  20                 	db	32
   332  007E46  63                 	db	99	;'c'
   333  007E47  6F                 	db	111	;'o'
   334  007E48  6D                 	db	109	;'m'
   335  007E49  70                 	db	112	;'p'
   336  007E4A  6F                 	db	111	;'o'
   337  007E4B  6E                 	db	110	;'n'
   338  007E4C  65                 	db	101	;'e'
   339  007E4D  6E                 	db	110	;'n'
   340  007E4E  74                 	db	116	;'t'
   341  007E4F  20                 	db	32
   342  007E50  77                 	db	119	;'w'
   343  007E51  6F                 	db	111	;'o'
   344  007E52  75                 	db	117	;'u'
   345  007E53  6C                 	db	108	;'l'
   346  007E54  64                 	db	100	;'d'
   347  007E55  20                 	db	32
   348  007E56  79                 	db	121	;'y'
   349  007E57  6F                 	db	111	;'o'
   350  007E58  75                 	db	117	;'u'
   351  007E59  20                 	db	32
   352  007E5A  6C                 	db	108	;'l'
   353  007E5B  69                 	db	105	;'i'
   354  007E5C  6B                 	db	107	;'k'
   355  007E5D  65                 	db	101	;'e'
   356  007E5E  20                 	db	32
   357  007E5F  74                 	db	116	;'t'
   358  007E60  6F                 	db	111	;'o'
   359  007E61  20                 	db	32
   360  007E62  72                 	db	114	;'r'
   361  007E63  65                 	db	101	;'e'
   362  007E64  6D                 	db	109	;'m'
   363  007E65  6F                 	db	111	;'o'
   364  007E66  76                 	db	118	;'v'
   365  007E67  65                 	db	101	;'e'
   366  007E68  20                 	db	32
   367  007E69  66                 	db	102	;'f'
   368  007E6A  72                 	db	114	;'r'
   369  007E6B  6F                 	db	111	;'o'
   370  007E6C  6D                 	db	109	;'m'
   371  007E6D  20                 	db	32
   372  007E6E  74                 	db	116	;'t'
   373  007E6F  68                 	db	104	;'h'
   374  007E70  65                 	db	101	;'e'
   375  007E71  20                 	db	32
   376  007E72  20                 	db	32
   377  007E73  73                 	db	115	;'s'
   378  007E74  65                 	db	101	;'e'
   379  007E75  71                 	db	113	;'q'
   380  007E76  75                 	db	117	;'u'
   381  007E77  65                 	db	101	;'e'
   382  007E78  6E                 	db	110	;'n'
   383  007E79  63                 	db	99	;'c'
   384  007E7A  65                 	db	101	;'e'
   385  007E7B  3F                 	db	63	;'?'
   386  007E7C  0A                 	db	10
   387  007E7D  00                 	db	0
   388  007E7E                     STR_7:
   389  007E7E  0A                 	db	10
   390  007E7F  45                 	db	69	;'E'
   391  007E80  6E                 	db	110	;'n'
   392  007E81  74                 	db	116	;'t'
   393  007E82  65                 	db	101	;'e'
   394  007E83  72                 	db	114	;'r'
   395  007E84  20                 	db	32
   396  007E85  74                 	db	116	;'t'
   397  007E86  68                 	db	104	;'h'
   398  007E87  65                 	db	101	;'e'
   399  007E88  20                 	db	32
   400  007E89  63                 	db	99	;'c'
   401  007E8A  6F                 	db	111	;'o'
   402  007E8B  6D                 	db	109	;'m'
   403  007E8C  70                 	db	112	;'p'
   404  007E8D  6F                 	db	111	;'o'
   405  007E8E  6E                 	db	110	;'n'
   406  007E8F  65                 	db	101	;'e'
   407  007E90  6E                 	db	110	;'n'
   408  007E91  74                 	db	116	;'t'
   409  007E92  20                 	db	32
   410  007E93  77                 	db	119	;'w'
   411  007E94  61                 	db	97	;'a'
   412  007E95  6E                 	db	110	;'n'
   413  007E96  74                 	db	116	;'t'
   414  007E97  20                 	db	32
   415  007E98  74                 	db	116	;'t'
   416  007E99  6F                 	db	111	;'o'
   417  007E9A  20                 	db	32
   418  007E9B  61                 	db	97	;'a'
   419  007E9C  64                 	db	100	;'d'
   420  007E9D  64                 	db	100	;'d'
   421  007E9E  20                 	db	32
   422  007E9F  28                 	db	40
   423  007EA0  41                 	db	65	;'A'
   424  007EA1  2C                 	db	44
   425  007EA2  42                 	db	66	;'B'
   426  007EA3  2C                 	db	44
   427  007EA4  43                 	db	67	;'C'
   428  007EA5  2C                 	db	44
   429  007EA6  44                 	db	68	;'D'
   430  007EA7  29                 	db	41
   431  007EA8  3F                 	db	63	;'?'
   432  007EA9  00                 	db	0
   433  007EAA                     STR_5:
   434  007EAA  0A                 	db	10
   435  007EAB  50                 	db	80	;'P'
   436  007EAC  6C                 	db	108	;'l'
   437  007EAD  65                 	db	101	;'e'
   438  007EAE  61                 	db	97	;'a'
   439  007EAF  73                 	db	115	;'s'
   440  007EB0  65                 	db	101	;'e'
   441  007EB1  20                 	db	32
   442  007EB2  67                 	db	103	;'g'
   443  007EB3  69                 	db	105	;'i'
   444  007EB4  76                 	db	118	;'v'
   445  007EB5  65                 	db	101	;'e'
   446  007EB6  20                 	db	32
   447  007EB7  74                 	db	116	;'t'
   448  007EB8  68                 	db	104	;'h'
   449  007EB9  65                 	db	101	;'e'
   450  007EBA  20                 	db	32
   451  007EBB  6E                 	db	110	;'n'
   452  007EBC  65                 	db	101	;'e'
   453  007EBD  77                 	db	119	;'w'
   454  007EBE  20                 	db	32
   455  007EBF  73                 	db	115	;'s'
   456  007EC0  65                 	db	101	;'e'
   457  007EC1  71                 	db	113	;'q'
   458  007EC2  75                 	db	117	;'u'
   459  007EC3  65                 	db	101	;'e'
   460  007EC4  6E                 	db	110	;'n'
   461  007EC5  63                 	db	99	;'c'
   462  007EC6  65                 	db	101	;'e'
   463  007EC7  20                 	db	32
   464  007EC8  61                 	db	97	;'a'
   465  007EC9  73                 	db	115	;'s'
   466  007ECA  20                 	db	32
   467  007ECB  69                 	db	105	;'i'
   468  007ECC  6E                 	db	110	;'n'
   469  007ECD  70                 	db	112	;'p'
   470  007ECE  75                 	db	117	;'u'
   471  007ECF  74                 	db	116	;'t'
   472  007ED0  0D                 	db	13
   473  007ED1  00                 	db	0
   474  007ED2                     STR_3:
   475  007ED2  0A                 	db	10
   476  007ED3  45                 	db	69	;'E'
   477  007ED4  6E                 	db	110	;'n'
   478  007ED5  74                 	db	116	;'t'
   479  007ED6  65                 	db	101	;'e'
   480  007ED7  72                 	db	114	;'r'
   481  007ED8  20                 	db	32
   482  007ED9  27                 	db	39
   483  007EDA  51                 	db	81	;'Q'
   484  007EDB  27                 	db	39
   485  007EDC  20                 	db	32
   486  007EDD  74                 	db	116	;'t'
   487  007EDE  6F                 	db	111	;'o'
   488  007EDF  20                 	db	32
   489  007EE0  65                 	db	101	;'e'
   490  007EE1  78                 	db	120	;'x'
   491  007EE2  69                 	db	105	;'i'
   492  007EE3  74                 	db	116	;'t'
   493  007EE4  20                 	db	32
   494  007EE5  74                 	db	116	;'t'
   495  007EE6  6F                 	db	111	;'o'
   496  007EE7  20                 	db	32
   497  007EE8  4D                 	db	77	;'M'
   498  007EE9  41                 	db	65	;'A'
   499  007EEA  49                 	db	73	;'I'
   500  007EEB  4E                 	db	78	;'N'
   501  007EEC  20                 	db	32
   502  007EED  4D                 	db	77	;'M'
   503  007EEE  45                 	db	69	;'E'
   504  007EEF  4E                 	db	78	;'N'
   505  007EF0  55                 	db	85	;'U'
   506  007EF1  00                 	db	0
   507  007EF2                     STR_13:
   508  007EF2  0A                 	db	10
   509  007EF3  45                 	db	69	;'E'
   510  007EF4  6E                 	db	110	;'n'
   511  007EF5  74                 	db	116	;'t'
   512  007EF6  65                 	db	101	;'e'
   513  007EF7  72                 	db	114	;'r'
   514  007EF8  20                 	db	32
   515  007EF9  74                 	db	116	;'t'
   516  007EFA  68                 	db	104	;'h'
   517  007EFB  65                 	db	101	;'e'
   518  007EFC  20                 	db	32
   519  007EFD  70                 	db	112	;'p'
   520  007EFE  6C                 	db	108	;'l'
   521  007EFF  61                 	db	97	;'a'
   522  007F00  63                 	db	99	;'c'
   523  007F01  65                 	db	101	;'e'
   524  007F02  20                 	db	32
   525  007F03  6F                 	db	111	;'o'
   526  007F04  72                 	db	114	;'r'
   527  007F05  69                 	db	105	;'i'
   528  007F06  65                 	db	101	;'e'
   529  007F07  6E                 	db	110	;'n'
   530  007F08  74                 	db	116	;'t'
   531  007F09  61                 	db	97	;'a'
   532  007F0A  74                 	db	116	;'t'
   533  007F0B  69                 	db	105	;'i'
   534  007F0C  6F                 	db	111	;'o'
   535  007F0D  6E                 	db	110	;'n'
   536  007F0E  3A                 	db	58	;':'
   537  007F0F  00                 	db	0
   538  007F10                     STR_11:
   539  007F10  0A                 	db	10
   540  007F11  45                 	db	69	;'E'
   541  007F12  6E                 	db	110	;'n'
   542  007F13  74                 	db	116	;'t'
   543  007F14  65                 	db	101	;'e'
   544  007F15  72                 	db	114	;'r'
   545  007F16  20                 	db	32
   546  007F17  74                 	db	116	;'t'
   547  007F18  68                 	db	104	;'h'
   548  007F19  65                 	db	101	;'e'
   549  007F1A  20                 	db	32
   550  007F1B  70                 	db	112	;'p'
   551  007F1C  6C                 	db	108	;'l'
   552  007F1D  61                 	db	97	;'a'
   553  007F1E  63                 	db	99	;'c'
   554  007F1F  65                 	db	101	;'e'
   555  007F20  20                 	db	32
   556  007F21  70                 	db	112	;'p'
   557  007F22  6F                 	db	111	;'o'
   558  007F23  73                 	db	115	;'s'
   559  007F24  69                 	db	105	;'i'
   560  007F25  74                 	db	116	;'t'
   561  007F26  69                 	db	105	;'i'
   562  007F27  6F                 	db	111	;'o'
   563  007F28  6E                 	db	110	;'n'
   564  007F29  20                 	db	32
   565  007F2A  58                 	db	88	;'X'
   566  007F2B  3A                 	db	58	;':'
   567  007F2C  00                 	db	0
   568  007F2D                     STR_12:
   569  007F2D  0A                 	db	10
   570  007F2E  45                 	db	69	;'E'
   571  007F2F  6E                 	db	110	;'n'
   572  007F30  74                 	db	116	;'t'
   573  007F31  65                 	db	101	;'e'
   574  007F32  72                 	db	114	;'r'
   575  007F33  20                 	db	32
   576  007F34  74                 	db	116	;'t'
   577  007F35  68                 	db	104	;'h'
   578  007F36  65                 	db	101	;'e'
   579  007F37  20                 	db	32
   580  007F38  70                 	db	112	;'p'
   581  007F39  6C                 	db	108	;'l'
   582  007F3A  61                 	db	97	;'a'
   583  007F3B  63                 	db	99	;'c'
   584  007F3C  65                 	db	101	;'e'
   585  007F3D  20                 	db	32
   586  007F3E  70                 	db	112	;'p'
   587  007F3F  6F                 	db	111	;'o'
   588  007F40  73                 	db	115	;'s'
   589  007F41  69                 	db	105	;'i'
   590  007F42  74                 	db	116	;'t'
   591  007F43  69                 	db	105	;'i'
   592  007F44  6F                 	db	111	;'o'
   593  007F45  6E                 	db	110	;'n'
   594  007F46  20                 	db	32
   595  007F47  59                 	db	89	;'Y'
   596  007F48  3A                 	db	58	;':'
   597  007F49  00                 	db	0
   598  007F4A                     STR_10:
   599  007F4A  0A                 	db	10
   600  007F4B  45                 	db	69	;'E'
   601  007F4C  6E                 	db	110	;'n'
   602  007F4D  74                 	db	116	;'t'
   603  007F4E  65                 	db	101	;'e'
   604  007F4F  72                 	db	114	;'r'
   605  007F50  20                 	db	32
   606  007F51  74                 	db	116	;'t'
   607  007F52  68                 	db	104	;'h'
   608  007F53  65                 	db	101	;'e'
   609  007F54  20                 	db	32
   610  007F55  70                 	db	112	;'p'
   611  007F56  69                 	db	105	;'i'
   612  007F57  63                 	db	99	;'c'
   613  007F58  6B                 	db	107	;'k'
   614  007F59  20                 	db	32
   615  007F5A  6F                 	db	111	;'o'
   616  007F5B  72                 	db	114	;'r'
   617  007F5C  69                 	db	105	;'i'
   618  007F5D  65                 	db	101	;'e'
   619  007F5E  6E                 	db	110	;'n'
   620  007F5F  74                 	db	116	;'t'
   621  007F60  61                 	db	97	;'a'
   622  007F61  74                 	db	116	;'t'
   623  007F62  69                 	db	105	;'i'
   624  007F63  6F                 	db	111	;'o'
   625  007F64  6E                 	db	110	;'n'
   626  007F65  3A                 	db	58	;':'
   627  007F66  00                 	db	0
   628  007F67                     STR_8:
   629  007F67  0A                 	db	10
   630  007F68  45                 	db	69	;'E'
   631  007F69  6E                 	db	110	;'n'
   632  007F6A  74                 	db	116	;'t'
   633  007F6B  65                 	db	101	;'e'
   634  007F6C  72                 	db	114	;'r'
   635  007F6D  20                 	db	32
   636  007F6E  74                 	db	116	;'t'
   637  007F6F  68                 	db	104	;'h'
   638  007F70  65                 	db	101	;'e'
   639  007F71  20                 	db	32
   640  007F72  70                 	db	112	;'p'
   641  007F73  69                 	db	105	;'i'
   642  007F74  63                 	db	99	;'c'
   643  007F75  6B                 	db	107	;'k'
   644  007F76  20                 	db	32
   645  007F77  70                 	db	112	;'p'
   646  007F78  6F                 	db	111	;'o'
   647  007F79  73                 	db	115	;'s'
   648  007F7A  69                 	db	105	;'i'
   649  007F7B  74                 	db	116	;'t'
   650  007F7C  69                 	db	105	;'i'
   651  007F7D  6F                 	db	111	;'o'
   652  007F7E  6E                 	db	110	;'n'
   653  007F7F  20                 	db	32
   654  007F80  58                 	db	88	;'X'
   655  007F81  3A                 	db	58	;':'
   656  007F82  00                 	db	0
   657  007F83                     STR_9:
   658  007F83  0A                 	db	10
   659  007F84  45                 	db	69	;'E'
   660  007F85  6E                 	db	110	;'n'
   661  007F86  74                 	db	116	;'t'
   662  007F87  65                 	db	101	;'e'
   663  007F88  72                 	db	114	;'r'
   664  007F89  20                 	db	32
   665  007F8A  74                 	db	116	;'t'
   666  007F8B  68                 	db	104	;'h'
   667  007F8C  65                 	db	101	;'e'
   668  007F8D  20                 	db	32
   669  007F8E  70                 	db	112	;'p'
   670  007F8F  69                 	db	105	;'i'
   671  007F90  63                 	db	99	;'c'
   672  007F91  6B                 	db	107	;'k'
   673  007F92  20                 	db	32
   674  007F93  70                 	db	112	;'p'
   675  007F94  6F                 	db	111	;'o'
   676  007F95  73                 	db	115	;'s'
   677  007F96  69                 	db	105	;'i'
   678  007F97  74                 	db	116	;'t'
   679  007F98  69                 	db	105	;'i'
   680  007F99  6F                 	db	111	;'o'
   681  007F9A  6E                 	db	110	;'n'
   682  007F9B  20                 	db	32
   683  007F9C  59                 	db	89	;'Y'
   684  007F9D  3A                 	db	58	;':'
   685  007F9E  00                 	db	0
   686  007F9F                     STR_4:
   687  007F9F  0A                 	db	10
   688  007FA0  54                 	db	84	;'T'
   689  007FA1  68                 	db	104	;'h'
   690  007FA2  65                 	db	101	;'e'
   691  007FA3  20                 	db	32
   692  007FA4  63                 	db	99	;'c'
   693  007FA5  75                 	db	117	;'u'
   694  007FA6  72                 	db	114	;'r'
   695  007FA7  72                 	db	114	;'r'
   696  007FA8  65                 	db	101	;'e'
   697  007FA9  6E                 	db	110	;'n'
   698  007FAA  74                 	db	116	;'t'
   699  007FAB  20                 	db	32
   700  007FAC  73                 	db	115	;'s'
   701  007FAD  65                 	db	101	;'e'
   702  007FAE  71                 	db	113	;'q'
   703  007FAF  75                 	db	117	;'u'
   704  007FB0  65                 	db	101	;'e'
   705  007FB1  6E                 	db	110	;'n'
   706  007FB2  63                 	db	99	;'c'
   707  007FB3  65                 	db	101	;'e'
   708  007FB4  20                 	db	32
   709  007FB5  69                 	db	105	;'i'
   710  007FB6  73                 	db	115	;'s'
   711  007FB7  3A                 	db	58	;':'
   712  007FB8  20                 	db	32
   713  007FB9  00                 	db	0
   714  007FBA                     STR_6:
   715  007FBA  0A                 	db	10
   716  007FBB  54                 	db	84	;'T'
   717  007FBC  68                 	db	104	;'h'
   718  007FBD  65                 	db	101	;'e'
   719  007FBE  20                 	db	32
   720  007FBF  43                 	db	67	;'C'
   721  007FC0  75                 	db	117	;'u'
   722  007FC1  72                 	db	114	;'r'
   723  007FC2  72                 	db	114	;'r'
   724  007FC3  65                 	db	101	;'e'
   725  007FC4  6E                 	db	110	;'n'
   726  007FC5  74                 	db	116	;'t'
   727  007FC6  20                 	db	32
   728  007FC7  73                 	db	115	;'s'
   729  007FC8  65                 	db	101	;'e'
   730  007FC9  71                 	db	113	;'q'
   731  007FCA  75                 	db	117	;'u'
   732  007FCB  65                 	db	101	;'e'
   733  007FCC  6E                 	db	110	;'n'
   734  007FCD  63                 	db	99	;'c'
   735  007FCE  65                 	db	101	;'e'
   736  007FCF  20                 	db	32
   737  007FD0  69                 	db	105	;'i'
   738  007FD1  73                 	db	115	;'s'
   739  007FD2  3A                 	db	58	;':'
   740  007FD3  00                 	db	0
   741  007FD4                     STR_2:
   742  007FD4  0A                 	db	10
   743  007FD5  43                 	db	67	;'C'
   744  007FD6  6F                 	db	111	;'o'
   745  007FD7  6E                 	db	110	;'n'
   746  007FD8  69                 	db	105	;'i'
   747  007FD9  74                 	db	116	;'t'
   748  007FDA  69                 	db	105	;'i'
   749  007FDB  6E                 	db	110	;'n'
   750  007FDC  75                 	db	117	;'u'
   751  007FDD  69                 	db	105	;'i'
   752  007FDE  6E                 	db	110	;'n'
   753  007FDF  67                 	db	103	;'g'
   754  007FE0  20                 	db	32
   755  007FE1  73                 	db	115	;'s'
   756  007FE2  65                 	db	101	;'e'
   757  007FE3  71                 	db	113	;'q'
   758  007FE4  75                 	db	117	;'u'
   759  007FE5  65                 	db	101	;'e'
   760  007FE6  6E                 	db	110	;'n'
   761  007FE7  63                 	db	99	;'c'
   762  007FE8  65                 	db	101	;'e'
   763  007FE9  3A                 	db	58	;':'
   764  007FEA  00                 	db	0
   765  007FEB                     STR_15:
   766  007FEB  63                 	db	99	;'c'
   767  007FEC  6F                 	db	111	;'o'
   768  007FED  6D                 	db	109	;'m'
   769  007FEE  70                 	db	112	;'p'
   770  007FEF  6F                 	db	111	;'o'
   771  007FF0  6E                 	db	110	;'n'
   772  007FF1  65                 	db	101	;'e'
   773  007FF2  6E                 	db	110	;'n'
   774  007FF3  74                 	db	116	;'t'
   775  007FF4  20                 	db	32
   776  007FF5  72                 	db	114	;'r'
   777  007FF6  65                 	db	101	;'e'
   778  007FF7  6D                 	db	109	;'m'
   779  007FF8  6F                 	db	111	;'o'
   780  007FF9  76                 	db	118	;'v'
   781  007FFA  65                 	db	101	;'e'
   782  007FFB  64                 	db	100	;'d'
   783  007FFC  3A                 	db	58	;':'
   784  007FFD  00                 	db	0
   785  007FFE  00                 	db	0	; dummy byte at the end
   786  0000                     
   787                           ; #config settings
   788                           
   789                           	psect	cinit
   790  002A62                     __pcinit:
   791                           	callstack 0
   792  002A62                     start_initialization:
   793                           	callstack 0
   794  002A62                     __initialization:
   795                           	callstack 0
   796                           
   797                           ; Initialize objects allocated to BANK0 (20 bytes)
   798                           ; load TBLPTR registers with __pidataBANK0
   799  002A62  0E98               	movlw	low __pidataBANK0
   800  002A64  6EF6               	movwf	tblptrl,c
   801  002A66  0E2D               	movlw	high __pidataBANK0
   802  002A68  6EF7               	movwf	tblptrh,c
   803  002A6A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   804  002A6C  6EF8               	movwf	tblptru,c
   805  002A6E  EE00  F0B4         	lfsr	0,__pdataBANK0
   806  002A72  EE10 F014          	lfsr	1,20
   807  002A76                     copy_data0:
   808  002A76  0009               	tblrd		*+
   809  002A78  CFF5 FFEE          	movff	tablat,postinc0
   810  002A7C  50E5               	movf	postdec1,w,c
   811  002A7E  50E1               	movf	fsr1l,w,c
   812  002A80  E1FA               	bnz	copy_data0
   813                           
   814                           ; Initialize objects allocated to COMRAM (5 bytes)
   815                           ; load TBLPTR registers with __pidataCOMRAM
   816  002A82  0EB8               	movlw	low __pidataCOMRAM
   817  002A84  6EF6               	movwf	tblptrl,c
   818  002A86  0E2D               	movlw	high __pidataCOMRAM
   819  002A88  6EF7               	movwf	tblptrh,c
   820  002A8A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   821  002A8C  6EF8               	movwf	tblptru,c
   822  002A8E  EE00  F073         	lfsr	0,__pdataCOMRAM
   823  002A92  EE10 F005          	lfsr	1,5
   824  002A96                     copy_data1:
   825  002A96  0009               	tblrd		*+
   826  002A98  CFF5 FFEE          	movff	tablat,postinc0
   827  002A9C  50E5               	movf	postdec1,w,c
   828  002A9E  50E1               	movf	fsr1l,w,c
   829  002AA0  E1FA               	bnz	copy_data1
   830                           
   831                           ; Clear objects allocated to BANK0 (52 bytes)
   832  002AA2  EE00  F080         	lfsr	0,__pbssBANK0
   833  002AA6  0E34               	movlw	52
   834  002AA8                     clear_0:
   835  002AA8  6AEE               	clrf	postinc0,c
   836  002AAA  06E8               	decf	wreg,f,c
   837  002AAC  E1FD               	bnz	clear_0
   838                           
   839                           ; Clear objects allocated to COMRAM (26 bytes)
   840  002AAE  EE00  F059         	lfsr	0,__pbssCOMRAM
   841  002AB2  0E1A               	movlw	26
   842  002AB4                     clear_1:
   843  002AB4  6AEE               	clrf	postinc0,c
   844  002AB6  06E8               	decf	wreg,f,c
   845  002AB8  E1FD               	bnz	clear_1
   846  002ABA                     end_of_initialization:
   847                           	callstack 0
   848  002ABA                     __end_of__initialization:
   849                           	callstack 0
   850  002ABA  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   851  002ABC  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   852  002ABE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   853  002AC0  6EF8               	movwf	tblptru,c
   854  002AC2  0100               	movlb	0
   855  002AC4  EFBD  F016         	goto	_main	;jump to C main() function
   856                           
   857                           	psect	bssCOMRAM
   858  000059                     __pbssCOMRAM:
   859                           	callstack 0
   860  000059                     _X_Pick_D:
   861                           	callstack 0
   862  000059                     	ds	2
   863  00005B                     _Angle_diff:
   864                           	callstack 0
   865  00005B                     	ds	2
   866  00005D                     _Y_diff:
   867                           	callstack 0
   868  00005D                     	ds	2
   869  00005F                     _X_diff:
   870                           	callstack 0
   871  00005F                     	ds	2
   872  000061                     _Place_Angle:
   873                           	callstack 0
   874  000061                     	ds	2
   875  000063                     _Pick_Angle:
   876                           	callstack 0
   877  000063                     	ds	2
   878  000065                     _Y_Place:
   879                           	callstack 0
   880  000065                     	ds	2
   881  000067                     _Y_Pick:
   882                           	callstack 0
   883  000067                     	ds	2
   884  000069                     _X_Place:
   885                           	callstack 0
   886  000069                     	ds	2
   887  00006B                     _X_Pick:
   888                           	callstack 0
   889  00006B                     	ds	2
   890  00006D                     _RX_Char:
   891                           	callstack 0
   892  00006D                     	ds	1
   893  00006E                     _Rot_dir:
   894                           	callstack 0
   895  00006E                     	ds	1
   896  00006F                     _Y_dir:
   897                           	callstack 0
   898  00006F                     	ds	1
   899  000070                     _X_dir:
   900                           	callstack 0
   901  000070                     	ds	1
   902  000071                     _stop:
   903                           	callstack 0
   904  000071                     	ds	1
   905  000072                     _New_char_RX:
   906                           	callstack 0
   907  000072                     	ds	1
   908                           
   909                           	psect	dataCOMRAM
   910  000073                     __pdataCOMRAM:
   911                           	callstack 0
   912  000073                     _State:
   913                           	callstack 0
   914  000073                     	ds	1
   915  000074                     _sequence:
   916                           	callstack 0
   917  000074                     	ds	4
   918                           
   919                           	psect	bssBANK0
   920  000080                     __pbssBANK0:
   921                           	callstack 0
   922  000080                     _testarray:
   923                           	callstack 0
   924  000080                     	ds	30
   925  00009E                     roundf@F528:
   926                           	callstack 0
   927  00009E                     	ds	4
   928  0000A2                     _angle_diff:
   929                           	callstack 0
   930  0000A2                     	ds	2
   931  0000A4                     _Place_Angle_D:
   932                           	callstack 0
   933  0000A4                     	ds	2
   934  0000A6                     _Y_Place_D:
   935                           	callstack 0
   936  0000A6                     	ds	2
   937  0000A8                     _X_Place_D:
   938                           	callstack 0
   939  0000A8                     	ds	2
   940  0000AA                     _Pick_Angle_D:
   941                           	callstack 0
   942  0000AA                     	ds	2
   943  0000AC                     _Y_Pick_D:
   944                           	callstack 0
   945  0000AC                     	ds	2
   946  0000AE                     _rotation:
   947                           	callstack 0
   948  0000AE                     	ds	2
   949  0000B0                     _displacement_Y:
   950                           	callstack 0
   951  0000B0                     	ds	2
   952  0000B2                     _displacement_X:
   953                           	callstack 0
   954  0000B2                     	ds	2
   955                           
   956                           	psect	dataBANK0
   957  0000B4                     __pdataBANK0:
   958                           	callstack 0
   959  0000B4                     	ds	4
   960  0000B8                     	ds	4
   961  0000BC                     _lenth_of_array:
   962                           	callstack 0
   963  0000BC                     	ds	2
   964  0000BE                     _input_str:
   965                           	callstack 0
   966  0000BE                     	ds	10
   967                           
   968                           	psect	cstackBANK0
   969  0000C8                     __pcstackBANK0:
   970                           	callstack 0
   971  0000C8                     ??___fltol:
   972  0000C8                     start_up_menu@i:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x0
   976  0000C8                     	ds	4
   977  0000CC                     ___fltol@sign1:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x4
   981  0000CC                     	ds	1
   982  0000CD                     ___fltol@exp1:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x5
   986  0000CD                     	ds	1
   987                           
   988                           	psect	cstackCOMRAM
   989  000001                     __pcstackCOMRAM:
   990                           	callstack 0
   991  000001                     ??_Rx_char_USART:
   992  000001                     
   993                           ; 2 bytes @ 0x0
   994  000001                     	ds	5
   995  000006                     Rx_char_USART@i:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x5
   999  000006                     	ds	2
  1000  000008                     ?_strlen:
  1001                           	callstack 0
  1002  000008                     ?_isspace:
  1003                           	callstack 0
  1004  000008                     ?_isdigit:
  1005                           	callstack 0
  1006  000008                     ?___wmul:
  1007                           	callstack 0
  1008  000008                     ?___fladd:
  1009                           	callstack 0
  1010  000008                     ?___flmul:
  1011                           	callstack 0
  1012  000008                     ?___flneg:
  1013                           	callstack 0
  1014  000008                     ?___xxtofl:
  1015                           	callstack 0
  1016  000008                     serial_tx_char@val:
  1017                           	callstack 0
  1018  000008                     ms_delay@val:
  1019                           	callstack 0
  1020  000008                     ___wmul@multiplier:
  1021                           	callstack 0
  1022  000008                     isdigit@c:
  1023                           	callstack 0
  1024  000008                     isspace@c:
  1025                           	callstack 0
  1026  000008                     strlen@s:
  1027                           	callstack 0
  1028  000008                     ___flneg@f1:
  1029                           	callstack 0
  1030  000008                     ___fladd@b:
  1031                           	callstack 0
  1032  000008                     ___flmul@b:
  1033                           	callstack 0
  1034  000008                     ___xxtofl@val:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x7
  1038  000008                     	ds	1
  1039  000009                     print_string@strng:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x8
  1043  000009                     	ds	1
  1044  00000A                     ??_isspace:
  1045  00000A                     ??_isdigit:
  1046  00000A                     ms_delay@i:
  1047                           	callstack 0
  1048  00000A                     ___wmul@multiplicand:
  1049                           	callstack 0
  1050  00000A                     strlen@a:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x9
  1054  00000A                     	ds	1
  1055  00000B                     ??_print_string:
  1056                           
  1057                           ; 1 bytes @ 0xA
  1058  00000B                     	ds	1
  1059  00000C                     ??___xxtofl:
  1060  00000C                     ?___memrchr:
  1061                           	callstack 0
  1062  00000C                     ms_delay@j:
  1063                           	callstack 0
  1064  00000C                     ___wmul@product:
  1065                           	callstack 0
  1066  00000C                     memmove@d1:
  1067                           	callstack 0
  1068  00000C                     strncat@d:
  1069                           	callstack 0
  1070  00000C                     ___memrchr@m:
  1071                           	callstack 0
  1072  00000C                     ___fladd@a:
  1073                           	callstack 0
  1074  00000C                     ___flmul@a:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0xB
  1078  00000C                     	ds	1
  1079  00000D                     print_string@i:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0xC
  1083  00000D                     	ds	1
  1084  00000E                     X_axis@direction:
  1085                           	callstack 0
  1086  00000E                     Y_axis@direction:
  1087                           	callstack 0
  1088  00000E                     Twister@direction:
  1089                           	callstack 0
  1090  00000E                     _isspace$1071:
  1091                           	callstack 0
  1092  00000E                     memmove@s1:
  1093                           	callstack 0
  1094  00000E                     strncat@s:
  1095                           	callstack 0
  1096  00000E                     ___memrchr@c:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0xD
  1100  00000E                     	ds	1
  1101  00000F                     ??_change_sequence:
  1102  00000F                     ?_atoi:
  1103                           	callstack 0
  1104  00000F                     atoi@s:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0xE
  1108  00000F                     	ds	1
  1109  000010                     ??___fladd:
  1110  000010                     ??___flmul:
  1111  000010                     ___xxtofl@sign:
  1112                           	callstack 0
  1113  000010                     memmove@n:
  1114                           	callstack 0
  1115  000010                     strncat@n:
  1116                           	callstack 0
  1117  000010                     ___memrchr@n:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0xF
  1121  000010                     	ds	1
  1122  000011                     ??_atoi:
  1123  000011                     ___xxtofl@exp:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0x10
  1127  000011                     	ds	1
  1128  000012                     ??_memmove:
  1129  000012                     ??___memrchr:
  1130  000012                     change_sequence@i:
  1131                           	callstack 0
  1132  000012                     ___xxtofl@arg:
  1133                           	callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x11
  1136  000012                     	ds	2
  1137  000014                     ___fladd@signs:
  1138                           	callstack 0
  1139  000014                     ___flmul@sign:
  1140                           	callstack 0
  1141  000014                     memmove@d:
  1142                           	callstack 0
  1143  000014                     ___memrchr@s:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x13
  1147  000014                     	ds	1
  1148  000015                     ___fladd@aexp:
  1149                           	callstack 0
  1150  000015                     atoi@neg:
  1151                           	callstack 0
  1152  000015                     ___flmul@grs:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x14
  1156  000015                     	ds	1
  1157  000016                     ?_strrchr:
  1158                           	callstack 0
  1159  000016                     ?___fldiv:
  1160                           	callstack 0
  1161  000016                     ___fladd@bexp:
  1162                           	callstack 0
  1163  000016                     memmove@s:
  1164                           	callstack 0
  1165  000016                     strrchr@s:
  1166                           	callstack 0
  1167  000016                     ___fldiv@b:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x15
  1171  000016                     	ds	1
  1172  000017                     ___fladd@grs:
  1173                           	callstack 0
  1174  000017                     _atoi$1053:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x16
  1178  000017                     	ds	1
  1179  000018                     ?___flsub:
  1180                           	callstack 0
  1181  000018                     strrchr@c:
  1182                           	callstack 0
  1183  000018                     ___flsub@b:
  1184                           	callstack 0
  1185                           
  1186                           ; 4 bytes @ 0x17
  1187  000018                     	ds	1
  1188  000019                     ___flmul@aexp:
  1189                           	callstack 0
  1190  000019                     _atoi$1055:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x18
  1194  000019                     	ds	1
  1195  00001A                     ___flmul@bexp:
  1196                           	callstack 0
  1197  00001A                     remove_component@ptr:
  1198                           	callstack 0
  1199  00001A                     ___fldiv@a:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x19
  1203  00001A                     	ds	1
  1204  00001B                     _atoi$1054:
  1205                           	callstack 0
  1206  00001B                     ___flmul@prod:
  1207                           	callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x1A
  1210  00001B                     	ds	1
  1211  00001C                     remove_component@indxToDel:
  1212                           	callstack 0
  1213  00001C                     atoi@n:
  1214                           	callstack 0
  1215  00001C                     ___flsub@a:
  1216                           	callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x1B
  1219  00001C                     	ds	2
  1220  00001E                     ??_add_component:
  1221  00001E                     ??___fldiv:
  1222  00001E                     remove_component@rm_comp:
  1223                           	callstack 0
  1224                           
  1225                           ; 1 bytes @ 0x1D
  1226  00001E                     	ds	1
  1227  00001F                     ___flmul@temp:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x1E
  1231  00001F                     	ds	1
  1232  000020                     add_component@add_component:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x1F
  1236  000020                     	ds	2
  1237  000022                     ___fldiv@rem:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x21
  1241  000022                     	ds	4
  1242  000026                     ___fldiv@sign:
  1243                           	callstack 0
  1244                           
  1245                           ; 1 bytes @ 0x25
  1246  000026                     	ds	1
  1247  000027                     ___fldiv@new_exp:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x26
  1251  000027                     	ds	2
  1252  000029                     ___fldiv@grs:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x28
  1256  000029                     	ds	4
  1257  00002D                     ___fldiv@bexp:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x2C
  1261  00002D                     	ds	1
  1262  00002E                     ___fldiv@aexp:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x2D
  1266  00002E                     	ds	1
  1267  00002F                     ___flge@ff1:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x2E
  1271  00002F                     	ds	4
  1272  000033                     ___flge@ff2:
  1273                           	callstack 0
  1274                           
  1275                           ; 4 bytes @ 0x32
  1276  000033                     	ds	4
  1277  000037                     ??___flge:
  1278                           
  1279                           ; 1 bytes @ 0x36
  1280  000037                     	ds	4
  1281  00003B                     ??_pick_and_place:
  1282  00003B                     ?_roundf:
  1283                           	callstack 0
  1284  00003B                     roundf@x:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x3A
  1288  00003B                     	ds	2
  1289  00003D                     pick_and_place@i:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x3C
  1293  00003D                     	ds	2
  1294  00003F                     ??_roundf:
  1295  00003F                     _pick_and_place$575:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x3E
  1299  00003F                     	ds	2
  1300  000041                     pick_and_place@i_576:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x40
  1304  000041                     	ds	2
  1305  000043                     _pick_and_place$578:
  1306                           	callstack 0
  1307  000043                     _roundf$1323:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x42
  1311  000043                     	ds	2
  1312  000045                     pick_and_place@i_579:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x44
  1316  000045                     	ds	2
  1317  000047                     _pick_and_place$581:
  1318                           	callstack 0
  1319  000047                     roundf@e:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0x46
  1323  000047                     	ds	2
  1324  000049                     pick_and_place@i_582:
  1325                           	callstack 0
  1326  000049                     _roundf$1322:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x48
  1330  000049                     	ds	2
  1331  00004B                     _pick_and_place$583:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x4A
  1335  00004B                     	ds	2
  1336  00004D                     pick_and_place@i_584:
  1337                           	callstack 0
  1338  00004D                     roundf@u:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x4C
  1342  00004D                     	ds	2
  1343  00004F                     _pick_and_place$585:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x4E
  1347  00004F                     	ds	2
  1348  000051                     pick_and_place@i_586:
  1349                           	callstack 0
  1350  000051                     roundf@y:
  1351                           	callstack 0
  1352                           
  1353                           ; 4 bytes @ 0x50
  1354  000051                     	ds	2
  1355  000053                     _pick_and_place$587:
  1356                           	callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x52
  1359  000053                     	ds	2
  1360  000055                     ?___fltol:
  1361                           	callstack 0
  1362  000055                     pick_and_place@Componnt:
  1363                           	callstack 0
  1364  000055                     ___fltol@f1:
  1365                           	callstack 0
  1366                           
  1367                           ; 4 bytes @ 0x54
  1368  000055                     	ds	1
  1369  000056                     ??_start_up_menu:
  1370                           
  1371                           ; 1 bytes @ 0x55
  1372  000056                     	ds	3
  1373  000059                     
  1374                           ; 1 bytes @ 0x58
  1375 ;;
  1376 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1377 ;;
  1378 ;; *************** function _main *****************
  1379 ;; Defined at:
  1380 ;;		line 186 in file "main.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  RX_Char         1    0        unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1394 ;;      Params:         0       0       0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels required when called: 5
  1400 ;; This function calls:
  1401 ;;		_init_PORTS
  1402 ;;		_init_USART
  1403 ;;		_init_interrupts
  1404 ;;		_start_up_menu
  1405 ;; This function is called by:
  1406 ;;		Startup code after reset
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text0
  1411  002D7A                     __ptext0:
  1412                           	callstack 0
  1413  002D7A                     _main:
  1414                           	callstack 26
  1415  002D7A  FFFF               	dw	65535	; assembler added errata NOP
  1416                           
  1417                           ;main.c: 190:     init_PORTS();
  1418  002D7C  EC9C  F016         	call	_init_PORTS	;wreg free
  1419  002D80                     
  1420                           ;main.c: 191:     init_USART();
  1421  002D80  EC4A  F016         	call	_init_USART	;wreg free
  1422  002D84                     
  1423                           ;main.c: 192:     init_interrupts();
  1424  002D84  ECD6  F016         	call	_init_interrupts	;wreg free
  1425  002D88                     
  1426                           ;main.c: 194:     (INTCONbits.GIE = 1);
  1427  002D88  8EF2               	bsf	242,7,c	;volatile
  1428  002D8A                     l4623:
  1429  002D8A  FFFF               	dw	65535	; assembler added errata NOP
  1430                           
  1431                           ;main.c: 197:         start_up_menu();
  1432  002D8C  ECDA  F00F         	call	_start_up_menu	;wreg free
  1433  002D90  EFC5  F016         	goto	l4623
  1434  002D94  EF44  F000         	goto	start
  1435  002D98                     __end_of_main:
  1436                           	callstack 0
  1437                           
  1438 ;; *************** function _start_up_menu *****************
  1439 ;; Defined at:
  1440 ;;		line 205 in file "main.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  i               2    0[BANK0 ] int 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1454 ;;      Params:         0       0       0       0       0       0       0
  1455 ;;      Locals:         0       2       0       0       0       0       0
  1456 ;;      Temps:          3       0       0       0       0       0       0
  1457 ;;      Totals:         3       2       0       0       0       0       0
  1458 ;;Total ram usage:        5 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 4
  1461 ;; This function calls:
  1462 ;;		_add_component
  1463 ;;		_change_sequence
  1464 ;;		_pick_and_place
  1465 ;;		_print_string
  1466 ;;		_remove_component
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text1
  1473  001FB4                     __ptext1:
  1474                           	callstack 0
  1475  001FB4                     _start_up_menu:
  1476                           	callstack 0
  1477  001FB4  FFFF               	dw	65535	; assembler added errata NOP
  1478  001FB6                     
  1479                           ;main.c: 207:     print_string("\n\n1. Start Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component");
  1480  001FB6  0EA7               	movlw	low STR_1
  1481  001FB8  6E09               	movwf	print_string@strng^0,c
  1482  001FBA  0E7D               	movlw	high STR_1
  1483  001FBC  6E0A               	movwf	(print_string@strng+1)^0,c
  1484  001FBE  EC66  F014         	call	_print_string	;wreg free
  1485  001FC2                     l4543:
  1486  001FC2  FFFF               	dw	65535	; assembler added errata NOP
  1487                           
  1488                           ;main.c: 210:         if(New_char_RX || State=='1'){
  1489  001FC4  5072               	movf	_New_char_RX^0,w,c
  1490  001FC6  A4D8               	btfss	status,2,c
  1491  001FC8  EFE8  F00F         	goto	u5601
  1492  001FCC  EFEB  F00F         	goto	u5600
  1493  001FD0                     u5601:
  1494  001FD0  FFFF               	dw	65535	; assembler added errata NOP
  1495  001FD2  EFF6  F00F         	goto	l4547
  1496  001FD6                     u5600:
  1497  001FD6  FFFF               	dw	65535	; assembler added errata NOP
  1498  001FD8  0E31               	movlw	49
  1499  001FDA  1873               	xorwf	_State^0,w,c
  1500  001FDC  A4D8               	btfss	status,2,c
  1501  001FDE  EFF3  F00F         	goto	u5611
  1502  001FE2  EFF6  F00F         	goto	u5610
  1503  001FE6                     u5611:
  1504  001FE6  FFFF               	dw	65535	; assembler added errata NOP
  1505  001FE8  EFE1  F00F         	goto	l4543
  1506  001FEC                     u5610:
  1507  001FEC                     l4547:
  1508  001FEC  FFFF               	dw	65535	; assembler added errata NOP
  1509                           
  1510                           ;main.c: 211:             New_char_RX=0;
  1511  001FEE  0E00               	movlw	0
  1512  001FF0  6E72               	movwf	_New_char_RX^0,c
  1513                           
  1514                           ;main.c: 212:             switch(State){
  1515  001FF2  EF64  F010         	goto	l4571
  1516  001FF6                     l4549:
  1517  001FF6  FFFF               	dw	65535	; assembler added errata NOP
  1518                           
  1519                           ;main.c: 214:                     print_string("\nConitinuing sequence:");
  1520  001FF8  0ED4               	movlw	low STR_2
  1521  001FFA  6E09               	movwf	print_string@strng^0,c
  1522  001FFC  0E7F               	movlw	high STR_2
  1523  001FFE  6E0A               	movwf	(print_string@strng+1)^0,c
  1524  002000  EC66  F014         	call	_print_string	;wreg free
  1525                           
  1526                           ;main.c: 215:                     print_string(sequence);
  1527  002004  0E74               	movlw	low _sequence
  1528  002006  6E09               	movwf	print_string@strng^0,c
  1529  002008  0E00               	movlw	high _sequence
  1530  00200A  6E0A               	movwf	(print_string@strng+1)^0,c
  1531  00200C  EC66  F014         	call	_print_string	;wreg free
  1532                           
  1533                           ;main.c: 216:                     print_string("\nEnter 'Q' to exit to MAIN MENU");
  1534  002010  0ED2               	movlw	low STR_3
  1535  002012  6E09               	movwf	print_string@strng^0,c
  1536  002014  0E7E               	movlw	high STR_3
  1537  002016  6E0A               	movwf	(print_string@strng+1)^0,c
  1538  002018  EC66  F014         	call	_print_string	;wreg free
  1539                           
  1540                           ;main.c: 217:                     while(!New_char_RX){
  1541  00201C  EF41  F010         	goto	l4559
  1542  002020                     l4551:
  1543  002020  FFFF               	dw	65535	; assembler added errata NOP
  1544                           
  1545                           ;main.c: 218:                         int i =0;
  1546  002022  0E00               	movlw	0
  1547  002024  0100               	movlb	0	; () banked
  1548  002026  6FC9               	movwf	(start_up_menu@i+1)& (0+255),b
  1549  002028  0E00               	movlw	0
  1550  00202A  6FC8               	movwf	start_up_menu@i& (0+255),b
  1551  00202C                     l4553:
  1552  00202C  FFFF               	dw	65535	; assembler added errata NOP
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;main.c: 220:                             pick_and_place(sequence[i]);
  1556  00202E  0E74               	movlw	low _sequence
  1557  002030  25C8               	addwf	start_up_menu@i& (0+255),w,b
  1558  002032  6ED9               	movwf	fsr2l,c
  1559  002034  0E00               	movlw	high _sequence
  1560  002036  21C9               	addwfc	(start_up_menu@i+1)& (0+255),w,b
  1561  002038  6EDA               	movwf	fsr2h,c
  1562  00203A  50DF               	movf	indf2,w,c
  1563  00203C  EC46  F000         	call	_pick_and_place
  1564  002040                     
  1565                           ;main.c: 221:                         }while(sequence[i++]!='\n'&& !stop);
  1566  002040  0100               	movlb	0	; () banked
  1567  002042  51C8               	movf	start_up_menu@i& (0+255),w,b
  1568  002044  6E56               	movwf	??_start_up_menu^0,c
  1569  002046  51C9               	movf	(start_up_menu@i+1)& (0+255),w,b
  1570  002048  6E57               	movwf	(??_start_up_menu+1)^0,c
  1571  00204A  4BC8               	infsnz	start_up_menu@i& (0+255),f,b
  1572  00204C  2BC9               	incf	(start_up_menu@i+1)& (0+255),f,b
  1573  00204E  0E74               	movlw	low _sequence
  1574  002050  2456               	addwf	??_start_up_menu^0,w,c
  1575  002052  6ED9               	movwf	fsr2l,c
  1576  002054  0E00               	movlw	high _sequence
  1577  002056  2057               	addwfc	(??_start_up_menu+1)^0,w,c
  1578  002058  6EDA               	movwf	fsr2h,c
  1579  00205A  0E0A               	movlw	10
  1580  00205C  18DE               	xorwf	postinc2,w,c
  1581  00205E  B4D8               	btfsc	status,2,c
  1582  002060  EF34  F010         	goto	u5621
  1583  002064  EF37  F010         	goto	u5620
  1584  002068                     u5621:
  1585  002068  FFFF               	dw	65535	; assembler added errata NOP
  1586  00206A  EF41  F010         	goto	l4559
  1587  00206E                     u5620:
  1588  00206E  FFFF               	dw	65535	; assembler added errata NOP
  1589  002070                     
  1590                           ; BSR set to: 0
  1591  002070  5071               	movf	_stop^0,w,c
  1592  002072  B4D8               	btfsc	status,2,c
  1593  002074  EF3E  F010         	goto	u5631
  1594  002078  EF41  F010         	goto	u5630
  1595  00207C                     u5631:
  1596  00207C  FFFF               	dw	65535	; assembler added errata NOP
  1597  00207E  EF16  F010         	goto	l4553
  1598  002082                     u5630:
  1599  002082                     l4559:
  1600  002082  FFFF               	dw	65535	; assembler added errata NOP
  1601                           
  1602                           ;main.c: 217:                     while(!New_char_RX){
  1603  002084  5072               	movf	_New_char_RX^0,w,c
  1604  002086  B4D8               	btfsc	status,2,c
  1605  002088  EF48  F010         	goto	u5641
  1606  00208C  EF4B  F010         	goto	u5640
  1607  002090                     u5641:
  1608  002090  FFFF               	dw	65535	; assembler added errata NOP
  1609  002092  EF10  F010         	goto	l4551
  1610  002096                     u5640:
  1611  002096  FFFF               	dw	65535	; assembler added errata NOP
  1612  002098  EF87  F010         	goto	l196
  1613  00209C                     l4561:
  1614  00209C  FFFF               	dw	65535	; assembler added errata NOP
  1615                           
  1616                           ;main.c: 226:                     change_sequence();
  1617  00209E  EC1A  F014         	call	_change_sequence	;wreg free
  1618                           
  1619                           ;main.c: 227:                     break;
  1620  0020A2  EF87  F010         	goto	l196
  1621  0020A6                     l4563:
  1622  0020A6  FFFF               	dw	65535	; assembler added errata NOP
  1623                           
  1624                           ;main.c: 230:                     add_component();
  1625  0020A8  EC00  F00E         	call	_add_component	;wreg free
  1626                           
  1627                           ;main.c: 231:                     break;
  1628  0020AC  EF87  F010         	goto	l196
  1629  0020B0                     l4565:
  1630  0020B0  FFFF               	dw	65535	; assembler added errata NOP
  1631                           
  1632                           ;main.c: 234:                     remove_component();
  1633  0020B2  ECBA  F011         	call	_remove_component	;wreg free
  1634                           
  1635                           ;main.c: 235:                     break;
  1636  0020B6  EF87  F010         	goto	l196
  1637  0020BA                     l4567:
  1638  0020BA  FFFF               	dw	65535	; assembler added errata NOP
  1639                           
  1640                           ;main.c: 238:                     New_char_RX=0;
  1641  0020BC  0E00               	movlw	0
  1642  0020BE  6E72               	movwf	_New_char_RX^0,c
  1643                           
  1644                           ;main.c: 239:                     stop=0;
  1645  0020C0  0E00               	movlw	0
  1646  0020C2  6E71               	movwf	_stop^0,c
  1647                           
  1648                           ;main.c: 240:                     break;
  1649  0020C4  EF87  F010         	goto	l196
  1650  0020C8                     l4571:
  1651  0020C8  FFFF               	dw	65535	; assembler added errata NOP
  1652  0020CA  5073               	movf	_State^0,w,c
  1653  0020CC  6E56               	movwf	??_start_up_menu^0,c
  1654  0020CE  6A57               	clrf	(??_start_up_menu+1)^0,c
  1655                           
  1656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1657                           ; Switch size 1, requested type "simple"
  1658                           ; Number of cases is 1, Range of values is 0 to 0
  1659                           ; switch strategies available:
  1660                           ; Name         Instructions Cycles
  1661                           ; simple_byte            4     3 (average)
  1662                           ;	Chosen strategy is simple_byte
  1663  0020D0  5057               	movf	(??_start_up_menu+1)^0,w,c
  1664  0020D2  0A00               	xorlw	0	; case 0
  1665  0020D4  B4D8               	btfsc	status,2,c
  1666  0020D6  EF6F  F010         	goto	l4733
  1667  0020DA  EF87  F010         	goto	l196
  1668  0020DE                     l4733:
  1669  0020DE  FFFF               	dw	65535	; assembler added errata NOP
  1670                           
  1671                           ; Switch size 1, requested type "simple"
  1672                           ; Number of cases is 5, Range of values is 49 to 81
  1673                           ; switch strategies available:
  1674                           ; Name         Instructions Cycles
  1675                           ; simple_byte           16     9 (average)
  1676                           ;	Chosen strategy is simple_byte
  1677  0020E0  5056               	movf	??_start_up_menu^0,w,c
  1678  0020E2  0A31               	xorlw	49	; case 49
  1679  0020E4  B4D8               	btfsc	status,2,c
  1680  0020E6  EFFB  F00F         	goto	l4549
  1681  0020EA  0A03               	xorlw	3	; case 50
  1682  0020EC  B4D8               	btfsc	status,2,c
  1683  0020EE  EF4E  F010         	goto	l4561
  1684  0020F2  0A01               	xorlw	1	; case 51
  1685  0020F4  B4D8               	btfsc	status,2,c
  1686  0020F6  EF53  F010         	goto	l4563
  1687  0020FA  0A07               	xorlw	7	; case 52
  1688  0020FC  B4D8               	btfsc	status,2,c
  1689  0020FE  EF58  F010         	goto	l4565
  1690  002102  0A65               	xorlw	101	; case 81
  1691  002104  B4D8               	btfsc	status,2,c
  1692  002106  EF5D  F010         	goto	l4567
  1693  00210A  EF87  F010         	goto	l196
  1694  00210E                     l196:
  1695  00210E  FFFF               	dw	65535	; assembler added errata NOP
  1696  002110  0012               	return		;funcret
  1697  002112  FFFF               	dw	65535	; errata NOP
  1698  002114                     __end_of_start_up_menu:
  1699                           	callstack 0
  1700                           
  1701 ;; *************** function _remove_component *****************
  1702 ;; Defined at:
  1703 ;;		line 347 in file "main.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  indxToDel       2   27[COMRAM] int 
  1708 ;;  ptr             2   25[COMRAM] PTR unsigned char 
  1709 ;;		 -> NULL(0), sequence(4), 
  1710 ;;  rm_comp         1   29[COMRAM] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1720 ;;      Params:         0       0       0       0       0       0       0
  1721 ;;      Locals:         5       0       0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0
  1723 ;;      Totals:         5       0       0       0       0       0       0
  1724 ;;Total ram usage:        5 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 3
  1727 ;; This function calls:
  1728 ;;		_memmove
  1729 ;;		_print_string
  1730 ;;		_serial_tx_char
  1731 ;;		_strlen
  1732 ;;		_strrchr
  1733 ;; This function is called by:
  1734 ;;		_start_up_menu
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text2
  1739  002374                     __ptext2:
  1740                           	callstack 0
  1741  002374                     _remove_component:
  1742                           	callstack 0
  1743  002374  FFFF               	dw	65535	; assembler added errata NOP
  1744  002376                     
  1745                           ;main.c: 348:     print_string("\nWhich component would you like to remove from the  seq
      +                          uence?\n");
  1746  002376  0E3F               	movlw	low STR_14
  1747  002378  6E09               	movwf	print_string@strng^0,c
  1748  00237A  0E7E               	movlw	high STR_14
  1749  00237C  6E0A               	movwf	(print_string@strng+1)^0,c
  1750  00237E  EC66  F014         	call	_print_string	;wreg free
  1751                           
  1752                           ;main.c: 349:     print_string(sequence);
  1753  002382  0E74               	movlw	low _sequence
  1754  002384  6E09               	movwf	print_string@strng^0,c
  1755  002386  0E00               	movlw	high _sequence
  1756  002388  6E0A               	movwf	(print_string@strng+1)^0,c
  1757  00238A  EC66  F014         	call	_print_string	;wreg free
  1758  00238E                     l4447:
  1759  00238E  FFFF               	dw	65535	; assembler added errata NOP
  1760                           
  1761                           ;main.c: 351:         if(New_char_RX){
  1762  002390  5072               	movf	_New_char_RX^0,w,c
  1763  002392  B4D8               	btfsc	status,2,c
  1764  002394  EFCE  F011         	goto	u5491
  1765  002398  EFD1  F011         	goto	u5490
  1766  00239C                     u5491:
  1767  00239C  FFFF               	dw	65535	; assembler added errata NOP
  1768  00239E  EFC7  F011         	goto	l4447
  1769  0023A2                     u5490:
  1770  0023A2  FFFF               	dw	65535	; assembler added errata NOP
  1771  0023A4                     
  1772                           ;main.c: 352:             New_char_RX=0;
  1773  0023A4  0E00               	movlw	0
  1774  0023A6  6E72               	movwf	_New_char_RX^0,c
  1775  0023A8                     
  1776                           ;main.c: 353:             char rm_comp = input_str[0];
  1777  0023A8  C0BE  F01E         	movff	_input_str,remove_component@rm_comp	;volatile
  1778  0023AC                     
  1779                           ;main.c: 354:             char *ptr;;main.c: 355:             int indxToDel;;main.c: 356
      +                          :             ptr=strrchr(sequence,rm_comp);
  1780  0023AC  0E74               	movlw	low _sequence
  1781  0023AE  6E16               	movwf	strrchr@s^0,c
  1782  0023B0  0E00               	movlw	high _sequence
  1783  0023B2  6E17               	movwf	(strrchr@s+1)^0,c
  1784  0023B4  C01E  F018         	movff	remove_component@rm_comp,strrchr@c
  1785  0023B8  6A19               	clrf	(strrchr@c+1)^0,c
  1786  0023BA  EC6A  F016         	call	_strrchr	;wreg free
  1787  0023BE  C016  F01A         	movff	?_strrchr,remove_component@ptr
  1788  0023C2  C017  F01B         	movff	?_strrchr+1,remove_component@ptr+1
  1789  0023C6                     
  1790                           ;main.c: 358:             if (rm_comp=='Q'){
  1791  0023C6  0E51               	movlw	81
  1792  0023C8  181E               	xorwf	remove_component@rm_comp^0,w,c
  1793  0023CA  A4D8               	btfss	status,2,c
  1794  0023CC  EFEA  F011         	goto	u5501
  1795  0023D0  EFED  F011         	goto	u5500
  1796  0023D4                     u5501:
  1797  0023D4  FFFF               	dw	65535	; assembler added errata NOP
  1798  0023D6  EFF0  F011         	goto	l4461
  1799  0023DA                     u5500:
  1800  0023DA  FFFF               	dw	65535	; assembler added errata NOP
  1801  0023DC  EF3D  F012         	goto	l4479
  1802  0023E0                     l4461:
  1803  0023E0  FFFF               	dw	65535	; assembler added errata NOP
  1804  0023E2  501A               	movf	remove_component@ptr^0,w,c
  1805  0023E4  101B               	iorwf	(remove_component@ptr+1)^0,w,c
  1806  0023E6  B4D8               	btfsc	status,2,c
  1807  0023E8  EFF8  F011         	goto	u5511
  1808  0023EC  EFFB  F011         	goto	u5510
  1809  0023F0                     u5511:
  1810  0023F0  FFFF               	dw	65535	; assembler added errata NOP
  1811  0023F2  EF29  F012         	goto	l4475
  1812  0023F6                     u5510:
  1813  0023F6  FFFF               	dw	65535	; assembler added errata NOP
  1814  0023F8                     
  1815                           ;main.c: 362:                 indxToDel = ptr - sequence;
  1816  0023F8  0E74               	movlw	low _sequence
  1817  0023FA  5C1A               	subwf	remove_component@ptr^0,w,c
  1818  0023FC  6E1C               	movwf	remove_component@indxToDel^0,c
  1819  0023FE  0E00               	movlw	high _sequence
  1820  002400  581B               	subwfb	(remove_component@ptr+1)^0,w,c
  1821  002402  6E1D               	movwf	(remove_component@indxToDel+1)^0,c
  1822  002404                     
  1823                           ;main.c: 363:                 memmove(&sequence[indxToDel], &sequence[indxToDel + 1], st
      +                          rlen(sequence) - indxToDel);
  1824  002404  0E74               	movlw	low _sequence
  1825  002406  241C               	addwf	remove_component@indxToDel^0,w,c
  1826  002408  6E0C               	movwf	memmove@d1^0,c
  1827  00240A  0E00               	movlw	high _sequence
  1828  00240C  201D               	addwfc	(remove_component@indxToDel+1)^0,w,c
  1829  00240E  6E0D               	movwf	(memmove@d1+1)^0,c
  1830  002410  0E75               	movlw	low (_sequence+1)
  1831  002412  241C               	addwf	remove_component@indxToDel^0,w,c
  1832  002414  6E0E               	movwf	memmove@s1^0,c
  1833  002416  0E00               	movlw	high (_sequence+1)
  1834  002418  201D               	addwfc	(remove_component@indxToDel+1)^0,w,c
  1835  00241A  6E0F               	movwf	(memmove@s1+1)^0,c
  1836  00241C  0E74               	movlw	low _sequence
  1837  00241E  6E08               	movwf	strlen@s^0,c
  1838  002420  0E00               	movlw	high _sequence
  1839  002422  6E09               	movwf	(strlen@s+1)^0,c
  1840  002424  ECE7  F015         	call	_strlen	;wreg free
  1841  002428  501C               	movf	remove_component@indxToDel^0,w,c
  1842  00242A  5C08               	subwf	?_strlen^0,w,c
  1843  00242C  6E10               	movwf	memmove@n^0,c
  1844  00242E  501D               	movf	(remove_component@indxToDel+1)^0,w,c
  1845  002430  5809               	subwfb	(?_strlen+1)^0,w,c
  1846  002432  6E11               	movwf	(memmove@n+1)^0,c
  1847  002434  EC42  F012         	call	_memmove	;wreg free
  1848  002438                     
  1849                           ;main.c: 364:                 print_string("component removed:");
  1850  002438  0EEB               	movlw	low STR_15
  1851  00243A  6E09               	movwf	print_string@strng^0,c
  1852  00243C  0E7F               	movlw	high STR_15
  1853  00243E  6E0A               	movwf	(print_string@strng+1)^0,c
  1854  002440  EC66  F014         	call	_print_string	;wreg free
  1855  002444                     
  1856                           ;main.c: 365:                 serial_tx_char(rm_comp);
  1857  002444  501E               	movf	remove_component@rm_comp^0,w,c
  1858  002446  ECAD  F016         	call	_serial_tx_char
  1859  00244A                     
  1860                           ;main.c: 366:                 stop=0;
  1861  00244A  0E00               	movlw	0
  1862  00244C  6E71               	movwf	_stop^0,c
  1863                           
  1864                           ;main.c: 367:                 break;
  1865  00244E  EF3D  F012         	goto	l4479
  1866  002452                     l4475:
  1867  002452  FFFF               	dw	65535	; assembler added errata NOP
  1868                           
  1869                           ;main.c: 371:                 print_string("\ncomponent is not in the sequence. Try sele
      +                          cting another component: \n");
  1870  002454  0EF9               	movlw	low STR_16
  1871  002456  6E09               	movwf	print_string@strng^0,c
  1872  002458  0E7D               	movlw	high STR_16
  1873  00245A  6E0A               	movwf	(print_string@strng+1)^0,c
  1874  00245C  EC66  F014         	call	_print_string	;wreg free
  1875  002460                     l4477:
  1876  002460  FFFF               	dw	65535	; assembler added errata NOP
  1877  002462  5072               	movf	_New_char_RX^0,w,c
  1878  002464  B4D8               	btfsc	status,2,c
  1879  002466  EF37  F012         	goto	u5521
  1880  00246A  EF3A  F012         	goto	u5520
  1881  00246E                     u5521:
  1882  00246E  FFFF               	dw	65535	; assembler added errata NOP
  1883  002470  EF30  F012         	goto	l4477
  1884  002474                     u5520:
  1885  002474  FFFF               	dw	65535	; assembler added errata NOP
  1886  002476  EFC7  F011         	goto	l4447
  1887  00247A                     l4479:
  1888  00247A  FFFF               	dw	65535	; assembler added errata NOP
  1889                           
  1890                           ;main.c: 376:     New_char_RX=0;
  1891  00247C  0E00               	movlw	0
  1892  00247E  6E72               	movwf	_New_char_RX^0,c
  1893  002480  0012               	return		;funcret
  1894  002482  FFFF               	dw	65535	; errata NOP
  1895  002484                     __end_of_remove_component:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _strrchr *****************
  1899 ;; Defined at:
  1900 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  s               2   21[COMRAM] PTR const unsigned char 
  1903 ;;		 -> sequence(4), 
  1904 ;;  c               2   23[COMRAM] int 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  2   21[COMRAM] PTR unsigned char 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1916 ;;      Params:         4       0       0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0
  1919 ;;      Totals:         4       0       0       0       0       0       0
  1920 ;;Total ram usage:        4 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 2
  1923 ;; This function calls:
  1924 ;;		___memrchr
  1925 ;;		_strlen
  1926 ;; This function is called by:
  1927 ;;		_remove_component
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text3
  1932  002CD4                     __ptext3:
  1933                           	callstack 0
  1934  002CD4                     _strrchr:
  1935                           	callstack 0
  1936  002CD4  FFFF               	dw	65535	; assembler added errata NOP
  1937  002CD6  C016  F00C         	movff	strrchr@s,___memrchr@m
  1938  002CDA  C017  F00D         	movff	strrchr@s+1,___memrchr@m+1
  1939  002CDE  C018  F00E         	movff	strrchr@c,___memrchr@c
  1940  002CE2  C019  F00F         	movff	strrchr@c+1,___memrchr@c+1
  1941  002CE6  C016  F008         	movff	strrchr@s,strlen@s
  1942  002CEA  C017  F009         	movff	strrchr@s+1,strlen@s+1
  1943  002CEE  ECE7  F015         	call	_strlen	;wreg free
  1944  002CF2  0E01               	movlw	1
  1945  002CF4  2408               	addwf	?_strlen^0,w,c
  1946  002CF6  6E10               	movwf	___memrchr@n^0,c
  1947  002CF8  0E00               	movlw	0
  1948  002CFA  2009               	addwfc	(?_strlen+1)^0,w,c
  1949  002CFC  6E11               	movwf	(___memrchr@n+1)^0,c
  1950  002CFE  ECF0  F014         	call	___memrchr	;wreg free
  1951  002D02  C00C  F016         	movff	?___memrchr,?_strrchr
  1952  002D06  C00D  F017         	movff	?___memrchr+1,?_strrchr+1
  1953  002D0A  0012               	return		;funcret
  1954  002D0C  FFFF               	dw	65535	; errata NOP
  1955  002D0E                     __end_of_strrchr:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function ___memrchr *****************
  1959 ;; Defined at:
  1960 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  m               2   11[COMRAM] PTR const void 
  1963 ;;		 -> sequence(4), 
  1964 ;;  c               2   13[COMRAM] int 
  1965 ;;  n               2   15[COMRAM] unsigned int 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  s               2   19[COMRAM] PTR const unsigned char 
  1968 ;;		 -> sequence(4), 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2   11[COMRAM] PTR void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1978 ;;      Params:         6       0       0       0       0       0       0
  1979 ;;      Locals:         2       0       0       0       0       0       0
  1980 ;;      Temps:          2       0       0       0       0       0       0
  1981 ;;      Totals:        10       0       0       0       0       0       0
  1982 ;;Total ram usage:       10 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 1
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_strrchr
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text4
  1993  0029E0                     __ptext4:
  1994                           	callstack 0
  1995  0029E0                     ___memrchr:
  1996                           	callstack 0
  1997  0029E0  FFFF               	dw	65535	; assembler added errata NOP
  1998  0029E2  C00C  F014         	movff	___memrchr@m,___memrchr@s
  1999  0029E6  C00D  F015         	movff	___memrchr@m+1,___memrchr@s+1
  2000  0029EA  C00E  F00E         	movff	___memrchr@c,___memrchr@c
  2001  0029EE  6A0F               	clrf	(___memrchr@c+1)^0,c
  2002  0029F0  EF1A  F015         	goto	l3811
  2003  0029F4                     l3805:
  2004  0029F4  FFFF               	dw	65535	; assembler added errata NOP
  2005  0029F6  5010               	movf	___memrchr@n^0,w,c
  2006  0029F8  2414               	addwf	___memrchr@s^0,w,c
  2007  0029FA  6ED9               	movwf	fsr2l,c
  2008  0029FC  5011               	movf	(___memrchr@n+1)^0,w,c
  2009  0029FE  2015               	addwfc	(___memrchr@s+1)^0,w,c
  2010  002A00  6EDA               	movwf	fsr2h,c
  2011  002A02  50DF               	movf	indf2,w,c
  2012  002A04  6E12               	movwf	??___memrchr^0,c
  2013  002A06  6A13               	clrf	(??___memrchr+1)^0,c
  2014  002A08  500E               	movf	___memrchr@c^0,w,c
  2015  002A0A  1812               	xorwf	??___memrchr^0,w,c
  2016  002A0C  E107               	bnz	u4311
  2017  002A0E  500F               	movf	(___memrchr@c+1)^0,w,c
  2018  002A10  1813               	xorwf	(??___memrchr+1)^0,w,c
  2019  002A12  A4D8               	btfss	status,2,c
  2020  002A14  EF0E  F015         	goto	u4311
  2021  002A18  EF11  F015         	goto	u4310
  2022  002A1C                     u4311:
  2023  002A1C  FFFF               	dw	65535	; assembler added errata NOP
  2024  002A1E  EF1A  F015         	goto	l3811
  2025  002A22                     u4310:
  2026  002A22  FFFF               	dw	65535	; assembler added errata NOP
  2027  002A24  5010               	movf	___memrchr@n^0,w,c
  2028  002A26  2414               	addwf	___memrchr@s^0,w,c
  2029  002A28  6E0C               	movwf	?___memrchr^0,c
  2030  002A2A  5011               	movf	(___memrchr@n+1)^0,w,c
  2031  002A2C  2015               	addwfc	(___memrchr@s+1)^0,w,c
  2032  002A2E  6E0D               	movwf	(?___memrchr+1)^0,c
  2033  002A30  EF2E  F015         	goto	l1162
  2034  002A34                     l3811:
  2035  002A34  FFFF               	dw	65535	; assembler added errata NOP
  2036  002A36  0610               	decf	___memrchr@n^0,f,c
  2037  002A38  A0D8               	btfss	status,0,c
  2038  002A3A  0611               	decf	(___memrchr@n+1)^0,f,c
  2039  002A3C  2810               	incf	___memrchr@n^0,w,c
  2040  002A3E  E106               	bnz	u4321
  2041  002A40  2811               	incf	(___memrchr@n+1)^0,w,c
  2042  002A42  A4D8               	btfss	status,2,c
  2043  002A44  EF26  F015         	goto	u4321
  2044  002A48  EF29  F015         	goto	u4320
  2045  002A4C                     u4321:
  2046  002A4C  FFFF               	dw	65535	; assembler added errata NOP
  2047  002A4E  EFFA  F014         	goto	l3805
  2048  002A52                     u4320:
  2049  002A52  FFFF               	dw	65535	; assembler added errata NOP
  2050  002A54  0E00               	movlw	0
  2051  002A56  6E0C               	movwf	?___memrchr^0,c
  2052  002A58  0E00               	movlw	0
  2053  002A5A  6E0D               	movwf	(?___memrchr+1)^0,c
  2054  002A5C                     l1162:
  2055  002A5C  FFFF               	dw	65535	; assembler added errata NOP
  2056  002A5E  0012               	return		;funcret
  2057  002A60  FFFF               	dw	65535	; errata NOP
  2058  002A62                     __end_of___memrchr:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _memmove *****************
  2062 ;; Defined at:
  2063 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  d1              2   11[COMRAM] PTR void 
  2066 ;;		 -> sequence(4), 
  2067 ;;  s1              2   13[COMRAM] PTR const void 
  2068 ;;		 -> sequence(4), 
  2069 ;;  n               2   15[COMRAM] unsigned int 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2072 ;;		 -> sequence(4), 
  2073 ;;  d               2   19[COMRAM] PTR unsigned char 
  2074 ;;		 -> sequence(4), 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  2   11[COMRAM] PTR void 
  2077 ;; Registers used:
  2078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2084 ;;      Params:         6       0       0       0       0       0       0
  2085 ;;      Locals:         4       0       0       0       0       0       0
  2086 ;;      Temps:          2       0       0       0       0       0       0
  2087 ;;      Totals:        12       0       0       0       0       0       0
  2088 ;;Total ram usage:       12 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_remove_component
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text5
  2099  002484                     __ptext5:
  2100                           	callstack 0
  2101  002484                     _memmove:
  2102                           	callstack 0
  2103  002484  FFFF               	dw	65535	; assembler added errata NOP
  2104  002486  C00E  F016         	movff	memmove@s1,memmove@s
  2105  00248A  C00F  F017         	movff	memmove@s1+1,memmove@s+1
  2106  00248E  C00C  F014         	movff	memmove@d1,memmove@d
  2107  002492  C00D  F015         	movff	memmove@d1+1,memmove@d+1
  2108  002496  5014               	movf	memmove@d^0,w,c
  2109  002498  5C16               	subwf	memmove@s^0,w,c
  2110  00249A  5015               	movf	(memmove@d+1)^0,w,c
  2111  00249C  5817               	subwfb	(memmove@s+1)^0,w,c
  2112  00249E  B0D8               	btfsc	status,0,c
  2113  0024A0  EF54  F012         	goto	u4451
  2114  0024A4  EF57  F012         	goto	u4450
  2115  0024A8                     u4451:
  2116  0024A8  FFFF               	dw	65535	; assembler added errata NOP
  2117  0024AA  EF94  F012         	goto	l3903
  2118  0024AE                     u4450:
  2119  0024AE  FFFF               	dw	65535	; assembler added errata NOP
  2120  0024B0  5010               	movf	memmove@n^0,w,c
  2121  0024B2  2416               	addwf	memmove@s^0,w,c
  2122  0024B4  6E12               	movwf	??_memmove^0,c
  2123  0024B6  5011               	movf	(memmove@n+1)^0,w,c
  2124  0024B8  2017               	addwfc	(memmove@s+1)^0,w,c
  2125  0024BA  6E13               	movwf	(??_memmove+1)^0,c
  2126  0024BC  5012               	movf	??_memmove^0,w,c
  2127  0024BE  5C14               	subwf	memmove@d^0,w,c
  2128  0024C0  5013               	movf	(??_memmove+1)^0,w,c
  2129  0024C2  5815               	subwfb	(memmove@d+1)^0,w,c
  2130  0024C4  B0D8               	btfsc	status,0,c
  2131  0024C6  EF67  F012         	goto	u4461
  2132  0024CA  EF6A  F012         	goto	u4460
  2133  0024CE                     u4461:
  2134  0024CE  FFFF               	dw	65535	; assembler added errata NOP
  2135  0024D0  EF94  F012         	goto	l3903
  2136  0024D4                     u4460:
  2137  0024D4  FFFF               	dw	65535	; assembler added errata NOP
  2138  0024D6  5010               	movf	memmove@n^0,w,c
  2139  0024D8  2616               	addwf	memmove@s^0,f,c
  2140  0024DA  5011               	movf	(memmove@n+1)^0,w,c
  2141  0024DC  2217               	addwfc	(memmove@s+1)^0,f,c
  2142  0024DE  5010               	movf	memmove@n^0,w,c
  2143  0024E0  2614               	addwf	memmove@d^0,f,c
  2144  0024E2  5011               	movf	(memmove@n+1)^0,w,c
  2145  0024E4  2215               	addwfc	(memmove@d+1)^0,f,c
  2146  0024E6                     l3899:
  2147  0024E6  FFFF               	dw	65535	; assembler added errata NOP
  2148  0024E8  0616               	decf	memmove@s^0,f,c
  2149  0024EA  A0D8               	btfss	status,0,c
  2150  0024EC  0617               	decf	(memmove@s+1)^0,f,c
  2151  0024EE  C016  FFD9         	movff	memmove@s,fsr2l
  2152  0024F2  C017  FFDA         	movff	memmove@s+1,fsr2h
  2153  0024F6  0614               	decf	memmove@d^0,f,c
  2154  0024F8  A0D8               	btfss	status,0,c
  2155  0024FA  0615               	decf	(memmove@d+1)^0,f,c
  2156  0024FC  C014  FFE1         	movff	memmove@d,fsr1l
  2157  002500  C015  FFE2         	movff	memmove@d+1,fsr1h
  2158  002504  CFDF FFE7          	movff	indf2,indf1
  2159  002508  0610               	decf	memmove@n^0,f,c
  2160  00250A  A0D8               	btfss	status,0,c
  2161  00250C  0611               	decf	(memmove@n+1)^0,f,c
  2162  00250E  5010               	movf	memmove@n^0,w,c
  2163  002510  1011               	iorwf	(memmove@n+1)^0,w,c
  2164  002512  A4D8               	btfss	status,2,c
  2165  002514  EF8E  F012         	goto	u4471
  2166  002518  EF91  F012         	goto	u4470
  2167  00251C                     u4471:
  2168  00251C  FFFF               	dw	65535	; assembler added errata NOP
  2169  00251E  EF73  F012         	goto	l3899
  2170  002522                     u4470:
  2171  002522  FFFF               	dw	65535	; assembler added errata NOP
  2172  002524  EFBC  F012         	goto	l1118
  2173  002528                     l3903:
  2174  002528  FFFF               	dw	65535	; assembler added errata NOP
  2175  00252A  5010               	movf	memmove@n^0,w,c
  2176  00252C  1011               	iorwf	(memmove@n+1)^0,w,c
  2177  00252E  B4D8               	btfsc	status,2,c
  2178  002530  EF9C  F012         	goto	u4481
  2179  002534  EF9F  F012         	goto	u4480
  2180  002538                     u4481:
  2181  002538  FFFF               	dw	65535	; assembler added errata NOP
  2182  00253A  EFBC  F012         	goto	l1118
  2183  00253E                     u4480:
  2184  00253E  FFFF               	dw	65535	; assembler added errata NOP
  2185  002540                     l3905:
  2186  002540  FFFF               	dw	65535	; assembler added errata NOP
  2187  002542  C016  FFD9         	movff	memmove@s,fsr2l
  2188  002546  C017  FFDA         	movff	memmove@s+1,fsr2h
  2189  00254A  C014  FFE1         	movff	memmove@d,fsr1l
  2190  00254E  C015  FFE2         	movff	memmove@d+1,fsr1h
  2191  002552  CFDF FFE7          	movff	indf2,indf1
  2192  002556  4A16               	infsnz	memmove@s^0,f,c
  2193  002558  2A17               	incf	(memmove@s+1)^0,f,c
  2194  00255A  4A14               	infsnz	memmove@d^0,f,c
  2195  00255C  2A15               	incf	(memmove@d+1)^0,f,c
  2196  00255E  0610               	decf	memmove@n^0,f,c
  2197  002560  A0D8               	btfss	status,0,c
  2198  002562  0611               	decf	(memmove@n+1)^0,f,c
  2199  002564  5010               	movf	memmove@n^0,w,c
  2200  002566  1011               	iorwf	(memmove@n+1)^0,w,c
  2201  002568  A4D8               	btfss	status,2,c
  2202  00256A  EFB9  F012         	goto	u4491
  2203  00256E  EFBC  F012         	goto	u4490
  2204  002572                     u4491:
  2205  002572  FFFF               	dw	65535	; assembler added errata NOP
  2206  002574  EFA0  F012         	goto	l3905
  2207  002578                     u4490:
  2208  002578                     l1118:
  2209  002578  FFFF               	dw	65535	; assembler added errata NOP
  2210  00257A  0012               	return		;funcret
  2211  00257C  FFFF               	dw	65535	; errata NOP
  2212  00257E                     __end_of_memmove:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _pick_and_place *****************
  2216 ;; Defined at:
  2217 ;;		line 518 in file "main.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  Componnt        1    wreg     unsigned char 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  Componnt        1   84[COMRAM] unsigned char 
  2222 ;;  i               2   80[COMRAM] int 
  2223 ;;  i               2   76[COMRAM] int 
  2224 ;;  i               2   72[COMRAM] int 
  2225 ;;  i               2   68[COMRAM] int 
  2226 ;;  i               2   64[COMRAM] int 
  2227 ;;  i               2   60[COMRAM] int 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  2   65[None  ] int 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2237 ;;      Params:         0       0       0       0       0       0       0
  2238 ;;      Locals:        25       0       0       0       0       0       0
  2239 ;;      Temps:          2       0       0       0       0       0       0
  2240 ;;      Totals:        27       0       0       0       0       0       0
  2241 ;;Total ram usage:       27 bytes
  2242 ;; Hardware stack levels used: 1
  2243 ;; Hardware stack levels required when called: 3
  2244 ;; This function calls:
  2245 ;;		_Twister
  2246 ;;		_X_axis
  2247 ;;		_Y_axis
  2248 ;;		___fldiv
  2249 ;;		___flge
  2250 ;;		___xxtofl
  2251 ;; This function is called by:
  2252 ;;		_start_up_menu
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text6
  2257  00008C                     __ptext6:
  2258                           	callstack 0
  2259  00008C                     _pick_and_place:
  2260                           	callstack 0
  2261  00008C  FFFF               	dw	65535	; assembler added errata NOP
  2262                           
  2263                           ;incstack = 0
  2264                           ;pick_and_place@Componnt stored from wreg
  2265  00008E  6E55               	movwf	pick_and_place@Componnt^0,c
  2266  000090                     
  2267                           ;main.c: 518: int pick_and_place(char Componnt);main.c: 519: {;main.c: 522:         if(C
      +                          omponnt=='A')
  2268  000090  0E41               	movlw	65
  2269  000092  1855               	xorwf	pick_and_place@Componnt^0,w,c
  2270  000094  A4D8               	btfss	status,2,c
  2271  000096  EF4F  F000         	goto	u5061
  2272  00009A  EF52  F000         	goto	u5060
  2273  00009E                     u5061:
  2274  00009E  FFFF               	dw	65535	; assembler added errata NOP
  2275  0000A0  EF6D  F000         	goto	l4261
  2276  0000A4                     u5060:
  2277  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  2278  0000A6                     
  2279                           ;main.c: 523:         {;main.c: 524:             X_Pick=3;
  2280  0000A6  0E00               	movlw	0
  2281  0000A8  6E6C               	movwf	(_X_Pick+1)^0,c
  2282  0000AA  0E03               	movlw	3
  2283  0000AC  6E6B               	movwf	_X_Pick^0,c
  2284                           
  2285                           ;main.c: 525:             Y_Pick=4;
  2286  0000AE  0E00               	movlw	0
  2287  0000B0  6E68               	movwf	(_Y_Pick+1)^0,c
  2288  0000B2  0E04               	movlw	4
  2289  0000B4  6E67               	movwf	_Y_Pick^0,c
  2290                           
  2291                           ;main.c: 526:             Pick_Angle=0;
  2292  0000B6  0E00               	movlw	0
  2293  0000B8  6E64               	movwf	(_Pick_Angle+1)^0,c
  2294  0000BA  0E00               	movlw	0
  2295  0000BC  6E63               	movwf	_Pick_Angle^0,c
  2296                           
  2297                           ;main.c: 528:             X_Place=17;
  2298  0000BE  0E00               	movlw	0
  2299  0000C0  6E6A               	movwf	(_X_Place+1)^0,c
  2300  0000C2  0E11               	movlw	17
  2301  0000C4  6E69               	movwf	_X_Place^0,c
  2302                           
  2303                           ;main.c: 529:             Y_Place=5;
  2304  0000C6  0E00               	movlw	0
  2305  0000C8  6E66               	movwf	(_Y_Place+1)^0,c
  2306  0000CA  0E05               	movlw	5
  2307  0000CC  6E65               	movwf	_Y_Place^0,c
  2308                           
  2309                           ;main.c: 530:             Place_Angle=270;
  2310  0000CE  0E01               	movlw	1
  2311  0000D0  6E62               	movwf	(_Place_Angle+1)^0,c
  2312  0000D2  0E0E               	movlw	14
  2313  0000D4  6E61               	movwf	_Place_Angle^0,c
  2314                           
  2315                           ;main.c: 531:         }
  2316  0000D6  EFDF  F000         	goto	l4273
  2317  0000DA                     l4261:
  2318  0000DA  FFFF               	dw	65535	; assembler added errata NOP
  2319  0000DC  0E42               	movlw	66
  2320  0000DE  1855               	xorwf	pick_and_place@Componnt^0,w,c
  2321  0000E0  A4D8               	btfss	status,2,c
  2322  0000E2  EF75  F000         	goto	u5071
  2323  0000E6  EF78  F000         	goto	u5070
  2324  0000EA                     u5071:
  2325  0000EA  FFFF               	dw	65535	; assembler added errata NOP
  2326  0000EC  EF93  F000         	goto	l4265
  2327  0000F0                     u5070:
  2328  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  2329  0000F2                     
  2330                           ;main.c: 533:             X_Pick=3;
  2331  0000F2  0E00               	movlw	0
  2332  0000F4  6E6C               	movwf	(_X_Pick+1)^0,c
  2333  0000F6  0E03               	movlw	3
  2334  0000F8  6E6B               	movwf	_X_Pick^0,c
  2335                           
  2336                           ;main.c: 534:             Y_Pick=10;
  2337  0000FA  0E00               	movlw	0
  2338  0000FC  6E68               	movwf	(_Y_Pick+1)^0,c
  2339  0000FE  0E0A               	movlw	10
  2340  000100  6E67               	movwf	_Y_Pick^0,c
  2341                           
  2342                           ;main.c: 535:             Pick_Angle=90;
  2343  000102  0E00               	movlw	0
  2344  000104  6E64               	movwf	(_Pick_Angle+1)^0,c
  2345  000106  0E5A               	movlw	90
  2346  000108  6E63               	movwf	_Pick_Angle^0,c
  2347                           
  2348                           ;main.c: 537:             X_Place=10;
  2349  00010A  0E00               	movlw	0
  2350  00010C  6E6A               	movwf	(_X_Place+1)^0,c
  2351  00010E  0E0A               	movlw	10
  2352  000110  6E69               	movwf	_X_Place^0,c
  2353                           
  2354                           ;main.c: 538:              Y_Place=5;
  2355  000112  0E00               	movlw	0
  2356  000114  6E66               	movwf	(_Y_Place+1)^0,c
  2357  000116  0E05               	movlw	5
  2358  000118  6E65               	movwf	_Y_Place^0,c
  2359                           
  2360                           ;main.c: 539:             Place_Angle=180;
  2361  00011A  0E00               	movlw	0
  2362  00011C  6E62               	movwf	(_Place_Angle+1)^0,c
  2363  00011E  0EB4               	movlw	180
  2364  000120  6E61               	movwf	_Place_Angle^0,c
  2365                           
  2366                           ;main.c: 540:         }
  2367  000122  EFDF  F000         	goto	l4273
  2368  000126                     l4265:
  2369  000126  FFFF               	dw	65535	; assembler added errata NOP
  2370  000128  0E43               	movlw	67
  2371  00012A  1855               	xorwf	pick_and_place@Componnt^0,w,c
  2372  00012C  A4D8               	btfss	status,2,c
  2373  00012E  EF9B  F000         	goto	u5081
  2374  000132  EF9E  F000         	goto	u5080
  2375  000136                     u5081:
  2376  000136  FFFF               	dw	65535	; assembler added errata NOP
  2377  000138  EFB9  F000         	goto	l4269
  2378  00013C                     u5080:
  2379  00013C  FFFF               	dw	65535	; assembler added errata NOP
  2380  00013E                     
  2381                           ;main.c: 542:             X_Pick=3;
  2382  00013E  0E00               	movlw	0
  2383  000140  6E6C               	movwf	(_X_Pick+1)^0,c
  2384  000142  0E03               	movlw	3
  2385  000144  6E6B               	movwf	_X_Pick^0,c
  2386                           
  2387                           ;main.c: 543:             Y_Pick=15;
  2388  000146  0E00               	movlw	0
  2389  000148  6E68               	movwf	(_Y_Pick+1)^0,c
  2390  00014A  0E0F               	movlw	15
  2391  00014C  6E67               	movwf	_Y_Pick^0,c
  2392                           
  2393                           ;main.c: 544:             Pick_Angle=90;
  2394  00014E  0E00               	movlw	0
  2395  000150  6E64               	movwf	(_Pick_Angle+1)^0,c
  2396  000152  0E5A               	movlw	90
  2397  000154  6E63               	movwf	_Pick_Angle^0,c
  2398                           
  2399                           ;main.c: 546:             X_Place=16;
  2400  000156  0E00               	movlw	0
  2401  000158  6E6A               	movwf	(_X_Place+1)^0,c
  2402  00015A  0E10               	movlw	16
  2403  00015C  6E69               	movwf	_X_Place^0,c
  2404                           
  2405                           ;main.c: 547:             Y_Place=14;
  2406  00015E  0E00               	movlw	0
  2407  000160  6E66               	movwf	(_Y_Place+1)^0,c
  2408  000162  0E0E               	movlw	14
  2409  000164  6E65               	movwf	_Y_Place^0,c
  2410                           
  2411                           ;main.c: 548:             Place_Angle=270;
  2412  000166  0E01               	movlw	1
  2413  000168  6E62               	movwf	(_Place_Angle+1)^0,c
  2414  00016A  0E0E               	movlw	14
  2415  00016C  6E61               	movwf	_Place_Angle^0,c
  2416                           
  2417                           ;main.c: 549:         }
  2418  00016E  EFDF  F000         	goto	l4273
  2419  000172                     l4269:
  2420  000172  FFFF               	dw	65535	; assembler added errata NOP
  2421  000174  0E44               	movlw	68
  2422  000176  1855               	xorwf	pick_and_place@Componnt^0,w,c
  2423  000178  A4D8               	btfss	status,2,c
  2424  00017A  EFC1  F000         	goto	u5091
  2425  00017E  EFC4  F000         	goto	u5090
  2426  000182                     u5091:
  2427  000182  FFFF               	dw	65535	; assembler added errata NOP
  2428  000184  EFDF  F000         	goto	l301
  2429  000188                     u5090:
  2430  000188  FFFF               	dw	65535	; assembler added errata NOP
  2431  00018A                     
  2432                           ;main.c: 551:             X_Pick=X_Pick_D;
  2433  00018A  C059  F06B         	movff	_X_Pick_D,_X_Pick
  2434  00018E  C05A  F06C         	movff	_X_Pick_D+1,_X_Pick+1
  2435                           
  2436                           ;main.c: 552:             Y_Pick=Y_Pick_D;
  2437  000192  C0AC  F067         	movff	_Y_Pick_D,_Y_Pick
  2438  000196  C0AD  F068         	movff	_Y_Pick_D+1,_Y_Pick+1
  2439                           
  2440                           ;main.c: 553:             Pick_Angle=Pick_Angle_D;
  2441  00019A  C0AA  F063         	movff	_Pick_Angle_D,_Pick_Angle
  2442  00019E  C0AB  F064         	movff	_Pick_Angle_D+1,_Pick_Angle+1
  2443                           
  2444                           ;main.c: 555:             X_Place=X_Place_D;
  2445  0001A2  C0A8  F069         	movff	_X_Place_D,_X_Place
  2446  0001A6  C0A9  F06A         	movff	_X_Place_D+1,_X_Place+1
  2447                           
  2448                           ;main.c: 556:             Y_Place=Y_Place_D;
  2449  0001AA  C0A6  F065         	movff	_Y_Place_D,_Y_Place
  2450  0001AE  C0A7  F066         	movff	_Y_Place_D+1,_Y_Place+1
  2451                           
  2452                           ;main.c: 557:             Place_Angle=Place_Angle_D;
  2453  0001B2  C0A4  F061         	movff	_Place_Angle_D,_Place_Angle
  2454  0001B6  C0A5  F062         	movff	_Place_Angle_D+1,_Place_Angle+1
  2455                           
  2456                           ;main.c: 558:         }
  2457  0001BA  EFDF  F000         	goto	l4273
  2458  0001BE                     l301:
  2459  0001BE                     l4273:
  2460  0001BE  FFFF               	dw	65535	; assembler added errata NOP
  2461                           
  2462                           ;main.c: 563:         X_dir=((X_diff<X_Pick)? 1:0);
  2463  0001C0  506B               	movf	_X_Pick^0,w,c
  2464  0001C2  5C5F               	subwf	_X_diff^0,w,c
  2465  0001C4  5060               	movf	(_X_diff+1)^0,w,c
  2466  0001C6  0A80               	xorlw	128
  2467  0001C8  6E3B               	movwf	??_pick_and_place^0,c
  2468  0001CA  506C               	movf	(_X_Pick+1)^0,w,c
  2469  0001CC  0A80               	xorlw	128
  2470  0001CE  583B               	subwfb	??_pick_and_place^0,w,c
  2471  0001D0  A0D8               	btfss	status,0,c
  2472  0001D2  EFED  F000         	goto	u5101
  2473  0001D6  EFF1  F000         	goto	u5100
  2474  0001DA                     u5101:
  2475  0001DA  FFFF               	dw	65535	; assembler added errata NOP
  2476  0001DC  0E01               	movlw	1
  2477  0001DE  EFF3  F000         	goto	u5110
  2478  0001E2                     u5100:
  2479  0001E2  FFFF               	dw	65535	; assembler added errata NOP
  2480  0001E4  0E00               	movlw	0
  2481  0001E6                     u5110:
  2482  0001E6  FFFF               	dw	65535	; assembler added errata NOP
  2483  0001E8  6E70               	movwf	_X_dir^0,c
  2484                           
  2485                           ;main.c: 564:         Y_dir=((Y_diff<Y_Pick)? 1:0);
  2486  0001EA  5067               	movf	_Y_Pick^0,w,c
  2487  0001EC  5C5D               	subwf	_Y_diff^0,w,c
  2488  0001EE  505E               	movf	(_Y_diff+1)^0,w,c
  2489  0001F0  0A80               	xorlw	128
  2490  0001F2  6E3B               	movwf	??_pick_and_place^0,c
  2491  0001F4  5068               	movf	(_Y_Pick+1)^0,w,c
  2492  0001F6  0A80               	xorlw	128
  2493  0001F8  583B               	subwfb	??_pick_and_place^0,w,c
  2494  0001FA  A0D8               	btfss	status,0,c
  2495  0001FC  EF02  F001         	goto	u5121
  2496  000200  EF06  F001         	goto	u5120
  2497  000204                     u5121:
  2498  000204  FFFF               	dw	65535	; assembler added errata NOP
  2499  000206  0E01               	movlw	1
  2500  000208  EF08  F001         	goto	u5130
  2501  00020C                     u5120:
  2502  00020C  FFFF               	dw	65535	; assembler added errata NOP
  2503  00020E  0E00               	movlw	0
  2504  000210                     u5130:
  2505  000210  FFFF               	dw	65535	; assembler added errata NOP
  2506  000212  6E6F               	movwf	_Y_dir^0,c
  2507                           
  2508                           ;main.c: 565:         Rot_dir=((Angle_diff<Pick_Angle)? 1:0);
  2509  000214  5063               	movf	_Pick_Angle^0,w,c
  2510  000216  5C5B               	subwf	_Angle_diff^0,w,c
  2511  000218  505C               	movf	(_Angle_diff+1)^0,w,c
  2512  00021A  0A80               	xorlw	128
  2513  00021C  6E3B               	movwf	??_pick_and_place^0,c
  2514  00021E  5064               	movf	(_Pick_Angle+1)^0,w,c
  2515  000220  0A80               	xorlw	128
  2516  000222  583B               	subwfb	??_pick_and_place^0,w,c
  2517  000224  A0D8               	btfss	status,0,c
  2518  000226  EF17  F001         	goto	u5141
  2519  00022A  EF1B  F001         	goto	u5140
  2520  00022E                     u5141:
  2521  00022E  FFFF               	dw	65535	; assembler added errata NOP
  2522  000230  0E01               	movlw	1
  2523  000232  EF1D  F001         	goto	u5150
  2524  000236                     u5140:
  2525  000236  FFFF               	dw	65535	; assembler added errata NOP
  2526  000238  0E00               	movlw	0
  2527  00023A                     u5150:
  2528  00023A  FFFF               	dw	65535	; assembler added errata NOP
  2529  00023C  6E6E               	movwf	_Rot_dir^0,c
  2530  00023E                     
  2531                           ;main.c: 567:         for(int i = 0; (i<(((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_Pi
      +                          ck-X_diff)))) && !stop; i++){X_axis(X_dir);}
  2532  00023E  0E00               	movlw	0
  2533  000240  6E3E               	movwf	(pick_and_place@i+1)^0,c
  2534  000242  0E00               	movlw	0
  2535  000244  6E3D               	movwf	pick_and_place@i^0,c
  2536  000246  EF2B  F001         	goto	l4281
  2537  00024A                     l4277:
  2538  00024A  FFFF               	dw	65535	; assembler added errata NOP
  2539  00024C  5070               	movf	_X_dir^0,w,c
  2540  00024E  EC38  F013         	call	_X_axis
  2541  000252  4A3D               	infsnz	pick_and_place@i^0,f,c
  2542  000254  2A3E               	incf	(pick_and_place@i+1)^0,f,c
  2543  000256                     l4281:
  2544  000256  FFFF               	dw	65535	; assembler added errata NOP
  2545  000258  505F               	movf	_X_diff^0,w,c
  2546  00025A  5C6B               	subwf	_X_Pick^0,w,c
  2547  00025C  6E3B               	movwf	??_pick_and_place^0,c
  2548  00025E  5060               	movf	(_X_diff+1)^0,w,c
  2549  000260  586C               	subwfb	(_X_Pick+1)^0,w,c
  2550  000262  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2551  000264  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2552  000266  EF40  F001         	goto	u5160
  2553  00026A  503C               	movf	(??_pick_and_place+1)^0,w,c
  2554  00026C  E106               	bnz	u5161
  2555  00026E  043B               	decf	??_pick_and_place^0,w,c
  2556  000270  B0D8               	btfsc	status,0,c
  2557  000272  EF3D  F001         	goto	u5161
  2558  000276  EF40  F001         	goto	u5160
  2559  00027A                     u5161:
  2560  00027A  FFFF               	dw	65535	; assembler added errata NOP
  2561  00027C  EF51  F001         	goto	l4285
  2562  000280                     u5160:
  2563  000280  FFFF               	dw	65535	; assembler added errata NOP
  2564  000282  505F               	movf	_X_diff^0,w,c
  2565  000284  5C6B               	subwf	_X_Pick^0,w,c
  2566  000286  6E3B               	movwf	??_pick_and_place^0,c
  2567  000288  5060               	movf	(_X_diff+1)^0,w,c
  2568  00028A  586C               	subwfb	(_X_Pick+1)^0,w,c
  2569  00028C  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2570  00028E  1E3B               	comf	??_pick_and_place^0,f,c
  2571  000290  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2572  000292  4A3B               	infsnz	??_pick_and_place^0,f,c
  2573  000294  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2574  000296  C03B  F03F         	movff	??_pick_and_place,_pick_and_place$575
  2575  00029A  C03C  F040         	movff	??_pick_and_place+1,_pick_and_place$575+1
  2576  00029E  EF58  F001         	goto	l313
  2577  0002A2                     l4285:
  2578  0002A2  FFFF               	dw	65535	; assembler added errata NOP
  2579  0002A4  505F               	movf	_X_diff^0,w,c
  2580  0002A6  5C6B               	subwf	_X_Pick^0,w,c
  2581  0002A8  6E3F               	movwf	_pick_and_place$575^0,c
  2582  0002AA  5060               	movf	(_X_diff+1)^0,w,c
  2583  0002AC  586C               	subwfb	(_X_Pick+1)^0,w,c
  2584  0002AE  6E40               	movwf	(_pick_and_place$575+1)^0,c
  2585  0002B0                     l313:
  2586  0002B0  FFFF               	dw	65535	; assembler added errata NOP
  2587  0002B2  503F               	movf	_pick_and_place$575^0,w,c
  2588  0002B4  5C3D               	subwf	pick_and_place@i^0,w,c
  2589  0002B6  503E               	movf	(pick_and_place@i+1)^0,w,c
  2590  0002B8  0A80               	xorlw	128
  2591  0002BA  6E3B               	movwf	??_pick_and_place^0,c
  2592  0002BC  5040               	movf	(_pick_and_place$575+1)^0,w,c
  2593  0002BE  0A80               	xorlw	128
  2594  0002C0  583B               	subwfb	??_pick_and_place^0,w,c
  2595  0002C2  B0D8               	btfsc	status,0,c
  2596  0002C4  EF66  F001         	goto	u5171
  2597  0002C8  EF69  F001         	goto	u5170
  2598  0002CC                     u5171:
  2599  0002CC  FFFF               	dw	65535	; assembler added errata NOP
  2600  0002CE  EF73  F001         	goto	l4289
  2601  0002D2                     u5170:
  2602  0002D2  FFFF               	dw	65535	; assembler added errata NOP
  2603  0002D4  5071               	movf	_stop^0,w,c
  2604  0002D6  B4D8               	btfsc	status,2,c
  2605  0002D8  EF70  F001         	goto	u5181
  2606  0002DC  EF73  F001         	goto	u5180
  2607  0002E0                     u5181:
  2608  0002E0  FFFF               	dw	65535	; assembler added errata NOP
  2609  0002E2  EF25  F001         	goto	l4277
  2610  0002E6                     u5180:
  2611  0002E6                     l4289:
  2612  0002E6  FFFF               	dw	65535	; assembler added errata NOP
  2613                           
  2614                           ;main.c: 568:         for(int i = 0; (i<(((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_Pi
      +                          ck-Y_diff)))) && !stop; i++){Y_axis(Y_dir);}
  2615  0002E8  0E00               	movlw	0
  2616  0002EA  6E42               	movwf	(pick_and_place@i_576+1)^0,c
  2617  0002EC  0E00               	movlw	0
  2618  0002EE  6E41               	movwf	pick_and_place@i_576^0,c
  2619  0002F0  EF80  F001         	goto	l4295
  2620  0002F4                     l4291:
  2621  0002F4  FFFF               	dw	65535	; assembler added errata NOP
  2622  0002F6  506F               	movf	_Y_dir^0,w,c
  2623  0002F8  ECBF  F012         	call	_Y_axis
  2624  0002FC  4A41               	infsnz	pick_and_place@i_576^0,f,c
  2625  0002FE  2A42               	incf	(pick_and_place@i_576+1)^0,f,c
  2626  000300                     l4295:
  2627  000300  FFFF               	dw	65535	; assembler added errata NOP
  2628  000302  505D               	movf	_Y_diff^0,w,c
  2629  000304  5C67               	subwf	_Y_Pick^0,w,c
  2630  000306  6E3B               	movwf	??_pick_and_place^0,c
  2631  000308  505E               	movf	(_Y_diff+1)^0,w,c
  2632  00030A  5868               	subwfb	(_Y_Pick+1)^0,w,c
  2633  00030C  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2634  00030E  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2635  000310  EF95  F001         	goto	u5190
  2636  000314  503C               	movf	(??_pick_and_place+1)^0,w,c
  2637  000316  E106               	bnz	u5191
  2638  000318  043B               	decf	??_pick_and_place^0,w,c
  2639  00031A  B0D8               	btfsc	status,0,c
  2640  00031C  EF92  F001         	goto	u5191
  2641  000320  EF95  F001         	goto	u5190
  2642  000324                     u5191:
  2643  000324  FFFF               	dw	65535	; assembler added errata NOP
  2644  000326  EFA6  F001         	goto	l4299
  2645  00032A                     u5190:
  2646  00032A  FFFF               	dw	65535	; assembler added errata NOP
  2647  00032C  505D               	movf	_Y_diff^0,w,c
  2648  00032E  5C67               	subwf	_Y_Pick^0,w,c
  2649  000330  6E3B               	movwf	??_pick_and_place^0,c
  2650  000332  505E               	movf	(_Y_diff+1)^0,w,c
  2651  000334  5868               	subwfb	(_Y_Pick+1)^0,w,c
  2652  000336  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2653  000338  1E3B               	comf	??_pick_and_place^0,f,c
  2654  00033A  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2655  00033C  4A3B               	infsnz	??_pick_and_place^0,f,c
  2656  00033E  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2657  000340  C03B  F043         	movff	??_pick_and_place,_pick_and_place$578
  2658  000344  C03C  F044         	movff	??_pick_and_place+1,_pick_and_place$578+1
  2659  000348  EFAD  F001         	goto	l322
  2660  00034C                     l4299:
  2661  00034C  FFFF               	dw	65535	; assembler added errata NOP
  2662  00034E  505D               	movf	_Y_diff^0,w,c
  2663  000350  5C67               	subwf	_Y_Pick^0,w,c
  2664  000352  6E43               	movwf	_pick_and_place$578^0,c
  2665  000354  505E               	movf	(_Y_diff+1)^0,w,c
  2666  000356  5868               	subwfb	(_Y_Pick+1)^0,w,c
  2667  000358  6E44               	movwf	(_pick_and_place$578+1)^0,c
  2668  00035A                     l322:
  2669  00035A  FFFF               	dw	65535	; assembler added errata NOP
  2670  00035C  5043               	movf	_pick_and_place$578^0,w,c
  2671  00035E  5C41               	subwf	pick_and_place@i_576^0,w,c
  2672  000360  5042               	movf	(pick_and_place@i_576+1)^0,w,c
  2673  000362  0A80               	xorlw	128
  2674  000364  6E3B               	movwf	??_pick_and_place^0,c
  2675  000366  5044               	movf	(_pick_and_place$578+1)^0,w,c
  2676  000368  0A80               	xorlw	128
  2677  00036A  583B               	subwfb	??_pick_and_place^0,w,c
  2678  00036C  B0D8               	btfsc	status,0,c
  2679  00036E  EFBB  F001         	goto	u5201
  2680  000372  EFBE  F001         	goto	u5200
  2681  000376                     u5201:
  2682  000376  FFFF               	dw	65535	; assembler added errata NOP
  2683  000378  EFC8  F001         	goto	l4303
  2684  00037C                     u5200:
  2685  00037C  FFFF               	dw	65535	; assembler added errata NOP
  2686  00037E  5071               	movf	_stop^0,w,c
  2687  000380  B4D8               	btfsc	status,2,c
  2688  000382  EFC5  F001         	goto	u5211
  2689  000386  EFC8  F001         	goto	u5210
  2690  00038A                     u5211:
  2691  00038A  FFFF               	dw	65535	; assembler added errata NOP
  2692  00038C  EF7A  F001         	goto	l4291
  2693  000390                     u5210:
  2694  000390                     l4303:
  2695  000390  FFFF               	dw	65535	; assembler added errata NOP
  2696                           
  2697                           ;main.c: 569:         for(int i = 0; (i<(((Angle_diff-Pick_Angle) > 0 ? (Angle_diff-Pick
      +                          _Angle) : -(Angle_diff-Pick_Angle))/3.6)) && !stop; i++){Twister(Rot_dir);}
  2698  000392  0E00               	movlw	0
  2699  000394  6E46               	movwf	(pick_and_place@i_579+1)^0,c
  2700  000396  0E00               	movlw	0
  2701  000398  6E45               	movwf	pick_and_place@i_579^0,c
  2702  00039A  EFD5  F001         	goto	l4309
  2703  00039E                     l4305:
  2704  00039E  FFFF               	dw	65535	; assembler added errata NOP
  2705  0003A0  506E               	movf	_Rot_dir^0,w,c
  2706  0003A2  ECB1  F013         	call	_Twister
  2707  0003A6  4A45               	infsnz	pick_and_place@i_579^0,f,c
  2708  0003A8  2A46               	incf	(pick_and_place@i_579+1)^0,f,c
  2709  0003AA                     l4309:
  2710  0003AA  FFFF               	dw	65535	; assembler added errata NOP
  2711  0003AC  5063               	movf	_Pick_Angle^0,w,c
  2712  0003AE  5C5B               	subwf	_Angle_diff^0,w,c
  2713  0003B0  6E3B               	movwf	??_pick_and_place^0,c
  2714  0003B2  5064               	movf	(_Pick_Angle+1)^0,w,c
  2715  0003B4  585C               	subwfb	(_Angle_diff+1)^0,w,c
  2716  0003B6  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2717  0003B8  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2718  0003BA  EFEA  F001         	goto	u5220
  2719  0003BE  503C               	movf	(??_pick_and_place+1)^0,w,c
  2720  0003C0  E106               	bnz	u5221
  2721  0003C2  043B               	decf	??_pick_and_place^0,w,c
  2722  0003C4  B0D8               	btfsc	status,0,c
  2723  0003C6  EFE7  F001         	goto	u5221
  2724  0003CA  EFEA  F001         	goto	u5220
  2725  0003CE                     u5221:
  2726  0003CE  FFFF               	dw	65535	; assembler added errata NOP
  2727  0003D0  EFFB  F001         	goto	l4313
  2728  0003D4                     u5220:
  2729  0003D4  FFFF               	dw	65535	; assembler added errata NOP
  2730  0003D6  5063               	movf	_Pick_Angle^0,w,c
  2731  0003D8  5C5B               	subwf	_Angle_diff^0,w,c
  2732  0003DA  6E3B               	movwf	??_pick_and_place^0,c
  2733  0003DC  5064               	movf	(_Pick_Angle+1)^0,w,c
  2734  0003DE  585C               	subwfb	(_Angle_diff+1)^0,w,c
  2735  0003E0  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2736  0003E2  1E3B               	comf	??_pick_and_place^0,f,c
  2737  0003E4  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2738  0003E6  4A3B               	infsnz	??_pick_and_place^0,f,c
  2739  0003E8  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2740  0003EA  C03B  F047         	movff	??_pick_and_place,_pick_and_place$581
  2741  0003EE  C03C  F048         	movff	??_pick_and_place+1,_pick_and_place$581+1
  2742  0003F2  EF02  F002         	goto	l4315
  2743  0003F6                     l4313:
  2744  0003F6  FFFF               	dw	65535	; assembler added errata NOP
  2745  0003F8  5063               	movf	_Pick_Angle^0,w,c
  2746  0003FA  5C5B               	subwf	_Angle_diff^0,w,c
  2747  0003FC  6E47               	movwf	_pick_and_place$581^0,c
  2748  0003FE  5064               	movf	(_Pick_Angle+1)^0,w,c
  2749  000400  585C               	subwfb	(_Angle_diff+1)^0,w,c
  2750  000402  6E48               	movwf	(_pick_and_place$581+1)^0,c
  2751  000404                     l4315:
  2752  000404  FFFF               	dw	65535	; assembler added errata NOP
  2753  000406  C045  F008         	movff	pick_and_place@i_579,___xxtofl@val
  2754  00040A  C046  F009         	movff	pick_and_place@i_579+1,___xxtofl@val+1
  2755  00040E  0E00               	movlw	0
  2756  000410  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  2757  000412  0EFF               	movlw	-1
  2758  000414  6E0A               	movwf	(___xxtofl@val+2)^0,c
  2759  000416  6E0B               	movwf	(___xxtofl@val+3)^0,c
  2760  000418  0E01               	movlw	1
  2761  00041A  EC04  F00D         	call	___xxtofl
  2762  00041E  C008  F02F         	movff	?___xxtofl,___flge@ff1
  2763  000422  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
  2764  000426  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
  2765  00042A  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
  2766  00042E  0E66               	movlw	102
  2767  000430  6E1A               	movwf	___fldiv@a^0,c
  2768  000432  0E66               	movlw	102
  2769  000434  6E1B               	movwf	(___fldiv@a+1)^0,c
  2770  000436  0E66               	movlw	102
  2771  000438  6E1C               	movwf	(___fldiv@a+2)^0,c
  2772  00043A  0E40               	movlw	64
  2773  00043C  6E1D               	movwf	(___fldiv@a+3)^0,c
  2774  00043E  C047  F008         	movff	_pick_and_place$581,___xxtofl@val
  2775  000442  C048  F009         	movff	_pick_and_place$581+1,___xxtofl@val+1
  2776  000446  0E00               	movlw	0
  2777  000448  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  2778  00044A  0EFF               	movlw	-1
  2779  00044C  6E0A               	movwf	(___xxtofl@val+2)^0,c
  2780  00044E  6E0B               	movwf	(___xxtofl@val+3)^0,c
  2781  000450  0E01               	movlw	1
  2782  000452  EC04  F00D         	call	___xxtofl
  2783  000456  C008  F016         	movff	?___xxtofl,___fldiv@b
  2784  00045A  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  2785  00045E  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  2786  000462  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  2787  000466  ECF8  F008         	call	___fldiv	;wreg free
  2788  00046A  C016  F033         	movff	?___fldiv,___flge@ff2
  2789  00046E  C017  F034         	movff	?___fldiv+1,___flge@ff2+1
  2790  000472  C018  F035         	movff	?___fldiv+2,___flge@ff2+2
  2791  000476  C019  F036         	movff	?___fldiv+3,___flge@ff2+3
  2792  00047A  EC26  F011         	call	___flge	;wreg free
  2793  00047E  B0D8               	btfsc	status,0,c
  2794  000480  EF44  F002         	goto	u5231
  2795  000484  EF47  F002         	goto	u5230
  2796  000488                     u5231:
  2797  000488  FFFF               	dw	65535	; assembler added errata NOP
  2798  00048A  EF51  F002         	goto	l4319
  2799  00048E                     u5230:
  2800  00048E  FFFF               	dw	65535	; assembler added errata NOP
  2801  000490  5071               	movf	_stop^0,w,c
  2802  000492  B4D8               	btfsc	status,2,c
  2803  000494  EF4E  F002         	goto	u5241
  2804  000498  EF51  F002         	goto	u5240
  2805  00049C                     u5241:
  2806  00049C  FFFF               	dw	65535	; assembler added errata NOP
  2807  00049E  EFCF  F001         	goto	l4305
  2808  0004A2                     u5240:
  2809  0004A2                     l4319:
  2810  0004A2  FFFF               	dw	65535	; assembler added errata NOP
  2811                           
  2812                           ;main.c: 577:         X_dir=((X_Pick<X_Place)? 1:0);
  2813  0004A4  5069               	movf	_X_Place^0,w,c
  2814  0004A6  5C6B               	subwf	_X_Pick^0,w,c
  2815  0004A8  506C               	movf	(_X_Pick+1)^0,w,c
  2816  0004AA  0A80               	xorlw	128
  2817  0004AC  6E3B               	movwf	??_pick_and_place^0,c
  2818  0004AE  506A               	movf	(_X_Place+1)^0,w,c
  2819  0004B0  0A80               	xorlw	128
  2820  0004B2  583B               	subwfb	??_pick_and_place^0,w,c
  2821  0004B4  A0D8               	btfss	status,0,c
  2822  0004B6  EF5F  F002         	goto	u5251
  2823  0004BA  EF63  F002         	goto	u5250
  2824  0004BE                     u5251:
  2825  0004BE  FFFF               	dw	65535	; assembler added errata NOP
  2826  0004C0  0E01               	movlw	1
  2827  0004C2  EF65  F002         	goto	u5260
  2828  0004C6                     u5250:
  2829  0004C6  FFFF               	dw	65535	; assembler added errata NOP
  2830  0004C8  0E00               	movlw	0
  2831  0004CA                     u5260:
  2832  0004CA  FFFF               	dw	65535	; assembler added errata NOP
  2833  0004CC  6E70               	movwf	_X_dir^0,c
  2834                           
  2835                           ;main.c: 578:         Y_dir=((Y_Pick<Y_Place)? 1:0);
  2836  0004CE  5065               	movf	_Y_Place^0,w,c
  2837  0004D0  5C67               	subwf	_Y_Pick^0,w,c
  2838  0004D2  5068               	movf	(_Y_Pick+1)^0,w,c
  2839  0004D4  0A80               	xorlw	128
  2840  0004D6  6E3B               	movwf	??_pick_and_place^0,c
  2841  0004D8  5066               	movf	(_Y_Place+1)^0,w,c
  2842  0004DA  0A80               	xorlw	128
  2843  0004DC  583B               	subwfb	??_pick_and_place^0,w,c
  2844  0004DE  A0D8               	btfss	status,0,c
  2845  0004E0  EF74  F002         	goto	u5271
  2846  0004E4  EF78  F002         	goto	u5270
  2847  0004E8                     u5271:
  2848  0004E8  FFFF               	dw	65535	; assembler added errata NOP
  2849  0004EA  0E01               	movlw	1
  2850  0004EC  EF7A  F002         	goto	u5280
  2851  0004F0                     u5270:
  2852  0004F0  FFFF               	dw	65535	; assembler added errata NOP
  2853  0004F2  0E00               	movlw	0
  2854  0004F4                     u5280:
  2855  0004F4  FFFF               	dw	65535	; assembler added errata NOP
  2856  0004F6  6E6F               	movwf	_Y_dir^0,c
  2857                           
  2858                           ;main.c: 579:         Rot_dir=((Pick_Angle<Place_Angle)? 1:0);
  2859  0004F8  5061               	movf	_Place_Angle^0,w,c
  2860  0004FA  5C63               	subwf	_Pick_Angle^0,w,c
  2861  0004FC  5064               	movf	(_Pick_Angle+1)^0,w,c
  2862  0004FE  0A80               	xorlw	128
  2863  000500  6E3B               	movwf	??_pick_and_place^0,c
  2864  000502  5062               	movf	(_Place_Angle+1)^0,w,c
  2865  000504  0A80               	xorlw	128
  2866  000506  583B               	subwfb	??_pick_and_place^0,w,c
  2867  000508  A0D8               	btfss	status,0,c
  2868  00050A  EF89  F002         	goto	u5291
  2869  00050E  EF8D  F002         	goto	u5290
  2870  000512                     u5291:
  2871  000512  FFFF               	dw	65535	; assembler added errata NOP
  2872  000514  0E01               	movlw	1
  2873  000516  EF8F  F002         	goto	u5300
  2874  00051A                     u5290:
  2875  00051A  FFFF               	dw	65535	; assembler added errata NOP
  2876  00051C  0E00               	movlw	0
  2877  00051E                     u5300:
  2878  00051E  FFFF               	dw	65535	; assembler added errata NOP
  2879  000520  6E6E               	movwf	_Rot_dir^0,c
  2880  000522                     
  2881                           ;main.c: 581:         for(int i = 0; (i<(((X_Place-X_diff) > 0 ? (X_Place-X_diff) : -(X_
      +                          Place-X_diff)))) && !stop; i++){X_axis(X_dir);}
  2882  000522  0E00               	movlw	0
  2883  000524  6E4A               	movwf	(pick_and_place@i_582+1)^0,c
  2884  000526  0E00               	movlw	0
  2885  000528  6E49               	movwf	pick_and_place@i_582^0,c
  2886  00052A  EF9D  F002         	goto	l4327
  2887  00052E                     l4323:
  2888  00052E  FFFF               	dw	65535	; assembler added errata NOP
  2889  000530  5070               	movf	_X_dir^0,w,c
  2890  000532  EC38  F013         	call	_X_axis
  2891  000536  4A49               	infsnz	pick_and_place@i_582^0,f,c
  2892  000538  2A4A               	incf	(pick_and_place@i_582+1)^0,f,c
  2893  00053A                     l4327:
  2894  00053A  FFFF               	dw	65535	; assembler added errata NOP
  2895  00053C  505F               	movf	_X_diff^0,w,c
  2896  00053E  5C69               	subwf	_X_Place^0,w,c
  2897  000540  6E3B               	movwf	??_pick_and_place^0,c
  2898  000542  5060               	movf	(_X_diff+1)^0,w,c
  2899  000544  586A               	subwfb	(_X_Place+1)^0,w,c
  2900  000546  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2901  000548  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2902  00054A  EFB2  F002         	goto	u5310
  2903  00054E  503C               	movf	(??_pick_and_place+1)^0,w,c
  2904  000550  E106               	bnz	u5311
  2905  000552  043B               	decf	??_pick_and_place^0,w,c
  2906  000554  B0D8               	btfsc	status,0,c
  2907  000556  EFAF  F002         	goto	u5311
  2908  00055A  EFB2  F002         	goto	u5310
  2909  00055E                     u5311:
  2910  00055E  FFFF               	dw	65535	; assembler added errata NOP
  2911  000560  EFC3  F002         	goto	l4331
  2912  000564                     u5310:
  2913  000564  FFFF               	dw	65535	; assembler added errata NOP
  2914  000566  505F               	movf	_X_diff^0,w,c
  2915  000568  5C69               	subwf	_X_Place^0,w,c
  2916  00056A  6E3B               	movwf	??_pick_and_place^0,c
  2917  00056C  5060               	movf	(_X_diff+1)^0,w,c
  2918  00056E  586A               	subwfb	(_X_Place+1)^0,w,c
  2919  000570  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2920  000572  1E3B               	comf	??_pick_and_place^0,f,c
  2921  000574  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2922  000576  4A3B               	infsnz	??_pick_and_place^0,f,c
  2923  000578  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2924  00057A  C03B  F04B         	movff	??_pick_and_place,_pick_and_place$583
  2925  00057E  C03C  F04C         	movff	??_pick_and_place+1,_pick_and_place$583+1
  2926  000582  EFCA  F002         	goto	l340
  2927  000586                     l4331:
  2928  000586  FFFF               	dw	65535	; assembler added errata NOP
  2929  000588  505F               	movf	_X_diff^0,w,c
  2930  00058A  5C69               	subwf	_X_Place^0,w,c
  2931  00058C  6E4B               	movwf	_pick_and_place$583^0,c
  2932  00058E  5060               	movf	(_X_diff+1)^0,w,c
  2933  000590  586A               	subwfb	(_X_Place+1)^0,w,c
  2934  000592  6E4C               	movwf	(_pick_and_place$583+1)^0,c
  2935  000594                     l340:
  2936  000594  FFFF               	dw	65535	; assembler added errata NOP
  2937  000596  504B               	movf	_pick_and_place$583^0,w,c
  2938  000598  5C49               	subwf	pick_and_place@i_582^0,w,c
  2939  00059A  504A               	movf	(pick_and_place@i_582+1)^0,w,c
  2940  00059C  0A80               	xorlw	128
  2941  00059E  6E3B               	movwf	??_pick_and_place^0,c
  2942  0005A0  504C               	movf	(_pick_and_place$583+1)^0,w,c
  2943  0005A2  0A80               	xorlw	128
  2944  0005A4  583B               	subwfb	??_pick_and_place^0,w,c
  2945  0005A6  B0D8               	btfsc	status,0,c
  2946  0005A8  EFD8  F002         	goto	u5321
  2947  0005AC  EFDB  F002         	goto	u5320
  2948  0005B0                     u5321:
  2949  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  2950  0005B2  EFE5  F002         	goto	l4335
  2951  0005B6                     u5320:
  2952  0005B6  FFFF               	dw	65535	; assembler added errata NOP
  2953  0005B8  5071               	movf	_stop^0,w,c
  2954  0005BA  B4D8               	btfsc	status,2,c
  2955  0005BC  EFE2  F002         	goto	u5331
  2956  0005C0  EFE5  F002         	goto	u5330
  2957  0005C4                     u5331:
  2958  0005C4  FFFF               	dw	65535	; assembler added errata NOP
  2959  0005C6  EF97  F002         	goto	l4323
  2960  0005CA                     u5330:
  2961  0005CA                     l4335:
  2962  0005CA  FFFF               	dw	65535	; assembler added errata NOP
  2963                           
  2964                           ;main.c: 582:         for(int i = 0; (i<(((Y_Place-Y_diff) > 0 ? (Y_Place-Y_diff) : -(Y_
      +                          Place-Y_diff)))) && !stop; i++){Y_axis(Y_dir);}
  2965  0005CC  0E00               	movlw	0
  2966  0005CE  6E4E               	movwf	(pick_and_place@i_584+1)^0,c
  2967  0005D0  0E00               	movlw	0
  2968  0005D2  6E4D               	movwf	pick_and_place@i_584^0,c
  2969  0005D4  EFF2  F002         	goto	l4341
  2970  0005D8                     l4337:
  2971  0005D8  FFFF               	dw	65535	; assembler added errata NOP
  2972  0005DA  506F               	movf	_Y_dir^0,w,c
  2973  0005DC  ECBF  F012         	call	_Y_axis
  2974  0005E0  4A4D               	infsnz	pick_and_place@i_584^0,f,c
  2975  0005E2  2A4E               	incf	(pick_and_place@i_584+1)^0,f,c
  2976  0005E4                     l4341:
  2977  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  2978  0005E6  505D               	movf	_Y_diff^0,w,c
  2979  0005E8  5C65               	subwf	_Y_Place^0,w,c
  2980  0005EA  6E3B               	movwf	??_pick_and_place^0,c
  2981  0005EC  505E               	movf	(_Y_diff+1)^0,w,c
  2982  0005EE  5866               	subwfb	(_Y_Place+1)^0,w,c
  2983  0005F0  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2984  0005F2  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2985  0005F4  EF07  F003         	goto	u5340
  2986  0005F8  503C               	movf	(??_pick_and_place+1)^0,w,c
  2987  0005FA  E106               	bnz	u5341
  2988  0005FC  043B               	decf	??_pick_and_place^0,w,c
  2989  0005FE  B0D8               	btfsc	status,0,c
  2990  000600  EF04  F003         	goto	u5341
  2991  000604  EF07  F003         	goto	u5340
  2992  000608                     u5341:
  2993  000608  FFFF               	dw	65535	; assembler added errata NOP
  2994  00060A  EF18  F003         	goto	l4345
  2995  00060E                     u5340:
  2996  00060E  FFFF               	dw	65535	; assembler added errata NOP
  2997  000610  505D               	movf	_Y_diff^0,w,c
  2998  000612  5C65               	subwf	_Y_Place^0,w,c
  2999  000614  6E3B               	movwf	??_pick_and_place^0,c
  3000  000616  505E               	movf	(_Y_diff+1)^0,w,c
  3001  000618  5866               	subwfb	(_Y_Place+1)^0,w,c
  3002  00061A  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3003  00061C  1E3B               	comf	??_pick_and_place^0,f,c
  3004  00061E  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3005  000620  4A3B               	infsnz	??_pick_and_place^0,f,c
  3006  000622  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3007  000624  C03B  F04F         	movff	??_pick_and_place,_pick_and_place$585
  3008  000628  C03C  F050         	movff	??_pick_and_place+1,_pick_and_place$585+1
  3009  00062C  EF1F  F003         	goto	l349
  3010  000630                     l4345:
  3011  000630  FFFF               	dw	65535	; assembler added errata NOP
  3012  000632  505D               	movf	_Y_diff^0,w,c
  3013  000634  5C65               	subwf	_Y_Place^0,w,c
  3014  000636  6E4F               	movwf	_pick_and_place$585^0,c
  3015  000638  505E               	movf	(_Y_diff+1)^0,w,c
  3016  00063A  5866               	subwfb	(_Y_Place+1)^0,w,c
  3017  00063C  6E50               	movwf	(_pick_and_place$585+1)^0,c
  3018  00063E                     l349:
  3019  00063E  FFFF               	dw	65535	; assembler added errata NOP
  3020  000640  504F               	movf	_pick_and_place$585^0,w,c
  3021  000642  5C4D               	subwf	pick_and_place@i_584^0,w,c
  3022  000644  504E               	movf	(pick_and_place@i_584+1)^0,w,c
  3023  000646  0A80               	xorlw	128
  3024  000648  6E3B               	movwf	??_pick_and_place^0,c
  3025  00064A  5050               	movf	(_pick_and_place$585+1)^0,w,c
  3026  00064C  0A80               	xorlw	128
  3027  00064E  583B               	subwfb	??_pick_and_place^0,w,c
  3028  000650  B0D8               	btfsc	status,0,c
  3029  000652  EF2D  F003         	goto	u5351
  3030  000656  EF30  F003         	goto	u5350
  3031  00065A                     u5351:
  3032  00065A  FFFF               	dw	65535	; assembler added errata NOP
  3033  00065C  EF3A  F003         	goto	l4349
  3034  000660                     u5350:
  3035  000660  FFFF               	dw	65535	; assembler added errata NOP
  3036  000662  5071               	movf	_stop^0,w,c
  3037  000664  B4D8               	btfsc	status,2,c
  3038  000666  EF37  F003         	goto	u5361
  3039  00066A  EF3A  F003         	goto	u5360
  3040  00066E                     u5361:
  3041  00066E  FFFF               	dw	65535	; assembler added errata NOP
  3042  000670  EFEC  F002         	goto	l4337
  3043  000674                     u5360:
  3044  000674                     l4349:
  3045  000674  FFFF               	dw	65535	; assembler added errata NOP
  3046                           
  3047                           ;main.c: 583:         for(int i = 0; (i<(((Pick_Angle-Place_Angle) > 0 ? (Pick_Angle-Pla
      +                          ce_Angle) : -(Pick_Angle-Place_Angle))/3.6)) && !stop; i++){Twister(Rot_dir);}
  3048  000676  0E00               	movlw	0
  3049  000678  6E52               	movwf	(pick_and_place@i_586+1)^0,c
  3050  00067A  0E00               	movlw	0
  3051  00067C  6E51               	movwf	pick_and_place@i_586^0,c
  3052  00067E  EF47  F003         	goto	l4355
  3053  000682                     l4351:
  3054  000682  FFFF               	dw	65535	; assembler added errata NOP
  3055  000684  506E               	movf	_Rot_dir^0,w,c
  3056  000686  ECB1  F013         	call	_Twister
  3057  00068A  4A51               	infsnz	pick_and_place@i_586^0,f,c
  3058  00068C  2A52               	incf	(pick_and_place@i_586+1)^0,f,c
  3059  00068E                     l4355:
  3060  00068E  FFFF               	dw	65535	; assembler added errata NOP
  3061  000690  5061               	movf	_Place_Angle^0,w,c
  3062  000692  5C63               	subwf	_Pick_Angle^0,w,c
  3063  000694  6E3B               	movwf	??_pick_and_place^0,c
  3064  000696  5062               	movf	(_Place_Angle+1)^0,w,c
  3065  000698  5864               	subwfb	(_Pick_Angle+1)^0,w,c
  3066  00069A  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3067  00069C  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3068  00069E  EF5C  F003         	goto	u5370
  3069  0006A2  503C               	movf	(??_pick_and_place+1)^0,w,c
  3070  0006A4  E106               	bnz	u5371
  3071  0006A6  043B               	decf	??_pick_and_place^0,w,c
  3072  0006A8  B0D8               	btfsc	status,0,c
  3073  0006AA  EF59  F003         	goto	u5371
  3074  0006AE  EF5C  F003         	goto	u5370
  3075  0006B2                     u5371:
  3076  0006B2  FFFF               	dw	65535	; assembler added errata NOP
  3077  0006B4  EF6D  F003         	goto	l4359
  3078  0006B8                     u5370:
  3079  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  3080  0006BA  5061               	movf	_Place_Angle^0,w,c
  3081  0006BC  5C63               	subwf	_Pick_Angle^0,w,c
  3082  0006BE  6E3B               	movwf	??_pick_and_place^0,c
  3083  0006C0  5062               	movf	(_Place_Angle+1)^0,w,c
  3084  0006C2  5864               	subwfb	(_Pick_Angle+1)^0,w,c
  3085  0006C4  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3086  0006C6  1E3B               	comf	??_pick_and_place^0,f,c
  3087  0006C8  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3088  0006CA  4A3B               	infsnz	??_pick_and_place^0,f,c
  3089  0006CC  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3090  0006CE  C03B  F053         	movff	??_pick_and_place,_pick_and_place$587
  3091  0006D2  C03C  F054         	movff	??_pick_and_place+1,_pick_and_place$587+1
  3092  0006D6  EF74  F003         	goto	l4361
  3093  0006DA                     l4359:
  3094  0006DA  FFFF               	dw	65535	; assembler added errata NOP
  3095  0006DC  5061               	movf	_Place_Angle^0,w,c
  3096  0006DE  5C63               	subwf	_Pick_Angle^0,w,c
  3097  0006E0  6E53               	movwf	_pick_and_place$587^0,c
  3098  0006E2  5062               	movf	(_Place_Angle+1)^0,w,c
  3099  0006E4  5864               	subwfb	(_Pick_Angle+1)^0,w,c
  3100  0006E6  6E54               	movwf	(_pick_and_place$587+1)^0,c
  3101  0006E8                     l4361:
  3102  0006E8  FFFF               	dw	65535	; assembler added errata NOP
  3103  0006EA  C051  F008         	movff	pick_and_place@i_586,___xxtofl@val
  3104  0006EE  C052  F009         	movff	pick_and_place@i_586+1,___xxtofl@val+1
  3105  0006F2  0E00               	movlw	0
  3106  0006F4  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3107  0006F6  0EFF               	movlw	-1
  3108  0006F8  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3109  0006FA  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3110  0006FC  0E01               	movlw	1
  3111  0006FE  EC04  F00D         	call	___xxtofl
  3112  000702  C008  F02F         	movff	?___xxtofl,___flge@ff1
  3113  000706  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
  3114  00070A  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
  3115  00070E  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
  3116  000712  0E66               	movlw	102
  3117  000714  6E1A               	movwf	___fldiv@a^0,c
  3118  000716  0E66               	movlw	102
  3119  000718  6E1B               	movwf	(___fldiv@a+1)^0,c
  3120  00071A  0E66               	movlw	102
  3121  00071C  6E1C               	movwf	(___fldiv@a+2)^0,c
  3122  00071E  0E40               	movlw	64
  3123  000720  6E1D               	movwf	(___fldiv@a+3)^0,c
  3124  000722  C053  F008         	movff	_pick_and_place$587,___xxtofl@val
  3125  000726  C054  F009         	movff	_pick_and_place$587+1,___xxtofl@val+1
  3126  00072A  0E00               	movlw	0
  3127  00072C  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3128  00072E  0EFF               	movlw	-1
  3129  000730  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3130  000732  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3131  000734  0E01               	movlw	1
  3132  000736  EC04  F00D         	call	___xxtofl
  3133  00073A  C008  F016         	movff	?___xxtofl,___fldiv@b
  3134  00073E  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  3135  000742  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  3136  000746  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  3137  00074A  ECF8  F008         	call	___fldiv	;wreg free
  3138  00074E  C016  F033         	movff	?___fldiv,___flge@ff2
  3139  000752  C017  F034         	movff	?___fldiv+1,___flge@ff2+1
  3140  000756  C018  F035         	movff	?___fldiv+2,___flge@ff2+2
  3141  00075A  C019  F036         	movff	?___fldiv+3,___flge@ff2+3
  3142  00075E  EC26  F011         	call	___flge	;wreg free
  3143  000762  B0D8               	btfsc	status,0,c
  3144  000764  EFB6  F003         	goto	u5381
  3145  000768  EFB9  F003         	goto	u5380
  3146  00076C                     u5381:
  3147  00076C  FFFF               	dw	65535	; assembler added errata NOP
  3148  00076E  EFC3  F003         	goto	l359
  3149  000772                     u5380:
  3150  000772  FFFF               	dw	65535	; assembler added errata NOP
  3151  000774  5071               	movf	_stop^0,w,c
  3152  000776  B4D8               	btfsc	status,2,c
  3153  000778  EFC0  F003         	goto	u5391
  3154  00077C  EFC3  F003         	goto	u5390
  3155  000780                     u5391:
  3156  000780  FFFF               	dw	65535	; assembler added errata NOP
  3157  000782  EF41  F003         	goto	l4351
  3158  000786                     u5390:
  3159  000786                     l359:
  3160  000786  FFFF               	dw	65535	; assembler added errata NOP
  3161                           
  3162                           ;main.c: 587:         Angle_diff= Place_Angle;
  3163  000788  C061  F05B         	movff	_Place_Angle,_Angle_diff
  3164  00078C  C062  F05C         	movff	_Place_Angle+1,_Angle_diff+1
  3165                           
  3166                           ;main.c: 588:         X_diff = X_Place;
  3167  000790  C069  F05F         	movff	_X_Place,_X_diff
  3168  000794  C06A  F060         	movff	_X_Place+1,_X_diff+1
  3169                           
  3170                           ;main.c: 589:         Y_diff = Y_Place;
  3171  000798  C065  F05D         	movff	_Y_Place,_Y_diff
  3172  00079C  C066  F05E         	movff	_Y_Place+1,_Y_diff+1
  3173  0007A0  0012               	return		;funcret
  3174  0007A2  FFFF               	dw	65535	; errata NOP
  3175  0007A4                     __end_of_pick_and_place:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function ___xxtofl *****************
  3179 ;; Defined at:
  3180 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  sign            1    wreg     unsigned char 
  3183 ;;  val             4    7[COMRAM] long 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  sign            1   15[COMRAM] unsigned char 
  3186 ;;  arg             4   17[COMRAM] unsigned long 
  3187 ;;  exp             1   16[COMRAM] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  4    7[COMRAM] unsigned char 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3197 ;;      Params:         4       0       0       0       0       0       0
  3198 ;;      Locals:         6       0       0       0       0       0       0
  3199 ;;      Temps:          4       0       0       0       0       0       0
  3200 ;;      Totals:        14       0       0       0       0       0       0
  3201 ;;Total ram usage:       14 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; Hardware stack levels required when called: 1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_pick_and_place
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text7
  3212  001A08                     __ptext7:
  3213                           	callstack 0
  3214  001A08                     ___xxtofl:
  3215                           	callstack 0
  3216  001A08  FFFF               	dw	65535	; assembler added errata NOP
  3217                           
  3218                           ;incstack = 0
  3219                           ;___xxtofl@sign stored from wreg
  3220  001A0A  6E10               	movwf	___xxtofl@sign^0,c
  3221  001A0C  5010               	movf	___xxtofl@sign^0,w,c
  3222  001A0E  B4D8               	btfsc	status,2,c
  3223  001A10  EF0C  F00D         	goto	u4871
  3224  001A14  EF0F  F00D         	goto	u4870
  3225  001A18                     u4871:
  3226  001A18  FFFF               	dw	65535	; assembler added errata NOP
  3227  001A1A  EF34  F00D         	goto	l1047
  3228  001A1E                     u4870:
  3229  001A1E  FFFF               	dw	65535	; assembler added errata NOP
  3230  001A20  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  3231  001A22  EF18  F00D         	goto	u4880
  3232  001A26  EF15  F00D         	goto	u4881
  3233  001A2A                     u4881:
  3234  001A2A  FFFF               	dw	65535	; assembler added errata NOP
  3235  001A2C  EF34  F00D         	goto	l1047
  3236  001A30                     u4880:
  3237  001A30  FFFF               	dw	65535	; assembler added errata NOP
  3238  001A32  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  3239  001A36  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  3240  001A3A  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  3241  001A3E  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  3242  001A42  1E0C               	comf	??___xxtofl^0,f,c
  3243  001A44  1E0D               	comf	(??___xxtofl+1)^0,f,c
  3244  001A46  1E0E               	comf	(??___xxtofl+2)^0,f,c
  3245  001A48  1E0F               	comf	(??___xxtofl+3)^0,f,c
  3246  001A4A  2A0C               	incf	??___xxtofl^0,f,c
  3247  001A4C  0E00               	movlw	0
  3248  001A4E  220D               	addwfc	(??___xxtofl+1)^0,f,c
  3249  001A50  220E               	addwfc	(??___xxtofl+2)^0,f,c
  3250  001A52  220F               	addwfc	(??___xxtofl+3)^0,f,c
  3251  001A54  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  3252  001A58  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  3253  001A5C  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  3254  001A60  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  3255  001A64  EF3D  F00D         	goto	l4183
  3256  001A68                     l1047:
  3257  001A68  FFFF               	dw	65535	; assembler added errata NOP
  3258  001A6A  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  3259  001A6E  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3260  001A72  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3261  001A76  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3262  001A7A                     l4183:
  3263  001A7A  FFFF               	dw	65535	; assembler added errata NOP
  3264  001A7C  5008               	movf	___xxtofl@val^0,w,c
  3265  001A7E  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  3266  001A80  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  3267  001A82  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  3268  001A84  A4D8               	btfss	status,2,c
  3269  001A86  EF47  F00D         	goto	u4891
  3270  001A8A  EF4A  F00D         	goto	u4890
  3271  001A8E                     u4891:
  3272  001A8E  FFFF               	dw	65535	; assembler added errata NOP
  3273  001A90  EF55  F00D         	goto	l4189
  3274  001A94                     u4890:
  3275  001A94  FFFF               	dw	65535	; assembler added errata NOP
  3276  001A96  0E00               	movlw	0
  3277  001A98  6E08               	movwf	?___xxtofl^0,c
  3278  001A9A  0E00               	movlw	0
  3279  001A9C  6E09               	movwf	(?___xxtofl+1)^0,c
  3280  001A9E  0E00               	movlw	0
  3281  001AA0  6E0A               	movwf	(?___xxtofl+2)^0,c
  3282  001AA2  0E00               	movlw	0
  3283  001AA4  6E0B               	movwf	(?___xxtofl+3)^0,c
  3284  001AA6  EFFD  F00D         	goto	l1050
  3285  001AAA                     l4189:
  3286  001AAA  FFFF               	dw	65535	; assembler added errata NOP
  3287  001AAC  0E96               	movlw	150
  3288  001AAE  6E11               	movwf	___xxtofl@exp^0,c
  3289  001AB0  EF61  F00D         	goto	l4193
  3290  001AB4                     l4191:
  3291  001AB4  FFFF               	dw	65535	; assembler added errata NOP
  3292  001AB6  2A11               	incf	___xxtofl@exp^0,f,c
  3293  001AB8  90D8               	bcf	status,0,c
  3294  001ABA  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  3295  001ABC  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  3296  001ABE  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  3297  001AC0  3212               	rrcf	___xxtofl@arg^0,f,c
  3298  001AC2                     l4193:
  3299  001AC2  FFFF               	dw	65535	; assembler added errata NOP
  3300  001AC4  0E00               	movlw	0
  3301  001AC6  1412               	andwf	___xxtofl@arg^0,w,c
  3302  001AC8  6E0C               	movwf	??___xxtofl^0,c
  3303  001ACA  0E00               	movlw	0
  3304  001ACC  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  3305  001ACE  6E0D               	movwf	(??___xxtofl+1)^0,c
  3306  001AD0  0E00               	movlw	0
  3307  001AD2  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  3308  001AD4  6E0E               	movwf	(??___xxtofl+2)^0,c
  3309  001AD6  0EFE               	movlw	254
  3310  001AD8  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  3311  001ADA  6E0F               	movwf	(??___xxtofl+3)^0,c
  3312  001ADC  500C               	movf	??___xxtofl^0,w,c
  3313  001ADE  100D               	iorwf	(??___xxtofl+1)^0,w,c
  3314  001AE0  100E               	iorwf	(??___xxtofl+2)^0,w,c
  3315  001AE2  100F               	iorwf	(??___xxtofl+3)^0,w,c
  3316  001AE4  A4D8               	btfss	status,2,c
  3317  001AE6  EF77  F00D         	goto	u4901
  3318  001AEA  EF7A  F00D         	goto	u4900
  3319  001AEE                     u4901:
  3320  001AEE  FFFF               	dw	65535	; assembler added errata NOP
  3321  001AF0  EF5A  F00D         	goto	l4191
  3322  001AF4                     u4900:
  3323  001AF4  FFFF               	dw	65535	; assembler added errata NOP
  3324  001AF6  EF8A  F00D         	goto	l1054
  3325  001AFA                     l4195:
  3326  001AFA  FFFF               	dw	65535	; assembler added errata NOP
  3327  001AFC  2A11               	incf	___xxtofl@exp^0,f,c
  3328  001AFE  0E01               	movlw	1
  3329  001B00  2612               	addwf	___xxtofl@arg^0,f,c
  3330  001B02  0E00               	movlw	0
  3331  001B04  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  3332  001B06  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  3333  001B08  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  3334  001B0A  90D8               	bcf	status,0,c
  3335  001B0C  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  3336  001B0E  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  3337  001B10  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  3338  001B12  3212               	rrcf	___xxtofl@arg^0,f,c
  3339  001B14                     l1054:
  3340  001B14  FFFF               	dw	65535	; assembler added errata NOP
  3341  001B16  0E00               	movlw	0
  3342  001B18  1412               	andwf	___xxtofl@arg^0,w,c
  3343  001B1A  6E0C               	movwf	??___xxtofl^0,c
  3344  001B1C  0E00               	movlw	0
  3345  001B1E  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  3346  001B20  6E0D               	movwf	(??___xxtofl+1)^0,c
  3347  001B22  0E00               	movlw	0
  3348  001B24  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  3349  001B26  6E0E               	movwf	(??___xxtofl+2)^0,c
  3350  001B28  0EFF               	movlw	255
  3351  001B2A  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  3352  001B2C  6E0F               	movwf	(??___xxtofl+3)^0,c
  3353  001B2E  500C               	movf	??___xxtofl^0,w,c
  3354  001B30  100D               	iorwf	(??___xxtofl+1)^0,w,c
  3355  001B32  100E               	iorwf	(??___xxtofl+2)^0,w,c
  3356  001B34  100F               	iorwf	(??___xxtofl+3)^0,w,c
  3357  001B36  A4D8               	btfss	status,2,c
  3358  001B38  EFA0  F00D         	goto	u4911
  3359  001B3C  EFA3  F00D         	goto	u4910
  3360  001B40                     u4911:
  3361  001B40  FFFF               	dw	65535	; assembler added errata NOP
  3362  001B42  EF7D  F00D         	goto	l4195
  3363  001B46                     u4910:
  3364  001B46  FFFF               	dw	65535	; assembler added errata NOP
  3365  001B48  EFAD  F00D         	goto	l4203
  3366  001B4C                     l4201:
  3367  001B4C  FFFF               	dw	65535	; assembler added errata NOP
  3368  001B4E  0611               	decf	___xxtofl@exp^0,f,c
  3369  001B50  90D8               	bcf	status,0,c
  3370  001B52  3612               	rlcf	___xxtofl@arg^0,f,c
  3371  001B54  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  3372  001B56  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  3373  001B58  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  3374  001B5A                     l4203:
  3375  001B5A  FFFF               	dw	65535	; assembler added errata NOP
  3376  001B5C  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  3377  001B5E  EFB3  F00D         	goto	u4921
  3378  001B62  EFB6  F00D         	goto	u4920
  3379  001B66                     u4921:
  3380  001B66  FFFF               	dw	65535	; assembler added errata NOP
  3381  001B68  EFC0  F00D         	goto	l1061
  3382  001B6C                     u4920:
  3383  001B6C  FFFF               	dw	65535	; assembler added errata NOP
  3384  001B6E  0E02               	movlw	2
  3385  001B70  6011               	cpfslt	___xxtofl@exp^0,c
  3386  001B72  EFBD  F00D         	goto	u4931
  3387  001B76  EFC0  F00D         	goto	u4930
  3388  001B7A                     u4931:
  3389  001B7A  FFFF               	dw	65535	; assembler added errata NOP
  3390  001B7C  EFA6  F00D         	goto	l4201
  3391  001B80                     u4930:
  3392  001B80                     l1061:
  3393  001B80  FFFF               	dw	65535	; assembler added errata NOP
  3394  001B82  B011               	btfsc	___xxtofl@exp^0,0,c
  3395  001B84  EFC6  F00D         	goto	u4941
  3396  001B88  EFC9  F00D         	goto	u4940
  3397  001B8C                     u4941:
  3398  001B8C  FFFF               	dw	65535	; assembler added errata NOP
  3399  001B8E  EFCB  F00D         	goto	l4209
  3400  001B92                     u4940:
  3401  001B92  FFFF               	dw	65535	; assembler added errata NOP
  3402  001B94  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  3403  001B96                     l4209:
  3404  001B96  FFFF               	dw	65535	; assembler added errata NOP
  3405  001B98  90D8               	bcf	status,0,c
  3406  001B9A  3211               	rrcf	___xxtofl@exp^0,f,c
  3407  001B9C  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  3408  001BA0  6A0D               	clrf	(??___xxtofl+1)^0,c
  3409  001BA2  6A0E               	clrf	(??___xxtofl+2)^0,c
  3410  001BA4  6A0F               	clrf	(??___xxtofl+3)^0,c
  3411  001BA6  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  3412  001BAA  6A0E               	clrf	(??___xxtofl+2)^0,c
  3413  001BAC  6A0D               	clrf	(??___xxtofl+1)^0,c
  3414  001BAE  6A0C               	clrf	??___xxtofl^0,c
  3415  001BB0  500C               	movf	??___xxtofl^0,w,c
  3416  001BB2  1212               	iorwf	___xxtofl@arg^0,f,c
  3417  001BB4  500D               	movf	(??___xxtofl+1)^0,w,c
  3418  001BB6  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  3419  001BB8  500E               	movf	(??___xxtofl+2)^0,w,c
  3420  001BBA  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  3421  001BBC  500F               	movf	(??___xxtofl+3)^0,w,c
  3422  001BBE  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  3423  001BC0  5010               	movf	___xxtofl@sign^0,w,c
  3424  001BC2  B4D8               	btfsc	status,2,c
  3425  001BC4  EFE6  F00D         	goto	u4951
  3426  001BC8  EFE9  F00D         	goto	u4950
  3427  001BCC                     u4951:
  3428  001BCC  FFFF               	dw	65535	; assembler added errata NOP
  3429  001BCE  EFF4  F00D         	goto	l4219
  3430  001BD2                     u4950:
  3431  001BD2  FFFF               	dw	65535	; assembler added errata NOP
  3432  001BD4  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  3433  001BD6  EFF2  F00D         	goto	u4960
  3434  001BDA  EFEF  F00D         	goto	u4961
  3435  001BDE                     u4961:
  3436  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  3437  001BE0  EFF4  F00D         	goto	l4219
  3438  001BE4                     u4960:
  3439  001BE4  FFFF               	dw	65535	; assembler added errata NOP
  3440  001BE6  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  3441  001BE8                     l4219:
  3442  001BE8  FFFF               	dw	65535	; assembler added errata NOP
  3443  001BEA  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  3444  001BEE  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  3445  001BF2  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  3446  001BF6  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  3447  001BFA                     l1050:
  3448  001BFA  FFFF               	dw	65535	; assembler added errata NOP
  3449  001BFC  0012               	return		;funcret
  3450  001BFE  FFFF               	dw	65535	; errata NOP
  3451  001C00                     __end_of___xxtofl:
  3452                           	callstack 0
  3453                           
  3454 ;; *************** function ___fldiv *****************
  3455 ;; Defined at:
  3456 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  b               4   21[COMRAM] unsigned char 
  3459 ;;  a               4   25[COMRAM] unsigned char 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  grs             4   40[COMRAM] unsigned long 
  3462 ;;  rem             4   33[COMRAM] unsigned long 
  3463 ;;  new_exp         2   38[COMRAM] short 
  3464 ;;  aexp            1   45[COMRAM] unsigned char 
  3465 ;;  bexp            1   44[COMRAM] unsigned char 
  3466 ;;  sign            1   37[COMRAM] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  4   21[COMRAM] unsigned char 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3476 ;;      Params:         8       0       0       0       0       0       0
  3477 ;;      Locals:        13       0       0       0       0       0       0
  3478 ;;      Temps:          4       0       0       0       0       0       0
  3479 ;;      Totals:        25       0       0       0       0       0       0
  3480 ;;Total ram usage:       25 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_pick_and_place
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text8
  3491  0011F0                     __ptext8:
  3492                           	callstack 0
  3493  0011F0                     ___fldiv:
  3494                           	callstack 0
  3495  0011F0  FFFF               	dw	65535	; assembler added errata NOP
  3496  0011F2  5019               	movf	(___fldiv@b+3)^0,w,c
  3497  0011F4  0B80               	andlw	128
  3498  0011F6  6E26               	movwf	___fldiv@sign^0,c
  3499  0011F8  5019               	movf	(___fldiv@b+3)^0,w,c
  3500  0011FA  2419               	addwf	(___fldiv@b+3)^0,w,c
  3501  0011FC  6E2D               	movwf	___fldiv@bexp^0,c
  3502  0011FE  AE18               	btfss	(___fldiv@b+2)^0,7,c
  3503  001200  EF04  F009         	goto	u4591
  3504  001204  EF07  F009         	goto	u4590
  3505  001208                     u4591:
  3506  001208  FFFF               	dw	65535	; assembler added errata NOP
  3507  00120A  EF09  F009         	goto	l4023
  3508  00120E                     u4590:
  3509  00120E  FFFF               	dw	65535	; assembler added errata NOP
  3510  001210  802D               	bsf	___fldiv@bexp^0,0,c
  3511  001212                     l4023:
  3512  001212  FFFF               	dw	65535	; assembler added errata NOP
  3513  001214  502D               	movf	___fldiv@bexp^0,w,c
  3514  001216  B4D8               	btfsc	status,2,c
  3515  001218  EF10  F009         	goto	u4601
  3516  00121C  EF13  F009         	goto	u4600
  3517  001220                     u4601:
  3518  001220  FFFF               	dw	65535	; assembler added errata NOP
  3519  001222  EF2C  F009         	goto	l4033
  3520  001226                     u4600:
  3521  001226  FFFF               	dw	65535	; assembler added errata NOP
  3522  001228  282D               	incf	___fldiv@bexp^0,w,c
  3523  00122A  A4D8               	btfss	status,2,c
  3524  00122C  EF1A  F009         	goto	u4611
  3525  001230  EF1D  F009         	goto	u4610
  3526  001234                     u4611:
  3527  001234  FFFF               	dw	65535	; assembler added errata NOP
  3528  001236  EF26  F009         	goto	l4029
  3529  00123A                     u4610:
  3530  00123A  FFFF               	dw	65535	; assembler added errata NOP
  3531  00123C  0E00               	movlw	0
  3532  00123E  6E16               	movwf	___fldiv@b^0,c
  3533  001240  0E00               	movlw	0
  3534  001242  6E17               	movwf	(___fldiv@b+1)^0,c
  3535  001244  0E00               	movlw	0
  3536  001246  6E18               	movwf	(___fldiv@b+2)^0,c
  3537  001248  0E00               	movlw	0
  3538  00124A  6E19               	movwf	(___fldiv@b+3)^0,c
  3539  00124C                     l4029:
  3540  00124C  FFFF               	dw	65535	; assembler added errata NOP
  3541  00124E  8E18               	bsf	(___fldiv@b+2)^0,7,c
  3542  001250  0E00               	movlw	0
  3543  001252  6E19               	movwf	(___fldiv@b+3)^0,c
  3544  001254  EF35  F009         	goto	l4035
  3545  001258                     l4033:
  3546  001258  FFFF               	dw	65535	; assembler added errata NOP
  3547  00125A  0E00               	movlw	0
  3548  00125C  6E16               	movwf	___fldiv@b^0,c
  3549  00125E  0E00               	movlw	0
  3550  001260  6E17               	movwf	(___fldiv@b+1)^0,c
  3551  001262  0E00               	movlw	0
  3552  001264  6E18               	movwf	(___fldiv@b+2)^0,c
  3553  001266  0E00               	movlw	0
  3554  001268  6E19               	movwf	(___fldiv@b+3)^0,c
  3555  00126A                     l4035:
  3556  00126A  FFFF               	dw	65535	; assembler added errata NOP
  3557  00126C  501D               	movf	(___fldiv@a+3)^0,w,c
  3558  00126E  0B80               	andlw	128
  3559  001270  1A26               	xorwf	___fldiv@sign^0,f,c
  3560  001272  501D               	movf	(___fldiv@a+3)^0,w,c
  3561  001274  241D               	addwf	(___fldiv@a+3)^0,w,c
  3562  001276  6E2E               	movwf	___fldiv@aexp^0,c
  3563  001278  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  3564  00127A  EF41  F009         	goto	u4621
  3565  00127E  EF44  F009         	goto	u4620
  3566  001282                     u4621:
  3567  001282  FFFF               	dw	65535	; assembler added errata NOP
  3568  001284  EF46  F009         	goto	l4043
  3569  001288                     u4620:
  3570  001288  FFFF               	dw	65535	; assembler added errata NOP
  3571  00128A  802E               	bsf	___fldiv@aexp^0,0,c
  3572  00128C                     l4043:
  3573  00128C  FFFF               	dw	65535	; assembler added errata NOP
  3574  00128E  502E               	movf	___fldiv@aexp^0,w,c
  3575  001290  B4D8               	btfsc	status,2,c
  3576  001292  EF4D  F009         	goto	u4631
  3577  001296  EF50  F009         	goto	u4630
  3578  00129A                     u4631:
  3579  00129A  FFFF               	dw	65535	; assembler added errata NOP
  3580  00129C  EF69  F009         	goto	l4053
  3581  0012A0                     u4630:
  3582  0012A0  FFFF               	dw	65535	; assembler added errata NOP
  3583  0012A2  282E               	incf	___fldiv@aexp^0,w,c
  3584  0012A4  A4D8               	btfss	status,2,c
  3585  0012A6  EF57  F009         	goto	u4641
  3586  0012AA  EF5A  F009         	goto	u4640
  3587  0012AE                     u4641:
  3588  0012AE  FFFF               	dw	65535	; assembler added errata NOP
  3589  0012B0  EF63  F009         	goto	l4049
  3590  0012B4                     u4640:
  3591  0012B4  FFFF               	dw	65535	; assembler added errata NOP
  3592  0012B6  0E00               	movlw	0
  3593  0012B8  6E1A               	movwf	___fldiv@a^0,c
  3594  0012BA  0E00               	movlw	0
  3595  0012BC  6E1B               	movwf	(___fldiv@a+1)^0,c
  3596  0012BE  0E00               	movlw	0
  3597  0012C0  6E1C               	movwf	(___fldiv@a+2)^0,c
  3598  0012C2  0E00               	movlw	0
  3599  0012C4  6E1D               	movwf	(___fldiv@a+3)^0,c
  3600  0012C6                     l4049:
  3601  0012C6  FFFF               	dw	65535	; assembler added errata NOP
  3602  0012C8  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  3603  0012CA  0E00               	movlw	0
  3604  0012CC  6E1D               	movwf	(___fldiv@a+3)^0,c
  3605  0012CE  EF72  F009         	goto	l4055
  3606  0012D2                     l4053:
  3607  0012D2  FFFF               	dw	65535	; assembler added errata NOP
  3608  0012D4  0E00               	movlw	0
  3609  0012D6  6E1A               	movwf	___fldiv@a^0,c
  3610  0012D8  0E00               	movlw	0
  3611  0012DA  6E1B               	movwf	(___fldiv@a+1)^0,c
  3612  0012DC  0E00               	movlw	0
  3613  0012DE  6E1C               	movwf	(___fldiv@a+2)^0,c
  3614  0012E0  0E00               	movlw	0
  3615  0012E2  6E1D               	movwf	(___fldiv@a+3)^0,c
  3616  0012E4                     l4055:
  3617  0012E4  FFFF               	dw	65535	; assembler added errata NOP
  3618  0012E6  501A               	movf	___fldiv@a^0,w,c
  3619  0012E8  101B               	iorwf	(___fldiv@a+1)^0,w,c
  3620  0012EA  101C               	iorwf	(___fldiv@a+2)^0,w,c
  3621  0012EC  101D               	iorwf	(___fldiv@a+3)^0,w,c
  3622  0012EE  A4D8               	btfss	status,2,c
  3623  0012F0  EF7C  F009         	goto	u4651
  3624  0012F4  EF7F  F009         	goto	u4650
  3625  0012F8                     u4651:
  3626  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  3627  0012FA  EF99  F009         	goto	l4067
  3628  0012FE                     u4650:
  3629  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  3630  001300  0E00               	movlw	0
  3631  001302  6E16               	movwf	___fldiv@b^0,c
  3632  001304  0E00               	movlw	0
  3633  001306  6E17               	movwf	(___fldiv@b+1)^0,c
  3634  001308  0E00               	movlw	0
  3635  00130A  6E18               	movwf	(___fldiv@b+2)^0,c
  3636  00130C  0E00               	movlw	0
  3637  00130E  6E19               	movwf	(___fldiv@b+3)^0,c
  3638  001310  0E80               	movlw	128
  3639  001312  1218               	iorwf	(___fldiv@b+2)^0,f,c
  3640  001314  0E7F               	movlw	127
  3641  001316  1219               	iorwf	(___fldiv@b+3)^0,f,c
  3642  001318                     l4061:
  3643  001318  FFFF               	dw	65535	; assembler added errata NOP
  3644  00131A  5026               	movf	___fldiv@sign^0,w,c
  3645  00131C  1219               	iorwf	(___fldiv@b+3)^0,f,c
  3646  00131E  C016  F016         	movff	___fldiv@b,?___fldiv
  3647  001322  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  3648  001326  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  3649  00132A  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  3650  00132E  EF0E  F00B         	goto	l974
  3651  001332                     l4067:
  3652  001332  FFFF               	dw	65535	; assembler added errata NOP
  3653  001334  502D               	movf	___fldiv@bexp^0,w,c
  3654  001336  A4D8               	btfss	status,2,c
  3655  001338  EFA0  F009         	goto	u4661
  3656  00133C  EFA3  F009         	goto	u4660
  3657  001340                     u4661:
  3658  001340  FFFF               	dw	65535	; assembler added errata NOP
  3659  001342  EFAE  F009         	goto	l4075
  3660  001346                     u4660:
  3661  001346  FFFF               	dw	65535	; assembler added errata NOP
  3662  001348  0E00               	movlw	0
  3663  00134A  6E16               	movwf	?___fldiv^0,c
  3664  00134C  0E00               	movlw	0
  3665  00134E  6E17               	movwf	(?___fldiv+1)^0,c
  3666  001350  0E00               	movlw	0
  3667  001352  6E18               	movwf	(?___fldiv+2)^0,c
  3668  001354  0E00               	movlw	0
  3669  001356  6E19               	movwf	(?___fldiv+3)^0,c
  3670  001358  EF0E  F00B         	goto	l974
  3671  00135C                     l4075:
  3672  00135C  FFFF               	dw	65535	; assembler added errata NOP
  3673  00135E  502E               	movf	___fldiv@aexp^0,w,c
  3674  001360  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  3675  001364  6A1F               	clrf	(??___fldiv+1)^0,c
  3676  001366  5E1E               	subwf	??___fldiv^0,f,c
  3677  001368  0E00               	movlw	0
  3678  00136A  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  3679  00136C  0E7F               	movlw	127
  3680  00136E  241E               	addwf	??___fldiv^0,w,c
  3681  001370  6E27               	movwf	___fldiv@new_exp^0,c
  3682  001372  0E00               	movlw	0
  3683  001374  201F               	addwfc	(??___fldiv+1)^0,w,c
  3684  001376  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  3685  001378  C016  F022         	movff	___fldiv@b,___fldiv@rem
  3686  00137C  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  3687  001380  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  3688  001384  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  3689  001388  0E00               	movlw	0
  3690  00138A  6E16               	movwf	___fldiv@b^0,c
  3691  00138C  0E00               	movlw	0
  3692  00138E  6E17               	movwf	(___fldiv@b+1)^0,c
  3693  001390  0E00               	movlw	0
  3694  001392  6E18               	movwf	(___fldiv@b+2)^0,c
  3695  001394  0E00               	movlw	0
  3696  001396  6E19               	movwf	(___fldiv@b+3)^0,c
  3697  001398  0E00               	movlw	0
  3698  00139A  6E29               	movwf	___fldiv@grs^0,c
  3699  00139C  0E00               	movlw	0
  3700  00139E  6E2A               	movwf	(___fldiv@grs+1)^0,c
  3701  0013A0  0E00               	movlw	0
  3702  0013A2  6E2B               	movwf	(___fldiv@grs+2)^0,c
  3703  0013A4  0E00               	movlw	0
  3704  0013A6  6E2C               	movwf	(___fldiv@grs+3)^0,c
  3705  0013A8  0E00               	movlw	0
  3706  0013AA  6E2E               	movwf	___fldiv@aexp^0,c
  3707  0013AC  EF1A  F00A         	goto	l976
  3708  0013B0                     l4085:
  3709  0013B0  FFFF               	dw	65535	; assembler added errata NOP
  3710  0013B2  502E               	movf	___fldiv@aexp^0,w,c
  3711  0013B4  B4D8               	btfsc	status,2,c
  3712  0013B6  EFDF  F009         	goto	u4671
  3713  0013BA  EFE2  F009         	goto	u4670
  3714  0013BE                     u4671:
  3715  0013BE  FFFF               	dw	65535	; assembler added errata NOP
  3716  0013C0  EFFD  F009         	goto	l4093
  3717  0013C4                     u4670:
  3718  0013C4  FFFF               	dw	65535	; assembler added errata NOP
  3719  0013C6  90D8               	bcf	status,0,c
  3720  0013C8  3622               	rlcf	___fldiv@rem^0,f,c
  3721  0013CA  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  3722  0013CC  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  3723  0013CE  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  3724  0013D0  90D8               	bcf	status,0,c
  3725  0013D2  3616               	rlcf	___fldiv@b^0,f,c
  3726  0013D4  3617               	rlcf	(___fldiv@b+1)^0,f,c
  3727  0013D6  3618               	rlcf	(___fldiv@b+2)^0,f,c
  3728  0013D8  3619               	rlcf	(___fldiv@b+3)^0,f,c
  3729  0013DA  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  3730  0013DC  EFF2  F009         	goto	u4681
  3731  0013E0  EFF5  F009         	goto	u4680
  3732  0013E4                     u4681:
  3733  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  3734  0013E6  EFF7  F009         	goto	l979
  3735  0013EA                     u4680:
  3736  0013EA  FFFF               	dw	65535	; assembler added errata NOP
  3737  0013EC  8016               	bsf	___fldiv@b^0,0,c
  3738  0013EE                     l979:
  3739  0013EE  FFFF               	dw	65535	; assembler added errata NOP
  3740  0013F0  90D8               	bcf	status,0,c
  3741  0013F2  3629               	rlcf	___fldiv@grs^0,f,c
  3742  0013F4  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  3743  0013F6  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  3744  0013F8  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  3745  0013FA                     l4093:
  3746  0013FA  FFFF               	dw	65535	; assembler added errata NOP
  3747  0013FC  501A               	movf	___fldiv@a^0,w,c
  3748  0013FE  5C22               	subwf	___fldiv@rem^0,w,c
  3749  001400  501B               	movf	(___fldiv@a+1)^0,w,c
  3750  001402  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  3751  001404  501C               	movf	(___fldiv@a+2)^0,w,c
  3752  001406  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  3753  001408  501D               	movf	(___fldiv@a+3)^0,w,c
  3754  00140A  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  3755  00140C  A0D8               	btfss	status,0,c
  3756  00140E  EF0B  F00A         	goto	u4691
  3757  001412  EF0E  F00A         	goto	u4690
  3758  001416                     u4691:
  3759  001416  FFFF               	dw	65535	; assembler added errata NOP
  3760  001418  EF18  F00A         	goto	l4099
  3761  00141C                     u4690:
  3762  00141C  FFFF               	dw	65535	; assembler added errata NOP
  3763  00141E  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  3764  001420  501A               	movf	___fldiv@a^0,w,c
  3765  001422  5E22               	subwf	___fldiv@rem^0,f,c
  3766  001424  501B               	movf	(___fldiv@a+1)^0,w,c
  3767  001426  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  3768  001428  501C               	movf	(___fldiv@a+2)^0,w,c
  3769  00142A  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  3770  00142C  501D               	movf	(___fldiv@a+3)^0,w,c
  3771  00142E  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  3772  001430                     l4099:
  3773  001430  FFFF               	dw	65535	; assembler added errata NOP
  3774  001432  2A2E               	incf	___fldiv@aexp^0,f,c
  3775  001434                     l976:
  3776  001434  FFFF               	dw	65535	; assembler added errata NOP
  3777  001436  0E19               	movlw	25
  3778  001438  642E               	cpfsgt	___fldiv@aexp^0,c
  3779  00143A  EF21  F00A         	goto	u4701
  3780  00143E  EF24  F00A         	goto	u4700
  3781  001442                     u4701:
  3782  001442  FFFF               	dw	65535	; assembler added errata NOP
  3783  001444  EFD8  F009         	goto	l4085
  3784  001448                     u4700:
  3785  001448  FFFF               	dw	65535	; assembler added errata NOP
  3786  00144A  5022               	movf	___fldiv@rem^0,w,c
  3787  00144C  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  3788  00144E  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  3789  001450  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  3790  001452  B4D8               	btfsc	status,2,c
  3791  001454  EF2E  F00A         	goto	u4711
  3792  001458  EF31  F00A         	goto	u4710
  3793  00145C                     u4711:
  3794  00145C  FFFF               	dw	65535	; assembler added errata NOP
  3795  00145E  EF4E  F00A         	goto	l4111
  3796  001462                     u4710:
  3797  001462  FFFF               	dw	65535	; assembler added errata NOP
  3798  001464  8029               	bsf	___fldiv@grs^0,0,c
  3799  001466  EF4E  F00A         	goto	l4111
  3800  00146A                     l4105:
  3801  00146A  FFFF               	dw	65535	; assembler added errata NOP
  3802  00146C  90D8               	bcf	status,0,c
  3803  00146E  3616               	rlcf	___fldiv@b^0,f,c
  3804  001470  3617               	rlcf	(___fldiv@b+1)^0,f,c
  3805  001472  3618               	rlcf	(___fldiv@b+2)^0,f,c
  3806  001474  3619               	rlcf	(___fldiv@b+3)^0,f,c
  3807  001476  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  3808  001478  EF40  F00A         	goto	u4721
  3809  00147C  EF43  F00A         	goto	u4720
  3810  001480                     u4721:
  3811  001480  FFFF               	dw	65535	; assembler added errata NOP
  3812  001482  EF45  F00A         	goto	l985
  3813  001486                     u4720:
  3814  001486  FFFF               	dw	65535	; assembler added errata NOP
  3815  001488  8016               	bsf	___fldiv@b^0,0,c
  3816  00148A                     l985:
  3817  00148A  FFFF               	dw	65535	; assembler added errata NOP
  3818  00148C  90D8               	bcf	status,0,c
  3819  00148E  3629               	rlcf	___fldiv@grs^0,f,c
  3820  001490  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  3821  001492  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  3822  001494  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  3823  001496  0627               	decf	___fldiv@new_exp^0,f,c
  3824  001498  A0D8               	btfss	status,0,c
  3825  00149A  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  3826  00149C                     l4111:
  3827  00149C  FFFF               	dw	65535	; assembler added errata NOP
  3828  00149E  AE18               	btfss	(___fldiv@b+2)^0,7,c
  3829  0014A0  EF54  F00A         	goto	u4731
  3830  0014A4  EF57  F00A         	goto	u4730
  3831  0014A8                     u4731:
  3832  0014A8  FFFF               	dw	65535	; assembler added errata NOP
  3833  0014AA  EF35  F00A         	goto	l4105
  3834  0014AE                     u4730:
  3835  0014AE  FFFF               	dw	65535	; assembler added errata NOP
  3836  0014B0  0E00               	movlw	0
  3837  0014B2  6E2E               	movwf	___fldiv@aexp^0,c
  3838  0014B4  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  3839  0014B6  EF5F  F00A         	goto	u4741
  3840  0014BA  EF62  F00A         	goto	u4740
  3841  0014BE                     u4741:
  3842  0014BE  FFFF               	dw	65535	; assembler added errata NOP
  3843  0014C0  EF8D  F00A         	goto	l987
  3844  0014C4                     u4740:
  3845  0014C4  FFFF               	dw	65535	; assembler added errata NOP
  3846  0014C6  0EFF               	movlw	255
  3847  0014C8  1429               	andwf	___fldiv@grs^0,w,c
  3848  0014CA  6E1E               	movwf	??___fldiv^0,c
  3849  0014CC  0EFF               	movlw	255
  3850  0014CE  142A               	andwf	(___fldiv@grs+1)^0,w,c
  3851  0014D0  6E1F               	movwf	(??___fldiv+1)^0,c
  3852  0014D2  0EFF               	movlw	255
  3853  0014D4  142B               	andwf	(___fldiv@grs+2)^0,w,c
  3854  0014D6  6E20               	movwf	(??___fldiv+2)^0,c
  3855  0014D8  0E7F               	movlw	127
  3856  0014DA  142C               	andwf	(___fldiv@grs+3)^0,w,c
  3857  0014DC  6E21               	movwf	(??___fldiv+3)^0,c
  3858  0014DE  501E               	movf	??___fldiv^0,w,c
  3859  0014E0  101F               	iorwf	(??___fldiv+1)^0,w,c
  3860  0014E2  1020               	iorwf	(??___fldiv+2)^0,w,c
  3861  0014E4  1021               	iorwf	(??___fldiv+3)^0,w,c
  3862  0014E6  B4D8               	btfsc	status,2,c
  3863  0014E8  EF78  F00A         	goto	u4751
  3864  0014EC  EF7B  F00A         	goto	u4750
  3865  0014F0                     u4751:
  3866  0014F0  FFFF               	dw	65535	; assembler added errata NOP
  3867  0014F2  EF81  F00A         	goto	l988
  3868  0014F6                     u4750:
  3869  0014F6  FFFF               	dw	65535	; assembler added errata NOP
  3870  0014F8                     l4119:
  3871  0014F8  FFFF               	dw	65535	; assembler added errata NOP
  3872  0014FA  0E01               	movlw	1
  3873  0014FC  6E2E               	movwf	___fldiv@aexp^0,c
  3874  0014FE  EF8D  F00A         	goto	l987
  3875  001502                     l988:
  3876  001502  FFFF               	dw	65535	; assembler added errata NOP
  3877  001504  A016               	btfss	___fldiv@b^0,0,c
  3878  001506  EF87  F00A         	goto	u4761
  3879  00150A  EF8A  F00A         	goto	u4760
  3880  00150E                     u4761:
  3881  00150E  FFFF               	dw	65535	; assembler added errata NOP
  3882  001510  EF8D  F00A         	goto	l987
  3883  001514                     u4760:
  3884  001514  FFFF               	dw	65535	; assembler added errata NOP
  3885  001516  EF7C  F00A         	goto	l4119
  3886  00151A                     l987:
  3887  00151A  FFFF               	dw	65535	; assembler added errata NOP
  3888  00151C  502E               	movf	___fldiv@aexp^0,w,c
  3889  00151E  B4D8               	btfsc	status,2,c
  3890  001520  EF94  F00A         	goto	u4771
  3891  001524  EF97  F00A         	goto	u4770
  3892  001528                     u4771:
  3893  001528  FFFF               	dw	65535	; assembler added errata NOP
  3894  00152A  EFBE  F00A         	goto	l4131
  3895  00152E                     u4770:
  3896  00152E  FFFF               	dw	65535	; assembler added errata NOP
  3897  001530  0E01               	movlw	1
  3898  001532  2616               	addwf	___fldiv@b^0,f,c
  3899  001534  0E00               	movlw	0
  3900  001536  2217               	addwfc	(___fldiv@b+1)^0,f,c
  3901  001538  2218               	addwfc	(___fldiv@b+2)^0,f,c
  3902  00153A  2219               	addwfc	(___fldiv@b+3)^0,f,c
  3903  00153C  A019               	btfss	(___fldiv@b+3)^0,0,c
  3904  00153E  EFA3  F00A         	goto	u4781
  3905  001542  EFA6  F00A         	goto	u4780
  3906  001546                     u4781:
  3907  001546  FFFF               	dw	65535	; assembler added errata NOP
  3908  001548  EFBE  F00A         	goto	l4131
  3909  00154C                     u4780:
  3910  00154C  FFFF               	dw	65535	; assembler added errata NOP
  3911  00154E  C016  F01E         	movff	___fldiv@b,??___fldiv
  3912  001552  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  3913  001556  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  3914  00155A  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  3915  00155E  3421               	rlcf	(??___fldiv+3)^0,w,c
  3916  001560  3221               	rrcf	(??___fldiv+3)^0,f,c
  3917  001562  3220               	rrcf	(??___fldiv+2)^0,f,c
  3918  001564  321F               	rrcf	(??___fldiv+1)^0,f,c
  3919  001566  321E               	rrcf	??___fldiv^0,f,c
  3920  001568  C01E  F016         	movff	??___fldiv,___fldiv@b
  3921  00156C  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  3922  001570  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  3923  001574  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  3924  001578  4A27               	infsnz	___fldiv@new_exp^0,f,c
  3925  00157A  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  3926  00157C                     l4131:
  3927  00157C  FFFF               	dw	65535	; assembler added errata NOP
  3928  00157E  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3929  001580  EFCA  F00A         	goto	u4791
  3930  001584  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  3931  001586  E109               	bnz	u4790
  3932  001588  2827               	incf	___fldiv@new_exp^0,w,c
  3933  00158A  A0D8               	btfss	status,0,c
  3934  00158C  EFCA  F00A         	goto	u4791
  3935  001590  EFCD  F00A         	goto	u4790
  3936  001594                     u4791:
  3937  001594  FFFF               	dw	65535	; assembler added errata NOP
  3938  001596  EFD9  F00A         	goto	l4135
  3939  00159A                     u4790:
  3940  00159A  FFFF               	dw	65535	; assembler added errata NOP
  3941  00159C  0E00               	movlw	0
  3942  00159E  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  3943  0015A0  6827               	setf	___fldiv@new_exp^0,c
  3944  0015A2  0E00               	movlw	0
  3945  0015A4  6E16               	movwf	___fldiv@b^0,c
  3946  0015A6  0E00               	movlw	0
  3947  0015A8  6E17               	movwf	(___fldiv@b+1)^0,c
  3948  0015AA  0E00               	movlw	0
  3949  0015AC  6E18               	movwf	(___fldiv@b+2)^0,c
  3950  0015AE  0E00               	movlw	0
  3951  0015B0  6E19               	movwf	(___fldiv@b+3)^0,c
  3952  0015B2                     l4135:
  3953  0015B2  FFFF               	dw	65535	; assembler added errata NOP
  3954  0015B4  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3955  0015B6  EFE8  F00A         	goto	u4800
  3956  0015BA  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  3957  0015BC  E106               	bnz	u4801
  3958  0015BE  0427               	decf	___fldiv@new_exp^0,w,c
  3959  0015C0  B0D8               	btfsc	status,0,c
  3960  0015C2  EFE5  F00A         	goto	u4801
  3961  0015C6  EFE8  F00A         	goto	u4800
  3962  0015CA                     u4801:
  3963  0015CA  FFFF               	dw	65535	; assembler added errata NOP
  3964  0015CC  EFF7  F00A         	goto	l4139
  3965  0015D0                     u4800:
  3966  0015D0  FFFF               	dw	65535	; assembler added errata NOP
  3967  0015D2  0E00               	movlw	0
  3968  0015D4  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  3969  0015D6  0E00               	movlw	0
  3970  0015D8  6E27               	movwf	___fldiv@new_exp^0,c
  3971  0015DA  0E00               	movlw	0
  3972  0015DC  6E16               	movwf	___fldiv@b^0,c
  3973  0015DE  0E00               	movlw	0
  3974  0015E0  6E17               	movwf	(___fldiv@b+1)^0,c
  3975  0015E2  0E00               	movlw	0
  3976  0015E4  6E18               	movwf	(___fldiv@b+2)^0,c
  3977  0015E6  0E00               	movlw	0
  3978  0015E8  6E19               	movwf	(___fldiv@b+3)^0,c
  3979  0015EA  0E00               	movlw	0
  3980  0015EC  6E26               	movwf	___fldiv@sign^0,c
  3981  0015EE                     l4139:
  3982  0015EE  FFFF               	dw	65535	; assembler added errata NOP
  3983  0015F0  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  3984  0015F4  A02D               	btfss	___fldiv@bexp^0,0,c
  3985  0015F6  EFFF  F00A         	goto	u4811
  3986  0015FA  EF02  F00B         	goto	u4810
  3987  0015FE                     u4811:
  3988  0015FE  FFFF               	dw	65535	; assembler added errata NOP
  3989  001600  EF06  F00B         	goto	l4145
  3990  001604                     u4810:
  3991  001604  FFFF               	dw	65535	; assembler added errata NOP
  3992  001606  8E18               	bsf	(___fldiv@b+2)^0,7,c
  3993  001608  EF08  F00B         	goto	l4147
  3994  00160C                     l4145:
  3995  00160C  FFFF               	dw	65535	; assembler added errata NOP
  3996  00160E  9E18               	bcf	(___fldiv@b+2)^0,7,c
  3997  001610                     l4147:
  3998  001610  FFFF               	dw	65535	; assembler added errata NOP
  3999  001612  90D8               	bcf	status,0,c
  4000  001614  302D               	rrcf	___fldiv@bexp^0,w,c
  4001  001616  6E19               	movwf	(___fldiv@b+3)^0,c
  4002  001618  EF8C  F009         	goto	l4061
  4003  00161C                     l974:
  4004  00161C  FFFF               	dw	65535	; assembler added errata NOP
  4005  00161E  0012               	return		;funcret
  4006  001620  FFFF               	dw	65535	; errata NOP
  4007  001622                     __end_of___fldiv:
  4008                           	callstack 0
  4009                           
  4010 ;; *************** function _Y_axis *****************
  4011 ;; Defined at:
  4012 ;;		line 419 in file "main.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  direction       1    wreg     unsigned char 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  direction       1   13[COMRAM] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4026 ;;      Params:         0       0       0       0       0       0       0
  4027 ;;      Locals:         1       0       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0
  4029 ;;      Totals:         1       0       0       0       0       0       0
  4030 ;;Total ram usage:        1 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; Hardware stack levels required when called: 2
  4033 ;; This function calls:
  4034 ;;		_ms_delay
  4035 ;; This function is called by:
  4036 ;;		_pick_and_place
  4037 ;;		_return_to_initial
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text9
  4042  00257E                     __ptext9:
  4043                           	callstack 0
  4044  00257E                     _Y_axis:
  4045                           	callstack 0
  4046  00257E  FFFF               	dw	65535	; assembler added errata NOP
  4047                           
  4048                           ;incstack = 0
  4049                           ;Y_axis@direction stored from wreg
  4050  002580  6E0E               	movwf	Y_axis@direction^0,c
  4051  002582                     
  4052                           ;main.c: 420:     if(!New_char_RX){
  4053  002582  5072               	movf	_New_char_RX^0,w,c
  4054  002584  A4D8               	btfss	status,2,c
  4055  002586  EFC7  F012         	goto	u4531
  4056  00258A  EFCA  F012         	goto	u4530
  4057  00258E                     u4531:
  4058  00258E  FFFF               	dw	65535	; assembler added errata NOP
  4059  002590  EF32  F013         	goto	l3983
  4060  002594                     u4530:
  4061  002594  FFFF               	dw	65535	; assembler added errata NOP
  4062  002596                     
  4063                           ;main.c: 421:     if (direction == 0){
  4064  002596  500E               	movf	Y_axis@direction^0,w,c
  4065  002598  A4D8               	btfss	status,2,c
  4066  00259A  EFD1  F012         	goto	u4541
  4067  00259E  EFD4  F012         	goto	u4540
  4068  0025A2                     u4541:
  4069  0025A2  FFFF               	dw	65535	; assembler added errata NOP
  4070  0025A4  EFFD  F012         	goto	l3967
  4071  0025A8                     u4540:
  4072  0025A8  FFFF               	dw	65535	; assembler added errata NOP
  4073  0025AA                     
  4074                           ;main.c: 422:         PORTB = 0b00110000;
  4075  0025AA  0E30               	movlw	48
  4076  0025AC  6E81               	movwf	129,c	;volatile
  4077  0025AE                     
  4078                           ;main.c: 423:         ms_delay(1);
  4079  0025AE  0E00               	movlw	0
  4080  0025B0  6E09               	movwf	(ms_delay@val+1)^0,c
  4081  0025B2  0E01               	movlw	1
  4082  0025B4  6E08               	movwf	ms_delay@val^0,c
  4083  0025B6  EC94  F015         	call	_ms_delay	;wreg free
  4084  0025BA                     
  4085                           ;main.c: 424:         PORTB = 0b01100000;
  4086  0025BA  0E60               	movlw	96
  4087  0025BC  6E81               	movwf	129,c	;volatile
  4088                           
  4089                           ;main.c: 425:         ms_delay(1);
  4090  0025BE  0E00               	movlw	0
  4091  0025C0  6E09               	movwf	(ms_delay@val+1)^0,c
  4092  0025C2  0E01               	movlw	1
  4093  0025C4  6E08               	movwf	ms_delay@val^0,c
  4094  0025C6  EC94  F015         	call	_ms_delay	;wreg free
  4095  0025CA                     
  4096                           ;main.c: 426:         PORTB = 0b11000000;
  4097  0025CA  0EC0               	movlw	192
  4098  0025CC  6E81               	movwf	129,c	;volatile
  4099  0025CE                     
  4100                           ;main.c: 427:         ms_delay(1);
  4101  0025CE  0E00               	movlw	0
  4102  0025D0  6E09               	movwf	(ms_delay@val+1)^0,c
  4103  0025D2  0E01               	movlw	1
  4104  0025D4  6E08               	movwf	ms_delay@val^0,c
  4105  0025D6  EC94  F015         	call	_ms_delay	;wreg free
  4106                           
  4107                           ;main.c: 428:         PORTB = 0b10010000;
  4108  0025DA  0E90               	movlw	144
  4109  0025DC  6E81               	movwf	129,c	;volatile
  4110  0025DE                     
  4111                           ;main.c: 429:         ms_delay(1);
  4112  0025DE  0E00               	movlw	0
  4113  0025E0  6E09               	movwf	(ms_delay@val+1)^0,c
  4114  0025E2  0E01               	movlw	1
  4115  0025E4  6E08               	movwf	ms_delay@val^0,c
  4116  0025E6  EC94  F015         	call	_ms_delay	;wreg free
  4117  0025EA                     
  4118                           ;main.c: 430:         PORTB = 0b00110000;
  4119  0025EA  0E30               	movlw	48
  4120  0025EC  6E81               	movwf	129,c	;volatile
  4121                           
  4122                           ;main.c: 431:         ms_delay(1);
  4123  0025EE  0E00               	movlw	0
  4124  0025F0  6E09               	movwf	(ms_delay@val+1)^0,c
  4125  0025F2  0E01               	movlw	1
  4126  0025F4  6E08               	movwf	ms_delay@val^0,c
  4127  0025F6  EC94  F015         	call	_ms_delay	;wreg free
  4128  0025FA                     l3967:
  4129  0025FA  FFFF               	dw	65535	; assembler added errata NOP
  4130                           
  4131                           ;main.c: 433:     if (direction == 1){
  4132  0025FC  040E               	decf	Y_axis@direction^0,w,c
  4133  0025FE  A4D8               	btfss	status,2,c
  4134  002600  EF04  F013         	goto	u4551
  4135  002604  EF07  F013         	goto	u4550
  4136  002608                     u4551:
  4137  002608  FFFF               	dw	65535	; assembler added errata NOP
  4138  00260A  EF35  F013         	goto	l273
  4139  00260E                     u4550:
  4140  00260E  FFFF               	dw	65535	; assembler added errata NOP
  4141  002610                     
  4142                           ;main.c: 434:         PORTB = 0b10010000;
  4143  002610  0E90               	movlw	144
  4144  002612  6E81               	movwf	129,c	;volatile
  4145  002614                     
  4146                           ;main.c: 435:         ms_delay(1);
  4147  002614  0E00               	movlw	0
  4148  002616  6E09               	movwf	(ms_delay@val+1)^0,c
  4149  002618  0E01               	movlw	1
  4150  00261A  6E08               	movwf	ms_delay@val^0,c
  4151  00261C  EC94  F015         	call	_ms_delay	;wreg free
  4152  002620                     
  4153                           ;main.c: 436:         PORTB = 0b11000000;
  4154  002620  0EC0               	movlw	192
  4155  002622  6E81               	movwf	129,c	;volatile
  4156                           
  4157                           ;main.c: 437:         ms_delay(1);
  4158  002624  0E00               	movlw	0
  4159  002626  6E09               	movwf	(ms_delay@val+1)^0,c
  4160  002628  0E01               	movlw	1
  4161  00262A  6E08               	movwf	ms_delay@val^0,c
  4162  00262C  EC94  F015         	call	_ms_delay	;wreg free
  4163  002630                     
  4164                           ;main.c: 438:         PORTB = 0b01100000;
  4165  002630  0E60               	movlw	96
  4166  002632  6E81               	movwf	129,c	;volatile
  4167  002634                     
  4168                           ;main.c: 439:         ms_delay(1);
  4169  002634  0E00               	movlw	0
  4170  002636  6E09               	movwf	(ms_delay@val+1)^0,c
  4171  002638  0E01               	movlw	1
  4172  00263A  6E08               	movwf	ms_delay@val^0,c
  4173  00263C  EC94  F015         	call	_ms_delay	;wreg free
  4174                           
  4175                           ;main.c: 440:         PORTB = 0b00110000;
  4176  002640  0E30               	movlw	48
  4177  002642  6E81               	movwf	129,c	;volatile
  4178  002644                     
  4179                           ;main.c: 441:         ms_delay(1);
  4180  002644  0E00               	movlw	0
  4181  002646  6E09               	movwf	(ms_delay@val+1)^0,c
  4182  002648  0E01               	movlw	1
  4183  00264A  6E08               	movwf	ms_delay@val^0,c
  4184  00264C  EC94  F015         	call	_ms_delay	;wreg free
  4185  002650                     
  4186                           ;main.c: 442:         PORTB = 0b10010000;
  4187  002650  0E90               	movlw	144
  4188  002652  6E81               	movwf	129,c	;volatile
  4189                           
  4190                           ;main.c: 443:         ms_delay(1);
  4191  002654  0E00               	movlw	0
  4192  002656  6E09               	movwf	(ms_delay@val+1)^0,c
  4193  002658  0E01               	movlw	1
  4194  00265A  6E08               	movwf	ms_delay@val^0,c
  4195  00265C  EC94  F015         	call	_ms_delay	;wreg free
  4196  002660  EF35  F013         	goto	l273
  4197  002664                     l3983:
  4198  002664  FFFF               	dw	65535	; assembler added errata NOP
  4199                           
  4200                           ;main.c: 446:         stop=1;
  4201  002666  0E01               	movlw	1
  4202  002668  6E71               	movwf	_stop^0,c
  4203  00266A                     l273:
  4204  00266A  FFFF               	dw	65535	; assembler added errata NOP
  4205  00266C  0012               	return		;funcret
  4206  00266E  FFFF               	dw	65535	; errata NOP
  4207  002670                     __end_of_Y_axis:
  4208                           	callstack 0
  4209                           
  4210 ;; *************** function _X_axis *****************
  4211 ;; Defined at:
  4212 ;;		line 388 in file "main.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  direction       1    wreg     unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  direction       1   13[COMRAM] unsigned char 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4226 ;;      Params:         0       0       0       0       0       0       0
  4227 ;;      Locals:         1       0       0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0
  4229 ;;      Totals:         1       0       0       0       0       0       0
  4230 ;;Total ram usage:        1 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; Hardware stack levels required when called: 2
  4233 ;; This function calls:
  4234 ;;		_ms_delay
  4235 ;; This function is called by:
  4236 ;;		_pick_and_place
  4237 ;;		_return_to_initial
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text10
  4242  002670                     __ptext10:
  4243                           	callstack 0
  4244  002670                     _X_axis:
  4245                           	callstack 0
  4246  002670  FFFF               	dw	65535	; assembler added errata NOP
  4247                           
  4248                           ;incstack = 0
  4249                           ;X_axis@direction stored from wreg
  4250  002672  6E0E               	movwf	X_axis@direction^0,c
  4251  002674                     
  4252                           ;main.c: 389:     if(!New_char_RX){
  4253  002674  5072               	movf	_New_char_RX^0,w,c
  4254  002676  A4D8               	btfss	status,2,c
  4255  002678  EF40  F013         	goto	u4501
  4256  00267C  EF43  F013         	goto	u4500
  4257  002680                     u4501:
  4258  002680  FFFF               	dw	65535	; assembler added errata NOP
  4259  002682  EFAB  F013         	goto	l3947
  4260  002686                     u4500:
  4261  002686  FFFF               	dw	65535	; assembler added errata NOP
  4262  002688                     
  4263                           ;main.c: 390:     if (direction == 0){
  4264  002688  500E               	movf	X_axis@direction^0,w,c
  4265  00268A  A4D8               	btfss	status,2,c
  4266  00268C  EF4A  F013         	goto	u4511
  4267  002690  EF4D  F013         	goto	u4510
  4268  002694                     u4511:
  4269  002694  FFFF               	dw	65535	; assembler added errata NOP
  4270  002696  EF76  F013         	goto	l3931
  4271  00269A                     u4510:
  4272  00269A  FFFF               	dw	65535	; assembler added errata NOP
  4273  00269C                     
  4274                           ;main.c: 391:         PORTB = 0b00000011;
  4275  00269C  0E03               	movlw	3
  4276  00269E  6E81               	movwf	129,c	;volatile
  4277  0026A0                     
  4278                           ;main.c: 392:         ms_delay(1);
  4279  0026A0  0E00               	movlw	0
  4280  0026A2  6E09               	movwf	(ms_delay@val+1)^0,c
  4281  0026A4  0E01               	movlw	1
  4282  0026A6  6E08               	movwf	ms_delay@val^0,c
  4283  0026A8  EC94  F015         	call	_ms_delay	;wreg free
  4284  0026AC                     
  4285                           ;main.c: 393:         PORTB = 0b00000110;
  4286  0026AC  0E06               	movlw	6
  4287  0026AE  6E81               	movwf	129,c	;volatile
  4288                           
  4289                           ;main.c: 394:         ms_delay(1);
  4290  0026B0  0E00               	movlw	0
  4291  0026B2  6E09               	movwf	(ms_delay@val+1)^0,c
  4292  0026B4  0E01               	movlw	1
  4293  0026B6  6E08               	movwf	ms_delay@val^0,c
  4294  0026B8  EC94  F015         	call	_ms_delay	;wreg free
  4295  0026BC                     
  4296                           ;main.c: 395:         PORTB = 0b00001100;
  4297  0026BC  0E0C               	movlw	12
  4298  0026BE  6E81               	movwf	129,c	;volatile
  4299  0026C0                     
  4300                           ;main.c: 396:         ms_delay(1);
  4301  0026C0  0E00               	movlw	0
  4302  0026C2  6E09               	movwf	(ms_delay@val+1)^0,c
  4303  0026C4  0E01               	movlw	1
  4304  0026C6  6E08               	movwf	ms_delay@val^0,c
  4305  0026C8  EC94  F015         	call	_ms_delay	;wreg free
  4306                           
  4307                           ;main.c: 397:         PORTB = 0b00001001;
  4308  0026CC  0E09               	movlw	9
  4309  0026CE  6E81               	movwf	129,c	;volatile
  4310  0026D0                     
  4311                           ;main.c: 398:         ms_delay(1);
  4312  0026D0  0E00               	movlw	0
  4313  0026D2  6E09               	movwf	(ms_delay@val+1)^0,c
  4314  0026D4  0E01               	movlw	1
  4315  0026D6  6E08               	movwf	ms_delay@val^0,c
  4316  0026D8  EC94  F015         	call	_ms_delay	;wreg free
  4317  0026DC                     
  4318                           ;main.c: 399:         PORTB = 0b00000011;
  4319  0026DC  0E03               	movlw	3
  4320  0026DE  6E81               	movwf	129,c	;volatile
  4321                           
  4322                           ;main.c: 400:         ms_delay(1);
  4323  0026E0  0E00               	movlw	0
  4324  0026E2  6E09               	movwf	(ms_delay@val+1)^0,c
  4325  0026E4  0E01               	movlw	1
  4326  0026E6  6E08               	movwf	ms_delay@val^0,c
  4327  0026E8  EC94  F015         	call	_ms_delay	;wreg free
  4328  0026EC                     l3931:
  4329  0026EC  FFFF               	dw	65535	; assembler added errata NOP
  4330                           
  4331                           ;main.c: 402:     if (direction == 1){
  4332  0026EE  040E               	decf	X_axis@direction^0,w,c
  4333  0026F0  A4D8               	btfss	status,2,c
  4334  0026F2  EF7D  F013         	goto	u4521
  4335  0026F6  EF80  F013         	goto	u4520
  4336  0026FA                     u4521:
  4337  0026FA  FFFF               	dw	65535	; assembler added errata NOP
  4338  0026FC  EFAE  F013         	goto	l266
  4339  002700                     u4520:
  4340  002700  FFFF               	dw	65535	; assembler added errata NOP
  4341  002702                     
  4342                           ;main.c: 403:         PORTB = 0b00001001;
  4343  002702  0E09               	movlw	9
  4344  002704  6E81               	movwf	129,c	;volatile
  4345  002706                     
  4346                           ;main.c: 404:         ms_delay(1);
  4347  002706  0E00               	movlw	0
  4348  002708  6E09               	movwf	(ms_delay@val+1)^0,c
  4349  00270A  0E01               	movlw	1
  4350  00270C  6E08               	movwf	ms_delay@val^0,c
  4351  00270E  EC94  F015         	call	_ms_delay	;wreg free
  4352  002712                     
  4353                           ;main.c: 405:         PORTB = 0b00001100;
  4354  002712  0E0C               	movlw	12
  4355  002714  6E81               	movwf	129,c	;volatile
  4356                           
  4357                           ;main.c: 406:         ms_delay(1);
  4358  002716  0E00               	movlw	0
  4359  002718  6E09               	movwf	(ms_delay@val+1)^0,c
  4360  00271A  0E01               	movlw	1
  4361  00271C  6E08               	movwf	ms_delay@val^0,c
  4362  00271E  EC94  F015         	call	_ms_delay	;wreg free
  4363  002722                     
  4364                           ;main.c: 407:         PORTB = 0b00000110;
  4365  002722  0E06               	movlw	6
  4366  002724  6E81               	movwf	129,c	;volatile
  4367  002726                     
  4368                           ;main.c: 408:         ms_delay(1);
  4369  002726  0E00               	movlw	0
  4370  002728  6E09               	movwf	(ms_delay@val+1)^0,c
  4371  00272A  0E01               	movlw	1
  4372  00272C  6E08               	movwf	ms_delay@val^0,c
  4373  00272E  EC94  F015         	call	_ms_delay	;wreg free
  4374                           
  4375                           ;main.c: 409:         PORTB = 0b00000011;
  4376  002732  0E03               	movlw	3
  4377  002734  6E81               	movwf	129,c	;volatile
  4378  002736                     
  4379                           ;main.c: 410:         ms_delay(1);
  4380  002736  0E00               	movlw	0
  4381  002738  6E09               	movwf	(ms_delay@val+1)^0,c
  4382  00273A  0E01               	movlw	1
  4383  00273C  6E08               	movwf	ms_delay@val^0,c
  4384  00273E  EC94  F015         	call	_ms_delay	;wreg free
  4385  002742                     
  4386                           ;main.c: 411:         PORTB = 0b00001001;
  4387  002742  0E09               	movlw	9
  4388  002744  6E81               	movwf	129,c	;volatile
  4389                           
  4390                           ;main.c: 412:         ms_delay(1);
  4391  002746  0E00               	movlw	0
  4392  002748  6E09               	movwf	(ms_delay@val+1)^0,c
  4393  00274A  0E01               	movlw	1
  4394  00274C  6E08               	movwf	ms_delay@val^0,c
  4395  00274E  EC94  F015         	call	_ms_delay	;wreg free
  4396  002752  EFAE  F013         	goto	l266
  4397  002756                     l3947:
  4398  002756  FFFF               	dw	65535	; assembler added errata NOP
  4399                           
  4400                           ;main.c: 415:         stop=1;
  4401  002758  0E01               	movlw	1
  4402  00275A  6E71               	movwf	_stop^0,c
  4403  00275C                     l266:
  4404  00275C  FFFF               	dw	65535	; assembler added errata NOP
  4405  00275E  0012               	return		;funcret
  4406  002760  FFFF               	dw	65535	; errata NOP
  4407  002762                     __end_of_X_axis:
  4408                           	callstack 0
  4409                           
  4410 ;; *************** function _Twister *****************
  4411 ;; Defined at:
  4412 ;;		line 481 in file "main.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  direction       1    wreg     unsigned char 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  direction       1   13[COMRAM] unsigned char 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, status,0, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4426 ;;      Params:         0       0       0       0       0       0       0
  4427 ;;      Locals:         1       0       0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0
  4429 ;;      Totals:         1       0       0       0       0       0       0
  4430 ;;Total ram usage:        1 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 2
  4433 ;; This function calls:
  4434 ;;		_ms_delay
  4435 ;; This function is called by:
  4436 ;;		_pick_and_place
  4437 ;;		_return_to_initial
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text11
  4442  002762                     __ptext11:
  4443                           	callstack 0
  4444  002762                     _Twister:
  4445                           	callstack 0
  4446  002762  FFFF               	dw	65535	; assembler added errata NOP
  4447                           
  4448                           ;incstack = 0
  4449                           ;Twister@direction stored from wreg
  4450  002764  6E0E               	movwf	Twister@direction^0,c
  4451  002766                     
  4452                           ;main.c: 482:     if(!New_char_RX){
  4453  002766  5072               	movf	_New_char_RX^0,w,c
  4454  002768  A4D8               	btfss	status,2,c
  4455  00276A  EFB9  F013         	goto	u4561
  4456  00276E  EFBC  F013         	goto	u4560
  4457  002772                     u4561:
  4458  002772  FFFF               	dw	65535	; assembler added errata NOP
  4459  002774  EF14  F014         	goto	l4015
  4460  002778                     u4560:
  4461  002778  FFFF               	dw	65535	; assembler added errata NOP
  4462  00277A                     
  4463                           ;main.c: 483:     if (direction == 0){
  4464  00277A  500E               	movf	Twister@direction^0,w,c
  4465  00277C  A4D8               	btfss	status,2,c
  4466  00277E  EFC3  F013         	goto	u4571
  4467  002782  EFC6  F013         	goto	u4570
  4468  002786                     u4571:
  4469  002786  FFFF               	dw	65535	; assembler added errata NOP
  4470  002788  EFE7  F013         	goto	l4001
  4471  00278C                     u4570:
  4472  00278C  FFFF               	dw	65535	; assembler added errata NOP
  4473  00278E                     
  4474                           ;main.c: 484:         PORTD = 0b00110000;
  4475  00278E  0E30               	movlw	48
  4476  002790  6E83               	movwf	131,c	;volatile
  4477  002792                     
  4478                           ;main.c: 485:         ms_delay(1);
  4479  002792  0E00               	movlw	0
  4480  002794  6E09               	movwf	(ms_delay@val+1)^0,c
  4481  002796  0E01               	movlw	1
  4482  002798  6E08               	movwf	ms_delay@val^0,c
  4483  00279A  EC94  F015         	call	_ms_delay	;wreg free
  4484  00279E                     
  4485                           ;main.c: 486:         PORTD = 0b11000000;
  4486  00279E  0EC0               	movlw	192
  4487  0027A0  6E83               	movwf	131,c	;volatile
  4488                           
  4489                           ;main.c: 487:         ms_delay(1);
  4490  0027A2  0E00               	movlw	0
  4491  0027A4  6E09               	movwf	(ms_delay@val+1)^0,c
  4492  0027A6  0E01               	movlw	1
  4493  0027A8  6E08               	movwf	ms_delay@val^0,c
  4494  0027AA  EC94  F015         	call	_ms_delay	;wreg free
  4495  0027AE                     
  4496                           ;main.c: 488:         PORTD = 0b10010000;
  4497  0027AE  0E90               	movlw	144
  4498  0027B0  6E83               	movwf	131,c	;volatile
  4499  0027B2                     
  4500                           ;main.c: 489:         ms_delay(1);
  4501  0027B2  0E00               	movlw	0
  4502  0027B4  6E09               	movwf	(ms_delay@val+1)^0,c
  4503  0027B6  0E01               	movlw	1
  4504  0027B8  6E08               	movwf	ms_delay@val^0,c
  4505  0027BA  EC94  F015         	call	_ms_delay	;wreg free
  4506                           
  4507                           ;main.c: 490:         PORTD = 0b00110000;
  4508  0027BE  0E30               	movlw	48
  4509  0027C0  6E83               	movwf	131,c	;volatile
  4510  0027C2                     
  4511                           ;main.c: 491:         ms_delay(1);
  4512  0027C2  0E00               	movlw	0
  4513  0027C4  6E09               	movwf	(ms_delay@val+1)^0,c
  4514  0027C6  0E01               	movlw	1
  4515  0027C8  6E08               	movwf	ms_delay@val^0,c
  4516  0027CA  EC94  F015         	call	_ms_delay	;wreg free
  4517  0027CE                     l4001:
  4518  0027CE  FFFF               	dw	65535	; assembler added errata NOP
  4519                           
  4520                           ;main.c: 493:     if (direction == 1){
  4521  0027D0  040E               	decf	Twister@direction^0,w,c
  4522  0027D2  A4D8               	btfss	status,2,c
  4523  0027D4  EFEE  F013         	goto	u4581
  4524  0027D8  EFF1  F013         	goto	u4580
  4525  0027DC                     u4581:
  4526  0027DC  FFFF               	dw	65535	; assembler added errata NOP
  4527  0027DE  EF17  F014         	goto	l287
  4528  0027E2                     u4580:
  4529  0027E2  FFFF               	dw	65535	; assembler added errata NOP
  4530  0027E4                     
  4531                           ;main.c: 494:         PORTD = 0b10010000;
  4532  0027E4  0E90               	movlw	144
  4533  0027E6  6E83               	movwf	131,c	;volatile
  4534  0027E8                     
  4535                           ;main.c: 495:         ms_delay(1);
  4536  0027E8  0E00               	movlw	0
  4537  0027EA  6E09               	movwf	(ms_delay@val+1)^0,c
  4538  0027EC  0E01               	movlw	1
  4539  0027EE  6E08               	movwf	ms_delay@val^0,c
  4540  0027F0  EC94  F015         	call	_ms_delay	;wreg free
  4541  0027F4                     
  4542                           ;main.c: 496:         PORTD = 0b01100000;
  4543  0027F4  0E60               	movlw	96
  4544  0027F6  6E83               	movwf	131,c	;volatile
  4545                           
  4546                           ;main.c: 497:         ms_delay(1);
  4547  0027F8  0E00               	movlw	0
  4548  0027FA  6E09               	movwf	(ms_delay@val+1)^0,c
  4549  0027FC  0E01               	movlw	1
  4550  0027FE  6E08               	movwf	ms_delay@val^0,c
  4551  002800  EC94  F015         	call	_ms_delay	;wreg free
  4552  002804                     
  4553                           ;main.c: 498:         PORTD = 0b00110000;
  4554  002804  0E30               	movlw	48
  4555  002806  6E83               	movwf	131,c	;volatile
  4556  002808                     
  4557                           ;main.c: 499:         ms_delay(1);
  4558  002808  0E00               	movlw	0
  4559  00280A  6E09               	movwf	(ms_delay@val+1)^0,c
  4560  00280C  0E01               	movlw	1
  4561  00280E  6E08               	movwf	ms_delay@val^0,c
  4562  002810  EC94  F015         	call	_ms_delay	;wreg free
  4563                           
  4564                           ;main.c: 500:         PORTD = 0b10010000;
  4565  002814  0E90               	movlw	144
  4566  002816  6E83               	movwf	131,c	;volatile
  4567  002818                     
  4568                           ;main.c: 501:         ms_delay(1);
  4569  002818  0E00               	movlw	0
  4570  00281A  6E09               	movwf	(ms_delay@val+1)^0,c
  4571  00281C  0E01               	movlw	1
  4572  00281E  6E08               	movwf	ms_delay@val^0,c
  4573  002820  EC94  F015         	call	_ms_delay	;wreg free
  4574  002824  EF17  F014         	goto	l287
  4575  002828                     l4015:
  4576  002828  FFFF               	dw	65535	; assembler added errata NOP
  4577                           
  4578                           ;main.c: 505:         stop=1;
  4579  00282A  0E01               	movlw	1
  4580  00282C  6E71               	movwf	_stop^0,c
  4581  00282E                     l287:
  4582  00282E  FFFF               	dw	65535	; assembler added errata NOP
  4583  002830  0012               	return		;funcret
  4584  002832  FFFF               	dw	65535	; errata NOP
  4585  002834                     __end_of_Twister:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _ms_delay *****************
  4589 ;; Defined at:
  4590 ;;		line 510 in file "main.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  val             2    7[COMRAM] unsigned int 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  j               2   11[COMRAM] unsigned int 
  4595 ;;  i               2    9[COMRAM] unsigned int 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4605 ;;      Params:         2       0       0       0       0       0       0
  4606 ;;      Locals:         4       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0
  4608 ;;      Totals:         6       0       0       0       0       0       0
  4609 ;;Total ram usage:        6 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; Hardware stack levels required when called: 1
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_X_axis
  4616 ;;		_Y_axis
  4617 ;;		_Twister
  4618 ;;		_Z_axis
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text12
  4623  002B28                     __ptext12:
  4624                           	callstack 0
  4625  002B28                     _ms_delay:
  4626                           	callstack 0
  4627  002B28  FFFF               	dw	65535	; assembler added errata NOP
  4628  002B2A                     
  4629                           ;main.c: 510: void ms_delay(unsigned int val);main.c: 511: {;main.c: 512:      unsigned 
      +                          int i,j;;main.c: 513:         for(i=0;i<val;i++)
  4630  002B2A  0E00               	movlw	0
  4631  002B2C  6E0B               	movwf	(ms_delay@i+1)^0,c
  4632  002B2E  0E00               	movlw	0
  4633  002B30  6E0A               	movwf	ms_delay@i^0,c
  4634  002B32  EFB2  F015         	goto	l3777
  4635  002B36                     l3765:
  4636  002B36  FFFF               	dw	65535	; assembler added errata NOP
  4637                           
  4638                           ;main.c: 514:             for(j=0;j<1650;j++);
  4639  002B38  0E00               	movlw	0
  4640  002B3A  6E0D               	movwf	(ms_delay@j+1)^0,c
  4641  002B3C  0E00               	movlw	0
  4642  002B3E  6E0C               	movwf	ms_delay@j^0,c
  4643  002B40                     l3771:
  4644  002B40  FFFF               	dw	65535	; assembler added errata NOP
  4645  002B42  4A0C               	infsnz	ms_delay@j^0,f,c
  4646  002B44  2A0D               	incf	(ms_delay@j+1)^0,f,c
  4647  002B46  0E72               	movlw	114
  4648  002B48  5C0C               	subwf	ms_delay@j^0,w,c
  4649  002B4A  0E06               	movlw	6
  4650  002B4C  580D               	subwfb	(ms_delay@j+1)^0,w,c
  4651  002B4E  A0D8               	btfss	status,0,c
  4652  002B50  EFAC  F015         	goto	u4251
  4653  002B54  EFAF  F015         	goto	u4250
  4654  002B58                     u4251:
  4655  002B58  FFFF               	dw	65535	; assembler added errata NOP
  4656  002B5A  EFA0  F015         	goto	l3771
  4657  002B5E                     u4250:
  4658  002B5E  FFFF               	dw	65535	; assembler added errata NOP
  4659  002B60  4A0A               	infsnz	ms_delay@i^0,f,c
  4660  002B62  2A0B               	incf	(ms_delay@i+1)^0,f,c
  4661  002B64                     l3777:
  4662  002B64  FFFF               	dw	65535	; assembler added errata NOP
  4663  002B66  5008               	movf	ms_delay@val^0,w,c
  4664  002B68  5C0A               	subwf	ms_delay@i^0,w,c
  4665  002B6A  5009               	movf	(ms_delay@val+1)^0,w,c
  4666  002B6C  580B               	subwfb	(ms_delay@i+1)^0,w,c
  4667  002B6E  A0D8               	btfss	status,0,c
  4668  002B70  EFBC  F015         	goto	u4261
  4669  002B74  EFBF  F015         	goto	u4260
  4670  002B78                     u4261:
  4671  002B78  FFFF               	dw	65535	; assembler added errata NOP
  4672  002B7A  EF9B  F015         	goto	l3765
  4673  002B7E                     u4260:
  4674  002B7E  FFFF               	dw	65535	; assembler added errata NOP
  4675  002B80  0012               	return		;funcret
  4676  002B82  FFFF               	dw	65535	; errata NOP
  4677  002B84                     __end_of_ms_delay:
  4678                           	callstack 0
  4679                           
  4680 ;; *************** function _change_sequence *****************
  4681 ;; Defined at:
  4682 ;;		line 247 in file "main.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;		None
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  i               2   17[COMRAM] int 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1    wreg      void 
  4689 ;; Registers used:
  4690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4696 ;;      Params:         0       0       0       0       0       0       0
  4697 ;;      Locals:         2       0       0       0       0       0       0
  4698 ;;      Temps:          3       0       0       0       0       0       0
  4699 ;;      Totals:         5       0       0       0       0       0       0
  4700 ;;Total ram usage:        5 bytes
  4701 ;; Hardware stack levels used: 1
  4702 ;; Hardware stack levels required when called: 3
  4703 ;; This function calls:
  4704 ;;		_print_string
  4705 ;; This function is called by:
  4706 ;;		_start_up_menu
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           	psect	text13
  4711  002834                     __ptext13:
  4712                           	callstack 0
  4713  002834                     _change_sequence:
  4714                           	callstack 0
  4715  002834  FFFF               	dw	65535	; assembler added errata NOP
  4716  002836                     
  4717                           ;main.c: 249:     print_string("\nThe current sequence is: ");
  4718  002836  0E9F               	movlw	low STR_4
  4719  002838  6E09               	movwf	print_string@strng^0,c
  4720  00283A  0E7F               	movlw	high STR_4
  4721  00283C  6E0A               	movwf	(print_string@strng+1)^0,c
  4722  00283E  EC66  F014         	call	_print_string	;wreg free
  4723                           
  4724                           ;main.c: 250:     print_string(sequence);
  4725  002842  0E74               	movlw	low _sequence
  4726  002844  6E09               	movwf	print_string@strng^0,c
  4727  002846  0E00               	movlw	high _sequence
  4728  002848  6E0A               	movwf	(print_string@strng+1)^0,c
  4729  00284A  EC66  F014         	call	_print_string	;wreg free
  4730                           
  4731                           ;main.c: 251:     print_string("\nPlease give the new sequence as input\r");
  4732  00284E  0EAA               	movlw	low STR_5
  4733  002850  6E09               	movwf	print_string@strng^0,c
  4734  002852  0E7E               	movlw	high STR_5
  4735  002854  6E0A               	movwf	(print_string@strng+1)^0,c
  4736  002856  EC66  F014         	call	_print_string	;wreg free
  4737  00285A                     
  4738                           ;main.c: 252:     int i = 0;
  4739  00285A  0E00               	movlw	0
  4740  00285C  6E13               	movwf	(change_sequence@i+1)^0,c
  4741  00285E  0E00               	movlw	0
  4742  002860  6E12               	movwf	change_sequence@i^0,c
  4743  002862                     l4369:
  4744  002862  FFFF               	dw	65535	; assembler added errata NOP
  4745                           
  4746                           ;main.c: 254:         if(New_char_RX){
  4747  002864  5072               	movf	_New_char_RX^0,w,c
  4748  002866  B4D8               	btfsc	status,2,c
  4749  002868  EF38  F014         	goto	u5401
  4750  00286C  EF3B  F014         	goto	u5400
  4751  002870                     u5401:
  4752  002870  FFFF               	dw	65535	; assembler added errata NOP
  4753  002872  EF31  F014         	goto	l4369
  4754  002876                     u5400:
  4755  002876  FFFF               	dw	65535	; assembler added errata NOP
  4756  002878                     l4371:
  4757  002878  FFFF               	dw	65535	; assembler added errata NOP
  4758                           
  4759                           ;main.c: 257:                 sequence[i]=input_str[i];
  4760  00287A  0EBE               	movlw	low _input_str
  4761  00287C  2412               	addwf	change_sequence@i^0,w,c
  4762  00287E  6ED9               	movwf	fsr2l,c
  4763  002880  0E00               	movlw	high _input_str
  4764  002882  2013               	addwfc	(change_sequence@i+1)^0,w,c
  4765  002884  6EDA               	movwf	fsr2h,c
  4766  002886  0E74               	movlw	low _sequence
  4767  002888  2412               	addwf	change_sequence@i^0,w,c
  4768  00288A  6EE1               	movwf	fsr1l,c
  4769  00288C  0E00               	movlw	high _sequence
  4770  00288E  2013               	addwfc	(change_sequence@i+1)^0,w,c
  4771  002890  6EE2               	movwf	fsr1h,c
  4772  002892  CFDF FFE7          	movff	indf2,indf1
  4773  002896                     
  4774                           ;main.c: 258:             }while(input_str[i++]!='\n');
  4775  002896  5012               	movf	change_sequence@i^0,w,c
  4776  002898  6E0F               	movwf	??_change_sequence^0,c
  4777  00289A  5013               	movf	(change_sequence@i+1)^0,w,c
  4778  00289C  6E10               	movwf	(??_change_sequence+1)^0,c
  4779  00289E  4A12               	infsnz	change_sequence@i^0,f,c
  4780  0028A0  2A13               	incf	(change_sequence@i+1)^0,f,c
  4781  0028A2  0EBE               	movlw	low _input_str
  4782  0028A4  240F               	addwf	??_change_sequence^0,w,c
  4783  0028A6  6ED9               	movwf	fsr2l,c
  4784  0028A8  0E00               	movlw	high _input_str
  4785  0028AA  2010               	addwfc	(??_change_sequence+1)^0,w,c
  4786  0028AC  6EDA               	movwf	fsr2h,c
  4787  0028AE  0E0A               	movlw	10
  4788  0028B0  18DE               	xorwf	postinc2,w,c
  4789  0028B2  A4D8               	btfss	status,2,c
  4790  0028B4  EF5E  F014         	goto	u5411
  4791  0028B8  EF61  F014         	goto	u5410
  4792  0028BC                     u5411:
  4793  0028BC  FFFF               	dw	65535	; assembler added errata NOP
  4794  0028BE  EF3C  F014         	goto	l4371
  4795  0028C2                     u5410:
  4796  0028C2  FFFF               	dw	65535	; assembler added errata NOP
  4797  0028C4                     
  4798                           ;main.c: 260:             New_char_RX=0;
  4799  0028C4  0E00               	movlw	0
  4800  0028C6  6E72               	movwf	_New_char_RX^0,c
  4801  0028C8  0012               	return		;funcret
  4802  0028CA  FFFF               	dw	65535	; errata NOP
  4803  0028CC                     __end_of_change_sequence:
  4804                           	callstack 0
  4805                           
  4806 ;; *************** function _add_component *****************
  4807 ;; Defined at:
  4808 ;;		line 266 in file "main.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  add_componen    1   31[COMRAM] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      void 
  4815 ;; Registers used:
  4816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4822 ;;      Params:         0       0       0       0       0       0       0
  4823 ;;      Locals:         1       0       0       0       0       0       0
  4824 ;;      Temps:          2       0       0       0       0       0       0
  4825 ;;      Totals:         3       0       0       0       0       0       0
  4826 ;;Total ram usage:        3 bytes
  4827 ;; Hardware stack levels used: 1
  4828 ;; Hardware stack levels required when called: 3
  4829 ;; This function calls:
  4830 ;;		_atoi
  4831 ;;		_print_string
  4832 ;;		_strncat
  4833 ;; This function is called by:
  4834 ;;		_start_up_menu
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text14
  4839  001C00                     __ptext14:
  4840                           	callstack 0
  4841  001C00                     _add_component:
  4842                           	callstack 0
  4843  001C00  FFFF               	dw	65535	; assembler added errata NOP
  4844  001C02                     
  4845                           ;main.c: 267:     print_string("\nThe Current sequence is:");
  4846  001C02  0EBA               	movlw	low STR_6
  4847  001C04  6E09               	movwf	print_string@strng^0,c
  4848  001C06  0E7F               	movlw	high STR_6
  4849  001C08  6E0A               	movwf	(print_string@strng+1)^0,c
  4850  001C0A  EC66  F014         	call	_print_string	;wreg free
  4851                           
  4852                           ;main.c: 268:     print_string(sequence);
  4853  001C0E  0E74               	movlw	low _sequence
  4854  001C10  6E09               	movwf	print_string@strng^0,c
  4855  001C12  0E00               	movlw	high _sequence
  4856  001C14  6E0A               	movwf	(print_string@strng+1)^0,c
  4857  001C16  EC66  F014         	call	_print_string	;wreg free
  4858                           
  4859                           ;main.c: 269:     print_string("\nEnter the component want to add (A,B,C,D)?");
  4860  001C1A  0E7E               	movlw	low STR_7
  4861  001C1C  6E09               	movwf	print_string@strng^0,c
  4862  001C1E  0E7E               	movlw	high STR_7
  4863  001C20  6E0A               	movwf	(print_string@strng+1)^0,c
  4864  001C22  EC66  F014         	call	_print_string	;wreg free
  4865  001C26                     l4379:
  4866  001C26  FFFF               	dw	65535	; assembler added errata NOP
  4867                           
  4868                           ;main.c: 271:         char add_component=input_str[0];
  4869  001C28  C0BE  F020         	movff	_input_str,add_component@add_component	;volatile
  4870  001C2C                     
  4871                           ;main.c: 272:         if(New_char_RX){
  4872  001C2C  5072               	movf	_New_char_RX^0,w,c
  4873  001C2E  B4D8               	btfsc	status,2,c
  4874  001C30  EF1C  F00E         	goto	u5421
  4875  001C34  EF1F  F00E         	goto	u5420
  4876  001C38                     u5421:
  4877  001C38  FFFF               	dw	65535	; assembler added errata NOP
  4878  001C3A  EF13  F00E         	goto	l4379
  4879  001C3E                     u5420:
  4880  001C3E  FFFF               	dw	65535	; assembler added errata NOP
  4881  001C40                     
  4882                           ;main.c: 273:             New_char_RX=0;
  4883  001C40  0E00               	movlw	0
  4884  001C42  6E72               	movwf	_New_char_RX^0,c
  4885                           
  4886                           ;main.c: 274:             switch(add_component){
  4887  001C44  EFD5  F00E         	goto	l4435
  4888  001C48                     l4385:
  4889  001C48  FFFF               	dw	65535	; assembler added errata NOP
  4890                           
  4891                           ;main.c: 276:                     print_string("\nEnter the pick position X:");
  4892  001C4A  0E67               	movlw	low STR_8
  4893  001C4C  6E09               	movwf	print_string@strng^0,c
  4894  001C4E  0E7F               	movlw	high STR_8
  4895  001C50  6E0A               	movwf	(print_string@strng+1)^0,c
  4896  001C52  EC66  F014         	call	_print_string	;wreg free
  4897  001C56                     l4387:
  4898  001C56  FFFF               	dw	65535	; assembler added errata NOP
  4899                           
  4900                           ;main.c: 278:                         if(New_char_RX){
  4901  001C58  5072               	movf	_New_char_RX^0,w,c
  4902  001C5A  B4D8               	btfsc	status,2,c
  4903  001C5C  EF32  F00E         	goto	u5431
  4904  001C60  EF35  F00E         	goto	u5430
  4905  001C64                     u5431:
  4906  001C64  FFFF               	dw	65535	; assembler added errata NOP
  4907  001C66  EF2B  F00E         	goto	l4387
  4908  001C6A                     u5430:
  4909  001C6A  FFFF               	dw	65535	; assembler added errata NOP
  4910  001C6C                     
  4911                           ;main.c: 279:                             X_Pick_D=atoi(input_str);
  4912  001C6C  0EBE               	movlw	low _input_str
  4913  001C6E  6E0F               	movwf	atoi@s^0,c
  4914  001C70  0E00               	movlw	high _input_str
  4915  001C72  6E10               	movwf	(atoi@s+1)^0,c
  4916  001C74  ECFB  F00E         	call	_atoi	;wreg free
  4917  001C78  C00F  F059         	movff	?_atoi,_X_Pick_D
  4918  001C7C  C010  F05A         	movff	?_atoi+1,_X_Pick_D+1
  4919  001C80                     
  4920                           ;main.c: 280:                             New_char_RX=0;
  4921  001C80  0E00               	movlw	0
  4922  001C82  6E72               	movwf	_New_char_RX^0,c
  4923  001C84                     
  4924                           ;main.c: 284:                     print_string("\nEnter the pick position Y:");
  4925  001C84  0E83               	movlw	low STR_9
  4926  001C86  6E09               	movwf	print_string@strng^0,c
  4927  001C88  0E7F               	movlw	high STR_9
  4928  001C8A  6E0A               	movwf	(print_string@strng+1)^0,c
  4929  001C8C  EC66  F014         	call	_print_string	;wreg free
  4930  001C90                     l4395:
  4931  001C90  FFFF               	dw	65535	; assembler added errata NOP
  4932                           
  4933                           ;main.c: 286:                         if(New_char_RX){
  4934  001C92  5072               	movf	_New_char_RX^0,w,c
  4935  001C94  B4D8               	btfsc	status,2,c
  4936  001C96  EF4F  F00E         	goto	u5441
  4937  001C9A  EF52  F00E         	goto	u5440
  4938  001C9E                     u5441:
  4939  001C9E  FFFF               	dw	65535	; assembler added errata NOP
  4940  001CA0  EF48  F00E         	goto	l4395
  4941  001CA4                     u5440:
  4942  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  4943  001CA6                     
  4944                           ;main.c: 287:                             Y_Pick_D=(atoi(input_str));
  4945  001CA6  0EBE               	movlw	low _input_str
  4946  001CA8  6E0F               	movwf	atoi@s^0,c
  4947  001CAA  0E00               	movlw	high _input_str
  4948  001CAC  6E10               	movwf	(atoi@s+1)^0,c
  4949  001CAE  ECFB  F00E         	call	_atoi	;wreg free
  4950  001CB2  C00F  F0AC         	movff	?_atoi,_Y_Pick_D
  4951  001CB6  C010  F0AD         	movff	?_atoi+1,_Y_Pick_D+1
  4952  001CBA                     
  4953                           ;main.c: 288:                             New_char_RX=0;
  4954  001CBA  0E00               	movlw	0
  4955  001CBC  6E72               	movwf	_New_char_RX^0,c
  4956  001CBE                     
  4957                           ;main.c: 292:                     print_string("\nEnter the pick orientation:");
  4958  001CBE  0E4A               	movlw	low STR_10
  4959  001CC0  6E09               	movwf	print_string@strng^0,c
  4960  001CC2  0E7F               	movlw	high STR_10
  4961  001CC4  6E0A               	movwf	(print_string@strng+1)^0,c
  4962  001CC6  EC66  F014         	call	_print_string	;wreg free
  4963  001CCA                     l4403:
  4964  001CCA  FFFF               	dw	65535	; assembler added errata NOP
  4965                           
  4966                           ;main.c: 294:                         if(New_char_RX){
  4967  001CCC  5072               	movf	_New_char_RX^0,w,c
  4968  001CCE  B4D8               	btfsc	status,2,c
  4969  001CD0  EF6C  F00E         	goto	u5451
  4970  001CD4  EF6F  F00E         	goto	u5450
  4971  001CD8                     u5451:
  4972  001CD8  FFFF               	dw	65535	; assembler added errata NOP
  4973  001CDA  EF65  F00E         	goto	l4403
  4974  001CDE                     u5450:
  4975  001CDE  FFFF               	dw	65535	; assembler added errata NOP
  4976  001CE0                     
  4977                           ;main.c: 295:                             Pick_Angle_D=(atoi(input_str));
  4978  001CE0  0EBE               	movlw	low _input_str
  4979  001CE2  6E0F               	movwf	atoi@s^0,c
  4980  001CE4  0E00               	movlw	high _input_str
  4981  001CE6  6E10               	movwf	(atoi@s+1)^0,c
  4982  001CE8  ECFB  F00E         	call	_atoi	;wreg free
  4983  001CEC  C00F  F0AA         	movff	?_atoi,_Pick_Angle_D
  4984  001CF0  C010  F0AB         	movff	?_atoi+1,_Pick_Angle_D+1
  4985  001CF4                     
  4986                           ;main.c: 296:                             New_char_RX=0;
  4987  001CF4  0E00               	movlw	0
  4988  001CF6  6E72               	movwf	_New_char_RX^0,c
  4989  001CF8                     
  4990                           ;main.c: 300:                     print_string("\nEnter the place position X:");
  4991  001CF8  0E10               	movlw	low STR_11
  4992  001CFA  6E09               	movwf	print_string@strng^0,c
  4993  001CFC  0E7F               	movlw	high STR_11
  4994  001CFE  6E0A               	movwf	(print_string@strng+1)^0,c
  4995  001D00  EC66  F014         	call	_print_string	;wreg free
  4996  001D04                     l4411:
  4997  001D04  FFFF               	dw	65535	; assembler added errata NOP
  4998                           
  4999                           ;main.c: 302:                         if(New_char_RX){
  5000  001D06  5072               	movf	_New_char_RX^0,w,c
  5001  001D08  B4D8               	btfsc	status,2,c
  5002  001D0A  EF89  F00E         	goto	u5461
  5003  001D0E  EF8C  F00E         	goto	u5460
  5004  001D12                     u5461:
  5005  001D12  FFFF               	dw	65535	; assembler added errata NOP
  5006  001D14  EF82  F00E         	goto	l4411
  5007  001D18                     u5460:
  5008  001D18  FFFF               	dw	65535	; assembler added errata NOP
  5009  001D1A                     
  5010                           ;main.c: 303:                             X_Place_D=(atoi(input_str));
  5011  001D1A  0EBE               	movlw	low _input_str
  5012  001D1C  6E0F               	movwf	atoi@s^0,c
  5013  001D1E  0E00               	movlw	high _input_str
  5014  001D20  6E10               	movwf	(atoi@s+1)^0,c
  5015  001D22  ECFB  F00E         	call	_atoi	;wreg free
  5016  001D26  C00F  F0A8         	movff	?_atoi,_X_Place_D
  5017  001D2A  C010  F0A9         	movff	?_atoi+1,_X_Place_D+1
  5018  001D2E                     
  5019                           ;main.c: 304:                             New_char_RX=0;
  5020  001D2E  0E00               	movlw	0
  5021  001D30  6E72               	movwf	_New_char_RX^0,c
  5022  001D32                     
  5023                           ;main.c: 308:                     print_string("\nEnter the place position Y:");
  5024  001D32  0E2D               	movlw	low STR_12
  5025  001D34  6E09               	movwf	print_string@strng^0,c
  5026  001D36  0E7F               	movlw	high STR_12
  5027  001D38  6E0A               	movwf	(print_string@strng+1)^0,c
  5028  001D3A  EC66  F014         	call	_print_string	;wreg free
  5029  001D3E                     l4419:
  5030  001D3E  FFFF               	dw	65535	; assembler added errata NOP
  5031                           
  5032                           ;main.c: 310:                         if(New_char_RX){
  5033  001D40  5072               	movf	_New_char_RX^0,w,c
  5034  001D42  B4D8               	btfsc	status,2,c
  5035  001D44  EFA6  F00E         	goto	u5471
  5036  001D48  EFA9  F00E         	goto	u5470
  5037  001D4C                     u5471:
  5038  001D4C  FFFF               	dw	65535	; assembler added errata NOP
  5039  001D4E  EF9F  F00E         	goto	l4419
  5040  001D52                     u5470:
  5041  001D52  FFFF               	dw	65535	; assembler added errata NOP
  5042  001D54                     
  5043                           ;main.c: 311:                             Y_Place_D=(atoi(input_str));
  5044  001D54  0EBE               	movlw	low _input_str
  5045  001D56  6E0F               	movwf	atoi@s^0,c
  5046  001D58  0E00               	movlw	high _input_str
  5047  001D5A  6E10               	movwf	(atoi@s+1)^0,c
  5048  001D5C  ECFB  F00E         	call	_atoi	;wreg free
  5049  001D60  C00F  F0A6         	movff	?_atoi,_Y_Place_D
  5050  001D64  C010  F0A7         	movff	?_atoi+1,_Y_Place_D+1
  5051  001D68                     
  5052                           ;main.c: 312:                             New_char_RX=0;
  5053  001D68  0E00               	movlw	0
  5054  001D6A  6E72               	movwf	_New_char_RX^0,c
  5055  001D6C                     
  5056                           ;main.c: 316:                     print_string("\nEnter the place orientation:");
  5057  001D6C  0EF2               	movlw	low STR_13
  5058  001D6E  6E09               	movwf	print_string@strng^0,c
  5059  001D70  0E7E               	movlw	high STR_13
  5060  001D72  6E0A               	movwf	(print_string@strng+1)^0,c
  5061  001D74  EC66  F014         	call	_print_string	;wreg free
  5062  001D78                     l4427:
  5063  001D78  FFFF               	dw	65535	; assembler added errata NOP
  5064                           
  5065                           ;main.c: 318:                         if(New_char_RX){
  5066  001D7A  5072               	movf	_New_char_RX^0,w,c
  5067  001D7C  B4D8               	btfsc	status,2,c
  5068  001D7E  EFC3  F00E         	goto	u5481
  5069  001D82  EFC6  F00E         	goto	u5480
  5070  001D86                     u5481:
  5071  001D86  FFFF               	dw	65535	; assembler added errata NOP
  5072  001D88  EFBC  F00E         	goto	l4427
  5073  001D8C                     u5480:
  5074  001D8C  FFFF               	dw	65535	; assembler added errata NOP
  5075  001D8E                     
  5076                           ;main.c: 319:                             Place_Angle_D=(atoi(input_str));
  5077  001D8E  0EBE               	movlw	low _input_str
  5078  001D90  6E0F               	movwf	atoi@s^0,c
  5079  001D92  0E00               	movlw	high _input_str
  5080  001D94  6E10               	movwf	(atoi@s+1)^0,c
  5081  001D96  ECFB  F00E         	call	_atoi	;wreg free
  5082  001D9A  C00F  F0A4         	movff	?_atoi,_Place_Angle_D
  5083  001D9E  C010  F0A5         	movff	?_atoi+1,_Place_Angle_D+1
  5084  001DA2                     
  5085                           ;main.c: 320:                             New_char_RX=0;
  5086  001DA2  0E00               	movlw	0
  5087  001DA4  6E72               	movwf	_New_char_RX^0,c
  5088                           
  5089                           ;main.c: 321:                             break;
  5090  001DA6  EFE8  F00E         	goto	l4437
  5091  001DAA                     l4435:
  5092  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  5093  001DAC  5020               	movf	add_component@add_component^0,w,c
  5094  001DAE  6E1E               	movwf	??_add_component^0,c
  5095  001DB0  6A1F               	clrf	(??_add_component+1)^0,c
  5096                           
  5097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5098                           ; Switch size 1, requested type "simple"
  5099                           ; Number of cases is 1, Range of values is 0 to 0
  5100                           ; switch strategies available:
  5101                           ; Name         Instructions Cycles
  5102                           ; simple_byte            4     3 (average)
  5103                           ;	Chosen strategy is simple_byte
  5104  001DB2  501F               	movf	(??_add_component+1)^0,w,c
  5105  001DB4  0A00               	xorlw	0	; case 0
  5106  001DB6  B4D8               	btfsc	status,2,c
  5107  001DB8  EFE0  F00E         	goto	l4735
  5108  001DBC  EFE8  F00E         	goto	l4437
  5109  001DC0                     l4735:
  5110  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  5111                           
  5112                           ; Switch size 1, requested type "simple"
  5113                           ; Number of cases is 1, Range of values is 68 to 68
  5114                           ; switch strategies available:
  5115                           ; Name         Instructions Cycles
  5116                           ; simple_byte            4     3 (average)
  5117                           ;	Chosen strategy is simple_byte
  5118  001DC2  501E               	movf	??_add_component^0,w,c
  5119  001DC4  0A44               	xorlw	68	; case 68
  5120  001DC6  B4D8               	btfsc	status,2,c
  5121  001DC8  EF24  F00E         	goto	l4385
  5122  001DCC  EFE8  F00E         	goto	l4437
  5123  001DD0                     l4437:
  5124  001DD0  FFFF               	dw	65535	; assembler added errata NOP
  5125                           
  5126                           ;main.c: 343:     strncat(sequence, add_component,1);
  5127  001DD2  0E74               	movlw	low _sequence
  5128  001DD4  6E0C               	movwf	strncat@d^0,c
  5129  001DD6  0E00               	movlw	high _sequence
  5130  001DD8  6E0D               	movwf	(strncat@d+1)^0,c
  5131  001DDA  0E00               	movlw	low _add_component
  5132  001DDC  6E0E               	movwf	strncat@s^0,c
  5133  001DDE  0E1C               	movlw	high _add_component
  5134  001DE0  6E0F               	movwf	(strncat@s+1)^0,c
  5135  001DE2  0E00               	movlw	0
  5136  001DE4  6E11               	movwf	(strncat@n+1)^0,c
  5137  001DE6  0E01               	movlw	1
  5138  001DE8  6E10               	movwf	strncat@n^0,c
  5139  001DEA  ECAD  F014         	call	_strncat	;wreg free
  5140  001DEE                     
  5141                           ;main.c: 344:     New_char_RX=0;
  5142  001DEE  0E00               	movlw	0
  5143  001DF0  6E72               	movwf	_New_char_RX^0,c
  5144  001DF2  0012               	return		;funcret
  5145  001DF4  FFFF               	dw	65535	; errata NOP
  5146  001DF6                     __end_of_add_component:
  5147                           	callstack 0
  5148                           
  5149 ;; *************** function _strncat *****************
  5150 ;; Defined at:
  5151 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strncat.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  d               2   11[COMRAM] PTR unsigned char 
  5154 ;;		 -> sequence(4), 
  5155 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5156 ;;  n               2   15[COMRAM] unsigned int 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  a               2    0        PTR unsigned char 
  5159 ;;		 -> sequence(4), 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  2   11[COMRAM] PTR unsigned char 
  5162 ;; Registers used:
  5163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5169 ;;      Params:         6       0       0       0       0       0       0
  5170 ;;      Locals:         0       0       0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0       0
  5172 ;;      Totals:         6       0       0       0       0       0       0
  5173 ;;Total ram usage:        6 bytes
  5174 ;; Hardware stack levels used: 1
  5175 ;; Hardware stack levels required when called: 2
  5176 ;; This function calls:
  5177 ;;		_strlen
  5178 ;; This function is called by:
  5179 ;;		_add_component
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text15
  5184  00295A                     __ptext15:
  5185                           	callstack 0
  5186  00295A                     _strncat:
  5187                           	callstack 0
  5188  00295A  FFFF               	dw	65535	; assembler added errata NOP
  5189  00295C  C00C  F008         	movff	strncat@d,strlen@s
  5190  002960  C00D  F009         	movff	strncat@d+1,strlen@s+1
  5191  002964  ECE7  F015         	call	_strlen	;wreg free
  5192  002968  5008               	movf	?_strlen^0,w,c
  5193  00296A  260C               	addwf	strncat@d^0,f,c
  5194  00296C  5009               	movf	(?_strlen+1)^0,w,c
  5195  00296E  220D               	addwfc	(strncat@d+1)^0,f,c
  5196  002970  EFCC  F014         	goto	l3879
  5197  002974                     l3871:
  5198  002974  FFFF               	dw	65535	; assembler added errata NOP
  5199  002976  0610               	decf	strncat@n^0,f,c
  5200  002978  A0D8               	btfss	status,0,c
  5201  00297A  0611               	decf	(strncat@n+1)^0,f,c
  5202  00297C  C00E  FFD9         	movff	strncat@s,fsr2l
  5203  002980  C00F  FFDA         	movff	strncat@s+1,fsr2h
  5204  002984  C00C  FFE1         	movff	strncat@d,fsr1l
  5205  002988  C00D  FFE2         	movff	strncat@d+1,fsr1h
  5206  00298C  CFDF FFE7          	movff	indf2,indf1
  5207  002990  4A0E               	infsnz	strncat@s^0,f,c
  5208  002992  2A0F               	incf	(strncat@s+1)^0,f,c
  5209  002994  4A0C               	infsnz	strncat@d^0,f,c
  5210  002996  2A0D               	incf	(strncat@d+1)^0,f,c
  5211  002998                     l3879:
  5212  002998  FFFF               	dw	65535	; assembler added errata NOP
  5213  00299A  5010               	movf	strncat@n^0,w,c
  5214  00299C  1011               	iorwf	(strncat@n+1)^0,w,c
  5215  00299E  B4D8               	btfsc	status,2,c
  5216  0029A0  EFD4  F014         	goto	u4431
  5217  0029A4  EFD7  F014         	goto	u4430
  5218  0029A8                     u4431:
  5219  0029A8  FFFF               	dw	65535	; assembler added errata NOP
  5220  0029AA  EFE5  F014         	goto	l3883
  5221  0029AE                     u4430:
  5222  0029AE  FFFF               	dw	65535	; assembler added errata NOP
  5223  0029B0  C00E  FFD9         	movff	strncat@s,fsr2l
  5224  0029B4  C00F  FFDA         	movff	strncat@s+1,fsr2h
  5225  0029B8  50DF               	movf	indf2,w,c
  5226  0029BA  A4D8               	btfss	status,2,c
  5227  0029BC  EFE2  F014         	goto	u4441
  5228  0029C0  EFE5  F014         	goto	u4440
  5229  0029C4                     u4441:
  5230  0029C4  FFFF               	dw	65535	; assembler added errata NOP
  5231  0029C6  EFBA  F014         	goto	l3871
  5232  0029CA                     u4440:
  5233  0029CA                     l3883:
  5234  0029CA  FFFF               	dw	65535	; assembler added errata NOP
  5235  0029CC  C00C  FFD9         	movff	strncat@d,fsr2l
  5236  0029D0  C00D  FFDA         	movff	strncat@d+1,fsr2h
  5237  0029D4  0E00               	movlw	0
  5238  0029D6  6EDF               	movwf	indf2,c
  5239  0029D8  4A0C               	infsnz	strncat@d^0,f,c
  5240  0029DA  2A0D               	incf	(strncat@d+1)^0,f,c
  5241  0029DC  0012               	return		;funcret
  5242  0029DE  FFFF               	dw	65535	; errata NOP
  5243  0029E0                     __end_of_strncat:
  5244                           	callstack 0
  5245                           
  5246 ;; *************** function _strlen *****************
  5247 ;; Defined at:
  5248 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5251 ;;		 -> sequence(4), 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  a               2    9[COMRAM] PTR const unsigned char 
  5254 ;;		 -> sequence(4), 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  2    7[COMRAM] unsigned int 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5264 ;;      Params:         2       0       0       0       0       0       0
  5265 ;;      Locals:         2       0       0       0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0
  5267 ;;      Totals:         4       0       0       0       0       0       0
  5268 ;;Total ram usage:        4 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 1
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_remove_component
  5275 ;;		_strncat
  5276 ;;		_strrchr
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text16
  5281  002BCE                     __ptext16:
  5282                           	callstack 0
  5283  002BCE                     _strlen:
  5284                           	callstack 0
  5285  002BCE  FFFF               	dw	65535	; assembler added errata NOP
  5286  002BD0  C008  F00A         	movff	strlen@s,strlen@a
  5287  002BD4  C009  F00B         	movff	strlen@s+1,strlen@a+1
  5288  002BD8  EFF1  F015         	goto	l3757
  5289  002BDC                     l3755:
  5290  002BDC  FFFF               	dw	65535	; assembler added errata NOP
  5291  002BDE  4A08               	infsnz	strlen@s^0,f,c
  5292  002BE0  2A09               	incf	(strlen@s+1)^0,f,c
  5293  002BE2                     l3757:
  5294  002BE2  FFFF               	dw	65535	; assembler added errata NOP
  5295  002BE4  C008  FFD9         	movff	strlen@s,fsr2l
  5296  002BE8  C009  FFDA         	movff	strlen@s+1,fsr2h
  5297  002BEC  50DF               	movf	indf2,w,c
  5298  002BEE  A4D8               	btfss	status,2,c
  5299  002BF0  EFFC  F015         	goto	u4241
  5300  002BF4  EFFF  F015         	goto	u4240
  5301  002BF8                     u4241:
  5302  002BF8  FFFF               	dw	65535	; assembler added errata NOP
  5303  002BFA  EFEE  F015         	goto	l3755
  5304  002BFE                     u4240:
  5305  002BFE  FFFF               	dw	65535	; assembler added errata NOP
  5306  002C00  500A               	movf	strlen@a^0,w,c
  5307  002C02  5C08               	subwf	strlen@s^0,w,c
  5308  002C04  6E08               	movwf	?_strlen^0,c
  5309  002C06  500B               	movf	(strlen@a+1)^0,w,c
  5310  002C08  5809               	subwfb	(strlen@s+1)^0,w,c
  5311  002C0A  6E09               	movwf	(?_strlen+1)^0,c
  5312  002C0C  0012               	return		;funcret
  5313  002C0E  FFFF               	dw	65535	; errata NOP
  5314  002C10                     __end_of_strlen:
  5315                           	callstack 0
  5316                           
  5317 ;; *************** function _print_string *****************
  5318 ;; Defined at:
  5319 ;;		line 381 in file "main.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  strng           2    8[COMRAM] PTR unsigned char 
  5322 ;;		 -> STR_16(70), STR_15(19), STR_14(63), STR_13(30), 
  5323 ;;		 -> STR_12(29), STR_11(29), STR_10(29), STR_9(28), 
  5324 ;;		 -> STR_8(28), STR_7(44), STR_6(26), STR_5(40), 
  5325 ;;		 -> STR_4(27), STR_3(32), sequence(4), STR_2(23), 
  5326 ;;		 -> STR_1(82), 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  i               2   12[COMRAM] int 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5338 ;;      Params:         2       0       0       0       0       0       0
  5339 ;;      Locals:         2       0       0       0       0       0       0
  5340 ;;      Temps:          2       0       0       0       0       0       0
  5341 ;;      Totals:         6       0       0       0       0       0       0
  5342 ;;Total ram usage:        6 bytes
  5343 ;; Hardware stack levels used: 1
  5344 ;; Hardware stack levels required when called: 2
  5345 ;; This function calls:
  5346 ;;		_serial_tx_char
  5347 ;; This function is called by:
  5348 ;;		_start_up_menu
  5349 ;;		_change_sequence
  5350 ;;		_add_component
  5351 ;;		_remove_component
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text17
  5356  0028CC                     __ptext17:
  5357                           	callstack 0
  5358  0028CC                     _print_string:
  5359                           	callstack 0
  5360  0028CC  FFFF               	dw	65535	; assembler added errata NOP
  5361  0028CE                     
  5362                           ;main.c: 381: void print_string(char strng[]);main.c: 382: {;main.c: 383:     for(int i 
      +                          =0; strng[i]!=((void*)0); i++){
  5363  0028CE  0E00               	movlw	0
  5364  0028D0  6E0E               	movwf	(print_string@i+1)^0,c
  5365  0028D2  0E00               	movlw	0
  5366  0028D4  6E0D               	movwf	print_string@i^0,c
  5367  0028D6  EF89  F014         	goto	l3823
  5368  0028DA                     l3819:
  5369  0028DA  FFFF               	dw	65535	; assembler added errata NOP
  5370                           
  5371                           ;main.c: 384:         serial_tx_char(strng[i]);
  5372  0028DC  500D               	movf	print_string@i^0,w,c
  5373  0028DE  2409               	addwf	print_string@strng^0,w,c
  5374  0028E0  6E0B               	movwf	??_print_string^0,c
  5375  0028E2  500E               	movf	(print_string@i+1)^0,w,c
  5376  0028E4  200A               	addwfc	(print_string@strng+1)^0,w,c
  5377  0028E6  6E0C               	movwf	(??_print_string+1)^0,c
  5378  0028E8  C00B  FFF6         	movff	??_print_string,tblptrl
  5379  0028EC  C00C  FFF7         	movff	??_print_string+1,tblptrh
  5380  0028F0  6AF8               	clrf	tblptru,c
  5381  0028F2  0E05               	movlw	(high __ramtop+-1)
  5382  0028F4  64F7               	cpfsgt	tblptrh,c
  5383  0028F6  D004               	bra	u4337
  5384  0028F8  0008               	tblrd		*
  5385  0028FA  FFFF               	dw	65535	; errata NOP
  5386  0028FC  50F5               	movf	tablat,w,c
  5387  0028FE  D005               	bra	u4330
  5388  002900                     u4337:
  5389  002900  CFF6 FFE1          	movff	tblptrl,fsr1l
  5390  002904  CFF7 FFE2          	movff	tblptrh,fsr1h
  5391  002908  50E7               	movf	indf1,w,c
  5392  00290A                     u4330:
  5393  00290A  ECAD  F016         	call	_serial_tx_char
  5394  00290E                     
  5395                           ;main.c: 385:     }
  5396  00290E  4A0D               	infsnz	print_string@i^0,f,c
  5397  002910  2A0E               	incf	(print_string@i+1)^0,f,c
  5398  002912                     l3823:
  5399  002912  FFFF               	dw	65535	; assembler added errata NOP
  5400  002914  500D               	movf	print_string@i^0,w,c
  5401  002916  2409               	addwf	print_string@strng^0,w,c
  5402  002918  6E0B               	movwf	??_print_string^0,c
  5403  00291A  500E               	movf	(print_string@i+1)^0,w,c
  5404  00291C  200A               	addwfc	(print_string@strng+1)^0,w,c
  5405  00291E  6E0C               	movwf	(??_print_string+1)^0,c
  5406  002920  C00B  FFF6         	movff	??_print_string,tblptrl
  5407  002924  C00C  FFF7         	movff	??_print_string+1,tblptrh
  5408  002928  6AF8               	clrf	tblptru,c
  5409  00292A  0E05               	movlw	(high __ramtop+-1)
  5410  00292C  64F7               	cpfsgt	tblptrh,c
  5411  00292E  D004               	bra	u4347
  5412  002930  0008               	tblrd		*
  5413  002932  FFFF               	dw	65535	; errata NOP
  5414  002934  50F5               	movf	tablat,w,c
  5415  002936  D005               	bra	u4340
  5416  002938                     u4347:
  5417  002938  CFF6 FFE1          	movff	tblptrl,fsr1l
  5418  00293C  CFF7 FFE2          	movff	tblptrh,fsr1h
  5419  002940  50E7               	movf	indf1,w,c
  5420  002942                     u4340:
  5421  002942  0900               	iorlw	0
  5422  002944  A4D8               	btfss	status,2,c
  5423  002946  EFA7  F014         	goto	u4351
  5424  00294A  EFAA  F014         	goto	u4350
  5425  00294E                     u4351:
  5426  00294E  FFFF               	dw	65535	; assembler added errata NOP
  5427  002950  EF6D  F014         	goto	l3819
  5428  002954                     u4350:
  5429  002954  FFFF               	dw	65535	; assembler added errata NOP
  5430  002956  0012               	return		;funcret
  5431  002958  FFFF               	dw	65535	; errata NOP
  5432  00295A                     __end_of_print_string:
  5433                           	callstack 0
  5434                           
  5435 ;; *************** function _serial_tx_char *****************
  5436 ;; Defined at:
  5437 ;;		line 44 in file "serial_rs232.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  val             1    wreg     unsigned char 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  val             1    7[COMRAM] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5451 ;;      Params:         0       0       0       0       0       0       0
  5452 ;;      Locals:         1       0       0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0
  5454 ;;      Totals:         1       0       0       0       0       0       0
  5455 ;;Total ram usage:        1 bytes
  5456 ;; Hardware stack levels used: 1
  5457 ;; Hardware stack levels required when called: 1
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_remove_component
  5462 ;;		_print_string
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           	psect	text18
  5467  002D5A                     __ptext18:
  5468                           	callstack 0
  5469  002D5A                     _serial_tx_char:
  5470                           	callstack 0
  5471  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  5472                           
  5473                           ;incstack = 0
  5474                           ;serial_tx_char@val stored from wreg
  5475  002D5C  6E08               	movwf	serial_tx_char@val^0,c
  5476  002D5E                     
  5477                           ;serial_rs232.c: 44: void serial_tx_char(unsigned char val);serial_rs232.c: 45: {;serial
      +                          _rs232.c: 46:   TXREG=val;
  5478  002D5E  C008  FFAD         	movff	serial_tx_char@val,4013	;volatile
  5479  002D62                     l48:
  5480  002D62  FFFF               	dw	65535	; assembler added errata NOP
  5481  002D64  A2AC               	btfss	172,1,c	;volatile
  5482  002D66  EFB7  F016         	goto	u4231
  5483  002D6A  EFBA  F016         	goto	u4230
  5484  002D6E                     u4231:
  5485  002D6E  FFFF               	dw	65535	; assembler added errata NOP
  5486  002D70  EFB1  F016         	goto	l48
  5487  002D74                     u4230:
  5488  002D74  FFFF               	dw	65535	; assembler added errata NOP
  5489  002D76  0012               	return		;funcret
  5490  002D78  FFFF               	dw	65535	; errata NOP
  5491  002D7A                     __end_of_serial_tx_char:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function _atoi *****************
  5495 ;; Defined at:
  5496 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  s               2   14[COMRAM] PTR const unsigned char 
  5499 ;;		 -> input_str(10), 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  n               2   27[COMRAM] int 
  5502 ;;  neg             2   20[COMRAM] int 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  2   14[COMRAM] int 
  5505 ;; Registers used:
  5506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5512 ;;      Params:         2       0       0       0       0       0       0
  5513 ;;      Locals:         9       0       0       0       0       0       0
  5514 ;;      Temps:          4       0       0       0       0       0       0
  5515 ;;      Totals:        15       0       0       0       0       0       0
  5516 ;;Total ram usage:       15 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; Hardware stack levels required when called: 2
  5519 ;; This function calls:
  5520 ;;		___wmul
  5521 ;;		_isdigit
  5522 ;;		_isspace
  5523 ;; This function is called by:
  5524 ;;		_add_component
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text19
  5529  001DF6                     __ptext19:
  5530                           	callstack 0
  5531  001DF6                     _atoi:
  5532                           	callstack 0
  5533  001DF6  FFFF               	dw	65535	; assembler added errata NOP
  5534  001DF8  0E00               	movlw	0
  5535  001DFA  6E1D               	movwf	(atoi@n+1)^0,c
  5536  001DFC  0E00               	movlw	0
  5537  001DFE  6E1C               	movwf	atoi@n^0,c
  5538  001E00  0E00               	movlw	0
  5539  001E02  6E16               	movwf	(atoi@neg+1)^0,c
  5540  001E04  0E00               	movlw	0
  5541  001E06  6E15               	movwf	atoi@neg^0,c
  5542  001E08  EF09  F00F         	goto	l3829
  5543  001E0C                     l3827:
  5544  001E0C  FFFF               	dw	65535	; assembler added errata NOP
  5545  001E0E  4A0F               	infsnz	atoi@s^0,f,c
  5546  001E10  2A10               	incf	(atoi@s+1)^0,f,c
  5547  001E12                     l3829:
  5548  001E12  FFFF               	dw	65535	; assembler added errata NOP
  5549  001E14  0E01               	movlw	1
  5550  001E16  6E1B               	movwf	_atoi$1054^0,c
  5551  001E18  C00F  FFD9         	movff	atoi@s,fsr2l
  5552  001E1C  C010  FFDA         	movff	atoi@s+1,fsr2h
  5553  001E20  0E20               	movlw	32
  5554  001E22  18DE               	xorwf	postinc2,w,c
  5555  001E24  B4D8               	btfsc	status,2,c
  5556  001E26  EF17  F00F         	goto	u4361
  5557  001E2A  EF1A  F00F         	goto	u4360
  5558  001E2E                     u4361:
  5559  001E2E  FFFF               	dw	65535	; assembler added errata NOP
  5560  001E30  EF39  F00F         	goto	l3837
  5561  001E34                     u4360:
  5562  001E34  FFFF               	dw	65535	; assembler added errata NOP
  5563  001E36  0EF7               	movlw	247
  5564  001E38  6E11               	movwf	??_atoi^0,c
  5565  001E3A  0EFF               	movlw	255
  5566  001E3C  6E12               	movwf	(??_atoi+1)^0,c
  5567  001E3E  C00F  FFD9         	movff	atoi@s,fsr2l
  5568  001E42  C010  FFDA         	movff	atoi@s+1,fsr2h
  5569  001E46  50DF               	movf	indf2,w,c
  5570  001E48  6E13               	movwf	(??_atoi+2)^0,c
  5571  001E4A  6A14               	clrf	(??_atoi+3)^0,c
  5572  001E4C  5011               	movf	??_atoi^0,w,c
  5573  001E4E  2613               	addwf	(??_atoi+2)^0,f,c
  5574  001E50  5012               	movf	(??_atoi+1)^0,w,c
  5575  001E52  2214               	addwfc	(??_atoi+3)^0,f,c
  5576  001E54  5014               	movf	(??_atoi+3)^0,w,c
  5577  001E56  E10A               	bnz	u4370
  5578  001E58  0E05               	movlw	5
  5579  001E5A  5C13               	subwf	(??_atoi+2)^0,w,c
  5580  001E5C  A0D8               	btfss	status,0,c
  5581  001E5E  EF33  F00F         	goto	u4371
  5582  001E62  EF36  F00F         	goto	u4370
  5583  001E66                     u4371:
  5584  001E66  FFFF               	dw	65535	; assembler added errata NOP
  5585  001E68  EF39  F00F         	goto	l3837
  5586  001E6C                     u4370:
  5587  001E6C  FFFF               	dw	65535	; assembler added errata NOP
  5588  001E6E  0E00               	movlw	0
  5589  001E70  6E1B               	movwf	_atoi$1054^0,c
  5590  001E72                     l3837:
  5591  001E72  FFFF               	dw	65535	; assembler added errata NOP
  5592  001E74  C01B  F017         	movff	_atoi$1054,_atoi$1053
  5593  001E78  6A18               	clrf	(_atoi$1053+1)^0,c
  5594  001E7A  5017               	movf	_atoi$1053^0,w,c
  5595  001E7C  1018               	iorwf	(_atoi$1053+1)^0,w,c
  5596  001E7E  A4D8               	btfss	status,2,c
  5597  001E80  EF44  F00F         	goto	u4381
  5598  001E84  EF47  F00F         	goto	u4380
  5599  001E88                     u4381:
  5600  001E88  FFFF               	dw	65535	; assembler added errata NOP
  5601  001E8A  EF06  F00F         	goto	l3827
  5602  001E8E                     u4380:
  5603  001E8E  FFFF               	dw	65535	; assembler added errata NOP
  5604  001E90  EF54  F00F         	goto	l3847
  5605  001E94                     l3843:
  5606  001E94  FFFF               	dw	65535	; assembler added errata NOP
  5607  001E96  0E00               	movlw	0
  5608  001E98  6E16               	movwf	(atoi@neg+1)^0,c
  5609  001E9A  0E01               	movlw	1
  5610  001E9C  6E15               	movwf	atoi@neg^0,c
  5611  001E9E                     l3845:
  5612  001E9E  FFFF               	dw	65535	; assembler added errata NOP
  5613  001EA0  4A0F               	infsnz	atoi@s^0,f,c
  5614  001EA2  2A10               	incf	(atoi@s+1)^0,f,c
  5615  001EA4  EF8C  F00F         	goto	l3853
  5616  001EA8                     l3847:
  5617  001EA8  FFFF               	dw	65535	; assembler added errata NOP
  5618  001EAA  C00F  FFD9         	movff	atoi@s,fsr2l
  5619  001EAE  C010  FFDA         	movff	atoi@s+1,fsr2h
  5620  001EB2  50DF               	movf	indf2,w,c
  5621  001EB4  6E11               	movwf	??_atoi^0,c
  5622  001EB6  6A12               	clrf	(??_atoi+1)^0,c
  5623                           
  5624                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5625                           ; Switch size 1, requested type "simple"
  5626                           ; Number of cases is 1, Range of values is 0 to 0
  5627                           ; switch strategies available:
  5628                           ; Name         Instructions Cycles
  5629                           ; simple_byte            4     3 (average)
  5630                           ;	Chosen strategy is simple_byte
  5631  001EB8  5012               	movf	(??_atoi+1)^0,w,c
  5632  001EBA  0A00               	xorlw	0	; case 0
  5633  001EBC  B4D8               	btfsc	status,2,c
  5634  001EBE  EF63  F00F         	goto	l4737
  5635  001EC2  EF8C  F00F         	goto	l3853
  5636  001EC6                     l4737:
  5637  001EC6  FFFF               	dw	65535	; assembler added errata NOP
  5638                           
  5639                           ; Switch size 1, requested type "simple"
  5640                           ; Number of cases is 2, Range of values is 43 to 45
  5641                           ; switch strategies available:
  5642                           ; Name         Instructions Cycles
  5643                           ; simple_byte            7     4 (average)
  5644                           ;	Chosen strategy is simple_byte
  5645  001EC8  5011               	movf	??_atoi^0,w,c
  5646  001ECA  0A2B               	xorlw	43	; case 43
  5647  001ECC  B4D8               	btfsc	status,2,c
  5648  001ECE  EF4F  F00F         	goto	l3845
  5649  001ED2  0A06               	xorlw	6	; case 45
  5650  001ED4  B4D8               	btfsc	status,2,c
  5651  001ED6  EF4A  F00F         	goto	l3843
  5652  001EDA  EF8C  F00F         	goto	l3853
  5653  001EDE                     l3849:
  5654  001EDE  FFFF               	dw	65535	; assembler added errata NOP
  5655  001EE0  C01C  F008         	movff	atoi@n,___wmul@multiplier
  5656  001EE4  C01D  F009         	movff	atoi@n+1,___wmul@multiplier+1
  5657  001EE8  0E00               	movlw	0
  5658  001EEA  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  5659  001EEC  0E0A               	movlw	10
  5660  001EEE  6E0A               	movwf	___wmul@multiplicand^0,c
  5661  001EF0  EC87  F016         	call	___wmul	;wreg free
  5662  001EF4  C00F  FFD9         	movff	atoi@s,fsr2l
  5663  001EF8  C010  FFDA         	movff	atoi@s+1,fsr2h
  5664  001EFC  50DF               	movf	indf2,w,c
  5665  001EFE  6E11               	movwf	??_atoi^0,c
  5666  001F00  5011               	movf	??_atoi^0,w,c
  5667  001F02  5E08               	subwf	?___wmul^0,f,c
  5668  001F04  0E00               	movlw	0
  5669  001F06  5A09               	subwfb	(?___wmul+1)^0,f,c
  5670  001F08  0E30               	movlw	48
  5671  001F0A  2408               	addwf	?___wmul^0,w,c
  5672  001F0C  6E1C               	movwf	atoi@n^0,c
  5673  001F0E  0E00               	movlw	0
  5674  001F10  2009               	addwfc	(?___wmul+1)^0,w,c
  5675  001F12  6E1D               	movwf	(atoi@n+1)^0,c
  5676  001F14  EF4F  F00F         	goto	l3845
  5677  001F18                     l3853:
  5678  001F18  FFFF               	dw	65535	; assembler added errata NOP
  5679  001F1A  0ED0               	movlw	208
  5680  001F1C  6E11               	movwf	??_atoi^0,c
  5681  001F1E  0EFF               	movlw	255
  5682  001F20  6E12               	movwf	(??_atoi+1)^0,c
  5683  001F22  C00F  FFD9         	movff	atoi@s,fsr2l
  5684  001F26  C010  FFDA         	movff	atoi@s+1,fsr2h
  5685  001F2A  50DF               	movf	indf2,w,c
  5686  001F2C  6E13               	movwf	(??_atoi+2)^0,c
  5687  001F2E  6A14               	clrf	(??_atoi+3)^0,c
  5688  001F30  5011               	movf	??_atoi^0,w,c
  5689  001F32  2613               	addwf	(??_atoi+2)^0,f,c
  5690  001F34  5012               	movf	(??_atoi+1)^0,w,c
  5691  001F36  2214               	addwfc	(??_atoi+3)^0,f,c
  5692  001F38  5014               	movf	(??_atoi+3)^0,w,c
  5693  001F3A  E10B               	bnz	u4390
  5694  001F3C  0E0A               	movlw	10
  5695  001F3E  5C13               	subwf	(??_atoi+2)^0,w,c
  5696  001F40  A0D8               	btfss	status,0,c
  5697  001F42  EFA5  F00F         	goto	u4391
  5698  001F46  EFA9  F00F         	goto	u4390
  5699  001F4A                     u4391:
  5700  001F4A  FFFF               	dw	65535	; assembler added errata NOP
  5701  001F4C  0E01               	movlw	1
  5702  001F4E  EFAB  F00F         	goto	u4400
  5703  001F52                     u4390:
  5704  001F52  FFFF               	dw	65535	; assembler added errata NOP
  5705  001F54  0E00               	movlw	0
  5706  001F56                     u4400:
  5707  001F56  FFFF               	dw	65535	; assembler added errata NOP
  5708  001F58  6E19               	movwf	_atoi$1055^0,c
  5709  001F5A  6A1A               	clrf	(_atoi$1055+1)^0,c
  5710  001F5C  5019               	movf	_atoi$1055^0,w,c
  5711  001F5E  101A               	iorwf	(_atoi$1055+1)^0,w,c
  5712  001F60  A4D8               	btfss	status,2,c
  5713  001F62  EFB5  F00F         	goto	u4411
  5714  001F66  EFB8  F00F         	goto	u4410
  5715  001F6A                     u4411:
  5716  001F6A  FFFF               	dw	65535	; assembler added errata NOP
  5717  001F6C  EF6F  F00F         	goto	l3849
  5718  001F70                     u4410:
  5719  001F70  FFFF               	dw	65535	; assembler added errata NOP
  5720  001F72  5015               	movf	atoi@neg^0,w,c
  5721  001F74  1016               	iorwf	(atoi@neg+1)^0,w,c
  5722  001F76  A4D8               	btfss	status,2,c
  5723  001F78  EFC0  F00F         	goto	u4421
  5724  001F7C  EFC3  F00F         	goto	u4420
  5725  001F80                     u4421:
  5726  001F80  FFFF               	dw	65535	; assembler added errata NOP
  5727  001F82  EFD2  F00F         	goto	l1091
  5728  001F86                     u4420:
  5729  001F86  FFFF               	dw	65535	; assembler added errata NOP
  5730  001F88  C01C  F011         	movff	atoi@n,??_atoi
  5731  001F8C  C01D  F012         	movff	atoi@n+1,??_atoi+1
  5732  001F90  1E11               	comf	??_atoi^0,f,c
  5733  001F92  1E12               	comf	(??_atoi+1)^0,f,c
  5734  001F94  4A11               	infsnz	??_atoi^0,f,c
  5735  001F96  2A12               	incf	(??_atoi+1)^0,f,c
  5736  001F98  C011  F00F         	movff	??_atoi,?_atoi
  5737  001F9C  C012  F010         	movff	??_atoi+1,?_atoi+1
  5738  001FA0  EFD7  F00F         	goto	l1094
  5739  001FA4                     l1091:
  5740  001FA4  FFFF               	dw	65535	; assembler added errata NOP
  5741  001FA6  C01C  F00F         	movff	atoi@n,?_atoi
  5742  001FAA  C01D  F010         	movff	atoi@n+1,?_atoi+1
  5743  001FAE                     l1094:
  5744  001FAE  FFFF               	dw	65535	; assembler added errata NOP
  5745  001FB0  0012               	return		;funcret
  5746  001FB2  FFFF               	dw	65535	; errata NOP
  5747  001FB4                     __end_of_atoi:
  5748                           	callstack 0
  5749                           
  5750 ;; *************** function _isspace *****************
  5751 ;; Defined at:
  5752 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  c               2    7[COMRAM] int 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  2    7[COMRAM] int 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5766 ;;      Params:         2       0       0       0       0       0       0
  5767 ;;      Locals:         1       0       0       0       0       0       0
  5768 ;;      Temps:          4       0       0       0       0       0       0
  5769 ;;      Totals:         7       0       0       0       0       0       0
  5770 ;;Total ram usage:        7 bytes
  5771 ;; Hardware stack levels used: 1
  5772 ;; Hardware stack levels required when called: 1
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_atoi
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text20
  5781  002AC8                     __ptext20:
  5782                           	callstack 0
  5783  002AC8                     _isspace:
  5784                           	callstack 26
  5785  002AC8  FFFF               	dw	65535	; assembler added errata NOP
  5786  002ACA  0E01               	movlw	1
  5787  002ACC  6E0E               	movwf	_isspace$1071^0,c
  5788  002ACE  0E20               	movlw	32
  5789  002AD0  1808               	xorwf	isspace@c^0,w,c
  5790  002AD2  1009               	iorwf	(isspace@c+1)^0,w,c
  5791  002AD4  B4D8               	btfsc	status,2,c
  5792  002AD6  EF6F  F015         	goto	u4271
  5793  002ADA  EF72  F015         	goto	u4270
  5794  002ADE                     u4271:
  5795  002ADE  FFFF               	dw	65535	; assembler added errata NOP
  5796  002AE0  EF8E  F015         	goto	l3793
  5797  002AE4                     u4270:
  5798  002AE4  FFFF               	dw	65535	; assembler added errata NOP
  5799  002AE6  0EF7               	movlw	247
  5800  002AE8  6E0A               	movwf	??_isspace^0,c
  5801  002AEA  0EFF               	movlw	255
  5802  002AEC  6E0B               	movwf	(??_isspace+1)^0,c
  5803  002AEE  C008  F00C         	movff	isspace@c,??_isspace+2
  5804  002AF2  C009  F00D         	movff	isspace@c+1,??_isspace+3
  5805  002AF6  500A               	movf	??_isspace^0,w,c
  5806  002AF8  260C               	addwf	(??_isspace+2)^0,f,c
  5807  002AFA  500B               	movf	(??_isspace+1)^0,w,c
  5808  002AFC  220D               	addwfc	(??_isspace+3)^0,f,c
  5809  002AFE  500D               	movf	(??_isspace+3)^0,w,c
  5810  002B00  E10A               	bnz	u4280
  5811  002B02  0E05               	movlw	5
  5812  002B04  5C0C               	subwf	(??_isspace+2)^0,w,c
  5813  002B06  A0D8               	btfss	status,0,c
  5814  002B08  EF88  F015         	goto	u4281
  5815  002B0C  EF8B  F015         	goto	u4280
  5816  002B10                     u4281:
  5817  002B10  FFFF               	dw	65535	; assembler added errata NOP
  5818  002B12  EF8E  F015         	goto	l3793
  5819  002B16                     u4280:
  5820  002B16  FFFF               	dw	65535	; assembler added errata NOP
  5821  002B18  0E00               	movlw	0
  5822  002B1A  6E0E               	movwf	_isspace$1071^0,c
  5823  002B1C                     l3793:
  5824  002B1C  FFFF               	dw	65535	; assembler added errata NOP
  5825  002B1E  C00E  F008         	movff	_isspace$1071,?_isspace
  5826  002B22  6A09               	clrf	(?_isspace+1)^0,c
  5827  002B24  0012               	return		;funcret
  5828  002B26  FFFF               	dw	65535	; errata NOP
  5829  002B28                     __end_of_isspace:
  5830                           	callstack 0
  5831                           
  5832 ;; *************** function _isdigit *****************
  5833 ;; Defined at:
  5834 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  c               2    7[COMRAM] int 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  2    7[COMRAM] int 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5848 ;;      Params:         2       0       0       0       0       0       0
  5849 ;;      Locals:         0       0       0       0       0       0       0
  5850 ;;      Temps:          4       0       0       0       0       0       0
  5851 ;;      Totals:         6       0       0       0       0       0       0
  5852 ;;Total ram usage:        6 bytes
  5853 ;; Hardware stack levels used: 1
  5854 ;; Hardware stack levels required when called: 1
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_atoi
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text21
  5863  002C10                     __ptext21:
  5864                           	callstack 0
  5865  002C10                     _isdigit:
  5866                           	callstack 26
  5867  002C10  FFFF               	dw	65535	; assembler added errata NOP
  5868  002C12  0ED0               	movlw	208
  5869  002C14  6E0A               	movwf	??_isdigit^0,c
  5870  002C16  0EFF               	movlw	255
  5871  002C18  6E0B               	movwf	(??_isdigit+1)^0,c
  5872  002C1A  C008  F00C         	movff	isdigit@c,??_isdigit+2
  5873  002C1E  C009  F00D         	movff	isdigit@c+1,??_isdigit+3
  5874  002C22  500A               	movf	??_isdigit^0,w,c
  5875  002C24  260C               	addwf	(??_isdigit+2)^0,f,c
  5876  002C26  500B               	movf	(??_isdigit+1)^0,w,c
  5877  002C28  220D               	addwfc	(??_isdigit+3)^0,f,c
  5878  002C2A  500D               	movf	(??_isdigit+3)^0,w,c
  5879  002C2C  E10B               	bnz	u4290
  5880  002C2E  0E0A               	movlw	10
  5881  002C30  5C0C               	subwf	(??_isdigit+2)^0,w,c
  5882  002C32  A0D8               	btfss	status,0,c
  5883  002C34  EF1E  F016         	goto	u4291
  5884  002C38  EF22  F016         	goto	u4290
  5885  002C3C                     u4291:
  5886  002C3C  FFFF               	dw	65535	; assembler added errata NOP
  5887  002C3E  0E01               	movlw	1
  5888  002C40  EF24  F016         	goto	u4300
  5889  002C44                     u4290:
  5890  002C44  FFFF               	dw	65535	; assembler added errata NOP
  5891  002C46  0E00               	movlw	0
  5892  002C48                     u4300:
  5893  002C48  FFFF               	dw	65535	; assembler added errata NOP
  5894  002C4A  6E08               	movwf	?_isdigit^0,c
  5895  002C4C  6A09               	clrf	(?_isdigit+1)^0,c
  5896  002C4E  0012               	return		;funcret
  5897  002C50  FFFF               	dw	65535	; errata NOP
  5898  002C52                     __end_of_isdigit:
  5899                           	callstack 0
  5900                           
  5901 ;; *************** function ___wmul *****************
  5902 ;; Defined at:
  5903 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  multiplier      2    7[COMRAM] unsigned int 
  5906 ;;  multiplicand    2    9[COMRAM] unsigned int 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  product         2   11[COMRAM] unsigned int 
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  2    7[COMRAM] unsigned int 
  5911 ;; Registers used:
  5912 ;;		wreg, status,2, status,0, prodl, prodh
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5918 ;;      Params:         4       0       0       0       0       0       0
  5919 ;;      Locals:         2       0       0       0       0       0       0
  5920 ;;      Temps:          0       0       0       0       0       0       0
  5921 ;;      Totals:         6       0       0       0       0       0       0
  5922 ;;Total ram usage:        6 bytes
  5923 ;; Hardware stack levels used: 1
  5924 ;; Hardware stack levels required when called: 1
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_atoi
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           	psect	text22
  5933  002D0E                     __ptext22:
  5934                           	callstack 0
  5935  002D0E                     ___wmul:
  5936                           	callstack 0
  5937  002D0E  FFFF               	dw	65535	; assembler added errata NOP
  5938  002D10  5008               	movf	___wmul@multiplier^0,w,c
  5939  002D12  020A               	mulwf	___wmul@multiplicand^0,c
  5940  002D14  CFF3 F00C          	movff	prodl,___wmul@product
  5941  002D18  CFF4 F00D          	movff	prodh,___wmul@product+1
  5942  002D1C  5008               	movf	___wmul@multiplier^0,w,c
  5943  002D1E  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  5944  002D20  50F3               	movf	243,w,c
  5945  002D22  260D               	addwf	(___wmul@product+1)^0,f,c
  5946  002D24  5009               	movf	(___wmul@multiplier+1)^0,w,c
  5947  002D26  020A               	mulwf	___wmul@multiplicand^0,c
  5948  002D28  50F3               	movf	243,w,c
  5949  002D2A  260D               	addwf	(___wmul@product+1)^0,f,c
  5950  002D2C  C00C  F008         	movff	___wmul@product,?___wmul
  5951  002D30  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  5952  002D34  0012               	return		;funcret
  5953  002D36  FFFF               	dw	65535	; errata NOP
  5954  002D38                     __end_of___wmul:
  5955                           	callstack 0
  5956                           
  5957 ;; *************** function _init_interrupts *****************
  5958 ;; Defined at:
  5959 ;;		line 27 in file "init_PIC.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		None
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5973 ;;      Params:         0       0       0       0       0       0       0
  5974 ;;      Locals:         0       0       0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0
  5976 ;;      Totals:         0       0       0       0       0       0       0
  5977 ;;Total ram usage:        0 bytes
  5978 ;; Hardware stack levels used: 1
  5979 ;; Hardware stack levels required when called: 1
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_main
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           	psect	text23
  5988  002DAC                     __ptext23:
  5989                           	callstack 0
  5990  002DAC                     _init_interrupts:
  5991                           	callstack 0
  5992  002DAC  FFFF               	dw	65535	; assembler added errata NOP
  5993  002DAE                     
  5994                           ;init_PIC.c: 29:     PIR1bits.RCIF = 0;
  5995  002DAE  9A9E               	bcf	158,5,c	;volatile
  5996                           
  5997                           ;init_PIC.c: 30:  PIE1bits.RCIE = 1;
  5998  002DB0  8A9D               	bsf	157,5,c	;volatile
  5999                           
  6000                           ;init_PIC.c: 31:  INTCONbits.PEIE = 1;
  6001  002DB2  8CF2               	bsf	242,6,c	;volatile
  6002  002DB4  0012               	return		;funcret
  6003  002DB6  FFFF               	dw	65535	; errata NOP
  6004  002DB8                     __end_of_init_interrupts:
  6005                           	callstack 0
  6006                           
  6007 ;; *************** function _init_USART *****************
  6008 ;; Defined at:
  6009 ;;		line 17 in file "serial_rs232.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6023 ;;      Params:         0       0       0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used: 1
  6029 ;; Hardware stack levels required when called: 4
  6030 ;; This function calls:
  6031 ;;		___fltol
  6032 ;;		_roundf
  6033 ;; This function is called by:
  6034 ;;		_main
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text24
  6039  002C94                     __ptext24:
  6040                           	callstack 0
  6041  002C94                     _init_USART:
  6042                           	callstack 0
  6043  002C94  FFFF               	dw	65535	; assembler added errata NOP
  6044  002C96                     
  6045                           ;serial_rs232.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  6046  002C96  0E55               	movlw	85
  6047  002C98  6E3B               	movwf	roundf@x^0,c
  6048  002C9A  0E55               	movlw	85
  6049  002C9C  6E3C               	movwf	(roundf@x+1)^0,c
  6050  002C9E  0EC8               	movlw	200
  6051  002CA0  6E3D               	movwf	(roundf@x+2)^0,c
  6052  002CA2  0E41               	movlw	65
  6053  002CA4  6E3E               	movwf	(roundf@x+3)^0,c
  6054  002CA6  EC11  F00B         	call	_roundf	;wreg free
  6055  002CAA  C03B  F055         	movff	?_roundf,___fltol@f1
  6056  002CAE  C03C  F056         	movff	?_roundf+1,___fltol@f1+1
  6057  002CB2  C03D  F057         	movff	?_roundf+2,___fltol@f1+2
  6058  002CB6  C03E  F058         	movff	?_roundf+3,___fltol@f1+3
  6059  002CBA  EC8A  F010         	call	___fltol	;wreg free
  6060  002CBE  5055               	movf	?___fltol^0,w,c
  6061  002CC0  6EAF               	movwf	175,c	;volatile
  6062  002CC2                     
  6063                           ;serial_rs232.c: 35:  TXSTAbits.TX9=0;
  6064  002CC2  9CAC               	bcf	172,6,c	;volatile
  6065  002CC4                     
  6066                           ;serial_rs232.c: 36:     TXSTAbits.TXEN=1;
  6067  002CC4  8AAC               	bsf	172,5,c	;volatile
  6068  002CC6                     
  6069                           ;serial_rs232.c: 37:     TXSTAbits.SYNC=0;
  6070  002CC6  98AC               	bcf	172,4,c	;volatile
  6071  002CC8                     
  6072                           ;serial_rs232.c: 38:     TXSTAbits.BRGH=1;
  6073  002CC8  84AC               	bsf	172,2,c	;volatile
  6074  002CCA                     
  6075                           ;serial_rs232.c: 39:     RCSTAbits.SPEN=1;
  6076  002CCA  8EAB               	bsf	171,7,c	;volatile
  6077  002CCC                     
  6078                           ;serial_rs232.c: 40:     RCSTAbits.RX9=0;
  6079  002CCC  9CAB               	bcf	171,6,c	;volatile
  6080  002CCE                     
  6081                           ;serial_rs232.c: 41:     RCSTAbits.CREN=1;
  6082  002CCE  88AB               	bsf	171,4,c	;volatile
  6083  002CD0  0012               	return		;funcret
  6084  002CD2  FFFF               	dw	65535	; errata NOP
  6085  002CD4                     __end_of_init_USART:
  6086                           	callstack 0
  6087                           
  6088 ;; *************** function _roundf *****************
  6089 ;; Defined at:
  6090 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  x               4   58[COMRAM] float 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  y               4   80[COMRAM] float 
  6095 ;;  u               4   76[COMRAM] struct .
  6096 ;;  e               2   70[COMRAM] int 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  4   58[COMRAM] float 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6106 ;;      Params:         4       0       0       0       0       0       0
  6107 ;;      Locals:        18       0       0       0       0       0       0
  6108 ;;      Temps:          4       0       0       0       0       0       0
  6109 ;;      Totals:        26       0       0       0       0       0       0
  6110 ;;Total ram usage:       26 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 3
  6113 ;; This function calls:
  6114 ;;		___fladd
  6115 ;;		___flge
  6116 ;;		___flmul
  6117 ;;		___flneg
  6118 ;;		___flsub
  6119 ;; This function is called by:
  6120 ;;		_init_USART
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text25
  6125  001622                     __ptext25:
  6126                           	callstack 0
  6127  001622                     _roundf:
  6128                           	callstack 0
  6129  001622  FFFF               	dw	65535	; assembler added errata NOP
  6130  001624  C09E  F04D         	movff	roundf@F528,roundf@u
  6131  001628  C09F  F04E         	movff	roundf@F528+1,roundf@u+1
  6132  00162C  C0A0  F04F         	movff	roundf@F528+2,roundf@u+2
  6133  001630  C0A1  F050         	movff	roundf@F528+3,roundf@u+3
  6134  001634  C03B  F04D         	movff	roundf@x,roundf@u
  6135  001638  C03C  F04E         	movff	roundf@x+1,roundf@u+1
  6136  00163C  C03D  F04F         	movff	roundf@x+2,roundf@u+2
  6137  001640  C03E  F050         	movff	roundf@x+3,roundf@u+3
  6138  001644  C04D  F03F         	movff	roundf@u,??_roundf
  6139  001648  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6140  00164C  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6141  001650  C050  F042         	movff	roundf@u+3,??_roundf+3
  6142  001654  0E18               	movlw	24
  6143  001656  EF33  F00B         	goto	u4970
  6144  00165A                     u4975:
  6145  00165A  FFFF               	dw	65535	; assembler added errata NOP
  6146  00165C  90D8               	bcf	status,0,c
  6147  00165E  3242               	rrcf	(??_roundf+3)^0,f,c
  6148  001660  3241               	rrcf	(??_roundf+2)^0,f,c
  6149  001662  3240               	rrcf	(??_roundf+1)^0,f,c
  6150  001664  323F               	rrcf	??_roundf^0,f,c
  6151  001666                     u4970:
  6152  001666  FFFF               	dw	65535	; assembler added errata NOP
  6153  001668  2EE8               	decfsz	wreg,f,c
  6154  00166A  EF2D  F00B         	goto	u4975
  6155  00166E  503F               	movf	??_roundf^0,w,c
  6156  001670  6E47               	movwf	roundf@e^0,c
  6157  001672  6A48               	clrf	(roundf@e+1)^0,c
  6158  001674  BE48               	btfsc	(roundf@e+1)^0,7,c
  6159  001676  EF46  F00B         	goto	u4981
  6160  00167A  5048               	movf	(roundf@e+1)^0,w,c
  6161  00167C  E10A               	bnz	u4980
  6162  00167E  0E96               	movlw	150
  6163  001680  5C47               	subwf	roundf@e^0,w,c
  6164  001682  A0D8               	btfss	status,0,c
  6165  001684  EF46  F00B         	goto	u4981
  6166  001688  EF49  F00B         	goto	u4980
  6167  00168C                     u4981:
  6168  00168C  FFFF               	dw	65535	; assembler added errata NOP
  6169  00168E  EF54  F00B         	goto	l4229
  6170  001692                     u4980:
  6171  001692  FFFF               	dw	65535	; assembler added errata NOP
  6172  001694  C03B  F03B         	movff	roundf@x,?_roundf
  6173  001698  C03C  F03C         	movff	roundf@x+1,?_roundf+1
  6174  00169C  C03D  F03D         	movff	roundf@x+2,?_roundf+2
  6175  0016A0  C03E  F03E         	movff	roundf@x+3,?_roundf+3
  6176  0016A4  EF01  F00D         	goto	l1126
  6177  0016A8                     l4229:
  6178  0016A8  FFFF               	dw	65535	; assembler added errata NOP
  6179  0016AA  C04D  F03F         	movff	roundf@u,??_roundf
  6180  0016AE  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6181  0016B2  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6182  0016B6  C050  F042         	movff	roundf@u+3,??_roundf+3
  6183  0016BA  0E20               	movlw	32
  6184  0016BC  EF66  F00B         	goto	u4990
  6185  0016C0                     u4995:
  6186  0016C0  FFFF               	dw	65535	; assembler added errata NOP
  6187  0016C2  90D8               	bcf	status,0,c
  6188  0016C4  3242               	rrcf	(??_roundf+3)^0,f,c
  6189  0016C6  3241               	rrcf	(??_roundf+2)^0,f,c
  6190  0016C8  3240               	rrcf	(??_roundf+1)^0,f,c
  6191  0016CA  323F               	rrcf	??_roundf^0,f,c
  6192  0016CC                     u4990:
  6193  0016CC  FFFF               	dw	65535	; assembler added errata NOP
  6194  0016CE  2EE8               	decfsz	wreg,f,c
  6195  0016D0  EF60  F00B         	goto	u4995
  6196  0016D4  503F               	movf	??_roundf^0,w,c
  6197  0016D6  1040               	iorwf	(??_roundf+1)^0,w,c
  6198  0016D8  1041               	iorwf	(??_roundf+2)^0,w,c
  6199  0016DA  1042               	iorwf	(??_roundf+3)^0,w,c
  6200  0016DC  B4D8               	btfsc	status,2,c
  6201  0016DE  EF73  F00B         	goto	u5001
  6202  0016E2  EF76  F00B         	goto	u5000
  6203  0016E6                     u5001:
  6204  0016E6  FFFF               	dw	65535	; assembler added errata NOP
  6205  0016E8  EF89  F00B         	goto	l4233
  6206  0016EC                     u5000:
  6207  0016EC  FFFF               	dw	65535	; assembler added errata NOP
  6208  0016EE  C03B  F008         	movff	roundf@x,___flneg@f1
  6209  0016F2  C03C  F009         	movff	roundf@x+1,___flneg@f1+1
  6210  0016F6  C03D  F00A         	movff	roundf@x+2,___flneg@f1+2
  6211  0016FA  C03E  F00B         	movff	roundf@x+3,___flneg@f1+3
  6212  0016FE  EC29  F016         	call	___flneg	;wreg free
  6213  001702  C008  F03B         	movff	?___flneg,roundf@x
  6214  001706  C009  F03C         	movff	?___flneg+1,roundf@x+1
  6215  00170A  C00A  F03D         	movff	?___flneg+2,roundf@x+2
  6216  00170E  C00B  F03E         	movff	?___flneg+3,roundf@x+3
  6217  001712                     l4233:
  6218  001712  FFFF               	dw	65535	; assembler added errata NOP
  6219  001714  BE48               	btfsc	(roundf@e+1)^0,7,c
  6220  001716  EF99  F00B         	goto	u5010
  6221  00171A  5048               	movf	(roundf@e+1)^0,w,c
  6222  00171C  E107               	bnz	u5011
  6223  00171E  0E7E               	movlw	126
  6224  001720  5C47               	subwf	roundf@e^0,w,c
  6225  001722  B0D8               	btfsc	status,0,c
  6226  001724  EF96  F00B         	goto	u5011
  6227  001728  EF99  F00B         	goto	u5010
  6228  00172C                     u5011:
  6229  00172C  FFFF               	dw	65535	; assembler added errata NOP
  6230  00172E  EFB6  F00B         	goto	l4239
  6231  001732                     u5010:
  6232  001732  FFFF               	dw	65535	; assembler added errata NOP
  6233  001734  C04D  F008         	movff	roundf@u,___flmul@b
  6234  001738  C04E  F009         	movff	roundf@u+1,___flmul@b+1
  6235  00173C  C04F  F00A         	movff	roundf@u+2,___flmul@b+2
  6236  001740  C050  F00B         	movff	roundf@u+3,___flmul@b+3
  6237  001744  0E00               	movlw	0
  6238  001746  6E0C               	movwf	___flmul@a^0,c
  6239  001748  0E00               	movlw	0
  6240  00174A  6E0D               	movwf	(___flmul@a+1)^0,c
  6241  00174C  0E00               	movlw	0
  6242  00174E  6E0E               	movwf	(___flmul@a+2)^0,c
  6243  001750  0E00               	movlw	0
  6244  001752  6E0F               	movwf	(___flmul@a+3)^0,c
  6245  001754  ECA6  F006         	call	___flmul	;wreg free
  6246  001758  C008  F03B         	movff	?___flmul,?_roundf
  6247  00175C  C009  F03C         	movff	?___flmul+1,?_roundf+1
  6248  001760  C00A  F03D         	movff	?___flmul+2,?_roundf+2
  6249  001764  C00B  F03E         	movff	?___flmul+3,?_roundf+3
  6250  001768  EF01  F00D         	goto	l1126
  6251  00176C                     l4239:
  6252  00176C  FFFF               	dw	65535	; assembler added errata NOP
  6253  00176E  0E00               	movlw	0
  6254  001770  6E0C               	movwf	___fladd@a^0,c
  6255  001772  0E00               	movlw	0
  6256  001774  6E0D               	movwf	(___fladd@a+1)^0,c
  6257  001776  0E00               	movlw	0
  6258  001778  6E0E               	movwf	(___fladd@a+2)^0,c
  6259  00177A  0E4B               	movlw	75
  6260  00177C  6E0F               	movwf	(___fladd@a+3)^0,c
  6261  00177E  C03B  F008         	movff	roundf@x,___fladd@b
  6262  001782  C03C  F009         	movff	roundf@x+1,___fladd@b+1
  6263  001786  C03D  F00A         	movff	roundf@x+2,___fladd@b+2
  6264  00178A  C03E  F00B         	movff	roundf@x+3,___fladd@b+3
  6265  00178E  ECD2  F003         	call	___fladd	;wreg free
  6266  001792  C008  F049         	movff	?___fladd,_roundf$1322
  6267  001796  C009  F04A         	movff	?___fladd+1,_roundf$1322+1
  6268  00179A  C00A  F04B         	movff	?___fladd+2,_roundf$1322+2
  6269  00179E  C00B  F04C         	movff	?___fladd+3,_roundf$1322+3
  6270  0017A2  0E00               	movlw	0
  6271  0017A4  6E0C               	movwf	___fladd@a^0,c
  6272  0017A6  0E00               	movlw	0
  6273  0017A8  6E0D               	movwf	(___fladd@a+1)^0,c
  6274  0017AA  0E00               	movlw	0
  6275  0017AC  6E0E               	movwf	(___fladd@a+2)^0,c
  6276  0017AE  0ECB               	movlw	203
  6277  0017B0  6E0F               	movwf	(___fladd@a+3)^0,c
  6278  0017B2  C049  F008         	movff	_roundf$1322,___fladd@b
  6279  0017B6  C04A  F009         	movff	_roundf$1322+1,___fladd@b+1
  6280  0017BA  C04B  F00A         	movff	_roundf$1322+2,___fladd@b+2
  6281  0017BE  C04C  F00B         	movff	_roundf$1322+3,___fladd@b+3
  6282  0017C2  ECD2  F003         	call	___fladd	;wreg free
  6283  0017C6  C008  F043         	movff	?___fladd,_roundf$1323
  6284  0017CA  C009  F044         	movff	?___fladd+1,_roundf$1323+1
  6285  0017CE  C00A  F045         	movff	?___fladd+2,_roundf$1323+2
  6286  0017D2  C00B  F046         	movff	?___fladd+3,_roundf$1323+3
  6287  0017D6  C043  F018         	movff	_roundf$1323,___flsub@b
  6288  0017DA  C044  F019         	movff	_roundf$1323+1,___flsub@b+1
  6289  0017DE  C045  F01A         	movff	_roundf$1323+2,___flsub@b+2
  6290  0017E2  C046  F01B         	movff	_roundf$1323+3,___flsub@b+3
  6291  0017E6  C03B  F01C         	movff	roundf@x,___flsub@a
  6292  0017EA  C03C  F01D         	movff	roundf@x+1,___flsub@a+1
  6293  0017EE  C03D  F01E         	movff	roundf@x+2,___flsub@a+2
  6294  0017F2  C03E  F01F         	movff	roundf@x+3,___flsub@a+3
  6295  0017F6  ECC2  F015         	call	___flsub	;wreg free
  6296  0017FA  C018  F051         	movff	?___flsub,roundf@y
  6297  0017FE  C019  F052         	movff	?___flsub+1,roundf@y+1
  6298  001802  C01A  F053         	movff	?___flsub+2,roundf@y+2
  6299  001806  C01B  F054         	movff	?___flsub+3,roundf@y+3
  6300  00180A  0E00               	movlw	0
  6301  00180C  6E2F               	movwf	___flge@ff1^0,c
  6302  00180E  0E00               	movlw	0
  6303  001810  6E30               	movwf	(___flge@ff1+1)^0,c
  6304  001812  0E00               	movlw	0
  6305  001814  6E31               	movwf	(___flge@ff1+2)^0,c
  6306  001816  0E3F               	movlw	63
  6307  001818  6E32               	movwf	(___flge@ff1+3)^0,c
  6308  00181A  C051  F033         	movff	roundf@y,___flge@ff2
  6309  00181E  C052  F034         	movff	roundf@y+1,___flge@ff2+1
  6310  001822  C053  F035         	movff	roundf@y+2,___flge@ff2+2
  6311  001826  C054  F036         	movff	roundf@y+3,___flge@ff2+3
  6312  00182A  EC26  F011         	call	___flge	;wreg free
  6313  00182E  B0D8               	btfsc	status,0,c
  6314  001830  EF1C  F00C         	goto	u5021
  6315  001834  EF1F  F00C         	goto	u5020
  6316  001838                     u5021:
  6317  001838  FFFF               	dw	65535	; assembler added errata NOP
  6318  00183A  EF56  F00C         	goto	l4243
  6319  00183E                     u5020:
  6320  00183E  FFFF               	dw	65535	; assembler added errata NOP
  6321  001840  C03B  F00C         	movff	roundf@x,___fladd@a
  6322  001844  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  6323  001848  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  6324  00184C  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  6325  001850  C051  F008         	movff	roundf@y,___fladd@b
  6326  001854  C052  F009         	movff	roundf@y+1,___fladd@b+1
  6327  001858  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  6328  00185C  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  6329  001860  ECD2  F003         	call	___fladd	;wreg free
  6330  001864  C008  F049         	movff	?___fladd,_roundf$1322
  6331  001868  C009  F04A         	movff	?___fladd+1,_roundf$1322+1
  6332  00186C  C00A  F04B         	movff	?___fladd+2,_roundf$1322+2
  6333  001870  C00B  F04C         	movff	?___fladd+3,_roundf$1322+3
  6334  001874  C049  F008         	movff	_roundf$1322,___fladd@b
  6335  001878  C04A  F009         	movff	_roundf$1322+1,___fladd@b+1
  6336  00187C  C04B  F00A         	movff	_roundf$1322+2,___fladd@b+2
  6337  001880  C04C  F00B         	movff	_roundf$1322+3,___fladd@b+3
  6338  001884  0E00               	movlw	0
  6339  001886  6E0C               	movwf	___fladd@a^0,c
  6340  001888  0E00               	movlw	0
  6341  00188A  6E0D               	movwf	(___fladd@a+1)^0,c
  6342  00188C  0E80               	movlw	128
  6343  00188E  6E0E               	movwf	(___fladd@a+2)^0,c
  6344  001890  0EBF               	movlw	191
  6345  001892  6E0F               	movwf	(___fladd@a+3)^0,c
  6346  001894  ECD2  F003         	call	___fladd	;wreg free
  6347  001898  C008  F051         	movff	?___fladd,roundf@y
  6348  00189C  C009  F052         	movff	?___fladd+1,roundf@y+1
  6349  0018A0  C00A  F053         	movff	?___fladd+2,roundf@y+2
  6350  0018A4  C00B  F054         	movff	?___fladd+3,roundf@y+3
  6351  0018A8  EFC3  F00C         	goto	l4249
  6352  0018AC                     l4243:
  6353  0018AC  FFFF               	dw	65535	; assembler added errata NOP
  6354  0018AE  0E00               	movlw	0
  6355  0018B0  6E2F               	movwf	___flge@ff1^0,c
  6356  0018B2  0E00               	movlw	0
  6357  0018B4  6E30               	movwf	(___flge@ff1+1)^0,c
  6358  0018B6  0E00               	movlw	0
  6359  0018B8  6E31               	movwf	(___flge@ff1+2)^0,c
  6360  0018BA  0EBF               	movlw	191
  6361  0018BC  6E32               	movwf	(___flge@ff1+3)^0,c
  6362  0018BE  C051  F033         	movff	roundf@y,___flge@ff2
  6363  0018C2  C052  F034         	movff	roundf@y+1,___flge@ff2+1
  6364  0018C6  C053  F035         	movff	roundf@y+2,___flge@ff2+2
  6365  0018CA  C054  F036         	movff	roundf@y+3,___flge@ff2+3
  6366  0018CE  EC26  F011         	call	___flge	;wreg free
  6367  0018D2  A0D8               	btfss	status,0,c
  6368  0018D4  EF6E  F00C         	goto	u5031
  6369  0018D8  EF71  F00C         	goto	u5030
  6370  0018DC                     u5031:
  6371  0018DC  FFFF               	dw	65535	; assembler added errata NOP
  6372  0018DE  EFA8  F00C         	goto	l4247
  6373  0018E2                     u5030:
  6374  0018E2  FFFF               	dw	65535	; assembler added errata NOP
  6375  0018E4  C03B  F00C         	movff	roundf@x,___fladd@a
  6376  0018E8  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  6377  0018EC  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  6378  0018F0  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  6379  0018F4  C051  F008         	movff	roundf@y,___fladd@b
  6380  0018F8  C052  F009         	movff	roundf@y+1,___fladd@b+1
  6381  0018FC  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  6382  001900  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  6383  001904  ECD2  F003         	call	___fladd	;wreg free
  6384  001908  C008  F049         	movff	?___fladd,_roundf$1322
  6385  00190C  C009  F04A         	movff	?___fladd+1,_roundf$1322+1
  6386  001910  C00A  F04B         	movff	?___fladd+2,_roundf$1322+2
  6387  001914  C00B  F04C         	movff	?___fladd+3,_roundf$1322+3
  6388  001918  C049  F008         	movff	_roundf$1322,___fladd@b
  6389  00191C  C04A  F009         	movff	_roundf$1322+1,___fladd@b+1
  6390  001920  C04B  F00A         	movff	_roundf$1322+2,___fladd@b+2
  6391  001924  C04C  F00B         	movff	_roundf$1322+3,___fladd@b+3
  6392  001928  0E00               	movlw	0
  6393  00192A  6E0C               	movwf	___fladd@a^0,c
  6394  00192C  0E00               	movlw	0
  6395  00192E  6E0D               	movwf	(___fladd@a+1)^0,c
  6396  001930  0E80               	movlw	128
  6397  001932  6E0E               	movwf	(___fladd@a+2)^0,c
  6398  001934  0E3F               	movlw	63
  6399  001936  6E0F               	movwf	(___fladd@a+3)^0,c
  6400  001938  ECD2  F003         	call	___fladd	;wreg free
  6401  00193C  C008  F051         	movff	?___fladd,roundf@y
  6402  001940  C009  F052         	movff	?___fladd+1,roundf@y+1
  6403  001944  C00A  F053         	movff	?___fladd+2,roundf@y+2
  6404  001948  C00B  F054         	movff	?___fladd+3,roundf@y+3
  6405  00194C  EFC3  F00C         	goto	l4249
  6406  001950                     l4247:
  6407  001950  FFFF               	dw	65535	; assembler added errata NOP
  6408  001952  C051  F008         	movff	roundf@y,___fladd@b
  6409  001956  C052  F009         	movff	roundf@y+1,___fladd@b+1
  6410  00195A  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  6411  00195E  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  6412  001962  C03B  F00C         	movff	roundf@x,___fladd@a
  6413  001966  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  6414  00196A  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  6415  00196E  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  6416  001972  ECD2  F003         	call	___fladd	;wreg free
  6417  001976  C008  F051         	movff	?___fladd,roundf@y
  6418  00197A  C009  F052         	movff	?___fladd+1,roundf@y+1
  6419  00197E  C00A  F053         	movff	?___fladd+2,roundf@y+2
  6420  001982  C00B  F054         	movff	?___fladd+3,roundf@y+3
  6421  001986                     l4249:
  6422  001986  FFFF               	dw	65535	; assembler added errata NOP
  6423  001988  C04D  F03F         	movff	roundf@u,??_roundf
  6424  00198C  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6425  001990  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6426  001994  C050  F042         	movff	roundf@u+3,??_roundf+3
  6427  001998  0E20               	movlw	32
  6428  00199A  EFD5  F00C         	goto	u5040
  6429  00199E                     u5045:
  6430  00199E  FFFF               	dw	65535	; assembler added errata NOP
  6431  0019A0  90D8               	bcf	status,0,c
  6432  0019A2  3242               	rrcf	(??_roundf+3)^0,f,c
  6433  0019A4  3241               	rrcf	(??_roundf+2)^0,f,c
  6434  0019A6  3240               	rrcf	(??_roundf+1)^0,f,c
  6435  0019A8  323F               	rrcf	??_roundf^0,f,c
  6436  0019AA                     u5040:
  6437  0019AA  FFFF               	dw	65535	; assembler added errata NOP
  6438  0019AC  2EE8               	decfsz	wreg,f,c
  6439  0019AE  EFCF  F00C         	goto	u5045
  6440  0019B2  503F               	movf	??_roundf^0,w,c
  6441  0019B4  1040               	iorwf	(??_roundf+1)^0,w,c
  6442  0019B6  1041               	iorwf	(??_roundf+2)^0,w,c
  6443  0019B8  1042               	iorwf	(??_roundf+3)^0,w,c
  6444  0019BA  B4D8               	btfsc	status,2,c
  6445  0019BC  EFE2  F00C         	goto	u5051
  6446  0019C0  EFE5  F00C         	goto	u5050
  6447  0019C4                     u5051:
  6448  0019C4  FFFF               	dw	65535	; assembler added errata NOP
  6449  0019C6  EFF8  F00C         	goto	l4253
  6450  0019CA                     u5050:
  6451  0019CA  FFFF               	dw	65535	; assembler added errata NOP
  6452  0019CC  C051  F008         	movff	roundf@y,___flneg@f1
  6453  0019D0  C052  F009         	movff	roundf@y+1,___flneg@f1+1
  6454  0019D4  C053  F00A         	movff	roundf@y+2,___flneg@f1+2
  6455  0019D8  C054  F00B         	movff	roundf@y+3,___flneg@f1+3
  6456  0019DC  EC29  F016         	call	___flneg	;wreg free
  6457  0019E0  C008  F051         	movff	?___flneg,roundf@y
  6458  0019E4  C009  F052         	movff	?___flneg+1,roundf@y+1
  6459  0019E8  C00A  F053         	movff	?___flneg+2,roundf@y+2
  6460  0019EC  C00B  F054         	movff	?___flneg+3,roundf@y+3
  6461  0019F0                     l4253:
  6462  0019F0  FFFF               	dw	65535	; assembler added errata NOP
  6463  0019F2  C051  F03B         	movff	roundf@y,?_roundf
  6464  0019F6  C052  F03C         	movff	roundf@y+1,?_roundf+1
  6465  0019FA  C053  F03D         	movff	roundf@y+2,?_roundf+2
  6466  0019FE  C054  F03E         	movff	roundf@y+3,?_roundf+3
  6467  001A02                     l1126:
  6468  001A02  FFFF               	dw	65535	; assembler added errata NOP
  6469  001A04  0012               	return		;funcret
  6470  001A06  FFFF               	dw	65535	; errata NOP
  6471  001A08                     __end_of_roundf:
  6472                           	callstack 0
  6473                           
  6474 ;; *************** function ___flsub *****************
  6475 ;; Defined at:
  6476 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  b               4   23[COMRAM] float 
  6479 ;;  a               4   27[COMRAM] float 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  4   23[COMRAM] float 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6491 ;;      Params:         8       0       0       0       0       0       0
  6492 ;;      Locals:         0       0       0       0       0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0
  6494 ;;      Totals:         8       0       0       0       0       0       0
  6495 ;;Total ram usage:        8 bytes
  6496 ;; Hardware stack levels used: 1
  6497 ;; Hardware stack levels required when called: 2
  6498 ;; This function calls:
  6499 ;;		___fladd
  6500 ;; This function is called by:
  6501 ;;		_roundf
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text26
  6506  002B84                     __ptext26:
  6507                           	callstack 0
  6508  002B84                     ___flsub:
  6509                           	callstack 0
  6510  002B84  FFFF               	dw	65535	; assembler added errata NOP
  6511  002B86  0E00               	movlw	0
  6512  002B88  1A1C               	xorwf	___flsub@a^0,f,c
  6513  002B8A  0E00               	movlw	0
  6514  002B8C  1A1D               	xorwf	(___flsub@a+1)^0,f,c
  6515  002B8E  0E00               	movlw	0
  6516  002B90  1A1E               	xorwf	(___flsub@a+2)^0,f,c
  6517  002B92  0E80               	movlw	128
  6518  002B94  1A1F               	xorwf	(___flsub@a+3)^0,f,c
  6519  002B96  C018  F008         	movff	___flsub@b,___fladd@b
  6520  002B9A  C019  F009         	movff	___flsub@b+1,___fladd@b+1
  6521  002B9E  C01A  F00A         	movff	___flsub@b+2,___fladd@b+2
  6522  002BA2  C01B  F00B         	movff	___flsub@b+3,___fladd@b+3
  6523  002BA6  C01C  F00C         	movff	___flsub@a,___fladd@a
  6524  002BAA  C01D  F00D         	movff	___flsub@a+1,___fladd@a+1
  6525  002BAE  C01E  F00E         	movff	___flsub@a+2,___fladd@a+2
  6526  002BB2  C01F  F00F         	movff	___flsub@a+3,___fladd@a+3
  6527  002BB6  ECD2  F003         	call	___fladd	;wreg free
  6528  002BBA  C008  F018         	movff	?___fladd,?___flsub
  6529  002BBE  C009  F019         	movff	?___fladd+1,?___flsub+1
  6530  002BC2  C00A  F01A         	movff	?___fladd+2,?___flsub+2
  6531  002BC6  C00B  F01B         	movff	?___fladd+3,?___flsub+3
  6532  002BCA  0012               	return		;funcret
  6533  002BCC  FFFF               	dw	65535	; errata NOP
  6534  002BCE                     __end_of___flsub:
  6535                           	callstack 0
  6536                           
  6537 ;; *************** function ___fladd *****************
  6538 ;; Defined at:
  6539 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  b               4    7[COMRAM] float 
  6542 ;;  a               4   11[COMRAM] float 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  grs             1   22[COMRAM] unsigned char 
  6545 ;;  bexp            1   21[COMRAM] unsigned char 
  6546 ;;  aexp            1   20[COMRAM] unsigned char 
  6547 ;;  signs           1   19[COMRAM] unsigned char 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  4    7[COMRAM] unsigned char 
  6550 ;; Registers used:
  6551 ;;		wreg, status,2, status,0
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6557 ;;      Params:         8       0       0       0       0       0       0
  6558 ;;      Locals:         4       0       0       0       0       0       0
  6559 ;;      Temps:          4       0       0       0       0       0       0
  6560 ;;      Totals:        16       0       0       0       0       0       0
  6561 ;;Total ram usage:       16 bytes
  6562 ;; Hardware stack levels used: 1
  6563 ;; Hardware stack levels required when called: 1
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		___flsub
  6568 ;;		_roundf
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text27
  6573  0007A4                     __ptext27:
  6574                           	callstack 0
  6575  0007A4                     ___fladd:
  6576                           	callstack 0
  6577  0007A4  FFFF               	dw	65535	; assembler added errata NOP
  6578  0007A6  500B               	movf	(___fladd@b+3)^0,w,c
  6579  0007A8  0B80               	andlw	128
  6580  0007AA  6E14               	movwf	___fladd@signs^0,c
  6581  0007AC  500B               	movf	(___fladd@b+3)^0,w,c
  6582  0007AE  240B               	addwf	(___fladd@b+3)^0,w,c
  6583  0007B0  6E16               	movwf	___fladd@bexp^0,c
  6584  0007B2  AE0A               	btfss	(___fladd@b+2)^0,7,c
  6585  0007B4  EFDE  F003         	goto	u2161
  6586  0007B8  EFE1  F003         	goto	u2160
  6587  0007BC                     u2161:
  6588  0007BC  FFFF               	dw	65535	; assembler added errata NOP
  6589  0007BE  EFE3  F003         	goto	l2503
  6590  0007C2                     u2160:
  6591  0007C2  FFFF               	dw	65535	; assembler added errata NOP
  6592  0007C4  8016               	bsf	___fladd@bexp^0,0,c
  6593  0007C6                     l2503:
  6594  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  6595  0007C8  5016               	movf	___fladd@bexp^0,w,c
  6596  0007CA  B4D8               	btfsc	status,2,c
  6597  0007CC  EFEA  F003         	goto	u2171
  6598  0007D0  EFED  F003         	goto	u2170
  6599  0007D4                     u2171:
  6600  0007D4  FFFF               	dw	65535	; assembler added errata NOP
  6601  0007D6  EF06  F004         	goto	l2513
  6602  0007DA                     u2170:
  6603  0007DA  FFFF               	dw	65535	; assembler added errata NOP
  6604  0007DC  2816               	incf	___fladd@bexp^0,w,c
  6605  0007DE  A4D8               	btfss	status,2,c
  6606  0007E0  EFF4  F003         	goto	u2181
  6607  0007E4  EFF7  F003         	goto	u2180
  6608  0007E8                     u2181:
  6609  0007E8  FFFF               	dw	65535	; assembler added errata NOP
  6610  0007EA  EF00  F004         	goto	l2509
  6611  0007EE                     u2180:
  6612  0007EE  FFFF               	dw	65535	; assembler added errata NOP
  6613  0007F0  0E00               	movlw	0
  6614  0007F2  6E08               	movwf	___fladd@b^0,c
  6615  0007F4  0E00               	movlw	0
  6616  0007F6  6E09               	movwf	(___fladd@b+1)^0,c
  6617  0007F8  0E00               	movlw	0
  6618  0007FA  6E0A               	movwf	(___fladd@b+2)^0,c
  6619  0007FC  0E00               	movlw	0
  6620  0007FE  6E0B               	movwf	(___fladd@b+3)^0,c
  6621  000800                     l2509:
  6622  000800  FFFF               	dw	65535	; assembler added errata NOP
  6623  000802  8E0A               	bsf	(___fladd@b+2)^0,7,c
  6624  000804  0E00               	movlw	0
  6625  000806  6E0B               	movwf	(___fladd@b+3)^0,c
  6626  000808  EF0F  F004         	goto	l2515
  6627  00080C                     l2513:
  6628  00080C  FFFF               	dw	65535	; assembler added errata NOP
  6629  00080E  0E00               	movlw	0
  6630  000810  6E08               	movwf	___fladd@b^0,c
  6631  000812  0E00               	movlw	0
  6632  000814  6E09               	movwf	(___fladd@b+1)^0,c
  6633  000816  0E00               	movlw	0
  6634  000818  6E0A               	movwf	(___fladd@b+2)^0,c
  6635  00081A  0E00               	movlw	0
  6636  00081C  6E0B               	movwf	(___fladd@b+3)^0,c
  6637  00081E                     l2515:
  6638  00081E  FFFF               	dw	65535	; assembler added errata NOP
  6639  000820  500F               	movf	(___fladd@a+3)^0,w,c
  6640  000822  0B80               	andlw	128
  6641  000824  6E15               	movwf	___fladd@aexp^0,c
  6642  000826  5014               	movf	___fladd@signs^0,w,c
  6643  000828  1815               	xorwf	___fladd@aexp^0,w,c
  6644  00082A  B4D8               	btfsc	status,2,c
  6645  00082C  EF1A  F004         	goto	u2191
  6646  000830  EF1D  F004         	goto	u2190
  6647  000834                     u2191:
  6648  000834  FFFF               	dw	65535	; assembler added errata NOP
  6649  000836  EF1F  F004         	goto	l2521
  6650  00083A                     u2190:
  6651  00083A  FFFF               	dw	65535	; assembler added errata NOP
  6652  00083C  8C14               	bsf	___fladd@signs^0,6,c
  6653  00083E                     l2521:
  6654  00083E  FFFF               	dw	65535	; assembler added errata NOP
  6655  000840  500F               	movf	(___fladd@a+3)^0,w,c
  6656  000842  240F               	addwf	(___fladd@a+3)^0,w,c
  6657  000844  6E15               	movwf	___fladd@aexp^0,c
  6658  000846  AE0E               	btfss	(___fladd@a+2)^0,7,c
  6659  000848  EF28  F004         	goto	u2201
  6660  00084C  EF2B  F004         	goto	u2200
  6661  000850                     u2201:
  6662  000850  FFFF               	dw	65535	; assembler added errata NOP
  6663  000852  EF2D  F004         	goto	l2527
  6664  000856                     u2200:
  6665  000856  FFFF               	dw	65535	; assembler added errata NOP
  6666  000858  8015               	bsf	___fladd@aexp^0,0,c
  6667  00085A                     l2527:
  6668  00085A  FFFF               	dw	65535	; assembler added errata NOP
  6669  00085C  5015               	movf	___fladd@aexp^0,w,c
  6670  00085E  B4D8               	btfsc	status,2,c
  6671  000860  EF34  F004         	goto	u2211
  6672  000864  EF37  F004         	goto	u2210
  6673  000868                     u2211:
  6674  000868  FFFF               	dw	65535	; assembler added errata NOP
  6675  00086A  EF50  F004         	goto	l2537
  6676  00086E                     u2210:
  6677  00086E  FFFF               	dw	65535	; assembler added errata NOP
  6678  000870  2815               	incf	___fladd@aexp^0,w,c
  6679  000872  A4D8               	btfss	status,2,c
  6680  000874  EF3E  F004         	goto	u2221
  6681  000878  EF41  F004         	goto	u2220
  6682  00087C                     u2221:
  6683  00087C  FFFF               	dw	65535	; assembler added errata NOP
  6684  00087E  EF4A  F004         	goto	l2533
  6685  000882                     u2220:
  6686  000882  FFFF               	dw	65535	; assembler added errata NOP
  6687  000884  0E00               	movlw	0
  6688  000886  6E0C               	movwf	___fladd@a^0,c
  6689  000888  0E00               	movlw	0
  6690  00088A  6E0D               	movwf	(___fladd@a+1)^0,c
  6691  00088C  0E00               	movlw	0
  6692  00088E  6E0E               	movwf	(___fladd@a+2)^0,c
  6693  000890  0E00               	movlw	0
  6694  000892  6E0F               	movwf	(___fladd@a+3)^0,c
  6695  000894                     l2533:
  6696  000894  FFFF               	dw	65535	; assembler added errata NOP
  6697  000896  8E0E               	bsf	(___fladd@a+2)^0,7,c
  6698  000898  0E00               	movlw	0
  6699  00089A  6E0F               	movwf	(___fladd@a+3)^0,c
  6700  00089C  EF59  F004         	goto	l2539
  6701  0008A0                     l2537:
  6702  0008A0  FFFF               	dw	65535	; assembler added errata NOP
  6703  0008A2  0E00               	movlw	0
  6704  0008A4  6E0C               	movwf	___fladd@a^0,c
  6705  0008A6  0E00               	movlw	0
  6706  0008A8  6E0D               	movwf	(___fladd@a+1)^0,c
  6707  0008AA  0E00               	movlw	0
  6708  0008AC  6E0E               	movwf	(___fladd@a+2)^0,c
  6709  0008AE  0E00               	movlw	0
  6710  0008B0  6E0F               	movwf	(___fladd@a+3)^0,c
  6711  0008B2                     l2539:
  6712  0008B2  FFFF               	dw	65535	; assembler added errata NOP
  6713  0008B4  5016               	movf	___fladd@bexp^0,w,c
  6714  0008B6  5C15               	subwf	___fladd@aexp^0,w,c
  6715  0008B8  B0D8               	btfsc	status,0,c
  6716  0008BA  EF61  F004         	goto	u2231
  6717  0008BE  EF64  F004         	goto	u2230
  6718  0008C2                     u2231:
  6719  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  6720  0008C4  EF8F  F004         	goto	l2575
  6721  0008C8                     u2230:
  6722  0008C8  FFFF               	dw	65535	; assembler added errata NOP
  6723  0008CA  AC14               	btfss	___fladd@signs^0,6,c
  6724  0008CC  EF6A  F004         	goto	u2241
  6725  0008D0  EF6D  F004         	goto	u2240
  6726  0008D4                     u2241:
  6727  0008D4  FFFF               	dw	65535	; assembler added errata NOP
  6728  0008D6  EF70  F004         	goto	l2545
  6729  0008DA                     u2240:
  6730  0008DA  FFFF               	dw	65535	; assembler added errata NOP
  6731  0008DC  0E80               	movlw	128
  6732  0008DE  1A14               	xorwf	___fladd@signs^0,f,c
  6733  0008E0                     l2545:
  6734  0008E0  FFFF               	dw	65535	; assembler added errata NOP
  6735  0008E2  C016  F017         	movff	___fladd@bexp,___fladd@grs
  6736  0008E6  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  6737  0008EA  C017  F015         	movff	___fladd@grs,___fladd@aexp
  6738  0008EE  C008  F017         	movff	___fladd@b,___fladd@grs
  6739  0008F2  C00C  F008         	movff	___fladd@a,___fladd@b
  6740  0008F6  C017  F00C         	movff	___fladd@grs,___fladd@a
  6741  0008FA  C009  F017         	movff	___fladd@b+1,___fladd@grs
  6742  0008FE  C00D  F009         	movff	___fladd@a+1,___fladd@b+1
  6743  000902  C017  F00D         	movff	___fladd@grs,___fladd@a+1
  6744  000906  C00A  F017         	movff	___fladd@b+2,___fladd@grs
  6745  00090A  C00E  F00A         	movff	___fladd@a+2,___fladd@b+2
  6746  00090E  C017  F00E         	movff	___fladd@grs,___fladd@a+2
  6747  000912  C00B  F017         	movff	___fladd@b+3,___fladd@grs
  6748  000916  C00F  F00B         	movff	___fladd@a+3,___fladd@b+3
  6749  00091A  C017  F00F         	movff	___fladd@grs,___fladd@a+3
  6750  00091E                     l2575:
  6751  00091E  FFFF               	dw	65535	; assembler added errata NOP
  6752  000920  0E00               	movlw	0
  6753  000922  6E17               	movwf	___fladd@grs^0,c
  6754  000924  5016               	movf	___fladd@bexp^0,w,c
  6755  000926  C015  F010         	movff	___fladd@aexp,??___fladd
  6756  00092A  6A11               	clrf	(??___fladd+1)^0,c
  6757  00092C  5E10               	subwf	??___fladd^0,f,c
  6758  00092E  0E00               	movlw	0
  6759  000930  5A11               	subwfb	(??___fladd+1)^0,f,c
  6760  000932  BE11               	btfsc	(??___fladd+1)^0,7,c
  6761  000934  EFA5  F004         	goto	u2251
  6762  000938  5011               	movf	(??___fladd+1)^0,w,c
  6763  00093A  E10A               	bnz	u2250
  6764  00093C  0E1A               	movlw	26
  6765  00093E  5C10               	subwf	??___fladd^0,w,c
  6766  000940  A0D8               	btfss	status,0,c
  6767  000942  EFA5  F004         	goto	u2251
  6768  000946  EFA8  F004         	goto	u2250
  6769  00094A                     u2251:
  6770  00094A  FFFF               	dw	65535	; assembler added errata NOP
  6771  00094C  EFEB  F004         	goto	l921
  6772  000950                     u2250:
  6773  000950  FFFF               	dw	65535	; assembler added errata NOP
  6774  000952  5008               	movf	___fladd@b^0,w,c
  6775  000954  1009               	iorwf	(___fladd@b+1)^0,w,c
  6776  000956  100A               	iorwf	(___fladd@b+2)^0,w,c
  6777  000958  100B               	iorwf	(___fladd@b+3)^0,w,c
  6778  00095A  A4D8               	btfss	status,2,c
  6779  00095C  EFB2  F004         	goto	u2261
  6780  000960  EFB6  F004         	goto	u2260
  6781  000964                     u2261:
  6782  000964  FFFF               	dw	65535	; assembler added errata NOP
  6783  000966  0E01               	movlw	1
  6784  000968  EFB8  F004         	goto	u2270
  6785  00096C                     u2260:
  6786  00096C  FFFF               	dw	65535	; assembler added errata NOP
  6787  00096E  0E00               	movlw	0
  6788  000970                     u2270:
  6789  000970  FFFF               	dw	65535	; assembler added errata NOP
  6790  000972  6E17               	movwf	___fladd@grs^0,c
  6791  000974  0E00               	movlw	0
  6792  000976  6E08               	movwf	___fladd@b^0,c
  6793  000978  0E00               	movlw	0
  6794  00097A  6E09               	movwf	(___fladd@b+1)^0,c
  6795  00097C  0E00               	movlw	0
  6796  00097E  6E0A               	movwf	(___fladd@b+2)^0,c
  6797  000980  0E00               	movlw	0
  6798  000982  6E0B               	movwf	(___fladd@b+3)^0,c
  6799  000984  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  6800  000988  EFF6  F004         	goto	l920
  6801  00098C                     l922:
  6802  00098C  FFFF               	dw	65535	; assembler added errata NOP
  6803  00098E  A017               	btfss	___fladd@grs^0,0,c
  6804  000990  EFCC  F004         	goto	u2281
  6805  000994  EFCF  F004         	goto	u2280
  6806  000998                     u2281:
  6807  000998  FFFF               	dw	65535	; assembler added errata NOP
  6808  00099A  EFD6  F004         	goto	l2587
  6809  00099E                     u2280:
  6810  00099E  FFFF               	dw	65535	; assembler added errata NOP
  6811  0009A0  90D8               	bcf	status,0,c
  6812  0009A2  3017               	rrcf	___fladd@grs^0,w,c
  6813  0009A4  0901               	iorlw	1
  6814  0009A6  6E17               	movwf	___fladd@grs^0,c
  6815  0009A8  EFD9  F004         	goto	l2589
  6816  0009AC                     l2587:
  6817  0009AC  FFFF               	dw	65535	; assembler added errata NOP
  6818  0009AE  90D8               	bcf	status,0,c
  6819  0009B0  3217               	rrcf	___fladd@grs^0,f,c
  6820  0009B2                     l2589:
  6821  0009B2  FFFF               	dw	65535	; assembler added errata NOP
  6822  0009B4  A008               	btfss	___fladd@b^0,0,c
  6823  0009B6  EFDF  F004         	goto	u2291
  6824  0009BA  EFE2  F004         	goto	u2290
  6825  0009BE                     u2291:
  6826  0009BE  FFFF               	dw	65535	; assembler added errata NOP
  6827  0009C0  EFE4  F004         	goto	l2593
  6828  0009C4                     u2290:
  6829  0009C4  FFFF               	dw	65535	; assembler added errata NOP
  6830  0009C6  8E17               	bsf	___fladd@grs^0,7,c
  6831  0009C8                     l2593:
  6832  0009C8  FFFF               	dw	65535	; assembler added errata NOP
  6833  0009CA  340B               	rlcf	(___fladd@b+3)^0,w,c
  6834  0009CC  320B               	rrcf	(___fladd@b+3)^0,f,c
  6835  0009CE  320A               	rrcf	(___fladd@b+2)^0,f,c
  6836  0009D0  3209               	rrcf	(___fladd@b+1)^0,f,c
  6837  0009D2  3208               	rrcf	___fladd@b^0,f,c
  6838  0009D4  2A16               	incf	___fladd@bexp^0,f,c
  6839  0009D6                     l921:
  6840  0009D6  FFFF               	dw	65535	; assembler added errata NOP
  6841  0009D8  5015               	movf	___fladd@aexp^0,w,c
  6842  0009DA  5C16               	subwf	___fladd@bexp^0,w,c
  6843  0009DC  A0D8               	btfss	status,0,c
  6844  0009DE  EFF3  F004         	goto	u2301
  6845  0009E2  EFF6  F004         	goto	u2300
  6846  0009E6                     u2301:
  6847  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  6848  0009E8  EFC6  F004         	goto	l922
  6849  0009EC                     u2300:
  6850  0009EC                     l920:
  6851  0009EC  FFFF               	dw	65535	; assembler added errata NOP
  6852  0009EE  BC14               	btfsc	___fladd@signs^0,6,c
  6853  0009F0  EFFC  F004         	goto	u2311
  6854  0009F4  EFFF  F004         	goto	u2310
  6855  0009F8                     u2311:
  6856  0009F8  FFFF               	dw	65535	; assembler added errata NOP
  6857  0009FA  EF4C  F005         	goto	l2621
  6858  0009FE                     u2310:
  6859  0009FE  FFFF               	dw	65535	; assembler added errata NOP
  6860  000A00  5016               	movf	___fladd@bexp^0,w,c
  6861  000A02  A4D8               	btfss	status,2,c
  6862  000A04  EF06  F005         	goto	u2321
  6863  000A08  EF09  F005         	goto	u2320
  6864  000A0C                     u2321:
  6865  000A0C  FFFF               	dw	65535	; assembler added errata NOP
  6866  000A0E  EF14  F005         	goto	l2603
  6867  000A12                     u2320:
  6868  000A12  FFFF               	dw	65535	; assembler added errata NOP
  6869  000A14  0E00               	movlw	0
  6870  000A16  6E08               	movwf	?___fladd^0,c
  6871  000A18  0E00               	movlw	0
  6872  000A1A  6E09               	movwf	(?___fladd+1)^0,c
  6873  000A1C  0E00               	movlw	0
  6874  000A1E  6E0A               	movwf	(?___fladd+2)^0,c
  6875  000A20  0E00               	movlw	0
  6876  000A22  6E0B               	movwf	(?___fladd+3)^0,c
  6877  000A24  EFA3  F006         	goto	l929
  6878  000A28                     l2603:
  6879  000A28  FFFF               	dw	65535	; assembler added errata NOP
  6880  000A2A  500C               	movf	___fladd@a^0,w,c
  6881  000A2C  2608               	addwf	___fladd@b^0,f,c
  6882  000A2E  500D               	movf	(___fladd@a+1)^0,w,c
  6883  000A30  2209               	addwfc	(___fladd@b+1)^0,f,c
  6884  000A32  500E               	movf	(___fladd@a+2)^0,w,c
  6885  000A34  220A               	addwfc	(___fladd@b+2)^0,f,c
  6886  000A36  500F               	movf	(___fladd@a+3)^0,w,c
  6887  000A38  220B               	addwfc	(___fladd@b+3)^0,f,c
  6888  000A3A  A00B               	btfss	(___fladd@b+3)^0,0,c
  6889  000A3C  EF22  F005         	goto	u2331
  6890  000A40  EF25  F005         	goto	u2330
  6891  000A44                     u2331:
  6892  000A44  FFFF               	dw	65535	; assembler added errata NOP
  6893  000A46  EFF0  F005         	goto	l2657
  6894  000A4A                     u2330:
  6895  000A4A  FFFF               	dw	65535	; assembler added errata NOP
  6896  000A4C  A017               	btfss	___fladd@grs^0,0,c
  6897  000A4E  EF2B  F005         	goto	u2341
  6898  000A52  EF2E  F005         	goto	u2340
  6899  000A56                     u2341:
  6900  000A56  FFFF               	dw	65535	; assembler added errata NOP
  6901  000A58  EF35  F005         	goto	l2611
  6902  000A5C                     u2340:
  6903  000A5C  FFFF               	dw	65535	; assembler added errata NOP
  6904  000A5E  90D8               	bcf	status,0,c
  6905  000A60  3017               	rrcf	___fladd@grs^0,w,c
  6906  000A62  0901               	iorlw	1
  6907  000A64  6E17               	movwf	___fladd@grs^0,c
  6908  000A66  EF38  F005         	goto	l2613
  6909  000A6A                     l2611:
  6910  000A6A  FFFF               	dw	65535	; assembler added errata NOP
  6911  000A6C  90D8               	bcf	status,0,c
  6912  000A6E  3217               	rrcf	___fladd@grs^0,f,c
  6913  000A70                     l2613:
  6914  000A70  FFFF               	dw	65535	; assembler added errata NOP
  6915  000A72  A008               	btfss	___fladd@b^0,0,c
  6916  000A74  EF3E  F005         	goto	u2351
  6917  000A78  EF41  F005         	goto	u2350
  6918  000A7C                     u2351:
  6919  000A7C  FFFF               	dw	65535	; assembler added errata NOP
  6920  000A7E  EF43  F005         	goto	l2617
  6921  000A82                     u2350:
  6922  000A82  FFFF               	dw	65535	; assembler added errata NOP
  6923  000A84  8E17               	bsf	___fladd@grs^0,7,c
  6924  000A86                     l2617:
  6925  000A86  FFFF               	dw	65535	; assembler added errata NOP
  6926  000A88  340B               	rlcf	(___fladd@b+3)^0,w,c
  6927  000A8A  320B               	rrcf	(___fladd@b+3)^0,f,c
  6928  000A8C  320A               	rrcf	(___fladd@b+2)^0,f,c
  6929  000A8E  3209               	rrcf	(___fladd@b+1)^0,f,c
  6930  000A90  3208               	rrcf	___fladd@b^0,f,c
  6931  000A92  2A16               	incf	___fladd@bexp^0,f,c
  6932  000A94  EFF0  F005         	goto	l2657
  6933  000A98                     l2621:
  6934  000A98  FFFF               	dw	65535	; assembler added errata NOP
  6935  000A9A  500C               	movf	___fladd@a^0,w,c
  6936  000A9C  5C08               	subwf	___fladd@b^0,w,c
  6937  000A9E  500D               	movf	(___fladd@a+1)^0,w,c
  6938  000AA0  5809               	subwfb	(___fladd@b+1)^0,w,c
  6939  000AA2  500E               	movf	(___fladd@a+2)^0,w,c
  6940  000AA4  580A               	subwfb	(___fladd@b+2)^0,w,c
  6941  000AA6  500B               	movf	(___fladd@b+3)^0,w,c
  6942  000AA8  0A80               	xorlw	128
  6943  000AAA  6E10               	movwf	??___fladd^0,c
  6944  000AAC  500F               	movf	(___fladd@a+3)^0,w,c
  6945  000AAE  0A80               	xorlw	128
  6946  000AB0  5810               	subwfb	??___fladd^0,w,c
  6947  000AB2  B0D8               	btfsc	status,0,c
  6948  000AB4  EF5E  F005         	goto	u2361
  6949  000AB8  EF61  F005         	goto	u2360
  6950  000ABC                     u2361:
  6951  000ABC  FFFF               	dw	65535	; assembler added errata NOP
  6952  000ABE  EF8F  F005         	goto	l2631
  6953  000AC2                     u2360:
  6954  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  6955  000AC4  5008               	movf	___fladd@b^0,w,c
  6956  000AC6  5C0C               	subwf	___fladd@a^0,w,c
  6957  000AC8  6E10               	movwf	??___fladd^0,c
  6958  000ACA  5009               	movf	(___fladd@b+1)^0,w,c
  6959  000ACC  580D               	subwfb	(___fladd@a+1)^0,w,c
  6960  000ACE  6E11               	movwf	(??___fladd+1)^0,c
  6961  000AD0  500A               	movf	(___fladd@b+2)^0,w,c
  6962  000AD2  580E               	subwfb	(___fladd@a+2)^0,w,c
  6963  000AD4  6E12               	movwf	(??___fladd+2)^0,c
  6964  000AD6  500B               	movf	(___fladd@b+3)^0,w,c
  6965  000AD8  580F               	subwfb	(___fladd@a+3)^0,w,c
  6966  000ADA  6E13               	movwf	(??___fladd+3)^0,c
  6967  000ADC  0EFF               	movlw	255
  6968  000ADE  2410               	addwf	??___fladd^0,w,c
  6969  000AE0  6E08               	movwf	___fladd@b^0,c
  6970  000AE2  0EFF               	movlw	255
  6971  000AE4  2011               	addwfc	(??___fladd+1)^0,w,c
  6972  000AE6  6E09               	movwf	(___fladd@b+1)^0,c
  6973  000AE8  0EFF               	movlw	255
  6974  000AEA  2012               	addwfc	(??___fladd+2)^0,w,c
  6975  000AEC  6E0A               	movwf	(___fladd@b+2)^0,c
  6976  000AEE  0EFF               	movlw	255
  6977  000AF0  2013               	addwfc	(??___fladd+3)^0,w,c
  6978  000AF2  6E0B               	movwf	(___fladd@b+3)^0,c
  6979  000AF4  0E80               	movlw	128
  6980  000AF6  1A14               	xorwf	___fladd@signs^0,f,c
  6981  000AF8  6C17               	negf	___fladd@grs^0,c
  6982  000AFA  5017               	movf	___fladd@grs^0,w,c
  6983  000AFC  A4D8               	btfss	status,2,c
  6984  000AFE  EF83  F005         	goto	u2371
  6985  000B02  EF86  F005         	goto	u2370
  6986  000B06                     u2371:
  6987  000B06  FFFF               	dw	65535	; assembler added errata NOP
  6988  000B08  EF98  F005         	goto	l937
  6989  000B0C                     u2370:
  6990  000B0C  FFFF               	dw	65535	; assembler added errata NOP
  6991  000B0E  0E01               	movlw	1
  6992  000B10  2608               	addwf	___fladd@b^0,f,c
  6993  000B12  0E00               	movlw	0
  6994  000B14  2209               	addwfc	(___fladd@b+1)^0,f,c
  6995  000B16  220A               	addwfc	(___fladd@b+2)^0,f,c
  6996  000B18  220B               	addwfc	(___fladd@b+3)^0,f,c
  6997  000B1A  EF98  F005         	goto	l937
  6998  000B1E                     l2631:
  6999  000B1E  FFFF               	dw	65535	; assembler added errata NOP
  7000  000B20  500C               	movf	___fladd@a^0,w,c
  7001  000B22  5E08               	subwf	___fladd@b^0,f,c
  7002  000B24  500D               	movf	(___fladd@a+1)^0,w,c
  7003  000B26  5A09               	subwfb	(___fladd@b+1)^0,f,c
  7004  000B28  500E               	movf	(___fladd@a+2)^0,w,c
  7005  000B2A  5A0A               	subwfb	(___fladd@b+2)^0,f,c
  7006  000B2C  500F               	movf	(___fladd@a+3)^0,w,c
  7007  000B2E  5A0B               	subwfb	(___fladd@b+3)^0,f,c
  7008  000B30                     l937:
  7009  000B30  FFFF               	dw	65535	; assembler added errata NOP
  7010  000B32  5008               	movf	___fladd@b^0,w,c
  7011  000B34  1009               	iorwf	(___fladd@b+1)^0,w,c
  7012  000B36  100A               	iorwf	(___fladd@b+2)^0,w,c
  7013  000B38  100B               	iorwf	(___fladd@b+3)^0,w,c
  7014  000B3A  A4D8               	btfss	status,2,c
  7015  000B3C  EFA2  F005         	goto	u2381
  7016  000B40  EFA5  F005         	goto	u2380
  7017  000B44                     u2381:
  7018  000B44  FFFF               	dw	65535	; assembler added errata NOP
  7019  000B46  EFE7  F005         	goto	l2655
  7020  000B4A                     u2380:
  7021  000B4A  FFFF               	dw	65535	; assembler added errata NOP
  7022  000B4C  5017               	movf	___fladd@grs^0,w,c
  7023  000B4E  A4D8               	btfss	status,2,c
  7024  000B50  EFAC  F005         	goto	u2391
  7025  000B54  EFAF  F005         	goto	u2390
  7026  000B58                     u2391:
  7027  000B58  FFFF               	dw	65535	; assembler added errata NOP
  7028  000B5A  EFE7  F005         	goto	l2655
  7029  000B5E                     u2390:
  7030  000B5E  FFFF               	dw	65535	; assembler added errata NOP
  7031  000B60  0E00               	movlw	0
  7032  000B62  6E08               	movwf	?___fladd^0,c
  7033  000B64  0E00               	movlw	0
  7034  000B66  6E09               	movwf	(?___fladd+1)^0,c
  7035  000B68  0E00               	movlw	0
  7036  000B6A  6E0A               	movwf	(?___fladd+2)^0,c
  7037  000B6C  0E00               	movlw	0
  7038  000B6E  6E0B               	movwf	(?___fladd+3)^0,c
  7039  000B70  EFA3  F006         	goto	l929
  7040  000B74                     l2639:
  7041  000B74  FFFF               	dw	65535	; assembler added errata NOP
  7042  000B76  90D8               	bcf	status,0,c
  7043  000B78  3608               	rlcf	___fladd@b^0,f,c
  7044  000B7A  3609               	rlcf	(___fladd@b+1)^0,f,c
  7045  000B7C  360A               	rlcf	(___fladd@b+2)^0,f,c
  7046  000B7E  360B               	rlcf	(___fladd@b+3)^0,f,c
  7047  000B80  AE17               	btfss	___fladd@grs^0,7,c
  7048  000B82  EFC5  F005         	goto	u2401
  7049  000B86  EFC8  F005         	goto	u2400
  7050  000B8A                     u2401:
  7051  000B8A  FFFF               	dw	65535	; assembler added errata NOP
  7052  000B8C  EFCA  F005         	goto	l2645
  7053  000B90                     u2400:
  7054  000B90  FFFF               	dw	65535	; assembler added errata NOP
  7055  000B92  8008               	bsf	___fladd@b^0,0,c
  7056  000B94                     l2645:
  7057  000B94  FFFF               	dw	65535	; assembler added errata NOP
  7058  000B96  A017               	btfss	___fladd@grs^0,0,c
  7059  000B98  EFD0  F005         	goto	u2411
  7060  000B9C  EFD3  F005         	goto	u2410
  7061  000BA0                     u2411:
  7062  000BA0  FFFF               	dw	65535	; assembler added errata NOP
  7063  000BA2  EFD8  F005         	goto	l2649
  7064  000BA6                     u2410:
  7065  000BA6  FFFF               	dw	65535	; assembler added errata NOP
  7066  000BA8  80D8               	bsf	status,0,c
  7067  000BAA  3617               	rlcf	___fladd@grs^0,f,c
  7068  000BAC  EFDB  F005         	goto	l2651
  7069  000BB0                     l2649:
  7070  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  7071  000BB2  90D8               	bcf	status,0,c
  7072  000BB4  3617               	rlcf	___fladd@grs^0,f,c
  7073  000BB6                     l2651:
  7074  000BB6  FFFF               	dw	65535	; assembler added errata NOP
  7075  000BB8  5016               	movf	___fladd@bexp^0,w,c
  7076  000BBA  B4D8               	btfsc	status,2,c
  7077  000BBC  EFE2  F005         	goto	u2421
  7078  000BC0  EFE5  F005         	goto	u2420
  7079  000BC4                     u2421:
  7080  000BC4  FFFF               	dw	65535	; assembler added errata NOP
  7081  000BC6  EFE7  F005         	goto	l2655
  7082  000BCA                     u2420:
  7083  000BCA  FFFF               	dw	65535	; assembler added errata NOP
  7084  000BCC  0616               	decf	___fladd@bexp^0,f,c
  7085  000BCE                     l2655:
  7086  000BCE  FFFF               	dw	65535	; assembler added errata NOP
  7087  000BD0  AE0A               	btfss	(___fladd@b+2)^0,7,c
  7088  000BD2  EFED  F005         	goto	u2431
  7089  000BD6  EFF0  F005         	goto	u2430
  7090  000BDA                     u2431:
  7091  000BDA  FFFF               	dw	65535	; assembler added errata NOP
  7092  000BDC  EFBA  F005         	goto	l2639
  7093  000BE0                     u2430:
  7094  000BE0                     l2657:
  7095  000BE0  FFFF               	dw	65535	; assembler added errata NOP
  7096  000BE2  0E00               	movlw	0
  7097  000BE4  6E15               	movwf	___fladd@aexp^0,c
  7098  000BE6  AE17               	btfss	___fladd@grs^0,7,c
  7099  000BE8  EFF8  F005         	goto	u2441
  7100  000BEC  EFFB  F005         	goto	u2440
  7101  000BF0                     u2441:
  7102  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  7103  000BF2  EF1A  F006         	goto	l946
  7104  000BF6                     u2440:
  7105  000BF6  FFFF               	dw	65535	; assembler added errata NOP
  7106  000BF8  C017  F010         	movff	___fladd@grs,??___fladd
  7107  000BFC  0E7F               	movlw	127
  7108  000BFE  1610               	andwf	??___fladd^0,f,c
  7109  000C00  B4D8               	btfsc	status,2,c
  7110  000C02  EF05  F006         	goto	u2451
  7111  000C06  EF08  F006         	goto	u2450
  7112  000C0A                     u2451:
  7113  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  7114  000C0C  EF0E  F006         	goto	l947
  7115  000C10                     u2450:
  7116  000C10  FFFF               	dw	65535	; assembler added errata NOP
  7117  000C12                     l2663:
  7118  000C12  FFFF               	dw	65535	; assembler added errata NOP
  7119  000C14  0E01               	movlw	1
  7120  000C16  6E15               	movwf	___fladd@aexp^0,c
  7121  000C18  EF1A  F006         	goto	l946
  7122  000C1C                     l947:
  7123  000C1C  FFFF               	dw	65535	; assembler added errata NOP
  7124  000C1E  A008               	btfss	___fladd@b^0,0,c
  7125  000C20  EF14  F006         	goto	u2461
  7126  000C24  EF17  F006         	goto	u2460
  7127  000C28                     u2461:
  7128  000C28  FFFF               	dw	65535	; assembler added errata NOP
  7129  000C2A  EF1A  F006         	goto	l946
  7130  000C2E                     u2460:
  7131  000C2E  FFFF               	dw	65535	; assembler added errata NOP
  7132  000C30  EF09  F006         	goto	l2663
  7133  000C34                     l946:
  7134  000C34  FFFF               	dw	65535	; assembler added errata NOP
  7135  000C36  5015               	movf	___fladd@aexp^0,w,c
  7136  000C38  B4D8               	btfsc	status,2,c
  7137  000C3A  EF21  F006         	goto	u2471
  7138  000C3E  EF24  F006         	goto	u2470
  7139  000C42                     u2471:
  7140  000C42  FFFF               	dw	65535	; assembler added errata NOP
  7141  000C44  EF54  F006         	goto	l2675
  7142  000C48                     u2470:
  7143  000C48  FFFF               	dw	65535	; assembler added errata NOP
  7144  000C4A  0E01               	movlw	1
  7145  000C4C  2608               	addwf	___fladd@b^0,f,c
  7146  000C4E  0E00               	movlw	0
  7147  000C50  2209               	addwfc	(___fladd@b+1)^0,f,c
  7148  000C52  220A               	addwfc	(___fladd@b+2)^0,f,c
  7149  000C54  220B               	addwfc	(___fladd@b+3)^0,f,c
  7150  000C56  A00B               	btfss	(___fladd@b+3)^0,0,c
  7151  000C58  EF30  F006         	goto	u2481
  7152  000C5C  EF33  F006         	goto	u2480
  7153  000C60                     u2481:
  7154  000C60  FFFF               	dw	65535	; assembler added errata NOP
  7155  000C62  EF54  F006         	goto	l2675
  7156  000C66                     u2480:
  7157  000C66  FFFF               	dw	65535	; assembler added errata NOP
  7158  000C68  C008  F010         	movff	___fladd@b,??___fladd
  7159  000C6C  C009  F011         	movff	___fladd@b+1,??___fladd+1
  7160  000C70  C00A  F012         	movff	___fladd@b+2,??___fladd+2
  7161  000C74  C00B  F013         	movff	___fladd@b+3,??___fladd+3
  7162  000C78  3413               	rlcf	(??___fladd+3)^0,w,c
  7163  000C7A  3213               	rrcf	(??___fladd+3)^0,f,c
  7164  000C7C  3212               	rrcf	(??___fladd+2)^0,f,c
  7165  000C7E  3211               	rrcf	(??___fladd+1)^0,f,c
  7166  000C80  3210               	rrcf	??___fladd^0,f,c
  7167  000C82  C010  F008         	movff	??___fladd,___fladd@b
  7168  000C86  C011  F009         	movff	??___fladd+1,___fladd@b+1
  7169  000C8A  C012  F00A         	movff	??___fladd+2,___fladd@b+2
  7170  000C8E  C013  F00B         	movff	??___fladd+3,___fladd@b+3
  7171  000C92  2816               	incf	___fladd@bexp^0,w,c
  7172  000C94  B4D8               	btfsc	status,2,c
  7173  000C96  EF4F  F006         	goto	u2491
  7174  000C9A  EF52  F006         	goto	u2490
  7175  000C9E                     u2491:
  7176  000C9E  FFFF               	dw	65535	; assembler added errata NOP
  7177  000CA0  EF54  F006         	goto	l2675
  7178  000CA4                     u2490:
  7179  000CA4  FFFF               	dw	65535	; assembler added errata NOP
  7180  000CA6  2A16               	incf	___fladd@bexp^0,f,c
  7181  000CA8                     l2675:
  7182  000CA8  FFFF               	dw	65535	; assembler added errata NOP
  7183  000CAA  2816               	incf	___fladd@bexp^0,w,c
  7184  000CAC  B4D8               	btfsc	status,2,c
  7185  000CAE  EF5B  F006         	goto	u2501
  7186  000CB2  EF5E  F006         	goto	u2500
  7187  000CB6                     u2501:
  7188  000CB6  FFFF               	dw	65535	; assembler added errata NOP
  7189  000CB8  EF68  F006         	goto	l2679
  7190  000CBC                     u2500:
  7191  000CBC  FFFF               	dw	65535	; assembler added errata NOP
  7192  000CBE  5016               	movf	___fladd@bexp^0,w,c
  7193  000CC0  A4D8               	btfss	status,2,c
  7194  000CC2  EF65  F006         	goto	u2511
  7195  000CC6  EF68  F006         	goto	u2510
  7196  000CCA                     u2511:
  7197  000CCA  FFFF               	dw	65535	; assembler added errata NOP
  7198  000CCC  EF7D  F006         	goto	l2683
  7199  000CD0                     u2510:
  7200  000CD0                     l2679:
  7201  000CD0  FFFF               	dw	65535	; assembler added errata NOP
  7202  000CD2  0E00               	movlw	0
  7203  000CD4  6E08               	movwf	___fladd@b^0,c
  7204  000CD6  0E00               	movlw	0
  7205  000CD8  6E09               	movwf	(___fladd@b+1)^0,c
  7206  000CDA  0E00               	movlw	0
  7207  000CDC  6E0A               	movwf	(___fladd@b+2)^0,c
  7208  000CDE  0E00               	movlw	0
  7209  000CE0  6E0B               	movwf	(___fladd@b+3)^0,c
  7210  000CE2  5016               	movf	___fladd@bexp^0,w,c
  7211  000CE4  A4D8               	btfss	status,2,c
  7212  000CE6  EF77  F006         	goto	u2521
  7213  000CEA  EF7A  F006         	goto	u2520
  7214  000CEE                     u2521:
  7215  000CEE  FFFF               	dw	65535	; assembler added errata NOP
  7216  000CF0  EF7D  F006         	goto	l2683
  7217  000CF4                     u2520:
  7218  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  7219  000CF6  0E00               	movlw	0
  7220  000CF8  6E14               	movwf	___fladd@signs^0,c
  7221  000CFA                     l2683:
  7222  000CFA  FFFF               	dw	65535	; assembler added errata NOP
  7223  000CFC  A016               	btfss	___fladd@bexp^0,0,c
  7224  000CFE  EF83  F006         	goto	u2531
  7225  000D02  EF86  F006         	goto	u2530
  7226  000D06                     u2531:
  7227  000D06  FFFF               	dw	65535	; assembler added errata NOP
  7228  000D08  EF8A  F006         	goto	l2687
  7229  000D0C                     u2530:
  7230  000D0C  FFFF               	dw	65535	; assembler added errata NOP
  7231  000D0E  8E0A               	bsf	(___fladd@b+2)^0,7,c
  7232  000D10  EF8C  F006         	goto	l2689
  7233  000D14                     l2687:
  7234  000D14  FFFF               	dw	65535	; assembler added errata NOP
  7235  000D16  9E0A               	bcf	(___fladd@b+2)^0,7,c
  7236  000D18                     l2689:
  7237  000D18  FFFF               	dw	65535	; assembler added errata NOP
  7238  000D1A  90D8               	bcf	status,0,c
  7239  000D1C  3016               	rrcf	___fladd@bexp^0,w,c
  7240  000D1E  6E0B               	movwf	(___fladd@b+3)^0,c
  7241  000D20  AE14               	btfss	___fladd@signs^0,7,c
  7242  000D22  EF95  F006         	goto	u2541
  7243  000D26  EF98  F006         	goto	u2540
  7244  000D2A                     u2541:
  7245  000D2A  FFFF               	dw	65535	; assembler added errata NOP
  7246  000D2C  EF9A  F006         	goto	l2695
  7247  000D30                     u2540:
  7248  000D30  FFFF               	dw	65535	; assembler added errata NOP
  7249  000D32  8E0B               	bsf	(___fladd@b+3)^0,7,c
  7250  000D34                     l2695:
  7251  000D34  FFFF               	dw	65535	; assembler added errata NOP
  7252  000D36  C008  F008         	movff	___fladd@b,?___fladd
  7253  000D3A  C009  F009         	movff	___fladd@b+1,?___fladd+1
  7254  000D3E  C00A  F00A         	movff	___fladd@b+2,?___fladd+2
  7255  000D42  C00B  F00B         	movff	___fladd@b+3,?___fladd+3
  7256  000D46                     l929:
  7257  000D46  FFFF               	dw	65535	; assembler added errata NOP
  7258  000D48  0012               	return		;funcret
  7259  000D4A  FFFF               	dw	65535	; errata NOP
  7260  000D4C                     __end_of___fladd:
  7261                           	callstack 0
  7262                           
  7263 ;; *************** function ___flneg *****************
  7264 ;; Defined at:
  7265 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  f1              4    7[COMRAM] unsigned char 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;		None
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  4    7[COMRAM] unsigned char 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2, status,0
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7279 ;;      Params:         4       0       0       0       0       0       0
  7280 ;;      Locals:         0       0       0       0       0       0       0
  7281 ;;      Temps:          0       0       0       0       0       0       0
  7282 ;;      Totals:         4       0       0       0       0       0       0
  7283 ;;Total ram usage:        4 bytes
  7284 ;; Hardware stack levels used: 1
  7285 ;; Hardware stack levels required when called: 1
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_roundf
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text28
  7294  002C52                     __ptext28:
  7295                           	callstack 0
  7296  002C52                     ___flneg:
  7297                           	callstack 0
  7298  002C52  FFFF               	dw	65535	; assembler added errata NOP
  7299  002C54  5008               	movf	___flneg@f1^0,w,c
  7300  002C56  1009               	iorwf	(___flneg@f1+1)^0,w,c
  7301  002C58  100A               	iorwf	(___flneg@f1+2)^0,w,c
  7302  002C5A  100B               	iorwf	(___flneg@f1+3)^0,w,c
  7303  002C5C  B4D8               	btfsc	status,2,c
  7304  002C5E  EF33  F016         	goto	u3341
  7305  002C62  EF36  F016         	goto	u3340
  7306  002C66                     u3341:
  7307  002C66  FFFF               	dw	65535	; assembler added errata NOP
  7308  002C68  EF3F  F016         	goto	l3231
  7309  002C6C                     u3340:
  7310  002C6C  FFFF               	dw	65535	; assembler added errata NOP
  7311  002C6E  0E00               	movlw	0
  7312  002C70  1A08               	xorwf	___flneg@f1^0,f,c
  7313  002C72  0E00               	movlw	0
  7314  002C74  1A09               	xorwf	(___flneg@f1+1)^0,f,c
  7315  002C76  0E00               	movlw	0
  7316  002C78  1A0A               	xorwf	(___flneg@f1+2)^0,f,c
  7317  002C7A  0E80               	movlw	128
  7318  002C7C  1A0B               	xorwf	(___flneg@f1+3)^0,f,c
  7319  002C7E                     l3231:
  7320  002C7E  FFFF               	dw	65535	; assembler added errata NOP
  7321  002C80  C008  F008         	movff	___flneg@f1,?___flneg
  7322  002C84  C009  F009         	movff	___flneg@f1+1,?___flneg+1
  7323  002C88  C00A  F00A         	movff	___flneg@f1+2,?___flneg+2
  7324  002C8C  C00B  F00B         	movff	___flneg@f1+3,?___flneg+3
  7325  002C90  0012               	return		;funcret
  7326  002C92  FFFF               	dw	65535	; errata NOP
  7327  002C94                     __end_of___flneg:
  7328                           	callstack 0
  7329                           
  7330 ;; *************** function ___flmul *****************
  7331 ;; Defined at:
  7332 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  b               4    7[COMRAM] unsigned char 
  7335 ;;  a               4   11[COMRAM] unsigned char 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  prod            4   26[COMRAM] struct .
  7338 ;;  grs             4   20[COMRAM] unsigned long 
  7339 ;;  temp            2   30[COMRAM] struct .
  7340 ;;  bexp            1   25[COMRAM] unsigned char 
  7341 ;;  aexp            1   24[COMRAM] unsigned char 
  7342 ;;  sign            1   19[COMRAM] unsigned char 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  4    7[COMRAM] unsigned char 
  7345 ;; Registers used:
  7346 ;;		wreg, status,2, status,0, prodl, prodh
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7352 ;;      Params:         8       0       0       0       0       0       0
  7353 ;;      Locals:        13       0       0       0       0       0       0
  7354 ;;      Temps:          4       0       0       0       0       0       0
  7355 ;;      Totals:        25       0       0       0       0       0       0
  7356 ;;Total ram usage:       25 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; Hardware stack levels required when called: 1
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_roundf
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           	psect	text29
  7367  000D4C                     __ptext29:
  7368                           	callstack 0
  7369  000D4C                     ___flmul:
  7370                           	callstack 0
  7371  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  7372  000D4E  500B               	movf	(___flmul@b+3)^0,w,c
  7373  000D50  0B80               	andlw	128
  7374  000D52  6E14               	movwf	___flmul@sign^0,c
  7375  000D54  500B               	movf	(___flmul@b+3)^0,w,c
  7376  000D56  240B               	addwf	(___flmul@b+3)^0,w,c
  7377  000D58  6E1A               	movwf	___flmul@bexp^0,c
  7378  000D5A  AE0A               	btfss	(___flmul@b+2)^0,7,c
  7379  000D5C  EFB2  F006         	goto	u3101
  7380  000D60  EFB5  F006         	goto	u3100
  7381  000D64                     u3101:
  7382  000D64  FFFF               	dw	65535	; assembler added errata NOP
  7383  000D66  EFB7  F006         	goto	l3075
  7384  000D6A                     u3100:
  7385  000D6A  FFFF               	dw	65535	; assembler added errata NOP
  7386  000D6C  801A               	bsf	___flmul@bexp^0,0,c
  7387  000D6E                     l3075:
  7388  000D6E  FFFF               	dw	65535	; assembler added errata NOP
  7389  000D70  501A               	movf	___flmul@bexp^0,w,c
  7390  000D72  B4D8               	btfsc	status,2,c
  7391  000D74  EFBE  F006         	goto	u3111
  7392  000D78  EFC1  F006         	goto	u3110
  7393  000D7C                     u3111:
  7394  000D7C  FFFF               	dw	65535	; assembler added errata NOP
  7395  000D7E  EFD8  F006         	goto	l3083
  7396  000D82                     u3110:
  7397  000D82  FFFF               	dw	65535	; assembler added errata NOP
  7398  000D84  281A               	incf	___flmul@bexp^0,w,c
  7399  000D86  A4D8               	btfss	status,2,c
  7400  000D88  EFC8  F006         	goto	u3121
  7401  000D8C  EFCB  F006         	goto	u3120
  7402  000D90                     u3121:
  7403  000D90  FFFF               	dw	65535	; assembler added errata NOP
  7404  000D92  EFD4  F006         	goto	l3081
  7405  000D96                     u3120:
  7406  000D96  FFFF               	dw	65535	; assembler added errata NOP
  7407  000D98  0E00               	movlw	0
  7408  000D9A  6E08               	movwf	___flmul@b^0,c
  7409  000D9C  0E00               	movlw	0
  7410  000D9E  6E09               	movwf	(___flmul@b+1)^0,c
  7411  000DA0  0E00               	movlw	0
  7412  000DA2  6E0A               	movwf	(___flmul@b+2)^0,c
  7413  000DA4  0E00               	movlw	0
  7414  000DA6  6E0B               	movwf	(___flmul@b+3)^0,c
  7415  000DA8                     l3081:
  7416  000DA8  FFFF               	dw	65535	; assembler added errata NOP
  7417  000DAA  8E0A               	bsf	(___flmul@b+2)^0,7,c
  7418  000DAC  EFE1  F006         	goto	l3085
  7419  000DB0                     l3083:
  7420  000DB0  FFFF               	dw	65535	; assembler added errata NOP
  7421  000DB2  0E00               	movlw	0
  7422  000DB4  6E08               	movwf	___flmul@b^0,c
  7423  000DB6  0E00               	movlw	0
  7424  000DB8  6E09               	movwf	(___flmul@b+1)^0,c
  7425  000DBA  0E00               	movlw	0
  7426  000DBC  6E0A               	movwf	(___flmul@b+2)^0,c
  7427  000DBE  0E00               	movlw	0
  7428  000DC0  6E0B               	movwf	(___flmul@b+3)^0,c
  7429  000DC2                     l3085:
  7430  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  7431  000DC4  500F               	movf	(___flmul@a+3)^0,w,c
  7432  000DC6  0B80               	andlw	128
  7433  000DC8  1A14               	xorwf	___flmul@sign^0,f,c
  7434  000DCA  500F               	movf	(___flmul@a+3)^0,w,c
  7435  000DCC  240F               	addwf	(___flmul@a+3)^0,w,c
  7436  000DCE  6E19               	movwf	___flmul@aexp^0,c
  7437  000DD0  AE0E               	btfss	(___flmul@a+2)^0,7,c
  7438  000DD2  EFED  F006         	goto	u3131
  7439  000DD6  EFF0  F006         	goto	u3130
  7440  000DDA                     u3131:
  7441  000DDA  FFFF               	dw	65535	; assembler added errata NOP
  7442  000DDC  EFF2  F006         	goto	l3093
  7443  000DE0                     u3130:
  7444  000DE0  FFFF               	dw	65535	; assembler added errata NOP
  7445  000DE2  8019               	bsf	___flmul@aexp^0,0,c
  7446  000DE4                     l3093:
  7447  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  7448  000DE6  5019               	movf	___flmul@aexp^0,w,c
  7449  000DE8  B4D8               	btfsc	status,2,c
  7450  000DEA  EFF9  F006         	goto	u3141
  7451  000DEE  EFFC  F006         	goto	u3140
  7452  000DF2                     u3141:
  7453  000DF2  FFFF               	dw	65535	; assembler added errata NOP
  7454  000DF4  EF13  F007         	goto	l3101
  7455  000DF8                     u3140:
  7456  000DF8  FFFF               	dw	65535	; assembler added errata NOP
  7457  000DFA  2819               	incf	___flmul@aexp^0,w,c
  7458  000DFC  A4D8               	btfss	status,2,c
  7459  000DFE  EF03  F007         	goto	u3151
  7460  000E02  EF06  F007         	goto	u3150
  7461  000E06                     u3151:
  7462  000E06  FFFF               	dw	65535	; assembler added errata NOP
  7463  000E08  EF0F  F007         	goto	l3099
  7464  000E0C                     u3150:
  7465  000E0C  FFFF               	dw	65535	; assembler added errata NOP
  7466  000E0E  0E00               	movlw	0
  7467  000E10  6E0C               	movwf	___flmul@a^0,c
  7468  000E12  0E00               	movlw	0
  7469  000E14  6E0D               	movwf	(___flmul@a+1)^0,c
  7470  000E16  0E00               	movlw	0
  7471  000E18  6E0E               	movwf	(___flmul@a+2)^0,c
  7472  000E1A  0E00               	movlw	0
  7473  000E1C  6E0F               	movwf	(___flmul@a+3)^0,c
  7474  000E1E                     l3099:
  7475  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  7476  000E20  8E0E               	bsf	(___flmul@a+2)^0,7,c
  7477  000E22  EF1C  F007         	goto	l1006
  7478  000E26                     l3101:
  7479  000E26  FFFF               	dw	65535	; assembler added errata NOP
  7480  000E28  0E00               	movlw	0
  7481  000E2A  6E0C               	movwf	___flmul@a^0,c
  7482  000E2C  0E00               	movlw	0
  7483  000E2E  6E0D               	movwf	(___flmul@a+1)^0,c
  7484  000E30  0E00               	movlw	0
  7485  000E32  6E0E               	movwf	(___flmul@a+2)^0,c
  7486  000E34  0E00               	movlw	0
  7487  000E36  6E0F               	movwf	(___flmul@a+3)^0,c
  7488  000E38                     l1006:
  7489  000E38  FFFF               	dw	65535	; assembler added errata NOP
  7490  000E3A  5019               	movf	___flmul@aexp^0,w,c
  7491  000E3C  B4D8               	btfsc	status,2,c
  7492  000E3E  EF23  F007         	goto	u3161
  7493  000E42  EF26  F007         	goto	u3160
  7494  000E46                     u3161:
  7495  000E46  FFFF               	dw	65535	; assembler added errata NOP
  7496  000E48  EF30  F007         	goto	l3105
  7497  000E4C                     u3160:
  7498  000E4C  FFFF               	dw	65535	; assembler added errata NOP
  7499  000E4E  501A               	movf	___flmul@bexp^0,w,c
  7500  000E50  A4D8               	btfss	status,2,c
  7501  000E52  EF2D  F007         	goto	u3171
  7502  000E56  EF30  F007         	goto	u3170
  7503  000E5A                     u3171:
  7504  000E5A  FFFF               	dw	65535	; assembler added errata NOP
  7505  000E5C  EF3B  F007         	goto	l3109
  7506  000E60                     u3170:
  7507  000E60                     l3105:
  7508  000E60  FFFF               	dw	65535	; assembler added errata NOP
  7509  000E62  0E00               	movlw	0
  7510  000E64  6E08               	movwf	?___flmul^0,c
  7511  000E66  0E00               	movlw	0
  7512  000E68  6E09               	movwf	(?___flmul+1)^0,c
  7513  000E6A  0E00               	movlw	0
  7514  000E6C  6E0A               	movwf	(?___flmul+2)^0,c
  7515  000E6E  0E00               	movlw	0
  7516  000E70  6E0B               	movwf	(?___flmul+3)^0,c
  7517  000E72  EFF5  F008         	goto	l1010
  7518  000E76                     l3109:
  7519  000E76  FFFF               	dw	65535	; assembler added errata NOP
  7520  000E78  500E               	movf	(___flmul@a+2)^0,w,c
  7521  000E7A  0208               	mulwf	___flmul@b^0,c
  7522  000E7C  CFF3 F01F          	movff	prodl,___flmul@temp
  7523  000E80  CFF4 F020          	movff	prodh,___flmul@temp+1
  7524  000E84  501F               	movf	___flmul@temp^0,w,c
  7525  000E86  6E15               	movwf	___flmul@grs^0,c
  7526  000E88  6A16               	clrf	(___flmul@grs+1)^0,c
  7527  000E8A  6A17               	clrf	(___flmul@grs+2)^0,c
  7528  000E8C  6A18               	clrf	(___flmul@grs+3)^0,c
  7529  000E8E  5020               	movf	(___flmul@temp+1)^0,w,c
  7530  000E90  6E1B               	movwf	___flmul@prod^0,c
  7531  000E92  6A1C               	clrf	(___flmul@prod+1)^0,c
  7532  000E94  6A1D               	clrf	(___flmul@prod+2)^0,c
  7533  000E96  6A1E               	clrf	(___flmul@prod+3)^0,c
  7534  000E98  500D               	movf	(___flmul@a+1)^0,w,c
  7535  000E9A  0209               	mulwf	(___flmul@b+1)^0,c
  7536  000E9C  CFF3 F01F          	movff	prodl,___flmul@temp
  7537  000EA0  CFF4 F020          	movff	prodh,___flmul@temp+1
  7538  000EA4  501F               	movf	___flmul@temp^0,w,c
  7539  000EA6  2615               	addwf	___flmul@grs^0,f,c
  7540  000EA8  0E00               	movlw	0
  7541  000EAA  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7542  000EAC  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7543  000EAE  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7544  000EB0  5020               	movf	(___flmul@temp+1)^0,w,c
  7545  000EB2  261B               	addwf	___flmul@prod^0,f,c
  7546  000EB4  0E00               	movlw	0
  7547  000EB6  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7548  000EB8  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7549  000EBA  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7550  000EBC  500C               	movf	___flmul@a^0,w,c
  7551  000EBE  020A               	mulwf	(___flmul@b+2)^0,c
  7552  000EC0  CFF3 F01F          	movff	prodl,___flmul@temp
  7553  000EC4  CFF4 F020          	movff	prodh,___flmul@temp+1
  7554  000EC8  501F               	movf	___flmul@temp^0,w,c
  7555  000ECA  2615               	addwf	___flmul@grs^0,f,c
  7556  000ECC  0E00               	movlw	0
  7557  000ECE  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7558  000ED0  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7559  000ED2  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7560  000ED4  5020               	movf	(___flmul@temp+1)^0,w,c
  7561  000ED6  261B               	addwf	___flmul@prod^0,f,c
  7562  000ED8  0E00               	movlw	0
  7563  000EDA  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7564  000EDC  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7565  000EDE  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7566  000EE0  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  7567  000EE4  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  7568  000EE8  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  7569  000EEC  6A15               	clrf	___flmul@grs^0,c
  7570  000EEE  500C               	movf	___flmul@a^0,w,c
  7571  000EF0  0209               	mulwf	(___flmul@b+1)^0,c
  7572  000EF2  CFF3 F01F          	movff	prodl,___flmul@temp
  7573  000EF6  CFF4 F020          	movff	prodh,___flmul@temp+1
  7574  000EFA  501F               	movf	___flmul@temp^0,w,c
  7575  000EFC  2615               	addwf	___flmul@grs^0,f,c
  7576  000EFE  5020               	movf	(___flmul@temp+1)^0,w,c
  7577  000F00  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7578  000F02  0E00               	movlw	0
  7579  000F04  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7580  000F06  0E00               	movlw	0
  7581  000F08  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7582  000F0A  500D               	movf	(___flmul@a+1)^0,w,c
  7583  000F0C  0208               	mulwf	___flmul@b^0,c
  7584  000F0E  CFF3 F01F          	movff	prodl,___flmul@temp
  7585  000F12  CFF4 F020          	movff	prodh,___flmul@temp+1
  7586  000F16  501F               	movf	___flmul@temp^0,w,c
  7587  000F18  2615               	addwf	___flmul@grs^0,f,c
  7588  000F1A  5020               	movf	(___flmul@temp+1)^0,w,c
  7589  000F1C  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7590  000F1E  0E00               	movlw	0
  7591  000F20  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7592  000F22  0E00               	movlw	0
  7593  000F24  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7594  000F26  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  7595  000F2A  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  7596  000F2E  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  7597  000F32  6A15               	clrf	___flmul@grs^0,c
  7598  000F34  500C               	movf	___flmul@a^0,w,c
  7599  000F36  0208               	mulwf	___flmul@b^0,c
  7600  000F38  CFF3 F01F          	movff	prodl,___flmul@temp
  7601  000F3C  CFF4 F020          	movff	prodh,___flmul@temp+1
  7602  000F40  501F               	movf	___flmul@temp^0,w,c
  7603  000F42  2615               	addwf	___flmul@grs^0,f,c
  7604  000F44  5020               	movf	(___flmul@temp+1)^0,w,c
  7605  000F46  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7606  000F48  0E00               	movlw	0
  7607  000F4A  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7608  000F4C  0E00               	movlw	0
  7609  000F4E  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7610  000F50  500E               	movf	(___flmul@a+2)^0,w,c
  7611  000F52  0209               	mulwf	(___flmul@b+1)^0,c
  7612  000F54  CFF3 F01F          	movff	prodl,___flmul@temp
  7613  000F58  CFF4 F020          	movff	prodh,___flmul@temp+1
  7614  000F5C  501F               	movf	___flmul@temp^0,w,c
  7615  000F5E  261B               	addwf	___flmul@prod^0,f,c
  7616  000F60  5020               	movf	(___flmul@temp+1)^0,w,c
  7617  000F62  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7618  000F64  0E00               	movlw	0
  7619  000F66  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7620  000F68  0E00               	movlw	0
  7621  000F6A  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7622  000F6C  500D               	movf	(___flmul@a+1)^0,w,c
  7623  000F6E  020A               	mulwf	(___flmul@b+2)^0,c
  7624  000F70  CFF3 F01F          	movff	prodl,___flmul@temp
  7625  000F74  CFF4 F020          	movff	prodh,___flmul@temp+1
  7626  000F78  501F               	movf	___flmul@temp^0,w,c
  7627  000F7A  261B               	addwf	___flmul@prod^0,f,c
  7628  000F7C  5020               	movf	(___flmul@temp+1)^0,w,c
  7629  000F7E  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7630  000F80  0E00               	movlw	0
  7631  000F82  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7632  000F84  0E00               	movlw	0
  7633  000F86  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7634  000F88  500E               	movf	(___flmul@a+2)^0,w,c
  7635  000F8A  020A               	mulwf	(___flmul@b+2)^0,c
  7636  000F8C  CFF3 F01F          	movff	prodl,___flmul@temp
  7637  000F90  CFF4 F020          	movff	prodh,___flmul@temp+1
  7638  000F94  501F               	movf	___flmul@temp^0,w,c
  7639  000F96  6E10               	movwf	??___flmul^0,c
  7640  000F98  5020               	movf	(___flmul@temp+1)^0,w,c
  7641  000F9A  6E11               	movwf	(??___flmul+1)^0,c
  7642  000F9C  6A12               	clrf	(??___flmul+2)^0,c
  7643  000F9E  6A13               	clrf	(??___flmul+3)^0,c
  7644  000FA0  C012  F013         	movff	??___flmul+2,??___flmul+3
  7645  000FA4  C011  F012         	movff	??___flmul+1,??___flmul+2
  7646  000FA8  C010  F011         	movff	??___flmul,??___flmul+1
  7647  000FAC  6A10               	clrf	??___flmul^0,c
  7648  000FAE  5010               	movf	??___flmul^0,w,c
  7649  000FB0  261B               	addwf	___flmul@prod^0,f,c
  7650  000FB2  5011               	movf	(??___flmul+1)^0,w,c
  7651  000FB4  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7652  000FB6  5012               	movf	(??___flmul+2)^0,w,c
  7653  000FB8  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7654  000FBA  5013               	movf	(??___flmul+3)^0,w,c
  7655  000FBC  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7656  000FBE  C015  F010         	movff	___flmul@grs,??___flmul
  7657  000FC2  C016  F011         	movff	___flmul@grs+1,??___flmul+1
  7658  000FC6  C017  F012         	movff	___flmul@grs+2,??___flmul+2
  7659  000FCA  C018  F013         	movff	___flmul@grs+3,??___flmul+3
  7660  000FCE  0E19               	movlw	25
  7661  000FD0  EFF0  F007         	goto	u3180
  7662  000FD4                     u3185:
  7663  000FD4  FFFF               	dw	65535	; assembler added errata NOP
  7664  000FD6  90D8               	bcf	status,0,c
  7665  000FD8  3213               	rrcf	(??___flmul+3)^0,f,c
  7666  000FDA  3212               	rrcf	(??___flmul+2)^0,f,c
  7667  000FDC  3211               	rrcf	(??___flmul+1)^0,f,c
  7668  000FDE  3210               	rrcf	??___flmul^0,f,c
  7669  000FE0                     u3180:
  7670  000FE0  FFFF               	dw	65535	; assembler added errata NOP
  7671  000FE2  2EE8               	decfsz	wreg,f,c
  7672  000FE4  EFEA  F007         	goto	u3185
  7673  000FE8  5010               	movf	??___flmul^0,w,c
  7674  000FEA  261B               	addwf	___flmul@prod^0,f,c
  7675  000FEC  5011               	movf	(??___flmul+1)^0,w,c
  7676  000FEE  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7677  000FF0  5012               	movf	(??___flmul+2)^0,w,c
  7678  000FF2  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7679  000FF4  5013               	movf	(??___flmul+3)^0,w,c
  7680  000FF6  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7681  000FF8  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  7682  000FFC  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  7683  001000  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  7684  001004  6A15               	clrf	___flmul@grs^0,c
  7685  001006  5019               	movf	___flmul@aexp^0,w,c
  7686  001008  C01A  F010         	movff	___flmul@bexp,??___flmul
  7687  00100C  6A11               	clrf	(??___flmul+1)^0,c
  7688  00100E  2610               	addwf	??___flmul^0,f,c
  7689  001010  0E00               	movlw	0
  7690  001012  2211               	addwfc	(??___flmul+1)^0,f,c
  7691  001014  0E82               	movlw	130
  7692  001016  2410               	addwf	??___flmul^0,w,c
  7693  001018  6E1F               	movwf	___flmul@temp^0,c
  7694  00101A  0EFF               	movlw	255
  7695  00101C  2011               	addwfc	(??___flmul+1)^0,w,c
  7696  00101E  6E20               	movwf	(___flmul@temp+1)^0,c
  7697  001020  EF2B  F008         	goto	l3157
  7698  001024                     l3151:
  7699  001024  FFFF               	dw	65535	; assembler added errata NOP
  7700  001026  90D8               	bcf	status,0,c
  7701  001028  361B               	rlcf	___flmul@prod^0,f,c
  7702  00102A  361C               	rlcf	(___flmul@prod+1)^0,f,c
  7703  00102C  361D               	rlcf	(___flmul@prod+2)^0,f,c
  7704  00102E  361E               	rlcf	(___flmul@prod+3)^0,f,c
  7705  001030  AE18               	btfss	(___flmul@grs+3)^0,7,c
  7706  001032  EF1D  F008         	goto	u3191
  7707  001036  EF20  F008         	goto	u3190
  7708  00103A                     u3191:
  7709  00103A  FFFF               	dw	65535	; assembler added errata NOP
  7710  00103C  EF22  F008         	goto	l1013
  7711  001040                     u3190:
  7712  001040  FFFF               	dw	65535	; assembler added errata NOP
  7713  001042  801B               	bsf	___flmul@prod^0,0,c
  7714  001044                     l1013:
  7715  001044  FFFF               	dw	65535	; assembler added errata NOP
  7716  001046  90D8               	bcf	status,0,c
  7717  001048  3615               	rlcf	___flmul@grs^0,f,c
  7718  00104A  3616               	rlcf	(___flmul@grs+1)^0,f,c
  7719  00104C  3617               	rlcf	(___flmul@grs+2)^0,f,c
  7720  00104E  3618               	rlcf	(___flmul@grs+3)^0,f,c
  7721  001050  061F               	decf	___flmul@temp^0,f,c
  7722  001052  A0D8               	btfss	status,0,c
  7723  001054  0620               	decf	(___flmul@temp+1)^0,f,c
  7724  001056                     l3157:
  7725  001056  FFFF               	dw	65535	; assembler added errata NOP
  7726  001058  AE1D               	btfss	(___flmul@prod+2)^0,7,c
  7727  00105A  EF31  F008         	goto	u3201
  7728  00105E  EF34  F008         	goto	u3200
  7729  001062                     u3201:
  7730  001062  FFFF               	dw	65535	; assembler added errata NOP
  7731  001064  EF12  F008         	goto	l3151
  7732  001068                     u3200:
  7733  001068  FFFF               	dw	65535	; assembler added errata NOP
  7734  00106A  0E00               	movlw	0
  7735  00106C  6E19               	movwf	___flmul@aexp^0,c
  7736  00106E  AE18               	btfss	(___flmul@grs+3)^0,7,c
  7737  001070  EF3C  F008         	goto	u3211
  7738  001074  EF3F  F008         	goto	u3210
  7739  001078                     u3211:
  7740  001078  FFFF               	dw	65535	; assembler added errata NOP
  7741  00107A  EF6A  F008         	goto	l1015
  7742  00107E                     u3210:
  7743  00107E  FFFF               	dw	65535	; assembler added errata NOP
  7744  001080  0EFF               	movlw	255
  7745  001082  1415               	andwf	___flmul@grs^0,w,c
  7746  001084  6E10               	movwf	??___flmul^0,c
  7747  001086  0EFF               	movlw	255
  7748  001088  1416               	andwf	(___flmul@grs+1)^0,w,c
  7749  00108A  6E11               	movwf	(??___flmul+1)^0,c
  7750  00108C  0EFF               	movlw	255
  7751  00108E  1417               	andwf	(___flmul@grs+2)^0,w,c
  7752  001090  6E12               	movwf	(??___flmul+2)^0,c
  7753  001092  0E7F               	movlw	127
  7754  001094  1418               	andwf	(___flmul@grs+3)^0,w,c
  7755  001096  6E13               	movwf	(??___flmul+3)^0,c
  7756  001098  5010               	movf	??___flmul^0,w,c
  7757  00109A  1011               	iorwf	(??___flmul+1)^0,w,c
  7758  00109C  1012               	iorwf	(??___flmul+2)^0,w,c
  7759  00109E  1013               	iorwf	(??___flmul+3)^0,w,c
  7760  0010A0  B4D8               	btfsc	status,2,c
  7761  0010A2  EF55  F008         	goto	u3221
  7762  0010A6  EF58  F008         	goto	u3220
  7763  0010AA                     u3221:
  7764  0010AA  FFFF               	dw	65535	; assembler added errata NOP
  7765  0010AC  EF5E  F008         	goto	l1016
  7766  0010B0                     u3220:
  7767  0010B0  FFFF               	dw	65535	; assembler added errata NOP
  7768  0010B2                     l3165:
  7769  0010B2  FFFF               	dw	65535	; assembler added errata NOP
  7770  0010B4  0E01               	movlw	1
  7771  0010B6  6E19               	movwf	___flmul@aexp^0,c
  7772  0010B8  EF6A  F008         	goto	l1015
  7773  0010BC                     l1016:
  7774  0010BC  FFFF               	dw	65535	; assembler added errata NOP
  7775  0010BE  A01B               	btfss	___flmul@prod^0,0,c
  7776  0010C0  EF64  F008         	goto	u3231
  7777  0010C4  EF67  F008         	goto	u3230
  7778  0010C8                     u3231:
  7779  0010C8  FFFF               	dw	65535	; assembler added errata NOP
  7780  0010CA  EF6A  F008         	goto	l1015
  7781  0010CE                     u3230:
  7782  0010CE  FFFF               	dw	65535	; assembler added errata NOP
  7783  0010D0  EF59  F008         	goto	l3165
  7784  0010D4                     l1015:
  7785  0010D4  FFFF               	dw	65535	; assembler added errata NOP
  7786  0010D6  5019               	movf	___flmul@aexp^0,w,c
  7787  0010D8  B4D8               	btfsc	status,2,c
  7788  0010DA  EF71  F008         	goto	u3241
  7789  0010DE  EF74  F008         	goto	u3240
  7790  0010E2                     u3241:
  7791  0010E2  FFFF               	dw	65535	; assembler added errata NOP
  7792  0010E4  EF9B  F008         	goto	l3177
  7793  0010E8                     u3240:
  7794  0010E8  FFFF               	dw	65535	; assembler added errata NOP
  7795  0010EA  0E01               	movlw	1
  7796  0010EC  261B               	addwf	___flmul@prod^0,f,c
  7797  0010EE  0E00               	movlw	0
  7798  0010F0  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7799  0010F2  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7800  0010F4  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7801  0010F6  A01E               	btfss	(___flmul@prod+3)^0,0,c
  7802  0010F8  EF80  F008         	goto	u3251
  7803  0010FC  EF83  F008         	goto	u3250
  7804  001100                     u3251:
  7805  001100  FFFF               	dw	65535	; assembler added errata NOP
  7806  001102  EF9B  F008         	goto	l3177
  7807  001106                     u3250:
  7808  001106  FFFF               	dw	65535	; assembler added errata NOP
  7809  001108  C01B  F010         	movff	___flmul@prod,??___flmul
  7810  00110C  C01C  F011         	movff	___flmul@prod+1,??___flmul+1
  7811  001110  C01D  F012         	movff	___flmul@prod+2,??___flmul+2
  7812  001114  C01E  F013         	movff	___flmul@prod+3,??___flmul+3
  7813  001118  3413               	rlcf	(??___flmul+3)^0,w,c
  7814  00111A  3213               	rrcf	(??___flmul+3)^0,f,c
  7815  00111C  3212               	rrcf	(??___flmul+2)^0,f,c
  7816  00111E  3211               	rrcf	(??___flmul+1)^0,f,c
  7817  001120  3210               	rrcf	??___flmul^0,f,c
  7818  001122  C010  F01B         	movff	??___flmul,___flmul@prod
  7819  001126  C011  F01C         	movff	??___flmul+1,___flmul@prod+1
  7820  00112A  C012  F01D         	movff	??___flmul+2,___flmul@prod+2
  7821  00112E  C013  F01E         	movff	??___flmul+3,___flmul@prod+3
  7822  001132  4A1F               	infsnz	___flmul@temp^0,f,c
  7823  001134  2A20               	incf	(___flmul@temp+1)^0,f,c
  7824  001136                     l3177:
  7825  001136  FFFF               	dw	65535	; assembler added errata NOP
  7826  001138  BE20               	btfsc	(___flmul@temp+1)^0,7,c
  7827  00113A  EFA7  F008         	goto	u3261
  7828  00113E  5020               	movf	(___flmul@temp+1)^0,w,c
  7829  001140  E109               	bnz	u3260
  7830  001142  281F               	incf	___flmul@temp^0,w,c
  7831  001144  A0D8               	btfss	status,0,c
  7832  001146  EFA7  F008         	goto	u3261
  7833  00114A  EFAA  F008         	goto	u3260
  7834  00114E                     u3261:
  7835  00114E  FFFF               	dw	65535	; assembler added errata NOP
  7836  001150  EFB5  F008         	goto	l3181
  7837  001154                     u3260:
  7838  001154  FFFF               	dw	65535	; assembler added errata NOP
  7839  001156  0E00               	movlw	0
  7840  001158  6E1B               	movwf	___flmul@prod^0,c
  7841  00115A  0E00               	movlw	0
  7842  00115C  6E1C               	movwf	(___flmul@prod+1)^0,c
  7843  00115E  0E80               	movlw	128
  7844  001160  6E1D               	movwf	(___flmul@prod+2)^0,c
  7845  001162  0E7F               	movlw	127
  7846  001164  6E1E               	movwf	(___flmul@prod+3)^0,c
  7847  001166  EFEA  F008         	goto	l3193
  7848  00116A                     l3181:
  7849  00116A  FFFF               	dw	65535	; assembler added errata NOP
  7850  00116C  BE20               	btfsc	(___flmul@temp+1)^0,7,c
  7851  00116E  EFC4  F008         	goto	u3270
  7852  001172  5020               	movf	(___flmul@temp+1)^0,w,c
  7853  001174  E106               	bnz	u3271
  7854  001176  041F               	decf	___flmul@temp^0,w,c
  7855  001178  B0D8               	btfsc	status,0,c
  7856  00117A  EFC1  F008         	goto	u3271
  7857  00117E  EFC4  F008         	goto	u3270
  7858  001182                     u3271:
  7859  001182  FFFF               	dw	65535	; assembler added errata NOP
  7860  001184  EFD1  F008         	goto	l1023
  7861  001188                     u3270:
  7862  001188  FFFF               	dw	65535	; assembler added errata NOP
  7863  00118A  0E00               	movlw	0
  7864  00118C  6E1B               	movwf	___flmul@prod^0,c
  7865  00118E  0E00               	movlw	0
  7866  001190  6E1C               	movwf	(___flmul@prod+1)^0,c
  7867  001192  0E00               	movlw	0
  7868  001194  6E1D               	movwf	(___flmul@prod+2)^0,c
  7869  001196  0E00               	movlw	0
  7870  001198  6E1E               	movwf	(___flmul@prod+3)^0,c
  7871  00119A  0E00               	movlw	0
  7872  00119C  6E14               	movwf	___flmul@sign^0,c
  7873  00119E  EFEA  F008         	goto	l3193
  7874  0011A2                     l1023:
  7875  0011A2  FFFF               	dw	65535	; assembler added errata NOP
  7876  0011A4  C01F  F01A         	movff	___flmul@temp,___flmul@bexp
  7877  0011A8  0EFF               	movlw	255
  7878  0011AA  161B               	andwf	___flmul@prod^0,f,c
  7879  0011AC  0EFF               	movlw	255
  7880  0011AE  161C               	andwf	(___flmul@prod+1)^0,f,c
  7881  0011B0  0E7F               	movlw	127
  7882  0011B2  161D               	andwf	(___flmul@prod+2)^0,f,c
  7883  0011B4  0E00               	movlw	0
  7884  0011B6  161E               	andwf	(___flmul@prod+3)^0,f,c
  7885  0011B8  A01A               	btfss	___flmul@bexp^0,0,c
  7886  0011BA  EFE1  F008         	goto	u3281
  7887  0011BE  EFE4  F008         	goto	u3280
  7888  0011C2                     u3281:
  7889  0011C2  FFFF               	dw	65535	; assembler added errata NOP
  7890  0011C4  EFE6  F008         	goto	l3191
  7891  0011C8                     u3280:
  7892  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  7893  0011CA  8E1D               	bsf	(___flmul@prod+2)^0,7,c
  7894  0011CC                     l3191:
  7895  0011CC  FFFF               	dw	65535	; assembler added errata NOP
  7896  0011CE  90D8               	bcf	status,0,c
  7897  0011D0  301A               	rrcf	___flmul@bexp^0,w,c
  7898  0011D2  6E1E               	movwf	(___flmul@prod+3)^0,c
  7899  0011D4                     l3193:
  7900  0011D4  FFFF               	dw	65535	; assembler added errata NOP
  7901  0011D6  5014               	movf	___flmul@sign^0,w,c
  7902  0011D8  121E               	iorwf	(___flmul@prod+3)^0,f,c
  7903  0011DA  C01B  F008         	movff	___flmul@prod,?___flmul
  7904  0011DE  C01C  F009         	movff	___flmul@prod+1,?___flmul+1
  7905  0011E2  C01D  F00A         	movff	___flmul@prod+2,?___flmul+2
  7906  0011E6  C01E  F00B         	movff	___flmul@prod+3,?___flmul+3
  7907  0011EA                     l1010:
  7908  0011EA  FFFF               	dw	65535	; assembler added errata NOP
  7909  0011EC  0012               	return		;funcret
  7910  0011EE  FFFF               	dw	65535	; errata NOP
  7911  0011F0                     __end_of___flmul:
  7912                           	callstack 0
  7913                           
  7914 ;; *************** function ___flge *****************
  7915 ;; Defined at:
  7916 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  ff1             4   46[COMRAM] unsigned char 
  7919 ;;  ff2             4   50[COMRAM] unsigned char 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;		None               void
  7924 ;; Registers used:
  7925 ;;		wreg, status,2, status,0
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7931 ;;      Params:         8       0       0       0       0       0       0
  7932 ;;      Locals:         0       0       0       0       0       0       0
  7933 ;;      Temps:          4       0       0       0       0       0       0
  7934 ;;      Totals:        12       0       0       0       0       0       0
  7935 ;;Total ram usage:       12 bytes
  7936 ;; Hardware stack levels used: 1
  7937 ;; Hardware stack levels required when called: 1
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		_pick_and_place
  7942 ;;		_roundf
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text30
  7947  00224C                     __ptext30:
  7948                           	callstack 0
  7949  00224C                     ___flge:
  7950                           	callstack 0
  7951  00224C  FFFF               	dw	65535	; assembler added errata NOP
  7952  00224E  0E00               	movlw	0
  7953  002250  142F               	andwf	___flge@ff1^0,w,c
  7954  002252  6E37               	movwf	??___flge^0,c
  7955  002254  0E00               	movlw	0
  7956  002256  1430               	andwf	(___flge@ff1+1)^0,w,c
  7957  002258  6E38               	movwf	(??___flge+1)^0,c
  7958  00225A  0E80               	movlw	128
  7959  00225C  1431               	andwf	(___flge@ff1+2)^0,w,c
  7960  00225E  6E39               	movwf	(??___flge+2)^0,c
  7961  002260  0E7F               	movlw	127
  7962  002262  1432               	andwf	(___flge@ff1+3)^0,w,c
  7963  002264  6E3A               	movwf	(??___flge+3)^0,c
  7964  002266  5037               	movf	??___flge^0,w,c
  7965  002268  1038               	iorwf	(??___flge+1)^0,w,c
  7966  00226A  1039               	iorwf	(??___flge+2)^0,w,c
  7967  00226C  103A               	iorwf	(??___flge+3)^0,w,c
  7968  00226E  A4D8               	btfss	status,2,c
  7969  002270  EF3C  F011         	goto	u4821
  7970  002274  EF3F  F011         	goto	u4820
  7971  002278                     u4821:
  7972  002278  FFFF               	dw	65535	; assembler added errata NOP
  7973  00227A  EF48  F011         	goto	l4159
  7974  00227E                     u4820:
  7975  00227E  FFFF               	dw	65535	; assembler added errata NOP
  7976  002280  0E00               	movlw	0
  7977  002282  6E2F               	movwf	___flge@ff1^0,c
  7978  002284  0E00               	movlw	0
  7979  002286  6E30               	movwf	(___flge@ff1+1)^0,c
  7980  002288  0E00               	movlw	0
  7981  00228A  6E31               	movwf	(___flge@ff1+2)^0,c
  7982  00228C  0E00               	movlw	0
  7983  00228E  6E32               	movwf	(___flge@ff1+3)^0,c
  7984  002290                     l4159:
  7985  002290  FFFF               	dw	65535	; assembler added errata NOP
  7986  002292  0E00               	movlw	0
  7987  002294  1433               	andwf	___flge@ff2^0,w,c
  7988  002296  6E37               	movwf	??___flge^0,c
  7989  002298  0E00               	movlw	0
  7990  00229A  1434               	andwf	(___flge@ff2+1)^0,w,c
  7991  00229C  6E38               	movwf	(??___flge+1)^0,c
  7992  00229E  0E80               	movlw	128
  7993  0022A0  1435               	andwf	(___flge@ff2+2)^0,w,c
  7994  0022A2  6E39               	movwf	(??___flge+2)^0,c
  7995  0022A4  0E7F               	movlw	127
  7996  0022A6  1436               	andwf	(___flge@ff2+3)^0,w,c
  7997  0022A8  6E3A               	movwf	(??___flge+3)^0,c
  7998  0022AA  5037               	movf	??___flge^0,w,c
  7999  0022AC  1038               	iorwf	(??___flge+1)^0,w,c
  8000  0022AE  1039               	iorwf	(??___flge+2)^0,w,c
  8001  0022B0  103A               	iorwf	(??___flge+3)^0,w,c
  8002  0022B2  A4D8               	btfss	status,2,c
  8003  0022B4  EF5E  F011         	goto	u4831
  8004  0022B8  EF61  F011         	goto	u4830
  8005  0022BC                     u4831:
  8006  0022BC  FFFF               	dw	65535	; assembler added errata NOP
  8007  0022BE  EF6A  F011         	goto	l4163
  8008  0022C2                     u4830:
  8009  0022C2  FFFF               	dw	65535	; assembler added errata NOP
  8010  0022C4  0E00               	movlw	0
  8011  0022C6  6E33               	movwf	___flge@ff2^0,c
  8012  0022C8  0E00               	movlw	0
  8013  0022CA  6E34               	movwf	(___flge@ff2+1)^0,c
  8014  0022CC  0E00               	movlw	0
  8015  0022CE  6E35               	movwf	(___flge@ff2+2)^0,c
  8016  0022D0  0E00               	movlw	0
  8017  0022D2  6E36               	movwf	(___flge@ff2+3)^0,c
  8018  0022D4                     l4163:
  8019  0022D4  FFFF               	dw	65535	; assembler added errata NOP
  8020  0022D6  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8021  0022D8  EF70  F011         	goto	u4841
  8022  0022DC  EF73  F011         	goto	u4840
  8023  0022E0                     u4841:
  8024  0022E0  FFFF               	dw	65535	; assembler added errata NOP
  8025  0022E2  EF7D  F011         	goto	l4167
  8026  0022E6                     u4840:
  8027  0022E6  FFFF               	dw	65535	; assembler added errata NOP
  8028  0022E8  6C2F               	negf	___flge@ff1^0,c
  8029  0022EA  1E30               	comf	(___flge@ff1+1)^0,f,c
  8030  0022EC  B0D8               	btfsc	status,0,c
  8031  0022EE  2A30               	incf	(___flge@ff1+1)^0,f,c
  8032  0022F0  1E31               	comf	(___flge@ff1+2)^0,f,c
  8033  0022F2  B0D8               	btfsc	status,0,c
  8034  0022F4  2A31               	incf	(___flge@ff1+2)^0,f,c
  8035  0022F6  0E80               	movlw	128
  8036  0022F8  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8037  0022FA                     l4167:
  8038  0022FA  FFFF               	dw	65535	; assembler added errata NOP
  8039  0022FC  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8040  0022FE  EF83  F011         	goto	u4851
  8041  002302  EF86  F011         	goto	u4850
  8042  002306                     u4851:
  8043  002306  FFFF               	dw	65535	; assembler added errata NOP
  8044  002308  EF90  F011         	goto	l657
  8045  00230C                     u4850:
  8046  00230C  FFFF               	dw	65535	; assembler added errata NOP
  8047  00230E  6C33               	negf	___flge@ff2^0,c
  8048  002310  1E34               	comf	(___flge@ff2+1)^0,f,c
  8049  002312  B0D8               	btfsc	status,0,c
  8050  002314  2A34               	incf	(___flge@ff2+1)^0,f,c
  8051  002316  1E35               	comf	(___flge@ff2+2)^0,f,c
  8052  002318  B0D8               	btfsc	status,0,c
  8053  00231A  2A35               	incf	(___flge@ff2+2)^0,f,c
  8054  00231C  0E80               	movlw	128
  8055  00231E  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8056  002320                     l657:
  8057  002320  FFFF               	dw	65535	; assembler added errata NOP
  8058  002322  0E00               	movlw	0
  8059  002324  1A2F               	xorwf	___flge@ff1^0,f,c
  8060  002326  0E00               	movlw	0
  8061  002328  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8062  00232A  0E00               	movlw	0
  8063  00232C  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8064  00232E  0E80               	movlw	128
  8065  002330  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8066  002332  0E00               	movlw	0
  8067  002334  1A33               	xorwf	___flge@ff2^0,f,c
  8068  002336  0E00               	movlw	0
  8069  002338  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8070  00233A  0E00               	movlw	0
  8071  00233C  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8072  00233E  0E80               	movlw	128
  8073  002340  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8074  002342  5033               	movf	___flge@ff2^0,w,c
  8075  002344  5C2F               	subwf	___flge@ff1^0,w,c
  8076  002346  5034               	movf	(___flge@ff2+1)^0,w,c
  8077  002348  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8078  00234A  5035               	movf	(___flge@ff2+2)^0,w,c
  8079  00234C  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8080  00234E  5036               	movf	(___flge@ff2+3)^0,w,c
  8081  002350  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8082  002352  B0D8               	btfsc	status,0,c
  8083  002354  EFAE  F011         	goto	u4861
  8084  002358  EFB1  F011         	goto	u4860
  8085  00235C                     u4861:
  8086  00235C  FFFF               	dw	65535	; assembler added errata NOP
  8087  00235E  EFB5  F011         	goto	l4173
  8088  002362                     u4860:
  8089  002362  FFFF               	dw	65535	; assembler added errata NOP
  8090  002364  90D8               	bcf	status,0,c
  8091  002366  EFB7  F011         	goto	l662
  8092  00236A                     l4173:
  8093  00236A  FFFF               	dw	65535	; assembler added errata NOP
  8094  00236C  80D8               	bsf	status,0,c
  8095  00236E                     l662:
  8096  00236E  FFFF               	dw	65535	; assembler added errata NOP
  8097  002370  0012               	return		;funcret
  8098  002372  FFFF               	dw	65535	; errata NOP
  8099  002374                     __end_of___flge:
  8100                           	callstack 0
  8101                           
  8102 ;; *************** function ___fltol *****************
  8103 ;; Defined at:
  8104 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  f1              4   84[COMRAM] unsigned char 
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  exp1            1    5[BANK0 ] unsigned char 
  8109 ;;  sign1           1    4[BANK0 ] unsigned char 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  4   84[COMRAM] long 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8119 ;;      Params:         4       0       0       0       0       0       0
  8120 ;;      Locals:         0       2       0       0       0       0       0
  8121 ;;      Temps:          0       4       0       0       0       0       0
  8122 ;;      Totals:         4       6       0       0       0       0       0
  8123 ;;Total ram usage:       10 bytes
  8124 ;; Hardware stack levels used: 1
  8125 ;; Hardware stack levels required when called: 1
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_init_USART
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text31
  8134  002114                     __ptext31:
  8135                           	callstack 0
  8136  002114                     ___fltol:
  8137                           	callstack 0
  8138  002114  FFFF               	dw	65535	; assembler added errata NOP
  8139  002116  3457               	rlcf	(___fltol@f1+2)^0,w,c
  8140  002118  3458               	rlcf	(___fltol@f1+3)^0,w,c
  8141  00211A  0100               	movlb	0	; () banked
  8142  00211C  6FCD               	movwf	___fltol@exp1& (0+255),b
  8143  00211E  51CD               	movf	___fltol@exp1& (0+255),w,b
  8144  002120  A4D8               	btfss	status,2,c
  8145  002122  EF95  F010         	goto	u5531
  8146  002126  EF98  F010         	goto	u5530
  8147  00212A                     u5531:
  8148  00212A  FFFF               	dw	65535	; assembler added errata NOP
  8149  00212C  EFA4  F010         	goto	l4487
  8150  002130                     u5530:
  8151  002130  FFFF               	dw	65535	; assembler added errata NOP
  8152  002132                     l4483:
  8153  002132  FFFF               	dw	65535	; assembler added errata NOP
  8154                           
  8155                           ; BSR set to: 0
  8156  002134  0E00               	movlw	0
  8157  002136  6E55               	movwf	?___fltol^0,c
  8158  002138  0E00               	movlw	0
  8159  00213A  6E56               	movwf	(?___fltol+1)^0,c
  8160  00213C  0E00               	movlw	0
  8161  00213E  6E57               	movwf	(?___fltol+2)^0,c
  8162  002140  0E00               	movlw	0
  8163  002142  6E58               	movwf	(?___fltol+3)^0,c
  8164  002144  EF23  F011         	goto	l689
  8165  002148                     l4487:
  8166  002148  FFFF               	dw	65535	; assembler added errata NOP
  8167                           
  8168                           ; BSR set to: 0
  8169  00214A  C055  F0C8         	movff	___fltol@f1,??___fltol
  8170  00214E  C056  F0C9         	movff	___fltol@f1+1,??___fltol+1
  8171  002152  C057  F0CA         	movff	___fltol@f1+2,??___fltol+2
  8172  002156  C058  F0CB         	movff	___fltol@f1+3,??___fltol+3
  8173  00215A  0E20               	movlw	32
  8174  00215C  EFB6  F010         	goto	u5540
  8175  002160                     u5545:
  8176  002160  FFFF               	dw	65535	; assembler added errata NOP
  8177  002162  90D8               	bcf	status,0,c
  8178  002164  33CB               	rrcf	(??___fltol+3)& (0+255),f,b
  8179  002166  33CA               	rrcf	(??___fltol+2)& (0+255),f,b
  8180  002168  33C9               	rrcf	(??___fltol+1)& (0+255),f,b
  8181  00216A  33C8               	rrcf	??___fltol& (0+255),f,b
  8182  00216C                     u5540:
  8183  00216C  FFFF               	dw	65535	; assembler added errata NOP
  8184  00216E  2EE8               	decfsz	wreg,f,c
  8185  002170  EFB0  F010         	goto	u5545
  8186  002174  51C8               	movf	??___fltol& (0+255),w,b
  8187  002176  6FCC               	movwf	___fltol@sign1& (0+255),b
  8188  002178                     
  8189                           ; BSR set to: 0
  8190  002178  8E57               	bsf	(___fltol@f1+2)^0,7,c
  8191  00217A                     
  8192                           ; BSR set to: 0
  8193  00217A  0EFF               	movlw	255
  8194  00217C  1655               	andwf	___fltol@f1^0,f,c
  8195  00217E  0EFF               	movlw	255
  8196  002180  1656               	andwf	(___fltol@f1+1)^0,f,c
  8197  002182  0EFF               	movlw	255
  8198  002184  1657               	andwf	(___fltol@f1+2)^0,f,c
  8199  002186  0E00               	movlw	0
  8200  002188  1658               	andwf	(___fltol@f1+3)^0,f,c
  8201  00218A                     
  8202                           ; BSR set to: 0
  8203  00218A  0E96               	movlw	150
  8204  00218C  5FCD               	subwf	___fltol@exp1& (0+255),f,b
  8205  00218E                     
  8206                           ; BSR set to: 0
  8207  00218E  BFCD               	btfsc	___fltol@exp1& (0+255),7,b
  8208  002190  EFCF  F010         	goto	u5550
  8209  002194  EFCC  F010         	goto	u5551
  8210  002198                     u5551:
  8211  002198  FFFF               	dw	65535	; assembler added errata NOP
  8212  00219A  EFE9  F010         	goto	l4507
  8213  00219E                     u5550:
  8214  00219E  FFFF               	dw	65535	; assembler added errata NOP
  8215  0021A0                     
  8216                           ; BSR set to: 0
  8217  0021A0  51CD               	movf	___fltol@exp1& (0+255),w,b
  8218  0021A2  0A80               	xorlw	128
  8219  0021A4  0F97               	addlw	151
  8220  0021A6  B0D8               	btfsc	status,0,c
  8221  0021A8  EFD8  F010         	goto	u5561
  8222  0021AC  EFDB  F010         	goto	u5560
  8223  0021B0                     u5561:
  8224  0021B0  FFFF               	dw	65535	; assembler added errata NOP
  8225  0021B2  EFDE  F010         	goto	l4503
  8226  0021B6                     u5560:
  8227  0021B6  FFFF               	dw	65535	; assembler added errata NOP
  8228  0021B8  EF99  F010         	goto	l4483
  8229  0021BC                     l4503:
  8230  0021BC  FFFF               	dw	65535	; assembler added errata NOP
  8231                           
  8232                           ; BSR set to: 0
  8233  0021BE  90D8               	bcf	status,0,c
  8234  0021C0  3258               	rrcf	(___fltol@f1+3)^0,f,c
  8235  0021C2  3257               	rrcf	(___fltol@f1+2)^0,f,c
  8236  0021C4  3256               	rrcf	(___fltol@f1+1)^0,f,c
  8237  0021C6  3255               	rrcf	___fltol@f1^0,f,c
  8238  0021C8                     
  8239                           ; BSR set to: 0
  8240  0021C8  3FCD               	incfsz	___fltol@exp1& (0+255),f,b
  8241  0021CA  EFDE  F010         	goto	l4503
  8242  0021CE  EF07  F011         	goto	l4517
  8243  0021D2                     l4507:
  8244  0021D2  FFFF               	dw	65535	; assembler added errata NOP
  8245                           
  8246                           ; BSR set to: 0
  8247  0021D4  0E1F               	movlw	31
  8248  0021D6  65CD               	cpfsgt	___fltol@exp1& (0+255),b
  8249  0021D8  EFF0  F010         	goto	u5571
  8250  0021DC  EFF3  F010         	goto	u5570
  8251  0021E0                     u5571:
  8252  0021E0  FFFF               	dw	65535	; assembler added errata NOP
  8253  0021E2  EFFD  F010         	goto	l4515
  8254  0021E6                     u5570:
  8255  0021E6  FFFF               	dw	65535	; assembler added errata NOP
  8256  0021E8  EF99  F010         	goto	l4483
  8257  0021EC                     l4513:
  8258  0021EC  FFFF               	dw	65535	; assembler added errata NOP
  8259                           
  8260                           ; BSR set to: 0
  8261  0021EE  90D8               	bcf	status,0,c
  8262  0021F0  3655               	rlcf	___fltol@f1^0,f,c
  8263  0021F2  3656               	rlcf	(___fltol@f1+1)^0,f,c
  8264  0021F4  3657               	rlcf	(___fltol@f1+2)^0,f,c
  8265  0021F6  3658               	rlcf	(___fltol@f1+3)^0,f,c
  8266  0021F8  07CD               	decf	___fltol@exp1& (0+255),f,b
  8267  0021FA                     l4515:
  8268  0021FA  FFFF               	dw	65535	; assembler added errata NOP
  8269                           
  8270                           ; BSR set to: 0
  8271  0021FC  51CD               	movf	___fltol@exp1& (0+255),w,b
  8272  0021FE  A4D8               	btfss	status,2,c
  8273  002200  EF04  F011         	goto	u5581
  8274  002204  EF07  F011         	goto	u5580
  8275  002208                     u5581:
  8276  002208  FFFF               	dw	65535	; assembler added errata NOP
  8277  00220A  EFF6  F010         	goto	l4513
  8278  00220E                     u5580:
  8279  00220E                     l4517:
  8280  00220E  FFFF               	dw	65535	; assembler added errata NOP
  8281                           
  8282                           ; BSR set to: 0
  8283  002210  51CC               	movf	___fltol@sign1& (0+255),w,b
  8284  002212  B4D8               	btfsc	status,2,c
  8285  002214  EF0E  F011         	goto	u5591
  8286  002218  EF11  F011         	goto	u5590
  8287  00221C                     u5591:
  8288  00221C  FFFF               	dw	65535	; assembler added errata NOP
  8289  00221E  EF1A  F011         	goto	l4521
  8290  002222                     u5590:
  8291  002222  FFFF               	dw	65535	; assembler added errata NOP
  8292  002224                     
  8293                           ; BSR set to: 0
  8294  002224  1E58               	comf	(___fltol@f1+3)^0,f,c
  8295  002226  1E57               	comf	(___fltol@f1+2)^0,f,c
  8296  002228  1E56               	comf	(___fltol@f1+1)^0,f,c
  8297  00222A  6C55               	negf	___fltol@f1^0,c
  8298  00222C  0E00               	movlw	0
  8299  00222E  2256               	addwfc	(___fltol@f1+1)^0,f,c
  8300  002230  2257               	addwfc	(___fltol@f1+2)^0,f,c
  8301  002232  2258               	addwfc	(___fltol@f1+3)^0,f,c
  8302  002234                     l4521:
  8303  002234  FFFF               	dw	65535	; assembler added errata NOP
  8304                           
  8305                           ; BSR set to: 0
  8306  002236  C055  F055         	movff	___fltol@f1,?___fltol
  8307  00223A  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  8308  00223E  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  8309  002242  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  8310  002246                     l689:
  8311  002246  FFFF               	dw	65535	; assembler added errata NOP
  8312                           
  8313                           ; BSR set to: 0
  8314  002248  0012               	return		;funcret
  8315  00224A  FFFF               	dw	65535	; errata NOP
  8316  00224C                     __end_of___fltol:
  8317                           	callstack 0
  8318                           
  8319 ;; *************** function _init_PORTS *****************
  8320 ;; Defined at:
  8321 ;;		line 9 in file "init_PIC.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;		None
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      void 
  8328 ;; Registers used:
  8329 ;;		wreg, status,2
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8335 ;;      Params:         0       0       0       0       0       0       0
  8336 ;;      Locals:         0       0       0       0       0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0
  8338 ;;      Totals:         0       0       0       0       0       0       0
  8339 ;;Total ram usage:        0 bytes
  8340 ;; Hardware stack levels used: 1
  8341 ;; Hardware stack levels required when called: 1
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_main
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text32
  8350  002D38                     __ptext32:
  8351                           	callstack 0
  8352  002D38                     _init_PORTS:
  8353                           	callstack 0
  8354  002D38  FFFF               	dw	65535	; assembler added errata NOP
  8355  002D3A                     
  8356                           ;init_PIC.c: 11:     TRISB = 0x00;
  8357  002D3A  0E00               	movlw	0
  8358  002D3C  6E93               	movwf	147,c	;volatile
  8359                           
  8360                           ;init_PIC.c: 12:     TRISD = 0x00;
  8361  002D3E  0E00               	movlw	0
  8362  002D40  6E95               	movwf	149,c	;volatile
  8363                           
  8364                           ;init_PIC.c: 13:     PORTB = 0x0F;
  8365  002D42  0E0F               	movlw	15
  8366  002D44  6E81               	movwf	129,c	;volatile
  8367                           
  8368                           ;init_PIC.c: 14:     PORTD = 0x0F;
  8369  002D46  0E0F               	movlw	15
  8370  002D48  6E83               	movwf	131,c	;volatile
  8371                           
  8372                           ;init_PIC.c: 17:     LATC = 0;
  8373  002D4A  0E00               	movlw	0
  8374  002D4C  6E8B               	movwf	139,c	;volatile
  8375                           
  8376                           ;init_PIC.c: 18:     PORTC = 0;
  8377  002D4E  0E00               	movlw	0
  8378  002D50  6E82               	movwf	130,c	;volatile
  8379  002D52                     
  8380                           ;init_PIC.c: 19:     TRISCbits.RC7 = 1;
  8381  002D52  8E94               	bsf	148,7,c	;volatile
  8382  002D54                     
  8383                           ;init_PIC.c: 20:     TRISCbits.RC6 = 0;
  8384  002D54  9C94               	bcf	148,6,c	;volatile
  8385  002D56  0012               	return		;funcret
  8386  002D58  FFFF               	dw	65535	; errata NOP
  8387  002D5A                     __end_of_init_PORTS:
  8388                           	callstack 0
  8389                           
  8390 ;; *************** function _Rx_char_USART *****************
  8391 ;; Defined at:
  8392 ;;		line 618 in file "main.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;		None
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  i               2    5[COMRAM] int 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      void 
  8399 ;; Registers used:
  8400 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8406 ;;      Params:         0       0       0       0       0       0       0
  8407 ;;      Locals:         2       0       0       0       0       0       0
  8408 ;;      Temps:          5       0       0       0       0       0       0
  8409 ;;      Totals:         7       0       0       0       0       0       0
  8410 ;;Total ram usage:        7 bytes
  8411 ;; Hardware stack levels used: 1
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		Interrupt level 2
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	intcode
  8420  000008                     __pintcode:
  8421                           	callstack 0
  8422  000008                     _Rx_char_USART:
  8423                           	callstack 0
  8424  000008  FFFF               	dw	65535	; assembler added errata NOP
  8425                           
  8426                           ;incstack = 0
  8427  00000A  8278               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8428  00000C  CFD9 F004          	movff	fsr2l,??_Rx_char_USART+3
  8429  000010  CFDA F005          	movff	fsr2h,??_Rx_char_USART+4
  8430  000014                     
  8431                           ;main.c: 620:     int i=0;
  8432  000014  0E00               	movlw	0
  8433  000016  6E07               	movwf	(Rx_char_USART@i+1)^0,c
  8434  000018  0E00               	movlw	0
  8435  00001A  6E06               	movwf	Rx_char_USART@i^0,c
  8436  00001C                     i2l385:
  8437  00001C  FFFF               	dw	65535	; assembler added errata NOP
  8438  00001E  AA9E               	btfss	3998,5,c	;volatile
  8439  000020  EF14  F000         	goto	i2u421_41
  8440  000024  EF17  F000         	goto	i2u421_40
  8441  000028                     i2u421_41:
  8442  000028  FFFF               	dw	65535	; assembler added errata NOP
  8443  00002A  EF0E  F000         	goto	i2l385
  8444  00002E                     i2u421_40:
  8445  00002E  FFFF               	dw	65535	; assembler added errata NOP
  8446  000030                     
  8447                           ;main.c: 624:         input_str[i]=RCREG;
  8448  000030  0EBE               	movlw	low _input_str
  8449  000032  2406               	addwf	Rx_char_USART@i^0,w,c
  8450  000034  6ED9               	movwf	fsr2l,c
  8451  000036  0E00               	movlw	high _input_str
  8452  000038  2007               	addwfc	(Rx_char_USART@i+1)^0,w,c
  8453  00003A  6EDA               	movwf	fsr2h,c
  8454  00003C  CFAE FFDF          	movff	4014,indf2	;volatile
  8455                           
  8456                           ;main.c: 625:     }while(input_str[i++] != '\n');
  8457  000040  5006               	movf	Rx_char_USART@i^0,w,c
  8458  000042  6E01               	movwf	??_Rx_char_USART^0,c
  8459  000044  5007               	movf	(Rx_char_USART@i+1)^0,w,c
  8460  000046  6E02               	movwf	(??_Rx_char_USART+1)^0,c
  8461  000048  4A06               	infsnz	Rx_char_USART@i^0,f,c
  8462  00004A  2A07               	incf	(Rx_char_USART@i+1)^0,f,c
  8463  00004C  0EBE               	movlw	low _input_str
  8464  00004E  2401               	addwf	??_Rx_char_USART^0,w,c
  8465  000050  6ED9               	movwf	fsr2l,c
  8466  000052  0E00               	movlw	high _input_str
  8467  000054  2002               	addwfc	(??_Rx_char_USART+1)^0,w,c
  8468  000056  6EDA               	movwf	fsr2h,c
  8469  000058  0E0A               	movlw	10
  8470  00005A  18DE               	xorwf	postinc2,w,c
  8471  00005C  A4D8               	btfss	status,2,c
  8472  00005E  EF33  F000         	goto	i2u422_41
  8473  000062  EF36  F000         	goto	i2u422_40
  8474  000066                     i2u422_41:
  8475  000066  FFFF               	dw	65535	; assembler added errata NOP
  8476  000068  EF0E  F000         	goto	i2l385
  8477  00006C                     i2u422_40:
  8478  00006C  FFFF               	dw	65535	; assembler added errata NOP
  8479  00006E                     
  8480                           ;main.c: 627:     PIR1bits.RCIF = 0;
  8481  00006E  9A9E               	bcf	158,5,c	;volatile
  8482  000070                     
  8483                           ;main.c: 628:     New_char_RX = 1;
  8484  000070  0E01               	movlw	1
  8485  000072  6E72               	movwf	_New_char_RX^0,c
  8486  000074                     
  8487                           ;main.c: 629:     State = input_str[0];
  8488  000074  C0BE  F073         	movff	_input_str,_State	;volatile
  8489  000078  C005  FFDA         	movff	??_Rx_char_USART+4,fsr2h
  8490  00007C  C004  FFD9         	movff	??_Rx_char_USART+3,fsr2l
  8491  000080  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8492  000082  0011               	retfie		f
  8493  000084  FFFF               	dw	65535	; errata NOP
  8494  000086                     __end_of_Rx_char_USART:
  8495                           	callstack 0
  8496  000086  FFFF               	dw	65535	; assembler added errata NOP
  8497                           
  8498                           	psect	rparam
  8499  0000                     
  8500                           	psect	temp
  8501  000078                     btemp:
  8502                           	callstack 0
  8503  000078                     	ds	1
  8504  0000                     int$flags	set	btemp
  8505  0000                     wtemp8	set	btemp+1
  8506  0000                     ttemp5	set	btemp+1
  8507  0000                     ttemp6	set	btemp+4
  8508  0000                     ttemp7	set	btemp+8
  8509                           
  8510                           	psect	idloc
  8511                           
  8512                           ;Config register IDLOC0 @ 0x200000
  8513                           ;	unspecified, using default values
  8514  200000                     	org	2097152
  8515  200000  FF                 	db	255
  8516                           
  8517                           ;Config register IDLOC1 @ 0x200001
  8518                           ;	unspecified, using default values
  8519  200001                     	org	2097153
  8520  200001  FF                 	db	255
  8521                           
  8522                           ;Config register IDLOC2 @ 0x200002
  8523                           ;	unspecified, using default values
  8524  200002                     	org	2097154
  8525  200002  FF                 	db	255
  8526                           
  8527                           ;Config register IDLOC3 @ 0x200003
  8528                           ;	unspecified, using default values
  8529  200003                     	org	2097155
  8530  200003  FF                 	db	255
  8531                           
  8532                           ;Config register IDLOC4 @ 0x200004
  8533                           ;	unspecified, using default values
  8534  200004                     	org	2097156
  8535  200004  FF                 	db	255
  8536                           
  8537                           ;Config register IDLOC5 @ 0x200005
  8538                           ;	unspecified, using default values
  8539  200005                     	org	2097157
  8540  200005  FF                 	db	255
  8541                           
  8542                           ;Config register IDLOC6 @ 0x200006
  8543                           ;	unspecified, using default values
  8544  200006                     	org	2097158
  8545  200006  FF                 	db	255
  8546                           
  8547                           ;Config register IDLOC7 @ 0x200007
  8548                           ;	unspecified, using default values
  8549  200007                     	org	2097159
  8550  200007  FF                 	db	255
  8551                           
  8552                           	psect	config
  8553                           
  8554                           ; Padding undefined space
  8555  300000                     	org	3145728
  8556  300000  FF                 	db	255
  8557                           
  8558                           ;Config register CONFIG1H @ 0x300001
  8559                           ;	Oscillator Selection bits
  8560                           ;	OSC = XT, XT oscillator
  8561                           ;	Oscillator System Clock Switch Enable bit
  8562                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  8563  300001                     	org	3145729
  8564  300001  21                 	db	33
  8565                           
  8566                           ;Config register CONFIG2L @ 0x300002
  8567                           ;	Power-up Timer Enable bit
  8568                           ;	PWRT = OFF, PWRT disabled
  8569                           ;	Brown-out Reset Enable bit
  8570                           ;	BOR = OFF, Brown-out Reset disabled
  8571                           ;	Brown-out Reset Voltage bits
  8572                           ;	BORV = 20, VBOR set to 2.0V
  8573  300002                     	org	3145730
  8574  300002  0D                 	db	13
  8575                           
  8576                           ;Config register CONFIG2H @ 0x300003
  8577                           ;	Watchdog Timer Enable bit
  8578                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8579                           ;	Watchdog Timer Postscale Select bits
  8580                           ;	WDTPS = 128, 1:128
  8581  300003                     	org	3145731
  8582  300003  0E                 	db	14
  8583                           
  8584                           ; Padding undefined space
  8585  300004                     	org	3145732
  8586  300004  FF                 	db	255
  8587                           
  8588                           ;Config register CONFIG3H @ 0x300005
  8589                           ;	CCP2 Mux bit
  8590                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  8591  300005                     	org	3145733
  8592  300005  00                 	db	0
  8593                           
  8594                           ;Config register CONFIG4L @ 0x300006
  8595                           ;	Stack Full/Underflow Reset Enable bit
  8596                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  8597                           ;	Low Voltage ICSP Enable bit
  8598                           ;	LVP = OFF, Low Voltage ICSP disabled
  8599                           ;	Background Debugger Enable bit
  8600                           ;	DEBUG = 0x1, unprogrammed default
  8601  300006                     	org	3145734
  8602  300006  80                 	db	128
  8603                           
  8604                           ; Padding undefined space
  8605  300007                     	org	3145735
  8606  300007  FF                 	db	255
  8607                           
  8608                           ;Config register CONFIG5L @ 0x300008
  8609                           ;	Code Protection bit
  8610                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  8611                           ;	Code Protection bit
  8612                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  8613                           ;	Code Protection bit
  8614                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  8615                           ;	Code Protection bit
  8616                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  8617  300008                     	org	3145736
  8618  300008  0F                 	db	15
  8619                           
  8620                           ;Config register CONFIG5H @ 0x300009
  8621                           ;	Boot Block Code Protection bit
  8622                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  8623                           ;	Data EEPROM Code Protection bit
  8624                           ;	CPD = OFF, Data EEPROM not code protected
  8625  300009                     	org	3145737
  8626  300009  C0                 	db	192
  8627                           
  8628                           ;Config register CONFIG6L @ 0x30000A
  8629                           ;	Write Protection bit
  8630                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  8631                           ;	Write Protection bit
  8632                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  8633                           ;	Write Protection bit
  8634                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  8635                           ;	Write Protection bit
  8636                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  8637  30000A                     	org	3145738
  8638  30000A  0F                 	db	15
  8639                           
  8640                           ;Config register CONFIG6H @ 0x30000B
  8641                           ;	Configuration Register Write Protection bit
  8642                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  8643                           ;	Boot Block Write Protection bit
  8644                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  8645                           ;	Data EEPROM Write Protection bit
  8646                           ;	WRTD = OFF, Data EEPROM not write protected
  8647  30000B                     	org	3145739
  8648  30000B  E0                 	db	224
  8649                           
  8650                           ;Config register CONFIG7L @ 0x30000C
  8651                           ;	Table Read Protection bit
  8652                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  8653                           ;	Table Read Protection bit
  8654                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  8655                           ;	Table Read Protection bit
  8656                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  8657                           ;	Table Read Protection bit
  8658                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  8659  30000C                     	org	3145740
  8660  30000C  0F                 	db	15
  8661                           
  8662                           ;Config register CONFIG7H @ 0x30000D
  8663                           ;	Boot Block Table Read Protection bit
  8664                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  8665  30000D                     	org	3145741
  8666  30000D  40                 	db	64
  8667                           tosu	equ	0xFFF
  8668                           tosh	equ	0xFFE
  8669                           tosl	equ	0xFFD
  8670                           stkptr	equ	0xFFC
  8671                           pclatu	equ	0xFFB
  8672                           pclath	equ	0xFFA
  8673                           pcl	equ	0xFF9
  8674                           tblptru	equ	0xFF8
  8675                           tblptrh	equ	0xFF7
  8676                           tblptrl	equ	0xFF6
  8677                           tablat	equ	0xFF5
  8678                           prodh	equ	0xFF4
  8679                           prodl	equ	0xFF3
  8680                           indf0	equ	0xFEF
  8681                           postinc0	equ	0xFEE
  8682                           postdec0	equ	0xFED
  8683                           preinc0	equ	0xFEC
  8684                           plusw0	equ	0xFEB
  8685                           fsr0h	equ	0xFEA
  8686                           fsr0l	equ	0xFE9
  8687                           wreg	equ	0xFE8
  8688                           indf1	equ	0xFE7
  8689                           postinc1	equ	0xFE6
  8690                           postdec1	equ	0xFE5
  8691                           preinc1	equ	0xFE4
  8692                           plusw1	equ	0xFE3
  8693                           fsr1h	equ	0xFE2
  8694                           fsr1l	equ	0xFE1
  8695                           bsr	equ	0xFE0
  8696                           indf2	equ	0xFDF
  8697                           postinc2	equ	0xFDE
  8698                           postdec2	equ	0xFDD
  8699                           preinc2	equ	0xFDC
  8700                           plusw2	equ	0xFDB
  8701                           fsr2h	equ	0xFDA
  8702                           fsr2l	equ	0xFD9
  8703                           status	equ	0xFD8

Data Sizes:
    Strings     599
    Constant    20
    Data        25
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     88     119
    BANK0           128      6      78
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(COMRAM[4]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strncat@s	PTR const unsigned char  size(2) Largest target is 0

    strncat@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strncat@a	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> input_str(BANK0[10]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 82
		 -> STR_16(CODE[70]), STR_15(CODE[19]), STR_14(CODE[63]), STR_13(CODE[30]), 
		 -> STR_12(CODE[29]), STR_11(CODE[29]), STR_10(CODE[29]), STR_9(CODE[28]), 
		 -> STR_8(CODE[28]), STR_7(CODE[44]), STR_6(CODE[26]), STR_5(CODE[40]), 
		 -> STR_4(CODE[27]), STR_3(CODE[32]), sequence(COMRAM[4]), STR_2(CODE[23]), 
		 -> STR_1(CODE[82]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(COMRAM[4]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(COMRAM[4]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_start_up_menu
    _start_up_menu->_pick_and_place
    _remove_component->_strrchr
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _pick_and_place->___flge
    ___fldiv->___xxtofl
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _change_sequence->_print_string
    _add_component->_atoi
    _strncat->_strlen
    _print_string->_serial_tx_char
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    None.

Critical Paths under _main in BANK0

    _init_USART->___fltol

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   40165
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                        5     5      0   28929
                                             85 COMRAM     3     3      0
                                              0 BANK0      2     2      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
 ---------------------------------------------------------------------------------
 (2) _remove_component                                     5     5      0    4637
                                             25 COMRAM     5     5      0
                            _memmove
                       _print_string
                     _serial_tx_char
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4    1197
                                             21 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     524
                                             11 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     791
                                             11 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _pick_and_place                                      27    27      0   15427
                                             58 COMRAM    27    27      0
                            _Twister
                             _X_axis
                             _Y_axis
                            ___fldiv
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              7 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2183
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Y_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _X_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Twister                                              1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _ms_delay                                             6     4      2    3556
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                      5     5      0    2057
                                             14 COMRAM     5     5      0
                       _print_string
 ---------------------------------------------------------------------------------
 (2) _add_component                                        3     3      0    4782
                                             29 COMRAM     3     3      0
                               _atoi
                       _print_string
                            _strncat
 ---------------------------------------------------------------------------------
 (3) _strncat                                              8     2      6     912
                                             11 COMRAM     6     0      6
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     400
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2    1961
                                              8 COMRAM     6     4      2
                     _serial_tx_char
 ---------------------------------------------------------------------------------
 (3) _serial_tx_char                                       1     1      0      31
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    1875
                                             14 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     259
                                              7 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     191
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11233
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10806
                                             58 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             23 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              7 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              7 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              7 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                             46 COMRAM    12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             84 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Rx_char_USART                                        7     7      0      45
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _print_string
         _serial_tx_char
       _strncat
         _strlen
     _change_sequence
       _print_string
     _pick_and_place
       _Twister
         _ms_delay
       _X_axis
         _ms_delay
       _Y_axis
         _ms_delay
       ___fldiv
       ___flge
       ___xxtofl
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _print_string
       _serial_tx_char
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen

 _Rx_char_USART (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      6      4E       5       60.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     58      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      15        0.0%
DATA                 0      0      C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 17 19:25:25 2021

                                                     ___fldiv@aexp 002E  
                                                     ___fldiv@bexp 002D  
                                                     ___fldiv@sign 0026  
                                                               l23 2D56  
                                                               l26 2DB4  
                                                               l51 2D76  
                                                               l45 2CD0  
                                                               l48 2D62  
                                              ___wmul@multiplicand 000A  
                                           __size_of_start_up_menu 0160  
                                                              l205 28C8  
                                                              l301 01BE  
                                                              l313 02B0  
                                                              l322 035A  
                                                              l340 0594  
                                                              l253 2480  
                                                              l239 1DF2  
                                                              l360 07A0  
                                                              l273 266A  
                                                              l266 275C  
                                                              l259 2956  
                                                              l196 210E  
                                                              l349 063E  
                                                              l295 2B80  
                                                              l287 282E  
                                                              l359 0786  
                                                              l392 2D34  
                                                              l662 236E  
                                                              l920 09EC  
                                                              l657 2320  
                                                              l921 09D6  
                                                              l666 2C90  
                                                              l922 098C  
                                                              l689 2246  
                                                              l937 0B30  
                                                              l929 0D46  
                                                              l946 0C34  
                                                              l962 2BCA  
                                                              l947 0C1C  
                                                              l974 161C  
                                                              l976 1434  
                                                              l985 148A  
                                                              l987 151A  
                                                              l979 13EE  
                                                              l988 1502  
                                                ??_init_interrupts 0008  
                                                              wreg 000FE8  
                                                     ___flmul@aexp 0019  
                                                     ___flmul@bexp 001A  
                                                     ___flmul@sign 0014  
                                                     ___flmul@temp 001F  
                                                     ___flmul@prod 001B  
                                                     ___fltol@exp1 00CD  
                                                             l1010 11EA  
                                                             l1013 1044  
                                                             l1006 0E38  
                                                             l1023 11A2  
                                                             l1015 10D4  
                                                             l1016 10BC  
                                                             l1105 2B24  
                                                             l1050 1BFA  
                                                             l1061 1B80  
                                                             l1126 1A02  
                                                             l1054 1B14  
                                                             l1118 2578  
                                                             l1047 1A68  
                                                             l1162 2A5C  
                                                             l1091 1FA4  
                                                             l1139 2C0C  
                                                             l1156 2D0A  
                                                             l3101 0E26  
                                                             l1149 29DC  
                                                             l1094 1FAE  
                                                             l3111 0E84  
                                                             l3103 0E4E  
                                                             l3121 0ED4  
                                                             l3113 0E8E  
                                                             l3105 0E60  
                                                             l3201 2B96  
                                                             l1097 2C4E  
                                                             l4001 27CE  
                                                             l3131 0F16  
                                                             l3123 0EE0  
                                                             l3115 0EA4  
                                                             l4011 2808  
                                                             l4003 27E4  
                                                             l3141 0F78  
                                                             l3133 0F26  
                                                             l3125 0EEE  
                                                             l3117 0EB0  
                                                             l3109 0E76  
                                                             l2501 07C4  
                                                             l4013 2818  
                                                             l4005 27E8  
                                                             l4101 144A  
                                                             l4021 1210  
                                                             l3151 1024  
                                                             l3143 0F94  
                                                             l3135 0F40  
                                                             l3127 0EFA  
                                                             l3119 0EC8  
                                                             l3071 0D5A  
                                                             l3231 2C7E  
                                                             l2511 0804  
                                                             l2503 07C6  
                                                             l4007 27F4  
                                                             l4015 2828  
                                                             l4103 1464  
                                                             l4111 149C  
                                                             l4031 1250  
                                                             l4023 1212  
                                                             l3161 106E  
                                                             l3153 1030  
                                                             l3145 0FBE  
                                                             l3137 0F50  
                                                             l3129 0F0A  
                                                             l3081 0DA8  
                                                             l3073 0D6C  
                                                             l2521 083E  
                                                             l2505 07DC  
                                                             l2513 080C  
                                                             l4009 2804  
                                                             l4113 14B0  
                                                             l4105 146A  
                                                             l4041 128A  
                                                             l4025 1228  
                                                             l4033 1258  
                                                             l4017 11F2  
                                                             l4201 1B4C  
                                                             l3171 10F6  
                                                             l3163 1080  
                                                             l3155 1042  
                                                             l3147 0FF8  
                                                             l3139 0F6C  
                                                             l3091 0DE2  
                                                             l3083 0DB0  
                                                             l3075 0D6E  
                                                             l3227 2C54  
                                                             l2611 0A6A  
                                                             l2603 0A28  
                                                             l2531 0884  
                                                             l2523 0846  
                                                             l2515 081E  
                                                             l2507 07F0  
                                                             l4123 1530  
                                                             l4131 157C  
                                                             l4115 14B4  
                                                             l4107 1476  
                                                             l4051 12CA  
                                                             l4043 128C  
                                                             l4035 126A  
                                                             l4027 123C  
                                                             l4019 11FE  
                                                             l4211 1B9C  
                                                             l4203 1B5A  
                                                             l2285 2D3A  
                                                             l3181 116A  
                                                             l3173 1108  
                                                             l3165 10B2  
                                                             l3157 1056  
                                                             l3149 1006  
                                                             l3093 0DE4  
                                                             l3085 0DC2  
                                                             l3077 0D84  
                                                             l3069 0D4E  
                                                             l3229 2C6E  
                                                             l2613 0A70  
                                                             l2605 0A3A  
                                                             l2621 0A98  
                                                             l2541 08CA  
                                                             l2533 0894  
                                                             l2525 0858  
                                                             l2517 0826  
                                                             l2509 0800  
                                                             l2293 2DAE  
                                                             l4141 15F4  
                                                             l4133 159C  
                                                             l4125 153C  
                                                             l4117 14C6  
                                                             l4109 1488  
                                                             l4061 1318  
                                                             l4045 12A2  
                                                             l4053 12D2  
                                                             l4037 1272  
                                                             l4029 124C  
                                                             l4213 1BC0  
                                                             l4205 1B6E  
                                                             l4301 037E  
                                                             l2287 2D52  
                                                             l3191 11CC  
                                                             l3183 118A  
                                                             l3175 1132  
                                                             l3159 106A  
                                                             l3095 0DFA  
                                                             l3087 0DCA  
                                                             l3079 0D98  
                                                             l2623 0AC4  
                                                             l2631 0B1E  
                                                             l2615 0A84  
                                                             l2607 0A4C  
                                                             l2551 08EE  
                                                             l2543 08DC  
                                                             l2535 0898  
                                                             l2527 085A  
                                                             l2519 083C  
                                                             l4231 16EE  
                                                             l4223 1624  
                                                             l4143 1606  
                                                             l4135 15B2  
                                                             l4127 154E  
                                                             l4119 14F8  
                                                             l4071 1348  
                                                             l4063 131E  
                                                             l4055 12E4  
                                                             l4047 12B6  
                                                             l4039 1278  
                                                             l4215 1BD4  
                                                             l4207 1B94  
                                                             l4311 03D6  
                                                             l4303 0390  
                                                             l2289 2D54  
                                                             l4161 22C4  
                                                             l3185 11A8  
                                                             l3193 11D4  
                                                             l3169 10EA  
                                                             l3177 1136  
                                                             l3097 0E0E  
                                                             l3089 0DD0  
                                                             l2641 0B80  
                                                             l2633 0B4C  
                                                             l2625 0AF8  
                                                             l2617 0A86  
                                                             l2609 0A5E  
                                                             l2561 0902  
                                                             l2553 08F2  
                                                             l2545 08E0  
                                                             l2529 0870  
                                                             l2537 08A0  
                                                             l4241 1840  
                                                             l4233 1712  
                                                             l4225 1644  
                                                             l4401 1CBE  
                                                             l4145 160C  
                                                             l4137 15D2  
                                                             l4129 1578  
                                                             l4081 1398  
                                                             l4057 1300  
                                                             l4049 12C6  
                                                             l4217 1BE6  
                                                             l4209 1B96  
                                                             l4321 0522  
                                                             l4313 03F6  
                                                             l4305 039E  
                                                             l4171 2364  
                                                             l4163 22D4  
                                                             l4155 224E  
                                                             l3195 11DA  
                                                             l3187 11B8  
                                                             l3179 1156  
                                                             l3099 0E1E  
                                                             l2651 0BB6  
                                                             l2643 0B92  
                                                             l2635 0B60  
                                                             l2627 0AFA  
                                                             l2619 0A92  
                                                             l2571 0916  
                                                             l2563 0906  
                                                             l2555 08F6  
                                                             l2547 08E6  
                                                             l2539 08B2  
                                                             l4251 19CC  
                                                             l4243 18AC  
                                                             l4235 1734  
                                                             l4227 1694  
                                                             l4411 1D04  
                                                             l4403 1CCA  
                                                             l4147 1610  
                                                             l4139 15EE  
                                                             l4091 13EC  
                                                             l4083 13A8  
                                                             l4075 135C  
                                                             l4059 1310  
                                                             l4067 1332  
                                                             l4219 1BE8  
                                                             l4331 0586  
                                                             l4323 052E  
                                                             l4315 0404  
                                                             l4307 03A6  
                                                             l4173 236A  
                                                             l4165 22E8  
                                                             l4157 2280  
                                                             l3189 11CA  
                                                             l2661 0BF8  
                                                             l2653 0BCC  
                                                             l2645 0B94  
                                                             l2629 0B0E  
                                                             l2581 0974  
                                                             l2573 091A  
                                                             l2565 090A  
                                                             l2557 08FA  
                                                             l2549 08EA  
                                                             l4253 19F0  
                                                             l4245 18E4  
                                                             l4229 16A8  
                                                             l4421 1D54  
                                                             l4413 1D1A  
                                                             l4405 1CE0  
                                                             l4093 13FA  
                                                             l4085 13B0  
                                                             l4077 1378  
                                                             l4069 1348  
                                                             l4181 1A32  
                                                             l4341 05E4  
                                                             l4333 05B8  
                                                             l4325 0536  
                                                             l4317 0490  
                                                             l4309 03AA  
                                                             l4261 00DA  
                                                             l4503 21BC  
                                                             l4167 22FA  
                                                             l4159 2290  
                                                             l2671 0C68  
                                                             l2663 0C12  
                                                             l2647 0BA8  
                                                             l2639 0B74  
                                                             l2655 0BCE  
                                                             l2591 09C6  
                                                             l2583 0984  
                                                             l2567 090E  
                                                             l2559 08FE  
                                                             l2575 091E  
                                                             l3199 2B86  
                                                             l4247 1950  
                                                             l4239 176C  
                                                             l4431 1DA2  
                                                             l4423 1D68  
                                                             l4415 1D2E  
                                                             l4407 1CF4  
                                                             l4095 141E  
                                                             l4087 13C6  
                                                             l4079 1388  
                                                             l4191 1AB4  
                                                             l4183 1A7A  
                                                             l4351 0682  
                                                             l4343 0610  
                                                             l4335 05CA  
                                                             l4327 053A  
                                                             l4319 04A2  
                                                             l4271 018A  
                                                             l4263 00F2  
                                                             l4521 2234  
                                                             l4513 21EC  
                                                             l4505 21C8  
                                                             l4169 230E  
                                                             l2681 0CF6  
                                                             l2673 0CA6  
                                                             l2649 0BB0  
                                                             l2657 0BE0  
                                                             l2593 09C8  
                                                             l2585 09A0  
                                                             l2577 0924  
                                                             l2569 0912  
                                                             l2497 07A6  
                                                             l4249 1986  
                                                             l4425 1D6C  
                                                             l4417 1D32  
                                                             l4409 1CF8  
                                                             l4097 1420  
                                                             l4089 13DA  
                                                             l4193 1AC2  
                                                             l4185 1A96  
                                                             l4177 1A0C  
                                                             l4361 06E8  
                                                             l4353 068A  
                                                             l4345 0630  
                                                             l4337 05D8  
                                                             l4329 0566  
                                                             l4281 0256  
                                                             l4265 0126  
                                                             l4273 01BE  
                                                             l4257 0090  
                                                             l3801 29E2  
                                                             l4515 21FA  
                                                             l4507 21D2  
                                                             l2691 0D20  
                                                             l2683 0CFA  
                                                             l2667 0C4A  
                                                             l2675 0CA8  
                                                             l2659 0BE6  
                                                             l2595 09D4  
                                                             l2587 09AC  
                                                             l2579 0952  
                                                             l2499 07B2  
                                                             l4531 2CC6  
                                                             l4427 1D78  
                                                             l4419 1D3E  
                                                             l4435 1DAA  
                                                             l4371 2878  
                                                             l4099 1430  
                                                             l4195 1AFA  
                                                             l4179 1A20  
                                                             l4363 0774  
                                                             l4355 068E  
                                                             l4347 0662  
                                                             l4339 05E0  
                                                             l4291 02F4  
                                                             l4283 0282  
                                                             l4275 023E  
                                                             l4267 013E  
                                                             l4259 00A6  
                                                             l3811 2A34  
                                                             l3803 29EA  
                                                             l4451 23A8  
                                                             l4517 220E  
                                                             l2693 0D32  
                                                             l2685 0D0E  
                                                             l2677 0CBE  
                                                             l2669 0C56  
                                                             l2597 0A00  
                                                             l2589 09B2  
                                                             l4533 2CC8  
                                                             l4525 2C96  
                                                             l3821 290E  
                                                             l4437 1DD0  
                                                             l4429 1D8E  
                                                             l4381 1C2C  
                                                             l4373 2896  
                                                             l4365 2836  
                                                             l4197 1AFE  
                                                             l4189 1AAA  
                                                             l4357 06BA  
                                                             l4349 0674  
                                                             l4293 02FC  
                                                             l4285 02A2  
                                                             l4277 024A  
                                                             l4269 0172  
                                                             l3901 2508  
                                                             l3813 2A54  
                                                             l3805 29F4  
                                                             l4461 23E0  
                                                             l4453 23AC  
                                                             l4445 2376  
                                                             l4541 1FB6  
                                                             l4621 2D88  
                                                             l4613 2D7A  
                                                             l4519 2224  
                                                             l2695 0D34  
                                                             l2687 0D14  
                                                             l2679 0CD0  
                                                             l2599 0A14  
                                                             l4535 2CCA  
                                                             l4527 2CC2  
                                                             l3831 1E18  
                                                             l3751 2D5E  
                                                             l3823 2912  
                                                             l4439 1DEE  
                                                             l4391 1C80  
                                                             l4383 1C40  
                                                             l4375 28C4  
                                                             l4367 285A  
                                                             l4199 1B0A  
                                                             l4359 06DA  
                                                             l4295 0300  
                                                             l4287 02D4  
                                                             l4279 0252  
                                                             l3911 255E  
                                                             l3903 2528  
                                                             l3807 2A24  
                                                             l4471 244A  
                                                             l4463 23F8  
                                                             l4455 23C6  
                                                             l4447 238E  
                                                             l4551 2020  
                                                             l4543 1FC2  
                                                             l4623 2D8A  
                                                             l4615 2D7A  
                                                             l4481 2116  
                                                             l2689 0D18  
                                                             l4537 2CCC  
                                                             l4529 2CC4  
                                                             l3841 1E7A  
                                                             l3833 1E36  
                                                             l3825 1DF8  
                                                             l3817 28CE  
                                                             l3753 2BD0  
                                                             l4393 1C84  
                                                             l4385 1C48  
                                                             l4377 1C02  
                                                             l4369 2862  
                                                             l3921 26AC  
                                                             l3913 2674  
                                                             l4297 032C  
                                                             l4289 02E6  
                                                             l3905 2540  
                                                             l4465 2404  
                                                             l4449 23A4  
                                                             l4561 209C  
                                                             l4553 202C  
                                                             l4545 1FD8  
                                                             l4617 2D80  
                                                             l4491 217A  
                                                             l4483 2132  
                                                             l4539 2CCE  
                                                             l3843 1E94  
                                                             l3835 1E6E  
                                                             l3827 1E0C  
                                                             l3819 28DA  
                                                             l3755 2BDC  
                                                             l4395 1C90  
                                                             l4387 1C56  
                                                             l4379 1C26  
                                                             l3771 2B40  
                                                             l3763 2B2A  
                                                             l3923 26BC  
                                                             l3931 26EC  
                                                             l3915 2688  
                                                             l4299 034C  
                                                             l3907 2556  
                                                             l4467 2438  
                                                             l4475 2452  
                                                             l4563 20A6  
                                                             l4555 2040  
                                                             l4571 20C8  
                                                             l4547 1FEC  
                                                             l4619 2D84  
                                                             l4493 218A  
                                                             l3781 2D2C  
                                                             l3861 1F88  
                                                             l3853 1F18  
                                                             l3845 1E9E  
                                                             l3837 1E72  
                                                             l3829 1E12  
                                                             l3757 2BE2  
                                                             l4397 1CA6  
                                                             l4389 1C6C  
                                                             l3773 2B46  
                                                             l3765 2B36  
                                                             l3941 2726  
                                                             l3933 2702  
                                                             l3925 26C0  
                                                             l3917 269C  
                                                             l3909 255A  
                                                             l4477 2460  
                                                             l4469 2444  
                                                             l4733 20DE  
                                                             l4565 20B0  
                                                             l4557 2070  
                                                             l4549 1FF6  
                                                             l4495 218E  
                                                             l4487 2148  
                                                             l3791 2B18  
                                                             l3847 1EA8  
                                                             l3759 2C00  
                                                             l3871 2974  
                                                             l4735 1DC0  
                                                             l4399 1CBA  
                                                             l3775 2B60  
                                                             l3943 2736  
                                                             l3935 2706  
                                                             l3927 26D0  
                                                             l3919 26A0  
                                                             l3951 2596  
                                                             l4479 247A  
                                                             l4567 20BA  
                                                             l4559 2082  
                                                             l4497 21A0  
                                                             l4489 2178  
                                                             l3793 2B1C  
                                                             l3785 2AC8  
                                                             l3857 1F5C  
                                                             l3849 1EDE  
                                                             l4737 1EC6  
                                                             l3881 29B0  
                                                             l3873 297C  
                                                             l3777 2B64  
                                                             l3945 2742  
                                                             l3937 2712  
                                                             l3929 26DC  
                                                             l3961 25CE  
                                                             l3953 25AA  
                                                             l3779 2D10  
                                                             l3787 2ACE  
                                                             l3859 1F72  
                                                             l3883 29CA  
                                                             l3875 2990  
                                                             l3867 295C  
                                                             l3939 2722  
                                                             l3947 2756  
                                                             l3971 2614  
                                                             l3963 25DE  
                                                             l3955 25AE  
                                                             l3797 2C10  
                                                             l3789 2AE6  
                                                             l3885 29D8  
                                                             l3877 2994  
                                                             l3869 295C  
                                                             l3981 2650  
                                                             l3973 2620  
                                                             l3965 25EA  
                                                             l3957 25BA  
                                                             l3949 2582  
                                                             l3893 2486  
                                                             l3879 2998  
                                                             l3991 2792  
                                                             l3975 2630  
                                                             l3959 25CA  
                                                             l3967 25FA  
                                                             l3983 2664  
                                                             l3895 24B0  
                                                             l3993 279E  
                                                             l3985 2766  
                                                             l3977 2634  
                                                             l3969 2610  
                                                             l3897 24D6  
                                                             l3889 2CD6  
                                                             l3995 27AE  
                                                             l3987 277A  
                                                             l3979 2644  
                                                             l3899 24E6  
                                                             l3997 27B2  
                                                             l3989 278E  
                                                             l3999 27C2  
                                                             STR_1 7DA7  
                                                             STR_2 7FD4  
                                                             STR_3 7ED2  
                                                             STR_4 7F9F  
                                                             STR_5 7EAA  
                                                             STR_6 7FBA  
                                                             STR_7 7E7E  
                                                             STR_8 7F67  
                                                             STR_9 7F83  
                                                             u2200 0856  
                                                             u2201 0850  
                                                             u2210 086E  
                                                             u2211 0868  
                                                             u3100 0D6A  
                                                             u2300 09EC  
                                                             u2220 0882  
                                                             u3101 0D64  
                                                             u2301 09E6  
                                                             u2221 087C  
                                                             u3110 0D82  
                                                             u2310 09FE  
                                                             u2230 08C8  
                                                             u3111 0D7C  
                                                             u2311 09F8  
                                                             u2231 08C2  
                                                             _LATC 000F8B  
                                                             u3200 1068  
                                                             u3120 0D96  
                                                             u2400 0B90  
                                                             u2320 0A12  
                                                             u2240 08DA  
                                                             u2160 07C2  
                                                             u3201 1062  
                                                             u3121 0D90  
                                                             u2401 0B8A  
                                                             u2321 0A0C  
                                                             u2241 08D4  
                                                             u2161 07BC  
                                                             u3210 107E  
                                                             u3130 0DE0  
                                                             u2410 0BA6  
                                                             u2330 0A4A  
                                                             u2250 0950  
                                                             u2170 07DA  
                                                             u3211 1078  
                                                             u3131 0DDA  
                                                             u2411 0BA0  
                                                             u2331 0A44  
                                                             u2251 094A  
                                                             u2171 07D4  
                                                             u3220 10B0  
                                                             u3140 0DF8  
                                                             u2500 0CBC  
                                                             u2420 0BCA  
                                                             u2340 0A5C  
                                                             u2260 096C  
                                                             u2180 07EE  
                                                             u3221 10AA  
                                                             u3141 0DF2  
                                                             u2501 0CB6  
                                                             u2421 0BC4  
                                                             u2341 0A56  
                                                             u2261 0964  
                                                             u2181 07E8  
                                                             u3230 10CE  
                                                             u3150 0E0C  
                                                             u2510 0CD0  
                                                             u2430 0BE0  
                                                             u2350 0A82  
                                                             u2270 0970  
                                                             u2190 083A  
                                                             u3231 10C8  
                                                             u3151 0E06  
                                                             u2511 0CCA  
                                                             u2431 0BDA  
                                                             u2351 0A7C  
                                                             u2191 0834  
                                                             u3240 10E8  
                                                             u3160 0E4C  
                                                             u2520 0CF4  
                                                             u2440 0BF6  
                                                             u2360 0AC2  
                                                             u2280 099E  
                                                             u5000 16EC  
                                                             u3241 10E2  
                                                             u3161 0E46  
                                                             u2521 0CEE  
                                                             u2441 0BF0  
                                                             u2361 0ABC  
                                                             u2281 0998  
                                                             u5001 16E6  
                                                             u3250 1106  
                                                             u3170 0E60  
                                                             u2530 0D0C  
                                                             u2450 0C10  
                                                             u2370 0B0C  
                                                             u2290 09C4  
                                                             u5010 1732  
                                                             u3251 1100  
                                                             u3171 0E5A  
                                                             u2531 0D06  
                                                             u2451 0C0A  
                                                             u2371 0B06  
                                                             u2291 09BE  
                                                             u5011 172C  
                                                             u3260 1154  
                                                             u3180 0FE0  
                                                             u3340 2C6C  
                                                             u2540 0D30  
                                                             u2460 0C2E  
                                                             u2380 0B4A  
                                                             u5020 183E  
                                                             u4300 2C48  
                                                             u5100 01E2  
                                                             u3261 114E  
                                                             u3341 2C66  
                                                             u2541 0D2A  
                                                             u2461 0C28  
                                                             u2381 0B44  
                                                             u5021 1838  
                                                             u5101 01DA  
                                                             u3270 1188  
                                                             u3190 1040  
                                                             u2470 0C48  
                                                             u2390 0B5E  
                                                             u5030 18E2  
                                                             u4230 2D74  
                                                             u5110 01E6  
                                                             u4310 2A22  
                                                             u3271 1182  
                                                             u3191 103A  
                                                             u2471 0C42  
                                                             u2391 0B58  
                                                             u5031 18DC  
                                                             u4231 2D6E  
                                                             u4311 2A1C  
                                                             u3280 11C8  
                                                             u2480 0C66  
                                                             u5040 19AA  
                                                             u4400 1F56  
                                                             u4240 2BFE  
                                                             u5200 037C  
                                                             u5120 020C  
                                                             u4320 2A52  
                                                             u3281 11C2  
                                                             u3185 0FD4  
                                                             u2481 0C60  
                                                             u4241 2BF8  
                                                             u5201 0376  
                                                             u5121 0204  
                                                             u4321 2A4C  
                                                             u2490 0CA4  
                                                             u5050 19CA  
                                                             u4410 1F70  
                                                             u4330 290A  
                                                             u4250 2B5E  
                                                             u5210 0390  
                                                             u5130 0210  
                                                             u2491 0C9E  
                                                             u5051 19C4  
                                                             u4411 1F6A  
                                                             u4251 2B58  
                                                             u5211 038A  
                                                             u4420 1F86  
                                                             u4340 2942  
                                                             u4260 2B7E  
                                                             u4500 2686  
                                                             u5300 051E  
                                                             u5220 03D4  
                                                             u5140 0236  
                                                             u5060 00A4  
                                                             u5045 199E  
                                                             u4421 1F80  
                                                             u4261 2B78  
                                                             u4501 2680  
                                                             u5221 03CE  
                                                             u5141 022E  
                                                             u5061 009E  
                                                             u4270 2AE4  
                                                             u4350 2954  
                                                             u4430 29AE  
                                                             u4510 269A  
                                                             u5310 0564  
                                                             u5230 048E  
                                                             u5150 023A  
                                                             u5070 00F0  
                                                             u4271 2ADE  
                                                             u4351 294E  
                                                             u4431 29A8  
                                                             u4511 2694  
                                                             u5311 055E  
                                                             u5231 0488  
                                                             u5071 00EA  
                                                             u4280 2B16  
                                                             u4360 1E34  
                                                             u4440 29CA  
                                                             u5400 2876  
                                                             u4520 2700  
                                                             u4600 1226  
                                                             u5320 05B6  
                                                             u5240 04A2  
                                                             u5160 0280  
                                                             u5080 013C  
                                                             u4281 2B10  
                                                             u4361 1E2E  
                                                             u4337 2900  
                                                             u4441 29C4  
                                                             u5401 2870  
                                                             u4521 26FA  
                                                             u4601 1220  
                                                             u5321 05B0  
                                                             u5241 049C  
                                                             u5161 027A  
                                                             u5081 0136  
                                                             u4290 2C44  
                                                             u4370 1E6C  
                                                             u5410 28C2  
                                                             u4530 2594  
                                                             u4610 123A  
                                                             u5330 05CA  
                                                             u5250 04C6  
                                                             u5170 02D2  
                                                             u5090 0188  
                                                             u4450 24AE  
                                                             u4291 2C3C  
                                                             u4371 1E66  
                                                             u4347 2938  
                                                             u5411 28BC  
                                                             u4531 258E  
                                                             u4611 1234  
                                                             u5331 05C4  
                                                             u5251 04BE  
                                                             u5171 02CC  
                                                             u5091 0182  
                                                             u4451 24A8  
                                                             u4380 1E8E  
                                                             u5420 1C3E  
                                                             u4540 25A8  
                                                             u4700 1448  
                                                             u4620 1288  
                                                             u5340 060E  
                                                             u5260 04CA  
                                                             u5180 02E6  
                                                             u4460 24D4  
                                                             u5500 23DA  
                                                             u4381 1E88  
                                                             u5421 1C38  
                                                             u4541 25A2  
                                                             u4701 1442  
                                                             u4621 1282  
                                                             u5341 0608  
                                                             u5181 02E0  
                                                             u4461 24CE  
                                                             u5501 23D4  
                                                             u4390 1F52  
                                                             u5430 1C6A  
                                                             u4550 260E  
                                                             u4710 1462  
                                                             u4630 12A0  
                                                             u5350 0660  
                                                             u5270 04F0  
                                                             u5190 032A  
                                                             u4470 2522  
                                                             u5510 23F6  
                                                             u4391 1F4A  
                                                             u5431 1C64  
                                                             u4551 2608  
                                                             u4711 145C  
                                                             u4631 129A  
                                                             u5351 065A  
                                                             u5271 04E8  
                                                             u5191 0324  
                                                             u4471 251C  
                                                             u5511 23F0  
                                                             u5440 1CA4  
                                                             u4560 2778  
                                                             u4800 15D0  
                                                             u4720 1486  
                                                             u4640 12B4  
                                                             u5360 0674  
                                                             u5280 04F4  
                                                             u4480 253E  
                                                             u5520 2474  
                                                             u5600 1FD6  
                                                             u5441 1C9E  
                                                             u4561 2772  
                                                             u4801 15CA  
                                                             u4721 1480  
                                                             u4641 12AE  
                                                             u5361 066E  
                                                             u4481 2538  
                                                             u5521 246E  
                                                             u5601 1FD0  
                                                             u5530 2130  
                                                             u5450 1CDE  
                                                             u4570 278C  
                                                             u4810 1604  
                                                             u4730 14AE  
                                                             u4650 12FE  
                                                             u5370 06B8  
                                                             u5290 051A  
                                                             u4490 2578  
                                                             u5610 1FEC  
                                                             u5531 212A  
                                                             u5451 1CD8  
                                                             u4571 2786  
                                                             u4811 15FE  
                                                             u4731 14A8  
                                                             u4651 12F8  
                                                             u5371 06B2  
                                                             u5291 0512  
                                                             u4491 2572  
                                                             u5611 1FE6  
                                                             u5540 216C  
                                                             u4820 227E  
                                                             u5460 1D18  
                                                             u4580 27E2  
                                                             u4740 14C4  
                                                             u4660 1346  
                                                             u4900 1AF4  
                                                             u5380 0772  
                                                             u5620 206E  
                                                             _RCIF 007CF5  
                                                             u4821 2278  
                                                             u5461 1D12  
                                                             u4581 27DC  
                                                             u4741 14BE  
                                                             u4661 1340  
                                                             u4901 1AEE  
                                                             u5381 076C  
                                                             u5621 2068  
                                                             u5550 219E  
                                                             u4830 22C2  
                                                             u5470 1D52  
                                                             u4750 14F6  
                                                             u4670 13C4  
                                                             u4590 120E  
                                                             u4910 1B46  
                                                             u5390 0786  
                                                             u5630 2082  
                                                             u5551 2198  
                                                             u4831 22BC  
                                                             u5471 1D4C  
                                                             u4751 14F0  
                                                             u4671 13BE  
                                                             u4591 1208  
                                                             u4911 1B40  
                                                             u5391 0780  
                                                             u5631 207C  
                                                             u5560 21B6  
                                                             u4840 22E6  
                                                             u5480 1D8C  
                                                             u4760 1514  
                                                             u4680 13EA  
                                                             u4920 1B6C  
                                                             u5640 2096  
                                                             u5561 21B0  
                                                             u5545 2160  
                                                             u4841 22E0  
                                                             u5481 1D86  
                                                             u4761 150E  
                                                             u4681 13E4  
                                                             u4921 1B66  
                                                             u5641 2090  
                                                             u5570 21E6  
                                                             u4850 230C  
                                                             u4770 152E  
                                                             u4690 141C  
                                                             u4930 1B80  
                                                             u5490 23A2  
                                                             u5571 21E0  
                                                             u4851 2306  
                                                             u4771 1528  
                                                             u4691 1416  
                                                             u4931 1B7A  
                                                             u5491 239C  
                                                             u5580 220E  
                                                             u4860 2362  
                                                             u4780 154C  
                                                             u4940 1B92  
                                                             u5581 2208  
                                                             u4861 235C  
                                                             u4781 1546  
                                                             u4941 1B8C  
                                                             u5590 2222  
                                                             u4790 159A  
                                                             u4950 1BD2  
                                                             u4870 1A1E  
                                                             u5591 221C  
                                                             u4791 1594  
                                                             u4951 1BCC  
                                                             u4871 1A18  
                                                             u4960 1BE4  
                                                             u4880 1A30  
                                                             u4961 1BDE  
                                                             u4881 1A2A  
                                                             u4970 1666  
                                                             u4890 1A94  
                                                             u4891 1A8E  
                                                             u4980 1692  
                                                             u4981 168C  
                                                             u4990 16CC  
                                                             u4975 165A  
                                                             u4995 16C0  
                                                             _Fosc 7DA3  
                                                             _Tosc 00B8  
                                                             _atoi 1DF6  
                                                             _main 2D7A  
                                                             fsr1h 000FE2  
                                                             fsr2h 000FDA  
                                                             indf1 000FE7  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0078  
                                                             _stop 0071  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0088  
                                                       _Angle_diff 005B  
                                                  ___fldiv@new_exp 0027  
                                                     ___param_bank 000000  
                                                    ___fltol@sign1 00CC  
                                                            ?_atoi 000F  
                                                  __end_of___fladd 0D4C  
                                                            ?_main 0001  
                                                  __end_of___fldiv 1622  
                                                  __end_of___flneg 2C94  
                                                            STR_10 7F4A  
                                                            STR_11 7F10  
                                                            STR_12 7F2D  
                                                            STR_13 7EF2  
                                                            STR_14 7E3F  
                                                            STR_15 7FEB  
                                                            STR_16 7DF9  
                                                  __end_of___flmul 11F0  
                                                  __end_of___flsub 2BCE  
                                                  __end_of___fltol 224C  
                                                  __end_of_Twister 2834  
                                                            i2l385 001C  
                                                            i2l388 006E  
                                                            i2l389 0078  
                                                            _RCREG 000FAE  
                                                            _SPBRG 000FAF  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISB 000F93  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                 Twister@direction 000E  
                                                            _X_dir 0070  
                                                            _Y_dir 006F  
                                                            _State 0073  
                                           __size_of_add_component 01F6  
                                                 fp__add_component 0086  
                                                  __end_of_isdigit 2C52  
                                                  __end_of_memmove 257E  
                                                            atoi@n 001C  
                                                            atoi@s 000F  
                               __end_of_desired_BaudRate@main$F485 7D9B  
                                       _desired_BaudRate@main$F485 7D97  
                                                            _toint 7D93  
                                                  __end_of_isspace 2B28  
                                                            tablat 000FF5  
                                                    _start_up_menu 1FB4  
                                                  _change_sequence 2834  
                                                            ttemp5 0079  
                                                            ttemp6 007C  
                                                  Y_axis@direction 000E  
                                                            ttemp7 0080  
                                                            status 000FD8  
                                                            wtemp8 0079  
                                                  __end_of_strncat 29E0  
                                                  __end_of_strrchr 2D0E  
                                                     __end_of_Fosc 7DA7  
                                                  __initialization 2A62  
                                                     __end_of_atoi 1FB4  
                                                     __end_of_main 2D98  
                                                       _Pick_Angle 0063  
                                                           ??_atoi 0011  
                                                           ??_main 0059  
                                                    __activetblptr 000002  
                                                    print_string@i 000D  
                                                   ?_start_up_menu 0001  
                                                           i2l3731 0014  
                                                           i2l3733 0030  
                                                           i2l3735 0070  
                                                           i2l3737 0074  
                                                 __end_of___xxtofl 1C00  
                                          remove_component@rm_comp 001E  
                                                           _X_Pick 006B  
                                                           _Y_Pick 0067  
                                                           _X_diff 005F  
                                                           _Y_diff 005D  
                                                           _X_axis 2670  
                                                           _Y_axis 257E  
                                                    _add_component 1C00  
                                                ?_remove_component 0001  
                                                           ___flge 224C  
                                                        ??___fladd 0010  
                                                           ___wmul 2D0E  
                                                        ??___fldiv 001E  
                                                        ??___flneg 000C  
                                                        ??___flmul 0010  
                                                        ??___flsub 0020  
                                                        ??___fltol 00C8  
                                                 ??_pick_and_place 003B  
                                               ??_remove_component 001A  
                                                        ??_Twister 000E  
                                                           clear_0 2AA8  
                                                           clear_1 2AB4  
                                                           isa$std 000001  
                                                 __end_of_ms_delay 2B84  
                                                           _roundf 1622  
                                                           _strlen 2BCE  
                                                     __pdataCOMRAM 0073  
                                                        ??_isdigit 000A  
                                                        ??_memmove 0012  
                                                    _Place_Angle_D 00A4  
                                                     __mediumconst 7D92  
                                                        ??_isspace 000A  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                          __end_of_change_sequence 28CC  
                                                        ??_strncat 0012  
                                                        ??_strrchr 001A  
                                                       ___flge@ff1 002F  
                                                       ___flge@ff2 0033  
                                                     ___xxtofl@arg 0012  
                                                     ___xxtofl@exp 0011  
                                                     ___xxtofl@val 0008  
                                                       __accesstop 0080  
                                          __end_of__initialization 2ABA  
                                               __size_of___memrchr 0082  
                                                       ___flneg@f1 0008  
                                                serial_tx_char@val 0008  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0055  
                                               _pick_and_place$581 0047  
                                               _pick_and_place$583 004B  
                                               _pick_and_place$575 003F  
                                               _pick_and_place$585 004F  
                                               _pick_and_place$578 0043  
                                               _pick_and_place$587 0053  
                                                   ?_add_component 0001  
                                                  _init_interrupts 2DAC  
                                                   __pcstackCOMRAM 0001  
                                                     __pidataBANK0 2D98  
                                                    __end_of_toint 7D97  
                                                      ms_delay@val 0008  
                                                 _desired_BaudRate 7D9B  
                                          __size_of_serial_tx_char 0020  
                                                  ??_start_up_menu 0056  
                                                      _Place_Angle 0061  
                                                      _New_char_RX 0072  
                                                       __pbssBANK0 0080  
                                            __end_of_Rx_char_USART 0086  
                                        remove_component@indxToDel 001C  
                                                       _angle_diff 00A2  
                                                          ?_X_axis 0001  
                                                          ?_Y_axis 0001  
                                                          ?___flge 002F  
                                                          ?___wmul 0008  
                                                          ?_roundf 003B  
                                                __end_of___memrchr 2A62  
                                                          ?_strlen 0008  
                                                        ?___xxtofl 0008  
                                              pick_and_place@i_582 0049  
                                              pick_and_place@i_584 004D  
                                              pick_and_place@i_576 0041  
                                              pick_and_place@i_586 0051  
                                              pick_and_place@i_579 0045  
                                                 ?_change_sequence 0001  
                                                          _RX_Char 006D  
                                          __end_of_init_interrupts 2DB8  
                                                  ??_add_component 001E  
                                                        ?_ms_delay 0008  
                                                          _X_Place 0069  
                                                          _Y_Place 0065  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  pick_and_place@i 003D  
                                                       _init_PORTS 2D38  
                                                       _init_USART 2C94  
                                                  __size_of_X_axis 00F2  
                                                  __size_of_Y_axis 00F2  
                                                          _Rot_dir 006E  
                                                  __size_of___flge 0128  
                                                          ___fladd 07A4  
                                                          ___fldiv 11F0  
                                                          ___flneg 2C52  
                                                          ___flmul 0D4C  
                                                          ___flsub 2B84  
                                                          ___fltol 2114  
                                                  __size_of___wmul 002A  
                                                          _Twister 2762  
                                                          __pcinit 2A62  
                                                          __ramtop 0600  
                                                          __ptext0 2D7A  
                                                          __ptext1 1FB4  
                                                          __ptext2 2374  
                                                          __ptext3 2CD4  
                                                          __ptext4 29E0  
                                                          __ptext5 2484  
                                                          __ptext6 008C  
                                                          __ptext7 1A08  
                                                          __ptext8 11F0  
                                                          __ptext9 257E  
                                                  __size_of_roundf 03E6  
                                                  __size_of_strlen 0042  
                                                          _isdigit 2C10  
                                                          _memmove 2484  
                                                       ??___xxtofl 000C  
                                                          _isspace 2AC8  
                                                          atoi@neg 0015  
                                                          _strncat 295A  
                                                          _strrchr 2CD4  
                                             end_of_initialization 2ABA  
                                              remove_component@ptr 001A  
                                                    __Lmediumconst 7D92  
                                                       ??_ms_delay 000A  
                                                        _RCSTAbits 000FAB  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                          roundf@e 0047  
                                                          roundf@u 004D  
                                                          roundf@x 003B  
                                                          roundf@y 0051  
                                                          strlen@a 000A  
                                                          strlen@s 0008  
                                                      ___fladd@grs 0017  
                                                   _serial_tx_char 2D5A  
                                                    ___xxtofl@sign 0010  
                                        __size_of_remove_component 0110  
                                                        _TRISCbits 000F94  
                                                      ___fldiv@grs 0029  
                                                      ___fldiv@rem 0022  
                                                    ?_print_string 0009  
                                                      ___flmul@grs 0015  
                                                 ?_init_interrupts 0001  
                                                        _TXSTAbits 000FAC  
                                                      ___memrchr@c 000E  
                                                      ___memrchr@m 000C  
                                                      ___memrchr@n 0010  
                                                      ___memrchr@s 0014  
                                         __end_of_desired_BaudRate 7D9F  
                                                      ?_init_PORTS 0001  
                                                      ?_init_USART 0001  
                                                   __end_of_X_axis 2762  
                                                   __end_of_Y_axis 2670  
                                                   __end_of___flge 2374  
                                                   __end_of___wmul 2D38  
                                                    __pidataCOMRAM 2DB8  
                                           __end_of_serial_tx_char 2D7A  
                                                   __end_of_roundf 1A08  
                                                   __end_of_strlen 2C10  
                                              start_initialization 2A62  
                                                   ??_print_string 000B  
                                                        _X_Place_D 00A8  
                                                        _Y_Place_D 00A6  
                                                  X_axis@direction 000E  
                                       add_component@add_component 0020  
                                                     _Pick_Angle_D 00AA  
                                                   _Tosc@main$F484 00B4  
                                                         ??_X_axis 000E  
                                                         ??_Y_axis 000E  
                                                         ??___flge 0037  
                                                         ??___wmul 000C  
                                                      __pdataBANK0 00B4  
                                                   _lenth_of_array 00BC  
                                                         ??_roundf 003F  
                                                         ??_strlen 000A  
                                                  ?_serial_tx_char 0001  
                                                        ___fladd@a 000C  
                                                        ___fladd@b 0008  
                                                        ___fldiv@a 001A  
                                                        ___fldiv@b 0016  
                                                        ___flmul@a 000C  
                                                        ___flmul@b 0008  
                                                      __pbssCOMRAM 0059  
                                                 change_sequence@i 0012  
                                                        ___flsub@a 001C  
                                                        ___flsub@b 0018  
                                                    __pcstackBANK0 00C8  
                                          __size_of_pick_and_place 0718  
                                                        ___memrchr 29E0  
                                                __size_of___xxtofl 01F8  
                                              __size_of_init_PORTS 0022  
                                              __size_of_init_USART 0040  
                                            __end_of_start_up_menu 2114  
                                                        _atoi$1053 0017  
                                                        _atoi$1054 001B  
                                                        _atoi$1055 0019  
                                                __size_of_ms_delay 005C  
                                                        __pintcode 0008  
                                                    __pmediumconst 7D92  
                                                         ?___fladd 0008  
                                                         ?___fldiv 0016  
                                                         ?___flneg 0008  
                                                         ?___flmul 0008  
                                                         ?___flsub 0018  
                                                         ?___fltol 0055  
                                                         ?_Twister 0001  
                                                   Rx_char_USART@i 0006  
                                           __size_of_Rx_char_USART 007E  
                                                print_string@strng 0009  
                                                         ?_isdigit 0008  
                                                         ?_memmove 000C  
                                                         ?_isspace 0008  
                                                 _remove_component 2374  
                                                   _Fosc@main$F483 7D9F  
                                                       ?___memrchr 000C  
                                                         ?_strncat 000C  
                                                         ?_strrchr 0016  
                                                        _input_str 00BE  
                                                   ___wmul@product 000C  
                                         __size_of_change_sequence 0098  
                                                         _PIE1bits 000F9D  
                                            __end_of_add_component 1DF6  
                                                         i2u421_40 002E  
                                                         i2u421_41 0028  
                                                         i2u422_40 006C  
                                                         i2u422_41 0066  
                                                         _PIR1bits 000F9E  
                                             __end_of_print_string 295A  
                                                        _testarray 0080  
                                                ___wmul@multiplier 0008  
                                           __end_of_Fosc@main$F483 7DA3  
                                                     _isspace$1071 000E  
                                                        copy_data0 2A76  
                                                        copy_data1 2A96  
                                                         _X_Pick_D 0059  
                                                    _Rx_char_USART 0008  
                                                         _Y_Pick_D 00AC  
                                                       roundf@F528 009E  
                                                         __Hrparam 0000  
                                                     ??_init_PORTS 0008  
                                                     ??_init_USART 0059  
                                                         __Lrparam 0000  
                                                        memmove@d1 000C  
                                                        memmove@s1 000E  
                                                 __size_of___fladd 05A8  
                                                 __size_of___fldiv 0432  
                                                 __size_of___flneg 0042  
                                                 __size_of___flmul 04A4  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 0138  
                                                 __size_of_Twister 00D2  
                                                        ms_delay@i 000A  
                                                        ms_delay@j 000C  
                                                         ___xxtofl 1A08  
                                                   _pick_and_place 008C  
                                                 __size_of_isdigit 0042  
                                                 __size_of_memmove 00FA  
                                                      ??___memrchr 0012  
                                                 __size_of_isspace 0060  
                                                         __ptext10 2670  
                                                         __ptext11 2762  
                                                         __ptext20 2AC8  
                                                         __ptext12 2B28  
                                                         __ptext21 2C10  
                                                         __ptext13 2834  
                                                         __ptext30 224C  
                                                         __ptext22 2D0E  
                                                         __ptext14 1C00  
                                                         __ptext31 2114  
                                                         __ptext23 2DAC  
                                                         __ptext15 295A  
                                                         __ptext32 2D38  
                                                         __ptext24 2C94  
                                                         __ptext16 2BCE  
                                                         __ptext25 1622  
                                                         __ptext17 28CC  
                                                         __ptext26 2B84  
                                                         __ptext18 2D5A  
                                                         __ptext27 07A4  
                                                         __ptext19 1DF6  
                                                         __ptext28 2C52  
                                                         __ptext29 0D4C  
                                               __end_of_init_PORTS 2D5A  
                                               __end_of_init_USART 2CD4  
                                                 __size_of_strncat 0086  
                                                 __size_of_strrchr 003A  
                                                   ?_Rx_char_USART 0001  
                                                    __size_of_atoi 01BE  
                                                    __size_of_main 001E  
                                                         _ms_delay 2B28  
                                                         isa$xinst 000000  
                                                         _sequence 0074  
                                         __size_of_init_interrupts 000C  
                                                ??_change_sequence 000F  
                                                         int$flags 0078  
                                                 ??_serial_tx_char 0008  
                                                         _rotation 00AE  
                                           __end_of_pick_and_place 07A4  
                                                       _INTCONbits 000FF2  
                                                         isdigit@c 0008  
                                                         memmove@d 0014  
                                                         memmove@n 0010  
                                                         memmove@s 0016  
                                                         intlevel2 2DBE  
                                                         isspace@c 0008  
                                                   _displacement_X 00B2  
                                                   _displacement_Y 00B0  
                                            __size_of_print_string 008E  
                                         __end_of_remove_component 2484  
                                           pick_and_place@Componnt 0055  
                                                  ?_pick_and_place 0001  
                                                         strncat@d 000C  
                                                         strncat@n 0010  
                                                         strncat@s 000E  
                                                         strrchr@c 0018  
                                                         strrchr@s 0016  
                                                    ___fladd@signs 0014  
                                                  ??_Rx_char_USART 0001  
                                                     _print_string 28CC  
                                                     ___fladd@aexp 0015  
                                                     ___fladd@bexp 0016  
                                                   start_up_menu@i 00C8  
                                                      _roundf$1322 0049  
                                                      _roundf$1323 0043  
