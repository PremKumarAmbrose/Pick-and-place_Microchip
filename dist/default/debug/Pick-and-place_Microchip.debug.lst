

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun  8 21:40:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F452 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataCOMRAM
    93  002EA0                     __pidataCOMRAM:
    94                           	callstack 0
    95                           
    96                           ;initializer for _sequence
    97  002EA0  43                 	db	67
    98  002EA1  41                 	db	65
    99  002EA2  42                 	db	66
   100  002EA3  00                 	db	0
   101                           
   102                           	psect	idataBANK0
   103  002E7E                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _Tosc@main$F490
   107  002E7E  37BD               	dw	14269
   108  002E80  3486               	dw	13446
   109                           
   110                           ;initializer for _Tosc
   111  002E82  37BD               	dw	14269
   112  002E84  3486               	dw	13446
   113                           
   114                           ;initializer for add_component@F3132
   115  002E86  44                 	db	68
   116  002E87  00                 	db	0
   117                           
   118                           ;initializer for _lenth_of_array
   119  002E88  001E               	dw	30
   120                           
   121                           ;initializer for _input_str
   122  002E8A  20                 	db	32
   123  002E8B  00                 	db	0
   124  002E8C  00                 	db	0
   125  002E8D  00                 	db	0
   126  002E8E  00                 	db	0
   127  002E8F  00                 	db	0
   128  002E90  00                 	db	0
   129  002E91  00                 	db	0
   130  002E92  00                 	db	0
   131  002E93  00                 	db	0
   132                           
   133                           	psect	mediumconst
   134  007DC2                     __pmediumconst:
   135                           	callstack 0
   136  007DC2  00                 	db	0
   137  007DC3  0000               	dw	0
   138  007DC5  4B00               	dw	19200
   139  007DC7                     __end_of_toint:
   140                           	callstack 0
   141  007DC7  0000               	dw	0
   142  007DC9  4616               	dw	17942
   143  007DCB                     __end_of_desired_BaudRate@main$F491:
   144                           	callstack 0
   145  007DCB  0000               	dw	0
   146  007DCD  4616               	dw	17942
   147  007DCF                     __end_of_desired_BaudRate:
   148                           	callstack 0
   149  007DCF  2400               	dw	9216
   150  007DD1  4A74               	dw	19060
   151  007DD3                     __end_of_Fosc@main$F489:
   152                           	callstack 0
   153  007DD3  2400               	dw	9216
   154  007DD5  4A74               	dw	19060
   155  007DD7                     __end_of_Fosc:
   156                           	callstack 0
   157  007DD7                     STR_1:
   158  007DD7  0A                 	db	10
   159  007DD8  31                 	db	49	;'1'
   160  007DD9  2E                 	db	46
   161  007DDA  20                 	db	32
   162  007DDB  44                 	db	68	;'D'
   163  007DDC  65                 	db	101	;'e'
   164  007DDD  66                 	db	102	;'f'
   165  007DDE  61                 	db	97	;'a'
   166  007DDF  75                 	db	117	;'u'
   167  007DE0  6C                 	db	108	;'l'
   168  007DE1  74                 	db	116	;'t'
   169  007DE2  20                 	db	32
   170  007DE3  53                 	db	83	;'S'
   171  007DE4  65                 	db	101	;'e'
   172  007DE5  71                 	db	113	;'q'
   173  007DE6  75                 	db	117	;'u'
   174  007DE7  65                 	db	101	;'e'
   175  007DE8  6E                 	db	110	;'n'
   176  007DE9  63                 	db	99	;'c'
   177  007DEA  65                 	db	101	;'e'
   178  007DEB  0A                 	db	10
   179  007DEC  32                 	db	50	;'2'
   180  007DED  2E                 	db	46
   181  007DEE  20                 	db	32
   182  007DEF  43                 	db	67	;'C'
   183  007DF0  68                 	db	104	;'h'
   184  007DF1  61                 	db	97	;'a'
   185  007DF2  6E                 	db	110	;'n'
   186  007DF3  67                 	db	103	;'g'
   187  007DF4  65                 	db	101	;'e'
   188  007DF5  20                 	db	32
   189  007DF6  73                 	db	115	;'s'
   190  007DF7  65                 	db	101	;'e'
   191  007DF8  71                 	db	113	;'q'
   192  007DF9  75                 	db	117	;'u'
   193  007DFA  65                 	db	101	;'e'
   194  007DFB  6E                 	db	110	;'n'
   195  007DFC  63                 	db	99	;'c'
   196  007DFD  65                 	db	101	;'e'
   197  007DFE  0A                 	db	10
   198  007DFF  33                 	db	51	;'3'
   199  007E00  2E                 	db	46
   200  007E01  20                 	db	32
   201  007E02  41                 	db	65	;'A'
   202  007E03  64                 	db	100	;'d'
   203  007E04  64                 	db	100	;'d'
   204  007E05  20                 	db	32
   205  007E06  6E                 	db	110	;'n'
   206  007E07  65                 	db	101	;'e'
   207  007E08  77                 	db	119	;'w'
   208  007E09  20                 	db	32
   209  007E0A  63                 	db	99	;'c'
   210  007E0B  6F                 	db	111	;'o'
   211  007E0C  6D                 	db	109	;'m'
   212  007E0D  70                 	db	112	;'p'
   213  007E0E  6F                 	db	111	;'o'
   214  007E0F  6E                 	db	110	;'n'
   215  007E10  65                 	db	101	;'e'
   216  007E11  6E                 	db	110	;'n'
   217  007E12  74                 	db	116	;'t'
   218  007E13  0A                 	db	10
   219  007E14  34                 	db	52	;'4'
   220  007E15  2E                 	db	46
   221  007E16  20                 	db	32
   222  007E17  52                 	db	82	;'R'
   223  007E18  65                 	db	101	;'e'
   224  007E19  6D                 	db	109	;'m'
   225  007E1A  6F                 	db	111	;'o'
   226  007E1B  76                 	db	118	;'v'
   227  007E1C  65                 	db	101	;'e'
   228  007E1D  20                 	db	32
   229  007E1E  61                 	db	97	;'a'
   230  007E1F  20                 	db	32
   231  007E20  63                 	db	99	;'c'
   232  007E21  6F                 	db	111	;'o'
   233  007E22  6D                 	db	109	;'m'
   234  007E23  70                 	db	112	;'p'
   235  007E24  6F                 	db	111	;'o'
   236  007E25  6E                 	db	110	;'n'
   237  007E26  65                 	db	101	;'e'
   238  007E27  6E                 	db	110	;'n'
   239  007E28  74                 	db	116	;'t'
   240  007E29  00                 	db	0
   241  007E2A                     STR_21:
   242  007E2A  0A                 	db	10
   243  007E2B  63                 	db	99	;'c'
   244  007E2C  6F                 	db	111	;'o'
   245  007E2D  6D                 	db	109	;'m'
   246  007E2E  70                 	db	112	;'p'
   247  007E2F  6F                 	db	111	;'o'
   248  007E30  6E                 	db	110	;'n'
   249  007E31  65                 	db	101	;'e'
   250  007E32  6E                 	db	110	;'n'
   251  007E33  74                 	db	116	;'t'
   252  007E34  20                 	db	32
   253  007E35  69                 	db	105	;'i'
   254  007E36  73                 	db	115	;'s'
   255  007E37  20                 	db	32
   256  007E38  6E                 	db	110	;'n'
   257  007E39  6F                 	db	111	;'o'
   258  007E3A  74                 	db	116	;'t'
   259  007E3B  20                 	db	32
   260  007E3C  69                 	db	105	;'i'
   261  007E3D  6E                 	db	110	;'n'
   262  007E3E  20                 	db	32
   263  007E3F  74                 	db	116	;'t'
   264  007E40  68                 	db	104	;'h'
   265  007E41  65                 	db	101	;'e'
   266  007E42  20                 	db	32
   267  007E43  73                 	db	115	;'s'
   268  007E44  65                 	db	101	;'e'
   269  007E45  71                 	db	113	;'q'
   270  007E46  75                 	db	117	;'u'
   271  007E47  65                 	db	101	;'e'
   272  007E48  6E                 	db	110	;'n'
   273  007E49  63                 	db	99	;'c'
   274  007E4A  65                 	db	101	;'e'
   275  007E4B  2E                 	db	46
   276  007E4C  20                 	db	32
   277  007E4D  0A                 	db	10
   278  007E4E  54                 	db	84	;'T'
   279  007E4F  72                 	db	114	;'r'
   280  007E50  79                 	db	121	;'y'
   281  007E51  20                 	db	32
   282  007E52  73                 	db	115	;'s'
   283  007E53  65                 	db	101	;'e'
   284  007E54  6C                 	db	108	;'l'
   285  007E55  65                 	db	101	;'e'
   286  007E56  63                 	db	99	;'c'
   287  007E57  74                 	db	116	;'t'
   288  007E58  69                 	db	105	;'i'
   289  007E59  6E                 	db	110	;'n'
   290  007E5A  67                 	db	103	;'g'
   291  007E5B  20                 	db	32
   292  007E5C  61                 	db	97	;'a'
   293  007E5D  6E                 	db	110	;'n'
   294  007E5E  6F                 	db	111	;'o'
   295  007E5F  74                 	db	116	;'t'
   296  007E60  68                 	db	104	;'h'
   297  007E61  65                 	db	101	;'e'
   298  007E62  72                 	db	114	;'r'
   299  007E63  20                 	db	32
   300  007E64  63                 	db	99	;'c'
   301  007E65  6F                 	db	111	;'o'
   302  007E66  6D                 	db	109	;'m'
   303  007E67  70                 	db	112	;'p'
   304  007E68  6F                 	db	111	;'o'
   305  007E69  6E                 	db	110	;'n'
   306  007E6A  65                 	db	101	;'e'
   307  007E6B  6E                 	db	110	;'n'
   308  007E6C  74                 	db	116	;'t'
   309  007E6D  0A                 	db	10
   310  007E6E  00                 	db	0
   311  007E6F                     STR_20:
   312  007E6F  0A                 	db	10
   313  007E70  57                 	db	87	;'W'
   314  007E71  68                 	db	104	;'h'
   315  007E72  69                 	db	105	;'i'
   316  007E73  63                 	db	99	;'c'
   317  007E74  68                 	db	104	;'h'
   318  007E75  20                 	db	32
   319  007E76  63                 	db	99	;'c'
   320  007E77  6F                 	db	111	;'o'
   321  007E78  6D                 	db	109	;'m'
   322  007E79  70                 	db	112	;'p'
   323  007E7A  6F                 	db	111	;'o'
   324  007E7B  6E                 	db	110	;'n'
   325  007E7C  65                 	db	101	;'e'
   326  007E7D  6E                 	db	110	;'n'
   327  007E7E  74                 	db	116	;'t'
   328  007E7F  20                 	db	32
   329  007E80  77                 	db	119	;'w'
   330  007E81  6F                 	db	111	;'o'
   331  007E82  75                 	db	117	;'u'
   332  007E83  6C                 	db	108	;'l'
   333  007E84  64                 	db	100	;'d'
   334  007E85  20                 	db	32
   335  007E86  79                 	db	121	;'y'
   336  007E87  6F                 	db	111	;'o'
   337  007E88  75                 	db	117	;'u'
   338  007E89  20                 	db	32
   339  007E8A  6C                 	db	108	;'l'
   340  007E8B  69                 	db	105	;'i'
   341  007E8C  6B                 	db	107	;'k'
   342  007E8D  65                 	db	101	;'e'
   343  007E8E  20                 	db	32
   344  007E8F  74                 	db	116	;'t'
   345  007E90  6F                 	db	111	;'o'
   346  007E91  20                 	db	32
   347  007E92  72                 	db	114	;'r'
   348  007E93  65                 	db	101	;'e'
   349  007E94  6D                 	db	109	;'m'
   350  007E95  6F                 	db	111	;'o'
   351  007E96  76                 	db	118	;'v'
   352  007E97  65                 	db	101	;'e'
   353  007E98  20                 	db	32
   354  007E99  66                 	db	102	;'f'
   355  007E9A  72                 	db	114	;'r'
   356  007E9B  6F                 	db	111	;'o'
   357  007E9C  6D                 	db	109	;'m'
   358  007E9D  20                 	db	32
   359  007E9E  74                 	db	116	;'t'
   360  007E9F  68                 	db	104	;'h'
   361  007EA0  65                 	db	101	;'e'
   362  007EA1  20                 	db	32
   363  007EA2  20                 	db	32
   364  007EA3  73                 	db	115	;'s'
   365  007EA4  65                 	db	101	;'e'
   366  007EA5  71                 	db	113	;'q'
   367  007EA6  75                 	db	117	;'u'
   368  007EA7  65                 	db	101	;'e'
   369  007EA8  6E                 	db	110	;'n'
   370  007EA9  63                 	db	99	;'c'
   371  007EAA  65                 	db	101	;'e'
   372  007EAB  3F                 	db	63	;'?'
   373  007EAC  0A                 	db	10
   374  007EAD  00                 	db	0
   375  007EAE                     STR_19:
   376  007EAE  0A                 	db	10
   377  007EAF  31                 	db	49	;'1'
   378  007EB0  2E                 	db	46
   379  007EB1  20                 	db	32
   380  007EB2  43                 	db	67	;'C'
   381  007EB3  6F                 	db	111	;'o'
   382  007EB4  6E                 	db	110	;'n'
   383  007EB5  74                 	db	116	;'t'
   384  007EB6  69                 	db	105	;'i'
   385  007EB7  6E                 	db	110	;'n'
   386  007EB8  75                 	db	117	;'u'
   387  007EB9  65                 	db	101	;'e'
   388  007EBA  20                 	db	32
   389  007EBB  73                 	db	115	;'s'
   390  007EBC  65                 	db	101	;'e'
   391  007EBD  71                 	db	113	;'q'
   392  007EBE  75                 	db	117	;'u'
   393  007EBF  65                 	db	101	;'e'
   394  007EC0  6E                 	db	110	;'n'
   395  007EC1  63                 	db	99	;'c'
   396  007EC2  65                 	db	101	;'e'
   397  007EC3  0A                 	db	10
   398  007EC4  32                 	db	50	;'2'
   399  007EC5  2E                 	db	46
   400  007EC6  20                 	db	32
   401  007EC7  43                 	db	67	;'C'
   402  007EC8  68                 	db	104	;'h'
   403  007EC9  61                 	db	97	;'a'
   404  007ECA  6E                 	db	110	;'n'
   405  007ECB  67                 	db	103	;'g'
   406  007ECC  65                 	db	101	;'e'
   407  007ECD  20                 	db	32
   408  007ECE  73                 	db	115	;'s'
   409  007ECF  65                 	db	101	;'e'
   410  007ED0  71                 	db	113	;'q'
   411  007ED1  75                 	db	117	;'u'
   412  007ED2  65                 	db	101	;'e'
   413  007ED3  6E                 	db	110	;'n'
   414  007ED4  63                 	db	99	;'c'
   415  007ED5  65                 	db	101	;'e'
   416  007ED6  00                 	db	0
   417  007ED7                     STR_11:
   418  007ED7  0A                 	db	10
   419  007ED8  50                 	db	80	;'P'
   420  007ED9  6C                 	db	108	;'l'
   421  007EDA  65                 	db	101	;'e'
   422  007EDB  61                 	db	97	;'a'
   423  007EDC  73                 	db	115	;'s'
   424  007EDD  65                 	db	101	;'e'
   425  007EDE  20                 	db	32
   426  007EDF  67                 	db	103	;'g'
   427  007EE0  69                 	db	105	;'i'
   428  007EE1  76                 	db	118	;'v'
   429  007EE2  65                 	db	101	;'e'
   430  007EE3  20                 	db	32
   431  007EE4  74                 	db	116	;'t'
   432  007EE5  68                 	db	104	;'h'
   433  007EE6  65                 	db	101	;'e'
   434  007EE7  20                 	db	32
   435  007EE8  6E                 	db	110	;'n'
   436  007EE9  65                 	db	101	;'e'
   437  007EEA  77                 	db	119	;'w'
   438  007EEB  20                 	db	32
   439  007EEC  73                 	db	115	;'s'
   440  007EED  65                 	db	101	;'e'
   441  007EEE  71                 	db	113	;'q'
   442  007EEF  75                 	db	117	;'u'
   443  007EF0  65                 	db	101	;'e'
   444  007EF1  6E                 	db	110	;'n'
   445  007EF2  63                 	db	99	;'c'
   446  007EF3  65                 	db	101	;'e'
   447  007EF4  20                 	db	32
   448  007EF5  61                 	db	97	;'a'
   449  007EF6  73                 	db	115	;'s'
   450  007EF7  20                 	db	32
   451  007EF8  69                 	db	105	;'i'
   452  007EF9  6E                 	db	110	;'n'
   453  007EFA  70                 	db	112	;'p'
   454  007EFB  75                 	db	117	;'u'
   455  007EFC  74                 	db	116	;'t'
   456  007EFD  0D                 	db	13
   457  007EFE  00                 	db	0
   458  007EFF                     STR_3:
   459  007EFF  0A                 	db	10
   460  007F00  45                 	db	69	;'E'
   461  007F01  6E                 	db	110	;'n'
   462  007F02  74                 	db	116	;'t'
   463  007F03  65                 	db	101	;'e'
   464  007F04  72                 	db	114	;'r'
   465  007F05  20                 	db	32
   466  007F06  27                 	db	39
   467  007F07  51                 	db	81	;'Q'
   468  007F08  27                 	db	39
   469  007F09  20                 	db	32
   470  007F0A  74                 	db	116	;'t'
   471  007F0B  6F                 	db	111	;'o'
   472  007F0C  20                 	db	32
   473  007F0D  65                 	db	101	;'e'
   474  007F0E  78                 	db	120	;'x'
   475  007F0F  69                 	db	105	;'i'
   476  007F10  74                 	db	116	;'t'
   477  007F11  20                 	db	32
   478  007F12  74                 	db	116	;'t'
   479  007F13  6F                 	db	111	;'o'
   480  007F14  20                 	db	32
   481  007F15  4D                 	db	77	;'M'
   482  007F16  41                 	db	65	;'A'
   483  007F17  49                 	db	73	;'I'
   484  007F18  4E                 	db	78	;'N'
   485  007F19  20                 	db	32
   486  007F1A  4D                 	db	77	;'M'
   487  007F1B  45                 	db	69	;'E'
   488  007F1C  4E                 	db	78	;'N'
   489  007F1D  55                 	db	85	;'U'
   490  007F1E  00                 	db	0
   491  007F1F                     STR_17:
   492  007F1F  0A                 	db	10
   493  007F20  45                 	db	69	;'E'
   494  007F21  6E                 	db	110	;'n'
   495  007F22  74                 	db	116	;'t'
   496  007F23  65                 	db	101	;'e'
   497  007F24  72                 	db	114	;'r'
   498  007F25  20                 	db	32
   499  007F26  74                 	db	116	;'t'
   500  007F27  68                 	db	104	;'h'
   501  007F28  65                 	db	101	;'e'
   502  007F29  20                 	db	32
   503  007F2A  70                 	db	112	;'p'
   504  007F2B  6C                 	db	108	;'l'
   505  007F2C  61                 	db	97	;'a'
   506  007F2D  63                 	db	99	;'c'
   507  007F2E  65                 	db	101	;'e'
   508  007F2F  20                 	db	32
   509  007F30  6F                 	db	111	;'o'
   510  007F31  72                 	db	114	;'r'
   511  007F32  69                 	db	105	;'i'
   512  007F33  65                 	db	101	;'e'
   513  007F34  6E                 	db	110	;'n'
   514  007F35  74                 	db	116	;'t'
   515  007F36  61                 	db	97	;'a'
   516  007F37  74                 	db	116	;'t'
   517  007F38  69                 	db	105	;'i'
   518  007F39  6F                 	db	111	;'o'
   519  007F3A  6E                 	db	110	;'n'
   520  007F3B  3A                 	db	58	;':'
   521  007F3C  00                 	db	0
   522  007F3D                     STR_15:
   523  007F3D  0A                 	db	10
   524  007F3E  45                 	db	69	;'E'
   525  007F3F  6E                 	db	110	;'n'
   526  007F40  74                 	db	116	;'t'
   527  007F41  65                 	db	101	;'e'
   528  007F42  72                 	db	114	;'r'
   529  007F43  20                 	db	32
   530  007F44  74                 	db	116	;'t'
   531  007F45  68                 	db	104	;'h'
   532  007F46  65                 	db	101	;'e'
   533  007F47  20                 	db	32
   534  007F48  70                 	db	112	;'p'
   535  007F49  6C                 	db	108	;'l'
   536  007F4A  61                 	db	97	;'a'
   537  007F4B  63                 	db	99	;'c'
   538  007F4C  65                 	db	101	;'e'
   539  007F4D  20                 	db	32
   540  007F4E  70                 	db	112	;'p'
   541  007F4F  6F                 	db	111	;'o'
   542  007F50  73                 	db	115	;'s'
   543  007F51  69                 	db	105	;'i'
   544  007F52  74                 	db	116	;'t'
   545  007F53  69                 	db	105	;'i'
   546  007F54  6F                 	db	111	;'o'
   547  007F55  6E                 	db	110	;'n'
   548  007F56  20                 	db	32
   549  007F57  58                 	db	88	;'X'
   550  007F58  3A                 	db	58	;':'
   551  007F59  00                 	db	0
   552  007F5A                     STR_16:
   553  007F5A  0A                 	db	10
   554  007F5B  45                 	db	69	;'E'
   555  007F5C  6E                 	db	110	;'n'
   556  007F5D  74                 	db	116	;'t'
   557  007F5E  65                 	db	101	;'e'
   558  007F5F  72                 	db	114	;'r'
   559  007F60  20                 	db	32
   560  007F61  74                 	db	116	;'t'
   561  007F62  68                 	db	104	;'h'
   562  007F63  65                 	db	101	;'e'
   563  007F64  20                 	db	32
   564  007F65  70                 	db	112	;'p'
   565  007F66  6C                 	db	108	;'l'
   566  007F67  61                 	db	97	;'a'
   567  007F68  63                 	db	99	;'c'
   568  007F69  65                 	db	101	;'e'
   569  007F6A  20                 	db	32
   570  007F6B  70                 	db	112	;'p'
   571  007F6C  6F                 	db	111	;'o'
   572  007F6D  73                 	db	115	;'s'
   573  007F6E  69                 	db	105	;'i'
   574  007F6F  74                 	db	116	;'t'
   575  007F70  69                 	db	105	;'i'
   576  007F71  6F                 	db	111	;'o'
   577  007F72  6E                 	db	110	;'n'
   578  007F73  20                 	db	32
   579  007F74  59                 	db	89	;'Y'
   580  007F75  3A                 	db	58	;':'
   581  007F76  00                 	db	0
   582  007F77                     STR_14:
   583  007F77  0A                 	db	10
   584  007F78  45                 	db	69	;'E'
   585  007F79  6E                 	db	110	;'n'
   586  007F7A  74                 	db	116	;'t'
   587  007F7B  65                 	db	101	;'e'
   588  007F7C  72                 	db	114	;'r'
   589  007F7D  20                 	db	32
   590  007F7E  74                 	db	116	;'t'
   591  007F7F  68                 	db	104	;'h'
   592  007F80  65                 	db	101	;'e'
   593  007F81  20                 	db	32
   594  007F82  70                 	db	112	;'p'
   595  007F83  69                 	db	105	;'i'
   596  007F84  63                 	db	99	;'c'
   597  007F85  6B                 	db	107	;'k'
   598  007F86  20                 	db	32
   599  007F87  6F                 	db	111	;'o'
   600  007F88  72                 	db	114	;'r'
   601  007F89  69                 	db	105	;'i'
   602  007F8A  65                 	db	101	;'e'
   603  007F8B  6E                 	db	110	;'n'
   604  007F8C  74                 	db	116	;'t'
   605  007F8D  61                 	db	97	;'a'
   606  007F8E  74                 	db	116	;'t'
   607  007F8F  69                 	db	105	;'i'
   608  007F90  6F                 	db	111	;'o'
   609  007F91  6E                 	db	110	;'n'
   610  007F92  3A                 	db	58	;':'
   611  007F93  00                 	db	0
   612  007F94                     STR_12:
   613  007F94  0A                 	db	10
   614  007F95  45                 	db	69	;'E'
   615  007F96  6E                 	db	110	;'n'
   616  007F97  74                 	db	116	;'t'
   617  007F98  65                 	db	101	;'e'
   618  007F99  72                 	db	114	;'r'
   619  007F9A  20                 	db	32
   620  007F9B  74                 	db	116	;'t'
   621  007F9C  68                 	db	104	;'h'
   622  007F9D  65                 	db	101	;'e'
   623  007F9E  20                 	db	32
   624  007F9F  70                 	db	112	;'p'
   625  007FA0  69                 	db	105	;'i'
   626  007FA1  63                 	db	99	;'c'
   627  007FA2  6B                 	db	107	;'k'
   628  007FA3  20                 	db	32
   629  007FA4  70                 	db	112	;'p'
   630  007FA5  6F                 	db	111	;'o'
   631  007FA6  73                 	db	115	;'s'
   632  007FA7  69                 	db	105	;'i'
   633  007FA8  74                 	db	116	;'t'
   634  007FA9  69                 	db	105	;'i'
   635  007FAA  6F                 	db	111	;'o'
   636  007FAB  6E                 	db	110	;'n'
   637  007FAC  20                 	db	32
   638  007FAD  58                 	db	88	;'X'
   639  007FAE  3A                 	db	58	;':'
   640  007FAF  00                 	db	0
   641  007FB0                     STR_13:
   642  007FB0  0A                 	db	10
   643  007FB1  45                 	db	69	;'E'
   644  007FB2  6E                 	db	110	;'n'
   645  007FB3  74                 	db	116	;'t'
   646  007FB4  65                 	db	101	;'e'
   647  007FB5  72                 	db	114	;'r'
   648  007FB6  20                 	db	32
   649  007FB7  74                 	db	116	;'t'
   650  007FB8  68                 	db	104	;'h'
   651  007FB9  65                 	db	101	;'e'
   652  007FBA  20                 	db	32
   653  007FBB  70                 	db	112	;'p'
   654  007FBC  69                 	db	105	;'i'
   655  007FBD  63                 	db	99	;'c'
   656  007FBE  6B                 	db	107	;'k'
   657  007FBF  20                 	db	32
   658  007FC0  70                 	db	112	;'p'
   659  007FC1  6F                 	db	111	;'o'
   660  007FC2  73                 	db	115	;'s'
   661  007FC3  69                 	db	105	;'i'
   662  007FC4  74                 	db	116	;'t'
   663  007FC5  69                 	db	105	;'i'
   664  007FC6  6F                 	db	111	;'o'
   665  007FC7  6E                 	db	110	;'n'
   666  007FC8  20                 	db	32
   667  007FC9  59                 	db	89	;'Y'
   668  007FCA  3A                 	db	58	;':'
   669  007FCB  00                 	db	0
   670  007FCC                     STR_10:
   671  007FCC  0A                 	db	10
   672  007FCD  54                 	db	84	;'T'
   673  007FCE  68                 	db	104	;'h'
   674  007FCF  65                 	db	101	;'e'
   675  007FD0  20                 	db	32
   676  007FD1  63                 	db	99	;'c'
   677  007FD2  75                 	db	117	;'u'
   678  007FD3  72                 	db	114	;'r'
   679  007FD4  72                 	db	114	;'r'
   680  007FD5  65                 	db	101	;'e'
   681  007FD6  6E                 	db	110	;'n'
   682  007FD7  74                 	db	116	;'t'
   683  007FD8  20                 	db	32
   684  007FD9  73                 	db	115	;'s'
   685  007FDA  65                 	db	101	;'e'
   686  007FDB  71                 	db	113	;'q'
   687  007FDC  75                 	db	117	;'u'
   688  007FDD  65                 	db	101	;'e'
   689  007FDE  6E                 	db	110	;'n'
   690  007FDF  63                 	db	99	;'c'
   691  007FE0  65                 	db	101	;'e'
   692  007FE1  20                 	db	32
   693  007FE2  69                 	db	105	;'i'
   694  007FE3  73                 	db	115	;'s'
   695  007FE4  3A                 	db	58	;':'
   696  007FE5  20                 	db	32
   697  007FE6  00                 	db	0
   698  007FE7                     STR_2:
   699  007FE7  0A                 	db	10
   700  007FE8  43                 	db	67	;'C'
   701  007FE9  6F                 	db	111	;'o'
   702  007FEA  6E                 	db	110	;'n'
   703  007FEB  69                 	db	105	;'i'
   704  007FEC  74                 	db	116	;'t'
   705  007FED  69                 	db	105	;'i'
   706  007FEE  6E                 	db	110	;'n'
   707  007FEF  75                 	db	117	;'u'
   708  007FF0  69                 	db	105	;'i'
   709  007FF1  6E                 	db	110	;'n'
   710  007FF2  67                 	db	103	;'g'
   711  007FF3  20                 	db	32
   712  007FF4  73                 	db	115	;'s'
   713  007FF5  65                 	db	101	;'e'
   714  007FF6  71                 	db	113	;'q'
   715  007FF7  75                 	db	117	;'u'
   716  007FF8  65                 	db	101	;'e'
   717  007FF9  6E                 	db	110	;'n'
   718  007FFA  63                 	db	99	;'c'
   719  007FFB  65                 	db	101	;'e'
   720  007FFC  3A                 	db	58	;':'
   721  007FFD  00                 	db	0
   722  007FFE  00                 	db	0	; dummy byte at the end
   723  0000                     
   724                           	psect	nvCOMRAM
   725  000076                     __pnvCOMRAM:
   726                           	callstack 0
   727  000076                     _New_char_RX:
   728                           	callstack 0
   729  000076                     	ds	1
   730  0000                     _RCREG	set	4014
   731  0000                     _TXREG	set	4013
   732  0000                     _RCSTAbits	set	4011
   733  0000                     _TXSTAbits	set	4012
   734  0000                     _SPBRG	set	4015
   735  0000                     _INTCONbits	set	4082
   736  0000                     _PIE1bits	set	3997
   737  0000                     _PIR1bits	set	3998
   738  0000                     _TRISCbits	set	3988
   739  0000                     _PORTC	set	3970
   740  0000                     _LATC	set	3979
   741  0000                     _PORTD	set	3971
   742  0000                     _PORTB	set	3969
   743  0000                     _TRISD	set	3989
   744  0000                     _TRISB	set	3987
   745  0000                     _RCIF	set	31989
   746                           
   747                           ; #config settings
   748                           
   749                           	psect	cinit
   750  002B0E                     __pcinit:
   751                           	callstack 0
   752  002B0E                     start_initialization:
   753                           	callstack 0
   754  002B0E                     __initialization:
   755                           	callstack 0
   756                           
   757                           ; Initialize objects allocated to BANK0 (22 bytes)
   758                           ; load TBLPTR registers with __pidataBANK0
   759  002B0E  0E7E               	movlw	low __pidataBANK0
   760  002B10  6EF6               	movwf	tblptrl,c
   761  002B12  0E2E               	movlw	high __pidataBANK0
   762  002B14  6EF7               	movwf	tblptrh,c
   763  002B16  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   764  002B18  6EF8               	movwf	tblptru,c
   765  002B1A  EE00  F0B2         	lfsr	0,__pdataBANK0
   766  002B1E  EE10 F016          	lfsr	1,22
   767  002B22                     copy_data0:
   768  002B22  0009               	tblrd		*+
   769  002B24  CFF5 FFEE          	movff	tablat,postinc0
   770  002B28  50E5               	movf	postdec1,w,c
   771  002B2A  50E1               	movf	fsr1l,w,c
   772  002B2C  E1FA               	bnz	copy_data0
   773                           
   774                           ; Initialize objects allocated to COMRAM (4 bytes)
   775                           ; load TBLPTR registers with __pidataCOMRAM
   776  002B2E  0EA0               	movlw	low __pidataCOMRAM
   777  002B30  6EF6               	movwf	tblptrl,c
   778  002B32  0E2E               	movlw	high __pidataCOMRAM
   779  002B34  6EF7               	movwf	tblptrh,c
   780  002B36  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   781  002B38  6EF8               	movwf	tblptru,c
   782  002B3A  EE00  F072         	lfsr	0,__pdataCOMRAM
   783  002B3E  EE10 F004          	lfsr	1,4
   784  002B42                     copy_data1:
   785  002B42  0009               	tblrd		*+
   786  002B44  CFF5 FFEE          	movff	tablat,postinc0
   787  002B48  50E5               	movf	postdec1,w,c
   788  002B4A  50E1               	movf	fsr1l,w,c
   789  002B4C  E1FA               	bnz	copy_data1
   790                           
   791                           ; Clear objects allocated to BANK0 (50 bytes)
   792  002B4E  EE00  F080         	lfsr	0,__pbssBANK0
   793  002B52  0E32               	movlw	50
   794  002B54                     clear_0:
   795  002B54  6AEE               	clrf	postinc0,c
   796  002B56  06E8               	decf	wreg,f,c
   797  002B58  E1FD               	bnz	clear_0
   798                           
   799                           ; Clear objects allocated to COMRAM (27 bytes)
   800  002B5A  EE00  F057         	lfsr	0,__pbssCOMRAM
   801  002B5E  0E1B               	movlw	27
   802  002B60                     clear_1:
   803  002B60  6AEE               	clrf	postinc0,c
   804  002B62  06E8               	decf	wreg,f,c
   805  002B64  E1FD               	bnz	clear_1
   806  002B66                     end_of_initialization:
   807                           	callstack 0
   808  002B66                     __end_of__initialization:
   809                           	callstack 0
   810  002B66  9077               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   811  002B68  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   812  002B6A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   813  002B6C  6EF8               	movwf	tblptru,c
   814  002B6E  0100               	movlb	0
   815  002B70  EF0D  F017         	goto	_main	;jump to C main() function
   816                           
   817                           	psect	bssCOMRAM
   818  000057                     __pbssCOMRAM:
   819                           	callstack 0
   820  000057                     _Y_Pick_D:
   821                           	callstack 0
   822  000057                     	ds	2
   823  000059                     _X_Pick_D:
   824                           	callstack 0
   825  000059                     	ds	2
   826  00005B                     _Angle_diff:
   827                           	callstack 0
   828  00005B                     	ds	2
   829  00005D                     _Y_diff:
   830                           	callstack 0
   831  00005D                     	ds	2
   832  00005F                     _X_diff:
   833                           	callstack 0
   834  00005F                     	ds	2
   835  000061                     _Place_Angle:
   836                           	callstack 0
   837  000061                     	ds	2
   838  000063                     _Pick_Angle:
   839                           	callstack 0
   840  000063                     	ds	2
   841  000065                     _Y_Place:
   842                           	callstack 0
   843  000065                     	ds	2
   844  000067                     _Y_Pick:
   845                           	callstack 0
   846  000067                     	ds	2
   847  000069                     _X_Place:
   848                           	callstack 0
   849  000069                     	ds	2
   850  00006B                     _X_Pick:
   851                           	callstack 0
   852  00006B                     	ds	2
   853  00006D                     _RX_Char:
   854                           	callstack 0
   855  00006D                     	ds	1
   856  00006E                     _Rot_dir:
   857                           	callstack 0
   858  00006E                     	ds	1
   859  00006F                     _Y_dir:
   860                           	callstack 0
   861  00006F                     	ds	1
   862  000070                     _X_dir:
   863                           	callstack 0
   864  000070                     	ds	1
   865  000071                     _stop:
   866                           	callstack 0
   867  000071                     	ds	1
   868                           
   869                           	psect	dataCOMRAM
   870  000072                     __pdataCOMRAM:
   871                           	callstack 0
   872  000072                     _sequence:
   873                           	callstack 0
   874  000072                     	ds	4
   875                           
   876                           	psect	bssBANK0
   877  000080                     __pbssBANK0:
   878                           	callstack 0
   879  000080                     _testarray:
   880                           	callstack 0
   881  000080                     	ds	30
   882  00009E                     roundf@F528:
   883                           	callstack 0
   884  00009E                     	ds	4
   885  0000A2                     _angle_diff:
   886                           	callstack 0
   887  0000A2                     	ds	2
   888  0000A4                     _Place_Angle_D:
   889                           	callstack 0
   890  0000A4                     	ds	2
   891  0000A6                     _Y_Place_D:
   892                           	callstack 0
   893  0000A6                     	ds	2
   894  0000A8                     _X_Place_D:
   895                           	callstack 0
   896  0000A8                     	ds	2
   897  0000AA                     _Pick_Angle_D:
   898                           	callstack 0
   899  0000AA                     	ds	2
   900  0000AC                     _rotation:
   901                           	callstack 0
   902  0000AC                     	ds	2
   903  0000AE                     _displacement_Y:
   904                           	callstack 0
   905  0000AE                     	ds	2
   906  0000B0                     _displacement_X:
   907                           	callstack 0
   908  0000B0                     	ds	2
   909                           
   910                           	psect	dataBANK0
   911  0000B2                     __pdataBANK0:
   912                           	callstack 0
   913  0000B2                     	ds	4
   914  0000B6                     	ds	4
   915  0000BA                     add_component@F3132:
   916                           	callstack 0
   917  0000BA                     	ds	2
   918  0000BC                     _lenth_of_array:
   919                           	callstack 0
   920  0000BC                     	ds	2
   921  0000BE                     _input_str:
   922                           	callstack 0
   923  0000BE                     	ds	10
   924                           
   925                           	psect	cstackBANK0
   926  0000C8                     __pcstackBANK0:
   927                           	callstack 0
   928  0000C8                     ?___fltol:
   929                           	callstack 0
   930  0000C8                     start_up_menu@ip:
   931                           	callstack 0
   932  0000C8                     ___fltol@f1:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x0
   936  0000C8                     	ds	1
   937  0000C9                     start_up_menu@i:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x1
   941  0000C9                     	ds	2
   942  0000CB                     start_up_menu@i_540:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x3
   946  0000CB                     	ds	1
   947  0000CC                     ??___fltol:
   948                           
   949                           ; 1 bytes @ 0x4
   950  0000CC                     	ds	1
   951  0000CD                     start_up_menu@i_543:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x5
   955  0000CD                     	ds	2
   956  0000CF                     start_up_menu@i_546:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x7
   960  0000CF                     	ds	2
   961                           
   962                           	psect	cstackCOMRAM
   963  000001                     __pcstackCOMRAM:
   964                           	callstack 0
   965  000001                     ??_Rx_char_USART:
   966  000001                     
   967                           ; 2 bytes @ 0x0
   968  000001                     	ds	5
   969  000006                     Rx_char_USART@i:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x5
   973  000006                     	ds	2
   974  000008                     ?_strlen:
   975                           	callstack 0
   976  000008                     ?_isspace:
   977                           	callstack 0
   978  000008                     ?_isdigit:
   979                           	callstack 0
   980  000008                     ?___wmul:
   981                           	callstack 0
   982  000008                     ?___fladd:
   983                           	callstack 0
   984  000008                     ?___flmul:
   985                           	callstack 0
   986  000008                     ?___flneg:
   987                           	callstack 0
   988  000008                     ?___xxtofl:
   989                           	callstack 0
   990  000008                     serial_tx_char@val:
   991                           	callstack 0
   992  000008                     ms_delay@val:
   993                           	callstack 0
   994  000008                     direct@prev:
   995                           	callstack 0
   996  000008                     ___wmul@multiplier:
   997                           	callstack 0
   998  000008                     isdigit@c:
   999                           	callstack 0
  1000  000008                     isspace@c:
  1001                           	callstack 0
  1002  000008                     strlen@s:
  1003                           	callstack 0
  1004  000008                     ___flneg@f1:
  1005                           	callstack 0
  1006  000008                     ___fladd@b:
  1007                           	callstack 0
  1008  000008                     ___flmul@b:
  1009                           	callstack 0
  1010  000008                     ___xxtofl@val:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x7
  1014  000008                     	ds	1
  1015  000009                     print_string@strng:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x8
  1019  000009                     	ds	1
  1020  00000A                     ??_isspace:
  1021  00000A                     ??_isdigit:
  1022  00000A                     ms_delay@i:
  1023                           	callstack 0
  1024  00000A                     direct@next:
  1025                           	callstack 0
  1026  00000A                     ___wmul@multiplicand:
  1027                           	callstack 0
  1028  00000A                     strlen@a:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x9
  1032  00000A                     	ds	1
  1033  00000B                     ??_print_string:
  1034                           
  1035                           ; 1 bytes @ 0xA
  1036  00000B                     	ds	1
  1037  00000C                     ??_direct:
  1038  00000C                     ??___xxtofl:
  1039  00000C                     ?___memrchr:
  1040                           	callstack 0
  1041  00000C                     ms_delay@j:
  1042                           	callstack 0
  1043  00000C                     ___wmul@product:
  1044                           	callstack 0
  1045  00000C                     memmove@d1:
  1046                           	callstack 0
  1047  00000C                     strncat@d:
  1048                           	callstack 0
  1049  00000C                     ___memrchr@m:
  1050                           	callstack 0
  1051  00000C                     ___fladd@a:
  1052                           	callstack 0
  1053  00000C                     ___flmul@a:
  1054                           	callstack 0
  1055                           
  1056                           ; 4 bytes @ 0xB
  1057  00000C                     	ds	1
  1058  00000D                     print_string@i:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0xC
  1062  00000D                     	ds	1
  1063  00000E                     X_axis@direction:
  1064                           	callstack 0
  1065  00000E                     Y_axis@direction:
  1066                           	callstack 0
  1067  00000E                     Twister@direction:
  1068                           	callstack 0
  1069  00000E                     _isspace$1087:
  1070                           	callstack 0
  1071  00000E                     memmove@s1:
  1072                           	callstack 0
  1073  00000E                     strncat@s:
  1074                           	callstack 0
  1075  00000E                     ___memrchr@c:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xD
  1079  00000E                     	ds	1
  1080  00000F                     ??_change_sequence:
  1081  00000F                     ?_atoi:
  1082                           	callstack 0
  1083  00000F                     atoi@s:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0xE
  1087  00000F                     	ds	1
  1088  000010                     ??___fladd:
  1089  000010                     ??___flmul:
  1090  000010                     ___xxtofl@sign:
  1091                           	callstack 0
  1092  000010                     memmove@n:
  1093                           	callstack 0
  1094  000010                     strncat@n:
  1095                           	callstack 0
  1096  000010                     ___memrchr@n:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0xF
  1100  000010                     	ds	1
  1101  000011                     ??_atoi:
  1102  000011                     ___xxtofl@exp:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x10
  1106  000011                     	ds	1
  1107  000012                     ??_memmove:
  1108  000012                     ??___memrchr:
  1109  000012                     change_sequence@i:
  1110                           	callstack 0
  1111  000012                     ___xxtofl@arg:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x11
  1115  000012                     	ds	2
  1116  000014                     ___fladd@signs:
  1117                           	callstack 0
  1118  000014                     ___flmul@sign:
  1119                           	callstack 0
  1120  000014                     memmove@d:
  1121                           	callstack 0
  1122  000014                     ___memrchr@s:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x13
  1126  000014                     	ds	1
  1127  000015                     ___fladd@aexp:
  1128                           	callstack 0
  1129  000015                     atoi@neg:
  1130                           	callstack 0
  1131  000015                     ___flmul@grs:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x14
  1135  000015                     	ds	1
  1136  000016                     ?_strrchr:
  1137                           	callstack 0
  1138  000016                     ?___fldiv:
  1139                           	callstack 0
  1140  000016                     ___fladd@bexp:
  1141                           	callstack 0
  1142  000016                     memmove@s:
  1143                           	callstack 0
  1144  000016                     strrchr@s:
  1145                           	callstack 0
  1146  000016                     ___fldiv@b:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x15
  1150  000016                     	ds	1
  1151  000017                     ___fladd@grs:
  1152                           	callstack 0
  1153  000017                     _atoi$1069:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x16
  1157  000017                     	ds	1
  1158  000018                     ?___flsub:
  1159                           	callstack 0
  1160  000018                     strrchr@c:
  1161                           	callstack 0
  1162  000018                     ___flsub@b:
  1163                           	callstack 0
  1164                           
  1165                           ; 4 bytes @ 0x17
  1166  000018                     	ds	1
  1167  000019                     ___flmul@aexp:
  1168                           	callstack 0
  1169  000019                     _atoi$1071:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x18
  1173  000019                     	ds	1
  1174  00001A                     ___flmul@bexp:
  1175                           	callstack 0
  1176  00001A                     remove_component@ptr:
  1177                           	callstack 0
  1178  00001A                     ___fldiv@a:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x19
  1182  00001A                     	ds	1
  1183  00001B                     _atoi$1070:
  1184                           	callstack 0
  1185  00001B                     ___flmul@prod:
  1186                           	callstack 0
  1187                           
  1188                           ; 4 bytes @ 0x1A
  1189  00001B                     	ds	1
  1190  00001C                     remove_component@rm_comp:
  1191                           	callstack 0
  1192  00001C                     atoi@n:
  1193                           	callstack 0
  1194  00001C                     ___flsub@a:
  1195                           	callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x1B
  1198  00001C                     	ds	1
  1199  00001D                     remove_component@indxToDel:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x1C
  1203  00001D                     	ds	1
  1204  00001E                     ??_add_component:
  1205  00001E                     ??___fldiv:
  1206                           
  1207                           ; 1 bytes @ 0x1D
  1208  00001E                     	ds	1
  1209  00001F                     ___flmul@temp:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x1E
  1213  00001F                     	ds	1
  1214  000020                     add_component@add_to_sequence:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x1F
  1218  000020                     	ds	2
  1219  000022                     add_component@ip:
  1220                           	callstack 0
  1221  000022                     ___fldiv@rem:
  1222                           	callstack 0
  1223                           
  1224                           ; 4 bytes @ 0x21
  1225  000022                     	ds	4
  1226  000026                     ___fldiv@sign:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0x25
  1230  000026                     	ds	1
  1231  000027                     ___fldiv@new_exp:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x26
  1235  000027                     	ds	2
  1236  000029                     ___fldiv@grs:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x28
  1240  000029                     	ds	4
  1241  00002D                     ___fldiv@bexp:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x2C
  1245  00002D                     	ds	1
  1246  00002E                     ___fldiv@aexp:
  1247                           	callstack 0
  1248                           
  1249                           ; 1 bytes @ 0x2D
  1250  00002E                     	ds	1
  1251  00002F                     ___flge@ff1:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x2E
  1255  00002F                     	ds	4
  1256  000033                     ___flge@ff2:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x32
  1260  000033                     	ds	4
  1261  000037                     ??___flge:
  1262                           
  1263                           ; 1 bytes @ 0x36
  1264  000037                     	ds	4
  1265  00003B                     ??_pick_and_place:
  1266  00003B                     ?_roundf:
  1267                           	callstack 0
  1268  00003B                     roundf@x:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x3A
  1272  00003B                     	ds	2
  1273  00003D                     pick_and_place@i:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x3C
  1277  00003D                     	ds	2
  1278  00003F                     ??_roundf:
  1279  00003F                     _pick_and_place$590:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x3E
  1283  00003F                     	ds	2
  1284  000041                     pick_and_place@i_591:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x40
  1288  000041                     	ds	2
  1289  000043                     _pick_and_place$593:
  1290                           	callstack 0
  1291  000043                     _roundf$1339:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x42
  1295  000043                     	ds	2
  1296  000045                     pick_and_place@i_594:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x44
  1300  000045                     	ds	2
  1301  000047                     pick_and_place@i_596:
  1302                           	callstack 0
  1303  000047                     roundf@e:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x46
  1307  000047                     	ds	2
  1308  000049                     _pick_and_place$597:
  1309                           	callstack 0
  1310  000049                     _roundf$1338:
  1311                           	callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x48
  1314  000049                     	ds	2
  1315  00004B                     pick_and_place@i_598:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x4A
  1319  00004B                     	ds	2
  1320  00004D                     _pick_and_place$599:
  1321                           	callstack 0
  1322  00004D                     roundf@u:
  1323                           	callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x4C
  1326  00004D                     	ds	2
  1327  00004F                     pick_and_place@i_600:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x4E
  1331  00004F                     	ds	2
  1332  000051                     pick_and_place@Componnt:
  1333                           	callstack 0
  1334  000051                     roundf@y:
  1335                           	callstack 0
  1336                           
  1337                           ; 4 bytes @ 0x50
  1338  000051                     	ds	1
  1339  000052                     ??_start_up_menu:
  1340                           
  1341                           ; 1 bytes @ 0x51
  1342  000052                     	ds	3
  1343  000055                     ___fltol@sign1:
  1344                           	callstack 0
  1345                           
  1346                           ; 1 bytes @ 0x54
  1347  000055                     	ds	1
  1348  000056                     ___fltol@exp1:
  1349                           	callstack 0
  1350                           
  1351                           ; 1 bytes @ 0x55
  1352  000056                     	ds	1
  1353  000057                     
  1354                           ; 1 bytes @ 0x56
  1355 ;;
  1356 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1357 ;;
  1358 ;; *************** function _main *****************
  1359 ;; Defined at:
  1360 ;;		line 186 in file "main.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  RX_Char         1    0        unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1374 ;;      Params:         0       0       0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0
  1377 ;;      Totals:         0       0       0       0       0       0       0
  1378 ;;Total ram usage:        0 bytes
  1379 ;; Hardware stack levels required when called: 6
  1380 ;; This function calls:
  1381 ;;		_init_PORTS
  1382 ;;		_init_USART
  1383 ;;		_init_interrupts
  1384 ;;		_start_up_menu
  1385 ;; This function is called by:
  1386 ;;		Startup code after reset
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text0
  1391  002E1A                     __ptext0:
  1392                           	callstack 0
  1393  002E1A                     _main:
  1394                           	callstack 25
  1395  002E1A  FFFF               	dw	65535	; assembler added errata NOP
  1396                           
  1397                           ;main.c: 190:     init_PORTS();
  1398  002E1C  EC1E  F017         	call	_init_PORTS	;wreg free
  1399  002E20                     
  1400                           ;main.c: 191:     init_USART();
  1401  002E20  EC7F  F016         	call	_init_USART	;wreg free
  1402  002E24                     
  1403                           ;main.c: 192:     init_interrupts();
  1404  002E24  EC4A  F017         	call	_init_interrupts	;wreg free
  1405  002E28                     
  1406                           ;main.c: 194:     (INTCONbits.GIE = 1);
  1407  002E28  8EF2               	bsf	242,7,c	;volatile
  1408  002E2A                     l4803:
  1409  002E2A  FFFF               	dw	65535	; assembler added errata NOP
  1410                           
  1411                           ;main.c: 196:         New_char_RX=0;
  1412  002E2C  0E00               	movlw	0
  1413  002E2E  6E76               	movwf	_New_char_RX^0,c
  1414  002E30                     
  1415                           ;main.c: 197:         start_up_menu();
  1416  002E30  EC77  F00C         	call	_start_up_menu	;wreg free
  1417  002E34  EF15  F017         	goto	l4803
  1418  002E38  EF41  F000         	goto	start
  1419  002E3C                     __end_of_main:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _start_up_menu *****************
  1423 ;; Defined at:
  1424 ;;		line 205 in file "main.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  i               2    7[BANK0 ] int 
  1429 ;;  i               2    5[BANK0 ] int 
  1430 ;;  i               2    3[BANK0 ] int 
  1431 ;;  i               2    1[BANK0 ] int 
  1432 ;;  ip              1    0[BANK0 ] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1442 ;;      Params:         0       0       0       0       0       0       0
  1443 ;;      Locals:         0       9       0       0       0       0       0
  1444 ;;      Temps:          3       0       0       0       0       0       0
  1445 ;;      Totals:         3       9       0       0       0       0       0
  1446 ;;Total ram usage:       12 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 5
  1449 ;; This function calls:
  1450 ;;		_add_component
  1451 ;;		_change_sequence
  1452 ;;		_pick_and_place
  1453 ;;		_print_string
  1454 ;;		_remove_component
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text1
  1461  0018EE                     __ptext1:
  1462                           	callstack 0
  1463  0018EE                     _start_up_menu:
  1464                           	callstack 0
  1465  0018EE  FFFF               	dw	65535	; assembler added errata NOP
  1466  0018F0                     
  1467                           ;main.c: 209:     print_string("\n1. Default Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component");
  1468  0018F0  0ED7               	movlw	low STR_1
  1469  0018F2  6E09               	movwf	print_string@strng^0,c
  1470  0018F4  0E7D               	movlw	high STR_1
  1471  0018F6  6E0A               	movwf	(print_string@strng+1)^0,c
  1472  0018F8  ECBC  F014         	call	_print_string	;wreg free
  1473  0018FC                     l4665:
  1474  0018FC  FFFF               	dw	65535	; assembler added errata NOP
  1475                           
  1476                           ;main.c: 214:         if(New_char_RX){
  1477  0018FE  5076               	movf	_New_char_RX^0,w,c
  1478  001900  B4D8               	btfsc	status,2,c
  1479  001902  EF85  F00C         	goto	u5341
  1480  001906  EF88  F00C         	goto	u5340
  1481  00190A                     u5341:
  1482  00190A  FFFF               	dw	65535	; assembler added errata NOP
  1483  00190C  EF7E  F00C         	goto	l4665
  1484  001910                     u5340:
  1485  001910  FFFF               	dw	65535	; assembler added errata NOP
  1486  001912                     
  1487                           ;main.c: 215:             unsigned char ip = input_str[0];
  1488  001912  C0BE  F0C8         	movff	_input_str,start_up_menu@ip	;volatile
  1489  001916                     
  1490                           ;main.c: 217:             New_char_RX=0;
  1491  001916  0E00               	movlw	0
  1492  001918  6E76               	movwf	_New_char_RX^0,c
  1493                           
  1494                           ;main.c: 218:             switch(ip){
  1495  00191A  EFEF  F00D         	goto	l4749
  1496  00191E                     l4671:
  1497  00191E  FFFF               	dw	65535	; assembler added errata NOP
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;main.c: 220:                     print_string("\nConitinuing sequence:");
  1501  001920  0EE7               	movlw	low STR_2
  1502  001922  6E09               	movwf	print_string@strng^0,c
  1503  001924  0E7F               	movlw	high STR_2
  1504  001926  6E0A               	movwf	(print_string@strng+1)^0,c
  1505  001928  ECBC  F014         	call	_print_string	;wreg free
  1506                           
  1507                           ;main.c: 221:                     print_string(sequence);
  1508  00192C  0E72               	movlw	low _sequence
  1509  00192E  6E09               	movwf	print_string@strng^0,c
  1510  001930  0E00               	movlw	high _sequence
  1511  001932  6E0A               	movwf	(print_string@strng+1)^0,c
  1512  001934  ECBC  F014         	call	_print_string	;wreg free
  1513                           
  1514                           ;main.c: 222:                     print_string("\nEnter 'Q' to exit to MAIN MENU");
  1515  001938  0EFF               	movlw	low STR_3
  1516  00193A  6E09               	movwf	print_string@strng^0,c
  1517  00193C  0E7E               	movlw	high STR_3
  1518  00193E  6E0A               	movwf	(print_string@strng+1)^0,c
  1519  001940  ECBC  F014         	call	_print_string	;wreg free
  1520                           
  1521                           ;main.c: 223:                     while(!New_char_RX){
  1522  001944  EFD5  F00C         	goto	l4681
  1523  001948                     l4673:
  1524  001948  FFFF               	dw	65535	; assembler added errata NOP
  1525                           
  1526                           ;main.c: 224:                         int i =0;
  1527  00194A  0E00               	movlw	0
  1528  00194C  0100               	movlb	0	; () banked
  1529  00194E  6FCA               	movwf	(start_up_menu@i+1)& (0+255),b
  1530  001950  0E00               	movlw	0
  1531  001952  6FC9               	movwf	start_up_menu@i& (0+255),b
  1532  001954                     l4675:
  1533  001954  FFFF               	dw	65535	; assembler added errata NOP
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;main.c: 226:                             pick_and_place(sequence[i]);
  1537  001956  0E72               	movlw	low _sequence
  1538  001958  25C9               	addwf	start_up_menu@i& (0+255),w,b
  1539  00195A  6ED9               	movwf	fsr2l,c
  1540  00195C  0E00               	movlw	high _sequence
  1541  00195E  21CA               	addwfc	(start_up_menu@i+1)& (0+255),w,b
  1542  001960  6EDA               	movwf	fsr2h,c
  1543  001962  50DF               	movf	indf2,w,c
  1544  001964  EC43  F000         	call	_pick_and_place
  1545  001968                     
  1546                           ;main.c: 227:                         }while(sequence[i++]!='\n'&& !stop);
  1547  001968  0100               	movlb	0	; () banked
  1548  00196A  51C9               	movf	start_up_menu@i& (0+255),w,b
  1549  00196C  6E52               	movwf	??_start_up_menu^0,c
  1550  00196E  51CA               	movf	(start_up_menu@i+1)& (0+255),w,b
  1551  001970  6E53               	movwf	(??_start_up_menu+1)^0,c
  1552  001972  4BC9               	infsnz	start_up_menu@i& (0+255),f,b
  1553  001974  2BCA               	incf	(start_up_menu@i+1)& (0+255),f,b
  1554  001976  0E72               	movlw	low _sequence
  1555  001978  2452               	addwf	??_start_up_menu^0,w,c
  1556  00197A  6ED9               	movwf	fsr2l,c
  1557  00197C  0E00               	movlw	high _sequence
  1558  00197E  2053               	addwfc	(??_start_up_menu+1)^0,w,c
  1559  001980  6EDA               	movwf	fsr2h,c
  1560  001982  0E0A               	movlw	10
  1561  001984  18DE               	xorwf	postinc2,w,c
  1562  001986  B4D8               	btfsc	status,2,c
  1563  001988  EFC8  F00C         	goto	u5351
  1564  00198C  EFCB  F00C         	goto	u5350
  1565  001990                     u5351:
  1566  001990  FFFF               	dw	65535	; assembler added errata NOP
  1567  001992  EFD5  F00C         	goto	l4681
  1568  001996                     u5350:
  1569  001996  FFFF               	dw	65535	; assembler added errata NOP
  1570  001998                     
  1571                           ; BSR set to: 0
  1572  001998  5071               	movf	_stop^0,w,c
  1573  00199A  B4D8               	btfsc	status,2,c
  1574  00199C  EFD2  F00C         	goto	u5361
  1575  0019A0  EFD5  F00C         	goto	u5360
  1576  0019A4                     u5361:
  1577  0019A4  FFFF               	dw	65535	; assembler added errata NOP
  1578  0019A6  EFAA  F00C         	goto	l4675
  1579  0019AA                     u5360:
  1580  0019AA                     l4681:
  1581  0019AA  FFFF               	dw	65535	; assembler added errata NOP
  1582                           
  1583                           ;main.c: 223:                     while(!New_char_RX){
  1584  0019AC  5076               	movf	_New_char_RX^0,w,c
  1585  0019AE  B4D8               	btfsc	status,2,c
  1586  0019B0  EFDC  F00C         	goto	u5371
  1587  0019B4  EFDF  F00C         	goto	u5370
  1588  0019B8                     u5371:
  1589  0019B8  FFFF               	dw	65535	; assembler added errata NOP
  1590  0019BA  EFA4  F00C         	goto	l4673
  1591  0019BE                     u5370:
  1592  0019BE  FFFF               	dw	65535	; assembler added errata NOP
  1593  0019C0  EF13  F00E         	goto	l215
  1594  0019C4                     l4683:
  1595  0019C4  FFFF               	dw	65535	; assembler added errata NOP
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;main.c: 232:                     change_sequence();
  1599  0019C6  EC70  F014         	call	_change_sequence	;wreg free
  1600  0019CA                     
  1601                           ;main.c: 233:                     print_string("\nConitinuing sequence:");
  1602  0019CA  0EE7               	movlw	low STR_2
  1603  0019CC  6E09               	movwf	print_string@strng^0,c
  1604  0019CE  0E7F               	movlw	high STR_2
  1605  0019D0  6E0A               	movwf	(print_string@strng+1)^0,c
  1606  0019D2  ECBC  F014         	call	_print_string	;wreg free
  1607  0019D6                     
  1608                           ;main.c: 234:                     print_string(sequence);
  1609  0019D6  0E72               	movlw	low _sequence
  1610  0019D8  6E09               	movwf	print_string@strng^0,c
  1611  0019DA  0E00               	movlw	high _sequence
  1612  0019DC  6E0A               	movwf	(print_string@strng+1)^0,c
  1613  0019DE  ECBC  F014         	call	_print_string	;wreg free
  1614  0019E2                     
  1615                           ;main.c: 235:                     print_string("\nEnter 'Q' to exit to MAIN MENU");
  1616  0019E2  0EFF               	movlw	low STR_3
  1617  0019E4  6E09               	movwf	print_string@strng^0,c
  1618  0019E6  0E7E               	movlw	high STR_3
  1619  0019E8  6E0A               	movwf	(print_string@strng+1)^0,c
  1620  0019EA  ECBC  F014         	call	_print_string	;wreg free
  1621  0019EE                     
  1622                           ;main.c: 236:                     stop=0;
  1623  0019EE  0E00               	movlw	0
  1624  0019F0  6E71               	movwf	_stop^0,c
  1625                           
  1626                           ;main.c: 237:                     while(!New_char_RX){
  1627  0019F2  EF2C  F00D         	goto	l4701
  1628  0019F6                     l4693:
  1629  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  1630                           
  1631                           ;main.c: 238:                         int i =0;
  1632  0019F8  0E00               	movlw	0
  1633  0019FA  0100               	movlb	0	; () banked
  1634  0019FC  6FCC               	movwf	(start_up_menu@i_540+1)& (0+255),b
  1635  0019FE  0E00               	movlw	0
  1636  001A00  6FCB               	movwf	start_up_menu@i_540& (0+255),b
  1637  001A02                     l4695:
  1638  001A02  FFFF               	dw	65535	; assembler added errata NOP
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;main.c: 240:                             pick_and_place(sequence[i]);
  1642  001A04  0E72               	movlw	low _sequence
  1643  001A06  25CB               	addwf	start_up_menu@i_540& (0+255),w,b
  1644  001A08  6ED9               	movwf	fsr2l,c
  1645  001A0A  0E00               	movlw	high _sequence
  1646  001A0C  21CC               	addwfc	(start_up_menu@i_540+1)& (0+255),w,b
  1647  001A0E  6EDA               	movwf	fsr2h,c
  1648  001A10  50DF               	movf	indf2,w,c
  1649  001A12  EC43  F000         	call	_pick_and_place
  1650  001A16                     
  1651                           ;main.c: 241:                         }while(sequence[i++]!='\n'&& !stop);
  1652  001A16  0100               	movlb	0	; () banked
  1653  001A18  51CB               	movf	start_up_menu@i_540& (0+255),w,b
  1654  001A1A  6E52               	movwf	??_start_up_menu^0,c
  1655  001A1C  51CC               	movf	(start_up_menu@i_540+1)& (0+255),w,b
  1656  001A1E  6E53               	movwf	(??_start_up_menu+1)^0,c
  1657  001A20  4BCB               	infsnz	start_up_menu@i_540& (0+255),f,b
  1658  001A22  2BCC               	incf	(start_up_menu@i_540+1)& (0+255),f,b
  1659  001A24  0E72               	movlw	low _sequence
  1660  001A26  2452               	addwf	??_start_up_menu^0,w,c
  1661  001A28  6ED9               	movwf	fsr2l,c
  1662  001A2A  0E00               	movlw	high _sequence
  1663  001A2C  2053               	addwfc	(??_start_up_menu+1)^0,w,c
  1664  001A2E  6EDA               	movwf	fsr2h,c
  1665  001A30  0E0A               	movlw	10
  1666  001A32  18DE               	xorwf	postinc2,w,c
  1667  001A34  B4D8               	btfsc	status,2,c
  1668  001A36  EF1F  F00D         	goto	u5381
  1669  001A3A  EF22  F00D         	goto	u5380
  1670  001A3E                     u5381:
  1671  001A3E  FFFF               	dw	65535	; assembler added errata NOP
  1672  001A40  EF2C  F00D         	goto	l4701
  1673  001A44                     u5380:
  1674  001A44  FFFF               	dw	65535	; assembler added errata NOP
  1675  001A46                     
  1676                           ; BSR set to: 0
  1677  001A46  5071               	movf	_stop^0,w,c
  1678  001A48  B4D8               	btfsc	status,2,c
  1679  001A4A  EF29  F00D         	goto	u5391
  1680  001A4E  EF2C  F00D         	goto	u5390
  1681  001A52                     u5391:
  1682  001A52  FFFF               	dw	65535	; assembler added errata NOP
  1683  001A54  EF01  F00D         	goto	l4695
  1684  001A58                     u5390:
  1685  001A58                     l4701:
  1686  001A58  FFFF               	dw	65535	; assembler added errata NOP
  1687                           
  1688                           ;main.c: 237:                     while(!New_char_RX){
  1689  001A5A  5076               	movf	_New_char_RX^0,w,c
  1690  001A5C  B4D8               	btfsc	status,2,c
  1691  001A5E  EF33  F00D         	goto	u5401
  1692  001A62  EF36  F00D         	goto	u5400
  1693  001A66                     u5401:
  1694  001A66  FFFF               	dw	65535	; assembler added errata NOP
  1695  001A68  EFFB  F00C         	goto	l4693
  1696  001A6C                     u5400:
  1697  001A6C  FFFF               	dw	65535	; assembler added errata NOP
  1698  001A6E                     l4703:
  1699  001A6E  FFFF               	dw	65535	; assembler added errata NOP
  1700                           
  1701                           ;main.c: 243:                     stop=0;
  1702  001A70  0E00               	movlw	0
  1703  001A72  6E71               	movwf	_stop^0,c
  1704                           
  1705                           ;main.c: 244:                     break;
  1706  001A74  EF13  F00E         	goto	l215
  1707  001A78                     l4705:
  1708  001A78  FFFF               	dw	65535	; assembler added errata NOP
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;main.c: 247:                     add_component();
  1712  001A7A  EC16  F00E         	call	_add_component	;wreg free
  1713  001A7E                     
  1714                           ;main.c: 248:                     print_string("\nConitinuing sequence:");
  1715  001A7E  0EE7               	movlw	low STR_2
  1716  001A80  6E09               	movwf	print_string@strng^0,c
  1717  001A82  0E7F               	movlw	high STR_2
  1718  001A84  6E0A               	movwf	(print_string@strng+1)^0,c
  1719  001A86  ECBC  F014         	call	_print_string	;wreg free
  1720  001A8A                     
  1721                           ;main.c: 249:                     print_string(sequence);
  1722  001A8A  0E72               	movlw	low _sequence
  1723  001A8C  6E09               	movwf	print_string@strng^0,c
  1724  001A8E  0E00               	movlw	high _sequence
  1725  001A90  6E0A               	movwf	(print_string@strng+1)^0,c
  1726  001A92  ECBC  F014         	call	_print_string	;wreg free
  1727  001A96                     
  1728                           ;main.c: 250:                     print_string("\nEnter 'Q' to exit to MAIN MENU");
  1729  001A96  0EFF               	movlw	low STR_3
  1730  001A98  6E09               	movwf	print_string@strng^0,c
  1731  001A9A  0E7E               	movlw	high STR_3
  1732  001A9C  6E0A               	movwf	(print_string@strng+1)^0,c
  1733  001A9E  ECBC  F014         	call	_print_string	;wreg free
  1734  001AA2                     
  1735                           ;main.c: 251:                     stop=0;
  1736  001AA2  0E00               	movlw	0
  1737  001AA4  6E71               	movwf	_stop^0,c
  1738                           
  1739                           ;main.c: 252:                     while(!New_char_RX){
  1740  001AA6  EF86  F00D         	goto	l4723
  1741  001AAA                     l4715:
  1742  001AAA  FFFF               	dw	65535	; assembler added errata NOP
  1743                           
  1744                           ;main.c: 253:                         int i =0;
  1745  001AAC  0E00               	movlw	0
  1746  001AAE  0100               	movlb	0	; () banked
  1747  001AB0  6FCE               	movwf	(start_up_menu@i_543+1)& (0+255),b
  1748  001AB2  0E00               	movlw	0
  1749  001AB4  6FCD               	movwf	start_up_menu@i_543& (0+255),b
  1750  001AB6                     l4717:
  1751  001AB6  FFFF               	dw	65535	; assembler added errata NOP
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;main.c: 255:                             pick_and_place(sequence[i]);
  1755  001AB8  0E72               	movlw	low _sequence
  1756  001ABA  25CD               	addwf	start_up_menu@i_543& (0+255),w,b
  1757  001ABC  6ED9               	movwf	fsr2l,c
  1758  001ABE  0E00               	movlw	high _sequence
  1759  001AC0  21CE               	addwfc	(start_up_menu@i_543+1)& (0+255),w,b
  1760  001AC2  6EDA               	movwf	fsr2h,c
  1761  001AC4  50DF               	movf	indf2,w,c
  1762  001AC6  EC43  F000         	call	_pick_and_place
  1763  001ACA                     
  1764                           ;main.c: 256:                         }while(sequence[i++]!='\n' && !stop);
  1765  001ACA  0100               	movlb	0	; () banked
  1766  001ACC  51CD               	movf	start_up_menu@i_543& (0+255),w,b
  1767  001ACE  6E52               	movwf	??_start_up_menu^0,c
  1768  001AD0  51CE               	movf	(start_up_menu@i_543+1)& (0+255),w,b
  1769  001AD2  6E53               	movwf	(??_start_up_menu+1)^0,c
  1770  001AD4  4BCD               	infsnz	start_up_menu@i_543& (0+255),f,b
  1771  001AD6  2BCE               	incf	(start_up_menu@i_543+1)& (0+255),f,b
  1772  001AD8  0E72               	movlw	low _sequence
  1773  001ADA  2452               	addwf	??_start_up_menu^0,w,c
  1774  001ADC  6ED9               	movwf	fsr2l,c
  1775  001ADE  0E00               	movlw	high _sequence
  1776  001AE0  2053               	addwfc	(??_start_up_menu+1)^0,w,c
  1777  001AE2  6EDA               	movwf	fsr2h,c
  1778  001AE4  0E0A               	movlw	10
  1779  001AE6  18DE               	xorwf	postinc2,w,c
  1780  001AE8  B4D8               	btfsc	status,2,c
  1781  001AEA  EF79  F00D         	goto	u5411
  1782  001AEE  EF7C  F00D         	goto	u5410
  1783  001AF2                     u5411:
  1784  001AF2  FFFF               	dw	65535	; assembler added errata NOP
  1785  001AF4  EF86  F00D         	goto	l4723
  1786  001AF8                     u5410:
  1787  001AF8  FFFF               	dw	65535	; assembler added errata NOP
  1788  001AFA                     
  1789                           ; BSR set to: 0
  1790  001AFA  5071               	movf	_stop^0,w,c
  1791  001AFC  B4D8               	btfsc	status,2,c
  1792  001AFE  EF83  F00D         	goto	u5421
  1793  001B02  EF86  F00D         	goto	u5420
  1794  001B06                     u5421:
  1795  001B06  FFFF               	dw	65535	; assembler added errata NOP
  1796  001B08  EF5B  F00D         	goto	l4717
  1797  001B0C                     u5420:
  1798  001B0C                     l4723:
  1799  001B0C  FFFF               	dw	65535	; assembler added errata NOP
  1800                           
  1801                           ;main.c: 252:                     while(!New_char_RX){
  1802  001B0E  5076               	movf	_New_char_RX^0,w,c
  1803  001B10  B4D8               	btfsc	status,2,c
  1804  001B12  EF8D  F00D         	goto	u5431
  1805  001B16  EF90  F00D         	goto	u5430
  1806  001B1A                     u5431:
  1807  001B1A  FFFF               	dw	65535	; assembler added errata NOP
  1808  001B1C  EF55  F00D         	goto	l4715
  1809  001B20                     u5430:
  1810  001B20  FFFF               	dw	65535	; assembler added errata NOP
  1811  001B22  EF37  F00D         	goto	l4703
  1812  001B26                     l4727:
  1813  001B26  FFFF               	dw	65535	; assembler added errata NOP
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;main.c: 262:                     remove_component();
  1817  001B28  EC95  F013         	call	_remove_component	;wreg free
  1818  001B2C                     
  1819                           ;main.c: 263:                     print_string("\nConitinuing sequence:");
  1820  001B2C  0EE7               	movlw	low STR_2
  1821  001B2E  6E09               	movwf	print_string@strng^0,c
  1822  001B30  0E7F               	movlw	high STR_2
  1823  001B32  6E0A               	movwf	(print_string@strng+1)^0,c
  1824  001B34  ECBC  F014         	call	_print_string	;wreg free
  1825  001B38                     
  1826                           ;main.c: 264:                     print_string(sequence);
  1827  001B38  0E72               	movlw	low _sequence
  1828  001B3A  6E09               	movwf	print_string@strng^0,c
  1829  001B3C  0E00               	movlw	high _sequence
  1830  001B3E  6E0A               	movwf	(print_string@strng+1)^0,c
  1831  001B40  ECBC  F014         	call	_print_string	;wreg free
  1832  001B44                     
  1833                           ;main.c: 265:                     print_string("\nEnter 'Q' to exit to MAIN MENU");
  1834  001B44  0EFF               	movlw	low STR_3
  1835  001B46  6E09               	movwf	print_string@strng^0,c
  1836  001B48  0E7E               	movlw	high STR_3
  1837  001B4A  6E0A               	movwf	(print_string@strng+1)^0,c
  1838  001B4C  ECBC  F014         	call	_print_string	;wreg free
  1839                           
  1840                           ;main.c: 267:                     while(!New_char_RX){
  1841  001B50  EFDB  F00D         	goto	l4743
  1842  001B54                     l4735:
  1843  001B54  FFFF               	dw	65535	; assembler added errata NOP
  1844                           
  1845                           ;main.c: 268:                         int i =0;
  1846  001B56  0E00               	movlw	0
  1847  001B58  0100               	movlb	0	; () banked
  1848  001B5A  6FD0               	movwf	(start_up_menu@i_546+1)& (0+255),b
  1849  001B5C  0E00               	movlw	0
  1850  001B5E  6FCF               	movwf	start_up_menu@i_546& (0+255),b
  1851  001B60                     l4737:
  1852  001B60  FFFF               	dw	65535	; assembler added errata NOP
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;main.c: 270:                             pick_and_place(sequence[i]);
  1856  001B62  0E72               	movlw	low _sequence
  1857  001B64  25CF               	addwf	start_up_menu@i_546& (0+255),w,b
  1858  001B66  6ED9               	movwf	fsr2l,c
  1859  001B68  0E00               	movlw	high _sequence
  1860  001B6A  21D0               	addwfc	(start_up_menu@i_546+1)& (0+255),w,b
  1861  001B6C  6EDA               	movwf	fsr2h,c
  1862  001B6E  50DF               	movf	indf2,w,c
  1863  001B70  EC43  F000         	call	_pick_and_place
  1864  001B74                     
  1865                           ;main.c: 271:                         }while(sequence[i++]!='\n'&& !stop);
  1866  001B74  0100               	movlb	0	; () banked
  1867  001B76  51CF               	movf	start_up_menu@i_546& (0+255),w,b
  1868  001B78  6E52               	movwf	??_start_up_menu^0,c
  1869  001B7A  51D0               	movf	(start_up_menu@i_546+1)& (0+255),w,b
  1870  001B7C  6E53               	movwf	(??_start_up_menu+1)^0,c
  1871  001B7E  4BCF               	infsnz	start_up_menu@i_546& (0+255),f,b
  1872  001B80  2BD0               	incf	(start_up_menu@i_546+1)& (0+255),f,b
  1873  001B82  0E72               	movlw	low _sequence
  1874  001B84  2452               	addwf	??_start_up_menu^0,w,c
  1875  001B86  6ED9               	movwf	fsr2l,c
  1876  001B88  0E00               	movlw	high _sequence
  1877  001B8A  2053               	addwfc	(??_start_up_menu+1)^0,w,c
  1878  001B8C  6EDA               	movwf	fsr2h,c
  1879  001B8E  0E0A               	movlw	10
  1880  001B90  18DE               	xorwf	postinc2,w,c
  1881  001B92  B4D8               	btfsc	status,2,c
  1882  001B94  EFCE  F00D         	goto	u5441
  1883  001B98  EFD1  F00D         	goto	u5440
  1884  001B9C                     u5441:
  1885  001B9C  FFFF               	dw	65535	; assembler added errata NOP
  1886  001B9E  EFDB  F00D         	goto	l4743
  1887  001BA2                     u5440:
  1888  001BA2  FFFF               	dw	65535	; assembler added errata NOP
  1889  001BA4                     
  1890                           ; BSR set to: 0
  1891  001BA4  5071               	movf	_stop^0,w,c
  1892  001BA6  B4D8               	btfsc	status,2,c
  1893  001BA8  EFD8  F00D         	goto	u5451
  1894  001BAC  EFDB  F00D         	goto	u5450
  1895  001BB0                     u5451:
  1896  001BB0  FFFF               	dw	65535	; assembler added errata NOP
  1897  001BB2  EFB0  F00D         	goto	l4737
  1898  001BB6                     u5450:
  1899  001BB6                     l4743:
  1900  001BB6  FFFF               	dw	65535	; assembler added errata NOP
  1901                           
  1902                           ;main.c: 267:                     while(!New_char_RX){
  1903  001BB8  5076               	movf	_New_char_RX^0,w,c
  1904  001BBA  B4D8               	btfsc	status,2,c
  1905  001BBC  EFE2  F00D         	goto	u5461
  1906  001BC0  EFE5  F00D         	goto	u5460
  1907  001BC4                     u5461:
  1908  001BC4  FFFF               	dw	65535	; assembler added errata NOP
  1909  001BC6  EFAA  F00D         	goto	l4735
  1910  001BCA                     u5460:
  1911  001BCA  FFFF               	dw	65535	; assembler added errata NOP
  1912  001BCC  EF13  F00E         	goto	l215
  1913  001BD0                     l4745:
  1914  001BD0  FFFF               	dw	65535	; assembler added errata NOP
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 275:                     New_char_RX=0;
  1918  001BD2  0E00               	movlw	0
  1919  001BD4  6E76               	movwf	_New_char_RX^0,c
  1920                           
  1921                           ;main.c: 276:                     stop=0;
  1922  001BD6  0E00               	movlw	0
  1923  001BD8  6E71               	movwf	_stop^0,c
  1924                           
  1925                           ;main.c: 277:                     break;
  1926  001BDA  EF13  F00E         	goto	l215
  1927  001BDE                     l4749:
  1928  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  1929  001BE0  0100               	movlb	0	; () banked
  1930  001BE2  51C8               	movf	start_up_menu@ip& (0+255),w,b
  1931  001BE4  6E52               	movwf	??_start_up_menu^0,c
  1932  001BE6  6A53               	clrf	(??_start_up_menu+1)^0,c
  1933                           
  1934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1935                           ; Switch size 1, requested type "simple"
  1936                           ; Number of cases is 1, Range of values is 0 to 0
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte            4     3 (average)
  1940                           ;	Chosen strategy is simple_byte
  1941  001BE8  5053               	movf	(??_start_up_menu+1)^0,w,c
  1942  001BEA  0A00               	xorlw	0	; case 0
  1943  001BEC  B4D8               	btfsc	status,2,c
  1944  001BEE  EFFB  F00D         	goto	l4925
  1945  001BF2  EF13  F00E         	goto	l215
  1946  001BF6                     l4925:
  1947  001BF6  FFFF               	dw	65535	; assembler added errata NOP
  1948                           
  1949                           ; BSR set to: 0
  1950                           ; Switch size 1, requested type "simple"
  1951                           ; Number of cases is 5, Range of values is 49 to 81
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte           16     9 (average)
  1955                           ;	Chosen strategy is simple_byte
  1956  001BF8  5052               	movf	??_start_up_menu^0,w,c
  1957  001BFA  0A31               	xorlw	49	; case 49
  1958  001BFC  B4D8               	btfsc	status,2,c
  1959  001BFE  EF8F  F00C         	goto	l4671
  1960  001C02  0A03               	xorlw	3	; case 50
  1961  001C04  B4D8               	btfsc	status,2,c
  1962  001C06  EFE2  F00C         	goto	l4683
  1963  001C0A  0A01               	xorlw	1	; case 51
  1964  001C0C  B4D8               	btfsc	status,2,c
  1965  001C0E  EF3C  F00D         	goto	l4705
  1966  001C12  0A07               	xorlw	7	; case 52
  1967  001C14  B4D8               	btfsc	status,2,c
  1968  001C16  EF93  F00D         	goto	l4727
  1969  001C1A  0A65               	xorlw	101	; case 81
  1970  001C1C  B4D8               	btfsc	status,2,c
  1971  001C1E  EFE8  F00D         	goto	l4745
  1972  001C22  EF13  F00E         	goto	l215
  1973  001C26                     l215:
  1974  001C26  FFFF               	dw	65535	; assembler added errata NOP
  1975  001C28  0012               	return		;funcret
  1976  001C2A  FFFF               	dw	65535	; errata NOP
  1977  001C2C                     __end_of_start_up_menu:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _remove_component *****************
  1981 ;; Defined at:
  1982 ;;		line 376 in file "main.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  indxToDel       2   28[COMRAM] int 
  1987 ;;  ptr             2   25[COMRAM] PTR unsigned char 
  1988 ;;		 -> NULL(0), sequence(4), 
  1989 ;;  rm_comp         1   27[COMRAM] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1999 ;;      Params:         0       0       0       0       0       0       0
  2000 ;;      Locals:         5       0       0       0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0
  2002 ;;      Totals:         5       0       0       0       0       0       0
  2003 ;;Total ram usage:        5 bytes
  2004 ;; Hardware stack levels used: 1
  2005 ;; Hardware stack levels required when called: 3
  2006 ;; This function calls:
  2007 ;;		_memmove
  2008 ;;		_print_string
  2009 ;;		_strlen
  2010 ;;		_strrchr
  2011 ;; This function is called by:
  2012 ;;		_start_up_menu
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text2
  2017  00272A                     __ptext2:
  2018                           	callstack 0
  2019  00272A                     _remove_component:
  2020                           	callstack 0
  2021  00272A  FFFF               	dw	65535	; assembler added errata NOP
  2022  00272C                     
  2023                           ;main.c: 377:     print_string("\nWhich component would you like to remove from the  seq
      +                          uence?\n");
  2024  00272C  0E6F               	movlw	low STR_20
  2025  00272E  6E09               	movwf	print_string@strng^0,c
  2026  002730  0E7E               	movlw	high STR_20
  2027  002732  6E0A               	movwf	(print_string@strng+1)^0,c
  2028  002734  ECBC  F014         	call	_print_string	;wreg free
  2029                           
  2030                           ;main.c: 378:     print_string(sequence);
  2031  002738  0E72               	movlw	low _sequence
  2032  00273A  6E09               	movwf	print_string@strng^0,c
  2033  00273C  0E00               	movlw	high _sequence
  2034  00273E  6E0A               	movwf	(print_string@strng+1)^0,c
  2035  002740  ECBC  F014         	call	_print_string	;wreg free
  2036  002744                     l4577:
  2037  002744  FFFF               	dw	65535	; assembler added errata NOP
  2038                           
  2039                           ;main.c: 380:         if(New_char_RX){
  2040  002746  5076               	movf	_New_char_RX^0,w,c
  2041  002748  B4D8               	btfsc	status,2,c
  2042  00274A  EFA9  F013         	goto	u5241
  2043  00274E  EFAC  F013         	goto	u5240
  2044  002752                     u5241:
  2045  002752  FFFF               	dw	65535	; assembler added errata NOP
  2046  002754  EFA2  F013         	goto	l4577
  2047  002758                     u5240:
  2048  002758  FFFF               	dw	65535	; assembler added errata NOP
  2049  00275A                     
  2050                           ;main.c: 381:             char rm_comp = input_str[0];
  2051  00275A  C0BE  F01C         	movff	_input_str,remove_component@rm_comp	;volatile
  2052  00275E                     
  2053                           ;main.c: 382:             char *ptr;;main.c: 383:             int indxToDel;;main.c: 384
      +                          :             ptr=strrchr(sequence,rm_comp);
  2054  00275E  0E72               	movlw	low _sequence
  2055  002760  6E16               	movwf	strrchr@s^0,c
  2056  002762  0E00               	movlw	high _sequence
  2057  002764  6E17               	movwf	(strrchr@s+1)^0,c
  2058  002766  C01C  F018         	movff	remove_component@rm_comp,strrchr@c
  2059  00276A  6A19               	clrf	(strrchr@c+1)^0,c
  2060  00276C  ECC1  F016         	call	_strrchr	;wreg free
  2061  002770  C016  F01A         	movff	?_strrchr,remove_component@ptr
  2062  002774  C017  F01B         	movff	?_strrchr+1,remove_component@ptr+1
  2063  002778                     
  2064                           ;main.c: 386:             if (rm_comp=='Q'){
  2065  002778  0E51               	movlw	81
  2066  00277A  181C               	xorwf	remove_component@rm_comp^0,w,c
  2067  00277C  A4D8               	btfss	status,2,c
  2068  00277E  EFC3  F013         	goto	u5251
  2069  002782  EFC6  F013         	goto	u5250
  2070  002786                     u5251:
  2071  002786  FFFF               	dw	65535	; assembler added errata NOP
  2072  002788  EFC9  F013         	goto	l4589
  2073  00278C                     u5250:
  2074  00278C  FFFF               	dw	65535	; assembler added errata NOP
  2075  00278E  EF02  F014         	goto	l4601
  2076  002792                     l4589:
  2077  002792  FFFF               	dw	65535	; assembler added errata NOP
  2078  002794  501A               	movf	remove_component@ptr^0,w,c
  2079  002796  101B               	iorwf	(remove_component@ptr+1)^0,w,c
  2080  002798  B4D8               	btfsc	status,2,c
  2081  00279A  EFD1  F013         	goto	u5261
  2082  00279E  EFD4  F013         	goto	u5260
  2083  0027A2                     u5261:
  2084  0027A2  FFFF               	dw	65535	; assembler added errata NOP
  2085  0027A4  EFF9  F013         	goto	l4599
  2086  0027A8                     u5260:
  2087  0027A8  FFFF               	dw	65535	; assembler added errata NOP
  2088  0027AA                     
  2089                           ;main.c: 390:                 indxToDel = ptr - sequence;
  2090  0027AA  0E72               	movlw	low _sequence
  2091  0027AC  5C1A               	subwf	remove_component@ptr^0,w,c
  2092  0027AE  6E1D               	movwf	remove_component@indxToDel^0,c
  2093  0027B0  0E00               	movlw	high _sequence
  2094  0027B2  581B               	subwfb	(remove_component@ptr+1)^0,w,c
  2095  0027B4  6E1E               	movwf	(remove_component@indxToDel+1)^0,c
  2096  0027B6                     
  2097                           ;main.c: 391:                 memmove(&sequence[indxToDel], &sequence[indxToDel + 1], st
      +                          rlen(sequence) - indxToDel);
  2098  0027B6  0E72               	movlw	low _sequence
  2099  0027B8  241D               	addwf	remove_component@indxToDel^0,w,c
  2100  0027BA  6E0C               	movwf	memmove@d1^0,c
  2101  0027BC  0E00               	movlw	high _sequence
  2102  0027BE  201E               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2103  0027C0  6E0D               	movwf	(memmove@d1+1)^0,c
  2104  0027C2  0E73               	movlw	low (_sequence+1)
  2105  0027C4  241D               	addwf	remove_component@indxToDel^0,w,c
  2106  0027C6  6E0E               	movwf	memmove@s1^0,c
  2107  0027C8  0E00               	movlw	high (_sequence+1)
  2108  0027CA  201E               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2109  0027CC  6E0F               	movwf	(memmove@s1+1)^0,c
  2110  0027CE  0E72               	movlw	low _sequence
  2111  0027D0  6E08               	movwf	strlen@s^0,c
  2112  0027D2  0E00               	movlw	high _sequence
  2113  0027D4  6E09               	movwf	(strlen@s+1)^0,c
  2114  0027D6  EC3D  F016         	call	_strlen	;wreg free
  2115  0027DA  501D               	movf	remove_component@indxToDel^0,w,c
  2116  0027DC  5C08               	subwf	?_strlen^0,w,c
  2117  0027DE  6E10               	movwf	memmove@n^0,c
  2118  0027E0  501E               	movf	(remove_component@indxToDel+1)^0,w,c
  2119  0027E2  5809               	subwfb	(?_strlen+1)^0,w,c
  2120  0027E4  6E11               	movwf	(memmove@n+1)^0,c
  2121  0027E6  EC26  F012         	call	_memmove	;wreg free
  2122  0027EA                     
  2123                           ;main.c: 392:                 stop=0;
  2124  0027EA  0E00               	movlw	0
  2125  0027EC  6E71               	movwf	_stop^0,c
  2126                           
  2127                           ;main.c: 393:                 break;
  2128  0027EE  EF02  F014         	goto	l4601
  2129  0027F2                     l4599:
  2130  0027F2  FFFF               	dw	65535	; assembler added errata NOP
  2131                           
  2132                           ;main.c: 397:                 print_string("\ncomponent is not in the sequence. \nTry se
      +                          lecting another component\n");
  2133  0027F4  0E2A               	movlw	low STR_21
  2134  0027F6  6E09               	movwf	print_string@strng^0,c
  2135  0027F8  0E7E               	movlw	high STR_21
  2136  0027FA  6E0A               	movwf	(print_string@strng+1)^0,c
  2137  0027FC  ECBC  F014         	call	_print_string	;wreg free
  2138  002800  EFA2  F013         	goto	l4577
  2139  002804                     l4601:
  2140  002804  FFFF               	dw	65535	; assembler added errata NOP
  2141                           
  2142                           ;main.c: 402:     New_char_RX=0;
  2143  002806  0E00               	movlw	0
  2144  002808  6E76               	movwf	_New_char_RX^0,c
  2145  00280A  0012               	return		;funcret
  2146  00280C  FFFF               	dw	65535	; errata NOP
  2147  00280E                     __end_of_remove_component:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _strrchr *****************
  2151 ;; Defined at:
  2152 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2155 ;;		 -> sequence(4), 
  2156 ;;  c               2   23[COMRAM] int 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2   21[COMRAM] PTR unsigned char 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2168 ;;      Params:         4       0       0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0
  2171 ;;      Totals:         4       0       0       0       0       0       0
  2172 ;;Total ram usage:        4 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 2
  2175 ;; This function calls:
  2176 ;;		___memrchr
  2177 ;;		_strlen
  2178 ;; This function is called by:
  2179 ;;		_remove_component
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text3
  2184  002D82                     __ptext3:
  2185                           	callstack 0
  2186  002D82                     _strrchr:
  2187                           	callstack 0
  2188  002D82  FFFF               	dw	65535	; assembler added errata NOP
  2189  002D84  C016  F00C         	movff	strrchr@s,___memrchr@m
  2190  002D88  C017  F00D         	movff	strrchr@s+1,___memrchr@m+1
  2191  002D8C  C018  F00E         	movff	strrchr@c,___memrchr@c
  2192  002D90  C019  F00F         	movff	strrchr@c+1,___memrchr@c+1
  2193  002D94  C016  F008         	movff	strrchr@s,strlen@s
  2194  002D98  C017  F009         	movff	strrchr@s+1,strlen@s+1
  2195  002D9C  EC3D  F016         	call	_strlen	;wreg free
  2196  002DA0  0E01               	movlw	1
  2197  002DA2  2408               	addwf	?_strlen^0,w,c
  2198  002DA4  6E10               	movwf	___memrchr@n^0,c
  2199  002DA6  0E00               	movlw	0
  2200  002DA8  2009               	addwfc	(?_strlen+1)^0,w,c
  2201  002DAA  6E11               	movwf	(___memrchr@n+1)^0,c
  2202  002DAC  EC46  F015         	call	___memrchr	;wreg free
  2203  002DB0  C00C  F016         	movff	?___memrchr,?_strrchr
  2204  002DB4  C00D  F017         	movff	?___memrchr+1,?_strrchr+1
  2205  002DB8  0012               	return		;funcret
  2206  002DBA  FFFF               	dw	65535	; errata NOP
  2207  002DBC                     __end_of_strrchr:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function ___memrchr *****************
  2211 ;; Defined at:
  2212 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  m               2   11[COMRAM] PTR const void 
  2215 ;;		 -> sequence(4), 
  2216 ;;  c               2   13[COMRAM] int 
  2217 ;;  n               2   15[COMRAM] unsigned int 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  s               2   19[COMRAM] PTR const unsigned char 
  2220 ;;		 -> sequence(4), 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  2   11[COMRAM] PTR void 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2230 ;;      Params:         6       0       0       0       0       0       0
  2231 ;;      Locals:         2       0       0       0       0       0       0
  2232 ;;      Temps:          2       0       0       0       0       0       0
  2233 ;;      Totals:        10       0       0       0       0       0       0
  2234 ;;Total ram usage:       10 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_strrchr
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text4
  2245  002A8C                     __ptext4:
  2246                           	callstack 0
  2247  002A8C                     ___memrchr:
  2248                           	callstack 0
  2249  002A8C  FFFF               	dw	65535	; assembler added errata NOP
  2250  002A8E  C00C  F014         	movff	___memrchr@m,___memrchr@s
  2251  002A92  C00D  F015         	movff	___memrchr@m+1,___memrchr@s+1
  2252  002A96  C00E  F00E         	movff	___memrchr@c,___memrchr@c
  2253  002A9A  6A0F               	clrf	(___memrchr@c+1)^0,c
  2254  002A9C  EF70  F015         	goto	l3943
  2255  002AA0                     l3937:
  2256  002AA0  FFFF               	dw	65535	; assembler added errata NOP
  2257  002AA2  5010               	movf	___memrchr@n^0,w,c
  2258  002AA4  2414               	addwf	___memrchr@s^0,w,c
  2259  002AA6  6ED9               	movwf	fsr2l,c
  2260  002AA8  5011               	movf	(___memrchr@n+1)^0,w,c
  2261  002AAA  2015               	addwfc	(___memrchr@s+1)^0,w,c
  2262  002AAC  6EDA               	movwf	fsr2h,c
  2263  002AAE  50DF               	movf	indf2,w,c
  2264  002AB0  6E12               	movwf	??___memrchr^0,c
  2265  002AB2  6A13               	clrf	(??___memrchr+1)^0,c
  2266  002AB4  500E               	movf	___memrchr@c^0,w,c
  2267  002AB6  1812               	xorwf	??___memrchr^0,w,c
  2268  002AB8  E107               	bnz	u4221
  2269  002ABA  500F               	movf	(___memrchr@c+1)^0,w,c
  2270  002ABC  1813               	xorwf	(??___memrchr+1)^0,w,c
  2271  002ABE  A4D8               	btfss	status,2,c
  2272  002AC0  EF64  F015         	goto	u4221
  2273  002AC4  EF67  F015         	goto	u4220
  2274  002AC8                     u4221:
  2275  002AC8  FFFF               	dw	65535	; assembler added errata NOP
  2276  002ACA  EF70  F015         	goto	l3943
  2277  002ACE                     u4220:
  2278  002ACE  FFFF               	dw	65535	; assembler added errata NOP
  2279  002AD0  5010               	movf	___memrchr@n^0,w,c
  2280  002AD2  2414               	addwf	___memrchr@s^0,w,c
  2281  002AD4  6E0C               	movwf	?___memrchr^0,c
  2282  002AD6  5011               	movf	(___memrchr@n+1)^0,w,c
  2283  002AD8  2015               	addwfc	(___memrchr@s+1)^0,w,c
  2284  002ADA  6E0D               	movwf	(?___memrchr+1)^0,c
  2285  002ADC  EF84  F015         	goto	l1178
  2286  002AE0                     l3943:
  2287  002AE0  FFFF               	dw	65535	; assembler added errata NOP
  2288  002AE2  0610               	decf	___memrchr@n^0,f,c
  2289  002AE4  A0D8               	btfss	status,0,c
  2290  002AE6  0611               	decf	(___memrchr@n+1)^0,f,c
  2291  002AE8  2810               	incf	___memrchr@n^0,w,c
  2292  002AEA  E106               	bnz	u4231
  2293  002AEC  2811               	incf	(___memrchr@n+1)^0,w,c
  2294  002AEE  A4D8               	btfss	status,2,c
  2295  002AF0  EF7C  F015         	goto	u4231
  2296  002AF4  EF7F  F015         	goto	u4230
  2297  002AF8                     u4231:
  2298  002AF8  FFFF               	dw	65535	; assembler added errata NOP
  2299  002AFA  EF50  F015         	goto	l3937
  2300  002AFE                     u4230:
  2301  002AFE  FFFF               	dw	65535	; assembler added errata NOP
  2302  002B00  0E00               	movlw	0
  2303  002B02  6E0C               	movwf	?___memrchr^0,c
  2304  002B04  0E00               	movlw	0
  2305  002B06  6E0D               	movwf	(?___memrchr+1)^0,c
  2306  002B08                     l1178:
  2307  002B08  FFFF               	dw	65535	; assembler added errata NOP
  2308  002B0A  0012               	return		;funcret
  2309  002B0C  FFFF               	dw	65535	; errata NOP
  2310  002B0E                     __end_of___memrchr:
  2311                           	callstack 0
  2312                           
  2313 ;; *************** function _memmove *****************
  2314 ;; Defined at:
  2315 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  d1              2   11[COMRAM] PTR void 
  2318 ;;		 -> sequence(4), 
  2319 ;;  s1              2   13[COMRAM] PTR const void 
  2320 ;;		 -> sequence(4), 
  2321 ;;  n               2   15[COMRAM] unsigned int 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2324 ;;		 -> sequence(4), 
  2325 ;;  d               2   19[COMRAM] PTR unsigned char 
  2326 ;;		 -> sequence(4), 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  2   11[COMRAM] PTR void 
  2329 ;; Registers used:
  2330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2336 ;;      Params:         6       0       0       0       0       0       0
  2337 ;;      Locals:         4       0       0       0       0       0       0
  2338 ;;      Temps:          2       0       0       0       0       0       0
  2339 ;;      Totals:        12       0       0       0       0       0       0
  2340 ;;Total ram usage:       12 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 1
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_remove_component
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text5
  2351  00244C                     __ptext5:
  2352                           	callstack 0
  2353  00244C                     _memmove:
  2354                           	callstack 0
  2355  00244C  FFFF               	dw	65535	; assembler added errata NOP
  2356  00244E  C00E  F016         	movff	memmove@s1,memmove@s
  2357  002452  C00F  F017         	movff	memmove@s1+1,memmove@s+1
  2358  002456  C00C  F014         	movff	memmove@d1,memmove@d
  2359  00245A  C00D  F015         	movff	memmove@d1+1,memmove@d+1
  2360  00245E  5014               	movf	memmove@d^0,w,c
  2361  002460  5C16               	subwf	memmove@s^0,w,c
  2362  002462  5015               	movf	(memmove@d+1)^0,w,c
  2363  002464  5817               	subwfb	(memmove@s+1)^0,w,c
  2364  002466  B0D8               	btfsc	status,0,c
  2365  002468  EF38  F012         	goto	u4351
  2366  00246C  EF3B  F012         	goto	u4350
  2367  002470                     u4351:
  2368  002470  FFFF               	dw	65535	; assembler added errata NOP
  2369  002472  EF78  F012         	goto	l4039
  2370  002476                     u4350:
  2371  002476  FFFF               	dw	65535	; assembler added errata NOP
  2372  002478  5010               	movf	memmove@n^0,w,c
  2373  00247A  2416               	addwf	memmove@s^0,w,c
  2374  00247C  6E12               	movwf	??_memmove^0,c
  2375  00247E  5011               	movf	(memmove@n+1)^0,w,c
  2376  002480  2017               	addwfc	(memmove@s+1)^0,w,c
  2377  002482  6E13               	movwf	(??_memmove+1)^0,c
  2378  002484  5012               	movf	??_memmove^0,w,c
  2379  002486  5C14               	subwf	memmove@d^0,w,c
  2380  002488  5013               	movf	(??_memmove+1)^0,w,c
  2381  00248A  5815               	subwfb	(memmove@d+1)^0,w,c
  2382  00248C  B0D8               	btfsc	status,0,c
  2383  00248E  EF4B  F012         	goto	u4361
  2384  002492  EF4E  F012         	goto	u4360
  2385  002496                     u4361:
  2386  002496  FFFF               	dw	65535	; assembler added errata NOP
  2387  002498  EF78  F012         	goto	l4039
  2388  00249C                     u4360:
  2389  00249C  FFFF               	dw	65535	; assembler added errata NOP
  2390  00249E  5010               	movf	memmove@n^0,w,c
  2391  0024A0  2616               	addwf	memmove@s^0,f,c
  2392  0024A2  5011               	movf	(memmove@n+1)^0,w,c
  2393  0024A4  2217               	addwfc	(memmove@s+1)^0,f,c
  2394  0024A6  5010               	movf	memmove@n^0,w,c
  2395  0024A8  2614               	addwf	memmove@d^0,f,c
  2396  0024AA  5011               	movf	(memmove@n+1)^0,w,c
  2397  0024AC  2215               	addwfc	(memmove@d+1)^0,f,c
  2398  0024AE                     l4035:
  2399  0024AE  FFFF               	dw	65535	; assembler added errata NOP
  2400  0024B0  0616               	decf	memmove@s^0,f,c
  2401  0024B2  A0D8               	btfss	status,0,c
  2402  0024B4  0617               	decf	(memmove@s+1)^0,f,c
  2403  0024B6  C016  FFD9         	movff	memmove@s,fsr2l
  2404  0024BA  C017  FFDA         	movff	memmove@s+1,fsr2h
  2405  0024BE  0614               	decf	memmove@d^0,f,c
  2406  0024C0  A0D8               	btfss	status,0,c
  2407  0024C2  0615               	decf	(memmove@d+1)^0,f,c
  2408  0024C4  C014  FFE1         	movff	memmove@d,fsr1l
  2409  0024C8  C015  FFE2         	movff	memmove@d+1,fsr1h
  2410  0024CC  CFDF FFE7          	movff	indf2,indf1
  2411  0024D0  0610               	decf	memmove@n^0,f,c
  2412  0024D2  A0D8               	btfss	status,0,c
  2413  0024D4  0611               	decf	(memmove@n+1)^0,f,c
  2414  0024D6  5010               	movf	memmove@n^0,w,c
  2415  0024D8  1011               	iorwf	(memmove@n+1)^0,w,c
  2416  0024DA  A4D8               	btfss	status,2,c
  2417  0024DC  EF72  F012         	goto	u4371
  2418  0024E0  EF75  F012         	goto	u4370
  2419  0024E4                     u4371:
  2420  0024E4  FFFF               	dw	65535	; assembler added errata NOP
  2421  0024E6  EF57  F012         	goto	l4035
  2422  0024EA                     u4370:
  2423  0024EA  FFFF               	dw	65535	; assembler added errata NOP
  2424  0024EC  EFA0  F012         	goto	l1134
  2425  0024F0                     l4039:
  2426  0024F0  FFFF               	dw	65535	; assembler added errata NOP
  2427  0024F2  5010               	movf	memmove@n^0,w,c
  2428  0024F4  1011               	iorwf	(memmove@n+1)^0,w,c
  2429  0024F6  B4D8               	btfsc	status,2,c
  2430  0024F8  EF80  F012         	goto	u4381
  2431  0024FC  EF83  F012         	goto	u4380
  2432  002500                     u4381:
  2433  002500  FFFF               	dw	65535	; assembler added errata NOP
  2434  002502  EFA0  F012         	goto	l1134
  2435  002506                     u4380:
  2436  002506  FFFF               	dw	65535	; assembler added errata NOP
  2437  002508                     l4041:
  2438  002508  FFFF               	dw	65535	; assembler added errata NOP
  2439  00250A  C016  FFD9         	movff	memmove@s,fsr2l
  2440  00250E  C017  FFDA         	movff	memmove@s+1,fsr2h
  2441  002512  C014  FFE1         	movff	memmove@d,fsr1l
  2442  002516  C015  FFE2         	movff	memmove@d+1,fsr1h
  2443  00251A  CFDF FFE7          	movff	indf2,indf1
  2444  00251E  4A16               	infsnz	memmove@s^0,f,c
  2445  002520  2A17               	incf	(memmove@s+1)^0,f,c
  2446  002522  4A14               	infsnz	memmove@d^0,f,c
  2447  002524  2A15               	incf	(memmove@d+1)^0,f,c
  2448  002526  0610               	decf	memmove@n^0,f,c
  2449  002528  A0D8               	btfss	status,0,c
  2450  00252A  0611               	decf	(memmove@n+1)^0,f,c
  2451  00252C  5010               	movf	memmove@n^0,w,c
  2452  00252E  1011               	iorwf	(memmove@n+1)^0,w,c
  2453  002530  A4D8               	btfss	status,2,c
  2454  002532  EF9D  F012         	goto	u4391
  2455  002536  EFA0  F012         	goto	u4390
  2456  00253A                     u4391:
  2457  00253A  FFFF               	dw	65535	; assembler added errata NOP
  2458  00253C  EF84  F012         	goto	l4041
  2459  002540                     u4390:
  2460  002540                     l1134:
  2461  002540  FFFF               	dw	65535	; assembler added errata NOP
  2462  002542  0012               	return		;funcret
  2463  002544  FFFF               	dw	65535	; errata NOP
  2464  002546                     __end_of_memmove:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _pick_and_place *****************
  2468 ;; Defined at:
  2469 ;;		line 542 in file "main.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  Componnt        1    wreg     unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  Componnt        1   80[COMRAM] unsigned char 
  2474 ;;  i               2   78[COMRAM] int 
  2475 ;;  i               2   74[COMRAM] int 
  2476 ;;  i               2   70[COMRAM] int 
  2477 ;;  i               2   68[COMRAM] int 
  2478 ;;  i               2   64[COMRAM] int 
  2479 ;;  i               2   60[COMRAM] int 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  2   65[None  ] int 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2489 ;;      Params:         0       0       0       0       0       0       0
  2490 ;;      Locals:        21       0       0       0       0       0       0
  2491 ;;      Temps:          2       0       0       0       0       0       0
  2492 ;;      Totals:        23       0       0       0       0       0       0
  2493 ;;Total ram usage:       23 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; Hardware stack levels required when called: 3
  2496 ;; This function calls:
  2497 ;;		_Twister
  2498 ;;		_X_axis
  2499 ;;		_Y_axis
  2500 ;;		___fldiv
  2501 ;;		___flge
  2502 ;;		___xxtofl
  2503 ;;		_direct
  2504 ;; This function is called by:
  2505 ;;		_start_up_menu
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text6
  2510  000086                     __ptext6:
  2511                           	callstack 0
  2512  000086                     _pick_and_place:
  2513                           	callstack 0
  2514  000086  FFFF               	dw	65535	; assembler added errata NOP
  2515                           
  2516                           ;incstack = 0
  2517                           ;pick_and_place@Componnt stored from wreg
  2518  000088  6E51               	movwf	pick_and_place@Componnt^0,c
  2519  00008A                     
  2520                           ;main.c: 542: int pick_and_place(char Componnt);main.c: 543: {;main.c: 546:         if(C
      +                          omponnt=='A')
  2521  00008A  0E41               	movlw	65
  2522  00008C  1851               	xorwf	pick_and_place@Componnt^0,w,c
  2523  00008E  A4D8               	btfss	status,2,c
  2524  000090  EF4C  F000         	goto	u4971
  2525  000094  EF4F  F000         	goto	u4970
  2526  000098                     u4971:
  2527  000098  FFFF               	dw	65535	; assembler added errata NOP
  2528  00009A  EF6A  F000         	goto	l4409
  2529  00009E                     u4970:
  2530  00009E  FFFF               	dw	65535	; assembler added errata NOP
  2531  0000A0                     
  2532                           ;main.c: 547:         {;main.c: 548:             X_Pick=3;
  2533  0000A0  0E00               	movlw	0
  2534  0000A2  6E6C               	movwf	(_X_Pick+1)^0,c
  2535  0000A4  0E03               	movlw	3
  2536  0000A6  6E6B               	movwf	_X_Pick^0,c
  2537                           
  2538                           ;main.c: 549:             Y_Pick=4;
  2539  0000A8  0E00               	movlw	0
  2540  0000AA  6E68               	movwf	(_Y_Pick+1)^0,c
  2541  0000AC  0E04               	movlw	4
  2542  0000AE  6E67               	movwf	_Y_Pick^0,c
  2543                           
  2544                           ;main.c: 550:             Pick_Angle=0;
  2545  0000B0  0E00               	movlw	0
  2546  0000B2  6E64               	movwf	(_Pick_Angle+1)^0,c
  2547  0000B4  0E00               	movlw	0
  2548  0000B6  6E63               	movwf	_Pick_Angle^0,c
  2549                           
  2550                           ;main.c: 552:             X_Place=17;
  2551  0000B8  0E00               	movlw	0
  2552  0000BA  6E6A               	movwf	(_X_Place+1)^0,c
  2553  0000BC  0E11               	movlw	17
  2554  0000BE  6E69               	movwf	_X_Place^0,c
  2555                           
  2556                           ;main.c: 553:             Y_Place=5;
  2557  0000C0  0E00               	movlw	0
  2558  0000C2  6E66               	movwf	(_Y_Place+1)^0,c
  2559  0000C4  0E05               	movlw	5
  2560  0000C6  6E65               	movwf	_Y_Place^0,c
  2561                           
  2562                           ;main.c: 554:             Place_Angle=270;
  2563  0000C8  0E01               	movlw	1
  2564  0000CA  6E62               	movwf	(_Place_Angle+1)^0,c
  2565  0000CC  0E0E               	movlw	14
  2566  0000CE  6E61               	movwf	_Place_Angle^0,c
  2567                           
  2568                           ;main.c: 555:         }
  2569  0000D0  EFDC  F000         	goto	l4421
  2570  0000D4                     l4409:
  2571  0000D4  FFFF               	dw	65535	; assembler added errata NOP
  2572  0000D6  0E42               	movlw	66
  2573  0000D8  1851               	xorwf	pick_and_place@Componnt^0,w,c
  2574  0000DA  A4D8               	btfss	status,2,c
  2575  0000DC  EF72  F000         	goto	u4981
  2576  0000E0  EF75  F000         	goto	u4980
  2577  0000E4                     u4981:
  2578  0000E4  FFFF               	dw	65535	; assembler added errata NOP
  2579  0000E6  EF90  F000         	goto	l4413
  2580  0000EA                     u4980:
  2581  0000EA  FFFF               	dw	65535	; assembler added errata NOP
  2582  0000EC                     
  2583                           ;main.c: 557:             X_Pick=3;
  2584  0000EC  0E00               	movlw	0
  2585  0000EE  6E6C               	movwf	(_X_Pick+1)^0,c
  2586  0000F0  0E03               	movlw	3
  2587  0000F2  6E6B               	movwf	_X_Pick^0,c
  2588                           
  2589                           ;main.c: 558:             Y_Pick=10;
  2590  0000F4  0E00               	movlw	0
  2591  0000F6  6E68               	movwf	(_Y_Pick+1)^0,c
  2592  0000F8  0E0A               	movlw	10
  2593  0000FA  6E67               	movwf	_Y_Pick^0,c
  2594                           
  2595                           ;main.c: 559:             Pick_Angle=90;
  2596  0000FC  0E00               	movlw	0
  2597  0000FE  6E64               	movwf	(_Pick_Angle+1)^0,c
  2598  000100  0E5A               	movlw	90
  2599  000102  6E63               	movwf	_Pick_Angle^0,c
  2600                           
  2601                           ;main.c: 561:             X_Place=10;
  2602  000104  0E00               	movlw	0
  2603  000106  6E6A               	movwf	(_X_Place+1)^0,c
  2604  000108  0E0A               	movlw	10
  2605  00010A  6E69               	movwf	_X_Place^0,c
  2606                           
  2607                           ;main.c: 562:             Y_Place=5;
  2608  00010C  0E00               	movlw	0
  2609  00010E  6E66               	movwf	(_Y_Place+1)^0,c
  2610  000110  0E05               	movlw	5
  2611  000112  6E65               	movwf	_Y_Place^0,c
  2612                           
  2613                           ;main.c: 563:             Place_Angle=180;
  2614  000114  0E00               	movlw	0
  2615  000116  6E62               	movwf	(_Place_Angle+1)^0,c
  2616  000118  0EB4               	movlw	180
  2617  00011A  6E61               	movwf	_Place_Angle^0,c
  2618                           
  2619                           ;main.c: 564:         }
  2620  00011C  EFDC  F000         	goto	l4421
  2621  000120                     l4413:
  2622  000120  FFFF               	dw	65535	; assembler added errata NOP
  2623  000122  0E43               	movlw	67
  2624  000124  1851               	xorwf	pick_and_place@Componnt^0,w,c
  2625  000126  A4D8               	btfss	status,2,c
  2626  000128  EF98  F000         	goto	u4991
  2627  00012C  EF9B  F000         	goto	u4990
  2628  000130                     u4991:
  2629  000130  FFFF               	dw	65535	; assembler added errata NOP
  2630  000132  EFB6  F000         	goto	l4417
  2631  000136                     u4990:
  2632  000136  FFFF               	dw	65535	; assembler added errata NOP
  2633  000138                     
  2634                           ;main.c: 566:             X_Pick=3;
  2635  000138  0E00               	movlw	0
  2636  00013A  6E6C               	movwf	(_X_Pick+1)^0,c
  2637  00013C  0E03               	movlw	3
  2638  00013E  6E6B               	movwf	_X_Pick^0,c
  2639                           
  2640                           ;main.c: 567:             Y_Pick=15;
  2641  000140  0E00               	movlw	0
  2642  000142  6E68               	movwf	(_Y_Pick+1)^0,c
  2643  000144  0E0F               	movlw	15
  2644  000146  6E67               	movwf	_Y_Pick^0,c
  2645                           
  2646                           ;main.c: 568:             Pick_Angle=90;
  2647  000148  0E00               	movlw	0
  2648  00014A  6E64               	movwf	(_Pick_Angle+1)^0,c
  2649  00014C  0E5A               	movlw	90
  2650  00014E  6E63               	movwf	_Pick_Angle^0,c
  2651                           
  2652                           ;main.c: 570:             X_Place=16;
  2653  000150  0E00               	movlw	0
  2654  000152  6E6A               	movwf	(_X_Place+1)^0,c
  2655  000154  0E10               	movlw	16
  2656  000156  6E69               	movwf	_X_Place^0,c
  2657                           
  2658                           ;main.c: 571:             Y_Place=14;
  2659  000158  0E00               	movlw	0
  2660  00015A  6E66               	movwf	(_Y_Place+1)^0,c
  2661  00015C  0E0E               	movlw	14
  2662  00015E  6E65               	movwf	_Y_Place^0,c
  2663                           
  2664                           ;main.c: 572:             Place_Angle=270;
  2665  000160  0E01               	movlw	1
  2666  000162  6E62               	movwf	(_Place_Angle+1)^0,c
  2667  000164  0E0E               	movlw	14
  2668  000166  6E61               	movwf	_Place_Angle^0,c
  2669                           
  2670                           ;main.c: 573:         }
  2671  000168  EFDC  F000         	goto	l4421
  2672  00016C                     l4417:
  2673  00016C  FFFF               	dw	65535	; assembler added errata NOP
  2674  00016E  0E44               	movlw	68
  2675  000170  1851               	xorwf	pick_and_place@Componnt^0,w,c
  2676  000172  A4D8               	btfss	status,2,c
  2677  000174  EFBE  F000         	goto	u5001
  2678  000178  EFC1  F000         	goto	u5000
  2679  00017C                     u5001:
  2680  00017C  FFFF               	dw	65535	; assembler added errata NOP
  2681  00017E  EFDC  F000         	goto	l320
  2682  000182                     u5000:
  2683  000182  FFFF               	dw	65535	; assembler added errata NOP
  2684  000184                     
  2685                           ;main.c: 575:             X_Pick=X_Pick_D;
  2686  000184  C059  F06B         	movff	_X_Pick_D,_X_Pick
  2687  000188  C05A  F06C         	movff	_X_Pick_D+1,_X_Pick+1
  2688                           
  2689                           ;main.c: 576:             Y_Pick=Y_Pick_D;
  2690  00018C  C057  F067         	movff	_Y_Pick_D,_Y_Pick
  2691  000190  C058  F068         	movff	_Y_Pick_D+1,_Y_Pick+1
  2692                           
  2693                           ;main.c: 577:             Pick_Angle=Pick_Angle_D;
  2694  000194  C0AA  F063         	movff	_Pick_Angle_D,_Pick_Angle
  2695  000198  C0AB  F064         	movff	_Pick_Angle_D+1,_Pick_Angle+1
  2696                           
  2697                           ;main.c: 579:             X_Place=X_Place_D;
  2698  00019C  C0A8  F069         	movff	_X_Place_D,_X_Place
  2699  0001A0  C0A9  F06A         	movff	_X_Place_D+1,_X_Place+1
  2700                           
  2701                           ;main.c: 580:             Y_Place=Y_Place_D;
  2702  0001A4  C0A6  F065         	movff	_Y_Place_D,_Y_Place
  2703  0001A8  C0A7  F066         	movff	_Y_Place_D+1,_Y_Place+1
  2704                           
  2705                           ;main.c: 581:             Place_Angle=Place_Angle_D;
  2706  0001AC  C0A4  F061         	movff	_Place_Angle_D,_Place_Angle
  2707  0001B0  C0A5  F062         	movff	_Place_Angle_D+1,_Place_Angle+1
  2708                           
  2709                           ;main.c: 582:         }
  2710  0001B4  EFDC  F000         	goto	l4421
  2711  0001B8                     l320:
  2712  0001B8                     l4421:
  2713  0001B8  FFFF               	dw	65535	; assembler added errata NOP
  2714                           
  2715                           ;main.c: 587:         X_dir=direct(X_diff,X_Pick);
  2716  0001BA  C05F  F008         	movff	_X_diff,direct@prev
  2717  0001BE  C060  F009         	movff	_X_diff+1,direct@prev+1
  2718  0001C2  C06B  F00A         	movff	_X_Pick,direct@next
  2719  0001C6  C06C  F00B         	movff	_X_Pick+1,direct@next+1
  2720  0001CA  ECDE  F016         	call	_direct	;wreg free
  2721  0001CE  6E70               	movwf	_X_dir^0,c
  2722                           
  2723                           ;main.c: 588:         Y_dir=direct(Y_diff, Y_Pick);
  2724  0001D0  C05D  F008         	movff	_Y_diff,direct@prev
  2725  0001D4  C05E  F009         	movff	_Y_diff+1,direct@prev+1
  2726  0001D8  C067  F00A         	movff	_Y_Pick,direct@next
  2727  0001DC  C068  F00B         	movff	_Y_Pick+1,direct@next+1
  2728  0001E0  ECDE  F016         	call	_direct	;wreg free
  2729  0001E4  6E6F               	movwf	_Y_dir^0,c
  2730                           
  2731                           ;main.c: 589:         Rot_dir=direct(Angle_diff,Pick_Angle);
  2732  0001E6  C05B  F008         	movff	_Angle_diff,direct@prev
  2733  0001EA  C05C  F009         	movff	_Angle_diff+1,direct@prev+1
  2734  0001EE  C063  F00A         	movff	_Pick_Angle,direct@next
  2735  0001F2  C064  F00B         	movff	_Pick_Angle+1,direct@next+1
  2736  0001F6  ECDE  F016         	call	_direct	;wreg free
  2737  0001FA  6E6E               	movwf	_Rot_dir^0,c
  2738  0001FC                     
  2739                           ;main.c: 591:         for(int i = 0; (i<(((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_Pi
      +                          ck-X_diff)))) && !stop; i++){X_axis(X_dir);}
  2740  0001FC  0E00               	movlw	0
  2741  0001FE  6E3E               	movwf	(pick_and_place@i+1)^0,c
  2742  000200  0E00               	movlw	0
  2743  000202  6E3D               	movwf	pick_and_place@i^0,c
  2744  000204  EF0A  F001         	goto	l4429
  2745  000208                     l4425:
  2746  000208  FFFF               	dw	65535	; assembler added errata NOP
  2747  00020A  5070               	movf	_X_dir^0,w,c
  2748  00020C  EC1C  F013         	call	_X_axis
  2749  000210  4A3D               	infsnz	pick_and_place@i^0,f,c
  2750  000212  2A3E               	incf	(pick_and_place@i+1)^0,f,c
  2751  000214                     l4429:
  2752  000214  FFFF               	dw	65535	; assembler added errata NOP
  2753  000216  505F               	movf	_X_diff^0,w,c
  2754  000218  5C6B               	subwf	_X_Pick^0,w,c
  2755  00021A  6E3B               	movwf	??_pick_and_place^0,c
  2756  00021C  5060               	movf	(_X_diff+1)^0,w,c
  2757  00021E  586C               	subwfb	(_X_Pick+1)^0,w,c
  2758  000220  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2759  000222  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2760  000224  EF1F  F001         	goto	u5010
  2761  000228  503C               	movf	(??_pick_and_place+1)^0,w,c
  2762  00022A  E106               	bnz	u5011
  2763  00022C  043B               	decf	??_pick_and_place^0,w,c
  2764  00022E  B0D8               	btfsc	status,0,c
  2765  000230  EF1C  F001         	goto	u5011
  2766  000234  EF1F  F001         	goto	u5010
  2767  000238                     u5011:
  2768  000238  FFFF               	dw	65535	; assembler added errata NOP
  2769  00023A  EF30  F001         	goto	l4433
  2770  00023E                     u5010:
  2771  00023E  FFFF               	dw	65535	; assembler added errata NOP
  2772  000240  505F               	movf	_X_diff^0,w,c
  2773  000242  5C6B               	subwf	_X_Pick^0,w,c
  2774  000244  6E3B               	movwf	??_pick_and_place^0,c
  2775  000246  5060               	movf	(_X_diff+1)^0,w,c
  2776  000248  586C               	subwfb	(_X_Pick+1)^0,w,c
  2777  00024A  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2778  00024C  1E3B               	comf	??_pick_and_place^0,f,c
  2779  00024E  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2780  000250  4A3B               	infsnz	??_pick_and_place^0,f,c
  2781  000252  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2782  000254  C03B  F03F         	movff	??_pick_and_place,_pick_and_place$590
  2783  000258  C03C  F040         	movff	??_pick_and_place+1,_pick_and_place$590+1
  2784  00025C  EF37  F001         	goto	l332
  2785  000260                     l4433:
  2786  000260  FFFF               	dw	65535	; assembler added errata NOP
  2787  000262  505F               	movf	_X_diff^0,w,c
  2788  000264  5C6B               	subwf	_X_Pick^0,w,c
  2789  000266  6E3F               	movwf	_pick_and_place$590^0,c
  2790  000268  5060               	movf	(_X_diff+1)^0,w,c
  2791  00026A  586C               	subwfb	(_X_Pick+1)^0,w,c
  2792  00026C  6E40               	movwf	(_pick_and_place$590+1)^0,c
  2793  00026E                     l332:
  2794  00026E  FFFF               	dw	65535	; assembler added errata NOP
  2795  000270  503F               	movf	_pick_and_place$590^0,w,c
  2796  000272  5C3D               	subwf	pick_and_place@i^0,w,c
  2797  000274  503E               	movf	(pick_and_place@i+1)^0,w,c
  2798  000276  0A80               	xorlw	128
  2799  000278  6E3B               	movwf	??_pick_and_place^0,c
  2800  00027A  5040               	movf	(_pick_and_place$590+1)^0,w,c
  2801  00027C  0A80               	xorlw	128
  2802  00027E  583B               	subwfb	??_pick_and_place^0,w,c
  2803  000280  B0D8               	btfsc	status,0,c
  2804  000282  EF45  F001         	goto	u5021
  2805  000286  EF48  F001         	goto	u5020
  2806  00028A                     u5021:
  2807  00028A  FFFF               	dw	65535	; assembler added errata NOP
  2808  00028C  EF52  F001         	goto	l4437
  2809  000290                     u5020:
  2810  000290  FFFF               	dw	65535	; assembler added errata NOP
  2811  000292  5071               	movf	_stop^0,w,c
  2812  000294  B4D8               	btfsc	status,2,c
  2813  000296  EF4F  F001         	goto	u5031
  2814  00029A  EF52  F001         	goto	u5030
  2815  00029E                     u5031:
  2816  00029E  FFFF               	dw	65535	; assembler added errata NOP
  2817  0002A0  EF04  F001         	goto	l4425
  2818  0002A4                     u5030:
  2819  0002A4                     l4437:
  2820  0002A4  FFFF               	dw	65535	; assembler added errata NOP
  2821                           
  2822                           ;main.c: 592:         for(int i = 0; (i<(((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_Pi
      +                          ck-Y_diff)))) && !stop; i++){Y_axis(Y_dir);}
  2823  0002A6  0E00               	movlw	0
  2824  0002A8  6E42               	movwf	(pick_and_place@i_591+1)^0,c
  2825  0002AA  0E00               	movlw	0
  2826  0002AC  6E41               	movwf	pick_and_place@i_591^0,c
  2827  0002AE  EF5F  F001         	goto	l4443
  2828  0002B2                     l4439:
  2829  0002B2  FFFF               	dw	65535	; assembler added errata NOP
  2830  0002B4  506F               	movf	_Y_dir^0,w,c
  2831  0002B6  ECA3  F012         	call	_Y_axis
  2832  0002BA  4A41               	infsnz	pick_and_place@i_591^0,f,c
  2833  0002BC  2A42               	incf	(pick_and_place@i_591+1)^0,f,c
  2834  0002BE                     l4443:
  2835  0002BE  FFFF               	dw	65535	; assembler added errata NOP
  2836  0002C0  505D               	movf	_Y_diff^0,w,c
  2837  0002C2  5C67               	subwf	_Y_Pick^0,w,c
  2838  0002C4  6E3B               	movwf	??_pick_and_place^0,c
  2839  0002C6  505E               	movf	(_Y_diff+1)^0,w,c
  2840  0002C8  5868               	subwfb	(_Y_Pick+1)^0,w,c
  2841  0002CA  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2842  0002CC  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  2843  0002CE  EF74  F001         	goto	u5040
  2844  0002D2  503C               	movf	(??_pick_and_place+1)^0,w,c
  2845  0002D4  E106               	bnz	u5041
  2846  0002D6  043B               	decf	??_pick_and_place^0,w,c
  2847  0002D8  B0D8               	btfsc	status,0,c
  2848  0002DA  EF71  F001         	goto	u5041
  2849  0002DE  EF74  F001         	goto	u5040
  2850  0002E2                     u5041:
  2851  0002E2  FFFF               	dw	65535	; assembler added errata NOP
  2852  0002E4  EF85  F001         	goto	l4447
  2853  0002E8                     u5040:
  2854  0002E8  FFFF               	dw	65535	; assembler added errata NOP
  2855  0002EA  505D               	movf	_Y_diff^0,w,c
  2856  0002EC  5C67               	subwf	_Y_Pick^0,w,c
  2857  0002EE  6E3B               	movwf	??_pick_and_place^0,c
  2858  0002F0  505E               	movf	(_Y_diff+1)^0,w,c
  2859  0002F2  5868               	subwfb	(_Y_Pick+1)^0,w,c
  2860  0002F4  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2861  0002F6  1E3B               	comf	??_pick_and_place^0,f,c
  2862  0002F8  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  2863  0002FA  4A3B               	infsnz	??_pick_and_place^0,f,c
  2864  0002FC  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  2865  0002FE  C03B  F043         	movff	??_pick_and_place,_pick_and_place$593
  2866  000302  C03C  F044         	movff	??_pick_and_place+1,_pick_and_place$593+1
  2867  000306  EF8C  F001         	goto	l341
  2868  00030A                     l4447:
  2869  00030A  FFFF               	dw	65535	; assembler added errata NOP
  2870  00030C  505D               	movf	_Y_diff^0,w,c
  2871  00030E  5C67               	subwf	_Y_Pick^0,w,c
  2872  000310  6E43               	movwf	_pick_and_place$593^0,c
  2873  000312  505E               	movf	(_Y_diff+1)^0,w,c
  2874  000314  5868               	subwfb	(_Y_Pick+1)^0,w,c
  2875  000316  6E44               	movwf	(_pick_and_place$593+1)^0,c
  2876  000318                     l341:
  2877  000318  FFFF               	dw	65535	; assembler added errata NOP
  2878  00031A  5043               	movf	_pick_and_place$593^0,w,c
  2879  00031C  5C41               	subwf	pick_and_place@i_591^0,w,c
  2880  00031E  5042               	movf	(pick_and_place@i_591+1)^0,w,c
  2881  000320  0A80               	xorlw	128
  2882  000322  6E3B               	movwf	??_pick_and_place^0,c
  2883  000324  5044               	movf	(_pick_and_place$593+1)^0,w,c
  2884  000326  0A80               	xorlw	128
  2885  000328  583B               	subwfb	??_pick_and_place^0,w,c
  2886  00032A  B0D8               	btfsc	status,0,c
  2887  00032C  EF9A  F001         	goto	u5051
  2888  000330  EF9D  F001         	goto	u5050
  2889  000334                     u5051:
  2890  000334  FFFF               	dw	65535	; assembler added errata NOP
  2891  000336  EFA7  F001         	goto	l4451
  2892  00033A                     u5050:
  2893  00033A  FFFF               	dw	65535	; assembler added errata NOP
  2894  00033C  5071               	movf	_stop^0,w,c
  2895  00033E  B4D8               	btfsc	status,2,c
  2896  000340  EFA4  F001         	goto	u5061
  2897  000344  EFA7  F001         	goto	u5060
  2898  000348                     u5061:
  2899  000348  FFFF               	dw	65535	; assembler added errata NOP
  2900  00034A  EF59  F001         	goto	l4439
  2901  00034E                     u5060:
  2902  00034E                     l4451:
  2903  00034E  FFFF               	dw	65535	; assembler added errata NOP
  2904                           
  2905                           ;main.c: 593:         for(int i = 0; (i<((Angle_diff-Pick_Angle)/3.6)) && !stop; i++){Tw
      +                          ister(Rot_dir);}
  2906  000350  0E00               	movlw	0
  2907  000352  6E46               	movwf	(pick_and_place@i_594+1)^0,c
  2908  000354  0E00               	movlw	0
  2909  000356  6E45               	movwf	pick_and_place@i_594^0,c
  2910  000358  EFB4  F001         	goto	l4457
  2911  00035C                     l4453:
  2912  00035C  FFFF               	dw	65535	; assembler added errata NOP
  2913  00035E  506E               	movf	_Rot_dir^0,w,c
  2914  000360  EC07  F014         	call	_Twister
  2915  000364  4A45               	infsnz	pick_and_place@i_594^0,f,c
  2916  000366  2A46               	incf	(pick_and_place@i_594+1)^0,f,c
  2917  000368                     l4457:
  2918  000368  FFFF               	dw	65535	; assembler added errata NOP
  2919  00036A  C045  F008         	movff	pick_and_place@i_594,___xxtofl@val
  2920  00036E  C046  F009         	movff	pick_and_place@i_594+1,___xxtofl@val+1
  2921  000372  0E00               	movlw	0
  2922  000374  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  2923  000376  0EFF               	movlw	-1
  2924  000378  6E0A               	movwf	(___xxtofl@val+2)^0,c
  2925  00037A  6E0B               	movwf	(___xxtofl@val+3)^0,c
  2926  00037C  0E01               	movlw	1
  2927  00037E  EC1B  F00F         	call	___xxtofl
  2928  000382  C008  F02F         	movff	?___xxtofl,___flge@ff1
  2929  000386  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
  2930  00038A  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
  2931  00038E  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
  2932  000392  0E66               	movlw	102
  2933  000394  6E1A               	movwf	___fldiv@a^0,c
  2934  000396  0E66               	movlw	102
  2935  000398  6E1B               	movwf	(___fldiv@a+1)^0,c
  2936  00039A  0E66               	movlw	102
  2937  00039C  6E1C               	movwf	(___fldiv@a+2)^0,c
  2938  00039E  0E40               	movlw	64
  2939  0003A0  6E1D               	movwf	(___fldiv@a+3)^0,c
  2940  0003A2  5063               	movf	_Pick_Angle^0,w,c
  2941  0003A4  5C5B               	subwf	_Angle_diff^0,w,c
  2942  0003A6  6E3B               	movwf	??_pick_and_place^0,c
  2943  0003A8  5064               	movf	(_Pick_Angle+1)^0,w,c
  2944  0003AA  585C               	subwfb	(_Angle_diff+1)^0,w,c
  2945  0003AC  6E3C               	movwf	(??_pick_and_place+1)^0,c
  2946  0003AE  C03B  F008         	movff	??_pick_and_place,___xxtofl@val
  2947  0003B2  C03C  F009         	movff	??_pick_and_place+1,___xxtofl@val+1
  2948  0003B6  0E00               	movlw	0
  2949  0003B8  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  2950  0003BA  0EFF               	movlw	-1
  2951  0003BC  6E0A               	movwf	(___xxtofl@val+2)^0,c
  2952  0003BE  6E0B               	movwf	(___xxtofl@val+3)^0,c
  2953  0003C0  0E01               	movlw	1
  2954  0003C2  EC1B  F00F         	call	___xxtofl
  2955  0003C6  C008  F016         	movff	?___xxtofl,___fldiv@b
  2956  0003CA  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  2957  0003CE  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  2958  0003D2  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  2959  0003D6  EC6B  F008         	call	___fldiv	;wreg free
  2960  0003DA  C016  F033         	movff	?___fldiv,___flge@ff2
  2961  0003DE  C017  F034         	movff	?___fldiv+1,___flge@ff2+1
  2962  0003E2  C018  F035         	movff	?___fldiv+2,___flge@ff2+2
  2963  0003E6  C019  F036         	movff	?___fldiv+3,___flge@ff2+3
  2964  0003EA  EC92  F011         	call	___flge	;wreg free
  2965  0003EE  B0D8               	btfsc	status,0,c
  2966  0003F0  EFFC  F001         	goto	u5071
  2967  0003F4  EFFF  F001         	goto	u5070
  2968  0003F8                     u5071:
  2969  0003F8  FFFF               	dw	65535	; assembler added errata NOP
  2970  0003FA  EF09  F002         	goto	l4461
  2971  0003FE                     u5070:
  2972  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  2973  000400  5071               	movf	_stop^0,w,c
  2974  000402  B4D8               	btfsc	status,2,c
  2975  000404  EF06  F002         	goto	u5081
  2976  000408  EF09  F002         	goto	u5080
  2977  00040C                     u5081:
  2978  00040C  FFFF               	dw	65535	; assembler added errata NOP
  2979  00040E  EFAE  F001         	goto	l4453
  2980  000412                     u5080:
  2981  000412                     l4461:
  2982  000412  FFFF               	dw	65535	; assembler added errata NOP
  2983                           
  2984                           ;main.c: 601:         X_dir=direct(X_Pick,X_Place);
  2985  000414  C06B  F008         	movff	_X_Pick,direct@prev
  2986  000418  C06C  F009         	movff	_X_Pick+1,direct@prev+1
  2987  00041C  C069  F00A         	movff	_X_Place,direct@next
  2988  000420  C06A  F00B         	movff	_X_Place+1,direct@next+1
  2989  000424  ECDE  F016         	call	_direct	;wreg free
  2990  000428  6E70               	movwf	_X_dir^0,c
  2991                           
  2992                           ;main.c: 602:         Y_dir=direct(Y_Pick,Y_Place);
  2993  00042A  C067  F008         	movff	_Y_Pick,direct@prev
  2994  00042E  C068  F009         	movff	_Y_Pick+1,direct@prev+1
  2995  000432  C065  F00A         	movff	_Y_Place,direct@next
  2996  000436  C066  F00B         	movff	_Y_Place+1,direct@next+1
  2997  00043A  ECDE  F016         	call	_direct	;wreg free
  2998  00043E  6E6F               	movwf	_Y_dir^0,c
  2999                           
  3000                           ;main.c: 603:         Rot_dir=direct(Pick_Angle,Place_Angle);
  3001  000440  C063  F008         	movff	_Pick_Angle,direct@prev
  3002  000444  C064  F009         	movff	_Pick_Angle+1,direct@prev+1
  3003  000448  C061  F00A         	movff	_Place_Angle,direct@next
  3004  00044C  C062  F00B         	movff	_Place_Angle+1,direct@next+1
  3005  000450  ECDE  F016         	call	_direct	;wreg free
  3006  000454  6E6E               	movwf	_Rot_dir^0,c
  3007  000456                     
  3008                           ;main.c: 605:         for(int i = 0; (i<(((X_Place-X_diff) > 0 ? (X_Place-X_diff) : -(X_
      +                          Place-X_diff)))) && !stop; i++){X_axis(X_dir);}
  3009  000456  0E00               	movlw	0
  3010  000458  6E48               	movwf	(pick_and_place@i_596+1)^0,c
  3011  00045A  0E00               	movlw	0
  3012  00045C  6E47               	movwf	pick_and_place@i_596^0,c
  3013  00045E  EF37  F002         	goto	l4469
  3014  000462                     l4465:
  3015  000462  FFFF               	dw	65535	; assembler added errata NOP
  3016  000464  5070               	movf	_X_dir^0,w,c
  3017  000466  EC1C  F013         	call	_X_axis
  3018  00046A  4A47               	infsnz	pick_and_place@i_596^0,f,c
  3019  00046C  2A48               	incf	(pick_and_place@i_596+1)^0,f,c
  3020  00046E                     l4469:
  3021  00046E  FFFF               	dw	65535	; assembler added errata NOP
  3022  000470  505F               	movf	_X_diff^0,w,c
  3023  000472  5C69               	subwf	_X_Place^0,w,c
  3024  000474  6E3B               	movwf	??_pick_and_place^0,c
  3025  000476  5060               	movf	(_X_diff+1)^0,w,c
  3026  000478  586A               	subwfb	(_X_Place+1)^0,w,c
  3027  00047A  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3028  00047C  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3029  00047E  EF4C  F002         	goto	u5090
  3030  000482  503C               	movf	(??_pick_and_place+1)^0,w,c
  3031  000484  E106               	bnz	u5091
  3032  000486  043B               	decf	??_pick_and_place^0,w,c
  3033  000488  B0D8               	btfsc	status,0,c
  3034  00048A  EF49  F002         	goto	u5091
  3035  00048E  EF4C  F002         	goto	u5090
  3036  000492                     u5091:
  3037  000492  FFFF               	dw	65535	; assembler added errata NOP
  3038  000494  EF5D  F002         	goto	l4473
  3039  000498                     u5090:
  3040  000498  FFFF               	dw	65535	; assembler added errata NOP
  3041  00049A  505F               	movf	_X_diff^0,w,c
  3042  00049C  5C69               	subwf	_X_Place^0,w,c
  3043  00049E  6E3B               	movwf	??_pick_and_place^0,c
  3044  0004A0  5060               	movf	(_X_diff+1)^0,w,c
  3045  0004A2  586A               	subwfb	(_X_Place+1)^0,w,c
  3046  0004A4  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3047  0004A6  1E3B               	comf	??_pick_and_place^0,f,c
  3048  0004A8  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3049  0004AA  4A3B               	infsnz	??_pick_and_place^0,f,c
  3050  0004AC  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3051  0004AE  C03B  F049         	movff	??_pick_and_place,_pick_and_place$597
  3052  0004B2  C03C  F04A         	movff	??_pick_and_place+1,_pick_and_place$597+1
  3053  0004B6  EF64  F002         	goto	l355
  3054  0004BA                     l4473:
  3055  0004BA  FFFF               	dw	65535	; assembler added errata NOP
  3056  0004BC  505F               	movf	_X_diff^0,w,c
  3057  0004BE  5C69               	subwf	_X_Place^0,w,c
  3058  0004C0  6E49               	movwf	_pick_and_place$597^0,c
  3059  0004C2  5060               	movf	(_X_diff+1)^0,w,c
  3060  0004C4  586A               	subwfb	(_X_Place+1)^0,w,c
  3061  0004C6  6E4A               	movwf	(_pick_and_place$597+1)^0,c
  3062  0004C8                     l355:
  3063  0004C8  FFFF               	dw	65535	; assembler added errata NOP
  3064  0004CA  5049               	movf	_pick_and_place$597^0,w,c
  3065  0004CC  5C47               	subwf	pick_and_place@i_596^0,w,c
  3066  0004CE  5048               	movf	(pick_and_place@i_596+1)^0,w,c
  3067  0004D0  0A80               	xorlw	128
  3068  0004D2  6E3B               	movwf	??_pick_and_place^0,c
  3069  0004D4  504A               	movf	(_pick_and_place$597+1)^0,w,c
  3070  0004D6  0A80               	xorlw	128
  3071  0004D8  583B               	subwfb	??_pick_and_place^0,w,c
  3072  0004DA  B0D8               	btfsc	status,0,c
  3073  0004DC  EF72  F002         	goto	u5101
  3074  0004E0  EF75  F002         	goto	u5100
  3075  0004E4                     u5101:
  3076  0004E4  FFFF               	dw	65535	; assembler added errata NOP
  3077  0004E6  EF7F  F002         	goto	l4477
  3078  0004EA                     u5100:
  3079  0004EA  FFFF               	dw	65535	; assembler added errata NOP
  3080  0004EC  5071               	movf	_stop^0,w,c
  3081  0004EE  B4D8               	btfsc	status,2,c
  3082  0004F0  EF7C  F002         	goto	u5111
  3083  0004F4  EF7F  F002         	goto	u5110
  3084  0004F8                     u5111:
  3085  0004F8  FFFF               	dw	65535	; assembler added errata NOP
  3086  0004FA  EF31  F002         	goto	l4465
  3087  0004FE                     u5110:
  3088  0004FE                     l4477:
  3089  0004FE  FFFF               	dw	65535	; assembler added errata NOP
  3090                           
  3091                           ;main.c: 606:         for(int i = 0; (i<(((Y_Place-Y_diff) > 0 ? (Y_Place-Y_diff) : -(Y_
      +                          Place-Y_diff)))) && !stop; i++){Y_axis(Y_dir);}
  3092  000500  0E00               	movlw	0
  3093  000502  6E4C               	movwf	(pick_and_place@i_598+1)^0,c
  3094  000504  0E00               	movlw	0
  3095  000506  6E4B               	movwf	pick_and_place@i_598^0,c
  3096  000508  EF8C  F002         	goto	l4483
  3097  00050C                     l4479:
  3098  00050C  FFFF               	dw	65535	; assembler added errata NOP
  3099  00050E  506F               	movf	_Y_dir^0,w,c
  3100  000510  ECA3  F012         	call	_Y_axis
  3101  000514  4A4B               	infsnz	pick_and_place@i_598^0,f,c
  3102  000516  2A4C               	incf	(pick_and_place@i_598+1)^0,f,c
  3103  000518                     l4483:
  3104  000518  FFFF               	dw	65535	; assembler added errata NOP
  3105  00051A  505D               	movf	_Y_diff^0,w,c
  3106  00051C  5C65               	subwf	_Y_Place^0,w,c
  3107  00051E  6E3B               	movwf	??_pick_and_place^0,c
  3108  000520  505E               	movf	(_Y_diff+1)^0,w,c
  3109  000522  5866               	subwfb	(_Y_Place+1)^0,w,c
  3110  000524  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3111  000526  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3112  000528  EFA1  F002         	goto	u5120
  3113  00052C  503C               	movf	(??_pick_and_place+1)^0,w,c
  3114  00052E  E106               	bnz	u5121
  3115  000530  043B               	decf	??_pick_and_place^0,w,c
  3116  000532  B0D8               	btfsc	status,0,c
  3117  000534  EF9E  F002         	goto	u5121
  3118  000538  EFA1  F002         	goto	u5120
  3119  00053C                     u5121:
  3120  00053C  FFFF               	dw	65535	; assembler added errata NOP
  3121  00053E  EFB2  F002         	goto	l4487
  3122  000542                     u5120:
  3123  000542  FFFF               	dw	65535	; assembler added errata NOP
  3124  000544  505D               	movf	_Y_diff^0,w,c
  3125  000546  5C65               	subwf	_Y_Place^0,w,c
  3126  000548  6E3B               	movwf	??_pick_and_place^0,c
  3127  00054A  505E               	movf	(_Y_diff+1)^0,w,c
  3128  00054C  5866               	subwfb	(_Y_Place+1)^0,w,c
  3129  00054E  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3130  000550  1E3B               	comf	??_pick_and_place^0,f,c
  3131  000552  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3132  000554  4A3B               	infsnz	??_pick_and_place^0,f,c
  3133  000556  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3134  000558  C03B  F04D         	movff	??_pick_and_place,_pick_and_place$599
  3135  00055C  C03C  F04E         	movff	??_pick_and_place+1,_pick_and_place$599+1
  3136  000560  EFB9  F002         	goto	l364
  3137  000564                     l4487:
  3138  000564  FFFF               	dw	65535	; assembler added errata NOP
  3139  000566  505D               	movf	_Y_diff^0,w,c
  3140  000568  5C65               	subwf	_Y_Place^0,w,c
  3141  00056A  6E4D               	movwf	_pick_and_place$599^0,c
  3142  00056C  505E               	movf	(_Y_diff+1)^0,w,c
  3143  00056E  5866               	subwfb	(_Y_Place+1)^0,w,c
  3144  000570  6E4E               	movwf	(_pick_and_place$599+1)^0,c
  3145  000572                     l364:
  3146  000572  FFFF               	dw	65535	; assembler added errata NOP
  3147  000574  504D               	movf	_pick_and_place$599^0,w,c
  3148  000576  5C4B               	subwf	pick_and_place@i_598^0,w,c
  3149  000578  504C               	movf	(pick_and_place@i_598+1)^0,w,c
  3150  00057A  0A80               	xorlw	128
  3151  00057C  6E3B               	movwf	??_pick_and_place^0,c
  3152  00057E  504E               	movf	(_pick_and_place$599+1)^0,w,c
  3153  000580  0A80               	xorlw	128
  3154  000582  583B               	subwfb	??_pick_and_place^0,w,c
  3155  000584  B0D8               	btfsc	status,0,c
  3156  000586  EFC7  F002         	goto	u5131
  3157  00058A  EFCA  F002         	goto	u5130
  3158  00058E                     u5131:
  3159  00058E  FFFF               	dw	65535	; assembler added errata NOP
  3160  000590  EFD4  F002         	goto	l4491
  3161  000594                     u5130:
  3162  000594  FFFF               	dw	65535	; assembler added errata NOP
  3163  000596  5071               	movf	_stop^0,w,c
  3164  000598  B4D8               	btfsc	status,2,c
  3165  00059A  EFD1  F002         	goto	u5141
  3166  00059E  EFD4  F002         	goto	u5140
  3167  0005A2                     u5141:
  3168  0005A2  FFFF               	dw	65535	; assembler added errata NOP
  3169  0005A4  EF86  F002         	goto	l4479
  3170  0005A8                     u5140:
  3171  0005A8                     l4491:
  3172  0005A8  FFFF               	dw	65535	; assembler added errata NOP
  3173                           
  3174                           ;main.c: 607:         for(int i = 0; (i<((Pick_Angle-Place_Angle)/3.6)) && !stop; i++){T
      +                          wister(Rot_dir);}
  3175  0005AA  0E00               	movlw	0
  3176  0005AC  6E50               	movwf	(pick_and_place@i_600+1)^0,c
  3177  0005AE  0E00               	movlw	0
  3178  0005B0  6E4F               	movwf	pick_and_place@i_600^0,c
  3179  0005B2  EFE1  F002         	goto	l4497
  3180  0005B6                     l4493:
  3181  0005B6  FFFF               	dw	65535	; assembler added errata NOP
  3182  0005B8  506E               	movf	_Rot_dir^0,w,c
  3183  0005BA  EC07  F014         	call	_Twister
  3184  0005BE  4A4F               	infsnz	pick_and_place@i_600^0,f,c
  3185  0005C0  2A50               	incf	(pick_and_place@i_600+1)^0,f,c
  3186  0005C2                     l4497:
  3187  0005C2  FFFF               	dw	65535	; assembler added errata NOP
  3188  0005C4  C04F  F008         	movff	pick_and_place@i_600,___xxtofl@val
  3189  0005C8  C050  F009         	movff	pick_and_place@i_600+1,___xxtofl@val+1
  3190  0005CC  0E00               	movlw	0
  3191  0005CE  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3192  0005D0  0EFF               	movlw	-1
  3193  0005D2  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3194  0005D4  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3195  0005D6  0E01               	movlw	1
  3196  0005D8  EC1B  F00F         	call	___xxtofl
  3197  0005DC  C008  F02F         	movff	?___xxtofl,___flge@ff1
  3198  0005E0  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
  3199  0005E4  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
  3200  0005E8  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
  3201  0005EC  0E66               	movlw	102
  3202  0005EE  6E1A               	movwf	___fldiv@a^0,c
  3203  0005F0  0E66               	movlw	102
  3204  0005F2  6E1B               	movwf	(___fldiv@a+1)^0,c
  3205  0005F4  0E66               	movlw	102
  3206  0005F6  6E1C               	movwf	(___fldiv@a+2)^0,c
  3207  0005F8  0E40               	movlw	64
  3208  0005FA  6E1D               	movwf	(___fldiv@a+3)^0,c
  3209  0005FC  5061               	movf	_Place_Angle^0,w,c
  3210  0005FE  5C63               	subwf	_Pick_Angle^0,w,c
  3211  000600  6E3B               	movwf	??_pick_and_place^0,c
  3212  000602  5062               	movf	(_Place_Angle+1)^0,w,c
  3213  000604  5864               	subwfb	(_Pick_Angle+1)^0,w,c
  3214  000606  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3215  000608  C03B  F008         	movff	??_pick_and_place,___xxtofl@val
  3216  00060C  C03C  F009         	movff	??_pick_and_place+1,___xxtofl@val+1
  3217  000610  0E00               	movlw	0
  3218  000612  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3219  000614  0EFF               	movlw	-1
  3220  000616  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3221  000618  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3222  00061A  0E01               	movlw	1
  3223  00061C  EC1B  F00F         	call	___xxtofl
  3224  000620  C008  F016         	movff	?___xxtofl,___fldiv@b
  3225  000624  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  3226  000628  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  3227  00062C  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  3228  000630  EC6B  F008         	call	___fldiv	;wreg free
  3229  000634  C016  F033         	movff	?___fldiv,___flge@ff2
  3230  000638  C017  F034         	movff	?___fldiv+1,___flge@ff2+1
  3231  00063C  C018  F035         	movff	?___fldiv+2,___flge@ff2+2
  3232  000640  C019  F036         	movff	?___fldiv+3,___flge@ff2+3
  3233  000644  EC92  F011         	call	___flge	;wreg free
  3234  000648  B0D8               	btfsc	status,0,c
  3235  00064A  EF29  F003         	goto	u5151
  3236  00064E  EF2C  F003         	goto	u5150
  3237  000652                     u5151:
  3238  000652  FFFF               	dw	65535	; assembler added errata NOP
  3239  000654  EF36  F003         	goto	l370
  3240  000658                     u5150:
  3241  000658  FFFF               	dw	65535	; assembler added errata NOP
  3242  00065A  5071               	movf	_stop^0,w,c
  3243  00065C  B4D8               	btfsc	status,2,c
  3244  00065E  EF33  F003         	goto	u5161
  3245  000662  EF36  F003         	goto	u5160
  3246  000666                     u5161:
  3247  000666  FFFF               	dw	65535	; assembler added errata NOP
  3248  000668  EFDB  F002         	goto	l4493
  3249  00066C                     u5160:
  3250  00066C                     l370:
  3251  00066C  FFFF               	dw	65535	; assembler added errata NOP
  3252                           
  3253                           ;main.c: 611:         Angle_diff= Place_Angle;
  3254  00066E  C061  F05B         	movff	_Place_Angle,_Angle_diff
  3255  000672  C062  F05C         	movff	_Place_Angle+1,_Angle_diff+1
  3256                           
  3257                           ;main.c: 612:         X_diff = X_Place;
  3258  000676  C069  F05F         	movff	_X_Place,_X_diff
  3259  00067A  C06A  F060         	movff	_X_Place+1,_X_diff+1
  3260                           
  3261                           ;main.c: 613:         Y_diff = Y_Place;
  3262  00067E  C065  F05D         	movff	_Y_Place,_Y_diff
  3263  000682  C066  F05E         	movff	_Y_Place+1,_Y_diff+1
  3264  000686  0012               	return		;funcret
  3265  000688  FFFF               	dw	65535	; errata NOP
  3266  00068A                     __end_of_pick_and_place:
  3267                           	callstack 0
  3268                           
  3269 ;; *************** function _direct *****************
  3270 ;; Defined at:
  3271 ;;		line 626 in file "main.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  prev            2    7[COMRAM] int 
  3274 ;;  next            2    9[COMRAM] int 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      unsigned char 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3286 ;;      Params:         4       0       0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0
  3288 ;;      Temps:          1       0       0       0       0       0       0
  3289 ;;      Totals:         5       0       0       0       0       0       0
  3290 ;;Total ram usage:        5 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 1
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_pick_and_place
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text7
  3301  002DBC                     __ptext7:
  3302                           	callstack 0
  3303  002DBC                     _direct:
  3304                           	callstack 0
  3305  002DBC  FFFF               	dw	65535	; assembler added errata NOP
  3306  002DBE                     
  3307                           ;main.c: 627:     if(prev<next){
  3308  002DBE  500A               	movf	direct@next^0,w,c
  3309  002DC0  5C08               	subwf	direct@prev^0,w,c
  3310  002DC2  5009               	movf	(direct@prev+1)^0,w,c
  3311  002DC4  0A80               	xorlw	128
  3312  002DC6  6E0C               	movwf	??_direct^0,c
  3313  002DC8  500B               	movf	(direct@next+1)^0,w,c
  3314  002DCA  0A80               	xorlw	128
  3315  002DCC  580C               	subwfb	??_direct^0,w,c
  3316  002DCE  B0D8               	btfsc	status,0,c
  3317  002DD0  EFEC  F016         	goto	u4491
  3318  002DD4  EFEF  F016         	goto	u4490
  3319  002DD8                     u4491:
  3320  002DD8  FFFF               	dw	65535	; assembler added errata NOP
  3321  002DDA  EFF3  F016         	goto	l4161
  3322  002DDE                     u4490:
  3323  002DDE  FFFF               	dw	65535	; assembler added errata NOP
  3324  002DE0                     
  3325                           ;main.c: 628:         return 1;
  3326  002DE0  0E01               	movlw	1
  3327  002DE2  EFF5  F016         	goto	l387
  3328  002DE6                     l4161:
  3329  002DE6  FFFF               	dw	65535	; assembler added errata NOP
  3330                           
  3331                           ;main.c: 631:         return 0;
  3332  002DE8  0E00               	movlw	0
  3333  002DEA                     l387:
  3334  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  3335  002DEC  0012               	return		;funcret
  3336  002DEE  FFFF               	dw	65535	; errata NOP
  3337  002DF0                     __end_of_direct:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function ___xxtofl *****************
  3341 ;; Defined at:
  3342 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  sign            1    wreg     unsigned char 
  3345 ;;  val             4    7[COMRAM] long 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  sign            1   15[COMRAM] unsigned char 
  3348 ;;  arg             4   17[COMRAM] unsigned long 
  3349 ;;  exp             1   16[COMRAM] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  4    7[COMRAM] unsigned char 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3359 ;;      Params:         4       0       0       0       0       0       0
  3360 ;;      Locals:         6       0       0       0       0       0       0
  3361 ;;      Temps:          4       0       0       0       0       0       0
  3362 ;;      Totals:        14       0       0       0       0       0       0
  3363 ;;Total ram usage:       14 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 1
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_pick_and_place
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text8
  3374  001E36                     __ptext8:
  3375                           	callstack 0
  3376  001E36                     ___xxtofl:
  3377                           	callstack 0
  3378  001E36  FFFF               	dw	65535	; assembler added errata NOP
  3379                           
  3380                           ;incstack = 0
  3381                           ;___xxtofl@sign stored from wreg
  3382  001E38  6E10               	movwf	___xxtofl@sign^0,c
  3383  001E3A  5010               	movf	___xxtofl@sign^0,w,c
  3384  001E3C  B4D8               	btfsc	status,2,c
  3385  001E3E  EF23  F00F         	goto	u4781
  3386  001E42  EF26  F00F         	goto	u4780
  3387  001E46                     u4781:
  3388  001E46  FFFF               	dw	65535	; assembler added errata NOP
  3389  001E48  EF4B  F00F         	goto	l1063
  3390  001E4C                     u4780:
  3391  001E4C  FFFF               	dw	65535	; assembler added errata NOP
  3392  001E4E  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  3393  001E50  EF2F  F00F         	goto	u4790
  3394  001E54  EF2C  F00F         	goto	u4791
  3395  001E58                     u4791:
  3396  001E58  FFFF               	dw	65535	; assembler added errata NOP
  3397  001E5A  EF4B  F00F         	goto	l1063
  3398  001E5E                     u4790:
  3399  001E5E  FFFF               	dw	65535	; assembler added errata NOP
  3400  001E60  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  3401  001E64  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  3402  001E68  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  3403  001E6C  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  3404  001E70  1E0C               	comf	??___xxtofl^0,f,c
  3405  001E72  1E0D               	comf	(??___xxtofl+1)^0,f,c
  3406  001E74  1E0E               	comf	(??___xxtofl+2)^0,f,c
  3407  001E76  1E0F               	comf	(??___xxtofl+3)^0,f,c
  3408  001E78  2A0C               	incf	??___xxtofl^0,f,c
  3409  001E7A  0E00               	movlw	0
  3410  001E7C  220D               	addwfc	(??___xxtofl+1)^0,f,c
  3411  001E7E  220E               	addwfc	(??___xxtofl+2)^0,f,c
  3412  001E80  220F               	addwfc	(??___xxtofl+3)^0,f,c
  3413  001E82  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  3414  001E86  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  3415  001E8A  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  3416  001E8E  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  3417  001E92  EF54  F00F         	goto	l4331
  3418  001E96                     l1063:
  3419  001E96  FFFF               	dw	65535	; assembler added errata NOP
  3420  001E98  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  3421  001E9C  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3422  001EA0  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3423  001EA4  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3424  001EA8                     l4331:
  3425  001EA8  FFFF               	dw	65535	; assembler added errata NOP
  3426  001EAA  5008               	movf	___xxtofl@val^0,w,c
  3427  001EAC  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  3428  001EAE  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  3429  001EB0  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  3430  001EB2  A4D8               	btfss	status,2,c
  3431  001EB4  EF5E  F00F         	goto	u4801
  3432  001EB8  EF61  F00F         	goto	u4800
  3433  001EBC                     u4801:
  3434  001EBC  FFFF               	dw	65535	; assembler added errata NOP
  3435  001EBE  EF6C  F00F         	goto	l4337
  3436  001EC2                     u4800:
  3437  001EC2  FFFF               	dw	65535	; assembler added errata NOP
  3438  001EC4  0E00               	movlw	0
  3439  001EC6  6E08               	movwf	?___xxtofl^0,c
  3440  001EC8  0E00               	movlw	0
  3441  001ECA  6E09               	movwf	(?___xxtofl+1)^0,c
  3442  001ECC  0E00               	movlw	0
  3443  001ECE  6E0A               	movwf	(?___xxtofl+2)^0,c
  3444  001ED0  0E00               	movlw	0
  3445  001ED2  6E0B               	movwf	(?___xxtofl+3)^0,c
  3446  001ED4  EF14  F010         	goto	l1066
  3447  001ED8                     l4337:
  3448  001ED8  FFFF               	dw	65535	; assembler added errata NOP
  3449  001EDA  0E96               	movlw	150
  3450  001EDC  6E11               	movwf	___xxtofl@exp^0,c
  3451  001EDE  EF78  F00F         	goto	l4341
  3452  001EE2                     l4339:
  3453  001EE2  FFFF               	dw	65535	; assembler added errata NOP
  3454  001EE4  2A11               	incf	___xxtofl@exp^0,f,c
  3455  001EE6  90D8               	bcf	status,0,c
  3456  001EE8  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  3457  001EEA  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  3458  001EEC  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  3459  001EEE  3212               	rrcf	___xxtofl@arg^0,f,c
  3460  001EF0                     l4341:
  3461  001EF0  FFFF               	dw	65535	; assembler added errata NOP
  3462  001EF2  0E00               	movlw	0
  3463  001EF4  1412               	andwf	___xxtofl@arg^0,w,c
  3464  001EF6  6E0C               	movwf	??___xxtofl^0,c
  3465  001EF8  0E00               	movlw	0
  3466  001EFA  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  3467  001EFC  6E0D               	movwf	(??___xxtofl+1)^0,c
  3468  001EFE  0E00               	movlw	0
  3469  001F00  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  3470  001F02  6E0E               	movwf	(??___xxtofl+2)^0,c
  3471  001F04  0EFE               	movlw	254
  3472  001F06  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  3473  001F08  6E0F               	movwf	(??___xxtofl+3)^0,c
  3474  001F0A  500C               	movf	??___xxtofl^0,w,c
  3475  001F0C  100D               	iorwf	(??___xxtofl+1)^0,w,c
  3476  001F0E  100E               	iorwf	(??___xxtofl+2)^0,w,c
  3477  001F10  100F               	iorwf	(??___xxtofl+3)^0,w,c
  3478  001F12  A4D8               	btfss	status,2,c
  3479  001F14  EF8E  F00F         	goto	u4811
  3480  001F18  EF91  F00F         	goto	u4810
  3481  001F1C                     u4811:
  3482  001F1C  FFFF               	dw	65535	; assembler added errata NOP
  3483  001F1E  EF71  F00F         	goto	l4339
  3484  001F22                     u4810:
  3485  001F22  FFFF               	dw	65535	; assembler added errata NOP
  3486  001F24  EFA1  F00F         	goto	l1070
  3487  001F28                     l4343:
  3488  001F28  FFFF               	dw	65535	; assembler added errata NOP
  3489  001F2A  2A11               	incf	___xxtofl@exp^0,f,c
  3490  001F2C  0E01               	movlw	1
  3491  001F2E  2612               	addwf	___xxtofl@arg^0,f,c
  3492  001F30  0E00               	movlw	0
  3493  001F32  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  3494  001F34  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  3495  001F36  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  3496  001F38  90D8               	bcf	status,0,c
  3497  001F3A  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  3498  001F3C  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  3499  001F3E  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  3500  001F40  3212               	rrcf	___xxtofl@arg^0,f,c
  3501  001F42                     l1070:
  3502  001F42  FFFF               	dw	65535	; assembler added errata NOP
  3503  001F44  0E00               	movlw	0
  3504  001F46  1412               	andwf	___xxtofl@arg^0,w,c
  3505  001F48  6E0C               	movwf	??___xxtofl^0,c
  3506  001F4A  0E00               	movlw	0
  3507  001F4C  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  3508  001F4E  6E0D               	movwf	(??___xxtofl+1)^0,c
  3509  001F50  0E00               	movlw	0
  3510  001F52  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  3511  001F54  6E0E               	movwf	(??___xxtofl+2)^0,c
  3512  001F56  0EFF               	movlw	255
  3513  001F58  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  3514  001F5A  6E0F               	movwf	(??___xxtofl+3)^0,c
  3515  001F5C  500C               	movf	??___xxtofl^0,w,c
  3516  001F5E  100D               	iorwf	(??___xxtofl+1)^0,w,c
  3517  001F60  100E               	iorwf	(??___xxtofl+2)^0,w,c
  3518  001F62  100F               	iorwf	(??___xxtofl+3)^0,w,c
  3519  001F64  A4D8               	btfss	status,2,c
  3520  001F66  EFB7  F00F         	goto	u4821
  3521  001F6A  EFBA  F00F         	goto	u4820
  3522  001F6E                     u4821:
  3523  001F6E  FFFF               	dw	65535	; assembler added errata NOP
  3524  001F70  EF94  F00F         	goto	l4343
  3525  001F74                     u4820:
  3526  001F74  FFFF               	dw	65535	; assembler added errata NOP
  3527  001F76  EFC4  F00F         	goto	l4351
  3528  001F7A                     l4349:
  3529  001F7A  FFFF               	dw	65535	; assembler added errata NOP
  3530  001F7C  0611               	decf	___xxtofl@exp^0,f,c
  3531  001F7E  90D8               	bcf	status,0,c
  3532  001F80  3612               	rlcf	___xxtofl@arg^0,f,c
  3533  001F82  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  3534  001F84  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  3535  001F86  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  3536  001F88                     l4351:
  3537  001F88  FFFF               	dw	65535	; assembler added errata NOP
  3538  001F8A  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  3539  001F8C  EFCA  F00F         	goto	u4831
  3540  001F90  EFCD  F00F         	goto	u4830
  3541  001F94                     u4831:
  3542  001F94  FFFF               	dw	65535	; assembler added errata NOP
  3543  001F96  EFD7  F00F         	goto	l1077
  3544  001F9A                     u4830:
  3545  001F9A  FFFF               	dw	65535	; assembler added errata NOP
  3546  001F9C  0E02               	movlw	2
  3547  001F9E  6011               	cpfslt	___xxtofl@exp^0,c
  3548  001FA0  EFD4  F00F         	goto	u4841
  3549  001FA4  EFD7  F00F         	goto	u4840
  3550  001FA8                     u4841:
  3551  001FA8  FFFF               	dw	65535	; assembler added errata NOP
  3552  001FAA  EFBD  F00F         	goto	l4349
  3553  001FAE                     u4840:
  3554  001FAE                     l1077:
  3555  001FAE  FFFF               	dw	65535	; assembler added errata NOP
  3556  001FB0  B011               	btfsc	___xxtofl@exp^0,0,c
  3557  001FB2  EFDD  F00F         	goto	u4851
  3558  001FB6  EFE0  F00F         	goto	u4850
  3559  001FBA                     u4851:
  3560  001FBA  FFFF               	dw	65535	; assembler added errata NOP
  3561  001FBC  EFE2  F00F         	goto	l4357
  3562  001FC0                     u4850:
  3563  001FC0  FFFF               	dw	65535	; assembler added errata NOP
  3564  001FC2  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  3565  001FC4                     l4357:
  3566  001FC4  FFFF               	dw	65535	; assembler added errata NOP
  3567  001FC6  90D8               	bcf	status,0,c
  3568  001FC8  3211               	rrcf	___xxtofl@exp^0,f,c
  3569  001FCA  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  3570  001FCE  6A0D               	clrf	(??___xxtofl+1)^0,c
  3571  001FD0  6A0E               	clrf	(??___xxtofl+2)^0,c
  3572  001FD2  6A0F               	clrf	(??___xxtofl+3)^0,c
  3573  001FD4  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  3574  001FD8  6A0E               	clrf	(??___xxtofl+2)^0,c
  3575  001FDA  6A0D               	clrf	(??___xxtofl+1)^0,c
  3576  001FDC  6A0C               	clrf	??___xxtofl^0,c
  3577  001FDE  500C               	movf	??___xxtofl^0,w,c
  3578  001FE0  1212               	iorwf	___xxtofl@arg^0,f,c
  3579  001FE2  500D               	movf	(??___xxtofl+1)^0,w,c
  3580  001FE4  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  3581  001FE6  500E               	movf	(??___xxtofl+2)^0,w,c
  3582  001FE8  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  3583  001FEA  500F               	movf	(??___xxtofl+3)^0,w,c
  3584  001FEC  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  3585  001FEE  5010               	movf	___xxtofl@sign^0,w,c
  3586  001FF0  B4D8               	btfsc	status,2,c
  3587  001FF2  EFFD  F00F         	goto	u4861
  3588  001FF6  EF00  F010         	goto	u4860
  3589  001FFA                     u4861:
  3590  001FFA  FFFF               	dw	65535	; assembler added errata NOP
  3591  001FFC  EF0B  F010         	goto	l4367
  3592  002000                     u4860:
  3593  002000  FFFF               	dw	65535	; assembler added errata NOP
  3594  002002  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  3595  002004  EF09  F010         	goto	u4870
  3596  002008  EF06  F010         	goto	u4871
  3597  00200C                     u4871:
  3598  00200C  FFFF               	dw	65535	; assembler added errata NOP
  3599  00200E  EF0B  F010         	goto	l4367
  3600  002012                     u4870:
  3601  002012  FFFF               	dw	65535	; assembler added errata NOP
  3602  002014  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  3603  002016                     l4367:
  3604  002016  FFFF               	dw	65535	; assembler added errata NOP
  3605  002018  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  3606  00201C  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  3607  002020  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  3608  002024  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  3609  002028                     l1066:
  3610  002028  FFFF               	dw	65535	; assembler added errata NOP
  3611  00202A  0012               	return		;funcret
  3612  00202C  FFFF               	dw	65535	; errata NOP
  3613  00202E                     __end_of___xxtofl:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function ___fldiv *****************
  3617 ;; Defined at:
  3618 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  b               4   21[COMRAM] unsigned char 
  3621 ;;  a               4   25[COMRAM] unsigned char 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  grs             4   40[COMRAM] unsigned long 
  3624 ;;  rem             4   33[COMRAM] unsigned long 
  3625 ;;  new_exp         2   38[COMRAM] short 
  3626 ;;  aexp            1   45[COMRAM] unsigned char 
  3627 ;;  bexp            1   44[COMRAM] unsigned char 
  3628 ;;  sign            1   37[COMRAM] unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  4   21[COMRAM] unsigned char 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3638 ;;      Params:         8       0       0       0       0       0       0
  3639 ;;      Locals:        13       0       0       0       0       0       0
  3640 ;;      Temps:          4       0       0       0       0       0       0
  3641 ;;      Totals:        25       0       0       0       0       0       0
  3642 ;;Total ram usage:       25 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; Hardware stack levels required when called: 1
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_pick_and_place
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text9
  3653  0010D6                     __ptext9:
  3654                           	callstack 0
  3655  0010D6                     ___fldiv:
  3656                           	callstack 0
  3657  0010D6  FFFF               	dw	65535	; assembler added errata NOP
  3658  0010D8  5019               	movf	(___fldiv@b+3)^0,w,c
  3659  0010DA  0B80               	andlw	128
  3660  0010DC  6E26               	movwf	___fldiv@sign^0,c
  3661  0010DE  5019               	movf	(___fldiv@b+3)^0,w,c
  3662  0010E0  2419               	addwf	(___fldiv@b+3)^0,w,c
  3663  0010E2  6E2D               	movwf	___fldiv@bexp^0,c
  3664  0010E4  AE18               	btfss	(___fldiv@b+2)^0,7,c
  3665  0010E6  EF77  F008         	goto	u4501
  3666  0010EA  EF7A  F008         	goto	u4500
  3667  0010EE                     u4501:
  3668  0010EE  FFFF               	dw	65535	; assembler added errata NOP
  3669  0010F0  EF7C  F008         	goto	l4171
  3670  0010F4                     u4500:
  3671  0010F4  FFFF               	dw	65535	; assembler added errata NOP
  3672  0010F6  802D               	bsf	___fldiv@bexp^0,0,c
  3673  0010F8                     l4171:
  3674  0010F8  FFFF               	dw	65535	; assembler added errata NOP
  3675  0010FA  502D               	movf	___fldiv@bexp^0,w,c
  3676  0010FC  B4D8               	btfsc	status,2,c
  3677  0010FE  EF83  F008         	goto	u4511
  3678  001102  EF86  F008         	goto	u4510
  3679  001106                     u4511:
  3680  001106  FFFF               	dw	65535	; assembler added errata NOP
  3681  001108  EF9F  F008         	goto	l4181
  3682  00110C                     u4510:
  3683  00110C  FFFF               	dw	65535	; assembler added errata NOP
  3684  00110E  282D               	incf	___fldiv@bexp^0,w,c
  3685  001110  A4D8               	btfss	status,2,c
  3686  001112  EF8D  F008         	goto	u4521
  3687  001116  EF90  F008         	goto	u4520
  3688  00111A                     u4521:
  3689  00111A  FFFF               	dw	65535	; assembler added errata NOP
  3690  00111C  EF99  F008         	goto	l4177
  3691  001120                     u4520:
  3692  001120  FFFF               	dw	65535	; assembler added errata NOP
  3693  001122  0E00               	movlw	0
  3694  001124  6E16               	movwf	___fldiv@b^0,c
  3695  001126  0E00               	movlw	0
  3696  001128  6E17               	movwf	(___fldiv@b+1)^0,c
  3697  00112A  0E00               	movlw	0
  3698  00112C  6E18               	movwf	(___fldiv@b+2)^0,c
  3699  00112E  0E00               	movlw	0
  3700  001130  6E19               	movwf	(___fldiv@b+3)^0,c
  3701  001132                     l4177:
  3702  001132  FFFF               	dw	65535	; assembler added errata NOP
  3703  001134  8E18               	bsf	(___fldiv@b+2)^0,7,c
  3704  001136  0E00               	movlw	0
  3705  001138  6E19               	movwf	(___fldiv@b+3)^0,c
  3706  00113A  EFA8  F008         	goto	l4183
  3707  00113E                     l4181:
  3708  00113E  FFFF               	dw	65535	; assembler added errata NOP
  3709  001140  0E00               	movlw	0
  3710  001142  6E16               	movwf	___fldiv@b^0,c
  3711  001144  0E00               	movlw	0
  3712  001146  6E17               	movwf	(___fldiv@b+1)^0,c
  3713  001148  0E00               	movlw	0
  3714  00114A  6E18               	movwf	(___fldiv@b+2)^0,c
  3715  00114C  0E00               	movlw	0
  3716  00114E  6E19               	movwf	(___fldiv@b+3)^0,c
  3717  001150                     l4183:
  3718  001150  FFFF               	dw	65535	; assembler added errata NOP
  3719  001152  501D               	movf	(___fldiv@a+3)^0,w,c
  3720  001154  0B80               	andlw	128
  3721  001156  1A26               	xorwf	___fldiv@sign^0,f,c
  3722  001158  501D               	movf	(___fldiv@a+3)^0,w,c
  3723  00115A  241D               	addwf	(___fldiv@a+3)^0,w,c
  3724  00115C  6E2E               	movwf	___fldiv@aexp^0,c
  3725  00115E  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  3726  001160  EFB4  F008         	goto	u4531
  3727  001164  EFB7  F008         	goto	u4530
  3728  001168                     u4531:
  3729  001168  FFFF               	dw	65535	; assembler added errata NOP
  3730  00116A  EFB9  F008         	goto	l4191
  3731  00116E                     u4530:
  3732  00116E  FFFF               	dw	65535	; assembler added errata NOP
  3733  001170  802E               	bsf	___fldiv@aexp^0,0,c
  3734  001172                     l4191:
  3735  001172  FFFF               	dw	65535	; assembler added errata NOP
  3736  001174  502E               	movf	___fldiv@aexp^0,w,c
  3737  001176  B4D8               	btfsc	status,2,c
  3738  001178  EFC0  F008         	goto	u4541
  3739  00117C  EFC3  F008         	goto	u4540
  3740  001180                     u4541:
  3741  001180  FFFF               	dw	65535	; assembler added errata NOP
  3742  001182  EFDC  F008         	goto	l4201
  3743  001186                     u4540:
  3744  001186  FFFF               	dw	65535	; assembler added errata NOP
  3745  001188  282E               	incf	___fldiv@aexp^0,w,c
  3746  00118A  A4D8               	btfss	status,2,c
  3747  00118C  EFCA  F008         	goto	u4551
  3748  001190  EFCD  F008         	goto	u4550
  3749  001194                     u4551:
  3750  001194  FFFF               	dw	65535	; assembler added errata NOP
  3751  001196  EFD6  F008         	goto	l4197
  3752  00119A                     u4550:
  3753  00119A  FFFF               	dw	65535	; assembler added errata NOP
  3754  00119C  0E00               	movlw	0
  3755  00119E  6E1A               	movwf	___fldiv@a^0,c
  3756  0011A0  0E00               	movlw	0
  3757  0011A2  6E1B               	movwf	(___fldiv@a+1)^0,c
  3758  0011A4  0E00               	movlw	0
  3759  0011A6  6E1C               	movwf	(___fldiv@a+2)^0,c
  3760  0011A8  0E00               	movlw	0
  3761  0011AA  6E1D               	movwf	(___fldiv@a+3)^0,c
  3762  0011AC                     l4197:
  3763  0011AC  FFFF               	dw	65535	; assembler added errata NOP
  3764  0011AE  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  3765  0011B0  0E00               	movlw	0
  3766  0011B2  6E1D               	movwf	(___fldiv@a+3)^0,c
  3767  0011B4  EFE5  F008         	goto	l4203
  3768  0011B8                     l4201:
  3769  0011B8  FFFF               	dw	65535	; assembler added errata NOP
  3770  0011BA  0E00               	movlw	0
  3771  0011BC  6E1A               	movwf	___fldiv@a^0,c
  3772  0011BE  0E00               	movlw	0
  3773  0011C0  6E1B               	movwf	(___fldiv@a+1)^0,c
  3774  0011C2  0E00               	movlw	0
  3775  0011C4  6E1C               	movwf	(___fldiv@a+2)^0,c
  3776  0011C6  0E00               	movlw	0
  3777  0011C8  6E1D               	movwf	(___fldiv@a+3)^0,c
  3778  0011CA                     l4203:
  3779  0011CA  FFFF               	dw	65535	; assembler added errata NOP
  3780  0011CC  501A               	movf	___fldiv@a^0,w,c
  3781  0011CE  101B               	iorwf	(___fldiv@a+1)^0,w,c
  3782  0011D0  101C               	iorwf	(___fldiv@a+2)^0,w,c
  3783  0011D2  101D               	iorwf	(___fldiv@a+3)^0,w,c
  3784  0011D4  A4D8               	btfss	status,2,c
  3785  0011D6  EFEF  F008         	goto	u4561
  3786  0011DA  EFF2  F008         	goto	u4560
  3787  0011DE                     u4561:
  3788  0011DE  FFFF               	dw	65535	; assembler added errata NOP
  3789  0011E0  EF0C  F009         	goto	l4215
  3790  0011E4                     u4560:
  3791  0011E4  FFFF               	dw	65535	; assembler added errata NOP
  3792  0011E6  0E00               	movlw	0
  3793  0011E8  6E16               	movwf	___fldiv@b^0,c
  3794  0011EA  0E00               	movlw	0
  3795  0011EC  6E17               	movwf	(___fldiv@b+1)^0,c
  3796  0011EE  0E00               	movlw	0
  3797  0011F0  6E18               	movwf	(___fldiv@b+2)^0,c
  3798  0011F2  0E00               	movlw	0
  3799  0011F4  6E19               	movwf	(___fldiv@b+3)^0,c
  3800  0011F6  0E80               	movlw	128
  3801  0011F8  1218               	iorwf	(___fldiv@b+2)^0,f,c
  3802  0011FA  0E7F               	movlw	127
  3803  0011FC  1219               	iorwf	(___fldiv@b+3)^0,f,c
  3804  0011FE                     l4209:
  3805  0011FE  FFFF               	dw	65535	; assembler added errata NOP
  3806  001200  5026               	movf	___fldiv@sign^0,w,c
  3807  001202  1219               	iorwf	(___fldiv@b+3)^0,f,c
  3808  001204  C016  F016         	movff	___fldiv@b,?___fldiv
  3809  001208  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  3810  00120C  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  3811  001210  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  3812  001214  EF81  F00A         	goto	l990
  3813  001218                     l4215:
  3814  001218  FFFF               	dw	65535	; assembler added errata NOP
  3815  00121A  502D               	movf	___fldiv@bexp^0,w,c
  3816  00121C  A4D8               	btfss	status,2,c
  3817  00121E  EF13  F009         	goto	u4571
  3818  001222  EF16  F009         	goto	u4570
  3819  001226                     u4571:
  3820  001226  FFFF               	dw	65535	; assembler added errata NOP
  3821  001228  EF21  F009         	goto	l4223
  3822  00122C                     u4570:
  3823  00122C  FFFF               	dw	65535	; assembler added errata NOP
  3824  00122E  0E00               	movlw	0
  3825  001230  6E16               	movwf	?___fldiv^0,c
  3826  001232  0E00               	movlw	0
  3827  001234  6E17               	movwf	(?___fldiv+1)^0,c
  3828  001236  0E00               	movlw	0
  3829  001238  6E18               	movwf	(?___fldiv+2)^0,c
  3830  00123A  0E00               	movlw	0
  3831  00123C  6E19               	movwf	(?___fldiv+3)^0,c
  3832  00123E  EF81  F00A         	goto	l990
  3833  001242                     l4223:
  3834  001242  FFFF               	dw	65535	; assembler added errata NOP
  3835  001244  502E               	movf	___fldiv@aexp^0,w,c
  3836  001246  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  3837  00124A  6A1F               	clrf	(??___fldiv+1)^0,c
  3838  00124C  5E1E               	subwf	??___fldiv^0,f,c
  3839  00124E  0E00               	movlw	0
  3840  001250  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  3841  001252  0E7F               	movlw	127
  3842  001254  241E               	addwf	??___fldiv^0,w,c
  3843  001256  6E27               	movwf	___fldiv@new_exp^0,c
  3844  001258  0E00               	movlw	0
  3845  00125A  201F               	addwfc	(??___fldiv+1)^0,w,c
  3846  00125C  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  3847  00125E  C016  F022         	movff	___fldiv@b,___fldiv@rem
  3848  001262  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  3849  001266  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  3850  00126A  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  3851  00126E  0E00               	movlw	0
  3852  001270  6E16               	movwf	___fldiv@b^0,c
  3853  001272  0E00               	movlw	0
  3854  001274  6E17               	movwf	(___fldiv@b+1)^0,c
  3855  001276  0E00               	movlw	0
  3856  001278  6E18               	movwf	(___fldiv@b+2)^0,c
  3857  00127A  0E00               	movlw	0
  3858  00127C  6E19               	movwf	(___fldiv@b+3)^0,c
  3859  00127E  0E00               	movlw	0
  3860  001280  6E29               	movwf	___fldiv@grs^0,c
  3861  001282  0E00               	movlw	0
  3862  001284  6E2A               	movwf	(___fldiv@grs+1)^0,c
  3863  001286  0E00               	movlw	0
  3864  001288  6E2B               	movwf	(___fldiv@grs+2)^0,c
  3865  00128A  0E00               	movlw	0
  3866  00128C  6E2C               	movwf	(___fldiv@grs+3)^0,c
  3867  00128E  0E00               	movlw	0
  3868  001290  6E2E               	movwf	___fldiv@aexp^0,c
  3869  001292  EF8D  F009         	goto	l992
  3870  001296                     l4233:
  3871  001296  FFFF               	dw	65535	; assembler added errata NOP
  3872  001298  502E               	movf	___fldiv@aexp^0,w,c
  3873  00129A  B4D8               	btfsc	status,2,c
  3874  00129C  EF52  F009         	goto	u4581
  3875  0012A0  EF55  F009         	goto	u4580
  3876  0012A4                     u4581:
  3877  0012A4  FFFF               	dw	65535	; assembler added errata NOP
  3878  0012A6  EF70  F009         	goto	l4241
  3879  0012AA                     u4580:
  3880  0012AA  FFFF               	dw	65535	; assembler added errata NOP
  3881  0012AC  90D8               	bcf	status,0,c
  3882  0012AE  3622               	rlcf	___fldiv@rem^0,f,c
  3883  0012B0  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  3884  0012B2  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  3885  0012B4  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  3886  0012B6  90D8               	bcf	status,0,c
  3887  0012B8  3616               	rlcf	___fldiv@b^0,f,c
  3888  0012BA  3617               	rlcf	(___fldiv@b+1)^0,f,c
  3889  0012BC  3618               	rlcf	(___fldiv@b+2)^0,f,c
  3890  0012BE  3619               	rlcf	(___fldiv@b+3)^0,f,c
  3891  0012C0  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  3892  0012C2  EF65  F009         	goto	u4591
  3893  0012C6  EF68  F009         	goto	u4590
  3894  0012CA                     u4591:
  3895  0012CA  FFFF               	dw	65535	; assembler added errata NOP
  3896  0012CC  EF6A  F009         	goto	l995
  3897  0012D0                     u4590:
  3898  0012D0  FFFF               	dw	65535	; assembler added errata NOP
  3899  0012D2  8016               	bsf	___fldiv@b^0,0,c
  3900  0012D4                     l995:
  3901  0012D4  FFFF               	dw	65535	; assembler added errata NOP
  3902  0012D6  90D8               	bcf	status,0,c
  3903  0012D8  3629               	rlcf	___fldiv@grs^0,f,c
  3904  0012DA  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  3905  0012DC  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  3906  0012DE  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  3907  0012E0                     l4241:
  3908  0012E0  FFFF               	dw	65535	; assembler added errata NOP
  3909  0012E2  501A               	movf	___fldiv@a^0,w,c
  3910  0012E4  5C22               	subwf	___fldiv@rem^0,w,c
  3911  0012E6  501B               	movf	(___fldiv@a+1)^0,w,c
  3912  0012E8  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  3913  0012EA  501C               	movf	(___fldiv@a+2)^0,w,c
  3914  0012EC  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  3915  0012EE  501D               	movf	(___fldiv@a+3)^0,w,c
  3916  0012F0  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  3917  0012F2  A0D8               	btfss	status,0,c
  3918  0012F4  EF7E  F009         	goto	u4601
  3919  0012F8  EF81  F009         	goto	u4600
  3920  0012FC                     u4601:
  3921  0012FC  FFFF               	dw	65535	; assembler added errata NOP
  3922  0012FE  EF8B  F009         	goto	l4247
  3923  001302                     u4600:
  3924  001302  FFFF               	dw	65535	; assembler added errata NOP
  3925  001304  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  3926  001306  501A               	movf	___fldiv@a^0,w,c
  3927  001308  5E22               	subwf	___fldiv@rem^0,f,c
  3928  00130A  501B               	movf	(___fldiv@a+1)^0,w,c
  3929  00130C  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  3930  00130E  501C               	movf	(___fldiv@a+2)^0,w,c
  3931  001310  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  3932  001312  501D               	movf	(___fldiv@a+3)^0,w,c
  3933  001314  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  3934  001316                     l4247:
  3935  001316  FFFF               	dw	65535	; assembler added errata NOP
  3936  001318  2A2E               	incf	___fldiv@aexp^0,f,c
  3937  00131A                     l992:
  3938  00131A  FFFF               	dw	65535	; assembler added errata NOP
  3939  00131C  0E19               	movlw	25
  3940  00131E  642E               	cpfsgt	___fldiv@aexp^0,c
  3941  001320  EF94  F009         	goto	u4611
  3942  001324  EF97  F009         	goto	u4610
  3943  001328                     u4611:
  3944  001328  FFFF               	dw	65535	; assembler added errata NOP
  3945  00132A  EF4B  F009         	goto	l4233
  3946  00132E                     u4610:
  3947  00132E  FFFF               	dw	65535	; assembler added errata NOP
  3948  001330  5022               	movf	___fldiv@rem^0,w,c
  3949  001332  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  3950  001334  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  3951  001336  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  3952  001338  B4D8               	btfsc	status,2,c
  3953  00133A  EFA1  F009         	goto	u4621
  3954  00133E  EFA4  F009         	goto	u4620
  3955  001342                     u4621:
  3956  001342  FFFF               	dw	65535	; assembler added errata NOP
  3957  001344  EFC1  F009         	goto	l4259
  3958  001348                     u4620:
  3959  001348  FFFF               	dw	65535	; assembler added errata NOP
  3960  00134A  8029               	bsf	___fldiv@grs^0,0,c
  3961  00134C  EFC1  F009         	goto	l4259
  3962  001350                     l4253:
  3963  001350  FFFF               	dw	65535	; assembler added errata NOP
  3964  001352  90D8               	bcf	status,0,c
  3965  001354  3616               	rlcf	___fldiv@b^0,f,c
  3966  001356  3617               	rlcf	(___fldiv@b+1)^0,f,c
  3967  001358  3618               	rlcf	(___fldiv@b+2)^0,f,c
  3968  00135A  3619               	rlcf	(___fldiv@b+3)^0,f,c
  3969  00135C  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  3970  00135E  EFB3  F009         	goto	u4631
  3971  001362  EFB6  F009         	goto	u4630
  3972  001366                     u4631:
  3973  001366  FFFF               	dw	65535	; assembler added errata NOP
  3974  001368  EFB8  F009         	goto	l1001
  3975  00136C                     u4630:
  3976  00136C  FFFF               	dw	65535	; assembler added errata NOP
  3977  00136E  8016               	bsf	___fldiv@b^0,0,c
  3978  001370                     l1001:
  3979  001370  FFFF               	dw	65535	; assembler added errata NOP
  3980  001372  90D8               	bcf	status,0,c
  3981  001374  3629               	rlcf	___fldiv@grs^0,f,c
  3982  001376  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  3983  001378  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  3984  00137A  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  3985  00137C  0627               	decf	___fldiv@new_exp^0,f,c
  3986  00137E  A0D8               	btfss	status,0,c
  3987  001380  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  3988  001382                     l4259:
  3989  001382  FFFF               	dw	65535	; assembler added errata NOP
  3990  001384  AE18               	btfss	(___fldiv@b+2)^0,7,c
  3991  001386  EFC7  F009         	goto	u4641
  3992  00138A  EFCA  F009         	goto	u4640
  3993  00138E                     u4641:
  3994  00138E  FFFF               	dw	65535	; assembler added errata NOP
  3995  001390  EFA8  F009         	goto	l4253
  3996  001394                     u4640:
  3997  001394  FFFF               	dw	65535	; assembler added errata NOP
  3998  001396  0E00               	movlw	0
  3999  001398  6E2E               	movwf	___fldiv@aexp^0,c
  4000  00139A  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  4001  00139C  EFD2  F009         	goto	u4651
  4002  0013A0  EFD5  F009         	goto	u4650
  4003  0013A4                     u4651:
  4004  0013A4  FFFF               	dw	65535	; assembler added errata NOP
  4005  0013A6  EF00  F00A         	goto	l1003
  4006  0013AA                     u4650:
  4007  0013AA  FFFF               	dw	65535	; assembler added errata NOP
  4008  0013AC  0EFF               	movlw	255
  4009  0013AE  1429               	andwf	___fldiv@grs^0,w,c
  4010  0013B0  6E1E               	movwf	??___fldiv^0,c
  4011  0013B2  0EFF               	movlw	255
  4012  0013B4  142A               	andwf	(___fldiv@grs+1)^0,w,c
  4013  0013B6  6E1F               	movwf	(??___fldiv+1)^0,c
  4014  0013B8  0EFF               	movlw	255
  4015  0013BA  142B               	andwf	(___fldiv@grs+2)^0,w,c
  4016  0013BC  6E20               	movwf	(??___fldiv+2)^0,c
  4017  0013BE  0E7F               	movlw	127
  4018  0013C0  142C               	andwf	(___fldiv@grs+3)^0,w,c
  4019  0013C2  6E21               	movwf	(??___fldiv+3)^0,c
  4020  0013C4  501E               	movf	??___fldiv^0,w,c
  4021  0013C6  101F               	iorwf	(??___fldiv+1)^0,w,c
  4022  0013C8  1020               	iorwf	(??___fldiv+2)^0,w,c
  4023  0013CA  1021               	iorwf	(??___fldiv+3)^0,w,c
  4024  0013CC  B4D8               	btfsc	status,2,c
  4025  0013CE  EFEB  F009         	goto	u4661
  4026  0013D2  EFEE  F009         	goto	u4660
  4027  0013D6                     u4661:
  4028  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  4029  0013D8  EFF4  F009         	goto	l1004
  4030  0013DC                     u4660:
  4031  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  4032  0013DE                     l4267:
  4033  0013DE  FFFF               	dw	65535	; assembler added errata NOP
  4034  0013E0  0E01               	movlw	1
  4035  0013E2  6E2E               	movwf	___fldiv@aexp^0,c
  4036  0013E4  EF00  F00A         	goto	l1003
  4037  0013E8                     l1004:
  4038  0013E8  FFFF               	dw	65535	; assembler added errata NOP
  4039  0013EA  A016               	btfss	___fldiv@b^0,0,c
  4040  0013EC  EFFA  F009         	goto	u4671
  4041  0013F0  EFFD  F009         	goto	u4670
  4042  0013F4                     u4671:
  4043  0013F4  FFFF               	dw	65535	; assembler added errata NOP
  4044  0013F6  EF00  F00A         	goto	l1003
  4045  0013FA                     u4670:
  4046  0013FA  FFFF               	dw	65535	; assembler added errata NOP
  4047  0013FC  EFEF  F009         	goto	l4267
  4048  001400                     l1003:
  4049  001400  FFFF               	dw	65535	; assembler added errata NOP
  4050  001402  502E               	movf	___fldiv@aexp^0,w,c
  4051  001404  B4D8               	btfsc	status,2,c
  4052  001406  EF07  F00A         	goto	u4681
  4053  00140A  EF0A  F00A         	goto	u4680
  4054  00140E                     u4681:
  4055  00140E  FFFF               	dw	65535	; assembler added errata NOP
  4056  001410  EF31  F00A         	goto	l4279
  4057  001414                     u4680:
  4058  001414  FFFF               	dw	65535	; assembler added errata NOP
  4059  001416  0E01               	movlw	1
  4060  001418  2616               	addwf	___fldiv@b^0,f,c
  4061  00141A  0E00               	movlw	0
  4062  00141C  2217               	addwfc	(___fldiv@b+1)^0,f,c
  4063  00141E  2218               	addwfc	(___fldiv@b+2)^0,f,c
  4064  001420  2219               	addwfc	(___fldiv@b+3)^0,f,c
  4065  001422  A019               	btfss	(___fldiv@b+3)^0,0,c
  4066  001424  EF16  F00A         	goto	u4691
  4067  001428  EF19  F00A         	goto	u4690
  4068  00142C                     u4691:
  4069  00142C  FFFF               	dw	65535	; assembler added errata NOP
  4070  00142E  EF31  F00A         	goto	l4279
  4071  001432                     u4690:
  4072  001432  FFFF               	dw	65535	; assembler added errata NOP
  4073  001434  C016  F01E         	movff	___fldiv@b,??___fldiv
  4074  001438  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  4075  00143C  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  4076  001440  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  4077  001444  3421               	rlcf	(??___fldiv+3)^0,w,c
  4078  001446  3221               	rrcf	(??___fldiv+3)^0,f,c
  4079  001448  3220               	rrcf	(??___fldiv+2)^0,f,c
  4080  00144A  321F               	rrcf	(??___fldiv+1)^0,f,c
  4081  00144C  321E               	rrcf	??___fldiv^0,f,c
  4082  00144E  C01E  F016         	movff	??___fldiv,___fldiv@b
  4083  001452  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  4084  001456  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  4085  00145A  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  4086  00145E  4A27               	infsnz	___fldiv@new_exp^0,f,c
  4087  001460  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  4088  001462                     l4279:
  4089  001462  FFFF               	dw	65535	; assembler added errata NOP
  4090  001464  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4091  001466  EF3D  F00A         	goto	u4701
  4092  00146A  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  4093  00146C  E109               	bnz	u4700
  4094  00146E  2827               	incf	___fldiv@new_exp^0,w,c
  4095  001470  A0D8               	btfss	status,0,c
  4096  001472  EF3D  F00A         	goto	u4701
  4097  001476  EF40  F00A         	goto	u4700
  4098  00147A                     u4701:
  4099  00147A  FFFF               	dw	65535	; assembler added errata NOP
  4100  00147C  EF4C  F00A         	goto	l4283
  4101  001480                     u4700:
  4102  001480  FFFF               	dw	65535	; assembler added errata NOP
  4103  001482  0E00               	movlw	0
  4104  001484  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4105  001486  6827               	setf	___fldiv@new_exp^0,c
  4106  001488  0E00               	movlw	0
  4107  00148A  6E16               	movwf	___fldiv@b^0,c
  4108  00148C  0E00               	movlw	0
  4109  00148E  6E17               	movwf	(___fldiv@b+1)^0,c
  4110  001490  0E00               	movlw	0
  4111  001492  6E18               	movwf	(___fldiv@b+2)^0,c
  4112  001494  0E00               	movlw	0
  4113  001496  6E19               	movwf	(___fldiv@b+3)^0,c
  4114  001498                     l4283:
  4115  001498  FFFF               	dw	65535	; assembler added errata NOP
  4116  00149A  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4117  00149C  EF5B  F00A         	goto	u4710
  4118  0014A0  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  4119  0014A2  E106               	bnz	u4711
  4120  0014A4  0427               	decf	___fldiv@new_exp^0,w,c
  4121  0014A6  B0D8               	btfsc	status,0,c
  4122  0014A8  EF58  F00A         	goto	u4711
  4123  0014AC  EF5B  F00A         	goto	u4710
  4124  0014B0                     u4711:
  4125  0014B0  FFFF               	dw	65535	; assembler added errata NOP
  4126  0014B2  EF6A  F00A         	goto	l4287
  4127  0014B6                     u4710:
  4128  0014B6  FFFF               	dw	65535	; assembler added errata NOP
  4129  0014B8  0E00               	movlw	0
  4130  0014BA  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4131  0014BC  0E00               	movlw	0
  4132  0014BE  6E27               	movwf	___fldiv@new_exp^0,c
  4133  0014C0  0E00               	movlw	0
  4134  0014C2  6E16               	movwf	___fldiv@b^0,c
  4135  0014C4  0E00               	movlw	0
  4136  0014C6  6E17               	movwf	(___fldiv@b+1)^0,c
  4137  0014C8  0E00               	movlw	0
  4138  0014CA  6E18               	movwf	(___fldiv@b+2)^0,c
  4139  0014CC  0E00               	movlw	0
  4140  0014CE  6E19               	movwf	(___fldiv@b+3)^0,c
  4141  0014D0  0E00               	movlw	0
  4142  0014D2  6E26               	movwf	___fldiv@sign^0,c
  4143  0014D4                     l4287:
  4144  0014D4  FFFF               	dw	65535	; assembler added errata NOP
  4145  0014D6  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  4146  0014DA  A02D               	btfss	___fldiv@bexp^0,0,c
  4147  0014DC  EF72  F00A         	goto	u4721
  4148  0014E0  EF75  F00A         	goto	u4720
  4149  0014E4                     u4721:
  4150  0014E4  FFFF               	dw	65535	; assembler added errata NOP
  4151  0014E6  EF79  F00A         	goto	l4293
  4152  0014EA                     u4720:
  4153  0014EA  FFFF               	dw	65535	; assembler added errata NOP
  4154  0014EC  8E18               	bsf	(___fldiv@b+2)^0,7,c
  4155  0014EE  EF7B  F00A         	goto	l4295
  4156  0014F2                     l4293:
  4157  0014F2  FFFF               	dw	65535	; assembler added errata NOP
  4158  0014F4  9E18               	bcf	(___fldiv@b+2)^0,7,c
  4159  0014F6                     l4295:
  4160  0014F6  FFFF               	dw	65535	; assembler added errata NOP
  4161  0014F8  90D8               	bcf	status,0,c
  4162  0014FA  302D               	rrcf	___fldiv@bexp^0,w,c
  4163  0014FC  6E19               	movwf	(___fldiv@b+3)^0,c
  4164  0014FE  EFFF  F008         	goto	l4209
  4165  001502                     l990:
  4166  001502  FFFF               	dw	65535	; assembler added errata NOP
  4167  001504  0012               	return		;funcret
  4168  001506  FFFF               	dw	65535	; errata NOP
  4169  001508                     __end_of___fldiv:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _Y_axis *****************
  4173 ;; Defined at:
  4174 ;;		line 444 in file "main.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  direction       1    wreg     unsigned char 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  direction       1   13[COMRAM] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, status,2, status,0, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4188 ;;      Params:         0       0       0       0       0       0       0
  4189 ;;      Locals:         1       0       0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0       0
  4191 ;;      Totals:         1       0       0       0       0       0       0
  4192 ;;Total ram usage:        1 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 2
  4195 ;; This function calls:
  4196 ;;		_ms_delay
  4197 ;; This function is called by:
  4198 ;;		_pick_and_place
  4199 ;;		_return_to_initial
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text10
  4204  002546                     __ptext10:
  4205                           	callstack 0
  4206  002546                     _Y_axis:
  4207                           	callstack 0
  4208  002546  FFFF               	dw	65535	; assembler added errata NOP
  4209                           
  4210                           ;incstack = 0
  4211                           ;Y_axis@direction stored from wreg
  4212  002548  6E0E               	movwf	Y_axis@direction^0,c
  4213  00254A                     
  4214                           ;main.c: 445:     if(!New_char_RX){
  4215  00254A  5076               	movf	_New_char_RX^0,w,c
  4216  00254C  A4D8               	btfss	status,2,c
  4217  00254E  EFAB  F012         	goto	u4431
  4218  002552  EFAE  F012         	goto	u4430
  4219  002556                     u4431:
  4220  002556  FFFF               	dw	65535	; assembler added errata NOP
  4221  002558  EF16  F013         	goto	l4119
  4222  00255C                     u4430:
  4223  00255C  FFFF               	dw	65535	; assembler added errata NOP
  4224  00255E                     
  4225                           ;main.c: 446:     if (direction == 0){
  4226  00255E  500E               	movf	Y_axis@direction^0,w,c
  4227  002560  A4D8               	btfss	status,2,c
  4228  002562  EFB5  F012         	goto	u4441
  4229  002566  EFB8  F012         	goto	u4440
  4230  00256A                     u4441:
  4231  00256A  FFFF               	dw	65535	; assembler added errata NOP
  4232  00256C  EFE1  F012         	goto	l4103
  4233  002570                     u4440:
  4234  002570  FFFF               	dw	65535	; assembler added errata NOP
  4235  002572                     
  4236                           ;main.c: 447:         PORTB = 0b00110000;
  4237  002572  0E30               	movlw	48
  4238  002574  6E81               	movwf	129,c	;volatile
  4239  002576                     
  4240                           ;main.c: 448:         ms_delay(1);
  4241  002576  0E00               	movlw	0
  4242  002578  6E09               	movwf	(ms_delay@val+1)^0,c
  4243  00257A  0E01               	movlw	1
  4244  00257C  6E08               	movwf	ms_delay@val^0,c
  4245  00257E  ECEA  F015         	call	_ms_delay	;wreg free
  4246  002582                     
  4247                           ;main.c: 449:         PORTB = 0b01100000;
  4248  002582  0E60               	movlw	96
  4249  002584  6E81               	movwf	129,c	;volatile
  4250                           
  4251                           ;main.c: 450:         ms_delay(1);
  4252  002586  0E00               	movlw	0
  4253  002588  6E09               	movwf	(ms_delay@val+1)^0,c
  4254  00258A  0E01               	movlw	1
  4255  00258C  6E08               	movwf	ms_delay@val^0,c
  4256  00258E  ECEA  F015         	call	_ms_delay	;wreg free
  4257  002592                     
  4258                           ;main.c: 451:         PORTB = 0b11000000;
  4259  002592  0EC0               	movlw	192
  4260  002594  6E81               	movwf	129,c	;volatile
  4261  002596                     
  4262                           ;main.c: 452:         ms_delay(1);
  4263  002596  0E00               	movlw	0
  4264  002598  6E09               	movwf	(ms_delay@val+1)^0,c
  4265  00259A  0E01               	movlw	1
  4266  00259C  6E08               	movwf	ms_delay@val^0,c
  4267  00259E  ECEA  F015         	call	_ms_delay	;wreg free
  4268                           
  4269                           ;main.c: 453:         PORTB = 0b10010000;
  4270  0025A2  0E90               	movlw	144
  4271  0025A4  6E81               	movwf	129,c	;volatile
  4272  0025A6                     
  4273                           ;main.c: 454:         ms_delay(1);
  4274  0025A6  0E00               	movlw	0
  4275  0025A8  6E09               	movwf	(ms_delay@val+1)^0,c
  4276  0025AA  0E01               	movlw	1
  4277  0025AC  6E08               	movwf	ms_delay@val^0,c
  4278  0025AE  ECEA  F015         	call	_ms_delay	;wreg free
  4279  0025B2                     
  4280                           ;main.c: 455:         PORTB = 0b00110000;
  4281  0025B2  0E30               	movlw	48
  4282  0025B4  6E81               	movwf	129,c	;volatile
  4283                           
  4284                           ;main.c: 456:         ms_delay(1);
  4285  0025B6  0E00               	movlw	0
  4286  0025B8  6E09               	movwf	(ms_delay@val+1)^0,c
  4287  0025BA  0E01               	movlw	1
  4288  0025BC  6E08               	movwf	ms_delay@val^0,c
  4289  0025BE  ECEA  F015         	call	_ms_delay	;wreg free
  4290  0025C2                     l4103:
  4291  0025C2  FFFF               	dw	65535	; assembler added errata NOP
  4292                           
  4293                           ;main.c: 458:     if (direction == 1){
  4294  0025C4  040E               	decf	Y_axis@direction^0,w,c
  4295  0025C6  A4D8               	btfss	status,2,c
  4296  0025C8  EFE8  F012         	goto	u4451
  4297  0025CC  EFEB  F012         	goto	u4450
  4298  0025D0                     u4451:
  4299  0025D0  FFFF               	dw	65535	; assembler added errata NOP
  4300  0025D2  EF19  F013         	goto	l292
  4301  0025D6                     u4450:
  4302  0025D6  FFFF               	dw	65535	; assembler added errata NOP
  4303  0025D8                     
  4304                           ;main.c: 459:         PORTB = 0b10010000;
  4305  0025D8  0E90               	movlw	144
  4306  0025DA  6E81               	movwf	129,c	;volatile
  4307  0025DC                     
  4308                           ;main.c: 460:         ms_delay(1);
  4309  0025DC  0E00               	movlw	0
  4310  0025DE  6E09               	movwf	(ms_delay@val+1)^0,c
  4311  0025E0  0E01               	movlw	1
  4312  0025E2  6E08               	movwf	ms_delay@val^0,c
  4313  0025E4  ECEA  F015         	call	_ms_delay	;wreg free
  4314  0025E8                     
  4315                           ;main.c: 461:         PORTB = 0b11000000;
  4316  0025E8  0EC0               	movlw	192
  4317  0025EA  6E81               	movwf	129,c	;volatile
  4318                           
  4319                           ;main.c: 462:         ms_delay(1);
  4320  0025EC  0E00               	movlw	0
  4321  0025EE  6E09               	movwf	(ms_delay@val+1)^0,c
  4322  0025F0  0E01               	movlw	1
  4323  0025F2  6E08               	movwf	ms_delay@val^0,c
  4324  0025F4  ECEA  F015         	call	_ms_delay	;wreg free
  4325  0025F8                     
  4326                           ;main.c: 463:         PORTB = 0b01100000;
  4327  0025F8  0E60               	movlw	96
  4328  0025FA  6E81               	movwf	129,c	;volatile
  4329  0025FC                     
  4330                           ;main.c: 464:         ms_delay(1);
  4331  0025FC  0E00               	movlw	0
  4332  0025FE  6E09               	movwf	(ms_delay@val+1)^0,c
  4333  002600  0E01               	movlw	1
  4334  002602  6E08               	movwf	ms_delay@val^0,c
  4335  002604  ECEA  F015         	call	_ms_delay	;wreg free
  4336                           
  4337                           ;main.c: 465:         PORTB = 0b00110000;
  4338  002608  0E30               	movlw	48
  4339  00260A  6E81               	movwf	129,c	;volatile
  4340  00260C                     
  4341                           ;main.c: 466:         ms_delay(1);
  4342  00260C  0E00               	movlw	0
  4343  00260E  6E09               	movwf	(ms_delay@val+1)^0,c
  4344  002610  0E01               	movlw	1
  4345  002612  6E08               	movwf	ms_delay@val^0,c
  4346  002614  ECEA  F015         	call	_ms_delay	;wreg free
  4347  002618                     
  4348                           ;main.c: 467:         PORTB = 0b10010000;
  4349  002618  0E90               	movlw	144
  4350  00261A  6E81               	movwf	129,c	;volatile
  4351                           
  4352                           ;main.c: 468:         ms_delay(1);
  4353  00261C  0E00               	movlw	0
  4354  00261E  6E09               	movwf	(ms_delay@val+1)^0,c
  4355  002620  0E01               	movlw	1
  4356  002622  6E08               	movwf	ms_delay@val^0,c
  4357  002624  ECEA  F015         	call	_ms_delay	;wreg free
  4358  002628  EF19  F013         	goto	l292
  4359  00262C                     l4119:
  4360  00262C  FFFF               	dw	65535	; assembler added errata NOP
  4361                           
  4362                           ;main.c: 471:         stop=1;
  4363  00262E  0E01               	movlw	1
  4364  002630  6E71               	movwf	_stop^0,c
  4365  002632                     l292:
  4366  002632  FFFF               	dw	65535	; assembler added errata NOP
  4367  002634  0012               	return		;funcret
  4368  002636  FFFF               	dw	65535	; errata NOP
  4369  002638                     __end_of_Y_axis:
  4370                           	callstack 0
  4371                           
  4372 ;; *************** function _X_axis *****************
  4373 ;; Defined at:
  4374 ;;		line 413 in file "main.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  direction       1    wreg     unsigned char 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  direction       1   13[COMRAM] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4388 ;;      Params:         0       0       0       0       0       0       0
  4389 ;;      Locals:         1       0       0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0
  4391 ;;      Totals:         1       0       0       0       0       0       0
  4392 ;;Total ram usage:        1 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 2
  4395 ;; This function calls:
  4396 ;;		_ms_delay
  4397 ;; This function is called by:
  4398 ;;		_pick_and_place
  4399 ;;		_return_to_initial
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text11
  4404  002638                     __ptext11:
  4405                           	callstack 0
  4406  002638                     _X_axis:
  4407                           	callstack 0
  4408  002638  FFFF               	dw	65535	; assembler added errata NOP
  4409                           
  4410                           ;incstack = 0
  4411                           ;X_axis@direction stored from wreg
  4412  00263A  6E0E               	movwf	X_axis@direction^0,c
  4413  00263C                     
  4414                           ;main.c: 414:     if(!New_char_RX){
  4415  00263C  5076               	movf	_New_char_RX^0,w,c
  4416  00263E  A4D8               	btfss	status,2,c
  4417  002640  EF24  F013         	goto	u4401
  4418  002644  EF27  F013         	goto	u4400
  4419  002648                     u4401:
  4420  002648  FFFF               	dw	65535	; assembler added errata NOP
  4421  00264A  EF8F  F013         	goto	l4083
  4422  00264E                     u4400:
  4423  00264E  FFFF               	dw	65535	; assembler added errata NOP
  4424  002650                     
  4425                           ;main.c: 415:     if (direction == 0){
  4426  002650  500E               	movf	X_axis@direction^0,w,c
  4427  002652  A4D8               	btfss	status,2,c
  4428  002654  EF2E  F013         	goto	u4411
  4429  002658  EF31  F013         	goto	u4410
  4430  00265C                     u4411:
  4431  00265C  FFFF               	dw	65535	; assembler added errata NOP
  4432  00265E  EF5A  F013         	goto	l4067
  4433  002662                     u4410:
  4434  002662  FFFF               	dw	65535	; assembler added errata NOP
  4435  002664                     
  4436                           ;main.c: 416:         PORTB = 0b00000011;
  4437  002664  0E03               	movlw	3
  4438  002666  6E81               	movwf	129,c	;volatile
  4439  002668                     
  4440                           ;main.c: 417:         ms_delay(1);
  4441  002668  0E00               	movlw	0
  4442  00266A  6E09               	movwf	(ms_delay@val+1)^0,c
  4443  00266C  0E01               	movlw	1
  4444  00266E  6E08               	movwf	ms_delay@val^0,c
  4445  002670  ECEA  F015         	call	_ms_delay	;wreg free
  4446  002674                     
  4447                           ;main.c: 418:         PORTB = 0b00000110;
  4448  002674  0E06               	movlw	6
  4449  002676  6E81               	movwf	129,c	;volatile
  4450                           
  4451                           ;main.c: 419:         ms_delay(1);
  4452  002678  0E00               	movlw	0
  4453  00267A  6E09               	movwf	(ms_delay@val+1)^0,c
  4454  00267C  0E01               	movlw	1
  4455  00267E  6E08               	movwf	ms_delay@val^0,c
  4456  002680  ECEA  F015         	call	_ms_delay	;wreg free
  4457  002684                     
  4458                           ;main.c: 420:         PORTB = 0b00001100;
  4459  002684  0E0C               	movlw	12
  4460  002686  6E81               	movwf	129,c	;volatile
  4461  002688                     
  4462                           ;main.c: 421:         ms_delay(1);
  4463  002688  0E00               	movlw	0
  4464  00268A  6E09               	movwf	(ms_delay@val+1)^0,c
  4465  00268C  0E01               	movlw	1
  4466  00268E  6E08               	movwf	ms_delay@val^0,c
  4467  002690  ECEA  F015         	call	_ms_delay	;wreg free
  4468                           
  4469                           ;main.c: 422:         PORTB = 0b00001001;
  4470  002694  0E09               	movlw	9
  4471  002696  6E81               	movwf	129,c	;volatile
  4472  002698                     
  4473                           ;main.c: 423:         ms_delay(1);
  4474  002698  0E00               	movlw	0
  4475  00269A  6E09               	movwf	(ms_delay@val+1)^0,c
  4476  00269C  0E01               	movlw	1
  4477  00269E  6E08               	movwf	ms_delay@val^0,c
  4478  0026A0  ECEA  F015         	call	_ms_delay	;wreg free
  4479  0026A4                     
  4480                           ;main.c: 424:         PORTB = 0b00000011;
  4481  0026A4  0E03               	movlw	3
  4482  0026A6  6E81               	movwf	129,c	;volatile
  4483                           
  4484                           ;main.c: 425:         ms_delay(1);
  4485  0026A8  0E00               	movlw	0
  4486  0026AA  6E09               	movwf	(ms_delay@val+1)^0,c
  4487  0026AC  0E01               	movlw	1
  4488  0026AE  6E08               	movwf	ms_delay@val^0,c
  4489  0026B0  ECEA  F015         	call	_ms_delay	;wreg free
  4490  0026B4                     l4067:
  4491  0026B4  FFFF               	dw	65535	; assembler added errata NOP
  4492                           
  4493                           ;main.c: 427:     if (direction == 1){
  4494  0026B6  040E               	decf	X_axis@direction^0,w,c
  4495  0026B8  A4D8               	btfss	status,2,c
  4496  0026BA  EF61  F013         	goto	u4421
  4497  0026BE  EF64  F013         	goto	u4420
  4498  0026C2                     u4421:
  4499  0026C2  FFFF               	dw	65535	; assembler added errata NOP
  4500  0026C4  EF92  F013         	goto	l285
  4501  0026C8                     u4420:
  4502  0026C8  FFFF               	dw	65535	; assembler added errata NOP
  4503  0026CA                     
  4504                           ;main.c: 428:         PORTB = 0b00001001;
  4505  0026CA  0E09               	movlw	9
  4506  0026CC  6E81               	movwf	129,c	;volatile
  4507  0026CE                     
  4508                           ;main.c: 429:         ms_delay(1);
  4509  0026CE  0E00               	movlw	0
  4510  0026D0  6E09               	movwf	(ms_delay@val+1)^0,c
  4511  0026D2  0E01               	movlw	1
  4512  0026D4  6E08               	movwf	ms_delay@val^0,c
  4513  0026D6  ECEA  F015         	call	_ms_delay	;wreg free
  4514  0026DA                     
  4515                           ;main.c: 430:         PORTB = 0b00001100;
  4516  0026DA  0E0C               	movlw	12
  4517  0026DC  6E81               	movwf	129,c	;volatile
  4518                           
  4519                           ;main.c: 431:         ms_delay(1);
  4520  0026DE  0E00               	movlw	0
  4521  0026E0  6E09               	movwf	(ms_delay@val+1)^0,c
  4522  0026E2  0E01               	movlw	1
  4523  0026E4  6E08               	movwf	ms_delay@val^0,c
  4524  0026E6  ECEA  F015         	call	_ms_delay	;wreg free
  4525  0026EA                     
  4526                           ;main.c: 432:         PORTB = 0b00000110;
  4527  0026EA  0E06               	movlw	6
  4528  0026EC  6E81               	movwf	129,c	;volatile
  4529  0026EE                     
  4530                           ;main.c: 433:         ms_delay(1);
  4531  0026EE  0E00               	movlw	0
  4532  0026F0  6E09               	movwf	(ms_delay@val+1)^0,c
  4533  0026F2  0E01               	movlw	1
  4534  0026F4  6E08               	movwf	ms_delay@val^0,c
  4535  0026F6  ECEA  F015         	call	_ms_delay	;wreg free
  4536                           
  4537                           ;main.c: 434:         PORTB = 0b00000011;
  4538  0026FA  0E03               	movlw	3
  4539  0026FC  6E81               	movwf	129,c	;volatile
  4540  0026FE                     
  4541                           ;main.c: 435:         ms_delay(1);
  4542  0026FE  0E00               	movlw	0
  4543  002700  6E09               	movwf	(ms_delay@val+1)^0,c
  4544  002702  0E01               	movlw	1
  4545  002704  6E08               	movwf	ms_delay@val^0,c
  4546  002706  ECEA  F015         	call	_ms_delay	;wreg free
  4547  00270A                     
  4548                           ;main.c: 436:         PORTB = 0b00001001;
  4549  00270A  0E09               	movlw	9
  4550  00270C  6E81               	movwf	129,c	;volatile
  4551                           
  4552                           ;main.c: 437:         ms_delay(1);
  4553  00270E  0E00               	movlw	0
  4554  002710  6E09               	movwf	(ms_delay@val+1)^0,c
  4555  002712  0E01               	movlw	1
  4556  002714  6E08               	movwf	ms_delay@val^0,c
  4557  002716  ECEA  F015         	call	_ms_delay	;wreg free
  4558  00271A  EF92  F013         	goto	l285
  4559  00271E                     l4083:
  4560  00271E  FFFF               	dw	65535	; assembler added errata NOP
  4561                           
  4562                           ;main.c: 440:         stop=1;
  4563  002720  0E01               	movlw	1
  4564  002722  6E71               	movwf	_stop^0,c
  4565  002724                     l285:
  4566  002724  FFFF               	dw	65535	; assembler added errata NOP
  4567  002726  0012               	return		;funcret
  4568  002728  FFFF               	dw	65535	; errata NOP
  4569  00272A                     __end_of_X_axis:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function _Twister *****************
  4573 ;; Defined at:
  4574 ;;		line 506 in file "main.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  direction       1    wreg     unsigned char 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  direction       1   13[COMRAM] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4588 ;;      Params:         0       0       0       0       0       0       0
  4589 ;;      Locals:         1       0       0       0       0       0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0
  4591 ;;      Totals:         1       0       0       0       0       0       0
  4592 ;;Total ram usage:        1 bytes
  4593 ;; Hardware stack levels used: 1
  4594 ;; Hardware stack levels required when called: 2
  4595 ;; This function calls:
  4596 ;;		_ms_delay
  4597 ;; This function is called by:
  4598 ;;		_pick_and_place
  4599 ;;		_return_to_initial
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text12
  4604  00280E                     __ptext12:
  4605                           	callstack 0
  4606  00280E                     _Twister:
  4607                           	callstack 0
  4608  00280E  FFFF               	dw	65535	; assembler added errata NOP
  4609                           
  4610                           ;incstack = 0
  4611                           ;Twister@direction stored from wreg
  4612  002810  6E0E               	movwf	Twister@direction^0,c
  4613  002812                     
  4614                           ;main.c: 507:     if(New_char_RX){
  4615  002812  5076               	movf	_New_char_RX^0,w,c
  4616  002814  B4D8               	btfsc	status,2,c
  4617  002816  EF0F  F014         	goto	u4461
  4618  00281A  EF12  F014         	goto	u4460
  4619  00281E                     u4461:
  4620  00281E  FFFF               	dw	65535	; assembler added errata NOP
  4621  002820  EF6A  F014         	goto	l4151
  4622  002824                     u4460:
  4623  002824  FFFF               	dw	65535	; assembler added errata NOP
  4624  002826                     
  4625                           ;main.c: 508:     if (direction == 0){
  4626  002826  500E               	movf	Twister@direction^0,w,c
  4627  002828  A4D8               	btfss	status,2,c
  4628  00282A  EF19  F014         	goto	u4471
  4629  00282E  EF1C  F014         	goto	u4470
  4630  002832                     u4471:
  4631  002832  FFFF               	dw	65535	; assembler added errata NOP
  4632  002834  EF3D  F014         	goto	l4137
  4633  002838                     u4470:
  4634  002838  FFFF               	dw	65535	; assembler added errata NOP
  4635  00283A                     
  4636                           ;main.c: 509:         PORTD = 0b00110000;
  4637  00283A  0E30               	movlw	48
  4638  00283C  6E83               	movwf	131,c	;volatile
  4639  00283E                     
  4640                           ;main.c: 510:         ms_delay(1);
  4641  00283E  0E00               	movlw	0
  4642  002840  6E09               	movwf	(ms_delay@val+1)^0,c
  4643  002842  0E01               	movlw	1
  4644  002844  6E08               	movwf	ms_delay@val^0,c
  4645  002846  ECEA  F015         	call	_ms_delay	;wreg free
  4646  00284A                     
  4647                           ;main.c: 511:         PORTD = 0b11000000;
  4648  00284A  0EC0               	movlw	192
  4649  00284C  6E83               	movwf	131,c	;volatile
  4650                           
  4651                           ;main.c: 512:         ms_delay(1);
  4652  00284E  0E00               	movlw	0
  4653  002850  6E09               	movwf	(ms_delay@val+1)^0,c
  4654  002852  0E01               	movlw	1
  4655  002854  6E08               	movwf	ms_delay@val^0,c
  4656  002856  ECEA  F015         	call	_ms_delay	;wreg free
  4657  00285A                     
  4658                           ;main.c: 513:         PORTD = 0b10010000;
  4659  00285A  0E90               	movlw	144
  4660  00285C  6E83               	movwf	131,c	;volatile
  4661  00285E                     
  4662                           ;main.c: 514:         ms_delay(1);
  4663  00285E  0E00               	movlw	0
  4664  002860  6E09               	movwf	(ms_delay@val+1)^0,c
  4665  002862  0E01               	movlw	1
  4666  002864  6E08               	movwf	ms_delay@val^0,c
  4667  002866  ECEA  F015         	call	_ms_delay	;wreg free
  4668                           
  4669                           ;main.c: 515:         PORTD = 0b00110000;
  4670  00286A  0E30               	movlw	48
  4671  00286C  6E83               	movwf	131,c	;volatile
  4672  00286E                     
  4673                           ;main.c: 516:         ms_delay(1);
  4674  00286E  0E00               	movlw	0
  4675  002870  6E09               	movwf	(ms_delay@val+1)^0,c
  4676  002872  0E01               	movlw	1
  4677  002874  6E08               	movwf	ms_delay@val^0,c
  4678  002876  ECEA  F015         	call	_ms_delay	;wreg free
  4679  00287A                     l4137:
  4680  00287A  FFFF               	dw	65535	; assembler added errata NOP
  4681                           
  4682                           ;main.c: 518:     if (direction == 1){
  4683  00287C  040E               	decf	Twister@direction^0,w,c
  4684  00287E  A4D8               	btfss	status,2,c
  4685  002880  EF44  F014         	goto	u4481
  4686  002884  EF47  F014         	goto	u4480
  4687  002888                     u4481:
  4688  002888  FFFF               	dw	65535	; assembler added errata NOP
  4689  00288A  EF6D  F014         	goto	l306
  4690  00288E                     u4480:
  4691  00288E  FFFF               	dw	65535	; assembler added errata NOP
  4692  002890                     
  4693                           ;main.c: 519:         PORTD = 0b10010000;
  4694  002890  0E90               	movlw	144
  4695  002892  6E83               	movwf	131,c	;volatile
  4696  002894                     
  4697                           ;main.c: 520:         ms_delay(1);
  4698  002894  0E00               	movlw	0
  4699  002896  6E09               	movwf	(ms_delay@val+1)^0,c
  4700  002898  0E01               	movlw	1
  4701  00289A  6E08               	movwf	ms_delay@val^0,c
  4702  00289C  ECEA  F015         	call	_ms_delay	;wreg free
  4703  0028A0                     
  4704                           ;main.c: 521:         PORTD = 0b01100000;
  4705  0028A0  0E60               	movlw	96
  4706  0028A2  6E83               	movwf	131,c	;volatile
  4707                           
  4708                           ;main.c: 522:         ms_delay(1);
  4709  0028A4  0E00               	movlw	0
  4710  0028A6  6E09               	movwf	(ms_delay@val+1)^0,c
  4711  0028A8  0E01               	movlw	1
  4712  0028AA  6E08               	movwf	ms_delay@val^0,c
  4713  0028AC  ECEA  F015         	call	_ms_delay	;wreg free
  4714  0028B0                     
  4715                           ;main.c: 523:         PORTD = 0b00110000;
  4716  0028B0  0E30               	movlw	48
  4717  0028B2  6E83               	movwf	131,c	;volatile
  4718  0028B4                     
  4719                           ;main.c: 524:         ms_delay(1);
  4720  0028B4  0E00               	movlw	0
  4721  0028B6  6E09               	movwf	(ms_delay@val+1)^0,c
  4722  0028B8  0E01               	movlw	1
  4723  0028BA  6E08               	movwf	ms_delay@val^0,c
  4724  0028BC  ECEA  F015         	call	_ms_delay	;wreg free
  4725                           
  4726                           ;main.c: 525:         PORTD = 0b10010000;
  4727  0028C0  0E90               	movlw	144
  4728  0028C2  6E83               	movwf	131,c	;volatile
  4729  0028C4                     
  4730                           ;main.c: 526:         ms_delay(1);
  4731  0028C4  0E00               	movlw	0
  4732  0028C6  6E09               	movwf	(ms_delay@val+1)^0,c
  4733  0028C8  0E01               	movlw	1
  4734  0028CA  6E08               	movwf	ms_delay@val^0,c
  4735  0028CC  ECEA  F015         	call	_ms_delay	;wreg free
  4736  0028D0  EF6D  F014         	goto	l306
  4737  0028D4                     l4151:
  4738  0028D4  FFFF               	dw	65535	; assembler added errata NOP
  4739                           
  4740                           ;main.c: 530:         stop=1;
  4741  0028D6  0E01               	movlw	1
  4742  0028D8  6E71               	movwf	_stop^0,c
  4743  0028DA                     l306:
  4744  0028DA  FFFF               	dw	65535	; assembler added errata NOP
  4745  0028DC  0012               	return		;funcret
  4746  0028DE  FFFF               	dw	65535	; errata NOP
  4747  0028E0                     __end_of_Twister:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function _ms_delay *****************
  4751 ;; Defined at:
  4752 ;;		line 535 in file "main.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  val             2    7[COMRAM] unsigned int 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  j               2   11[COMRAM] unsigned int 
  4757 ;;  i               2    9[COMRAM] unsigned int 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4767 ;;      Params:         2       0       0       0       0       0       0
  4768 ;;      Locals:         4       0       0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0
  4770 ;;      Totals:         6       0       0       0       0       0       0
  4771 ;;Total ram usage:        6 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_X_axis
  4778 ;;		_Y_axis
  4779 ;;		_Twister
  4780 ;;		_Z_axis
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text13
  4785  002BD4                     __ptext13:
  4786                           	callstack 0
  4787  002BD4                     _ms_delay:
  4788                           	callstack 0
  4789  002BD4  FFFF               	dw	65535	; assembler added errata NOP
  4790  002BD6                     
  4791                           ;main.c: 535: void ms_delay(unsigned int val);main.c: 536: {;main.c: 537:      unsigned 
      +                          int i,j;;main.c: 538:         for(i=0;i<val;i++)
  4792  002BD6  0E00               	movlw	0
  4793  002BD8  6E0B               	movwf	(ms_delay@i+1)^0,c
  4794  002BDA  0E00               	movlw	0
  4795  002BDC  6E0A               	movwf	ms_delay@i^0,c
  4796  002BDE  EF08  F016         	goto	l3909
  4797  002BE2                     l3897:
  4798  002BE2  FFFF               	dw	65535	; assembler added errata NOP
  4799                           
  4800                           ;main.c: 539:             for(j=0;j<1650;j++);
  4801  002BE4  0E00               	movlw	0
  4802  002BE6  6E0D               	movwf	(ms_delay@j+1)^0,c
  4803  002BE8  0E00               	movlw	0
  4804  002BEA  6E0C               	movwf	ms_delay@j^0,c
  4805  002BEC                     l3903:
  4806  002BEC  FFFF               	dw	65535	; assembler added errata NOP
  4807  002BEE  4A0C               	infsnz	ms_delay@j^0,f,c
  4808  002BF0  2A0D               	incf	(ms_delay@j+1)^0,f,c
  4809  002BF2  0E72               	movlw	114
  4810  002BF4  5C0C               	subwf	ms_delay@j^0,w,c
  4811  002BF6  0E06               	movlw	6
  4812  002BF8  580D               	subwfb	(ms_delay@j+1)^0,w,c
  4813  002BFA  A0D8               	btfss	status,0,c
  4814  002BFC  EF02  F016         	goto	u4161
  4815  002C00  EF05  F016         	goto	u4160
  4816  002C04                     u4161:
  4817  002C04  FFFF               	dw	65535	; assembler added errata NOP
  4818  002C06  EFF6  F015         	goto	l3903
  4819  002C0A                     u4160:
  4820  002C0A  FFFF               	dw	65535	; assembler added errata NOP
  4821  002C0C  4A0A               	infsnz	ms_delay@i^0,f,c
  4822  002C0E  2A0B               	incf	(ms_delay@i+1)^0,f,c
  4823  002C10                     l3909:
  4824  002C10  FFFF               	dw	65535	; assembler added errata NOP
  4825  002C12  5008               	movf	ms_delay@val^0,w,c
  4826  002C14  5C0A               	subwf	ms_delay@i^0,w,c
  4827  002C16  5009               	movf	(ms_delay@val+1)^0,w,c
  4828  002C18  580B               	subwfb	(ms_delay@i+1)^0,w,c
  4829  002C1A  A0D8               	btfss	status,0,c
  4830  002C1C  EF12  F016         	goto	u4171
  4831  002C20  EF15  F016         	goto	u4170
  4832  002C24                     u4171:
  4833  002C24  FFFF               	dw	65535	; assembler added errata NOP
  4834  002C26  EFF1  F015         	goto	l3897
  4835  002C2A                     u4170:
  4836  002C2A  FFFF               	dw	65535	; assembler added errata NOP
  4837  002C2C  0012               	return		;funcret
  4838  002C2E  FFFF               	dw	65535	; errata NOP
  4839  002C30                     __end_of_ms_delay:
  4840                           	callstack 0
  4841                           
  4842 ;; *************** function _add_component *****************
  4843 ;; Defined at:
  4844 ;;		line 304 in file "main.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  ip              1   33[COMRAM] const unsigned char 
  4849 ;;  add_to_seque    2   31[COMRAM] unsigned char [2]
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4859 ;;      Params:         0       0       0       0       0       0       0
  4860 ;;      Locals:         3       0       0       0       0       0       0
  4861 ;;      Temps:          2       0       0       0       0       0       0
  4862 ;;      Totals:         5       0       0       0       0       0       0
  4863 ;;Total ram usage:        5 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 4
  4866 ;; This function calls:
  4867 ;;		_atoi
  4868 ;;		_change_sequence
  4869 ;;		_print_string
  4870 ;;		_strncat
  4871 ;; This function is called by:
  4872 ;;		_start_up_menu
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text14
  4877  001C2C                     __ptext14:
  4878                           	callstack 0
  4879  001C2C                     _add_component:
  4880                           	callstack 0
  4881  001C2C  FFFF               	dw	65535	; assembler added errata NOP
  4882  001C2E                     
  4883                           ;main.c: 305:     print_string("\nEnter the pick position X:");
  4884  001C2E  0E94               	movlw	low STR_12
  4885  001C30  6E09               	movwf	print_string@strng^0,c
  4886  001C32  0E7F               	movlw	high STR_12
  4887  001C34  6E0A               	movwf	(print_string@strng+1)^0,c
  4888  001C36  ECBC  F014         	call	_print_string	;wreg free
  4889  001C3A                     l4503:
  4890  001C3A  FFFF               	dw	65535	; assembler added errata NOP
  4891                           
  4892                           ;main.c: 307:         if(New_char_RX){
  4893  001C3C  5076               	movf	_New_char_RX^0,w,c
  4894  001C3E  B4D8               	btfsc	status,2,c
  4895  001C40  EF24  F00E         	goto	u5171
  4896  001C44  EF27  F00E         	goto	u5170
  4897  001C48                     u5171:
  4898  001C48  FFFF               	dw	65535	; assembler added errata NOP
  4899  001C4A  EF1D  F00E         	goto	l4503
  4900  001C4E                     u5170:
  4901  001C4E  FFFF               	dw	65535	; assembler added errata NOP
  4902  001C50                     
  4903                           ;main.c: 308:             X_Pick_D=atoi(input_str);
  4904  001C50  0EBE               	movlw	low _input_str
  4905  001C52  6E0F               	movwf	atoi@s^0,c
  4906  001C54  0E00               	movlw	high _input_str
  4907  001C56  6E10               	movwf	(atoi@s+1)^0,c
  4908  001C58  EC17  F010         	call	_atoi	;wreg free
  4909  001C5C  C00F  F059         	movff	?_atoi,_X_Pick_D
  4910  001C60  C010  F05A         	movff	?_atoi+1,_X_Pick_D+1
  4911  001C64                     
  4912                           ;main.c: 309:             New_char_RX=0;
  4913  001C64  0E00               	movlw	0
  4914  001C66  6E76               	movwf	_New_char_RX^0,c
  4915  001C68                     
  4916                           ;main.c: 313:     print_string("\nEnter the pick position Y:");
  4917  001C68  0EB0               	movlw	low STR_13
  4918  001C6A  6E09               	movwf	print_string@strng^0,c
  4919  001C6C  0E7F               	movlw	high STR_13
  4920  001C6E  6E0A               	movwf	(print_string@strng+1)^0,c
  4921  001C70  ECBC  F014         	call	_print_string	;wreg free
  4922  001C74                     l4511:
  4923  001C74  FFFF               	dw	65535	; assembler added errata NOP
  4924                           
  4925                           ;main.c: 315:         if(New_char_RX){
  4926  001C76  5076               	movf	_New_char_RX^0,w,c
  4927  001C78  B4D8               	btfsc	status,2,c
  4928  001C7A  EF41  F00E         	goto	u5181
  4929  001C7E  EF44  F00E         	goto	u5180
  4930  001C82                     u5181:
  4931  001C82  FFFF               	dw	65535	; assembler added errata NOP
  4932  001C84  EF3A  F00E         	goto	l4511
  4933  001C88                     u5180:
  4934  001C88  FFFF               	dw	65535	; assembler added errata NOP
  4935  001C8A                     
  4936                           ;main.c: 316:             Y_Pick_D=(atoi(input_str));
  4937  001C8A  0EBE               	movlw	low _input_str
  4938  001C8C  6E0F               	movwf	atoi@s^0,c
  4939  001C8E  0E00               	movlw	high _input_str
  4940  001C90  6E10               	movwf	(atoi@s+1)^0,c
  4941  001C92  EC17  F010         	call	_atoi	;wreg free
  4942  001C96  C00F  F057         	movff	?_atoi,_Y_Pick_D
  4943  001C9A  C010  F058         	movff	?_atoi+1,_Y_Pick_D+1
  4944  001C9E                     
  4945                           ;main.c: 317:             New_char_RX=0;
  4946  001C9E  0E00               	movlw	0
  4947  001CA0  6E76               	movwf	_New_char_RX^0,c
  4948  001CA2                     
  4949                           ;main.c: 321:     print_string("\nEnter the pick orientation:");
  4950  001CA2  0E77               	movlw	low STR_14
  4951  001CA4  6E09               	movwf	print_string@strng^0,c
  4952  001CA6  0E7F               	movlw	high STR_14
  4953  001CA8  6E0A               	movwf	(print_string@strng+1)^0,c
  4954  001CAA  ECBC  F014         	call	_print_string	;wreg free
  4955  001CAE                     l4519:
  4956  001CAE  FFFF               	dw	65535	; assembler added errata NOP
  4957                           
  4958                           ;main.c: 323:         if(New_char_RX){
  4959  001CB0  5076               	movf	_New_char_RX^0,w,c
  4960  001CB2  B4D8               	btfsc	status,2,c
  4961  001CB4  EF5E  F00E         	goto	u5191
  4962  001CB8  EF61  F00E         	goto	u5190
  4963  001CBC                     u5191:
  4964  001CBC  FFFF               	dw	65535	; assembler added errata NOP
  4965  001CBE  EF57  F00E         	goto	l4519
  4966  001CC2                     u5190:
  4967  001CC2  FFFF               	dw	65535	; assembler added errata NOP
  4968  001CC4                     
  4969                           ;main.c: 324:             Pick_Angle_D=(atoi(input_str));
  4970  001CC4  0EBE               	movlw	low _input_str
  4971  001CC6  6E0F               	movwf	atoi@s^0,c
  4972  001CC8  0E00               	movlw	high _input_str
  4973  001CCA  6E10               	movwf	(atoi@s+1)^0,c
  4974  001CCC  EC17  F010         	call	_atoi	;wreg free
  4975  001CD0  C00F  F0AA         	movff	?_atoi,_Pick_Angle_D
  4976  001CD4  C010  F0AB         	movff	?_atoi+1,_Pick_Angle_D+1
  4977  001CD8                     
  4978                           ;main.c: 325:             New_char_RX=0;
  4979  001CD8  0E00               	movlw	0
  4980  001CDA  6E76               	movwf	_New_char_RX^0,c
  4981  001CDC                     
  4982                           ;main.c: 329:     print_string("\nEnter the place position X:");
  4983  001CDC  0E3D               	movlw	low STR_15
  4984  001CDE  6E09               	movwf	print_string@strng^0,c
  4985  001CE0  0E7F               	movlw	high STR_15
  4986  001CE2  6E0A               	movwf	(print_string@strng+1)^0,c
  4987  001CE4  ECBC  F014         	call	_print_string	;wreg free
  4988  001CE8                     l4527:
  4989  001CE8  FFFF               	dw	65535	; assembler added errata NOP
  4990                           
  4991                           ;main.c: 331:         if(New_char_RX){
  4992  001CEA  5076               	movf	_New_char_RX^0,w,c
  4993  001CEC  B4D8               	btfsc	status,2,c
  4994  001CEE  EF7B  F00E         	goto	u5201
  4995  001CF2  EF7E  F00E         	goto	u5200
  4996  001CF6                     u5201:
  4997  001CF6  FFFF               	dw	65535	; assembler added errata NOP
  4998  001CF8  EF74  F00E         	goto	l4527
  4999  001CFC                     u5200:
  5000  001CFC  FFFF               	dw	65535	; assembler added errata NOP
  5001  001CFE                     
  5002                           ;main.c: 332:             X_Place_D=(atoi(input_str));
  5003  001CFE  0EBE               	movlw	low _input_str
  5004  001D00  6E0F               	movwf	atoi@s^0,c
  5005  001D02  0E00               	movlw	high _input_str
  5006  001D04  6E10               	movwf	(atoi@s+1)^0,c
  5007  001D06  EC17  F010         	call	_atoi	;wreg free
  5008  001D0A  C00F  F0A8         	movff	?_atoi,_X_Place_D
  5009  001D0E  C010  F0A9         	movff	?_atoi+1,_X_Place_D+1
  5010  001D12                     
  5011                           ;main.c: 333:             New_char_RX=0;
  5012  001D12  0E00               	movlw	0
  5013  001D14  6E76               	movwf	_New_char_RX^0,c
  5014  001D16                     
  5015                           ;main.c: 337:     print_string("\nEnter the place position Y:");
  5016  001D16  0E5A               	movlw	low STR_16
  5017  001D18  6E09               	movwf	print_string@strng^0,c
  5018  001D1A  0E7F               	movlw	high STR_16
  5019  001D1C  6E0A               	movwf	(print_string@strng+1)^0,c
  5020  001D1E  ECBC  F014         	call	_print_string	;wreg free
  5021  001D22                     l4535:
  5022  001D22  FFFF               	dw	65535	; assembler added errata NOP
  5023                           
  5024                           ;main.c: 339:         if(New_char_RX){
  5025  001D24  5076               	movf	_New_char_RX^0,w,c
  5026  001D26  B4D8               	btfsc	status,2,c
  5027  001D28  EF98  F00E         	goto	u5211
  5028  001D2C  EF9B  F00E         	goto	u5210
  5029  001D30                     u5211:
  5030  001D30  FFFF               	dw	65535	; assembler added errata NOP
  5031  001D32  EF91  F00E         	goto	l4535
  5032  001D36                     u5210:
  5033  001D36  FFFF               	dw	65535	; assembler added errata NOP
  5034  001D38                     
  5035                           ;main.c: 340:             Y_Place_D=(atoi(input_str));
  5036  001D38  0EBE               	movlw	low _input_str
  5037  001D3A  6E0F               	movwf	atoi@s^0,c
  5038  001D3C  0E00               	movlw	high _input_str
  5039  001D3E  6E10               	movwf	(atoi@s+1)^0,c
  5040  001D40  EC17  F010         	call	_atoi	;wreg free
  5041  001D44  C00F  F0A6         	movff	?_atoi,_Y_Place_D
  5042  001D48  C010  F0A7         	movff	?_atoi+1,_Y_Place_D+1
  5043  001D4C                     
  5044                           ;main.c: 341:             New_char_RX=0;
  5045  001D4C  0E00               	movlw	0
  5046  001D4E  6E76               	movwf	_New_char_RX^0,c
  5047  001D50                     
  5048                           ;main.c: 345:     print_string("\nEnter the place orientation:");
  5049  001D50  0E1F               	movlw	low STR_17
  5050  001D52  6E09               	movwf	print_string@strng^0,c
  5051  001D54  0E7F               	movlw	high STR_17
  5052  001D56  6E0A               	movwf	(print_string@strng+1)^0,c
  5053  001D58  ECBC  F014         	call	_print_string	;wreg free
  5054  001D5C                     l4543:
  5055  001D5C  FFFF               	dw	65535	; assembler added errata NOP
  5056                           
  5057                           ;main.c: 347:         if(New_char_RX){
  5058  001D5E  5076               	movf	_New_char_RX^0,w,c
  5059  001D60  B4D8               	btfsc	status,2,c
  5060  001D62  EFB5  F00E         	goto	u5221
  5061  001D66  EFB8  F00E         	goto	u5220
  5062  001D6A                     u5221:
  5063  001D6A  FFFF               	dw	65535	; assembler added errata NOP
  5064  001D6C  EFAE  F00E         	goto	l4543
  5065  001D70                     u5220:
  5066  001D70  FFFF               	dw	65535	; assembler added errata NOP
  5067  001D72                     
  5068                           ;main.c: 348:             Place_Angle_D=(atoi(input_str));
  5069  001D72  0EBE               	movlw	low _input_str
  5070  001D74  6E0F               	movwf	atoi@s^0,c
  5071  001D76  0E00               	movlw	high _input_str
  5072  001D78  6E10               	movwf	(atoi@s+1)^0,c
  5073  001D7A  EC17  F010         	call	_atoi	;wreg free
  5074  001D7E  C00F  F0A4         	movff	?_atoi,_Place_Angle_D
  5075  001D82  C010  F0A5         	movff	?_atoi+1,_Place_Angle_D+1
  5076  001D86                     
  5077                           ;main.c: 349:             New_char_RX=0;
  5078  001D86  0E00               	movlw	0
  5079  001D88  6E76               	movwf	_New_char_RX^0,c
  5080  001D8A                     
  5081                           ;main.c: 354:     char add_to_sequence[]="D";
  5082  001D8A  C0BA  F020         	movff	add_component@F3132,add_component@add_to_sequence
  5083  001D8E  C0BB  F021         	movff	add_component@F3132+1,add_component@add_to_sequence+1
  5084  001D92                     
  5085                           ;main.c: 355:     strncat(sequence, add_to_sequence,1);
  5086  001D92  0E72               	movlw	low _sequence
  5087  001D94  6E0C               	movwf	strncat@d^0,c
  5088  001D96  0E00               	movlw	high _sequence
  5089  001D98  6E0D               	movwf	(strncat@d+1)^0,c
  5090  001D9A  0E20               	movlw	low add_component@add_to_sequence
  5091  001D9C  6E0E               	movwf	strncat@s^0,c
  5092  001D9E  0E00               	movlw	high add_component@add_to_sequence
  5093  001DA0  6E0F               	movwf	(strncat@s+1)^0,c
  5094  001DA2  0E00               	movlw	0
  5095  001DA4  6E11               	movwf	(strncat@n+1)^0,c
  5096  001DA6  0E01               	movlw	1
  5097  001DA8  6E10               	movwf	strncat@n^0,c
  5098  001DAA  EC03  F015         	call	_strncat	;wreg free
  5099  001DAE                     
  5100                           ;main.c: 356:     print_string("\nThe current sequence is: ");
  5101  001DAE  0ECC               	movlw	low STR_10
  5102  001DB0  6E09               	movwf	print_string@strng^0,c
  5103  001DB2  0E7F               	movlw	high STR_10
  5104  001DB4  6E0A               	movwf	(print_string@strng+1)^0,c
  5105  001DB6  ECBC  F014         	call	_print_string	;wreg free
  5106  001DBA                     
  5107                           ;main.c: 357:     print_string(sequence);
  5108  001DBA  0E72               	movlw	low _sequence
  5109  001DBC  6E09               	movwf	print_string@strng^0,c
  5110  001DBE  0E00               	movlw	high _sequence
  5111  001DC0  6E0A               	movwf	(print_string@strng+1)^0,c
  5112  001DC2  ECBC  F014         	call	_print_string	;wreg free
  5113  001DC6                     
  5114                           ;main.c: 358:     print_string("\n1. Continue sequence\n2. Change sequence");
  5115  001DC6  0EAE               	movlw	low STR_19
  5116  001DC8  6E09               	movwf	print_string@strng^0,c
  5117  001DCA  0E7E               	movlw	high STR_19
  5118  001DCC  6E0A               	movwf	(print_string@strng+1)^0,c
  5119  001DCE  ECBC  F014         	call	_print_string	;wreg free
  5120  001DD2                     
  5121                           ;main.c: 359:     New_char_RX=0;
  5122  001DD2  0E00               	movlw	0
  5123  001DD4  6E76               	movwf	_New_char_RX^0,c
  5124  001DD6                     l4559:
  5125  001DD6  FFFF               	dw	65535	; assembler added errata NOP
  5126                           
  5127                           ;main.c: 361:         if(New_char_RX){
  5128  001DD8  5076               	movf	_New_char_RX^0,w,c
  5129  001DDA  B4D8               	btfsc	status,2,c
  5130  001DDC  EFF2  F00E         	goto	u5231
  5131  001DE0  EFF5  F00E         	goto	u5230
  5132  001DE4                     u5231:
  5133  001DE4  FFFF               	dw	65535	; assembler added errata NOP
  5134  001DE6  EFEB  F00E         	goto	l4559
  5135  001DEA                     u5230:
  5136  001DEA  FFFF               	dw	65535	; assembler added errata NOP
  5137  001DEC                     
  5138                           ;main.c: 362:             const char ip = input_str[0];
  5139  001DEC  C0BE  F022         	movff	_input_str,add_component@ip	;volatile
  5140  001DF0                     
  5141                           ;main.c: 363:             New_char_RX=0;
  5142  001DF0  0E00               	movlw	0
  5143  001DF2  6E76               	movwf	_New_char_RX^0,c
  5144                           
  5145                           ;main.c: 364:             switch(ip){
  5146  001DF4  EF01  F00F         	goto	l4569
  5147  001DF8                     l4565:
  5148  001DF8  FFFF               	dw	65535	; assembler added errata NOP
  5149                           
  5150                           ;main.c: 368:                     change_sequence();
  5151  001DFA  EC70  F014         	call	_change_sequence	;wreg free
  5152                           
  5153                           ;main.c: 369:                     break;
  5154  001DFE  EF18  F00F         	goto	l261
  5155  001E02                     l4569:
  5156  001E02  FFFF               	dw	65535	; assembler added errata NOP
  5157  001E04  5022               	movf	add_component@ip^0,w,c
  5158  001E06  6E1E               	movwf	??_add_component^0,c
  5159  001E08  6A1F               	clrf	(??_add_component+1)^0,c
  5160                           
  5161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5162                           ; Switch size 1, requested type "simple"
  5163                           ; Number of cases is 1, Range of values is 0 to 0
  5164                           ; switch strategies available:
  5165                           ; Name         Instructions Cycles
  5166                           ; simple_byte            4     3 (average)
  5167                           ;	Chosen strategy is simple_byte
  5168  001E0A  501F               	movf	(??_add_component+1)^0,w,c
  5169  001E0C  0A00               	xorlw	0	; case 0
  5170  001E0E  B4D8               	btfsc	status,2,c
  5171  001E10  EF0C  F00F         	goto	l4927
  5172  001E14  EF18  F00F         	goto	l261
  5173  001E18                     l4927:
  5174  001E18  FFFF               	dw	65535	; assembler added errata NOP
  5175                           
  5176                           ; Switch size 1, requested type "simple"
  5177                           ; Number of cases is 2, Range of values is 49 to 50
  5178                           ; switch strategies available:
  5179                           ; Name         Instructions Cycles
  5180                           ; simple_byte            7     4 (average)
  5181                           ;	Chosen strategy is simple_byte
  5182  001E1A  501E               	movf	??_add_component^0,w,c
  5183  001E1C  0A31               	xorlw	49	; case 49
  5184  001E1E  B4D8               	btfsc	status,2,c
  5185  001E20  EF18  F00F         	goto	l261
  5186  001E24  0A03               	xorlw	3	; case 50
  5187  001E26  B4D8               	btfsc	status,2,c
  5188  001E28  EFFC  F00E         	goto	l4565
  5189  001E2C  EF18  F00F         	goto	l261
  5190  001E30                     l261:
  5191  001E30  FFFF               	dw	65535	; assembler added errata NOP
  5192  001E32  0012               	return		;funcret
  5193  001E34  FFFF               	dw	65535	; errata NOP
  5194  001E36                     __end_of_add_component:
  5195                           	callstack 0
  5196                           
  5197 ;; *************** function _strncat *****************
  5198 ;; Defined at:
  5199 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strncat.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  d               2   11[COMRAM] PTR unsigned char 
  5202 ;;		 -> sequence(4), 
  5203 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5204 ;;		 -> add_component@add_to_sequence(2), 
  5205 ;;  n               2   15[COMRAM] unsigned int 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  a               2    0        PTR unsigned char 
  5208 ;;		 -> sequence(4), 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  2   11[COMRAM] PTR unsigned char 
  5211 ;; Registers used:
  5212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5218 ;;      Params:         6       0       0       0       0       0       0
  5219 ;;      Locals:         0       0       0       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0
  5221 ;;      Totals:         6       0       0       0       0       0       0
  5222 ;;Total ram usage:        6 bytes
  5223 ;; Hardware stack levels used: 1
  5224 ;; Hardware stack levels required when called: 2
  5225 ;; This function calls:
  5226 ;;		_strlen
  5227 ;; This function is called by:
  5228 ;;		_add_component
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text15
  5233  002A06                     __ptext15:
  5234                           	callstack 0
  5235  002A06                     _strncat:
  5236                           	callstack 0
  5237  002A06  FFFF               	dw	65535	; assembler added errata NOP
  5238  002A08  C00C  F008         	movff	strncat@d,strlen@s
  5239  002A0C  C00D  F009         	movff	strncat@d+1,strlen@s+1
  5240  002A10  EC3D  F016         	call	_strlen	;wreg free
  5241  002A14  5008               	movf	?_strlen^0,w,c
  5242  002A16  260C               	addwf	strncat@d^0,f,c
  5243  002A18  5009               	movf	(?_strlen+1)^0,w,c
  5244  002A1A  220D               	addwfc	(strncat@d+1)^0,f,c
  5245  002A1C  EF22  F015         	goto	l4015
  5246  002A20                     l4007:
  5247  002A20  FFFF               	dw	65535	; assembler added errata NOP
  5248  002A22  0610               	decf	strncat@n^0,f,c
  5249  002A24  A0D8               	btfss	status,0,c
  5250  002A26  0611               	decf	(strncat@n+1)^0,f,c
  5251  002A28  C00E  FFD9         	movff	strncat@s,fsr2l
  5252  002A2C  C00F  FFDA         	movff	strncat@s+1,fsr2h
  5253  002A30  C00C  FFE1         	movff	strncat@d,fsr1l
  5254  002A34  C00D  FFE2         	movff	strncat@d+1,fsr1h
  5255  002A38  CFDF FFE7          	movff	indf2,indf1
  5256  002A3C  4A0E               	infsnz	strncat@s^0,f,c
  5257  002A3E  2A0F               	incf	(strncat@s+1)^0,f,c
  5258  002A40  4A0C               	infsnz	strncat@d^0,f,c
  5259  002A42  2A0D               	incf	(strncat@d+1)^0,f,c
  5260  002A44                     l4015:
  5261  002A44  FFFF               	dw	65535	; assembler added errata NOP
  5262  002A46  5010               	movf	strncat@n^0,w,c
  5263  002A48  1011               	iorwf	(strncat@n+1)^0,w,c
  5264  002A4A  B4D8               	btfsc	status,2,c
  5265  002A4C  EF2A  F015         	goto	u4331
  5266  002A50  EF2D  F015         	goto	u4330
  5267  002A54                     u4331:
  5268  002A54  FFFF               	dw	65535	; assembler added errata NOP
  5269  002A56  EF3B  F015         	goto	l4019
  5270  002A5A                     u4330:
  5271  002A5A  FFFF               	dw	65535	; assembler added errata NOP
  5272  002A5C  C00E  FFD9         	movff	strncat@s,fsr2l
  5273  002A60  C00F  FFDA         	movff	strncat@s+1,fsr2h
  5274  002A64  50DF               	movf	indf2,w,c
  5275  002A66  A4D8               	btfss	status,2,c
  5276  002A68  EF38  F015         	goto	u4341
  5277  002A6C  EF3B  F015         	goto	u4340
  5278  002A70                     u4341:
  5279  002A70  FFFF               	dw	65535	; assembler added errata NOP
  5280  002A72  EF10  F015         	goto	l4007
  5281  002A76                     u4340:
  5282  002A76                     l4019:
  5283  002A76  FFFF               	dw	65535	; assembler added errata NOP
  5284  002A78  C00C  FFD9         	movff	strncat@d,fsr2l
  5285  002A7C  C00D  FFDA         	movff	strncat@d+1,fsr2h
  5286  002A80  0E00               	movlw	0
  5287  002A82  6EDF               	movwf	indf2,c
  5288  002A84  4A0C               	infsnz	strncat@d^0,f,c
  5289  002A86  2A0D               	incf	(strncat@d+1)^0,f,c
  5290  002A88  0012               	return		;funcret
  5291  002A8A  FFFF               	dw	65535	; errata NOP
  5292  002A8C                     __end_of_strncat:
  5293                           	callstack 0
  5294                           
  5295 ;; *************** function _strlen *****************
  5296 ;; Defined at:
  5297 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5300 ;;		 -> sequence(4), 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;  a               2    9[COMRAM] PTR const unsigned char 
  5303 ;;		 -> sequence(4), 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  2    7[COMRAM] unsigned int 
  5306 ;; Registers used:
  5307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5313 ;;      Params:         2       0       0       0       0       0       0
  5314 ;;      Locals:         2       0       0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0
  5316 ;;      Totals:         4       0       0       0       0       0       0
  5317 ;;Total ram usage:        4 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; Hardware stack levels required when called: 1
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_remove_component
  5324 ;;		_strncat
  5325 ;;		_strrchr
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text16
  5330  002C7A                     __ptext16:
  5331                           	callstack 0
  5332  002C7A                     _strlen:
  5333                           	callstack 0
  5334  002C7A  FFFF               	dw	65535	; assembler added errata NOP
  5335  002C7C  C008  F00A         	movff	strlen@s,strlen@a
  5336  002C80  C009  F00B         	movff	strlen@s+1,strlen@a+1
  5337  002C84  EF47  F016         	goto	l3889
  5338  002C88                     l3887:
  5339  002C88  FFFF               	dw	65535	; assembler added errata NOP
  5340  002C8A  4A08               	infsnz	strlen@s^0,f,c
  5341  002C8C  2A09               	incf	(strlen@s+1)^0,f,c
  5342  002C8E                     l3889:
  5343  002C8E  FFFF               	dw	65535	; assembler added errata NOP
  5344  002C90  C008  FFD9         	movff	strlen@s,fsr2l
  5345  002C94  C009  FFDA         	movff	strlen@s+1,fsr2h
  5346  002C98  50DF               	movf	indf2,w,c
  5347  002C9A  A4D8               	btfss	status,2,c
  5348  002C9C  EF52  F016         	goto	u4151
  5349  002CA0  EF55  F016         	goto	u4150
  5350  002CA4                     u4151:
  5351  002CA4  FFFF               	dw	65535	; assembler added errata NOP
  5352  002CA6  EF44  F016         	goto	l3887
  5353  002CAA                     u4150:
  5354  002CAA  FFFF               	dw	65535	; assembler added errata NOP
  5355  002CAC  500A               	movf	strlen@a^0,w,c
  5356  002CAE  5C08               	subwf	strlen@s^0,w,c
  5357  002CB0  6E08               	movwf	?_strlen^0,c
  5358  002CB2  500B               	movf	(strlen@a+1)^0,w,c
  5359  002CB4  5809               	subwfb	(strlen@s+1)^0,w,c
  5360  002CB6  6E09               	movwf	(?_strlen+1)^0,c
  5361  002CB8  0012               	return		;funcret
  5362  002CBA  FFFF               	dw	65535	; errata NOP
  5363  002CBC                     __end_of_strlen:
  5364                           	callstack 0
  5365                           
  5366 ;; *************** function _change_sequence *****************
  5367 ;; Defined at:
  5368 ;;		line 285 in file "main.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  i               2   17[COMRAM] int 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5382 ;;      Params:         0       0       0       0       0       0       0
  5383 ;;      Locals:         2       0       0       0       0       0       0
  5384 ;;      Temps:          3       0       0       0       0       0       0
  5385 ;;      Totals:         5       0       0       0       0       0       0
  5386 ;;Total ram usage:        5 bytes
  5387 ;; Hardware stack levels used: 1
  5388 ;; Hardware stack levels required when called: 3
  5389 ;; This function calls:
  5390 ;;		_print_string
  5391 ;; This function is called by:
  5392 ;;		_start_up_menu
  5393 ;;		_add_component
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text17
  5398  0028E0                     __ptext17:
  5399                           	callstack 0
  5400  0028E0                     _change_sequence:
  5401                           	callstack 0
  5402  0028E0  FFFF               	dw	65535	; assembler added errata NOP
  5403  0028E2                     
  5404                           ;main.c: 287:     print_string("\nThe current sequence is: ");
  5405  0028E2  0ECC               	movlw	low STR_10
  5406  0028E4  6E09               	movwf	print_string@strng^0,c
  5407  0028E6  0E7F               	movlw	high STR_10
  5408  0028E8  6E0A               	movwf	(print_string@strng+1)^0,c
  5409  0028EA  ECBC  F014         	call	_print_string	;wreg free
  5410                           
  5411                           ;main.c: 288:     print_string(sequence);
  5412  0028EE  0E72               	movlw	low _sequence
  5413  0028F0  6E09               	movwf	print_string@strng^0,c
  5414  0028F2  0E00               	movlw	high _sequence
  5415  0028F4  6E0A               	movwf	(print_string@strng+1)^0,c
  5416  0028F6  ECBC  F014         	call	_print_string	;wreg free
  5417                           
  5418                           ;main.c: 289:     print_string("\nPlease give the new sequence as input\r");
  5419  0028FA  0ED7               	movlw	low STR_11
  5420  0028FC  6E09               	movwf	print_string@strng^0,c
  5421  0028FE  0E7E               	movlw	high STR_11
  5422  002900  6E0A               	movwf	(print_string@strng+1)^0,c
  5423  002902  ECBC  F014         	call	_print_string	;wreg free
  5424  002906                     
  5425                           ;main.c: 290:     int i = 0;
  5426  002906  0E00               	movlw	0
  5427  002908  6E13               	movwf	(change_sequence@i+1)^0,c
  5428  00290A  0E00               	movlw	0
  5429  00290C  6E12               	movwf	change_sequence@i^0,c
  5430  00290E                     l3953:
  5431  00290E  FFFF               	dw	65535	; assembler added errata NOP
  5432                           
  5433                           ;main.c: 292:         if(New_char_RX){
  5434  002910  5076               	movf	_New_char_RX^0,w,c
  5435  002912  B4D8               	btfsc	status,2,c
  5436  002914  EF8E  F014         	goto	u4241
  5437  002918  EF91  F014         	goto	u4240
  5438  00291C                     u4241:
  5439  00291C  FFFF               	dw	65535	; assembler added errata NOP
  5440  00291E  EF87  F014         	goto	l3953
  5441  002922                     u4240:
  5442  002922  FFFF               	dw	65535	; assembler added errata NOP
  5443  002924                     l3955:
  5444  002924  FFFF               	dw	65535	; assembler added errata NOP
  5445                           
  5446                           ;main.c: 295:                 sequence[i]=input_str[i];
  5447  002926  0EBE               	movlw	low _input_str
  5448  002928  2412               	addwf	change_sequence@i^0,w,c
  5449  00292A  6ED9               	movwf	fsr2l,c
  5450  00292C  0E00               	movlw	high _input_str
  5451  00292E  2013               	addwfc	(change_sequence@i+1)^0,w,c
  5452  002930  6EDA               	movwf	fsr2h,c
  5453  002932  0E72               	movlw	low _sequence
  5454  002934  2412               	addwf	change_sequence@i^0,w,c
  5455  002936  6EE1               	movwf	fsr1l,c
  5456  002938  0E00               	movlw	high _sequence
  5457  00293A  2013               	addwfc	(change_sequence@i+1)^0,w,c
  5458  00293C  6EE2               	movwf	fsr1h,c
  5459  00293E  CFDF FFE7          	movff	indf2,indf1
  5460  002942                     
  5461                           ;main.c: 296:             }while(input_str[i++]!='\n');
  5462  002942  5012               	movf	change_sequence@i^0,w,c
  5463  002944  6E0F               	movwf	??_change_sequence^0,c
  5464  002946  5013               	movf	(change_sequence@i+1)^0,w,c
  5465  002948  6E10               	movwf	(??_change_sequence+1)^0,c
  5466  00294A  4A12               	infsnz	change_sequence@i^0,f,c
  5467  00294C  2A13               	incf	(change_sequence@i+1)^0,f,c
  5468  00294E  0EBE               	movlw	low _input_str
  5469  002950  240F               	addwf	??_change_sequence^0,w,c
  5470  002952  6ED9               	movwf	fsr2l,c
  5471  002954  0E00               	movlw	high _input_str
  5472  002956  2010               	addwfc	(??_change_sequence+1)^0,w,c
  5473  002958  6EDA               	movwf	fsr2h,c
  5474  00295A  0E0A               	movlw	10
  5475  00295C  18DE               	xorwf	postinc2,w,c
  5476  00295E  A4D8               	btfss	status,2,c
  5477  002960  EFB4  F014         	goto	u4251
  5478  002964  EFB7  F014         	goto	u4250
  5479  002968                     u4251:
  5480  002968  FFFF               	dw	65535	; assembler added errata NOP
  5481  00296A  EF92  F014         	goto	l3955
  5482  00296E                     u4250:
  5483  00296E  FFFF               	dw	65535	; assembler added errata NOP
  5484  002970                     
  5485                           ;main.c: 298:             New_char_RX=0;
  5486  002970  0E00               	movlw	0
  5487  002972  6E76               	movwf	_New_char_RX^0,c
  5488  002974  0012               	return		;funcret
  5489  002976  FFFF               	dw	65535	; errata NOP
  5490  002978                     __end_of_change_sequence:
  5491                           	callstack 0
  5492                           
  5493 ;; *************** function _print_string *****************
  5494 ;; Defined at:
  5495 ;;		line 407 in file "main.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  strng           2    8[COMRAM] PTR unsigned char 
  5498 ;;		 -> STR_21(69), STR_20(63), STR_19(41), STR_18(27), 
  5499 ;;		 -> STR_17(30), STR_16(29), STR_15(29), STR_14(29), 
  5500 ;;		 -> STR_13(28), STR_12(28), STR_11(40), STR_10(27), 
  5501 ;;		 -> STR_9(32), STR_8(23), STR_7(32), STR_6(23), 
  5502 ;;		 -> STR_5(32), STR_4(23), STR_3(32), sequence(4), 
  5503 ;;		 -> STR_2(23), STR_1(83), 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  i               2   12[COMRAM] int 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5515 ;;      Params:         2       0       0       0       0       0       0
  5516 ;;      Locals:         2       0       0       0       0       0       0
  5517 ;;      Temps:          2       0       0       0       0       0       0
  5518 ;;      Totals:         6       0       0       0       0       0       0
  5519 ;;Total ram usage:        6 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 2
  5522 ;; This function calls:
  5523 ;;		_serial_tx_char
  5524 ;; This function is called by:
  5525 ;;		_start_up_menu
  5526 ;;		_change_sequence
  5527 ;;		_add_component
  5528 ;;		_remove_component
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text18
  5533  002978                     __ptext18:
  5534                           	callstack 0
  5535  002978                     _print_string:
  5536                           	callstack 0
  5537  002978  FFFF               	dw	65535	; assembler added errata NOP
  5538  00297A                     
  5539                           ;main.c: 408:     for(int i =0; strng[i]!='\0'; i++){
  5540  00297A  0E00               	movlw	0
  5541  00297C  6E0E               	movwf	(print_string@i+1)^0,c
  5542  00297E  0E00               	movlw	0
  5543  002980  6E0D               	movwf	print_string@i^0,c
  5544  002982  EFDF  F014         	goto	l3883
  5545  002986                     l3879:
  5546  002986  FFFF               	dw	65535	; assembler added errata NOP
  5547                           
  5548                           ;main.c: 409:         serial_tx_char(strng[i]);
  5549  002988  500D               	movf	print_string@i^0,w,c
  5550  00298A  2409               	addwf	print_string@strng^0,w,c
  5551  00298C  6E0B               	movwf	??_print_string^0,c
  5552  00298E  500E               	movf	(print_string@i+1)^0,w,c
  5553  002990  200A               	addwfc	(print_string@strng+1)^0,w,c
  5554  002992  6E0C               	movwf	(??_print_string+1)^0,c
  5555  002994  C00B  FFF6         	movff	??_print_string,tblptrl
  5556  002998  C00C  FFF7         	movff	??_print_string+1,tblptrh
  5557  00299C  6AF8               	clrf	tblptru,c
  5558  00299E  0E05               	movlw	(high __ramtop+-1)
  5559  0029A0  64F7               	cpfsgt	tblptrh,c
  5560  0029A2  D004               	bra	u4127
  5561  0029A4  0008               	tblrd		*
  5562  0029A6  FFFF               	dw	65535	; errata NOP
  5563  0029A8  50F5               	movf	tablat,w,c
  5564  0029AA  D005               	bra	u4120
  5565  0029AC                     u4127:
  5566  0029AC  CFF6 FFE9          	movff	tblptrl,fsr0l
  5567  0029B0  CFF7 FFEA          	movff	tblptrh,fsr0h
  5568  0029B4  50EF               	movf	indf0,w,c
  5569  0029B6                     u4120:
  5570  0029B6  EC2F  F017         	call	_serial_tx_char
  5571  0029BA                     
  5572                           ;main.c: 410:     }
  5573  0029BA  4A0D               	infsnz	print_string@i^0,f,c
  5574  0029BC  2A0E               	incf	(print_string@i+1)^0,f,c
  5575  0029BE                     l3883:
  5576  0029BE  FFFF               	dw	65535	; assembler added errata NOP
  5577  0029C0  500D               	movf	print_string@i^0,w,c
  5578  0029C2  2409               	addwf	print_string@strng^0,w,c
  5579  0029C4  6E0B               	movwf	??_print_string^0,c
  5580  0029C6  500E               	movf	(print_string@i+1)^0,w,c
  5581  0029C8  200A               	addwfc	(print_string@strng+1)^0,w,c
  5582  0029CA  6E0C               	movwf	(??_print_string+1)^0,c
  5583  0029CC  C00B  FFF6         	movff	??_print_string,tblptrl
  5584  0029D0  C00C  FFF7         	movff	??_print_string+1,tblptrh
  5585  0029D4  6AF8               	clrf	tblptru,c
  5586  0029D6  0E05               	movlw	(high __ramtop+-1)
  5587  0029D8  64F7               	cpfsgt	tblptrh,c
  5588  0029DA  D004               	bra	u4137
  5589  0029DC  0008               	tblrd		*
  5590  0029DE  FFFF               	dw	65535	; errata NOP
  5591  0029E0  50F5               	movf	tablat,w,c
  5592  0029E2  D005               	bra	u4130
  5593  0029E4                     u4137:
  5594  0029E4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5595  0029E8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5596  0029EC  50EF               	movf	indf0,w,c
  5597  0029EE                     u4130:
  5598  0029EE  0900               	iorlw	0
  5599  0029F0  A4D8               	btfss	status,2,c
  5600  0029F2  EFFD  F014         	goto	u4141
  5601  0029F6  EF00  F015         	goto	u4140
  5602  0029FA                     u4141:
  5603  0029FA  FFFF               	dw	65535	; assembler added errata NOP
  5604  0029FC  EFC3  F014         	goto	l3879
  5605  002A00                     u4140:
  5606  002A00  FFFF               	dw	65535	; assembler added errata NOP
  5607  002A02  0012               	return		;funcret
  5608  002A04  FFFF               	dw	65535	; errata NOP
  5609  002A06                     __end_of_print_string:
  5610                           	callstack 0
  5611                           
  5612 ;; *************** function _serial_tx_char *****************
  5613 ;; Defined at:
  5614 ;;		line 44 in file "serial_rs232.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  val             1    wreg     unsigned char 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  val             1    7[COMRAM] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      void 
  5621 ;; Registers used:
  5622 ;;		wreg
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5628 ;;      Params:         0       0       0       0       0       0       0
  5629 ;;      Locals:         1       0       0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0
  5631 ;;      Totals:         1       0       0       0       0       0       0
  5632 ;;Total ram usage:        1 bytes
  5633 ;; Hardware stack levels used: 1
  5634 ;; Hardware stack levels required when called: 1
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_print_string
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text19
  5643  002E5E                     __ptext19:
  5644                           	callstack 0
  5645  002E5E                     _serial_tx_char:
  5646                           	callstack 0
  5647  002E5E  FFFF               	dw	65535	; assembler added errata NOP
  5648                           
  5649                           ;incstack = 0
  5650                           ;serial_tx_char@val stored from wreg
  5651  002E60  6E08               	movwf	serial_tx_char@val^0,c
  5652  002E62                     
  5653                           ;serial_rs232.c: 44: void serial_tx_char(unsigned char val);serial_rs232.c: 45: {;serial
      +                          _rs232.c: 46:   TXREG=val;
  5654  002E62  C008  FFAD         	movff	serial_tx_char@val,4013	;volatile
  5655  002E66                     l48:
  5656  002E66  FFFF               	dw	65535	; assembler added errata NOP
  5657  002E68  A2AC               	btfss	172,1,c	;volatile
  5658  002E6A  EF39  F017         	goto	u4111
  5659  002E6E  EF3C  F017         	goto	u4110
  5660  002E72                     u4111:
  5661  002E72  FFFF               	dw	65535	; assembler added errata NOP
  5662  002E74  EF33  F017         	goto	l48
  5663  002E78                     u4110:
  5664  002E78  FFFF               	dw	65535	; assembler added errata NOP
  5665  002E7A  0012               	return		;funcret
  5666  002E7C  FFFF               	dw	65535	; errata NOP
  5667  002E7E                     __end_of_serial_tx_char:
  5668                           	callstack 0
  5669                           
  5670 ;; *************** function _atoi *****************
  5671 ;; Defined at:
  5672 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  s               2   14[COMRAM] PTR const unsigned char 
  5675 ;;		 -> input_str(10), 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  n               2   27[COMRAM] int 
  5678 ;;  neg             2   20[COMRAM] int 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  2   14[COMRAM] int 
  5681 ;; Registers used:
  5682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5688 ;;      Params:         2       0       0       0       0       0       0
  5689 ;;      Locals:         9       0       0       0       0       0       0
  5690 ;;      Temps:          4       0       0       0       0       0       0
  5691 ;;      Totals:        15       0       0       0       0       0       0
  5692 ;;Total ram usage:       15 bytes
  5693 ;; Hardware stack levels used: 1
  5694 ;; Hardware stack levels required when called: 2
  5695 ;; This function calls:
  5696 ;;		___wmul
  5697 ;;		_isdigit
  5698 ;;		_isspace
  5699 ;; This function is called by:
  5700 ;;		_add_component
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text20
  5705  00202E                     __ptext20:
  5706                           	callstack 0
  5707  00202E                     _atoi:
  5708                           	callstack 0
  5709  00202E  FFFF               	dw	65535	; assembler added errata NOP
  5710  002030  0E00               	movlw	0
  5711  002032  6E1D               	movwf	(atoi@n+1)^0,c
  5712  002034  0E00               	movlw	0
  5713  002036  6E1C               	movwf	atoi@n^0,c
  5714  002038  0E00               	movlw	0
  5715  00203A  6E16               	movwf	(atoi@neg+1)^0,c
  5716  00203C  0E00               	movlw	0
  5717  00203E  6E15               	movwf	atoi@neg^0,c
  5718  002040  EF25  F010         	goto	l3965
  5719  002044                     l3963:
  5720  002044  FFFF               	dw	65535	; assembler added errata NOP
  5721  002046  4A0F               	infsnz	atoi@s^0,f,c
  5722  002048  2A10               	incf	(atoi@s+1)^0,f,c
  5723  00204A                     l3965:
  5724  00204A  FFFF               	dw	65535	; assembler added errata NOP
  5725  00204C  0E01               	movlw	1
  5726  00204E  6E1B               	movwf	_atoi$1070^0,c
  5727  002050  C00F  FFD9         	movff	atoi@s,fsr2l
  5728  002054  C010  FFDA         	movff	atoi@s+1,fsr2h
  5729  002058  0E20               	movlw	32
  5730  00205A  18DE               	xorwf	postinc2,w,c
  5731  00205C  B4D8               	btfsc	status,2,c
  5732  00205E  EF33  F010         	goto	u4261
  5733  002062  EF36  F010         	goto	u4260
  5734  002066                     u4261:
  5735  002066  FFFF               	dw	65535	; assembler added errata NOP
  5736  002068  EF55  F010         	goto	l3973
  5737  00206C                     u4260:
  5738  00206C  FFFF               	dw	65535	; assembler added errata NOP
  5739  00206E  0EF7               	movlw	247
  5740  002070  6E11               	movwf	??_atoi^0,c
  5741  002072  0EFF               	movlw	255
  5742  002074  6E12               	movwf	(??_atoi+1)^0,c
  5743  002076  C00F  FFD9         	movff	atoi@s,fsr2l
  5744  00207A  C010  FFDA         	movff	atoi@s+1,fsr2h
  5745  00207E  50DF               	movf	indf2,w,c
  5746  002080  6E13               	movwf	(??_atoi+2)^0,c
  5747  002082  6A14               	clrf	(??_atoi+3)^0,c
  5748  002084  5011               	movf	??_atoi^0,w,c
  5749  002086  2613               	addwf	(??_atoi+2)^0,f,c
  5750  002088  5012               	movf	(??_atoi+1)^0,w,c
  5751  00208A  2214               	addwfc	(??_atoi+3)^0,f,c
  5752  00208C  5014               	movf	(??_atoi+3)^0,w,c
  5753  00208E  E10A               	bnz	u4270
  5754  002090  0E05               	movlw	5
  5755  002092  5C13               	subwf	(??_atoi+2)^0,w,c
  5756  002094  A0D8               	btfss	status,0,c
  5757  002096  EF4F  F010         	goto	u4271
  5758  00209A  EF52  F010         	goto	u4270
  5759  00209E                     u4271:
  5760  00209E  FFFF               	dw	65535	; assembler added errata NOP
  5761  0020A0  EF55  F010         	goto	l3973
  5762  0020A4                     u4270:
  5763  0020A4  FFFF               	dw	65535	; assembler added errata NOP
  5764  0020A6  0E00               	movlw	0
  5765  0020A8  6E1B               	movwf	_atoi$1070^0,c
  5766  0020AA                     l3973:
  5767  0020AA  FFFF               	dw	65535	; assembler added errata NOP
  5768  0020AC  C01B  F017         	movff	_atoi$1070,_atoi$1069
  5769  0020B0  6A18               	clrf	(_atoi$1069+1)^0,c
  5770  0020B2  5017               	movf	_atoi$1069^0,w,c
  5771  0020B4  1018               	iorwf	(_atoi$1069+1)^0,w,c
  5772  0020B6  A4D8               	btfss	status,2,c
  5773  0020B8  EF60  F010         	goto	u4281
  5774  0020BC  EF63  F010         	goto	u4280
  5775  0020C0                     u4281:
  5776  0020C0  FFFF               	dw	65535	; assembler added errata NOP
  5777  0020C2  EF22  F010         	goto	l3963
  5778  0020C6                     u4280:
  5779  0020C6  FFFF               	dw	65535	; assembler added errata NOP
  5780  0020C8  EF70  F010         	goto	l3983
  5781  0020CC                     l3979:
  5782  0020CC  FFFF               	dw	65535	; assembler added errata NOP
  5783  0020CE  0E00               	movlw	0
  5784  0020D0  6E16               	movwf	(atoi@neg+1)^0,c
  5785  0020D2  0E01               	movlw	1
  5786  0020D4  6E15               	movwf	atoi@neg^0,c
  5787  0020D6                     l3981:
  5788  0020D6  FFFF               	dw	65535	; assembler added errata NOP
  5789  0020D8  4A0F               	infsnz	atoi@s^0,f,c
  5790  0020DA  2A10               	incf	(atoi@s+1)^0,f,c
  5791  0020DC  EFA8  F010         	goto	l3989
  5792  0020E0                     l3983:
  5793  0020E0  FFFF               	dw	65535	; assembler added errata NOP
  5794  0020E2  C00F  FFD9         	movff	atoi@s,fsr2l
  5795  0020E6  C010  FFDA         	movff	atoi@s+1,fsr2h
  5796  0020EA  50DF               	movf	indf2,w,c
  5797  0020EC  6E11               	movwf	??_atoi^0,c
  5798  0020EE  6A12               	clrf	(??_atoi+1)^0,c
  5799                           
  5800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5801                           ; Switch size 1, requested type "simple"
  5802                           ; Number of cases is 1, Range of values is 0 to 0
  5803                           ; switch strategies available:
  5804                           ; Name         Instructions Cycles
  5805                           ; simple_byte            4     3 (average)
  5806                           ;	Chosen strategy is simple_byte
  5807  0020F0  5012               	movf	(??_atoi+1)^0,w,c
  5808  0020F2  0A00               	xorlw	0	; case 0
  5809  0020F4  B4D8               	btfsc	status,2,c
  5810  0020F6  EF7F  F010         	goto	l4929
  5811  0020FA  EFA8  F010         	goto	l3989
  5812  0020FE                     l4929:
  5813  0020FE  FFFF               	dw	65535	; assembler added errata NOP
  5814                           
  5815                           ; Switch size 1, requested type "simple"
  5816                           ; Number of cases is 2, Range of values is 43 to 45
  5817                           ; switch strategies available:
  5818                           ; Name         Instructions Cycles
  5819                           ; simple_byte            7     4 (average)
  5820                           ;	Chosen strategy is simple_byte
  5821  002100  5011               	movf	??_atoi^0,w,c
  5822  002102  0A2B               	xorlw	43	; case 43
  5823  002104  B4D8               	btfsc	status,2,c
  5824  002106  EF6B  F010         	goto	l3981
  5825  00210A  0A06               	xorlw	6	; case 45
  5826  00210C  B4D8               	btfsc	status,2,c
  5827  00210E  EF66  F010         	goto	l3979
  5828  002112  EFA8  F010         	goto	l3989
  5829  002116                     l3985:
  5830  002116  FFFF               	dw	65535	; assembler added errata NOP
  5831  002118  C01C  F008         	movff	atoi@n,___wmul@multiplier
  5832  00211C  C01D  F009         	movff	atoi@n+1,___wmul@multiplier+1
  5833  002120  0E00               	movlw	0
  5834  002122  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  5835  002124  0E0A               	movlw	10
  5836  002126  6E0A               	movwf	___wmul@multiplicand^0,c
  5837  002128  ECF8  F016         	call	___wmul	;wreg free
  5838  00212C  C00F  FFD9         	movff	atoi@s,fsr2l
  5839  002130  C010  FFDA         	movff	atoi@s+1,fsr2h
  5840  002134  50DF               	movf	indf2,w,c
  5841  002136  6E11               	movwf	??_atoi^0,c
  5842  002138  5011               	movf	??_atoi^0,w,c
  5843  00213A  5E08               	subwf	?___wmul^0,f,c
  5844  00213C  0E00               	movlw	0
  5845  00213E  5A09               	subwfb	(?___wmul+1)^0,f,c
  5846  002140  0E30               	movlw	48
  5847  002142  2408               	addwf	?___wmul^0,w,c
  5848  002144  6E1C               	movwf	atoi@n^0,c
  5849  002146  0E00               	movlw	0
  5850  002148  2009               	addwfc	(?___wmul+1)^0,w,c
  5851  00214A  6E1D               	movwf	(atoi@n+1)^0,c
  5852  00214C  EF6B  F010         	goto	l3981
  5853  002150                     l3989:
  5854  002150  FFFF               	dw	65535	; assembler added errata NOP
  5855  002152  0ED0               	movlw	208
  5856  002154  6E11               	movwf	??_atoi^0,c
  5857  002156  0EFF               	movlw	255
  5858  002158  6E12               	movwf	(??_atoi+1)^0,c
  5859  00215A  C00F  FFD9         	movff	atoi@s,fsr2l
  5860  00215E  C010  FFDA         	movff	atoi@s+1,fsr2h
  5861  002162  50DF               	movf	indf2,w,c
  5862  002164  6E13               	movwf	(??_atoi+2)^0,c
  5863  002166  6A14               	clrf	(??_atoi+3)^0,c
  5864  002168  5011               	movf	??_atoi^0,w,c
  5865  00216A  2613               	addwf	(??_atoi+2)^0,f,c
  5866  00216C  5012               	movf	(??_atoi+1)^0,w,c
  5867  00216E  2214               	addwfc	(??_atoi+3)^0,f,c
  5868  002170  5014               	movf	(??_atoi+3)^0,w,c
  5869  002172  E10B               	bnz	u4290
  5870  002174  0E0A               	movlw	10
  5871  002176  5C13               	subwf	(??_atoi+2)^0,w,c
  5872  002178  A0D8               	btfss	status,0,c
  5873  00217A  EFC1  F010         	goto	u4291
  5874  00217E  EFC5  F010         	goto	u4290
  5875  002182                     u4291:
  5876  002182  FFFF               	dw	65535	; assembler added errata NOP
  5877  002184  0E01               	movlw	1
  5878  002186  EFC7  F010         	goto	u4300
  5879  00218A                     u4290:
  5880  00218A  FFFF               	dw	65535	; assembler added errata NOP
  5881  00218C  0E00               	movlw	0
  5882  00218E                     u4300:
  5883  00218E  FFFF               	dw	65535	; assembler added errata NOP
  5884  002190  6E19               	movwf	_atoi$1071^0,c
  5885  002192  6A1A               	clrf	(_atoi$1071+1)^0,c
  5886  002194  5019               	movf	_atoi$1071^0,w,c
  5887  002196  101A               	iorwf	(_atoi$1071+1)^0,w,c
  5888  002198  A4D8               	btfss	status,2,c
  5889  00219A  EFD1  F010         	goto	u4311
  5890  00219E  EFD4  F010         	goto	u4310
  5891  0021A2                     u4311:
  5892  0021A2  FFFF               	dw	65535	; assembler added errata NOP
  5893  0021A4  EF8B  F010         	goto	l3985
  5894  0021A8                     u4310:
  5895  0021A8  FFFF               	dw	65535	; assembler added errata NOP
  5896  0021AA  5015               	movf	atoi@neg^0,w,c
  5897  0021AC  1016               	iorwf	(atoi@neg+1)^0,w,c
  5898  0021AE  A4D8               	btfss	status,2,c
  5899  0021B0  EFDC  F010         	goto	u4321
  5900  0021B4  EFDF  F010         	goto	u4320
  5901  0021B8                     u4321:
  5902  0021B8  FFFF               	dw	65535	; assembler added errata NOP
  5903  0021BA  EFEE  F010         	goto	l1107
  5904  0021BE                     u4320:
  5905  0021BE  FFFF               	dw	65535	; assembler added errata NOP
  5906  0021C0  C01C  F011         	movff	atoi@n,??_atoi
  5907  0021C4  C01D  F012         	movff	atoi@n+1,??_atoi+1
  5908  0021C8  1E11               	comf	??_atoi^0,f,c
  5909  0021CA  1E12               	comf	(??_atoi+1)^0,f,c
  5910  0021CC  4A11               	infsnz	??_atoi^0,f,c
  5911  0021CE  2A12               	incf	(??_atoi+1)^0,f,c
  5912  0021D0  C011  F00F         	movff	??_atoi,?_atoi
  5913  0021D4  C012  F010         	movff	??_atoi+1,?_atoi+1
  5914  0021D8  EFF3  F010         	goto	l1110
  5915  0021DC                     l1107:
  5916  0021DC  FFFF               	dw	65535	; assembler added errata NOP
  5917  0021DE  C01C  F00F         	movff	atoi@n,?_atoi
  5918  0021E2  C01D  F010         	movff	atoi@n+1,?_atoi+1
  5919  0021E6                     l1110:
  5920  0021E6  FFFF               	dw	65535	; assembler added errata NOP
  5921  0021E8  0012               	return		;funcret
  5922  0021EA  FFFF               	dw	65535	; errata NOP
  5923  0021EC                     __end_of_atoi:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _isspace *****************
  5927 ;; Defined at:
  5928 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  c               2    7[COMRAM] int 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  2    7[COMRAM] int 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5942 ;;      Params:         2       0       0       0       0       0       0
  5943 ;;      Locals:         1       0       0       0       0       0       0
  5944 ;;      Temps:          4       0       0       0       0       0       0
  5945 ;;      Totals:         7       0       0       0       0       0       0
  5946 ;;Total ram usage:        7 bytes
  5947 ;; Hardware stack levels used: 1
  5948 ;; Hardware stack levels required when called: 1
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_atoi
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text21
  5957  002B74                     __ptext21:
  5958                           	callstack 0
  5959  002B74                     _isspace:
  5960                           	callstack 26
  5961  002B74  FFFF               	dw	65535	; assembler added errata NOP
  5962  002B76  0E01               	movlw	1
  5963  002B78  6E0E               	movwf	_isspace$1087^0,c
  5964  002B7A  0E20               	movlw	32
  5965  002B7C  1808               	xorwf	isspace@c^0,w,c
  5966  002B7E  1009               	iorwf	(isspace@c+1)^0,w,c
  5967  002B80  B4D8               	btfsc	status,2,c
  5968  002B82  EFC5  F015         	goto	u4181
  5969  002B86  EFC8  F015         	goto	u4180
  5970  002B8A                     u4181:
  5971  002B8A  FFFF               	dw	65535	; assembler added errata NOP
  5972  002B8C  EFE4  F015         	goto	l3925
  5973  002B90                     u4180:
  5974  002B90  FFFF               	dw	65535	; assembler added errata NOP
  5975  002B92  0EF7               	movlw	247
  5976  002B94  6E0A               	movwf	??_isspace^0,c
  5977  002B96  0EFF               	movlw	255
  5978  002B98  6E0B               	movwf	(??_isspace+1)^0,c
  5979  002B9A  C008  F00C         	movff	isspace@c,??_isspace+2
  5980  002B9E  C009  F00D         	movff	isspace@c+1,??_isspace+3
  5981  002BA2  500A               	movf	??_isspace^0,w,c
  5982  002BA4  260C               	addwf	(??_isspace+2)^0,f,c
  5983  002BA6  500B               	movf	(??_isspace+1)^0,w,c
  5984  002BA8  220D               	addwfc	(??_isspace+3)^0,f,c
  5985  002BAA  500D               	movf	(??_isspace+3)^0,w,c
  5986  002BAC  E10A               	bnz	u4190
  5987  002BAE  0E05               	movlw	5
  5988  002BB0  5C0C               	subwf	(??_isspace+2)^0,w,c
  5989  002BB2  A0D8               	btfss	status,0,c
  5990  002BB4  EFDE  F015         	goto	u4191
  5991  002BB8  EFE1  F015         	goto	u4190
  5992  002BBC                     u4191:
  5993  002BBC  FFFF               	dw	65535	; assembler added errata NOP
  5994  002BBE  EFE4  F015         	goto	l3925
  5995  002BC2                     u4190:
  5996  002BC2  FFFF               	dw	65535	; assembler added errata NOP
  5997  002BC4  0E00               	movlw	0
  5998  002BC6  6E0E               	movwf	_isspace$1087^0,c
  5999  002BC8                     l3925:
  6000  002BC8  FFFF               	dw	65535	; assembler added errata NOP
  6001  002BCA  C00E  F008         	movff	_isspace$1087,?_isspace
  6002  002BCE  6A09               	clrf	(?_isspace+1)^0,c
  6003  002BD0  0012               	return		;funcret
  6004  002BD2  FFFF               	dw	65535	; errata NOP
  6005  002BD4                     __end_of_isspace:
  6006                           	callstack 0
  6007                           
  6008 ;; *************** function _isdigit *****************
  6009 ;; Defined at:
  6010 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  c               2    7[COMRAM] int 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  2    7[COMRAM] int 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6024 ;;      Params:         2       0       0       0       0       0       0
  6025 ;;      Locals:         0       0       0       0       0       0       0
  6026 ;;      Temps:          4       0       0       0       0       0       0
  6027 ;;      Totals:         6       0       0       0       0       0       0
  6028 ;;Total ram usage:        6 bytes
  6029 ;; Hardware stack levels used: 1
  6030 ;; Hardware stack levels required when called: 1
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_atoi
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text22
  6039  002CBC                     __ptext22:
  6040                           	callstack 0
  6041  002CBC                     _isdigit:
  6042                           	callstack 26
  6043  002CBC  FFFF               	dw	65535	; assembler added errata NOP
  6044  002CBE  0ED0               	movlw	208
  6045  002CC0  6E0A               	movwf	??_isdigit^0,c
  6046  002CC2  0EFF               	movlw	255
  6047  002CC4  6E0B               	movwf	(??_isdigit+1)^0,c
  6048  002CC6  C008  F00C         	movff	isdigit@c,??_isdigit+2
  6049  002CCA  C009  F00D         	movff	isdigit@c+1,??_isdigit+3
  6050  002CCE  500A               	movf	??_isdigit^0,w,c
  6051  002CD0  260C               	addwf	(??_isdigit+2)^0,f,c
  6052  002CD2  500B               	movf	(??_isdigit+1)^0,w,c
  6053  002CD4  220D               	addwfc	(??_isdigit+3)^0,f,c
  6054  002CD6  500D               	movf	(??_isdigit+3)^0,w,c
  6055  002CD8  E10B               	bnz	u4200
  6056  002CDA  0E0A               	movlw	10
  6057  002CDC  5C0C               	subwf	(??_isdigit+2)^0,w,c
  6058  002CDE  A0D8               	btfss	status,0,c
  6059  002CE0  EF74  F016         	goto	u4201
  6060  002CE4  EF78  F016         	goto	u4200
  6061  002CE8                     u4201:
  6062  002CE8  FFFF               	dw	65535	; assembler added errata NOP
  6063  002CEA  0E01               	movlw	1
  6064  002CEC  EF7A  F016         	goto	u4210
  6065  002CF0                     u4200:
  6066  002CF0  FFFF               	dw	65535	; assembler added errata NOP
  6067  002CF2  0E00               	movlw	0
  6068  002CF4                     u4210:
  6069  002CF4  FFFF               	dw	65535	; assembler added errata NOP
  6070  002CF6  6E08               	movwf	?_isdigit^0,c
  6071  002CF8  6A09               	clrf	(?_isdigit+1)^0,c
  6072  002CFA  0012               	return		;funcret
  6073  002CFC  FFFF               	dw	65535	; errata NOP
  6074  002CFE                     __end_of_isdigit:
  6075                           	callstack 0
  6076                           
  6077 ;; *************** function ___wmul *****************
  6078 ;; Defined at:
  6079 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  multiplier      2    7[COMRAM] unsigned int 
  6082 ;;  multiplicand    2    9[COMRAM] unsigned int 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  product         2   11[COMRAM] unsigned int 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  2    7[COMRAM] unsigned int 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0, prodl, prodh
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6094 ;;      Params:         4       0       0       0       0       0       0
  6095 ;;      Locals:         2       0       0       0       0       0       0
  6096 ;;      Temps:          0       0       0       0       0       0       0
  6097 ;;      Totals:         6       0       0       0       0       0       0
  6098 ;;Total ram usage:        6 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; Hardware stack levels required when called: 1
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_atoi
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text23
  6109  002DF0                     __ptext23:
  6110                           	callstack 0
  6111  002DF0                     ___wmul:
  6112                           	callstack 0
  6113  002DF0  FFFF               	dw	65535	; assembler added errata NOP
  6114  002DF2  5008               	movf	___wmul@multiplier^0,w,c
  6115  002DF4  020A               	mulwf	___wmul@multiplicand^0,c
  6116  002DF6  CFF3 F00C          	movff	prodl,___wmul@product
  6117  002DFA  CFF4 F00D          	movff	prodh,___wmul@product+1
  6118  002DFE  5008               	movf	___wmul@multiplier^0,w,c
  6119  002E00  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  6120  002E02  50F3               	movf	243,w,c
  6121  002E04  260D               	addwf	(___wmul@product+1)^0,f,c
  6122  002E06  5009               	movf	(___wmul@multiplier+1)^0,w,c
  6123  002E08  020A               	mulwf	___wmul@multiplicand^0,c
  6124  002E0A  50F3               	movf	243,w,c
  6125  002E0C  260D               	addwf	(___wmul@product+1)^0,f,c
  6126  002E0E  C00C  F008         	movff	___wmul@product,?___wmul
  6127  002E12  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  6128  002E16  0012               	return		;funcret
  6129  002E18  FFFF               	dw	65535	; errata NOP
  6130  002E1A                     __end_of___wmul:
  6131                           	callstack 0
  6132                           
  6133 ;; *************** function _init_interrupts *****************
  6134 ;; Defined at:
  6135 ;;		line 27 in file "init_PIC.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;		None
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		None
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6149 ;;      Params:         0       0       0       0       0       0       0
  6150 ;;      Locals:         0       0       0       0       0       0       0
  6151 ;;      Temps:          0       0       0       0       0       0       0
  6152 ;;      Totals:         0       0       0       0       0       0       0
  6153 ;;Total ram usage:        0 bytes
  6154 ;; Hardware stack levels used: 1
  6155 ;; Hardware stack levels required when called: 1
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_main
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text24
  6164  002E94                     __ptext24:
  6165                           	callstack 0
  6166  002E94                     _init_interrupts:
  6167                           	callstack 0
  6168  002E94  FFFF               	dw	65535	; assembler added errata NOP
  6169  002E96                     
  6170                           ;init_PIC.c: 29:     PIR1bits.RCIF = 0;
  6171  002E96  9A9E               	bcf	158,5,c	;volatile
  6172                           
  6173                           ;init_PIC.c: 30:  PIE1bits.RCIE = 1;
  6174  002E98  8A9D               	bsf	157,5,c	;volatile
  6175                           
  6176                           ;init_PIC.c: 31:  INTCONbits.PEIE = 1;
  6177  002E9A  8CF2               	bsf	242,6,c	;volatile
  6178  002E9C  0012               	return		;funcret
  6179  002E9E  FFFF               	dw	65535	; errata NOP
  6180  002EA0                     __end_of_init_interrupts:
  6181                           	callstack 0
  6182                           
  6183 ;; *************** function _init_USART *****************
  6184 ;; Defined at:
  6185 ;;		line 17 in file "serial_rs232.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6199 ;;      Params:         0       0       0       0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used: 1
  6205 ;; Hardware stack levels required when called: 4
  6206 ;; This function calls:
  6207 ;;		___fltol
  6208 ;;		_roundf
  6209 ;; This function is called by:
  6210 ;;		_main
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text25
  6215  002CFE                     __ptext25:
  6216                           	callstack 0
  6217  002CFE                     _init_USART:
  6218                           	callstack 0
  6219  002CFE  FFFF               	dw	65535	; assembler added errata NOP
  6220  002D00                     
  6221                           ;serial_rs232.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  6222  002D00  0E55               	movlw	85
  6223  002D02  6E3B               	movwf	roundf@x^0,c
  6224  002D04  0E55               	movlw	85
  6225  002D06  6E3C               	movwf	(roundf@x+1)^0,c
  6226  002D08  0EC8               	movlw	200
  6227  002D0A  6E3D               	movwf	(roundf@x+2)^0,c
  6228  002D0C  0E41               	movlw	65
  6229  002D0E  6E3E               	movwf	(roundf@x+3)^0,c
  6230  002D10  EC84  F00A         	call	_roundf	;wreg free
  6231  002D14  C03B  F0C8         	movff	?_roundf,___fltol@f1
  6232  002D18  C03C  F0C9         	movff	?_roundf+1,___fltol@f1+1
  6233  002D1C  C03D  F0CA         	movff	?_roundf+2,___fltol@f1+2
  6234  002D20  C03E  F0CB         	movff	?_roundf+3,___fltol@f1+3
  6235  002D24  ECF6  F010         	call	___fltol	;wreg free
  6236  002D28  0100               	movlb	0	; () banked
  6237  002D2A  51C8               	movf	?___fltol& (0+255),w,b
  6238  002D2C  6EAF               	movwf	175,c	;volatile
  6239  002D2E                     
  6240                           ; BSR set to: 0
  6241                           ;serial_rs232.c: 35:  TXSTAbits.TX9=0;
  6242  002D2E  9CAC               	bcf	172,6,c	;volatile
  6243  002D30                     
  6244                           ; BSR set to: 0
  6245                           ;serial_rs232.c: 36:     TXSTAbits.TXEN=1;
  6246  002D30  8AAC               	bsf	172,5,c	;volatile
  6247  002D32                     
  6248                           ; BSR set to: 0
  6249                           ;serial_rs232.c: 37:     TXSTAbits.SYNC=0;
  6250  002D32  98AC               	bcf	172,4,c	;volatile
  6251  002D34                     
  6252                           ; BSR set to: 0
  6253                           ;serial_rs232.c: 38:     TXSTAbits.BRGH=1;
  6254  002D34  84AC               	bsf	172,2,c	;volatile
  6255  002D36                     
  6256                           ; BSR set to: 0
  6257                           ;serial_rs232.c: 39:     RCSTAbits.SPEN=1;
  6258  002D36  8EAB               	bsf	171,7,c	;volatile
  6259  002D38                     
  6260                           ; BSR set to: 0
  6261                           ;serial_rs232.c: 40:     RCSTAbits.RX9=0;
  6262  002D38  9CAB               	bcf	171,6,c	;volatile
  6263  002D3A                     
  6264                           ; BSR set to: 0
  6265                           ;serial_rs232.c: 41:     RCSTAbits.CREN=1;
  6266  002D3A  88AB               	bsf	171,4,c	;volatile
  6267  002D3C                     
  6268                           ; BSR set to: 0
  6269  002D3C  0012               	return		;funcret
  6270  002D3E  FFFF               	dw	65535	; errata NOP
  6271  002D40                     __end_of_init_USART:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function _roundf *****************
  6275 ;; Defined at:
  6276 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  x               4   58[COMRAM] float 
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  y               4   80[COMRAM] float 
  6281 ;;  u               4   76[COMRAM] struct .
  6282 ;;  e               2   70[COMRAM] int 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  4   58[COMRAM] float 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6292 ;;      Params:         4       0       0       0       0       0       0
  6293 ;;      Locals:        18       0       0       0       0       0       0
  6294 ;;      Temps:          4       0       0       0       0       0       0
  6295 ;;      Totals:        26       0       0       0       0       0       0
  6296 ;;Total ram usage:       26 bytes
  6297 ;; Hardware stack levels used: 1
  6298 ;; Hardware stack levels required when called: 3
  6299 ;; This function calls:
  6300 ;;		___fladd
  6301 ;;		___flge
  6302 ;;		___flmul
  6303 ;;		___flneg
  6304 ;;		___flsub
  6305 ;; This function is called by:
  6306 ;;		_init_USART
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text26
  6311  001508                     __ptext26:
  6312                           	callstack 0
  6313  001508                     _roundf:
  6314                           	callstack 0
  6315  001508  FFFF               	dw	65535	; assembler added errata NOP
  6316  00150A  C09E  F04D         	movff	roundf@F528,roundf@u
  6317  00150E  C09F  F04E         	movff	roundf@F528+1,roundf@u+1
  6318  001512  C0A0  F04F         	movff	roundf@F528+2,roundf@u+2
  6319  001516  C0A1  F050         	movff	roundf@F528+3,roundf@u+3
  6320  00151A  C03B  F04D         	movff	roundf@x,roundf@u
  6321  00151E  C03C  F04E         	movff	roundf@x+1,roundf@u+1
  6322  001522  C03D  F04F         	movff	roundf@x+2,roundf@u+2
  6323  001526  C03E  F050         	movff	roundf@x+3,roundf@u+3
  6324  00152A  C04D  F03F         	movff	roundf@u,??_roundf
  6325  00152E  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6326  001532  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6327  001536  C050  F042         	movff	roundf@u+3,??_roundf+3
  6328  00153A  0E18               	movlw	24
  6329  00153C  EFA6  F00A         	goto	u4880
  6330  001540                     u4885:
  6331  001540  FFFF               	dw	65535	; assembler added errata NOP
  6332  001542  90D8               	bcf	status,0,c
  6333  001544  3242               	rrcf	(??_roundf+3)^0,f,c
  6334  001546  3241               	rrcf	(??_roundf+2)^0,f,c
  6335  001548  3240               	rrcf	(??_roundf+1)^0,f,c
  6336  00154A  323F               	rrcf	??_roundf^0,f,c
  6337  00154C                     u4880:
  6338  00154C  FFFF               	dw	65535	; assembler added errata NOP
  6339  00154E  2EE8               	decfsz	wreg,f,c
  6340  001550  EFA0  F00A         	goto	u4885
  6341  001554  503F               	movf	??_roundf^0,w,c
  6342  001556  6E47               	movwf	roundf@e^0,c
  6343  001558  6A48               	clrf	(roundf@e+1)^0,c
  6344  00155A  BE48               	btfsc	(roundf@e+1)^0,7,c
  6345  00155C  EFB9  F00A         	goto	u4891
  6346  001560  5048               	movf	(roundf@e+1)^0,w,c
  6347  001562  E10A               	bnz	u4890
  6348  001564  0E96               	movlw	150
  6349  001566  5C47               	subwf	roundf@e^0,w,c
  6350  001568  A0D8               	btfss	status,0,c
  6351  00156A  EFB9  F00A         	goto	u4891
  6352  00156E  EFBC  F00A         	goto	u4890
  6353  001572                     u4891:
  6354  001572  FFFF               	dw	65535	; assembler added errata NOP
  6355  001574  EFC7  F00A         	goto	l4377
  6356  001578                     u4890:
  6357  001578  FFFF               	dw	65535	; assembler added errata NOP
  6358  00157A  C03B  F03B         	movff	roundf@x,?_roundf
  6359  00157E  C03C  F03C         	movff	roundf@x+1,?_roundf+1
  6360  001582  C03D  F03D         	movff	roundf@x+2,?_roundf+2
  6361  001586  C03E  F03E         	movff	roundf@x+3,?_roundf+3
  6362  00158A  EF74  F00C         	goto	l1142
  6363  00158E                     l4377:
  6364  00158E  FFFF               	dw	65535	; assembler added errata NOP
  6365  001590  C04D  F03F         	movff	roundf@u,??_roundf
  6366  001594  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6367  001598  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6368  00159C  C050  F042         	movff	roundf@u+3,??_roundf+3
  6369  0015A0  0E20               	movlw	32
  6370  0015A2  EFD9  F00A         	goto	u4900
  6371  0015A6                     u4905:
  6372  0015A6  FFFF               	dw	65535	; assembler added errata NOP
  6373  0015A8  90D8               	bcf	status,0,c
  6374  0015AA  3242               	rrcf	(??_roundf+3)^0,f,c
  6375  0015AC  3241               	rrcf	(??_roundf+2)^0,f,c
  6376  0015AE  3240               	rrcf	(??_roundf+1)^0,f,c
  6377  0015B0  323F               	rrcf	??_roundf^0,f,c
  6378  0015B2                     u4900:
  6379  0015B2  FFFF               	dw	65535	; assembler added errata NOP
  6380  0015B4  2EE8               	decfsz	wreg,f,c
  6381  0015B6  EFD3  F00A         	goto	u4905
  6382  0015BA  503F               	movf	??_roundf^0,w,c
  6383  0015BC  1040               	iorwf	(??_roundf+1)^0,w,c
  6384  0015BE  1041               	iorwf	(??_roundf+2)^0,w,c
  6385  0015C0  1042               	iorwf	(??_roundf+3)^0,w,c
  6386  0015C2  B4D8               	btfsc	status,2,c
  6387  0015C4  EFE6  F00A         	goto	u4911
  6388  0015C8  EFE9  F00A         	goto	u4910
  6389  0015CC                     u4911:
  6390  0015CC  FFFF               	dw	65535	; assembler added errata NOP
  6391  0015CE  EFFC  F00A         	goto	l4381
  6392  0015D2                     u4910:
  6393  0015D2  FFFF               	dw	65535	; assembler added errata NOP
  6394  0015D4  C03B  F008         	movff	roundf@x,___flneg@f1
  6395  0015D8  C03C  F009         	movff	roundf@x+1,___flneg@f1+1
  6396  0015DC  C03D  F00A         	movff	roundf@x+2,___flneg@f1+2
  6397  0015E0  C03E  F00B         	movff	roundf@x+3,___flneg@f1+3
  6398  0015E4  ECA0  F016         	call	___flneg	;wreg free
  6399  0015E8  C008  F03B         	movff	?___flneg,roundf@x
  6400  0015EC  C009  F03C         	movff	?___flneg+1,roundf@x+1
  6401  0015F0  C00A  F03D         	movff	?___flneg+2,roundf@x+2
  6402  0015F4  C00B  F03E         	movff	?___flneg+3,roundf@x+3
  6403  0015F8                     l4381:
  6404  0015F8  FFFF               	dw	65535	; assembler added errata NOP
  6405  0015FA  BE48               	btfsc	(roundf@e+1)^0,7,c
  6406  0015FC  EF0C  F00B         	goto	u4920
  6407  001600  5048               	movf	(roundf@e+1)^0,w,c
  6408  001602  E107               	bnz	u4921
  6409  001604  0E7E               	movlw	126
  6410  001606  5C47               	subwf	roundf@e^0,w,c
  6411  001608  B0D8               	btfsc	status,0,c
  6412  00160A  EF09  F00B         	goto	u4921
  6413  00160E  EF0C  F00B         	goto	u4920
  6414  001612                     u4921:
  6415  001612  FFFF               	dw	65535	; assembler added errata NOP
  6416  001614  EF29  F00B         	goto	l4387
  6417  001618                     u4920:
  6418  001618  FFFF               	dw	65535	; assembler added errata NOP
  6419  00161A  C04D  F008         	movff	roundf@u,___flmul@b
  6420  00161E  C04E  F009         	movff	roundf@u+1,___flmul@b+1
  6421  001622  C04F  F00A         	movff	roundf@u+2,___flmul@b+2
  6422  001626  C050  F00B         	movff	roundf@u+3,___flmul@b+3
  6423  00162A  0E00               	movlw	0
  6424  00162C  6E0C               	movwf	___flmul@a^0,c
  6425  00162E  0E00               	movlw	0
  6426  001630  6E0D               	movwf	(___flmul@a+1)^0,c
  6427  001632  0E00               	movlw	0
  6428  001634  6E0E               	movwf	(___flmul@a+2)^0,c
  6429  001636  0E00               	movlw	0
  6430  001638  6E0F               	movwf	(___flmul@a+3)^0,c
  6431  00163A  EC19  F006         	call	___flmul	;wreg free
  6432  00163E  C008  F03B         	movff	?___flmul,?_roundf
  6433  001642  C009  F03C         	movff	?___flmul+1,?_roundf+1
  6434  001646  C00A  F03D         	movff	?___flmul+2,?_roundf+2
  6435  00164A  C00B  F03E         	movff	?___flmul+3,?_roundf+3
  6436  00164E  EF74  F00C         	goto	l1142
  6437  001652                     l4387:
  6438  001652  FFFF               	dw	65535	; assembler added errata NOP
  6439  001654  0E00               	movlw	0
  6440  001656  6E0C               	movwf	___fladd@a^0,c
  6441  001658  0E00               	movlw	0
  6442  00165A  6E0D               	movwf	(___fladd@a+1)^0,c
  6443  00165C  0E00               	movlw	0
  6444  00165E  6E0E               	movwf	(___fladd@a+2)^0,c
  6445  001660  0E4B               	movlw	75
  6446  001662  6E0F               	movwf	(___fladd@a+3)^0,c
  6447  001664  C03B  F008         	movff	roundf@x,___fladd@b
  6448  001668  C03C  F009         	movff	roundf@x+1,___fladd@b+1
  6449  00166C  C03D  F00A         	movff	roundf@x+2,___fladd@b+2
  6450  001670  C03E  F00B         	movff	roundf@x+3,___fladd@b+3
  6451  001674  EC45  F003         	call	___fladd	;wreg free
  6452  001678  C008  F049         	movff	?___fladd,_roundf$1338
  6453  00167C  C009  F04A         	movff	?___fladd+1,_roundf$1338+1
  6454  001680  C00A  F04B         	movff	?___fladd+2,_roundf$1338+2
  6455  001684  C00B  F04C         	movff	?___fladd+3,_roundf$1338+3
  6456  001688  0E00               	movlw	0
  6457  00168A  6E0C               	movwf	___fladd@a^0,c
  6458  00168C  0E00               	movlw	0
  6459  00168E  6E0D               	movwf	(___fladd@a+1)^0,c
  6460  001690  0E00               	movlw	0
  6461  001692  6E0E               	movwf	(___fladd@a+2)^0,c
  6462  001694  0ECB               	movlw	203
  6463  001696  6E0F               	movwf	(___fladd@a+3)^0,c
  6464  001698  C049  F008         	movff	_roundf$1338,___fladd@b
  6465  00169C  C04A  F009         	movff	_roundf$1338+1,___fladd@b+1
  6466  0016A0  C04B  F00A         	movff	_roundf$1338+2,___fladd@b+2
  6467  0016A4  C04C  F00B         	movff	_roundf$1338+3,___fladd@b+3
  6468  0016A8  EC45  F003         	call	___fladd	;wreg free
  6469  0016AC  C008  F043         	movff	?___fladd,_roundf$1339
  6470  0016B0  C009  F044         	movff	?___fladd+1,_roundf$1339+1
  6471  0016B4  C00A  F045         	movff	?___fladd+2,_roundf$1339+2
  6472  0016B8  C00B  F046         	movff	?___fladd+3,_roundf$1339+3
  6473  0016BC  C043  F018         	movff	_roundf$1339,___flsub@b
  6474  0016C0  C044  F019         	movff	_roundf$1339+1,___flsub@b+1
  6475  0016C4  C045  F01A         	movff	_roundf$1339+2,___flsub@b+2
  6476  0016C8  C046  F01B         	movff	_roundf$1339+3,___flsub@b+3
  6477  0016CC  C03B  F01C         	movff	roundf@x,___flsub@a
  6478  0016D0  C03C  F01D         	movff	roundf@x+1,___flsub@a+1
  6479  0016D4  C03D  F01E         	movff	roundf@x+2,___flsub@a+2
  6480  0016D8  C03E  F01F         	movff	roundf@x+3,___flsub@a+3
  6481  0016DC  EC18  F016         	call	___flsub	;wreg free
  6482  0016E0  C018  F051         	movff	?___flsub,roundf@y
  6483  0016E4  C019  F052         	movff	?___flsub+1,roundf@y+1
  6484  0016E8  C01A  F053         	movff	?___flsub+2,roundf@y+2
  6485  0016EC  C01B  F054         	movff	?___flsub+3,roundf@y+3
  6486  0016F0  0E00               	movlw	0
  6487  0016F2  6E2F               	movwf	___flge@ff1^0,c
  6488  0016F4  0E00               	movlw	0
  6489  0016F6  6E30               	movwf	(___flge@ff1+1)^0,c
  6490  0016F8  0E00               	movlw	0
  6491  0016FA  6E31               	movwf	(___flge@ff1+2)^0,c
  6492  0016FC  0E3F               	movlw	63
  6493  0016FE  6E32               	movwf	(___flge@ff1+3)^0,c
  6494  001700  C051  F033         	movff	roundf@y,___flge@ff2
  6495  001704  C052  F034         	movff	roundf@y+1,___flge@ff2+1
  6496  001708  C053  F035         	movff	roundf@y+2,___flge@ff2+2
  6497  00170C  C054  F036         	movff	roundf@y+3,___flge@ff2+3
  6498  001710  EC92  F011         	call	___flge	;wreg free
  6499  001714  B0D8               	btfsc	status,0,c
  6500  001716  EF8F  F00B         	goto	u4931
  6501  00171A  EF92  F00B         	goto	u4930
  6502  00171E                     u4931:
  6503  00171E  FFFF               	dw	65535	; assembler added errata NOP
  6504  001720  EFC9  F00B         	goto	l4391
  6505  001724                     u4930:
  6506  001724  FFFF               	dw	65535	; assembler added errata NOP
  6507  001726  C03B  F00C         	movff	roundf@x,___fladd@a
  6508  00172A  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  6509  00172E  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  6510  001732  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  6511  001736  C051  F008         	movff	roundf@y,___fladd@b
  6512  00173A  C052  F009         	movff	roundf@y+1,___fladd@b+1
  6513  00173E  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  6514  001742  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  6515  001746  EC45  F003         	call	___fladd	;wreg free
  6516  00174A  C008  F049         	movff	?___fladd,_roundf$1338
  6517  00174E  C009  F04A         	movff	?___fladd+1,_roundf$1338+1
  6518  001752  C00A  F04B         	movff	?___fladd+2,_roundf$1338+2
  6519  001756  C00B  F04C         	movff	?___fladd+3,_roundf$1338+3
  6520  00175A  C049  F008         	movff	_roundf$1338,___fladd@b
  6521  00175E  C04A  F009         	movff	_roundf$1338+1,___fladd@b+1
  6522  001762  C04B  F00A         	movff	_roundf$1338+2,___fladd@b+2
  6523  001766  C04C  F00B         	movff	_roundf$1338+3,___fladd@b+3
  6524  00176A  0E00               	movlw	0
  6525  00176C  6E0C               	movwf	___fladd@a^0,c
  6526  00176E  0E00               	movlw	0
  6527  001770  6E0D               	movwf	(___fladd@a+1)^0,c
  6528  001772  0E80               	movlw	128
  6529  001774  6E0E               	movwf	(___fladd@a+2)^0,c
  6530  001776  0EBF               	movlw	191
  6531  001778  6E0F               	movwf	(___fladd@a+3)^0,c
  6532  00177A  EC45  F003         	call	___fladd	;wreg free
  6533  00177E  C008  F051         	movff	?___fladd,roundf@y
  6534  001782  C009  F052         	movff	?___fladd+1,roundf@y+1
  6535  001786  C00A  F053         	movff	?___fladd+2,roundf@y+2
  6536  00178A  C00B  F054         	movff	?___fladd+3,roundf@y+3
  6537  00178E  EF36  F00C         	goto	l4397
  6538  001792                     l4391:
  6539  001792  FFFF               	dw	65535	; assembler added errata NOP
  6540  001794  0E00               	movlw	0
  6541  001796  6E2F               	movwf	___flge@ff1^0,c
  6542  001798  0E00               	movlw	0
  6543  00179A  6E30               	movwf	(___flge@ff1+1)^0,c
  6544  00179C  0E00               	movlw	0
  6545  00179E  6E31               	movwf	(___flge@ff1+2)^0,c
  6546  0017A0  0EBF               	movlw	191
  6547  0017A2  6E32               	movwf	(___flge@ff1+3)^0,c
  6548  0017A4  C051  F033         	movff	roundf@y,___flge@ff2
  6549  0017A8  C052  F034         	movff	roundf@y+1,___flge@ff2+1
  6550  0017AC  C053  F035         	movff	roundf@y+2,___flge@ff2+2
  6551  0017B0  C054  F036         	movff	roundf@y+3,___flge@ff2+3
  6552  0017B4  EC92  F011         	call	___flge	;wreg free
  6553  0017B8  A0D8               	btfss	status,0,c
  6554  0017BA  EFE1  F00B         	goto	u4941
  6555  0017BE  EFE4  F00B         	goto	u4940
  6556  0017C2                     u4941:
  6557  0017C2  FFFF               	dw	65535	; assembler added errata NOP
  6558  0017C4  EF1B  F00C         	goto	l4395
  6559  0017C8                     u4940:
  6560  0017C8  FFFF               	dw	65535	; assembler added errata NOP
  6561  0017CA  C03B  F00C         	movff	roundf@x,___fladd@a
  6562  0017CE  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  6563  0017D2  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  6564  0017D6  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  6565  0017DA  C051  F008         	movff	roundf@y,___fladd@b
  6566  0017DE  C052  F009         	movff	roundf@y+1,___fladd@b+1
  6567  0017E2  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  6568  0017E6  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  6569  0017EA  EC45  F003         	call	___fladd	;wreg free
  6570  0017EE  C008  F049         	movff	?___fladd,_roundf$1338
  6571  0017F2  C009  F04A         	movff	?___fladd+1,_roundf$1338+1
  6572  0017F6  C00A  F04B         	movff	?___fladd+2,_roundf$1338+2
  6573  0017FA  C00B  F04C         	movff	?___fladd+3,_roundf$1338+3
  6574  0017FE  C049  F008         	movff	_roundf$1338,___fladd@b
  6575  001802  C04A  F009         	movff	_roundf$1338+1,___fladd@b+1
  6576  001806  C04B  F00A         	movff	_roundf$1338+2,___fladd@b+2
  6577  00180A  C04C  F00B         	movff	_roundf$1338+3,___fladd@b+3
  6578  00180E  0E00               	movlw	0
  6579  001810  6E0C               	movwf	___fladd@a^0,c
  6580  001812  0E00               	movlw	0
  6581  001814  6E0D               	movwf	(___fladd@a+1)^0,c
  6582  001816  0E80               	movlw	128
  6583  001818  6E0E               	movwf	(___fladd@a+2)^0,c
  6584  00181A  0E3F               	movlw	63
  6585  00181C  6E0F               	movwf	(___fladd@a+3)^0,c
  6586  00181E  EC45  F003         	call	___fladd	;wreg free
  6587  001822  C008  F051         	movff	?___fladd,roundf@y
  6588  001826  C009  F052         	movff	?___fladd+1,roundf@y+1
  6589  00182A  C00A  F053         	movff	?___fladd+2,roundf@y+2
  6590  00182E  C00B  F054         	movff	?___fladd+3,roundf@y+3
  6591  001832  EF36  F00C         	goto	l4397
  6592  001836                     l4395:
  6593  001836  FFFF               	dw	65535	; assembler added errata NOP
  6594  001838  C051  F008         	movff	roundf@y,___fladd@b
  6595  00183C  C052  F009         	movff	roundf@y+1,___fladd@b+1
  6596  001840  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  6597  001844  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  6598  001848  C03B  F00C         	movff	roundf@x,___fladd@a
  6599  00184C  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  6600  001850  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  6601  001854  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  6602  001858  EC45  F003         	call	___fladd	;wreg free
  6603  00185C  C008  F051         	movff	?___fladd,roundf@y
  6604  001860  C009  F052         	movff	?___fladd+1,roundf@y+1
  6605  001864  C00A  F053         	movff	?___fladd+2,roundf@y+2
  6606  001868  C00B  F054         	movff	?___fladd+3,roundf@y+3
  6607  00186C                     l4397:
  6608  00186C  FFFF               	dw	65535	; assembler added errata NOP
  6609  00186E  C04D  F03F         	movff	roundf@u,??_roundf
  6610  001872  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6611  001876  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6612  00187A  C050  F042         	movff	roundf@u+3,??_roundf+3
  6613  00187E  0E20               	movlw	32
  6614  001880  EF48  F00C         	goto	u4950
  6615  001884                     u4955:
  6616  001884  FFFF               	dw	65535	; assembler added errata NOP
  6617  001886  90D8               	bcf	status,0,c
  6618  001888  3242               	rrcf	(??_roundf+3)^0,f,c
  6619  00188A  3241               	rrcf	(??_roundf+2)^0,f,c
  6620  00188C  3240               	rrcf	(??_roundf+1)^0,f,c
  6621  00188E  323F               	rrcf	??_roundf^0,f,c
  6622  001890                     u4950:
  6623  001890  FFFF               	dw	65535	; assembler added errata NOP
  6624  001892  2EE8               	decfsz	wreg,f,c
  6625  001894  EF42  F00C         	goto	u4955
  6626  001898  503F               	movf	??_roundf^0,w,c
  6627  00189A  1040               	iorwf	(??_roundf+1)^0,w,c
  6628  00189C  1041               	iorwf	(??_roundf+2)^0,w,c
  6629  00189E  1042               	iorwf	(??_roundf+3)^0,w,c
  6630  0018A0  B4D8               	btfsc	status,2,c
  6631  0018A2  EF55  F00C         	goto	u4961
  6632  0018A6  EF58  F00C         	goto	u4960
  6633  0018AA                     u4961:
  6634  0018AA  FFFF               	dw	65535	; assembler added errata NOP
  6635  0018AC  EF6B  F00C         	goto	l4401
  6636  0018B0                     u4960:
  6637  0018B0  FFFF               	dw	65535	; assembler added errata NOP
  6638  0018B2  C051  F008         	movff	roundf@y,___flneg@f1
  6639  0018B6  C052  F009         	movff	roundf@y+1,___flneg@f1+1
  6640  0018BA  C053  F00A         	movff	roundf@y+2,___flneg@f1+2
  6641  0018BE  C054  F00B         	movff	roundf@y+3,___flneg@f1+3
  6642  0018C2  ECA0  F016         	call	___flneg	;wreg free
  6643  0018C6  C008  F051         	movff	?___flneg,roundf@y
  6644  0018CA  C009  F052         	movff	?___flneg+1,roundf@y+1
  6645  0018CE  C00A  F053         	movff	?___flneg+2,roundf@y+2
  6646  0018D2  C00B  F054         	movff	?___flneg+3,roundf@y+3
  6647  0018D6                     l4401:
  6648  0018D6  FFFF               	dw	65535	; assembler added errata NOP
  6649  0018D8  C051  F03B         	movff	roundf@y,?_roundf
  6650  0018DC  C052  F03C         	movff	roundf@y+1,?_roundf+1
  6651  0018E0  C053  F03D         	movff	roundf@y+2,?_roundf+2
  6652  0018E4  C054  F03E         	movff	roundf@y+3,?_roundf+3
  6653  0018E8                     l1142:
  6654  0018E8  FFFF               	dw	65535	; assembler added errata NOP
  6655  0018EA  0012               	return		;funcret
  6656  0018EC  FFFF               	dw	65535	; errata NOP
  6657  0018EE                     __end_of_roundf:
  6658                           	callstack 0
  6659                           
  6660 ;; *************** function ___flsub *****************
  6661 ;; Defined at:
  6662 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  b               4   23[COMRAM] float 
  6665 ;;  a               4   27[COMRAM] float 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  4   23[COMRAM] float 
  6670 ;; Registers used:
  6671 ;;		wreg, status,2, status,0, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6677 ;;      Params:         8       0       0       0       0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0
  6680 ;;      Totals:         8       0       0       0       0       0       0
  6681 ;;Total ram usage:        8 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; Hardware stack levels required when called: 2
  6684 ;; This function calls:
  6685 ;;		___fladd
  6686 ;; This function is called by:
  6687 ;;		_roundf
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text27
  6692  002C30                     __ptext27:
  6693                           	callstack 0
  6694  002C30                     ___flsub:
  6695                           	callstack 0
  6696  002C30  FFFF               	dw	65535	; assembler added errata NOP
  6697  002C32  0E00               	movlw	0
  6698  002C34  1A1C               	xorwf	___flsub@a^0,f,c
  6699  002C36  0E00               	movlw	0
  6700  002C38  1A1D               	xorwf	(___flsub@a+1)^0,f,c
  6701  002C3A  0E00               	movlw	0
  6702  002C3C  1A1E               	xorwf	(___flsub@a+2)^0,f,c
  6703  002C3E  0E80               	movlw	128
  6704  002C40  1A1F               	xorwf	(___flsub@a+3)^0,f,c
  6705  002C42  C018  F008         	movff	___flsub@b,___fladd@b
  6706  002C46  C019  F009         	movff	___flsub@b+1,___fladd@b+1
  6707  002C4A  C01A  F00A         	movff	___flsub@b+2,___fladd@b+2
  6708  002C4E  C01B  F00B         	movff	___flsub@b+3,___fladd@b+3
  6709  002C52  C01C  F00C         	movff	___flsub@a,___fladd@a
  6710  002C56  C01D  F00D         	movff	___flsub@a+1,___fladd@a+1
  6711  002C5A  C01E  F00E         	movff	___flsub@a+2,___fladd@a+2
  6712  002C5E  C01F  F00F         	movff	___flsub@a+3,___fladd@a+3
  6713  002C62  EC45  F003         	call	___fladd	;wreg free
  6714  002C66  C008  F018         	movff	?___fladd,?___flsub
  6715  002C6A  C009  F019         	movff	?___fladd+1,?___flsub+1
  6716  002C6E  C00A  F01A         	movff	?___fladd+2,?___flsub+2
  6717  002C72  C00B  F01B         	movff	?___fladd+3,?___flsub+3
  6718  002C76  0012               	return		;funcret
  6719  002C78  FFFF               	dw	65535	; errata NOP
  6720  002C7A                     __end_of___flsub:
  6721                           	callstack 0
  6722                           
  6723 ;; *************** function ___fladd *****************
  6724 ;; Defined at:
  6725 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  b               4    7[COMRAM] float 
  6728 ;;  a               4   11[COMRAM] float 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;  grs             1   22[COMRAM] unsigned char 
  6731 ;;  bexp            1   21[COMRAM] unsigned char 
  6732 ;;  aexp            1   20[COMRAM] unsigned char 
  6733 ;;  signs           1   19[COMRAM] unsigned char 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  4    7[COMRAM] unsigned char 
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6743 ;;      Params:         8       0       0       0       0       0       0
  6744 ;;      Locals:         4       0       0       0       0       0       0
  6745 ;;      Temps:          4       0       0       0       0       0       0
  6746 ;;      Totals:        16       0       0       0       0       0       0
  6747 ;;Total ram usage:       16 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 1
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		___flsub
  6754 ;;		_roundf
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text28
  6759  00068A                     __ptext28:
  6760                           	callstack 0
  6761  00068A                     ___fladd:
  6762                           	callstack 0
  6763  00068A  FFFF               	dw	65535	; assembler added errata NOP
  6764  00068C  500B               	movf	(___fladd@b+3)^0,w,c
  6765  00068E  0B80               	andlw	128
  6766  000690  6E14               	movwf	___fladd@signs^0,c
  6767  000692  500B               	movf	(___fladd@b+3)^0,w,c
  6768  000694  240B               	addwf	(___fladd@b+3)^0,w,c
  6769  000696  6E16               	movwf	___fladd@bexp^0,c
  6770  000698  AE0A               	btfss	(___fladd@b+2)^0,7,c
  6771  00069A  EF51  F003         	goto	u2131
  6772  00069E  EF54  F003         	goto	u2130
  6773  0006A2                     u2131:
  6774  0006A2  FFFF               	dw	65535	; assembler added errata NOP
  6775  0006A4  EF56  F003         	goto	l2581
  6776  0006A8                     u2130:
  6777  0006A8  FFFF               	dw	65535	; assembler added errata NOP
  6778  0006AA  8016               	bsf	___fladd@bexp^0,0,c
  6779  0006AC                     l2581:
  6780  0006AC  FFFF               	dw	65535	; assembler added errata NOP
  6781  0006AE  5016               	movf	___fladd@bexp^0,w,c
  6782  0006B0  B4D8               	btfsc	status,2,c
  6783  0006B2  EF5D  F003         	goto	u2141
  6784  0006B6  EF60  F003         	goto	u2140
  6785  0006BA                     u2141:
  6786  0006BA  FFFF               	dw	65535	; assembler added errata NOP
  6787  0006BC  EF79  F003         	goto	l2591
  6788  0006C0                     u2140:
  6789  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  6790  0006C2  2816               	incf	___fladd@bexp^0,w,c
  6791  0006C4  A4D8               	btfss	status,2,c
  6792  0006C6  EF67  F003         	goto	u2151
  6793  0006CA  EF6A  F003         	goto	u2150
  6794  0006CE                     u2151:
  6795  0006CE  FFFF               	dw	65535	; assembler added errata NOP
  6796  0006D0  EF73  F003         	goto	l2587
  6797  0006D4                     u2150:
  6798  0006D4  FFFF               	dw	65535	; assembler added errata NOP
  6799  0006D6  0E00               	movlw	0
  6800  0006D8  6E08               	movwf	___fladd@b^0,c
  6801  0006DA  0E00               	movlw	0
  6802  0006DC  6E09               	movwf	(___fladd@b+1)^0,c
  6803  0006DE  0E00               	movlw	0
  6804  0006E0  6E0A               	movwf	(___fladd@b+2)^0,c
  6805  0006E2  0E00               	movlw	0
  6806  0006E4  6E0B               	movwf	(___fladd@b+3)^0,c
  6807  0006E6                     l2587:
  6808  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  6809  0006E8  8E0A               	bsf	(___fladd@b+2)^0,7,c
  6810  0006EA  0E00               	movlw	0
  6811  0006EC  6E0B               	movwf	(___fladd@b+3)^0,c
  6812  0006EE  EF82  F003         	goto	l2593
  6813  0006F2                     l2591:
  6814  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  6815  0006F4  0E00               	movlw	0
  6816  0006F6  6E08               	movwf	___fladd@b^0,c
  6817  0006F8  0E00               	movlw	0
  6818  0006FA  6E09               	movwf	(___fladd@b+1)^0,c
  6819  0006FC  0E00               	movlw	0
  6820  0006FE  6E0A               	movwf	(___fladd@b+2)^0,c
  6821  000700  0E00               	movlw	0
  6822  000702  6E0B               	movwf	(___fladd@b+3)^0,c
  6823  000704                     l2593:
  6824  000704  FFFF               	dw	65535	; assembler added errata NOP
  6825  000706  500F               	movf	(___fladd@a+3)^0,w,c
  6826  000708  0B80               	andlw	128
  6827  00070A  6E15               	movwf	___fladd@aexp^0,c
  6828  00070C  5014               	movf	___fladd@signs^0,w,c
  6829  00070E  1815               	xorwf	___fladd@aexp^0,w,c
  6830  000710  B4D8               	btfsc	status,2,c
  6831  000712  EF8D  F003         	goto	u2161
  6832  000716  EF90  F003         	goto	u2160
  6833  00071A                     u2161:
  6834  00071A  FFFF               	dw	65535	; assembler added errata NOP
  6835  00071C  EF92  F003         	goto	l2599
  6836  000720                     u2160:
  6837  000720  FFFF               	dw	65535	; assembler added errata NOP
  6838  000722  8C14               	bsf	___fladd@signs^0,6,c
  6839  000724                     l2599:
  6840  000724  FFFF               	dw	65535	; assembler added errata NOP
  6841  000726  500F               	movf	(___fladd@a+3)^0,w,c
  6842  000728  240F               	addwf	(___fladd@a+3)^0,w,c
  6843  00072A  6E15               	movwf	___fladd@aexp^0,c
  6844  00072C  AE0E               	btfss	(___fladd@a+2)^0,7,c
  6845  00072E  EF9B  F003         	goto	u2171
  6846  000732  EF9E  F003         	goto	u2170
  6847  000736                     u2171:
  6848  000736  FFFF               	dw	65535	; assembler added errata NOP
  6849  000738  EFA0  F003         	goto	l2605
  6850  00073C                     u2170:
  6851  00073C  FFFF               	dw	65535	; assembler added errata NOP
  6852  00073E  8015               	bsf	___fladd@aexp^0,0,c
  6853  000740                     l2605:
  6854  000740  FFFF               	dw	65535	; assembler added errata NOP
  6855  000742  5015               	movf	___fladd@aexp^0,w,c
  6856  000744  B4D8               	btfsc	status,2,c
  6857  000746  EFA7  F003         	goto	u2181
  6858  00074A  EFAA  F003         	goto	u2180
  6859  00074E                     u2181:
  6860  00074E  FFFF               	dw	65535	; assembler added errata NOP
  6861  000750  EFC3  F003         	goto	l2615
  6862  000754                     u2180:
  6863  000754  FFFF               	dw	65535	; assembler added errata NOP
  6864  000756  2815               	incf	___fladd@aexp^0,w,c
  6865  000758  A4D8               	btfss	status,2,c
  6866  00075A  EFB1  F003         	goto	u2191
  6867  00075E  EFB4  F003         	goto	u2190
  6868  000762                     u2191:
  6869  000762  FFFF               	dw	65535	; assembler added errata NOP
  6870  000764  EFBD  F003         	goto	l2611
  6871  000768                     u2190:
  6872  000768  FFFF               	dw	65535	; assembler added errata NOP
  6873  00076A  0E00               	movlw	0
  6874  00076C  6E0C               	movwf	___fladd@a^0,c
  6875  00076E  0E00               	movlw	0
  6876  000770  6E0D               	movwf	(___fladd@a+1)^0,c
  6877  000772  0E00               	movlw	0
  6878  000774  6E0E               	movwf	(___fladd@a+2)^0,c
  6879  000776  0E00               	movlw	0
  6880  000778  6E0F               	movwf	(___fladd@a+3)^0,c
  6881  00077A                     l2611:
  6882  00077A  FFFF               	dw	65535	; assembler added errata NOP
  6883  00077C  8E0E               	bsf	(___fladd@a+2)^0,7,c
  6884  00077E  0E00               	movlw	0
  6885  000780  6E0F               	movwf	(___fladd@a+3)^0,c
  6886  000782  EFCC  F003         	goto	l2617
  6887  000786                     l2615:
  6888  000786  FFFF               	dw	65535	; assembler added errata NOP
  6889  000788  0E00               	movlw	0
  6890  00078A  6E0C               	movwf	___fladd@a^0,c
  6891  00078C  0E00               	movlw	0
  6892  00078E  6E0D               	movwf	(___fladd@a+1)^0,c
  6893  000790  0E00               	movlw	0
  6894  000792  6E0E               	movwf	(___fladd@a+2)^0,c
  6895  000794  0E00               	movlw	0
  6896  000796  6E0F               	movwf	(___fladd@a+3)^0,c
  6897  000798                     l2617:
  6898  000798  FFFF               	dw	65535	; assembler added errata NOP
  6899  00079A  5016               	movf	___fladd@bexp^0,w,c
  6900  00079C  5C15               	subwf	___fladd@aexp^0,w,c
  6901  00079E  B0D8               	btfsc	status,0,c
  6902  0007A0  EFD4  F003         	goto	u2201
  6903  0007A4  EFD7  F003         	goto	u2200
  6904  0007A8                     u2201:
  6905  0007A8  FFFF               	dw	65535	; assembler added errata NOP
  6906  0007AA  EF02  F004         	goto	l2653
  6907  0007AE                     u2200:
  6908  0007AE  FFFF               	dw	65535	; assembler added errata NOP
  6909  0007B0  AC14               	btfss	___fladd@signs^0,6,c
  6910  0007B2  EFDD  F003         	goto	u2211
  6911  0007B6  EFE0  F003         	goto	u2210
  6912  0007BA                     u2211:
  6913  0007BA  FFFF               	dw	65535	; assembler added errata NOP
  6914  0007BC  EFE3  F003         	goto	l2623
  6915  0007C0                     u2210:
  6916  0007C0  FFFF               	dw	65535	; assembler added errata NOP
  6917  0007C2  0E80               	movlw	128
  6918  0007C4  1A14               	xorwf	___fladd@signs^0,f,c
  6919  0007C6                     l2623:
  6920  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  6921  0007C8  C016  F017         	movff	___fladd@bexp,___fladd@grs
  6922  0007CC  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  6923  0007D0  C017  F015         	movff	___fladd@grs,___fladd@aexp
  6924  0007D4  C008  F017         	movff	___fladd@b,___fladd@grs
  6925  0007D8  C00C  F008         	movff	___fladd@a,___fladd@b
  6926  0007DC  C017  F00C         	movff	___fladd@grs,___fladd@a
  6927  0007E0  C009  F017         	movff	___fladd@b+1,___fladd@grs
  6928  0007E4  C00D  F009         	movff	___fladd@a+1,___fladd@b+1
  6929  0007E8  C017  F00D         	movff	___fladd@grs,___fladd@a+1
  6930  0007EC  C00A  F017         	movff	___fladd@b+2,___fladd@grs
  6931  0007F0  C00E  F00A         	movff	___fladd@a+2,___fladd@b+2
  6932  0007F4  C017  F00E         	movff	___fladd@grs,___fladd@a+2
  6933  0007F8  C00B  F017         	movff	___fladd@b+3,___fladd@grs
  6934  0007FC  C00F  F00B         	movff	___fladd@a+3,___fladd@b+3
  6935  000800  C017  F00F         	movff	___fladd@grs,___fladd@a+3
  6936  000804                     l2653:
  6937  000804  FFFF               	dw	65535	; assembler added errata NOP
  6938  000806  0E00               	movlw	0
  6939  000808  6E17               	movwf	___fladd@grs^0,c
  6940  00080A  5016               	movf	___fladd@bexp^0,w,c
  6941  00080C  C015  F010         	movff	___fladd@aexp,??___fladd
  6942  000810  6A11               	clrf	(??___fladd+1)^0,c
  6943  000812  5E10               	subwf	??___fladd^0,f,c
  6944  000814  0E00               	movlw	0
  6945  000816  5A11               	subwfb	(??___fladd+1)^0,f,c
  6946  000818  BE11               	btfsc	(??___fladd+1)^0,7,c
  6947  00081A  EF18  F004         	goto	u2221
  6948  00081E  5011               	movf	(??___fladd+1)^0,w,c
  6949  000820  E10A               	bnz	u2220
  6950  000822  0E1A               	movlw	26
  6951  000824  5C10               	subwf	??___fladd^0,w,c
  6952  000826  A0D8               	btfss	status,0,c
  6953  000828  EF18  F004         	goto	u2221
  6954  00082C  EF1B  F004         	goto	u2220
  6955  000830                     u2221:
  6956  000830  FFFF               	dw	65535	; assembler added errata NOP
  6957  000832  EF5E  F004         	goto	l937
  6958  000836                     u2220:
  6959  000836  FFFF               	dw	65535	; assembler added errata NOP
  6960  000838  5008               	movf	___fladd@b^0,w,c
  6961  00083A  1009               	iorwf	(___fladd@b+1)^0,w,c
  6962  00083C  100A               	iorwf	(___fladd@b+2)^0,w,c
  6963  00083E  100B               	iorwf	(___fladd@b+3)^0,w,c
  6964  000840  A4D8               	btfss	status,2,c
  6965  000842  EF25  F004         	goto	u2231
  6966  000846  EF29  F004         	goto	u2230
  6967  00084A                     u2231:
  6968  00084A  FFFF               	dw	65535	; assembler added errata NOP
  6969  00084C  0E01               	movlw	1
  6970  00084E  EF2B  F004         	goto	u2240
  6971  000852                     u2230:
  6972  000852  FFFF               	dw	65535	; assembler added errata NOP
  6973  000854  0E00               	movlw	0
  6974  000856                     u2240:
  6975  000856  FFFF               	dw	65535	; assembler added errata NOP
  6976  000858  6E17               	movwf	___fladd@grs^0,c
  6977  00085A  0E00               	movlw	0
  6978  00085C  6E08               	movwf	___fladd@b^0,c
  6979  00085E  0E00               	movlw	0
  6980  000860  6E09               	movwf	(___fladd@b+1)^0,c
  6981  000862  0E00               	movlw	0
  6982  000864  6E0A               	movwf	(___fladd@b+2)^0,c
  6983  000866  0E00               	movlw	0
  6984  000868  6E0B               	movwf	(___fladd@b+3)^0,c
  6985  00086A  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  6986  00086E  EF69  F004         	goto	l936
  6987  000872                     l938:
  6988  000872  FFFF               	dw	65535	; assembler added errata NOP
  6989  000874  A017               	btfss	___fladd@grs^0,0,c
  6990  000876  EF3F  F004         	goto	u2251
  6991  00087A  EF42  F004         	goto	u2250
  6992  00087E                     u2251:
  6993  00087E  FFFF               	dw	65535	; assembler added errata NOP
  6994  000880  EF49  F004         	goto	l2665
  6995  000884                     u2250:
  6996  000884  FFFF               	dw	65535	; assembler added errata NOP
  6997  000886  90D8               	bcf	status,0,c
  6998  000888  3017               	rrcf	___fladd@grs^0,w,c
  6999  00088A  0901               	iorlw	1
  7000  00088C  6E17               	movwf	___fladd@grs^0,c
  7001  00088E  EF4C  F004         	goto	l2667
  7002  000892                     l2665:
  7003  000892  FFFF               	dw	65535	; assembler added errata NOP
  7004  000894  90D8               	bcf	status,0,c
  7005  000896  3217               	rrcf	___fladd@grs^0,f,c
  7006  000898                     l2667:
  7007  000898  FFFF               	dw	65535	; assembler added errata NOP
  7008  00089A  A008               	btfss	___fladd@b^0,0,c
  7009  00089C  EF52  F004         	goto	u2261
  7010  0008A0  EF55  F004         	goto	u2260
  7011  0008A4                     u2261:
  7012  0008A4  FFFF               	dw	65535	; assembler added errata NOP
  7013  0008A6  EF57  F004         	goto	l2671
  7014  0008AA                     u2260:
  7015  0008AA  FFFF               	dw	65535	; assembler added errata NOP
  7016  0008AC  8E17               	bsf	___fladd@grs^0,7,c
  7017  0008AE                     l2671:
  7018  0008AE  FFFF               	dw	65535	; assembler added errata NOP
  7019  0008B0  340B               	rlcf	(___fladd@b+3)^0,w,c
  7020  0008B2  320B               	rrcf	(___fladd@b+3)^0,f,c
  7021  0008B4  320A               	rrcf	(___fladd@b+2)^0,f,c
  7022  0008B6  3209               	rrcf	(___fladd@b+1)^0,f,c
  7023  0008B8  3208               	rrcf	___fladd@b^0,f,c
  7024  0008BA  2A16               	incf	___fladd@bexp^0,f,c
  7025  0008BC                     l937:
  7026  0008BC  FFFF               	dw	65535	; assembler added errata NOP
  7027  0008BE  5015               	movf	___fladd@aexp^0,w,c
  7028  0008C0  5C16               	subwf	___fladd@bexp^0,w,c
  7029  0008C2  A0D8               	btfss	status,0,c
  7030  0008C4  EF66  F004         	goto	u2271
  7031  0008C8  EF69  F004         	goto	u2270
  7032  0008CC                     u2271:
  7033  0008CC  FFFF               	dw	65535	; assembler added errata NOP
  7034  0008CE  EF39  F004         	goto	l938
  7035  0008D2                     u2270:
  7036  0008D2                     l936:
  7037  0008D2  FFFF               	dw	65535	; assembler added errata NOP
  7038  0008D4  BC14               	btfsc	___fladd@signs^0,6,c
  7039  0008D6  EF6F  F004         	goto	u2281
  7040  0008DA  EF72  F004         	goto	u2280
  7041  0008DE                     u2281:
  7042  0008DE  FFFF               	dw	65535	; assembler added errata NOP
  7043  0008E0  EFBF  F004         	goto	l2699
  7044  0008E4                     u2280:
  7045  0008E4  FFFF               	dw	65535	; assembler added errata NOP
  7046  0008E6  5016               	movf	___fladd@bexp^0,w,c
  7047  0008E8  A4D8               	btfss	status,2,c
  7048  0008EA  EF79  F004         	goto	u2291
  7049  0008EE  EF7C  F004         	goto	u2290
  7050  0008F2                     u2291:
  7051  0008F2  FFFF               	dw	65535	; assembler added errata NOP
  7052  0008F4  EF87  F004         	goto	l2681
  7053  0008F8                     u2290:
  7054  0008F8  FFFF               	dw	65535	; assembler added errata NOP
  7055  0008FA  0E00               	movlw	0
  7056  0008FC  6E08               	movwf	?___fladd^0,c
  7057  0008FE  0E00               	movlw	0
  7058  000900  6E09               	movwf	(?___fladd+1)^0,c
  7059  000902  0E00               	movlw	0
  7060  000904  6E0A               	movwf	(?___fladd+2)^0,c
  7061  000906  0E00               	movlw	0
  7062  000908  6E0B               	movwf	(?___fladd+3)^0,c
  7063  00090A  EF16  F006         	goto	l945
  7064  00090E                     l2681:
  7065  00090E  FFFF               	dw	65535	; assembler added errata NOP
  7066  000910  500C               	movf	___fladd@a^0,w,c
  7067  000912  2608               	addwf	___fladd@b^0,f,c
  7068  000914  500D               	movf	(___fladd@a+1)^0,w,c
  7069  000916  2209               	addwfc	(___fladd@b+1)^0,f,c
  7070  000918  500E               	movf	(___fladd@a+2)^0,w,c
  7071  00091A  220A               	addwfc	(___fladd@b+2)^0,f,c
  7072  00091C  500F               	movf	(___fladd@a+3)^0,w,c
  7073  00091E  220B               	addwfc	(___fladd@b+3)^0,f,c
  7074  000920  A00B               	btfss	(___fladd@b+3)^0,0,c
  7075  000922  EF95  F004         	goto	u2301
  7076  000926  EF98  F004         	goto	u2300
  7077  00092A                     u2301:
  7078  00092A  FFFF               	dw	65535	; assembler added errata NOP
  7079  00092C  EF63  F005         	goto	l2735
  7080  000930                     u2300:
  7081  000930  FFFF               	dw	65535	; assembler added errata NOP
  7082  000932  A017               	btfss	___fladd@grs^0,0,c
  7083  000934  EF9E  F004         	goto	u2311
  7084  000938  EFA1  F004         	goto	u2310
  7085  00093C                     u2311:
  7086  00093C  FFFF               	dw	65535	; assembler added errata NOP
  7087  00093E  EFA8  F004         	goto	l2689
  7088  000942                     u2310:
  7089  000942  FFFF               	dw	65535	; assembler added errata NOP
  7090  000944  90D8               	bcf	status,0,c
  7091  000946  3017               	rrcf	___fladd@grs^0,w,c
  7092  000948  0901               	iorlw	1
  7093  00094A  6E17               	movwf	___fladd@grs^0,c
  7094  00094C  EFAB  F004         	goto	l2691
  7095  000950                     l2689:
  7096  000950  FFFF               	dw	65535	; assembler added errata NOP
  7097  000952  90D8               	bcf	status,0,c
  7098  000954  3217               	rrcf	___fladd@grs^0,f,c
  7099  000956                     l2691:
  7100  000956  FFFF               	dw	65535	; assembler added errata NOP
  7101  000958  A008               	btfss	___fladd@b^0,0,c
  7102  00095A  EFB1  F004         	goto	u2321
  7103  00095E  EFB4  F004         	goto	u2320
  7104  000962                     u2321:
  7105  000962  FFFF               	dw	65535	; assembler added errata NOP
  7106  000964  EFB6  F004         	goto	l2695
  7107  000968                     u2320:
  7108  000968  FFFF               	dw	65535	; assembler added errata NOP
  7109  00096A  8E17               	bsf	___fladd@grs^0,7,c
  7110  00096C                     l2695:
  7111  00096C  FFFF               	dw	65535	; assembler added errata NOP
  7112  00096E  340B               	rlcf	(___fladd@b+3)^0,w,c
  7113  000970  320B               	rrcf	(___fladd@b+3)^0,f,c
  7114  000972  320A               	rrcf	(___fladd@b+2)^0,f,c
  7115  000974  3209               	rrcf	(___fladd@b+1)^0,f,c
  7116  000976  3208               	rrcf	___fladd@b^0,f,c
  7117  000978  2A16               	incf	___fladd@bexp^0,f,c
  7118  00097A  EF63  F005         	goto	l2735
  7119  00097E                     l2699:
  7120  00097E  FFFF               	dw	65535	; assembler added errata NOP
  7121  000980  500C               	movf	___fladd@a^0,w,c
  7122  000982  5C08               	subwf	___fladd@b^0,w,c
  7123  000984  500D               	movf	(___fladd@a+1)^0,w,c
  7124  000986  5809               	subwfb	(___fladd@b+1)^0,w,c
  7125  000988  500E               	movf	(___fladd@a+2)^0,w,c
  7126  00098A  580A               	subwfb	(___fladd@b+2)^0,w,c
  7127  00098C  500B               	movf	(___fladd@b+3)^0,w,c
  7128  00098E  0A80               	xorlw	128
  7129  000990  6E10               	movwf	??___fladd^0,c
  7130  000992  500F               	movf	(___fladd@a+3)^0,w,c
  7131  000994  0A80               	xorlw	128
  7132  000996  5810               	subwfb	??___fladd^0,w,c
  7133  000998  B0D8               	btfsc	status,0,c
  7134  00099A  EFD1  F004         	goto	u2331
  7135  00099E  EFD4  F004         	goto	u2330
  7136  0009A2                     u2331:
  7137  0009A2  FFFF               	dw	65535	; assembler added errata NOP
  7138  0009A4  EF02  F005         	goto	l2709
  7139  0009A8                     u2330:
  7140  0009A8  FFFF               	dw	65535	; assembler added errata NOP
  7141  0009AA  5008               	movf	___fladd@b^0,w,c
  7142  0009AC  5C0C               	subwf	___fladd@a^0,w,c
  7143  0009AE  6E10               	movwf	??___fladd^0,c
  7144  0009B0  5009               	movf	(___fladd@b+1)^0,w,c
  7145  0009B2  580D               	subwfb	(___fladd@a+1)^0,w,c
  7146  0009B4  6E11               	movwf	(??___fladd+1)^0,c
  7147  0009B6  500A               	movf	(___fladd@b+2)^0,w,c
  7148  0009B8  580E               	subwfb	(___fladd@a+2)^0,w,c
  7149  0009BA  6E12               	movwf	(??___fladd+2)^0,c
  7150  0009BC  500B               	movf	(___fladd@b+3)^0,w,c
  7151  0009BE  580F               	subwfb	(___fladd@a+3)^0,w,c
  7152  0009C0  6E13               	movwf	(??___fladd+3)^0,c
  7153  0009C2  0EFF               	movlw	255
  7154  0009C4  2410               	addwf	??___fladd^0,w,c
  7155  0009C6  6E08               	movwf	___fladd@b^0,c
  7156  0009C8  0EFF               	movlw	255
  7157  0009CA  2011               	addwfc	(??___fladd+1)^0,w,c
  7158  0009CC  6E09               	movwf	(___fladd@b+1)^0,c
  7159  0009CE  0EFF               	movlw	255
  7160  0009D0  2012               	addwfc	(??___fladd+2)^0,w,c
  7161  0009D2  6E0A               	movwf	(___fladd@b+2)^0,c
  7162  0009D4  0EFF               	movlw	255
  7163  0009D6  2013               	addwfc	(??___fladd+3)^0,w,c
  7164  0009D8  6E0B               	movwf	(___fladd@b+3)^0,c
  7165  0009DA  0E80               	movlw	128
  7166  0009DC  1A14               	xorwf	___fladd@signs^0,f,c
  7167  0009DE  6C17               	negf	___fladd@grs^0,c
  7168  0009E0  5017               	movf	___fladd@grs^0,w,c
  7169  0009E2  A4D8               	btfss	status,2,c
  7170  0009E4  EFF6  F004         	goto	u2341
  7171  0009E8  EFF9  F004         	goto	u2340
  7172  0009EC                     u2341:
  7173  0009EC  FFFF               	dw	65535	; assembler added errata NOP
  7174  0009EE  EF0B  F005         	goto	l953
  7175  0009F2                     u2340:
  7176  0009F2  FFFF               	dw	65535	; assembler added errata NOP
  7177  0009F4  0E01               	movlw	1
  7178  0009F6  2608               	addwf	___fladd@b^0,f,c
  7179  0009F8  0E00               	movlw	0
  7180  0009FA  2209               	addwfc	(___fladd@b+1)^0,f,c
  7181  0009FC  220A               	addwfc	(___fladd@b+2)^0,f,c
  7182  0009FE  220B               	addwfc	(___fladd@b+3)^0,f,c
  7183  000A00  EF0B  F005         	goto	l953
  7184  000A04                     l2709:
  7185  000A04  FFFF               	dw	65535	; assembler added errata NOP
  7186  000A06  500C               	movf	___fladd@a^0,w,c
  7187  000A08  5E08               	subwf	___fladd@b^0,f,c
  7188  000A0A  500D               	movf	(___fladd@a+1)^0,w,c
  7189  000A0C  5A09               	subwfb	(___fladd@b+1)^0,f,c
  7190  000A0E  500E               	movf	(___fladd@a+2)^0,w,c
  7191  000A10  5A0A               	subwfb	(___fladd@b+2)^0,f,c
  7192  000A12  500F               	movf	(___fladd@a+3)^0,w,c
  7193  000A14  5A0B               	subwfb	(___fladd@b+3)^0,f,c
  7194  000A16                     l953:
  7195  000A16  FFFF               	dw	65535	; assembler added errata NOP
  7196  000A18  5008               	movf	___fladd@b^0,w,c
  7197  000A1A  1009               	iorwf	(___fladd@b+1)^0,w,c
  7198  000A1C  100A               	iorwf	(___fladd@b+2)^0,w,c
  7199  000A1E  100B               	iorwf	(___fladd@b+3)^0,w,c
  7200  000A20  A4D8               	btfss	status,2,c
  7201  000A22  EF15  F005         	goto	u2351
  7202  000A26  EF18  F005         	goto	u2350
  7203  000A2A                     u2351:
  7204  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  7205  000A2C  EF5A  F005         	goto	l2733
  7206  000A30                     u2350:
  7207  000A30  FFFF               	dw	65535	; assembler added errata NOP
  7208  000A32  5017               	movf	___fladd@grs^0,w,c
  7209  000A34  A4D8               	btfss	status,2,c
  7210  000A36  EF1F  F005         	goto	u2361
  7211  000A3A  EF22  F005         	goto	u2360
  7212  000A3E                     u2361:
  7213  000A3E  FFFF               	dw	65535	; assembler added errata NOP
  7214  000A40  EF5A  F005         	goto	l2733
  7215  000A44                     u2360:
  7216  000A44  FFFF               	dw	65535	; assembler added errata NOP
  7217  000A46  0E00               	movlw	0
  7218  000A48  6E08               	movwf	?___fladd^0,c
  7219  000A4A  0E00               	movlw	0
  7220  000A4C  6E09               	movwf	(?___fladd+1)^0,c
  7221  000A4E  0E00               	movlw	0
  7222  000A50  6E0A               	movwf	(?___fladd+2)^0,c
  7223  000A52  0E00               	movlw	0
  7224  000A54  6E0B               	movwf	(?___fladd+3)^0,c
  7225  000A56  EF16  F006         	goto	l945
  7226  000A5A                     l2717:
  7227  000A5A  FFFF               	dw	65535	; assembler added errata NOP
  7228  000A5C  90D8               	bcf	status,0,c
  7229  000A5E  3608               	rlcf	___fladd@b^0,f,c
  7230  000A60  3609               	rlcf	(___fladd@b+1)^0,f,c
  7231  000A62  360A               	rlcf	(___fladd@b+2)^0,f,c
  7232  000A64  360B               	rlcf	(___fladd@b+3)^0,f,c
  7233  000A66  AE17               	btfss	___fladd@grs^0,7,c
  7234  000A68  EF38  F005         	goto	u2371
  7235  000A6C  EF3B  F005         	goto	u2370
  7236  000A70                     u2371:
  7237  000A70  FFFF               	dw	65535	; assembler added errata NOP
  7238  000A72  EF3D  F005         	goto	l2723
  7239  000A76                     u2370:
  7240  000A76  FFFF               	dw	65535	; assembler added errata NOP
  7241  000A78  8008               	bsf	___fladd@b^0,0,c
  7242  000A7A                     l2723:
  7243  000A7A  FFFF               	dw	65535	; assembler added errata NOP
  7244  000A7C  A017               	btfss	___fladd@grs^0,0,c
  7245  000A7E  EF43  F005         	goto	u2381
  7246  000A82  EF46  F005         	goto	u2380
  7247  000A86                     u2381:
  7248  000A86  FFFF               	dw	65535	; assembler added errata NOP
  7249  000A88  EF4B  F005         	goto	l2727
  7250  000A8C                     u2380:
  7251  000A8C  FFFF               	dw	65535	; assembler added errata NOP
  7252  000A8E  80D8               	bsf	status,0,c
  7253  000A90  3617               	rlcf	___fladd@grs^0,f,c
  7254  000A92  EF4E  F005         	goto	l2729
  7255  000A96                     l2727:
  7256  000A96  FFFF               	dw	65535	; assembler added errata NOP
  7257  000A98  90D8               	bcf	status,0,c
  7258  000A9A  3617               	rlcf	___fladd@grs^0,f,c
  7259  000A9C                     l2729:
  7260  000A9C  FFFF               	dw	65535	; assembler added errata NOP
  7261  000A9E  5016               	movf	___fladd@bexp^0,w,c
  7262  000AA0  B4D8               	btfsc	status,2,c
  7263  000AA2  EF55  F005         	goto	u2391
  7264  000AA6  EF58  F005         	goto	u2390
  7265  000AAA                     u2391:
  7266  000AAA  FFFF               	dw	65535	; assembler added errata NOP
  7267  000AAC  EF5A  F005         	goto	l2733
  7268  000AB0                     u2390:
  7269  000AB0  FFFF               	dw	65535	; assembler added errata NOP
  7270  000AB2  0616               	decf	___fladd@bexp^0,f,c
  7271  000AB4                     l2733:
  7272  000AB4  FFFF               	dw	65535	; assembler added errata NOP
  7273  000AB6  AE0A               	btfss	(___fladd@b+2)^0,7,c
  7274  000AB8  EF60  F005         	goto	u2401
  7275  000ABC  EF63  F005         	goto	u2400
  7276  000AC0                     u2401:
  7277  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  7278  000AC2  EF2D  F005         	goto	l2717
  7279  000AC6                     u2400:
  7280  000AC6                     l2735:
  7281  000AC6  FFFF               	dw	65535	; assembler added errata NOP
  7282  000AC8  0E00               	movlw	0
  7283  000ACA  6E15               	movwf	___fladd@aexp^0,c
  7284  000ACC  AE17               	btfss	___fladd@grs^0,7,c
  7285  000ACE  EF6B  F005         	goto	u2411
  7286  000AD2  EF6E  F005         	goto	u2410
  7287  000AD6                     u2411:
  7288  000AD6  FFFF               	dw	65535	; assembler added errata NOP
  7289  000AD8  EF8D  F005         	goto	l962
  7290  000ADC                     u2410:
  7291  000ADC  FFFF               	dw	65535	; assembler added errata NOP
  7292  000ADE  C017  F010         	movff	___fladd@grs,??___fladd
  7293  000AE2  0E7F               	movlw	127
  7294  000AE4  1610               	andwf	??___fladd^0,f,c
  7295  000AE6  B4D8               	btfsc	status,2,c
  7296  000AE8  EF78  F005         	goto	u2421
  7297  000AEC  EF7B  F005         	goto	u2420
  7298  000AF0                     u2421:
  7299  000AF0  FFFF               	dw	65535	; assembler added errata NOP
  7300  000AF2  EF81  F005         	goto	l963
  7301  000AF6                     u2420:
  7302  000AF6  FFFF               	dw	65535	; assembler added errata NOP
  7303  000AF8                     l2741:
  7304  000AF8  FFFF               	dw	65535	; assembler added errata NOP
  7305  000AFA  0E01               	movlw	1
  7306  000AFC  6E15               	movwf	___fladd@aexp^0,c
  7307  000AFE  EF8D  F005         	goto	l962
  7308  000B02                     l963:
  7309  000B02  FFFF               	dw	65535	; assembler added errata NOP
  7310  000B04  A008               	btfss	___fladd@b^0,0,c
  7311  000B06  EF87  F005         	goto	u2431
  7312  000B0A  EF8A  F005         	goto	u2430
  7313  000B0E                     u2431:
  7314  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  7315  000B10  EF8D  F005         	goto	l962
  7316  000B14                     u2430:
  7317  000B14  FFFF               	dw	65535	; assembler added errata NOP
  7318  000B16  EF7C  F005         	goto	l2741
  7319  000B1A                     l962:
  7320  000B1A  FFFF               	dw	65535	; assembler added errata NOP
  7321  000B1C  5015               	movf	___fladd@aexp^0,w,c
  7322  000B1E  B4D8               	btfsc	status,2,c
  7323  000B20  EF94  F005         	goto	u2441
  7324  000B24  EF97  F005         	goto	u2440
  7325  000B28                     u2441:
  7326  000B28  FFFF               	dw	65535	; assembler added errata NOP
  7327  000B2A  EFC7  F005         	goto	l2753
  7328  000B2E                     u2440:
  7329  000B2E  FFFF               	dw	65535	; assembler added errata NOP
  7330  000B30  0E01               	movlw	1
  7331  000B32  2608               	addwf	___fladd@b^0,f,c
  7332  000B34  0E00               	movlw	0
  7333  000B36  2209               	addwfc	(___fladd@b+1)^0,f,c
  7334  000B38  220A               	addwfc	(___fladd@b+2)^0,f,c
  7335  000B3A  220B               	addwfc	(___fladd@b+3)^0,f,c
  7336  000B3C  A00B               	btfss	(___fladd@b+3)^0,0,c
  7337  000B3E  EFA3  F005         	goto	u2451
  7338  000B42  EFA6  F005         	goto	u2450
  7339  000B46                     u2451:
  7340  000B46  FFFF               	dw	65535	; assembler added errata NOP
  7341  000B48  EFC7  F005         	goto	l2753
  7342  000B4C                     u2450:
  7343  000B4C  FFFF               	dw	65535	; assembler added errata NOP
  7344  000B4E  C008  F010         	movff	___fladd@b,??___fladd
  7345  000B52  C009  F011         	movff	___fladd@b+1,??___fladd+1
  7346  000B56  C00A  F012         	movff	___fladd@b+2,??___fladd+2
  7347  000B5A  C00B  F013         	movff	___fladd@b+3,??___fladd+3
  7348  000B5E  3413               	rlcf	(??___fladd+3)^0,w,c
  7349  000B60  3213               	rrcf	(??___fladd+3)^0,f,c
  7350  000B62  3212               	rrcf	(??___fladd+2)^0,f,c
  7351  000B64  3211               	rrcf	(??___fladd+1)^0,f,c
  7352  000B66  3210               	rrcf	??___fladd^0,f,c
  7353  000B68  C010  F008         	movff	??___fladd,___fladd@b
  7354  000B6C  C011  F009         	movff	??___fladd+1,___fladd@b+1
  7355  000B70  C012  F00A         	movff	??___fladd+2,___fladd@b+2
  7356  000B74  C013  F00B         	movff	??___fladd+3,___fladd@b+3
  7357  000B78  2816               	incf	___fladd@bexp^0,w,c
  7358  000B7A  B4D8               	btfsc	status,2,c
  7359  000B7C  EFC2  F005         	goto	u2461
  7360  000B80  EFC5  F005         	goto	u2460
  7361  000B84                     u2461:
  7362  000B84  FFFF               	dw	65535	; assembler added errata NOP
  7363  000B86  EFC7  F005         	goto	l2753
  7364  000B8A                     u2460:
  7365  000B8A  FFFF               	dw	65535	; assembler added errata NOP
  7366  000B8C  2A16               	incf	___fladd@bexp^0,f,c
  7367  000B8E                     l2753:
  7368  000B8E  FFFF               	dw	65535	; assembler added errata NOP
  7369  000B90  2816               	incf	___fladd@bexp^0,w,c
  7370  000B92  B4D8               	btfsc	status,2,c
  7371  000B94  EFCE  F005         	goto	u2471
  7372  000B98  EFD1  F005         	goto	u2470
  7373  000B9C                     u2471:
  7374  000B9C  FFFF               	dw	65535	; assembler added errata NOP
  7375  000B9E  EFDB  F005         	goto	l2757
  7376  000BA2                     u2470:
  7377  000BA2  FFFF               	dw	65535	; assembler added errata NOP
  7378  000BA4  5016               	movf	___fladd@bexp^0,w,c
  7379  000BA6  A4D8               	btfss	status,2,c
  7380  000BA8  EFD8  F005         	goto	u2481
  7381  000BAC  EFDB  F005         	goto	u2480
  7382  000BB0                     u2481:
  7383  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  7384  000BB2  EFF0  F005         	goto	l2761
  7385  000BB6                     u2480:
  7386  000BB6                     l2757:
  7387  000BB6  FFFF               	dw	65535	; assembler added errata NOP
  7388  000BB8  0E00               	movlw	0
  7389  000BBA  6E08               	movwf	___fladd@b^0,c
  7390  000BBC  0E00               	movlw	0
  7391  000BBE  6E09               	movwf	(___fladd@b+1)^0,c
  7392  000BC0  0E00               	movlw	0
  7393  000BC2  6E0A               	movwf	(___fladd@b+2)^0,c
  7394  000BC4  0E00               	movlw	0
  7395  000BC6  6E0B               	movwf	(___fladd@b+3)^0,c
  7396  000BC8  5016               	movf	___fladd@bexp^0,w,c
  7397  000BCA  A4D8               	btfss	status,2,c
  7398  000BCC  EFEA  F005         	goto	u2491
  7399  000BD0  EFED  F005         	goto	u2490
  7400  000BD4                     u2491:
  7401  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  7402  000BD6  EFF0  F005         	goto	l2761
  7403  000BDA                     u2490:
  7404  000BDA  FFFF               	dw	65535	; assembler added errata NOP
  7405  000BDC  0E00               	movlw	0
  7406  000BDE  6E14               	movwf	___fladd@signs^0,c
  7407  000BE0                     l2761:
  7408  000BE0  FFFF               	dw	65535	; assembler added errata NOP
  7409  000BE2  A016               	btfss	___fladd@bexp^0,0,c
  7410  000BE4  EFF6  F005         	goto	u2501
  7411  000BE8  EFF9  F005         	goto	u2500
  7412  000BEC                     u2501:
  7413  000BEC  FFFF               	dw	65535	; assembler added errata NOP
  7414  000BEE  EFFD  F005         	goto	l2765
  7415  000BF2                     u2500:
  7416  000BF2  FFFF               	dw	65535	; assembler added errata NOP
  7417  000BF4  8E0A               	bsf	(___fladd@b+2)^0,7,c
  7418  000BF6  EFFF  F005         	goto	l2767
  7419  000BFA                     l2765:
  7420  000BFA  FFFF               	dw	65535	; assembler added errata NOP
  7421  000BFC  9E0A               	bcf	(___fladd@b+2)^0,7,c
  7422  000BFE                     l2767:
  7423  000BFE  FFFF               	dw	65535	; assembler added errata NOP
  7424  000C00  90D8               	bcf	status,0,c
  7425  000C02  3016               	rrcf	___fladd@bexp^0,w,c
  7426  000C04  6E0B               	movwf	(___fladd@b+3)^0,c
  7427  000C06  AE14               	btfss	___fladd@signs^0,7,c
  7428  000C08  EF08  F006         	goto	u2511
  7429  000C0C  EF0B  F006         	goto	u2510
  7430  000C10                     u2511:
  7431  000C10  FFFF               	dw	65535	; assembler added errata NOP
  7432  000C12  EF0D  F006         	goto	l2773
  7433  000C16                     u2510:
  7434  000C16  FFFF               	dw	65535	; assembler added errata NOP
  7435  000C18  8E0B               	bsf	(___fladd@b+3)^0,7,c
  7436  000C1A                     l2773:
  7437  000C1A  FFFF               	dw	65535	; assembler added errata NOP
  7438  000C1C  C008  F008         	movff	___fladd@b,?___fladd
  7439  000C20  C009  F009         	movff	___fladd@b+1,?___fladd+1
  7440  000C24  C00A  F00A         	movff	___fladd@b+2,?___fladd+2
  7441  000C28  C00B  F00B         	movff	___fladd@b+3,?___fladd+3
  7442  000C2C                     l945:
  7443  000C2C  FFFF               	dw	65535	; assembler added errata NOP
  7444  000C2E  0012               	return		;funcret
  7445  000C30  FFFF               	dw	65535	; errata NOP
  7446  000C32                     __end_of___fladd:
  7447                           	callstack 0
  7448                           
  7449 ;; *************** function ___flneg *****************
  7450 ;; Defined at:
  7451 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  f1              4    7[COMRAM] unsigned char 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  4    7[COMRAM] unsigned char 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7465 ;;      Params:         4       0       0       0       0       0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0
  7468 ;;      Totals:         4       0       0       0       0       0       0
  7469 ;;Total ram usage:        4 bytes
  7470 ;; Hardware stack levels used: 1
  7471 ;; Hardware stack levels required when called: 1
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		_roundf
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text29
  7480  002D40                     __ptext29:
  7481                           	callstack 0
  7482  002D40                     ___flneg:
  7483                           	callstack 0
  7484  002D40  FFFF               	dw	65535	; assembler added errata NOP
  7485  002D42  5008               	movf	___flneg@f1^0,w,c
  7486  002D44  1009               	iorwf	(___flneg@f1+1)^0,w,c
  7487  002D46  100A               	iorwf	(___flneg@f1+2)^0,w,c
  7488  002D48  100B               	iorwf	(___flneg@f1+3)^0,w,c
  7489  002D4A  B4D8               	btfsc	status,2,c
  7490  002D4C  EFAA  F016         	goto	u3311
  7491  002D50  EFAD  F016         	goto	u3310
  7492  002D54                     u3311:
  7493  002D54  FFFF               	dw	65535	; assembler added errata NOP
  7494  002D56  EFB6  F016         	goto	l3325
  7495  002D5A                     u3310:
  7496  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  7497  002D5C  0E00               	movlw	0
  7498  002D5E  1A08               	xorwf	___flneg@f1^0,f,c
  7499  002D60  0E00               	movlw	0
  7500  002D62  1A09               	xorwf	(___flneg@f1+1)^0,f,c
  7501  002D64  0E00               	movlw	0
  7502  002D66  1A0A               	xorwf	(___flneg@f1+2)^0,f,c
  7503  002D68  0E80               	movlw	128
  7504  002D6A  1A0B               	xorwf	(___flneg@f1+3)^0,f,c
  7505  002D6C                     l3325:
  7506  002D6C  FFFF               	dw	65535	; assembler added errata NOP
  7507  002D6E  C008  F008         	movff	___flneg@f1,?___flneg
  7508  002D72  C009  F009         	movff	___flneg@f1+1,?___flneg+1
  7509  002D76  C00A  F00A         	movff	___flneg@f1+2,?___flneg+2
  7510  002D7A  C00B  F00B         	movff	___flneg@f1+3,?___flneg+3
  7511  002D7E  0012               	return		;funcret
  7512  002D80  FFFF               	dw	65535	; errata NOP
  7513  002D82                     __end_of___flneg:
  7514                           	callstack 0
  7515                           
  7516 ;; *************** function ___flmul *****************
  7517 ;; Defined at:
  7518 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  b               4    7[COMRAM] unsigned char 
  7521 ;;  a               4   11[COMRAM] unsigned char 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  prod            4   26[COMRAM] struct .
  7524 ;;  grs             4   20[COMRAM] unsigned long 
  7525 ;;  temp            2   30[COMRAM] struct .
  7526 ;;  bexp            1   25[COMRAM] unsigned char 
  7527 ;;  aexp            1   24[COMRAM] unsigned char 
  7528 ;;  sign            1   19[COMRAM] unsigned char 
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  4    7[COMRAM] unsigned char 
  7531 ;; Registers used:
  7532 ;;		wreg, status,2, status,0, prodl, prodh
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7538 ;;      Params:         8       0       0       0       0       0       0
  7539 ;;      Locals:        13       0       0       0       0       0       0
  7540 ;;      Temps:          4       0       0       0       0       0       0
  7541 ;;      Totals:        25       0       0       0       0       0       0
  7542 ;;Total ram usage:       25 bytes
  7543 ;; Hardware stack levels used: 1
  7544 ;; Hardware stack levels required when called: 1
  7545 ;; This function calls:
  7546 ;;		Nothing
  7547 ;; This function is called by:
  7548 ;;		_roundf
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text30
  7553  000C32                     __ptext30:
  7554                           	callstack 0
  7555  000C32                     ___flmul:
  7556                           	callstack 0
  7557  000C32  FFFF               	dw	65535	; assembler added errata NOP
  7558  000C34  500B               	movf	(___flmul@b+3)^0,w,c
  7559  000C36  0B80               	andlw	128
  7560  000C38  6E14               	movwf	___flmul@sign^0,c
  7561  000C3A  500B               	movf	(___flmul@b+3)^0,w,c
  7562  000C3C  240B               	addwf	(___flmul@b+3)^0,w,c
  7563  000C3E  6E1A               	movwf	___flmul@bexp^0,c
  7564  000C40  AE0A               	btfss	(___flmul@b+2)^0,7,c
  7565  000C42  EF25  F006         	goto	u3071
  7566  000C46  EF28  F006         	goto	u3070
  7567  000C4A                     u3071:
  7568  000C4A  FFFF               	dw	65535	; assembler added errata NOP
  7569  000C4C  EF2A  F006         	goto	l3169
  7570  000C50                     u3070:
  7571  000C50  FFFF               	dw	65535	; assembler added errata NOP
  7572  000C52  801A               	bsf	___flmul@bexp^0,0,c
  7573  000C54                     l3169:
  7574  000C54  FFFF               	dw	65535	; assembler added errata NOP
  7575  000C56  501A               	movf	___flmul@bexp^0,w,c
  7576  000C58  B4D8               	btfsc	status,2,c
  7577  000C5A  EF31  F006         	goto	u3081
  7578  000C5E  EF34  F006         	goto	u3080
  7579  000C62                     u3081:
  7580  000C62  FFFF               	dw	65535	; assembler added errata NOP
  7581  000C64  EF4B  F006         	goto	l3177
  7582  000C68                     u3080:
  7583  000C68  FFFF               	dw	65535	; assembler added errata NOP
  7584  000C6A  281A               	incf	___flmul@bexp^0,w,c
  7585  000C6C  A4D8               	btfss	status,2,c
  7586  000C6E  EF3B  F006         	goto	u3091
  7587  000C72  EF3E  F006         	goto	u3090
  7588  000C76                     u3091:
  7589  000C76  FFFF               	dw	65535	; assembler added errata NOP
  7590  000C78  EF47  F006         	goto	l3175
  7591  000C7C                     u3090:
  7592  000C7C  FFFF               	dw	65535	; assembler added errata NOP
  7593  000C7E  0E00               	movlw	0
  7594  000C80  6E08               	movwf	___flmul@b^0,c
  7595  000C82  0E00               	movlw	0
  7596  000C84  6E09               	movwf	(___flmul@b+1)^0,c
  7597  000C86  0E00               	movlw	0
  7598  000C88  6E0A               	movwf	(___flmul@b+2)^0,c
  7599  000C8A  0E00               	movlw	0
  7600  000C8C  6E0B               	movwf	(___flmul@b+3)^0,c
  7601  000C8E                     l3175:
  7602  000C8E  FFFF               	dw	65535	; assembler added errata NOP
  7603  000C90  8E0A               	bsf	(___flmul@b+2)^0,7,c
  7604  000C92  EF54  F006         	goto	l3179
  7605  000C96                     l3177:
  7606  000C96  FFFF               	dw	65535	; assembler added errata NOP
  7607  000C98  0E00               	movlw	0
  7608  000C9A  6E08               	movwf	___flmul@b^0,c
  7609  000C9C  0E00               	movlw	0
  7610  000C9E  6E09               	movwf	(___flmul@b+1)^0,c
  7611  000CA0  0E00               	movlw	0
  7612  000CA2  6E0A               	movwf	(___flmul@b+2)^0,c
  7613  000CA4  0E00               	movlw	0
  7614  000CA6  6E0B               	movwf	(___flmul@b+3)^0,c
  7615  000CA8                     l3179:
  7616  000CA8  FFFF               	dw	65535	; assembler added errata NOP
  7617  000CAA  500F               	movf	(___flmul@a+3)^0,w,c
  7618  000CAC  0B80               	andlw	128
  7619  000CAE  1A14               	xorwf	___flmul@sign^0,f,c
  7620  000CB0  500F               	movf	(___flmul@a+3)^0,w,c
  7621  000CB2  240F               	addwf	(___flmul@a+3)^0,w,c
  7622  000CB4  6E19               	movwf	___flmul@aexp^0,c
  7623  000CB6  AE0E               	btfss	(___flmul@a+2)^0,7,c
  7624  000CB8  EF60  F006         	goto	u3101
  7625  000CBC  EF63  F006         	goto	u3100
  7626  000CC0                     u3101:
  7627  000CC0  FFFF               	dw	65535	; assembler added errata NOP
  7628  000CC2  EF65  F006         	goto	l3187
  7629  000CC6                     u3100:
  7630  000CC6  FFFF               	dw	65535	; assembler added errata NOP
  7631  000CC8  8019               	bsf	___flmul@aexp^0,0,c
  7632  000CCA                     l3187:
  7633  000CCA  FFFF               	dw	65535	; assembler added errata NOP
  7634  000CCC  5019               	movf	___flmul@aexp^0,w,c
  7635  000CCE  B4D8               	btfsc	status,2,c
  7636  000CD0  EF6C  F006         	goto	u3111
  7637  000CD4  EF6F  F006         	goto	u3110
  7638  000CD8                     u3111:
  7639  000CD8  FFFF               	dw	65535	; assembler added errata NOP
  7640  000CDA  EF86  F006         	goto	l3195
  7641  000CDE                     u3110:
  7642  000CDE  FFFF               	dw	65535	; assembler added errata NOP
  7643  000CE0  2819               	incf	___flmul@aexp^0,w,c
  7644  000CE2  A4D8               	btfss	status,2,c
  7645  000CE4  EF76  F006         	goto	u3121
  7646  000CE8  EF79  F006         	goto	u3120
  7647  000CEC                     u3121:
  7648  000CEC  FFFF               	dw	65535	; assembler added errata NOP
  7649  000CEE  EF82  F006         	goto	l3193
  7650  000CF2                     u3120:
  7651  000CF2  FFFF               	dw	65535	; assembler added errata NOP
  7652  000CF4  0E00               	movlw	0
  7653  000CF6  6E0C               	movwf	___flmul@a^0,c
  7654  000CF8  0E00               	movlw	0
  7655  000CFA  6E0D               	movwf	(___flmul@a+1)^0,c
  7656  000CFC  0E00               	movlw	0
  7657  000CFE  6E0E               	movwf	(___flmul@a+2)^0,c
  7658  000D00  0E00               	movlw	0
  7659  000D02  6E0F               	movwf	(___flmul@a+3)^0,c
  7660  000D04                     l3193:
  7661  000D04  FFFF               	dw	65535	; assembler added errata NOP
  7662  000D06  8E0E               	bsf	(___flmul@a+2)^0,7,c
  7663  000D08  EF8F  F006         	goto	l1022
  7664  000D0C                     l3195:
  7665  000D0C  FFFF               	dw	65535	; assembler added errata NOP
  7666  000D0E  0E00               	movlw	0
  7667  000D10  6E0C               	movwf	___flmul@a^0,c
  7668  000D12  0E00               	movlw	0
  7669  000D14  6E0D               	movwf	(___flmul@a+1)^0,c
  7670  000D16  0E00               	movlw	0
  7671  000D18  6E0E               	movwf	(___flmul@a+2)^0,c
  7672  000D1A  0E00               	movlw	0
  7673  000D1C  6E0F               	movwf	(___flmul@a+3)^0,c
  7674  000D1E                     l1022:
  7675  000D1E  FFFF               	dw	65535	; assembler added errata NOP
  7676  000D20  5019               	movf	___flmul@aexp^0,w,c
  7677  000D22  B4D8               	btfsc	status,2,c
  7678  000D24  EF96  F006         	goto	u3131
  7679  000D28  EF99  F006         	goto	u3130
  7680  000D2C                     u3131:
  7681  000D2C  FFFF               	dw	65535	; assembler added errata NOP
  7682  000D2E  EFA3  F006         	goto	l3199
  7683  000D32                     u3130:
  7684  000D32  FFFF               	dw	65535	; assembler added errata NOP
  7685  000D34  501A               	movf	___flmul@bexp^0,w,c
  7686  000D36  A4D8               	btfss	status,2,c
  7687  000D38  EFA0  F006         	goto	u3141
  7688  000D3C  EFA3  F006         	goto	u3140
  7689  000D40                     u3141:
  7690  000D40  FFFF               	dw	65535	; assembler added errata NOP
  7691  000D42  EFAE  F006         	goto	l3203
  7692  000D46                     u3140:
  7693  000D46                     l3199:
  7694  000D46  FFFF               	dw	65535	; assembler added errata NOP
  7695  000D48  0E00               	movlw	0
  7696  000D4A  6E08               	movwf	?___flmul^0,c
  7697  000D4C  0E00               	movlw	0
  7698  000D4E  6E09               	movwf	(?___flmul+1)^0,c
  7699  000D50  0E00               	movlw	0
  7700  000D52  6E0A               	movwf	(?___flmul+2)^0,c
  7701  000D54  0E00               	movlw	0
  7702  000D56  6E0B               	movwf	(?___flmul+3)^0,c
  7703  000D58  EF68  F008         	goto	l1026
  7704  000D5C                     l3203:
  7705  000D5C  FFFF               	dw	65535	; assembler added errata NOP
  7706  000D5E  500E               	movf	(___flmul@a+2)^0,w,c
  7707  000D60  0208               	mulwf	___flmul@b^0,c
  7708  000D62  CFF3 F01F          	movff	prodl,___flmul@temp
  7709  000D66  CFF4 F020          	movff	prodh,___flmul@temp+1
  7710  000D6A  501F               	movf	___flmul@temp^0,w,c
  7711  000D6C  6E15               	movwf	___flmul@grs^0,c
  7712  000D6E  6A16               	clrf	(___flmul@grs+1)^0,c
  7713  000D70  6A17               	clrf	(___flmul@grs+2)^0,c
  7714  000D72  6A18               	clrf	(___flmul@grs+3)^0,c
  7715  000D74  5020               	movf	(___flmul@temp+1)^0,w,c
  7716  000D76  6E1B               	movwf	___flmul@prod^0,c
  7717  000D78  6A1C               	clrf	(___flmul@prod+1)^0,c
  7718  000D7A  6A1D               	clrf	(___flmul@prod+2)^0,c
  7719  000D7C  6A1E               	clrf	(___flmul@prod+3)^0,c
  7720  000D7E  500D               	movf	(___flmul@a+1)^0,w,c
  7721  000D80  0209               	mulwf	(___flmul@b+1)^0,c
  7722  000D82  CFF3 F01F          	movff	prodl,___flmul@temp
  7723  000D86  CFF4 F020          	movff	prodh,___flmul@temp+1
  7724  000D8A  501F               	movf	___flmul@temp^0,w,c
  7725  000D8C  2615               	addwf	___flmul@grs^0,f,c
  7726  000D8E  0E00               	movlw	0
  7727  000D90  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7728  000D92  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7729  000D94  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7730  000D96  5020               	movf	(___flmul@temp+1)^0,w,c
  7731  000D98  261B               	addwf	___flmul@prod^0,f,c
  7732  000D9A  0E00               	movlw	0
  7733  000D9C  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7734  000D9E  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7735  000DA0  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7736  000DA2  500C               	movf	___flmul@a^0,w,c
  7737  000DA4  020A               	mulwf	(___flmul@b+2)^0,c
  7738  000DA6  CFF3 F01F          	movff	prodl,___flmul@temp
  7739  000DAA  CFF4 F020          	movff	prodh,___flmul@temp+1
  7740  000DAE  501F               	movf	___flmul@temp^0,w,c
  7741  000DB0  2615               	addwf	___flmul@grs^0,f,c
  7742  000DB2  0E00               	movlw	0
  7743  000DB4  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7744  000DB6  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7745  000DB8  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7746  000DBA  5020               	movf	(___flmul@temp+1)^0,w,c
  7747  000DBC  261B               	addwf	___flmul@prod^0,f,c
  7748  000DBE  0E00               	movlw	0
  7749  000DC0  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7750  000DC2  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7751  000DC4  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7752  000DC6  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  7753  000DCA  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  7754  000DCE  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  7755  000DD2  6A15               	clrf	___flmul@grs^0,c
  7756  000DD4  500C               	movf	___flmul@a^0,w,c
  7757  000DD6  0209               	mulwf	(___flmul@b+1)^0,c
  7758  000DD8  CFF3 F01F          	movff	prodl,___flmul@temp
  7759  000DDC  CFF4 F020          	movff	prodh,___flmul@temp+1
  7760  000DE0  501F               	movf	___flmul@temp^0,w,c
  7761  000DE2  2615               	addwf	___flmul@grs^0,f,c
  7762  000DE4  5020               	movf	(___flmul@temp+1)^0,w,c
  7763  000DE6  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7764  000DE8  0E00               	movlw	0
  7765  000DEA  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7766  000DEC  0E00               	movlw	0
  7767  000DEE  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7768  000DF0  500D               	movf	(___flmul@a+1)^0,w,c
  7769  000DF2  0208               	mulwf	___flmul@b^0,c
  7770  000DF4  CFF3 F01F          	movff	prodl,___flmul@temp
  7771  000DF8  CFF4 F020          	movff	prodh,___flmul@temp+1
  7772  000DFC  501F               	movf	___flmul@temp^0,w,c
  7773  000DFE  2615               	addwf	___flmul@grs^0,f,c
  7774  000E00  5020               	movf	(___flmul@temp+1)^0,w,c
  7775  000E02  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7776  000E04  0E00               	movlw	0
  7777  000E06  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7778  000E08  0E00               	movlw	0
  7779  000E0A  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7780  000E0C  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  7781  000E10  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  7782  000E14  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  7783  000E18  6A15               	clrf	___flmul@grs^0,c
  7784  000E1A  500C               	movf	___flmul@a^0,w,c
  7785  000E1C  0208               	mulwf	___flmul@b^0,c
  7786  000E1E  CFF3 F01F          	movff	prodl,___flmul@temp
  7787  000E22  CFF4 F020          	movff	prodh,___flmul@temp+1
  7788  000E26  501F               	movf	___flmul@temp^0,w,c
  7789  000E28  2615               	addwf	___flmul@grs^0,f,c
  7790  000E2A  5020               	movf	(___flmul@temp+1)^0,w,c
  7791  000E2C  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7792  000E2E  0E00               	movlw	0
  7793  000E30  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7794  000E32  0E00               	movlw	0
  7795  000E34  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7796  000E36  500E               	movf	(___flmul@a+2)^0,w,c
  7797  000E38  0209               	mulwf	(___flmul@b+1)^0,c
  7798  000E3A  CFF3 F01F          	movff	prodl,___flmul@temp
  7799  000E3E  CFF4 F020          	movff	prodh,___flmul@temp+1
  7800  000E42  501F               	movf	___flmul@temp^0,w,c
  7801  000E44  261B               	addwf	___flmul@prod^0,f,c
  7802  000E46  5020               	movf	(___flmul@temp+1)^0,w,c
  7803  000E48  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7804  000E4A  0E00               	movlw	0
  7805  000E4C  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7806  000E4E  0E00               	movlw	0
  7807  000E50  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7808  000E52  500D               	movf	(___flmul@a+1)^0,w,c
  7809  000E54  020A               	mulwf	(___flmul@b+2)^0,c
  7810  000E56  CFF3 F01F          	movff	prodl,___flmul@temp
  7811  000E5A  CFF4 F020          	movff	prodh,___flmul@temp+1
  7812  000E5E  501F               	movf	___flmul@temp^0,w,c
  7813  000E60  261B               	addwf	___flmul@prod^0,f,c
  7814  000E62  5020               	movf	(___flmul@temp+1)^0,w,c
  7815  000E64  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7816  000E66  0E00               	movlw	0
  7817  000E68  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7818  000E6A  0E00               	movlw	0
  7819  000E6C  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7820  000E6E  500E               	movf	(___flmul@a+2)^0,w,c
  7821  000E70  020A               	mulwf	(___flmul@b+2)^0,c
  7822  000E72  CFF3 F01F          	movff	prodl,___flmul@temp
  7823  000E76  CFF4 F020          	movff	prodh,___flmul@temp+1
  7824  000E7A  501F               	movf	___flmul@temp^0,w,c
  7825  000E7C  6E10               	movwf	??___flmul^0,c
  7826  000E7E  5020               	movf	(___flmul@temp+1)^0,w,c
  7827  000E80  6E11               	movwf	(??___flmul+1)^0,c
  7828  000E82  6A12               	clrf	(??___flmul+2)^0,c
  7829  000E84  6A13               	clrf	(??___flmul+3)^0,c
  7830  000E86  C012  F013         	movff	??___flmul+2,??___flmul+3
  7831  000E8A  C011  F012         	movff	??___flmul+1,??___flmul+2
  7832  000E8E  C010  F011         	movff	??___flmul,??___flmul+1
  7833  000E92  6A10               	clrf	??___flmul^0,c
  7834  000E94  5010               	movf	??___flmul^0,w,c
  7835  000E96  261B               	addwf	___flmul@prod^0,f,c
  7836  000E98  5011               	movf	(??___flmul+1)^0,w,c
  7837  000E9A  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7838  000E9C  5012               	movf	(??___flmul+2)^0,w,c
  7839  000E9E  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7840  000EA0  5013               	movf	(??___flmul+3)^0,w,c
  7841  000EA2  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7842  000EA4  C015  F010         	movff	___flmul@grs,??___flmul
  7843  000EA8  C016  F011         	movff	___flmul@grs+1,??___flmul+1
  7844  000EAC  C017  F012         	movff	___flmul@grs+2,??___flmul+2
  7845  000EB0  C018  F013         	movff	___flmul@grs+3,??___flmul+3
  7846  000EB4  0E19               	movlw	25
  7847  000EB6  EF63  F007         	goto	u3150
  7848  000EBA                     u3155:
  7849  000EBA  FFFF               	dw	65535	; assembler added errata NOP
  7850  000EBC  90D8               	bcf	status,0,c
  7851  000EBE  3213               	rrcf	(??___flmul+3)^0,f,c
  7852  000EC0  3212               	rrcf	(??___flmul+2)^0,f,c
  7853  000EC2  3211               	rrcf	(??___flmul+1)^0,f,c
  7854  000EC4  3210               	rrcf	??___flmul^0,f,c
  7855  000EC6                     u3150:
  7856  000EC6  FFFF               	dw	65535	; assembler added errata NOP
  7857  000EC8  2EE8               	decfsz	wreg,f,c
  7858  000ECA  EF5D  F007         	goto	u3155
  7859  000ECE  5010               	movf	??___flmul^0,w,c
  7860  000ED0  261B               	addwf	___flmul@prod^0,f,c
  7861  000ED2  5011               	movf	(??___flmul+1)^0,w,c
  7862  000ED4  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7863  000ED6  5012               	movf	(??___flmul+2)^0,w,c
  7864  000ED8  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7865  000EDA  5013               	movf	(??___flmul+3)^0,w,c
  7866  000EDC  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7867  000EDE  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  7868  000EE2  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  7869  000EE6  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  7870  000EEA  6A15               	clrf	___flmul@grs^0,c
  7871  000EEC  5019               	movf	___flmul@aexp^0,w,c
  7872  000EEE  C01A  F010         	movff	___flmul@bexp,??___flmul
  7873  000EF2  6A11               	clrf	(??___flmul+1)^0,c
  7874  000EF4  2610               	addwf	??___flmul^0,f,c
  7875  000EF6  0E00               	movlw	0
  7876  000EF8  2211               	addwfc	(??___flmul+1)^0,f,c
  7877  000EFA  0E82               	movlw	130
  7878  000EFC  2410               	addwf	??___flmul^0,w,c
  7879  000EFE  6E1F               	movwf	___flmul@temp^0,c
  7880  000F00  0EFF               	movlw	255
  7881  000F02  2011               	addwfc	(??___flmul+1)^0,w,c
  7882  000F04  6E20               	movwf	(___flmul@temp+1)^0,c
  7883  000F06  EF9E  F007         	goto	l3251
  7884  000F0A                     l3245:
  7885  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  7886  000F0C  90D8               	bcf	status,0,c
  7887  000F0E  361B               	rlcf	___flmul@prod^0,f,c
  7888  000F10  361C               	rlcf	(___flmul@prod+1)^0,f,c
  7889  000F12  361D               	rlcf	(___flmul@prod+2)^0,f,c
  7890  000F14  361E               	rlcf	(___flmul@prod+3)^0,f,c
  7891  000F16  AE18               	btfss	(___flmul@grs+3)^0,7,c
  7892  000F18  EF90  F007         	goto	u3161
  7893  000F1C  EF93  F007         	goto	u3160
  7894  000F20                     u3161:
  7895  000F20  FFFF               	dw	65535	; assembler added errata NOP
  7896  000F22  EF95  F007         	goto	l1029
  7897  000F26                     u3160:
  7898  000F26  FFFF               	dw	65535	; assembler added errata NOP
  7899  000F28  801B               	bsf	___flmul@prod^0,0,c
  7900  000F2A                     l1029:
  7901  000F2A  FFFF               	dw	65535	; assembler added errata NOP
  7902  000F2C  90D8               	bcf	status,0,c
  7903  000F2E  3615               	rlcf	___flmul@grs^0,f,c
  7904  000F30  3616               	rlcf	(___flmul@grs+1)^0,f,c
  7905  000F32  3617               	rlcf	(___flmul@grs+2)^0,f,c
  7906  000F34  3618               	rlcf	(___flmul@grs+3)^0,f,c
  7907  000F36  061F               	decf	___flmul@temp^0,f,c
  7908  000F38  A0D8               	btfss	status,0,c
  7909  000F3A  0620               	decf	(___flmul@temp+1)^0,f,c
  7910  000F3C                     l3251:
  7911  000F3C  FFFF               	dw	65535	; assembler added errata NOP
  7912  000F3E  AE1D               	btfss	(___flmul@prod+2)^0,7,c
  7913  000F40  EFA4  F007         	goto	u3171
  7914  000F44  EFA7  F007         	goto	u3170
  7915  000F48                     u3171:
  7916  000F48  FFFF               	dw	65535	; assembler added errata NOP
  7917  000F4A  EF85  F007         	goto	l3245
  7918  000F4E                     u3170:
  7919  000F4E  FFFF               	dw	65535	; assembler added errata NOP
  7920  000F50  0E00               	movlw	0
  7921  000F52  6E19               	movwf	___flmul@aexp^0,c
  7922  000F54  AE18               	btfss	(___flmul@grs+3)^0,7,c
  7923  000F56  EFAF  F007         	goto	u3181
  7924  000F5A  EFB2  F007         	goto	u3180
  7925  000F5E                     u3181:
  7926  000F5E  FFFF               	dw	65535	; assembler added errata NOP
  7927  000F60  EFDD  F007         	goto	l1031
  7928  000F64                     u3180:
  7929  000F64  FFFF               	dw	65535	; assembler added errata NOP
  7930  000F66  0EFF               	movlw	255
  7931  000F68  1415               	andwf	___flmul@grs^0,w,c
  7932  000F6A  6E10               	movwf	??___flmul^0,c
  7933  000F6C  0EFF               	movlw	255
  7934  000F6E  1416               	andwf	(___flmul@grs+1)^0,w,c
  7935  000F70  6E11               	movwf	(??___flmul+1)^0,c
  7936  000F72  0EFF               	movlw	255
  7937  000F74  1417               	andwf	(___flmul@grs+2)^0,w,c
  7938  000F76  6E12               	movwf	(??___flmul+2)^0,c
  7939  000F78  0E7F               	movlw	127
  7940  000F7A  1418               	andwf	(___flmul@grs+3)^0,w,c
  7941  000F7C  6E13               	movwf	(??___flmul+3)^0,c
  7942  000F7E  5010               	movf	??___flmul^0,w,c
  7943  000F80  1011               	iorwf	(??___flmul+1)^0,w,c
  7944  000F82  1012               	iorwf	(??___flmul+2)^0,w,c
  7945  000F84  1013               	iorwf	(??___flmul+3)^0,w,c
  7946  000F86  B4D8               	btfsc	status,2,c
  7947  000F88  EFC8  F007         	goto	u3191
  7948  000F8C  EFCB  F007         	goto	u3190
  7949  000F90                     u3191:
  7950  000F90  FFFF               	dw	65535	; assembler added errata NOP
  7951  000F92  EFD1  F007         	goto	l1032
  7952  000F96                     u3190:
  7953  000F96  FFFF               	dw	65535	; assembler added errata NOP
  7954  000F98                     l3259:
  7955  000F98  FFFF               	dw	65535	; assembler added errata NOP
  7956  000F9A  0E01               	movlw	1
  7957  000F9C  6E19               	movwf	___flmul@aexp^0,c
  7958  000F9E  EFDD  F007         	goto	l1031
  7959  000FA2                     l1032:
  7960  000FA2  FFFF               	dw	65535	; assembler added errata NOP
  7961  000FA4  A01B               	btfss	___flmul@prod^0,0,c
  7962  000FA6  EFD7  F007         	goto	u3201
  7963  000FAA  EFDA  F007         	goto	u3200
  7964  000FAE                     u3201:
  7965  000FAE  FFFF               	dw	65535	; assembler added errata NOP
  7966  000FB0  EFDD  F007         	goto	l1031
  7967  000FB4                     u3200:
  7968  000FB4  FFFF               	dw	65535	; assembler added errata NOP
  7969  000FB6  EFCC  F007         	goto	l3259
  7970  000FBA                     l1031:
  7971  000FBA  FFFF               	dw	65535	; assembler added errata NOP
  7972  000FBC  5019               	movf	___flmul@aexp^0,w,c
  7973  000FBE  B4D8               	btfsc	status,2,c
  7974  000FC0  EFE4  F007         	goto	u3211
  7975  000FC4  EFE7  F007         	goto	u3210
  7976  000FC8                     u3211:
  7977  000FC8  FFFF               	dw	65535	; assembler added errata NOP
  7978  000FCA  EF0E  F008         	goto	l3271
  7979  000FCE                     u3210:
  7980  000FCE  FFFF               	dw	65535	; assembler added errata NOP
  7981  000FD0  0E01               	movlw	1
  7982  000FD2  261B               	addwf	___flmul@prod^0,f,c
  7983  000FD4  0E00               	movlw	0
  7984  000FD6  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7985  000FD8  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7986  000FDA  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7987  000FDC  A01E               	btfss	(___flmul@prod+3)^0,0,c
  7988  000FDE  EFF3  F007         	goto	u3221
  7989  000FE2  EFF6  F007         	goto	u3220
  7990  000FE6                     u3221:
  7991  000FE6  FFFF               	dw	65535	; assembler added errata NOP
  7992  000FE8  EF0E  F008         	goto	l3271
  7993  000FEC                     u3220:
  7994  000FEC  FFFF               	dw	65535	; assembler added errata NOP
  7995  000FEE  C01B  F010         	movff	___flmul@prod,??___flmul
  7996  000FF2  C01C  F011         	movff	___flmul@prod+1,??___flmul+1
  7997  000FF6  C01D  F012         	movff	___flmul@prod+2,??___flmul+2
  7998  000FFA  C01E  F013         	movff	___flmul@prod+3,??___flmul+3
  7999  000FFE  3413               	rlcf	(??___flmul+3)^0,w,c
  8000  001000  3213               	rrcf	(??___flmul+3)^0,f,c
  8001  001002  3212               	rrcf	(??___flmul+2)^0,f,c
  8002  001004  3211               	rrcf	(??___flmul+1)^0,f,c
  8003  001006  3210               	rrcf	??___flmul^0,f,c
  8004  001008  C010  F01B         	movff	??___flmul,___flmul@prod
  8005  00100C  C011  F01C         	movff	??___flmul+1,___flmul@prod+1
  8006  001010  C012  F01D         	movff	??___flmul+2,___flmul@prod+2
  8007  001014  C013  F01E         	movff	??___flmul+3,___flmul@prod+3
  8008  001018  4A1F               	infsnz	___flmul@temp^0,f,c
  8009  00101A  2A20               	incf	(___flmul@temp+1)^0,f,c
  8010  00101C                     l3271:
  8011  00101C  FFFF               	dw	65535	; assembler added errata NOP
  8012  00101E  BE20               	btfsc	(___flmul@temp+1)^0,7,c
  8013  001020  EF1A  F008         	goto	u3231
  8014  001024  5020               	movf	(___flmul@temp+1)^0,w,c
  8015  001026  E109               	bnz	u3230
  8016  001028  281F               	incf	___flmul@temp^0,w,c
  8017  00102A  A0D8               	btfss	status,0,c
  8018  00102C  EF1A  F008         	goto	u3231
  8019  001030  EF1D  F008         	goto	u3230
  8020  001034                     u3231:
  8021  001034  FFFF               	dw	65535	; assembler added errata NOP
  8022  001036  EF28  F008         	goto	l3275
  8023  00103A                     u3230:
  8024  00103A  FFFF               	dw	65535	; assembler added errata NOP
  8025  00103C  0E00               	movlw	0
  8026  00103E  6E1B               	movwf	___flmul@prod^0,c
  8027  001040  0E00               	movlw	0
  8028  001042  6E1C               	movwf	(___flmul@prod+1)^0,c
  8029  001044  0E80               	movlw	128
  8030  001046  6E1D               	movwf	(___flmul@prod+2)^0,c
  8031  001048  0E7F               	movlw	127
  8032  00104A  6E1E               	movwf	(___flmul@prod+3)^0,c
  8033  00104C  EF5D  F008         	goto	l3287
  8034  001050                     l3275:
  8035  001050  FFFF               	dw	65535	; assembler added errata NOP
  8036  001052  BE20               	btfsc	(___flmul@temp+1)^0,7,c
  8037  001054  EF37  F008         	goto	u3240
  8038  001058  5020               	movf	(___flmul@temp+1)^0,w,c
  8039  00105A  E106               	bnz	u3241
  8040  00105C  041F               	decf	___flmul@temp^0,w,c
  8041  00105E  B0D8               	btfsc	status,0,c
  8042  001060  EF34  F008         	goto	u3241
  8043  001064  EF37  F008         	goto	u3240
  8044  001068                     u3241:
  8045  001068  FFFF               	dw	65535	; assembler added errata NOP
  8046  00106A  EF44  F008         	goto	l1039
  8047  00106E                     u3240:
  8048  00106E  FFFF               	dw	65535	; assembler added errata NOP
  8049  001070  0E00               	movlw	0
  8050  001072  6E1B               	movwf	___flmul@prod^0,c
  8051  001074  0E00               	movlw	0
  8052  001076  6E1C               	movwf	(___flmul@prod+1)^0,c
  8053  001078  0E00               	movlw	0
  8054  00107A  6E1D               	movwf	(___flmul@prod+2)^0,c
  8055  00107C  0E00               	movlw	0
  8056  00107E  6E1E               	movwf	(___flmul@prod+3)^0,c
  8057  001080  0E00               	movlw	0
  8058  001082  6E14               	movwf	___flmul@sign^0,c
  8059  001084  EF5D  F008         	goto	l3287
  8060  001088                     l1039:
  8061  001088  FFFF               	dw	65535	; assembler added errata NOP
  8062  00108A  C01F  F01A         	movff	___flmul@temp,___flmul@bexp
  8063  00108E  0EFF               	movlw	255
  8064  001090  161B               	andwf	___flmul@prod^0,f,c
  8065  001092  0EFF               	movlw	255
  8066  001094  161C               	andwf	(___flmul@prod+1)^0,f,c
  8067  001096  0E7F               	movlw	127
  8068  001098  161D               	andwf	(___flmul@prod+2)^0,f,c
  8069  00109A  0E00               	movlw	0
  8070  00109C  161E               	andwf	(___flmul@prod+3)^0,f,c
  8071  00109E  A01A               	btfss	___flmul@bexp^0,0,c
  8072  0010A0  EF54  F008         	goto	u3251
  8073  0010A4  EF57  F008         	goto	u3250
  8074  0010A8                     u3251:
  8075  0010A8  FFFF               	dw	65535	; assembler added errata NOP
  8076  0010AA  EF59  F008         	goto	l3285
  8077  0010AE                     u3250:
  8078  0010AE  FFFF               	dw	65535	; assembler added errata NOP
  8079  0010B0  8E1D               	bsf	(___flmul@prod+2)^0,7,c
  8080  0010B2                     l3285:
  8081  0010B2  FFFF               	dw	65535	; assembler added errata NOP
  8082  0010B4  90D8               	bcf	status,0,c
  8083  0010B6  301A               	rrcf	___flmul@bexp^0,w,c
  8084  0010B8  6E1E               	movwf	(___flmul@prod+3)^0,c
  8085  0010BA                     l3287:
  8086  0010BA  FFFF               	dw	65535	; assembler added errata NOP
  8087  0010BC  5014               	movf	___flmul@sign^0,w,c
  8088  0010BE  121E               	iorwf	(___flmul@prod+3)^0,f,c
  8089  0010C0  C01B  F008         	movff	___flmul@prod,?___flmul
  8090  0010C4  C01C  F009         	movff	___flmul@prod+1,?___flmul+1
  8091  0010C8  C01D  F00A         	movff	___flmul@prod+2,?___flmul+2
  8092  0010CC  C01E  F00B         	movff	___flmul@prod+3,?___flmul+3
  8093  0010D0                     l1026:
  8094  0010D0  FFFF               	dw	65535	; assembler added errata NOP
  8095  0010D2  0012               	return		;funcret
  8096  0010D4  FFFF               	dw	65535	; errata NOP
  8097  0010D6                     __end_of___flmul:
  8098                           	callstack 0
  8099                           
  8100 ;; *************** function ___flge *****************
  8101 ;; Defined at:
  8102 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  ff1             4   46[COMRAM] unsigned char 
  8105 ;;  ff2             4   50[COMRAM] unsigned char 
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;		None
  8108 ;; Return value:  Size  Location     Type
  8109 ;;		None               void
  8110 ;; Registers used:
  8111 ;;		wreg, status,2, status,0
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8117 ;;      Params:         8       0       0       0       0       0       0
  8118 ;;      Locals:         0       0       0       0       0       0       0
  8119 ;;      Temps:          4       0       0       0       0       0       0
  8120 ;;      Totals:        12       0       0       0       0       0       0
  8121 ;;Total ram usage:       12 bytes
  8122 ;; Hardware stack levels used: 1
  8123 ;; Hardware stack levels required when called: 1
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_pick_and_place
  8128 ;;		_roundf
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text31
  8133  002324                     __ptext31:
  8134                           	callstack 0
  8135  002324                     ___flge:
  8136                           	callstack 0
  8137  002324  FFFF               	dw	65535	; assembler added errata NOP
  8138  002326  0E00               	movlw	0
  8139  002328  142F               	andwf	___flge@ff1^0,w,c
  8140  00232A  6E37               	movwf	??___flge^0,c
  8141  00232C  0E00               	movlw	0
  8142  00232E  1430               	andwf	(___flge@ff1+1)^0,w,c
  8143  002330  6E38               	movwf	(??___flge+1)^0,c
  8144  002332  0E80               	movlw	128
  8145  002334  1431               	andwf	(___flge@ff1+2)^0,w,c
  8146  002336  6E39               	movwf	(??___flge+2)^0,c
  8147  002338  0E7F               	movlw	127
  8148  00233A  1432               	andwf	(___flge@ff1+3)^0,w,c
  8149  00233C  6E3A               	movwf	(??___flge+3)^0,c
  8150  00233E  5037               	movf	??___flge^0,w,c
  8151  002340  1038               	iorwf	(??___flge+1)^0,w,c
  8152  002342  1039               	iorwf	(??___flge+2)^0,w,c
  8153  002344  103A               	iorwf	(??___flge+3)^0,w,c
  8154  002346  A4D8               	btfss	status,2,c
  8155  002348  EFA8  F011         	goto	u4731
  8156  00234C  EFAB  F011         	goto	u4730
  8157  002350                     u4731:
  8158  002350  FFFF               	dw	65535	; assembler added errata NOP
  8159  002352  EFB4  F011         	goto	l4307
  8160  002356                     u4730:
  8161  002356  FFFF               	dw	65535	; assembler added errata NOP
  8162  002358  0E00               	movlw	0
  8163  00235A  6E2F               	movwf	___flge@ff1^0,c
  8164  00235C  0E00               	movlw	0
  8165  00235E  6E30               	movwf	(___flge@ff1+1)^0,c
  8166  002360  0E00               	movlw	0
  8167  002362  6E31               	movwf	(___flge@ff1+2)^0,c
  8168  002364  0E00               	movlw	0
  8169  002366  6E32               	movwf	(___flge@ff1+3)^0,c
  8170  002368                     l4307:
  8171  002368  FFFF               	dw	65535	; assembler added errata NOP
  8172  00236A  0E00               	movlw	0
  8173  00236C  1433               	andwf	___flge@ff2^0,w,c
  8174  00236E  6E37               	movwf	??___flge^0,c
  8175  002370  0E00               	movlw	0
  8176  002372  1434               	andwf	(___flge@ff2+1)^0,w,c
  8177  002374  6E38               	movwf	(??___flge+1)^0,c
  8178  002376  0E80               	movlw	128
  8179  002378  1435               	andwf	(___flge@ff2+2)^0,w,c
  8180  00237A  6E39               	movwf	(??___flge+2)^0,c
  8181  00237C  0E7F               	movlw	127
  8182  00237E  1436               	andwf	(___flge@ff2+3)^0,w,c
  8183  002380  6E3A               	movwf	(??___flge+3)^0,c
  8184  002382  5037               	movf	??___flge^0,w,c
  8185  002384  1038               	iorwf	(??___flge+1)^0,w,c
  8186  002386  1039               	iorwf	(??___flge+2)^0,w,c
  8187  002388  103A               	iorwf	(??___flge+3)^0,w,c
  8188  00238A  A4D8               	btfss	status,2,c
  8189  00238C  EFCA  F011         	goto	u4741
  8190  002390  EFCD  F011         	goto	u4740
  8191  002394                     u4741:
  8192  002394  FFFF               	dw	65535	; assembler added errata NOP
  8193  002396  EFD6  F011         	goto	l4311
  8194  00239A                     u4740:
  8195  00239A  FFFF               	dw	65535	; assembler added errata NOP
  8196  00239C  0E00               	movlw	0
  8197  00239E  6E33               	movwf	___flge@ff2^0,c
  8198  0023A0  0E00               	movlw	0
  8199  0023A2  6E34               	movwf	(___flge@ff2+1)^0,c
  8200  0023A4  0E00               	movlw	0
  8201  0023A6  6E35               	movwf	(___flge@ff2+2)^0,c
  8202  0023A8  0E00               	movlw	0
  8203  0023AA  6E36               	movwf	(___flge@ff2+3)^0,c
  8204  0023AC                     l4311:
  8205  0023AC  FFFF               	dw	65535	; assembler added errata NOP
  8206  0023AE  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8207  0023B0  EFDC  F011         	goto	u4751
  8208  0023B4  EFDF  F011         	goto	u4750
  8209  0023B8                     u4751:
  8210  0023B8  FFFF               	dw	65535	; assembler added errata NOP
  8211  0023BA  EFE9  F011         	goto	l4315
  8212  0023BE                     u4750:
  8213  0023BE  FFFF               	dw	65535	; assembler added errata NOP
  8214  0023C0  6C2F               	negf	___flge@ff1^0,c
  8215  0023C2  1E30               	comf	(___flge@ff1+1)^0,f,c
  8216  0023C4  B0D8               	btfsc	status,0,c
  8217  0023C6  2A30               	incf	(___flge@ff1+1)^0,f,c
  8218  0023C8  1E31               	comf	(___flge@ff1+2)^0,f,c
  8219  0023CA  B0D8               	btfsc	status,0,c
  8220  0023CC  2A31               	incf	(___flge@ff1+2)^0,f,c
  8221  0023CE  0E80               	movlw	128
  8222  0023D0  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8223  0023D2                     l4315:
  8224  0023D2  FFFF               	dw	65535	; assembler added errata NOP
  8225  0023D4  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8226  0023D6  EFEF  F011         	goto	u4761
  8227  0023DA  EFF2  F011         	goto	u4760
  8228  0023DE                     u4761:
  8229  0023DE  FFFF               	dw	65535	; assembler added errata NOP
  8230  0023E0  EFFC  F011         	goto	l673
  8231  0023E4                     u4760:
  8232  0023E4  FFFF               	dw	65535	; assembler added errata NOP
  8233  0023E6  6C33               	negf	___flge@ff2^0,c
  8234  0023E8  1E34               	comf	(___flge@ff2+1)^0,f,c
  8235  0023EA  B0D8               	btfsc	status,0,c
  8236  0023EC  2A34               	incf	(___flge@ff2+1)^0,f,c
  8237  0023EE  1E35               	comf	(___flge@ff2+2)^0,f,c
  8238  0023F0  B0D8               	btfsc	status,0,c
  8239  0023F2  2A35               	incf	(___flge@ff2+2)^0,f,c
  8240  0023F4  0E80               	movlw	128
  8241  0023F6  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8242  0023F8                     l673:
  8243  0023F8  FFFF               	dw	65535	; assembler added errata NOP
  8244  0023FA  0E00               	movlw	0
  8245  0023FC  1A2F               	xorwf	___flge@ff1^0,f,c
  8246  0023FE  0E00               	movlw	0
  8247  002400  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8248  002402  0E00               	movlw	0
  8249  002404  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8250  002406  0E80               	movlw	128
  8251  002408  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8252  00240A  0E00               	movlw	0
  8253  00240C  1A33               	xorwf	___flge@ff2^0,f,c
  8254  00240E  0E00               	movlw	0
  8255  002410  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8256  002412  0E00               	movlw	0
  8257  002414  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8258  002416  0E80               	movlw	128
  8259  002418  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8260  00241A  5033               	movf	___flge@ff2^0,w,c
  8261  00241C  5C2F               	subwf	___flge@ff1^0,w,c
  8262  00241E  5034               	movf	(___flge@ff2+1)^0,w,c
  8263  002420  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8264  002422  5035               	movf	(___flge@ff2+2)^0,w,c
  8265  002424  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8266  002426  5036               	movf	(___flge@ff2+3)^0,w,c
  8267  002428  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8268  00242A  B0D8               	btfsc	status,0,c
  8269  00242C  EF1A  F012         	goto	u4771
  8270  002430  EF1D  F012         	goto	u4770
  8271  002434                     u4771:
  8272  002434  FFFF               	dw	65535	; assembler added errata NOP
  8273  002436  EF21  F012         	goto	l4321
  8274  00243A                     u4770:
  8275  00243A  FFFF               	dw	65535	; assembler added errata NOP
  8276  00243C  90D8               	bcf	status,0,c
  8277  00243E  EF23  F012         	goto	l678
  8278  002442                     l4321:
  8279  002442  FFFF               	dw	65535	; assembler added errata NOP
  8280  002444  80D8               	bsf	status,0,c
  8281  002446                     l678:
  8282  002446  FFFF               	dw	65535	; assembler added errata NOP
  8283  002448  0012               	return		;funcret
  8284  00244A  FFFF               	dw	65535	; errata NOP
  8285  00244C                     __end_of___flge:
  8286                           	callstack 0
  8287                           
  8288 ;; *************** function ___fltol *****************
  8289 ;; Defined at:
  8290 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  f1              4    0[BANK0 ] unsigned char 
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;  exp1            1   85[COMRAM] unsigned char 
  8295 ;;  sign1           1   84[COMRAM] unsigned char 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  4    0[BANK0 ] long 
  8298 ;; Registers used:
  8299 ;;		wreg, status,2, status,0
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8305 ;;      Params:         0       4       0       0       0       0       0
  8306 ;;      Locals:         2       0       0       0       0       0       0
  8307 ;;      Temps:          0       4       0       0       0       0       0
  8308 ;;      Totals:         2       8       0       0       0       0       0
  8309 ;;Total ram usage:       10 bytes
  8310 ;; Hardware stack levels used: 1
  8311 ;; Hardware stack levels required when called: 1
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_init_USART
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text32
  8320  0021EC                     __ptext32:
  8321                           	callstack 0
  8322  0021EC                     ___fltol:
  8323                           	callstack 0
  8324  0021EC  FFFF               	dw	65535	; assembler added errata NOP
  8325  0021EE  0100               	movlb	0	; () banked
  8326  0021F0  35CA               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8327  0021F2  35CB               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8328  0021F4  6E56               	movwf	___fltol@exp1^0,c
  8329  0021F6  5056               	movf	___fltol@exp1^0,w,c
  8330  0021F8  A4D8               	btfss	status,2,c
  8331  0021FA  EF01  F011         	goto	u5271
  8332  0021FE  EF04  F011         	goto	u5270
  8333  002202                     u5271:
  8334  002202  FFFF               	dw	65535	; assembler added errata NOP
  8335  002204  EF10  F011         	goto	l4609
  8336  002208                     u5270:
  8337  002208  FFFF               	dw	65535	; assembler added errata NOP
  8338  00220A                     l4605:
  8339  00220A  FFFF               	dw	65535	; assembler added errata NOP
  8340                           
  8341                           ; BSR set to: 0
  8342  00220C  0E00               	movlw	0
  8343  00220E  6FC8               	movwf	?___fltol& (0+255),b
  8344  002210  0E00               	movlw	0
  8345  002212  6FC9               	movwf	(?___fltol+1)& (0+255),b
  8346  002214  0E00               	movlw	0
  8347  002216  6FCA               	movwf	(?___fltol+2)& (0+255),b
  8348  002218  0E00               	movlw	0
  8349  00221A  6FCB               	movwf	(?___fltol+3)& (0+255),b
  8350  00221C  EF8F  F011         	goto	l705
  8351  002220                     l4609:
  8352  002220  FFFF               	dw	65535	; assembler added errata NOP
  8353                           
  8354                           ; BSR set to: 0
  8355  002222  C0C8  F0CC         	movff	___fltol@f1,??___fltol
  8356  002226  C0C9  F0CD         	movff	___fltol@f1+1,??___fltol+1
  8357  00222A  C0CA  F0CE         	movff	___fltol@f1+2,??___fltol+2
  8358  00222E  C0CB  F0CF         	movff	___fltol@f1+3,??___fltol+3
  8359  002232  0E20               	movlw	32
  8360  002234  EF22  F011         	goto	u5280
  8361  002238                     u5285:
  8362  002238  FFFF               	dw	65535	; assembler added errata NOP
  8363  00223A  90D8               	bcf	status,0,c
  8364  00223C  33CF               	rrcf	(??___fltol+3)& (0+255),f,b
  8365  00223E  33CE               	rrcf	(??___fltol+2)& (0+255),f,b
  8366  002240  33CD               	rrcf	(??___fltol+1)& (0+255),f,b
  8367  002242  33CC               	rrcf	??___fltol& (0+255),f,b
  8368  002244                     u5280:
  8369  002244  FFFF               	dw	65535	; assembler added errata NOP
  8370  002246  2EE8               	decfsz	wreg,f,c
  8371  002248  EF1C  F011         	goto	u5285
  8372  00224C  51CC               	movf	??___fltol& (0+255),w,b
  8373  00224E  6E55               	movwf	___fltol@sign1^0,c
  8374  002250                     
  8375                           ; BSR set to: 0
  8376  002250  8FCA               	bsf	(___fltol@f1+2)& (0+255),7,b
  8377  002252                     
  8378                           ; BSR set to: 0
  8379  002252  0EFF               	movlw	255
  8380  002254  17C8               	andwf	___fltol@f1& (0+255),f,b
  8381  002256  0EFF               	movlw	255
  8382  002258  17C9               	andwf	(___fltol@f1+1)& (0+255),f,b
  8383  00225A  0EFF               	movlw	255
  8384  00225C  17CA               	andwf	(___fltol@f1+2)& (0+255),f,b
  8385  00225E  0E00               	movlw	0
  8386  002260  17CB               	andwf	(___fltol@f1+3)& (0+255),f,b
  8387  002262                     
  8388                           ; BSR set to: 0
  8389  002262  0E96               	movlw	150
  8390  002264  5E56               	subwf	___fltol@exp1^0,f,c
  8391  002266                     
  8392                           ; BSR set to: 0
  8393  002266  BE56               	btfsc	___fltol@exp1^0,7,c
  8394  002268  EF3B  F011         	goto	u5290
  8395  00226C  EF38  F011         	goto	u5291
  8396  002270                     u5291:
  8397  002270  FFFF               	dw	65535	; assembler added errata NOP
  8398  002272  EF55  F011         	goto	l4629
  8399  002276                     u5290:
  8400  002276  FFFF               	dw	65535	; assembler added errata NOP
  8401  002278                     
  8402                           ; BSR set to: 0
  8403  002278  5056               	movf	___fltol@exp1^0,w,c
  8404  00227A  0A80               	xorlw	128
  8405  00227C  0F97               	addlw	151
  8406  00227E  B0D8               	btfsc	status,0,c
  8407  002280  EF44  F011         	goto	u5301
  8408  002284  EF47  F011         	goto	u5300
  8409  002288                     u5301:
  8410  002288  FFFF               	dw	65535	; assembler added errata NOP
  8411  00228A  EF4A  F011         	goto	l4625
  8412  00228E                     u5300:
  8413  00228E  FFFF               	dw	65535	; assembler added errata NOP
  8414  002290  EF05  F011         	goto	l4605
  8415  002294                     l4625:
  8416  002294  FFFF               	dw	65535	; assembler added errata NOP
  8417                           
  8418                           ; BSR set to: 0
  8419  002296  90D8               	bcf	status,0,c
  8420  002298  33CB               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8421  00229A  33CA               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8422  00229C  33C9               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8423  00229E  33C8               	rrcf	___fltol@f1& (0+255),f,b
  8424  0022A0                     
  8425                           ; BSR set to: 0
  8426  0022A0  3E56               	incfsz	___fltol@exp1^0,f,c
  8427  0022A2  EF4A  F011         	goto	l4625
  8428  0022A6  EF73  F011         	goto	l4639
  8429  0022AA                     l4629:
  8430  0022AA  FFFF               	dw	65535	; assembler added errata NOP
  8431                           
  8432                           ; BSR set to: 0
  8433  0022AC  0E1F               	movlw	31
  8434  0022AE  6456               	cpfsgt	___fltol@exp1^0,c
  8435  0022B0  EF5C  F011         	goto	u5311
  8436  0022B4  EF5F  F011         	goto	u5310
  8437  0022B8                     u5311:
  8438  0022B8  FFFF               	dw	65535	; assembler added errata NOP
  8439  0022BA  EF69  F011         	goto	l4637
  8440  0022BE                     u5310:
  8441  0022BE  FFFF               	dw	65535	; assembler added errata NOP
  8442  0022C0  EF05  F011         	goto	l4605
  8443  0022C4                     l4635:
  8444  0022C4  FFFF               	dw	65535	; assembler added errata NOP
  8445                           
  8446                           ; BSR set to: 0
  8447  0022C6  90D8               	bcf	status,0,c
  8448  0022C8  37C8               	rlcf	___fltol@f1& (0+255),f,b
  8449  0022CA  37C9               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8450  0022CC  37CA               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8451  0022CE  37CB               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8452  0022D0  0656               	decf	___fltol@exp1^0,f,c
  8453  0022D2                     l4637:
  8454  0022D2  FFFF               	dw	65535	; assembler added errata NOP
  8455                           
  8456                           ; BSR set to: 0
  8457  0022D4  5056               	movf	___fltol@exp1^0,w,c
  8458  0022D6  A4D8               	btfss	status,2,c
  8459  0022D8  EF70  F011         	goto	u5321
  8460  0022DC  EF73  F011         	goto	u5320
  8461  0022E0                     u5321:
  8462  0022E0  FFFF               	dw	65535	; assembler added errata NOP
  8463  0022E2  EF62  F011         	goto	l4635
  8464  0022E6                     u5320:
  8465  0022E6                     l4639:
  8466  0022E6  FFFF               	dw	65535	; assembler added errata NOP
  8467                           
  8468                           ; BSR set to: 0
  8469  0022E8  5055               	movf	___fltol@sign1^0,w,c
  8470  0022EA  B4D8               	btfsc	status,2,c
  8471  0022EC  EF7A  F011         	goto	u5331
  8472  0022F0  EF7D  F011         	goto	u5330
  8473  0022F4                     u5331:
  8474  0022F4  FFFF               	dw	65535	; assembler added errata NOP
  8475  0022F6  EF86  F011         	goto	l4643
  8476  0022FA                     u5330:
  8477  0022FA  FFFF               	dw	65535	; assembler added errata NOP
  8478  0022FC                     
  8479                           ; BSR set to: 0
  8480  0022FC  1FCB               	comf	(___fltol@f1+3)& (0+255),f,b
  8481  0022FE  1FCA               	comf	(___fltol@f1+2)& (0+255),f,b
  8482  002300  1FC9               	comf	(___fltol@f1+1)& (0+255),f,b
  8483  002302  6DC8               	negf	___fltol@f1& (0+255),b
  8484  002304  0E00               	movlw	0
  8485  002306  23C9               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8486  002308  23CA               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8487  00230A  23CB               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8488  00230C                     l4643:
  8489  00230C  FFFF               	dw	65535	; assembler added errata NOP
  8490                           
  8491                           ; BSR set to: 0
  8492  00230E  C0C8  F0C8         	movff	___fltol@f1,?___fltol
  8493  002312  C0C9  F0C9         	movff	___fltol@f1+1,?___fltol+1
  8494  002316  C0CA  F0CA         	movff	___fltol@f1+2,?___fltol+2
  8495  00231A  C0CB  F0CB         	movff	___fltol@f1+3,?___fltol+3
  8496  00231E                     l705:
  8497  00231E  FFFF               	dw	65535	; assembler added errata NOP
  8498                           
  8499                           ; BSR set to: 0
  8500  002320  0012               	return		;funcret
  8501  002322  FFFF               	dw	65535	; errata NOP
  8502  002324                     __end_of___fltol:
  8503                           	callstack 0
  8504                           
  8505 ;; *************** function _init_PORTS *****************
  8506 ;; Defined at:
  8507 ;;		line 9 in file "init_PIC.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;		None
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;		None
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      void 
  8514 ;; Registers used:
  8515 ;;		wreg, status,2
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8521 ;;      Params:         0       0       0       0       0       0       0
  8522 ;;      Locals:         0       0       0       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0
  8524 ;;      Totals:         0       0       0       0       0       0       0
  8525 ;;Total ram usage:        0 bytes
  8526 ;; Hardware stack levels used: 1
  8527 ;; Hardware stack levels required when called: 1
  8528 ;; This function calls:
  8529 ;;		Nothing
  8530 ;; This function is called by:
  8531 ;;		_main
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text33
  8536  002E3C                     __ptext33:
  8537                           	callstack 0
  8538  002E3C                     _init_PORTS:
  8539                           	callstack 0
  8540  002E3C  FFFF               	dw	65535	; assembler added errata NOP
  8541  002E3E                     
  8542                           ;init_PIC.c: 11:     TRISB = 0x00;
  8543  002E3E  0E00               	movlw	0
  8544  002E40  6E93               	movwf	147,c	;volatile
  8545                           
  8546                           ;init_PIC.c: 12:     TRISD = 0x00;
  8547  002E42  0E00               	movlw	0
  8548  002E44  6E95               	movwf	149,c	;volatile
  8549                           
  8550                           ;init_PIC.c: 13:     PORTB = 0x0F;
  8551  002E46  0E0F               	movlw	15
  8552  002E48  6E81               	movwf	129,c	;volatile
  8553                           
  8554                           ;init_PIC.c: 14:     PORTD = 0x0F;
  8555  002E4A  0E0F               	movlw	15
  8556  002E4C  6E83               	movwf	131,c	;volatile
  8557                           
  8558                           ;init_PIC.c: 17:     LATC = 0;
  8559  002E4E  0E00               	movlw	0
  8560  002E50  6E8B               	movwf	139,c	;volatile
  8561                           
  8562                           ;init_PIC.c: 18:     PORTC = 0;
  8563  002E52  0E00               	movlw	0
  8564  002E54  6E82               	movwf	130,c	;volatile
  8565  002E56                     
  8566                           ;init_PIC.c: 19:     TRISCbits.RC7 = 1;
  8567  002E56  8E94               	bsf	148,7,c	;volatile
  8568  002E58                     
  8569                           ;init_PIC.c: 20:     TRISCbits.RC6 = 0;
  8570  002E58  9C94               	bcf	148,6,c	;volatile
  8571  002E5A  0012               	return		;funcret
  8572  002E5C  FFFF               	dw	65535	; errata NOP
  8573  002E5E                     __end_of_init_PORTS:
  8574                           	callstack 0
  8575                           
  8576 ;; *************** function _Rx_char_USART *****************
  8577 ;; Defined at:
  8578 ;;		line 642 in file "main.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;		None
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  i               2    5[COMRAM] int 
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8592 ;;      Params:         0       0       0       0       0       0       0
  8593 ;;      Locals:         2       0       0       0       0       0       0
  8594 ;;      Temps:          5       0       0       0       0       0       0
  8595 ;;      Totals:         7       0       0       0       0       0       0
  8596 ;;Total ram usage:        7 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		Interrupt level 2
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           	psect	intcode
  8606  000008                     __pintcode:
  8607                           	callstack 0
  8608  000008                     _Rx_char_USART:
  8609                           	callstack 0
  8610  000008  FFFF               	dw	65535	; assembler added errata NOP
  8611                           
  8612                           ;incstack = 0
  8613  00000A  8277               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8614  00000C  CFD9 F004          	movff	fsr2l,??_Rx_char_USART+3
  8615  000010  CFDA F005          	movff	fsr2h,??_Rx_char_USART+4
  8616  000014                     
  8617                           ;main.c: 644:     int i=0;
  8618  000014  0E00               	movlw	0
  8619  000016  6E07               	movwf	(Rx_char_USART@i+1)^0,c
  8620  000018  0E00               	movlw	0
  8621  00001A  6E06               	movwf	Rx_char_USART@i^0,c
  8622  00001C                     i2l401:
  8623  00001C  FFFF               	dw	65535	; assembler added errata NOP
  8624  00001E  AA9E               	btfss	3998,5,c	;volatile
  8625  000020  EF14  F000         	goto	i2u409_41
  8626  000024  EF17  F000         	goto	i2u409_40
  8627  000028                     i2u409_41:
  8628  000028  FFFF               	dw	65535	; assembler added errata NOP
  8629  00002A  EF0E  F000         	goto	i2l401
  8630  00002E                     i2u409_40:
  8631  00002E  FFFF               	dw	65535	; assembler added errata NOP
  8632  000030                     
  8633                           ;main.c: 648:         input_str[i]=RCREG;
  8634  000030  0EBE               	movlw	low _input_str
  8635  000032  2406               	addwf	Rx_char_USART@i^0,w,c
  8636  000034  6ED9               	movwf	fsr2l,c
  8637  000036  0E00               	movlw	high _input_str
  8638  000038  2007               	addwfc	(Rx_char_USART@i+1)^0,w,c
  8639  00003A  6EDA               	movwf	fsr2h,c
  8640  00003C  CFAE FFDF          	movff	4014,indf2	;volatile
  8641                           
  8642                           ;main.c: 649:     }while(input_str[i++] != '\n');
  8643  000040  5006               	movf	Rx_char_USART@i^0,w,c
  8644  000042  6E01               	movwf	??_Rx_char_USART^0,c
  8645  000044  5007               	movf	(Rx_char_USART@i+1)^0,w,c
  8646  000046  6E02               	movwf	(??_Rx_char_USART+1)^0,c
  8647  000048  4A06               	infsnz	Rx_char_USART@i^0,f,c
  8648  00004A  2A07               	incf	(Rx_char_USART@i+1)^0,f,c
  8649  00004C  0EBE               	movlw	low _input_str
  8650  00004E  2401               	addwf	??_Rx_char_USART^0,w,c
  8651  000050  6ED9               	movwf	fsr2l,c
  8652  000052  0E00               	movlw	high _input_str
  8653  000054  2002               	addwfc	(??_Rx_char_USART+1)^0,w,c
  8654  000056  6EDA               	movwf	fsr2h,c
  8655  000058  0E0A               	movlw	10
  8656  00005A  18DE               	xorwf	postinc2,w,c
  8657  00005C  A4D8               	btfss	status,2,c
  8658  00005E  EF33  F000         	goto	i2u410_41
  8659  000062  EF36  F000         	goto	i2u410_40
  8660  000066                     i2u410_41:
  8661  000066  FFFF               	dw	65535	; assembler added errata NOP
  8662  000068  EF0E  F000         	goto	i2l401
  8663  00006C                     i2u410_40:
  8664  00006C  FFFF               	dw	65535	; assembler added errata NOP
  8665  00006E                     
  8666                           ;main.c: 651:     PIR1bits.RCIF = 0;
  8667  00006E  9A9E               	bcf	158,5,c	;volatile
  8668  000070                     
  8669                           ;main.c: 652:     New_char_RX = 1;
  8670  000070  0E01               	movlw	1
  8671  000072  6E76               	movwf	_New_char_RX^0,c
  8672  000074  C005  FFDA         	movff	??_Rx_char_USART+4,fsr2h
  8673  000078  C004  FFD9         	movff	??_Rx_char_USART+3,fsr2l
  8674  00007C  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8675  00007E  0011               	retfie		f
  8676  000080  FFFF               	dw	65535	; errata NOP
  8677  000082                     __end_of_Rx_char_USART:
  8678                           	callstack 0
  8679                           
  8680                           	psect	rparam
  8681  0000                     
  8682                           	psect	temp
  8683  000077                     btemp:
  8684                           	callstack 0
  8685  000077                     	ds	1
  8686  0000                     int$flags	set	btemp
  8687  0000                     wtemp8	set	btemp+1
  8688  0000                     ttemp5	set	btemp+1
  8689  0000                     ttemp6	set	btemp+4
  8690  0000                     ttemp7	set	btemp+8
  8691                           
  8692                           	psect	idloc
  8693                           
  8694                           ;Config register IDLOC0 @ 0x200000
  8695                           ;	unspecified, using default values
  8696  200000                     	org	2097152
  8697  200000  FF                 	db	255
  8698                           
  8699                           ;Config register IDLOC1 @ 0x200001
  8700                           ;	unspecified, using default values
  8701  200001                     	org	2097153
  8702  200001  FF                 	db	255
  8703                           
  8704                           ;Config register IDLOC2 @ 0x200002
  8705                           ;	unspecified, using default values
  8706  200002                     	org	2097154
  8707  200002  FF                 	db	255
  8708                           
  8709                           ;Config register IDLOC3 @ 0x200003
  8710                           ;	unspecified, using default values
  8711  200003                     	org	2097155
  8712  200003  FF                 	db	255
  8713                           
  8714                           ;Config register IDLOC4 @ 0x200004
  8715                           ;	unspecified, using default values
  8716  200004                     	org	2097156
  8717  200004  FF                 	db	255
  8718                           
  8719                           ;Config register IDLOC5 @ 0x200005
  8720                           ;	unspecified, using default values
  8721  200005                     	org	2097157
  8722  200005  FF                 	db	255
  8723                           
  8724                           ;Config register IDLOC6 @ 0x200006
  8725                           ;	unspecified, using default values
  8726  200006                     	org	2097158
  8727  200006  FF                 	db	255
  8728                           
  8729                           ;Config register IDLOC7 @ 0x200007
  8730                           ;	unspecified, using default values
  8731  200007                     	org	2097159
  8732  200007  FF                 	db	255
  8733                           
  8734                           	psect	config
  8735                           
  8736                           ; Padding undefined space
  8737  300000                     	org	3145728
  8738  300000  FF                 	db	255
  8739                           
  8740                           ;Config register CONFIG1H @ 0x300001
  8741                           ;	Oscillator Selection bits
  8742                           ;	OSC = XT, XT oscillator
  8743                           ;	Oscillator System Clock Switch Enable bit
  8744                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  8745  300001                     	org	3145729
  8746  300001  21                 	db	33
  8747                           
  8748                           ;Config register CONFIG2L @ 0x300002
  8749                           ;	Power-up Timer Enable bit
  8750                           ;	PWRT = OFF, PWRT disabled
  8751                           ;	Brown-out Reset Enable bit
  8752                           ;	BOR = OFF, Brown-out Reset disabled
  8753                           ;	Brown-out Reset Voltage bits
  8754                           ;	BORV = 20, VBOR set to 2.0V
  8755  300002                     	org	3145730
  8756  300002  0D                 	db	13
  8757                           
  8758                           ;Config register CONFIG2H @ 0x300003
  8759                           ;	Watchdog Timer Enable bit
  8760                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8761                           ;	Watchdog Timer Postscale Select bits
  8762                           ;	WDTPS = 128, 1:128
  8763  300003                     	org	3145731
  8764  300003  0E                 	db	14
  8765                           
  8766                           ; Padding undefined space
  8767  300004                     	org	3145732
  8768  300004  FF                 	db	255
  8769                           
  8770                           ;Config register CONFIG3H @ 0x300005
  8771                           ;	CCP2 Mux bit
  8772                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  8773  300005                     	org	3145733
  8774  300005  00                 	db	0
  8775                           
  8776                           ;Config register CONFIG4L @ 0x300006
  8777                           ;	Stack Full/Underflow Reset Enable bit
  8778                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  8779                           ;	Low Voltage ICSP Enable bit
  8780                           ;	LVP = OFF, Low Voltage ICSP disabled
  8781                           ;	Background Debugger Enable bit
  8782                           ;	DEBUG = 0x1, unprogrammed default
  8783  300006                     	org	3145734
  8784  300006  80                 	db	128
  8785                           
  8786                           ; Padding undefined space
  8787  300007                     	org	3145735
  8788  300007  FF                 	db	255
  8789                           
  8790                           ;Config register CONFIG5L @ 0x300008
  8791                           ;	Code Protection bit
  8792                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  8793                           ;	Code Protection bit
  8794                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  8795                           ;	Code Protection bit
  8796                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  8797                           ;	Code Protection bit
  8798                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  8799  300008                     	org	3145736
  8800  300008  0F                 	db	15
  8801                           
  8802                           ;Config register CONFIG5H @ 0x300009
  8803                           ;	Boot Block Code Protection bit
  8804                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  8805                           ;	Data EEPROM Code Protection bit
  8806                           ;	CPD = OFF, Data EEPROM not code protected
  8807  300009                     	org	3145737
  8808  300009  C0                 	db	192
  8809                           
  8810                           ;Config register CONFIG6L @ 0x30000A
  8811                           ;	Write Protection bit
  8812                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  8813                           ;	Write Protection bit
  8814                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  8815                           ;	Write Protection bit
  8816                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  8817                           ;	Write Protection bit
  8818                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  8819  30000A                     	org	3145738
  8820  30000A  0F                 	db	15
  8821                           
  8822                           ;Config register CONFIG6H @ 0x30000B
  8823                           ;	Configuration Register Write Protection bit
  8824                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  8825                           ;	Boot Block Write Protection bit
  8826                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  8827                           ;	Data EEPROM Write Protection bit
  8828                           ;	WRTD = OFF, Data EEPROM not write protected
  8829  30000B                     	org	3145739
  8830  30000B  E0                 	db	224
  8831                           
  8832                           ;Config register CONFIG7L @ 0x30000C
  8833                           ;	Table Read Protection bit
  8834                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  8835                           ;	Table Read Protection bit
  8836                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  8837                           ;	Table Read Protection bit
  8838                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  8839                           ;	Table Read Protection bit
  8840                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  8841  30000C                     	org	3145740
  8842  30000C  0F                 	db	15
  8843                           
  8844                           ;Config register CONFIG7H @ 0x30000D
  8845                           ;	Boot Block Table Read Protection bit
  8846                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  8847  30000D                     	org	3145741
  8848  30000D  40                 	db	64
  8849                           tosu	equ	0xFFF
  8850                           tosh	equ	0xFFE
  8851                           tosl	equ	0xFFD
  8852                           stkptr	equ	0xFFC
  8853                           pclatu	equ	0xFFB
  8854                           pclath	equ	0xFFA
  8855                           pcl	equ	0xFF9
  8856                           tblptru	equ	0xFF8
  8857                           tblptrh	equ	0xFF7
  8858                           tblptrl	equ	0xFF6
  8859                           tablat	equ	0xFF5
  8860                           prodh	equ	0xFF4
  8861                           prodl	equ	0xFF3
  8862                           indf0	equ	0xFEF
  8863                           postinc0	equ	0xFEE
  8864                           postdec0	equ	0xFED
  8865                           preinc0	equ	0xFEC
  8866                           plusw0	equ	0xFEB
  8867                           fsr0h	equ	0xFEA
  8868                           fsr0l	equ	0xFE9
  8869                           wreg	equ	0xFE8
  8870                           indf1	equ	0xFE7
  8871                           postinc1	equ	0xFE6
  8872                           postdec1	equ	0xFE5
  8873                           preinc1	equ	0xFE4
  8874                           plusw1	equ	0xFE3
  8875                           fsr1h	equ	0xFE2
  8876                           fsr1l	equ	0xFE1
  8877                           bsr	equ	0xFE0
  8878                           indf2	equ	0xFDF
  8879                           postinc2	equ	0xFDE
  8880                           postdec2	equ	0xFDD
  8881                           preinc2	equ	0xFDC
  8882                           plusw2	equ	0xFDB
  8883                           fsr2h	equ	0xFDA
  8884                           fsr2l	equ	0xFD9
  8885                           status	equ	0xFD8

Data Sizes:
    Strings     551
    Constant    20
    Data        26
    BSS         77
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     86     118
    BANK0           128      9      81
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(COMRAM[4]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strncat@s	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_to_sequence(COMRAM[2]), 

    strncat@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strncat@a	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> input_str(BANK0[10]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 83
		 -> STR_21(CODE[69]), STR_20(CODE[63]), STR_19(CODE[41]), STR_18(CODE[27]), 
		 -> STR_17(CODE[30]), STR_16(CODE[29]), STR_15(CODE[29]), STR_14(CODE[29]), 
		 -> STR_13(CODE[28]), STR_12(CODE[28]), STR_11(CODE[40]), STR_10(CODE[27]), 
		 -> STR_9(CODE[32]), STR_8(CODE[23]), STR_7(CODE[32]), STR_6(CODE[23]), 
		 -> STR_5(CODE[32]), STR_4(CODE[23]), STR_3(CODE[32]), sequence(COMRAM[4]), 
		 -> STR_2(CODE[23]), STR_1(CODE[83]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(COMRAM[4]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(COMRAM[4]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _start_up_menu->_pick_and_place
    _remove_component->_strrchr
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _pick_and_place->___flge
    ___fldiv->___xxtofl
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _add_component->_atoi
    _strncat->_strlen
    _change_sequence->_print_string
    _print_string->_serial_tx_char
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_start_up_menu
    _init_USART->___fltol

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   47097
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                       12    12      0   35861
                                             81 COMRAM     3     3      0
                                              0 BANK0      9     9      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
 ---------------------------------------------------------------------------------
 (2) _remove_component                                     5     5      0    5295
                                             25 COMRAM     5     5      0
                            _memmove
                       _print_string
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4    1197
                                             21 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     524
                                             11 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     791
                                             11 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _pick_and_place                                      23    23      0   16495
                                             58 COMRAM    23    23      0
                            _Twister
                             _X_axis
                             _Y_axis
                            ___fldiv
                             ___flge
                           ___xxtofl
                             _direct
 ---------------------------------------------------------------------------------
 (3) _direct                                               5     1      4    1142
                                              7 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              7 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2183
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Y_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _X_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Twister                                              1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _ms_delay                                             6     4      2    3556
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _add_component                                        5     5      0    8319
                                             29 COMRAM     5     5      0
                               _atoi
                    _change_sequence
                       _print_string
                            _strncat
 ---------------------------------------------------------------------------------
 (3) _strncat                                              8     2      6     912
                                             11 COMRAM     6     0      6
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     400
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                      5     5      0    2777
                                             14 COMRAM     5     5      0
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2    2681
                                              8 COMRAM     6     4      2
                     _serial_tx_char
 ---------------------------------------------------------------------------------
 (4) _serial_tx_char                                       1     1      0      31
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    1875
                                             14 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     259
                                              7 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     191
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11233
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10806
                                             58 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             23 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              7 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              7 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              7 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                             46 COMRAM    12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             84 COMRAM     2     2      0
                                              0 BANK0      8     4      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Rx_char_USART                                        7     7      0      45
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _change_sequence
         _print_string
           _serial_tx_char
       _print_string
       _strncat
         _strlen
     _change_sequence
     _pick_and_place
       _Twister
         _ms_delay
       _X_axis
         _ms_delay
       _Y_axis
         _ms_delay
       ___fldiv
       ___flge
       ___xxtofl
       _direct
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _print_string
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen

 _Rx_char_USART (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      9      51       5       63.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     56      76       1       93.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C7      15        0.0%
DATA                 0      0      C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun  8 21:40:00 2021

                                                     ___fldiv@aexp 002E  
                                                     ___fldiv@bexp 002D  
                                                     ___fldiv@sign 0026  
                                                               l23 2E5A  
                                                               l26 2E9C  
                                                               l51 2E7A  
                                                               l45 2D3C  
                                                               l48 2E66  
                                              ___wmul@multiplicand 000A  
                                           __size_of_start_up_menu 033E  
                                                              l215 1C26  
                                                              l224 2974  
                                                              l320 01B8  
                                                              l314 2C2C  
                                                              l306 28DA  
                                                              l332 026E  
                                                              l261 1E30  
                                                              l341 0318  
                                                              l408 2E16  
                                                              l272 280A  
                                                              l249 1D8A  
                                                              l370 066C  
                                                              l371 0686  
                                                              l355 04C8  
                                                              l292 2632  
                                                              l364 0572  
                                                              l285 2724  
                                                              l278 2A02  
                                                              l705 231E  
                                                              l387 2DEA  
                                                              l673 23F8  
                                                              l682 2D7E  
                                                              l678 2446  
                                                              l936 08D2  
                                                              l953 0A16  
                                                              l945 0C2C  
                                                              l937 08BC  
                                                              l962 0B1A  
                                                              l938 0872  
                                                              l963 0B02  
                                                              l990 1502  
                                                              l992 131A  
                                                              l978 2C76  
                                                              l995 12D4  
                                                ??_init_interrupts 0008  
                                                              wreg 000FE8  
                                                     ___flmul@aexp 0019  
                                                     ___flmul@bexp 001A  
                                                     ___flmul@sign 0014  
                                                     ___flmul@temp 001F  
                                                     ___flmul@prod 001B  
                                                     ___fltol@exp1 0056  
                                                             l1001 1370  
                                                             l1003 1400  
                                                             l1004 13E8  
                                                             l1022 0D1E  
                                                             l1110 21E6  
                                                             l1031 0FBA  
                                                             l1032 0FA2  
                                                             l1113 2CFA  
                                                             l1121 2BD0  
                                                             l1026 10D0  
                                                             l1107 21DC  
                                                             l1029 0F2A  
                                                             l1142 18E8  
                                                             l1070 1F42  
                                                             l1134 2540  
                                                             l1039 1088  
                                                             l1063 1E96  
                                                             l1066 2028  
                                                             l1155 2CB8  
                                                             l1172 2DB8  
                                                             l2301 2E56  
                                                             l1165 2A88  
                                                             l1077 1FAE  
                                                             l2303 2E58  
                                                             l1178 2B08  
                                                             l3211 0D96  
                                                             l3203 0D5C  
                                                             l2307 2E96  
                                                             l4011 2A3C  
                                                             l4003 2A08  
                                                             l3221 0DE0  
                                                             l3213 0DAE  
                                                             l3205 0D6A  
                                                             l4021 2A84  
                                                             l4013 2A40  
                                                             l4005 2A08  
                                                             l4101 25B2  
                                                             l3231 0E36  
                                                             l3223 0DF0  
                                                             l3215 0DBA  
                                                             l3207 0D74  
                                                             l4007 2A20  
                                                             l4015 2A44  
                                                             l4111 25F8  
                                                             l4103 25C2  
                                                             l4031 2478  
                                                             l3241 0EDE  
                                                             l3233 0E52  
                                                             l3225 0DFC  
                                                             l3217 0DC6  
                                                             l3209 0D8A  
                                                             l3321 2D42  
                                                             l2601 072C  
                                                             l4017 2A5C  
                                                             l4009 2A28  
                                                             l4121 2812  
                                                             l4113 25FC  
                                                             l4105 25D8  
                                                             l4201 11B8  
                                                             l4041 2508  
                                                             l4033 249E  
                                                             l4025 2D84  
                                                             l3251 0F3C  
                                                             l3243 0EEC  
                                                             l3235 0E5E  
                                                             l3227 0E0C  
                                                             l3219 0DD4  
                                                             l3171 0C6A  
                                                             l3163 0C34  
                                                             l3323 2D5C  
                                                             l2611 077A  
                                                             l2603 073E  
                                                             l4019 2A76  
                                                             l4131 285A  
                                                             l4123 2826  
                                                             l4051 2650  
                                                             l4115 260C  
                                                             l4107 25DC  
                                                             l4211 1204  
                                                             l4203 11CA  
                                                             l4043 251E  
                                                             l4035 24AE  
                                                             l3253 0F50  
                                                             l3245 0F0A  
                                                             l3237 0E7A  
                                                             l3229 0E26  
                                                             l3181 0CB0  
                                                             l3173 0C7E  
                                                             l3165 0C40  
                                                             l3325 2D6C  
                                                             l2701 09AA  
                                                             l2621 07C2  
                                                             l2613 077E  
                                                             l2605 0740  
                                                             l4141 2894  
                                                             l4133 285E  
                                                             l4125 283A  
                                                             l4061 2688  
                                                             l4053 2664  
                                                             l4117 2618  
                                                             l4109 25E8  
                                                             l4205 11E6  
                                                             l4045 2522  
                                                             l4037 24D0  
                                                             l4029 244E  
                                                             l4311 23AC  
                                                             l4303 2326  
                                                             l3263 0FD0  
                                                             l3271 101C  
                                                             l3255 0F54  
                                                             l3247 0F16  
                                                             l3239 0EA4  
                                                             l3191 0CF4  
                                                             l3183 0CB6  
                                                             l3175 0C8E  
                                                             l3167 0C52  
                                                             l2711 0A32  
                                                             l2703 09DE  
                                                             l2631 07D8  
                                                             l2623 07C6  
                                                             l2607 0756  
                                                             l2615 0786  
                                                             l4143 28A0  
                                                             l4135 286E  
                                                             l4127 283E  
                                                             l4151 28D4  
                                                             l4071 26CE  
                                                             l4063 2698  
                                                             l4055 2668  
                                                             l4119 262C  
                                                             l4231 128E  
                                                             l4223 1242  
                                                             l4207 11F6  
                                                             l4215 1218  
                                                             l4047 2526  
                                                             l4039 24F0  
                                                             l4321 2442  
                                                             l4313 23C0  
                                                             l4305 2358  
                                                             l3281 109E  
                                                             l3273 103C  
                                                             l3265 0FDC  
                                                             l3257 0F66  
                                                             l3249 0F28  
                                                             l3193 0D04  
                                                             l3185 0CC8  
                                                             l3177 0C96  
                                                             l3169 0C54  
                                                             l2721 0A78  
                                                             l2713 0A46  
                                                             l2705 09E0  
                                                             l2641 07EC  
                                                             l2633 07DC  
                                                             l2625 07CC  
                                                             l2617 0798  
                                                             l2609 076A  
                                                             l4401 18D6  
                                                             l4145 28B0  
                                                             l4129 284A  
                                                             l4137 287A  
                                                             l4081 270A  
                                                             l4073 26DA  
                                                             l4065 26A4  
                                                             l4057 2674  
                                                             l4049 263C  
                                                             l4241 12E0  
                                                             l4233 1296  
                                                             l4225 125E  
                                                             l4217 122E  
                                                             l4209 11FE  
                                                             l4161 2DE6  
                                                             l4153 2DBE  
                                                             l2299 2E3E  
                                                             l4315 23D2  
                                                             l4307 2368  
                                                             l3283 10B0  
                                                             l3275 1050  
                                                             l3267 0FEE  
                                                             l3259 0F98  
                                                             l3195 0D0C  
                                                             l3187 0CCA  
                                                             l3179 0CA8  
                                                             l2731 0AB2  
                                                             l2723 0A7A  
                                                             l2707 09F4  
                                                             l2651 0800  
                                                             l2643 07F0  
                                                             l2635 07E0  
                                                             l2627 07D0  
                                                             l2619 07B0  
                                                             l4147 28B4  
                                                             l4139 2890  
                                                             l4075 26EA  
                                                             l4059 2684  
                                                             l4067 26B4  
                                                             l4083 271E  
                                                             l4091 2576  
                                                             l4251 134A  
                                                             l4243 1304  
                                                             l4235 12AC  
                                                             l4227 126E  
                                                             l4219 122E  
                                                             l4171 10F8  
                                                             l4331 1EA8  
                                                             l4155 2DE0  
                                                             l4411 00EC  
                                                             l4317 23E6  
                                                             l4309 239C  
                                                             l3285 10B2  
                                                             l3277 1070  
                                                             l3269 1018  
                                                             l3197 0D34  
                                                             l3189 0CE0  
                                                             l2741 0AF8  
                                                             l2725 0A8E  
                                                             l2717 0A5A  
                                                             l2733 0AB4  
                                                             l2709 0A04  
                                                             l2661 086A  
                                                             l2645 07F4  
                                                             l2637 07E4  
                                                             l2629 07D4  
                                                             l2653 0804  
                                                             l2581 06AC  
                                                             l3293 2C32  
                                                             l4501 1C2E  
                                                             l4149 28C4  
                                                             l4077 26EE  
                                                             l4069 26CA  
                                                             l4093 2582  
                                                             l4085 254A  
                                                             l4261 1396  
                                                             l4253 1350  
                                                             l4245 1306  
                                                             l4237 12C0  
                                                             l4229 127E  
                                                             l4173 110E  
                                                             l4181 113E  
                                                             l4165 10D8  
                                                             l4341 1EF0  
                                                             l4333 1EC4  
                                                             l4325 1E3A  
                                                             l4413 0120  
                                                             l4421 01B8  
                                                             l4405 008A  
                                                             l4319 243C  
                                                             l3279 108E  
                                                             l3287 10BA  
                                                             l3199 0D46  
                                                             l2751 0B8C  
                                                             l2727 0A96  
                                                             l2719 0A66  
                                                             l2735 0AC6  
                                                             l2671 08AE  
                                                             l2663 0886  
                                                             l2655 080A  
                                                             l2647 07F8  
                                                             l2639 07E8  
                                                             l2583 06C2  
                                                             l2591 06F2  
                                                             l2575 068C  
                                                             l3295 2C42  
                                                             l4511 1C74  
                                                             l4503 1C3A  
                                                             l4079 26FE  
                                                             l4095 2592  
                                                             l4087 255E  
                                                             l4271 1416  
                                                             l4263 139A  
                                                             l4255 135C  
                                                             l4247 1316  
                                                             l4239 12D2  
                                                             l4191 1172  
                                                             l4183 1150  
                                                             l4175 1122  
                                                             l4167 10E4  
                                                             l4351 1F88  
                                                             l4343 1F28  
                                                             l4327 1E4E  
                                                             l4431 0240  
                                                             l4423 01FC  
                                                             l4415 0138  
                                                             l4407 00A0  
                                                             l3289 10C0  
                                                             l2761 0BE0  
                                                             l2745 0B30  
                                                             l2753 0B8E  
                                                             l2737 0ACC  
                                                             l2729 0A9C  
                                                             l2681 090E  
                                                             l2673 08BA  
                                                             l2665 0892  
                                                             l2657 0838  
                                                             l2649 07FC  
                                                             l2593 0704  
                                                             l2585 06D6  
                                                             l2577 0698  
                                                             l4521 1CC4  
                                                             l4513 1C8A  
                                                             l4505 1C50  
                                                             l4097 2596  
                                                             l4089 2572  
                                                             l4281 1482  
                                                             l4273 1422  
                                                             l4265 13AC  
                                                             l4257 136E  
                                                             l4249 1330  
                                                             l4193 1188  
                                                             l4185 1158  
                                                             l4177 1132  
                                                             l4169 10F6  
                                                             l4361 1FEE  
                                                             l4353 1F9C  
                                                             l4345 1F2C  
                                                             l4337 1ED8  
                                                             l4329 1E60  
                                                             l4441 02BA  
                                                             l4433 0260  
                                                             l4425 0208  
                                                             l4417 016C  
                                                             l4409 00D4  
                                                             l4601 2804  
                                                             l4611 2250  
                                                             l4603 21EE  
                                                             l2771 0C18  
                                                             l2763 0BF4  
                                                             l2755 0BA4  
                                                             l2747 0B3C  
                                                             l2739 0ADE  
                                                             l2691 0956  
                                                             l2683 0920  
                                                             l2675 08E6  
                                                             l2667 0898  
                                                             l2659 085A  
                                                             l2595 070C  
                                                             l2587 06E6  
                                                             l2579 06AA  
                                                             l4371 150A  
                                                             l4531 1D12  
                                                             l4523 1CD8  
                                                             l4515 1C9E  
                                                             l4507 1C64  
                                                             l4099 25A6  
                                                             l4291 14EC  
                                                             l4283 1498  
                                                             l4275 1434  
                                                             l4267 13DE  
                                                             l4259 1382  
                                                             l4195 119C  
                                                             l4187 115E  
                                                             l4179 1136  
                                                             l4363 2002  
                                                             l4355 1FC2  
                                                             l4347 1F38  
                                                             l4339 1EE2  
                                                             l4451 034E  
                                                             l4443 02BE  
                                                             l4435 0292  
                                                             l4427 0210  
                                                             l4419 0184  
                                                             l4613 2252  
                                                             l4605 220A  
                                                             l2773 0C1A  
                                                             l2765 0BFA  
                                                             l2757 0BB6  
                                                             l2749 0B4E  
                                                             l2693 096A  
                                                             l2685 0932  
                                                             l2677 08FA  
                                                             l2669 08AC  
                                                             l2597 0722  
                                                             l2589 06EA  
                                                             l4381 15F8  
                                                             l4373 152A  
                                                             l4541 1D50  
                                                             l4533 1D16  
                                                             l4525 1CDC  
                                                             l4517 1CA2  
                                                             l4509 1C68  
                                                             l4293 14F2  
                                                             l4285 14B8  
                                                             l4277 145E  
                                                             l4197 11AC  
                                                             l4189 1170  
                                                             l4365 2014  
                                                             l4357 1FC4  
                                                             l4349 1F7A  
                                                             l4461 0412  
                                                             l4453 035C  
                                                             l4445 02EA  
                                                             l4437 02A4  
                                                             l4429 0214  
                                                             l4701 1A58  
                                                             l4615 2262  
                                                             l2767 0BFE  
                                                             l2759 0BDC  
                                                             l2695 096C  
                                                             l2687 0944  
                                                             l2599 0724  
                                                             l4391 1792  
                                                             l4383 161A  
                                                             l4375 157A  
                                                             l3911 2DF2  
                                                             l4551 1DAE  
                                                             l4543 1D5C  
                                                             l4535 1D22  
                                                             l4527 1CE8  
                                                             l4519 1CAE  
                                                             l3903 2BEC  
                                                             l4295 14F6  
                                                             l4287 14D4  
                                                             l4279 1462  
                                                             l4199 11B0  
                                                             l4367 2016  
                                                             l4359 1FCA  
                                                             l4471 049A  
                                                             l4463 0456  
                                                             l4455 0364  
                                                             l4447 030A  
                                                             l4439 02B2  
                                                             l4711 1A96  
                                                             l4703 1A6E  
                                                             l4641 22FC  
                                                             l4625 2294  
                                                             l4617 2266  
                                                             l4609 2220  
                                                             l2769 0C06  
                                                             l2697 0978  
                                                             l2689 0950  
                                                             l4393 17CA  
                                                             l4377 158E  
                                                             l3913 2E0E  
                                                             l3921 2B92  
                                                             l4561 1DEC  
                                                             l4553 1DBA  
                                                             l4545 1D72  
                                                             l4537 1D38  
                                                             l4529 1CFE  
                                                             l3905 2BF2  
                                                             l4289 14DA  
                                                             l4481 0514  
                                                             l4473 04BA  
                                                             l4465 0462  
                                                             l4457 0368  
                                                             l4449 033C  
                                                             l4721 1AFA  
                                                             l4713 1AA2  
                                                             l4705 1A78  
                                                             l4801 2E28  
                                                             l4643 230C  
                                                             l4635 22C4  
                                                             l4627 22A0  
                                                             l4619 2278  
                                                             l2699 097E  
                                                             l4395 1836  
                                                             l4387 1652  
                                                             l4379 15D4  
                                                             l4651 2D30  
                                                             l3923 2BC4  
                                                             l4563 1DF0  
                                                             l4555 1DC6  
                                                             l4547 1D86  
                                                             l4539 1D4C  
                                                             l3907 2C0C  
                                                             l4491 05A8  
                                                             l4483 0518  
                                                             l4475 04EC  
                                                             l4467 046A  
                                                             l4459 0400  
                                                             l4731 1B38  
                                                             l4715 1AAA  
                                                             l4723 1B0C  
                                                             l4707 1A7E  
                                                             l4803 2E2A  
                                                             l4637 22D2  
                                                             l4629 22AA  
                                                             l4397 186C  
                                                             l4389 1726  
                                                             l4661 2D3A  
                                                             l4653 2D32  
                                                             l3925 2BC8  
                                                             l3917 2B74  
                                                             l4565 1DF8  
                                                             l4557 1DD2  
                                                             l4549 1D92  
                                                             l3909 2C10  
                                                             l4493 05B6  
                                                             l4485 0544  
                                                             l4477 04FE  
                                                             l4469 046E  
                                                             l3933 2A8E  
                                                             l4581 275E  
                                                             l4741 1BA4  
                                                             l4733 1B44  
                                                             l4717 1AB6  
                                                             l4709 1A8A  
                                                             l4805 2E30  
                                                             l4639 22E6  
                                                             l4399 18B2  
                                                             l4655 2D34  
                                                             l4647 2D00  
                                                             l3919 2B7A  
                                                             l3951 2906  
                                                             l4559 1DD6  
                                                             l4495 05BE  
                                                             l4487 0564  
                                                             l4479 050C  
                                                             l3943 2AE0  
                                                             l3935 2A96  
                                                             l4591 27AA  
                                                             l4583 2778  
                                                             l4575 272C  
                                                             l4735 1B54  
                                                             l4743 1BB6  
                                                             l4727 1B26  
                                                             l4719 1ACA  
                                                             l4671 191E  
                                                             l4663 18F0  
                                                             l4657 2D36  
                                                             l4649 2D2E  
                                                             l3929 2CBC  
                                                             l3961 2030  
                                                             l3881 29BA  
                                                             l3953 290E  
                                                             l4569 1E02  
                                                             l4497 05C2  
                                                             l4489 0596  
                                                             l3945 2B00  
                                                             l3937 2AA0  
                                                             l4593 27B6  
                                                             l4577 2744  
                                                             l4745 1BD0  
                                                             l4737 1B60  
                                                             l4729 1B2C  
                                                             l4673 1948  
                                                             l4681 19AA  
                                                             l4665 18FC  
                                                             l4659 2D38  
                                                             l3971 20A6  
                                                             l3963 2044  
                                                             l3875 2E62  
                                                             l3883 29BE  
                                                             l3955 2924  
                                                             l3891 2CAC  
                                                             l4499 065A  
                                                             l3939 2AD0  
                                                             l4595 27EA  
                                                             l4579 275A  
                                                             l4739 1B74  
                                                             l4691 19EE  
                                                             l4683 19C4  
                                                             l4675 1954  
                                                             l4667 1912  
                                                             l3981 20D6  
                                                             l3973 20AA  
                                                             l3965 204A  
                                                             l3877 297A  
                                                             l3957 2942  
                                                             l3949 28E2  
                                                             l3885 2C7C  
                                                             l4589 2792  
                                                             l4925 1BF6  
                                                             l4693 19F6  
                                                             l4685 19CA  
                                                             l4677 1968  
                                                             l4749 1BDE  
                                                             l4669 1916  
                                                             l3983 20E0  
                                                             l3967 2050  
                                                             l3879 2986  
                                                             l3959 2970  
                                                             l3887 2C88  
                                                             l4927 1E18  
                                                             l3895 2BD6  
                                                             l4599 27F2  
                                                             l4695 1A02  
                                                             l4687 19D6  
                                                             l4679 1998  
                                                             l3993 2194  
                                                             l3985 2116  
                                                             l4929 20FE  
                                                             l3977 20B2  
                                                             l3969 206E  
                                                             l3889 2C8E  
                                                             l3897 2BE2  
                                                             l4697 1A16  
                                                             l4689 19E2  
                                                             l4793 2E1A  
                                                             l3995 21AA  
                                                             l3979 20CC  
                                                             l4699 1A46  
                                                             l4795 2E1A  
                                                             l3997 21C0  
                                                             l3989 2150  
                                                             l4797 2E20  
                                                             l4799 2E24  
                                                             STR_1 7DD7  
                                                             STR_2 7FE7  
                                                             STR_3 7EFF  
                                                             STR_4 7FE7  
                                                             STR_5 7EFF  
                                                             STR_6 7FE7  
                                                             STR_7 7EFF  
                                                             STR_8 7FE7  
                                                             STR_9 7EFF  
                                                             u2200 07AE  
                                                             u2201 07A8  
                                                             u2210 07C0  
                                                             u2130 06A8  
                                                             u2211 07BA  
                                                             u2131 06A2  
                                                             u3100 0CC6  
                                                             u2300 0930  
                                                             u2220 0836  
                                                             u2140 06C0  
                                                             u3101 0CC0  
                                                             u2301 092A  
                                                             u2221 0830  
                                                             u2141 06BA  
                                                             u3110 0CDE  
                                                             u2310 0942  
                                                             u2230 0852  
                                                             u2150 06D4  
                                                             u3111 0CD8  
                                                             u2311 093C  
                                                             u2231 084A  
                                                             u2151 06CE  
                                                             _LATC 000F8B  
                                                             u3200 0FB4  
                                                             u3120 0CF2  
                                                             u2400 0AC6  
                                                             u2320 0968  
                                                             u2240 0856  
                                                             u2160 0720  
                                                             u3201 0FAE  
                                                             u3121 0CEC  
                                                             u2401 0AC0  
                                                             u2321 0962  
                                                             u2161 071A  
                                                             u3210 0FCE  
                                                             u3130 0D32  
                                                             u2410 0ADC  
                                                             u2330 09A8  
                                                             u2250 0884  
                                                             u2170 073C  
                                                             u3211 0FC8  
                                                             u3131 0D2C  
                                                             u2411 0AD6  
                                                             u2331 09A2  
                                                             u2251 087E  
                                                             u2171 0736  
                                                             u3220 0FEC  
                                                             u3140 0D46  
                                                             u2500 0BF2  
                                                             u2420 0AF6  
                                                             u2340 09F2  
                                                             u2260 08AA  
                                                             u2180 0754  
                                                             u3221 0FE6  
                                                             u3141 0D40  
                                                             u2501 0BEC  
                                                             u2421 0AF0  
                                                             u2341 09EC  
                                                             u2261 08A4  
                                                             u2181 074E  
                                                             u3230 103A  
                                                             u3150 0EC6  
                                                             u3070 0C50  
                                                             u3310 2D5A  
                                                             u2510 0C16  
                                                             u2430 0B14  
                                                             u2350 0A30  
                                                             u2270 08D2  
                                                             u2190 0768  
                                                             u4110 2E78  
                                                             u3231 1034  
                                                             u3071 0C4A  
                                                             u3311 2D54  
                                                             u2511 0C10  
                                                             u2431 0B0E  
                                                             u2351 0A2A  
                                                             u2271 08CC  
                                                             u2191 0762  
                                                             u4111 2E72  
                                                             u3240 106E  
                                                             u3160 0F26  
                                                             u3080 0C68  
                                                             u2440 0B2E  
                                                             u2360 0A44  
                                                             u2280 08E4  
                                                             u4200 2CF0  
                                                             u4120 29B6  
                                                             u5000 0182  
                                                             u3241 1068  
                                                             u3161 0F20  
                                                             u3081 0C62  
                                                             u2441 0B28  
                                                             u2361 0A3E  
                                                             u2281 08DE  
                                                             u4201 2CE8  
                                                             u5001 017C  
                                                             u3250 10AE  
                                                             u3170 0F4E  
                                                             u3090 0C7C  
                                                             u2450 0B4C  
                                                             u2370 0A76  
                                                             u2290 08F8  
                                                             u4210 2CF4  
                                                             u4130 29EE  
                                                             u5010 023E  
                                                             u3251 10A8  
                                                             u3171 0F48  
                                                             u3155 0EBA  
                                                             u3091 0C76  
                                                             u2451 0B46  
                                                             u2371 0A70  
                                                             u2291 08F2  
                                                             u5011 0238  
                                                             u3180 0F64  
                                                             u2460 0B8A  
                                                             u2380 0A8C  
                                                             u4300 218E  
                                                             u4140 2A00  
                                                             u5100 04EA  
                                                             u5020 0290  
                                                             u4220 2ACE  
                                                             u3181 0F5E  
                                                             u2461 0B84  
                                                             u2381 0A86  
                                                             u4141 29FA  
                                                             u5101 04E4  
                                                             u5021 028A  
                                                             u4221 2AC8  
                                                             u3190 0F96  
                                                             u2470 0BA2  
                                                             u2390 0AB0  
                                                             u4310 21A8  
                                                             u4150 2CAA  
                                                             u5110 04FE  
                                                             u5030 02A4  
                                                             u4230 2AFE  
                                                             u3191 0F90  
                                                             u2471 0B9C  
                                                             u2391 0AAA  
                                                             u4311 21A2  
                                                             u4127 29AC  
                                                             u4151 2CA4  
                                                             u5111 04F8  
                                                             u5031 029E  
                                                             u4231 2AF8  
                                                             u2480 0BB6  
                                                             u4320 21BE  
                                                             u4240 2922  
                                                             u5200 1CFC  
                                                             u4160 2C0A  
                                                             u4400 264E  
                                                             u5120 0542  
                                                             u5040 02E8  
                                                             u2481 0BB0  
                                                             u4321 21B8  
                                                             u4137 29E4  
                                                             u4241 291C  
                                                             u5201 1CF6  
                                                             u4161 2C04  
                                                             u4401 2648  
                                                             u5121 053C  
                                                             u5041 02E2  
                                                             u2490 0BDA  
                                                             u4250 296E  
                                                             u4330 2A5A  
                                                             u5210 1D36  
                                                             u4170 2C2A  
                                                             u4410 2662  
                                                             u5130 0594  
                                                             u5050 033A  
                                                             u2491 0BD4  
                                                             u4251 2968  
                                                             u4331 2A54  
                                                             u5211 1D30  
                                                             u4171 2C24  
                                                             u4411 265C  
                                                             u5131 058E  
                                                             u5051 0334  
                                                             u5300 228E  
                                                             u4180 2B90  
                                                             u4260 206C  
                                                             u4340 2A76  
                                                             u5220 1D70  
                                                             u4420 26C8  
                                                             u4500 10F4  
                                                             u5140 05A8  
                                                             u5060 034E  
                                                             u5301 2288  
                                                             u4181 2B8A  
                                                             u4261 2066  
                                                             u4341 2A70  
                                                             u5221 1D6A  
                                                             u4421 26C2  
                                                             u4501 10EE  
                                                             u5141 05A2  
                                                             u5061 0348  
                                                             u5310 22BE  
                                                             u4190 2BC2  
                                                             u4270 20A4  
                                                             u5230 1DEA  
                                                             u4430 255C  
                                                             u4510 110C  
                                                             u5150 0658  
                                                             u5070 03FE  
                                                             u4350 2476  
                                                             u5311 22B8  
                                                             u4191 2BBC  
                                                             u4271 209E  
                                                             u5231 1DE4  
                                                             u4431 2556  
                                                             u4511 1106  
                                                             u5151 0652  
                                                             u5071 03F8  
                                                             u4351 2470  
                                                             u5320 22E6  
                                                             u4280 20C6  
                                                             u4440 2570  
                                                             u4600 1302  
                                                             u4520 1120  
                                                             u5160 066C  
                                                             u5080 0412  
                                                             u4360 249C  
                                                             u5240 2758  
                                                             u5400 1A6C  
                                                             u5321 22E0  
                                                             u4281 20C0  
                                                             u4441 256A  
                                                             u4601 12FC  
                                                             u4521 111A  
                                                             u5161 0666  
                                                             u5081 040C  
                                                             u4361 2496  
                                                             u5241 2752  
                                                             u5401 1A66  
                                                             u5330 22FA  
                                                             u4290 218A  
                                                             u5170 1C4E  
                                                             u4450 25D6  
                                                             u4610 132E  
                                                             u4530 116E  
                                                             u5090 0498  
                                                             u4370 24EA  
                                                             u5250 278C  
                                                             u5410 1AF8  
                                                             u5331 22F4  
                                                             u4291 2182  
                                                             u5171 1C48  
                                                             u4451 25D0  
                                                             u4611 1328  
                                                             u4531 1168  
                                                             u5091 0492  
                                                             u4371 24E4  
                                                             u5251 2786  
                                                             u5411 1AF2  
                                                             u5180 1C88  
                                                             u4460 2824  
                                                             u4700 1480  
                                                             u4620 1348  
                                                             u4540 1186  
                                                             u4380 2506  
                                                             u5260 27A8  
                                                             u5420 1B0C  
                                                             u5340 1910  
                                                             u5181 1C82  
                                                             u4461 281E  
                                                             u4701 147A  
                                                             u4621 1342  
                                                             u4541 1180  
                                                             u4381 2500  
                                                             u5261 27A2  
                                                             u5421 1B06  
                                                             u5341 190A  
                                                             u5270 2208  
                                                             u5190 1CC2  
                                                             u4470 2838  
                                                             u4710 14B6  
                                                             u4630 136C  
                                                             u4550 119A  
                                                             u4390 2540  
                                                             u5430 1B20  
                                                             u5350 1996  
                                                             u5271 2202  
                                                             u5191 1CBC  
                                                             u4471 2832  
                                                             u4711 14B0  
                                                             u4631 1366  
                                                             u4551 1194  
                                                             u4391 253A  
                                                             u5431 1B1A  
                                                             u5351 1990  
                                                             u5280 2244  
                                                             u4480 288E  
                                                             u4720 14EA  
                                                             u4640 1394  
                                                             u4560 11E4  
                                                             u4800 1EC2  
                                                             u5440 1BA2  
                                                             u5360 19AA  
                                                             u4481 2888  
                                                             u4721 14E4  
                                                             u4641 138E  
                                                             u4561 11DE  
                                                             u4801 1EBC  
                                                             u5441 1B9C  
                                                             u5361 19A4  
                                                             u5290 2276  
                                                             u4730 2356  
                                                             u4650 13AA  
                                                             u4570 122C  
                                                             u4810 1F22  
                                                             u4490 2DDE  
                                                             u5450 1BB6  
                                                             u5370 19BE  
                                                             u5291 2270  
                                                             u4731 2350  
                                                             u4651 13A4  
                                                             u4571 1226  
                                                             u4811 1F1C  
                                                             u4491 2DD8  
                                                             u5451 1BB0  
                                                             u5371 19B8  
                                                             u4740 239A  
                                                             u4900 15B2  
                                                             u4660 13DC  
                                                             u4580 12AA  
                                                             u4820 1F74  
                                                             u5460 1BCA  
                                                             u5380 1A44  
                                                             _RCIF 007CF5  
                                                             u5285 2238  
                                                             u4741 2394  
                                                             u4661 13D6  
                                                             u4581 12A4  
                                                             u4821 1F6E  
                                                             u5461 1BC4  
                                                             u5381 1A3E  
                                                             u4750 23BE  
                                                             u4910 15D2  
                                                             u4670 13FA  
                                                             u4590 12D0  
                                                             u4830 1F9A  
                                                             u5390 1A58  
                                                             u4751 23B8  
                                                             u4911 15CC  
                                                             u4671 13F4  
                                                             u4591 12CA  
                                                             u4831 1F94  
                                                             u5391 1A52  
                                                             u4760 23E4  
                                                             u4920 1618  
                                                             u4680 1414  
                                                             u4840 1FAE  
                                                             u4761 23DE  
                                                             u4921 1612  
                                                             u4905 15A6  
                                                             u4681 140E  
                                                             u4841 1FA8  
                                                             u4770 243A  
                                                             u4930 1724  
                                                             u4690 1432  
                                                             u4850 1FC0  
                                                             u4771 2434  
                                                             u4931 171E  
                                                             u4691 142C  
                                                             u4851 1FBA  
                                                             u4940 17C8  
                                                             u4860 2000  
                                                             u4780 1E4C  
                                                             u4941 17C2  
                                                             u4861 1FFA  
                                                             u4781 1E46  
                                                             u4950 1890  
                                                             u4870 2012  
                                                             u4790 1E5E  
                                                             u4871 200C  
                                                             u4791 1E58  
                                                             u4960 18B0  
                                                             u4880 154C  
                                                             u4961 18AA  
                                                             u4890 1578  
                                                             u4970 009E  
                                                             u4955 1884  
                                                             u4891 1572  
                                                             u4971 0098  
                                                             u4980 00EA  
                                                             u4885 1540  
                                                             u4981 00E4  
                                                             u4990 0136  
                                                             u4991 0130  
                                                             _Fosc 7DD3  
                                                             _Tosc 00B6  
                                                             _atoi 202E  
                                                             _main 2E1A  
                                                             fsr0h 000FEA  
                                                             fsr1h 000FE2  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf1 000FE7  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0077  
                                                             _stop 0071  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0082  
                                                       _Angle_diff 005B  
                                                  ___fldiv@new_exp 0027  
                                                     ___param_bank 000000  
                                                    ___fltol@sign1 0055  
                                                            ?_atoi 000F  
                                                  __end_of___fladd 0C32  
                                                            ?_main 0001  
                                                  __end_of___fldiv 1508  
                                                  __end_of___flneg 2D82  
                                                            STR_10 7FCC  
                                                            STR_11 7ED7  
                                                            STR_12 7F94  
                                                            STR_20 7E6F  
                                                            STR_13 7FB0  
                                                            STR_21 7E2A  
                                                            STR_14 7F77  
                                                            STR_15 7F3D  
                                                            STR_16 7F5A  
                                                            STR_17 7F1F  
                                                            STR_18 7FCC  
                                                            STR_19 7EAE  
                                                  __end_of___flmul 10D6  
                                                  __end_of___flsub 2C7A  
                                                  __end_of___fltol 2324  
                                                  __end_of_Twister 28E0  
                                                            i2l401 001C  
                                                            i2l404 006E  
                                                            i2l405 0074  
                                                            _RCREG 000FAE  
                                                            _SPBRG 000FAF  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISB 000F93  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                 Twister@direction 000E  
                                                            _X_dir 0070  
                                                            _Y_dir 006F  
                                           __size_of_add_component 020A  
                                                  __end_of_isdigit 2CFE  
                                                  __end_of_memmove 2546  
                                                            atoi@n 001C  
                                                            atoi@s 000F  
                               __end_of_desired_BaudRate@main$F491 7DCB  
                                       _desired_BaudRate@main$F491 7DC7  
                                                            _toint 7DC3  
                                                  __end_of_isspace 2BD4  
                                                            tablat 000FF5  
                                                    _start_up_menu 18EE  
                                                  _change_sequence 28E0  
                                                            ttemp5 0078  
                                                            ttemp6 007B  
                                                  Y_axis@direction 000E  
                                                            ttemp7 007F  
                                                            status 000FD8  
                                                            wtemp8 0078  
                                                  __end_of_strncat 2A8C  
                                                  __end_of_strrchr 2DBC  
                                                     __end_of_Fosc 7DD7  
                                                  __initialization 2B0E  
                                                     __end_of_atoi 21EC  
                                                     __end_of_main 2E3C  
                                                       _Pick_Angle 0063  
                                                           ??_atoi 0011  
                                                           ??_main 0057  
                                                    __activetblptr 000002  
                                                    print_string@i 000D  
                                                   ?_start_up_menu 0001  
                                                           i2l3861 0070  
                                                           i2l3857 0014  
                                                           i2l3859 0030  
                                                 __end_of___xxtofl 202E  
                                          remove_component@rm_comp 001C  
                                                           _X_Pick 006B  
                                                           _Y_Pick 0067  
                                                           _X_diff 005F  
                                                           _Y_diff 005D  
                                                           _X_axis 2638  
                                                           _Y_axis 2546  
                                                    _add_component 1C2C  
                                                ?_remove_component 0001  
                                                           ___flge 2324  
                                                        ??___fladd 0010  
                                                           ___wmul 2DF0  
                                                        ??___fldiv 001E  
                                                        ??___flneg 000C  
                                                        ??___flmul 0010  
                                                        ??___flsub 0020  
                                                        ??___fltol 00CC  
                                                 ??_pick_and_place 003B  
                                                           _direct 2DBC  
                                               ??_remove_component 001A  
                                                        ??_Twister 000E  
                                                           clear_0 2B54  
                                                           clear_1 2B60  
                                                           isa$std 000001  
                                                 __end_of_ms_delay 2C30  
                                                           _roundf 1508  
                                                           _strlen 2C7A  
                                                     __pdataCOMRAM 0072  
                                                        ??_isdigit 000A  
                                                        ??_memmove 0012  
                                                    _Place_Angle_D 00A4  
                                                     __mediumconst 7DC2  
                                                        ??_isspace 000A  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                          __end_of_change_sequence 2978  
                                                        ??_strncat 0012  
                                                        ??_strrchr 001A  
                                                       ___flge@ff1 002F  
                                                       ___flge@ff2 0033  
                                                     ___xxtofl@arg 0012  
                                                     ___xxtofl@exp 0011  
                                                     ___xxtofl@val 0008  
                                                       __accesstop 0080  
                                          __end_of__initialization 2B66  
                                               __size_of___memrchr 0082  
                                                       ___flneg@f1 0008  
                                                serial_tx_char@val 0008  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 00C8  
                                               _pick_and_place$590 003F  
                                               _pick_and_place$593 0043  
                                               _pick_and_place$597 0049  
                                               _pick_and_place$599 004D  
                                                   ?_add_component 0001  
                                                  _init_interrupts 2E94  
                                                   __pcstackCOMRAM 0001  
                                                     __pidataBANK0 2E7E  
                                                    __end_of_toint 7DC7  
                                                      ms_delay@val 0008  
                                                 _desired_BaudRate 7DCB  
                                          __size_of_serial_tx_char 0020  
                                                  ??_start_up_menu 0052  
                                                      _Place_Angle 0061  
                                                      _New_char_RX 0076  
                                                       __pbssBANK0 0080  
                                            __end_of_Rx_char_USART 0082  
                                        remove_component@indxToDel 001D  
                                                       __pnvCOMRAM 0076  
                                                       _angle_diff 00A2  
                                                          ?_X_axis 0001  
                                                          ?_Y_axis 0001  
                                                          ?___flge 002F  
                                                          ?___wmul 0008  
                                                          ?_direct 0008  
                                                          ?_roundf 003B  
                                                __end_of___memrchr 2B0E  
                                                          ?_strlen 0008  
                                                        ?___xxtofl 0008  
                                              pick_and_place@i_600 004F  
                                              pick_and_place@i_591 0041  
                                              pick_and_place@i_594 0045  
                                              pick_and_place@i_596 0047  
                                              pick_and_place@i_598 004B  
                                                 ?_change_sequence 0001  
                                                          _RX_Char 006D  
                                          __end_of_init_interrupts 2EA0  
                                                  ??_add_component 001E  
                                                        ?_ms_delay 0008  
                                                          _X_Place 0069  
                                                          _Y_Place 0065  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  pick_and_place@i 003D  
                                                       _init_PORTS 2E3C  
                                                       _init_USART 2CFE  
                                                  __size_of_X_axis 00F2  
                                                  __size_of_Y_axis 00F2  
                                                          _Rot_dir 006E  
                                                  __size_of___flge 0128  
                                                          ___fladd 068A  
                                                          ___fldiv 10D6  
                                                          ___flneg 2D40  
                                                          ___flmul 0C32  
                                                          ___flsub 2C30  
                                                          ___fltol 21EC  
                                                  __size_of___wmul 002A  
                                                          _Twister 280E  
                                                  __size_of_direct 0034  
                                                          __pcinit 2B0E  
                                                          __ramtop 0600  
                                                          __ptext0 2E1A  
                                                          __ptext1 18EE  
                                                          __ptext2 272A  
                                                          __ptext3 2D82  
                                                          __ptext4 2A8C  
                                                          __ptext5 244C  
                                                          __ptext6 0086  
                                                          __ptext7 2DBC  
                                                          __ptext8 1E36  
                                                          __ptext9 10D6  
                                                  __size_of_roundf 03E6  
                                                  __size_of_strlen 0042  
                                                          _isdigit 2CBC  
                                                          _memmove 244C  
                                                       ??___xxtofl 000C  
                                                          _isspace 2B74  
                                                          atoi@neg 0015  
                                                          _strncat 2A06  
                                                          _strrchr 2D82  
                                             end_of_initialization 2B66  
                                              remove_component@ptr 001A  
                                                    __Lmediumconst 7DC2  
                                                       ??_ms_delay 000A  
                                                        _RCSTAbits 000FAB  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                          roundf@e 0047  
                                                          roundf@u 004D  
                                                          roundf@x 003B  
                                                          roundf@y 0051  
                                                          strlen@a 000A  
                                                          strlen@s 0008  
                                                       direct@next 000A  
                                                       direct@prev 0008  
                                               add_component@F3132 00BA  
                                                      ___fladd@grs 0017  
                                                   _serial_tx_char 2E5E  
                                                    ___xxtofl@sign 0010  
                                        __size_of_remove_component 00E4  
                                                        _TRISCbits 000F94  
                                                      ___fldiv@grs 0029  
                                                      ___fldiv@rem 0022  
                                                    ?_print_string 0009  
                                                      ___flmul@grs 0015  
                                                 ?_init_interrupts 0001  
                                                        _TXSTAbits 000FAC  
                                                      ___memrchr@c 000E  
                                                      ___memrchr@m 000C  
                                                      ___memrchr@n 0010  
                                                      ___memrchr@s 0014  
                                         __end_of_desired_BaudRate 7DCF  
                                                      ?_init_PORTS 0001  
                                                      ?_init_USART 0001  
                                                   __end_of_X_axis 272A  
                                                   __end_of_Y_axis 2638  
                                                   __end_of___flge 244C  
                                                   __end_of___wmul 2E1A  
                                                    __pidataCOMRAM 2EA0  
                                     add_component@add_to_sequence 0020  
                                                   __end_of_direct 2DF0  
                                           __end_of_serial_tx_char 2E7E  
                                                   __end_of_roundf 18EE  
                                                   __end_of_strlen 2CBC  
                                              start_initialization 2B0E  
                                                   ??_print_string 000B  
                                                        _X_Place_D 00A8  
                                                        _Y_Place_D 00A6  
                                                  X_axis@direction 000E  
                                                     _Pick_Angle_D 00AA  
                                                   _Tosc@main$F490 00B2  
                                                         ??_X_axis 000E  
                                                         ??_Y_axis 000E  
                                                         ??___flge 0037  
                                                         ??___wmul 000C  
                                                         ??_direct 000C  
                                                      __pdataBANK0 00B2  
                                                   _lenth_of_array 00BC  
                                                         ??_roundf 003F  
                                                         ??_strlen 000A  
                                                  ?_serial_tx_char 0001  
                                                        ___fladd@a 000C  
                                                        ___fladd@b 0008  
                                                        ___fldiv@a 001A  
                                                        ___fldiv@b 0016  
                                                        ___flmul@a 000C  
                                                        ___flmul@b 0008  
                                                      __pbssCOMRAM 0057  
                                                 change_sequence@i 0012  
                                                        ___flsub@a 001C  
                                                        ___flsub@b 0018  
                                                    __pcstackBANK0 00C8  
                                          __size_of_pick_and_place 0604  
                                                        ___memrchr 2A8C  
                                                __size_of___xxtofl 01F8  
                                              __size_of_init_PORTS 0022  
                                              __size_of_init_USART 0042  
                                            __end_of_start_up_menu 1C2C  
                                                        _atoi$1070 001B  
                                                        _atoi$1071 0019  
                                                        _atoi$1069 0017  
                                                __size_of_ms_delay 005C  
                                                        __pintcode 0008  
                                                    __pmediumconst 7DC2  
                                                         ?___fladd 0008  
                                                         ?___fldiv 0016  
                                                         ?___flneg 0008  
                                                         ?___flmul 0008  
                                                         ?___flsub 0018  
                                                         ?___fltol 00C8  
                                                         ?_Twister 0001  
                                                   Rx_char_USART@i 0006  
                                           __size_of_Rx_char_USART 007A  
                                                  add_component@ip 0022  
                                                print_string@strng 0009  
                                                         ?_isdigit 0008  
                                                         ?_memmove 000C  
                                                         ?_isspace 0008  
                                                 _remove_component 272A  
                                                   _Fosc@main$F489 7DCF  
                                                       ?___memrchr 000C  
                                                         ?_strncat 000C  
                                                         ?_strrchr 0016  
                                                        _input_str 00BE  
                                                   ___wmul@product 000C  
                                         __size_of_change_sequence 0098  
                                                         _PIE1bits 000F9D  
                                            __end_of_add_component 1E36  
                                                         i2u410_40 006C  
                                                         i2u410_41 0066  
                                                         i2u409_40 002E  
                                                         i2u409_41 0028  
                                                         _PIR1bits 000F9E  
                                             __end_of_print_string 2A06  
                                                        _testarray 0080  
                                                ___wmul@multiplier 0008  
                                           __end_of_Fosc@main$F489 7DD3  
                                                     _isspace$1087 000E  
                                                        copy_data0 2B22  
                                                        copy_data1 2B42  
                                                         _X_Pick_D 0059  
                                                    _Rx_char_USART 0008  
                                                         _Y_Pick_D 0057  
                                                       roundf@F528 009E  
                                                         __Hrparam 0000  
                                                     ??_init_PORTS 0008  
                                                     ??_init_USART 0057  
                                                         __Lrparam 0000  
                                                        memmove@d1 000C  
                                                        memmove@s1 000E  
                                                 __size_of___fladd 05A8  
                                                 __size_of___fldiv 0432  
                                                 __size_of___flneg 0042  
                                                 __size_of___flmul 04A4  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 0138  
                                                 __size_of_Twister 00D2  
                                                        ms_delay@i 000A  
                                                        ms_delay@j 000C  
                                                         ___xxtofl 1E36  
                                                   _pick_and_place 0086  
                                                 __size_of_isdigit 0042  
                                                 __size_of_memmove 00FA  
                                                      ??___memrchr 0012  
                                                 __size_of_isspace 0060  
                                                         __ptext10 2546  
                                                         __ptext11 2638  
                                                         __ptext20 202E  
                                                         __ptext12 280E  
                                                         __ptext21 2B74  
                                                         __ptext13 2BD4  
                                                         __ptext30 0C32  
                                                         __ptext22 2CBC  
                                                         __ptext14 1C2C  
                                                         __ptext31 2324  
                                                         __ptext23 2DF0  
                                                         __ptext15 2A06  
                                                         __ptext32 21EC  
                                                         __ptext24 2E94  
                                                         __ptext16 2C7A  
                                                         __ptext33 2E3C  
                                                         __ptext25 2CFE  
                                                         __ptext17 28E0  
                                                         __ptext26 1508  
                                                         __ptext18 2978  
                                                         __ptext27 2C30  
                                                         __ptext19 2E5E  
                                                         __ptext28 068A  
                                                         __ptext29 2D40  
                                               __end_of_init_PORTS 2E5E  
                                               __end_of_init_USART 2D40  
                                                 __size_of_strncat 0086  
                                                 __size_of_strrchr 003A  
                                                   ?_Rx_char_USART 0001  
                                                    __size_of_atoi 01BE  
                                                    __size_of_main 0022  
                                                         _ms_delay 2BD4  
                                                         isa$xinst 000000  
                                                         _sequence 0072  
                                         __size_of_init_interrupts 000C  
                                                ??_change_sequence 000F  
                                                         int$flags 0077  
                                                 ??_serial_tx_char 0008  
                                                         _rotation 00AC  
                                           __end_of_pick_and_place 068A  
                                                       _INTCONbits 000FF2  
                                                         isdigit@c 0008  
                                                         memmove@d 0014  
                                                         memmove@n 0010  
                                                         memmove@s 0016  
                                                         intlevel2 2EA4  
                                                         isspace@c 0008  
                                               start_up_menu@i_540 00CB  
                                               start_up_menu@i_543 00CD  
                                               start_up_menu@i_546 00CF  
                                                   _displacement_X 00B0  
                                                   _displacement_Y 00AE  
                                            __size_of_print_string 008E  
                                         __end_of_remove_component 280E  
                                           pick_and_place@Componnt 0051  
                                                  ?_pick_and_place 0001  
                                                         strncat@d 000C  
                                                         strncat@n 0010  
                                                         strncat@s 000E  
                                                         strrchr@c 0018  
                                                         strrchr@s 0016  
                                                    ___fladd@signs 0014  
                                                  ??_Rx_char_USART 0001  
                                                     _print_string 2978  
                                                     ___fladd@aexp 0015  
                                                     ___fladd@bexp 0016  
                                                  start_up_menu@ip 00C8  
                                                   start_up_menu@i 00C9  
                                                      _roundf$1338 0049  
                                                      _roundf$1339 0043  
