

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 17 23:30:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64  0000                     
    65                           ; Version 2.20
    66                           ; Generated 12/02/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F452 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataCOMRAM
   101  0035A2                     __pidataCOMRAM:
   102                           	callstack 0
   103                           
   104                           ;initializer for _new_TMR1L@main$F825
   105  0035A2  60                 	db	96
   106                           
   107                           ;initializer for _new_TMR1H@main$F824
   108  0035A3  FA                 	db	250
   109                           
   110                           ;initializer for _State
   111  0035A4  30                 	db	48
   112                           
   113                           ;initializer for _new_TMR1H
   114  0035A5  FA                 	db	250
   115                           
   116                           	psect	idataBANK0
   117  003570                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for _Tosc@main$F792
   121  003570  37BD               	dw	14269
   122  003572  3486               	dw	13446
   123                           
   124                           ;initializer for _Tosc
   125  003574  37BD               	dw	14269
   126  003576  3486               	dw	13446
   127                           
   128                           ;initializer for add_component@F3143
   129  003578  20                 	db	32
   130  003579  00                 	db	0
   131                           
   132                           ;initializer for _steps_per_unit
   133  00357A  0001               	dw	1
   134                           
   135                           ;initializer for _lenth_of_array
   136  00357C  001E               	dw	30
   137                           
   138                           ;initializer for _new_TMR1L
   139  00357E  24                 	db	36
   140                           
   141                           ;initializer for _input_str
   142  00357F  20                 	db	32
   143  003580  00                 	db	0
   144  003581  00                 	db	0
   145  003582  00                 	db	0
   146  003583  00                 	db	0
   147  003584  00                 	db	0
   148  003585  00                 	db	0
   149  003586  00                 	db	0
   150  003587  00                 	db	0
   151  003588  00                 	db	0
   152                           
   153                           ;initializer for _sequence
   154  003589  43                 	db	67
   155  00358A  41                 	db	65
   156  00358B  42                 	db	66
   157  00358C  00                 	db	0
   158                           
   159                           	psect	mediumconst
   160  007D3A                     __pmediumconst:
   161                           	callstack 0
   162  007D3A  00                 	db	0
   163  007D3B  0000               	dw	0
   164  007D3D  4B00               	dw	19200
   165  007D3F                     __end_of_toint:
   166                           	callstack 0
   167  007D3F  0000               	dw	0
   168  007D41  4616               	dw	17942
   169  007D43                     __end_of_desired_BaudRate@main$F793:
   170                           	callstack 0
   171  007D43  0000               	dw	0
   172  007D45  4616               	dw	17942
   173  007D47                     __end_of_desired_BaudRate:
   174                           	callstack 0
   175  007D47  2400               	dw	9216
   176  007D49  4A74               	dw	19060
   177  007D4B                     __end_of_Fosc@main$F791:
   178                           	callstack 0
   179  007D4B  2400               	dw	9216
   180  007D4D  4A74               	dw	19060
   181  007D4F                     __end_of_Fosc:
   182                           	callstack 0
   183  007D4F                     STR_1:
   184  007D4F  0A                 	db	10
   185  007D50  0A                 	db	10
   186  007D51  31                 	db	49	;'1'
   187  007D52  2E                 	db	46
   188  007D53  20                 	db	32
   189  007D54  53                 	db	83	;'S'
   190  007D55  74                 	db	116	;'t'
   191  007D56  61                 	db	97	;'a'
   192  007D57  72                 	db	114	;'r'
   193  007D58  74                 	db	116	;'t'
   194  007D59  20                 	db	32
   195  007D5A  53                 	db	83	;'S'
   196  007D5B  65                 	db	101	;'e'
   197  007D5C  71                 	db	113	;'q'
   198  007D5D  75                 	db	117	;'u'
   199  007D5E  65                 	db	101	;'e'
   200  007D5F  6E                 	db	110	;'n'
   201  007D60  63                 	db	99	;'c'
   202  007D61  65                 	db	101	;'e'
   203  007D62  0A                 	db	10
   204  007D63  32                 	db	50	;'2'
   205  007D64  2E                 	db	46
   206  007D65  20                 	db	32
   207  007D66  43                 	db	67	;'C'
   208  007D67  68                 	db	104	;'h'
   209  007D68  61                 	db	97	;'a'
   210  007D69  6E                 	db	110	;'n'
   211  007D6A  67                 	db	103	;'g'
   212  007D6B  65                 	db	101	;'e'
   213  007D6C  20                 	db	32
   214  007D6D  73                 	db	115	;'s'
   215  007D6E  65                 	db	101	;'e'
   216  007D6F  71                 	db	113	;'q'
   217  007D70  75                 	db	117	;'u'
   218  007D71  65                 	db	101	;'e'
   219  007D72  6E                 	db	110	;'n'
   220  007D73  63                 	db	99	;'c'
   221  007D74  65                 	db	101	;'e'
   222  007D75  0A                 	db	10
   223  007D76  33                 	db	51	;'3'
   224  007D77  2E                 	db	46
   225  007D78  20                 	db	32
   226  007D79  41                 	db	65	;'A'
   227  007D7A  64                 	db	100	;'d'
   228  007D7B  64                 	db	100	;'d'
   229  007D7C  20                 	db	32
   230  007D7D  6E                 	db	110	;'n'
   231  007D7E  65                 	db	101	;'e'
   232  007D7F  77                 	db	119	;'w'
   233  007D80  20                 	db	32
   234  007D81  63                 	db	99	;'c'
   235  007D82  6F                 	db	111	;'o'
   236  007D83  6D                 	db	109	;'m'
   237  007D84  70                 	db	112	;'p'
   238  007D85  6F                 	db	111	;'o'
   239  007D86  6E                 	db	110	;'n'
   240  007D87  65                 	db	101	;'e'
   241  007D88  6E                 	db	110	;'n'
   242  007D89  74                 	db	116	;'t'
   243  007D8A  0A                 	db	10
   244  007D8B  34                 	db	52	;'4'
   245  007D8C  2E                 	db	46
   246  007D8D  20                 	db	32
   247  007D8E  52                 	db	82	;'R'
   248  007D8F  65                 	db	101	;'e'
   249  007D90  6D                 	db	109	;'m'
   250  007D91  6F                 	db	111	;'o'
   251  007D92  76                 	db	118	;'v'
   252  007D93  65                 	db	101	;'e'
   253  007D94  20                 	db	32
   254  007D95  61                 	db	97	;'a'
   255  007D96  20                 	db	32
   256  007D97  63                 	db	99	;'c'
   257  007D98  6F                 	db	111	;'o'
   258  007D99  6D                 	db	109	;'m'
   259  007D9A  70                 	db	112	;'p'
   260  007D9B  6F                 	db	111	;'o'
   261  007D9C  6E                 	db	110	;'n'
   262  007D9D  65                 	db	101	;'e'
   263  007D9E  6E                 	db	110	;'n'
   264  007D9F  74                 	db	116	;'t'
   265  007DA0  0A                 	db	10
   266  007DA1  35                 	db	53	;'5'
   267  007DA2  2E                 	db	46
   268  007DA3  20                 	db	32
   269  007DA4  52                 	db	82	;'R'
   270  007DA5  65                 	db	101	;'e'
   271  007DA6  74                 	db	116	;'t'
   272  007DA7  75                 	db	117	;'u'
   273  007DA8  72                 	db	114	;'r'
   274  007DA9  6E                 	db	110	;'n'
   275  007DAA  20                 	db	32
   276  007DAB  74                 	db	116	;'t'
   277  007DAC  6F                 	db	111	;'o'
   278  007DAD  20                 	db	32
   279  007DAE  49                 	db	73	;'I'
   280  007DAF  6E                 	db	110	;'n'
   281  007DB0  69                 	db	105	;'i'
   282  007DB1  74                 	db	116	;'t'
   283  007DB2  69                 	db	105	;'i'
   284  007DB3  61                 	db	97	;'a'
   285  007DB4  6C                 	db	108	;'l'
   286  007DB5  20                 	db	32
   287  007DB6  50                 	db	80	;'P'
   288  007DB7  6F                 	db	111	;'o'
   289  007DB8  73                 	db	115	;'s'
   290  007DB9  69                 	db	105	;'i'
   291  007DBA  74                 	db	116	;'t'
   292  007DBB  69                 	db	105	;'i'
   293  007DBC  6F                 	db	111	;'o'
   294  007DBD  6E                 	db	110	;'n'
   295  007DBE  00                 	db	0
   296  007DBF                     STR_16:
   297  007DBF  0A                 	db	10
   298  007DC0  63                 	db	99	;'c'
   299  007DC1  6F                 	db	111	;'o'
   300  007DC2  6D                 	db	109	;'m'
   301  007DC3  70                 	db	112	;'p'
   302  007DC4  6F                 	db	111	;'o'
   303  007DC5  6E                 	db	110	;'n'
   304  007DC6  65                 	db	101	;'e'
   305  007DC7  6E                 	db	110	;'n'
   306  007DC8  74                 	db	116	;'t'
   307  007DC9  20                 	db	32
   308  007DCA  69                 	db	105	;'i'
   309  007DCB  73                 	db	115	;'s'
   310  007DCC  20                 	db	32
   311  007DCD  6E                 	db	110	;'n'
   312  007DCE  6F                 	db	111	;'o'
   313  007DCF  74                 	db	116	;'t'
   314  007DD0  20                 	db	32
   315  007DD1  69                 	db	105	;'i'
   316  007DD2  6E                 	db	110	;'n'
   317  007DD3  20                 	db	32
   318  007DD4  74                 	db	116	;'t'
   319  007DD5  68                 	db	104	;'h'
   320  007DD6  65                 	db	101	;'e'
   321  007DD7  20                 	db	32
   322  007DD8  73                 	db	115	;'s'
   323  007DD9  65                 	db	101	;'e'
   324  007DDA  71                 	db	113	;'q'
   325  007DDB  75                 	db	117	;'u'
   326  007DDC  65                 	db	101	;'e'
   327  007DDD  6E                 	db	110	;'n'
   328  007DDE  63                 	db	99	;'c'
   329  007DDF  65                 	db	101	;'e'
   330  007DE0  2E                 	db	46
   331  007DE1  20                 	db	32
   332  007DE2  54                 	db	84	;'T'
   333  007DE3  72                 	db	114	;'r'
   334  007DE4  79                 	db	121	;'y'
   335  007DE5  20                 	db	32
   336  007DE6  73                 	db	115	;'s'
   337  007DE7  65                 	db	101	;'e'
   338  007DE8  6C                 	db	108	;'l'
   339  007DE9  65                 	db	101	;'e'
   340  007DEA  63                 	db	99	;'c'
   341  007DEB  74                 	db	116	;'t'
   342  007DEC  69                 	db	105	;'i'
   343  007DED  6E                 	db	110	;'n'
   344  007DEE  67                 	db	103	;'g'
   345  007DEF  20                 	db	32
   346  007DF0  61                 	db	97	;'a'
   347  007DF1  6E                 	db	110	;'n'
   348  007DF2  6F                 	db	111	;'o'
   349  007DF3  74                 	db	116	;'t'
   350  007DF4  68                 	db	104	;'h'
   351  007DF5  65                 	db	101	;'e'
   352  007DF6  72                 	db	114	;'r'
   353  007DF7  20                 	db	32
   354  007DF8  63                 	db	99	;'c'
   355  007DF9  6F                 	db	111	;'o'
   356  007DFA  6D                 	db	109	;'m'
   357  007DFB  70                 	db	112	;'p'
   358  007DFC  6F                 	db	111	;'o'
   359  007DFD  6E                 	db	110	;'n'
   360  007DFE  65                 	db	101	;'e'
   361  007DFF  6E                 	db	110	;'n'
   362  007E00  74                 	db	116	;'t'
   363  007E01  3A                 	db	58	;':'
   364  007E02  20                 	db	32
   365  007E03  0A                 	db	10
   366  007E04  00                 	db	0
   367  007E05                     STR_14:
   368  007E05  0A                 	db	10
   369  007E06  57                 	db	87	;'W'
   370  007E07  68                 	db	104	;'h'
   371  007E08  69                 	db	105	;'i'
   372  007E09  63                 	db	99	;'c'
   373  007E0A  68                 	db	104	;'h'
   374  007E0B  20                 	db	32
   375  007E0C  63                 	db	99	;'c'
   376  007E0D  6F                 	db	111	;'o'
   377  007E0E  6D                 	db	109	;'m'
   378  007E0F  70                 	db	112	;'p'
   379  007E10  6F                 	db	111	;'o'
   380  007E11  6E                 	db	110	;'n'
   381  007E12  65                 	db	101	;'e'
   382  007E13  6E                 	db	110	;'n'
   383  007E14  74                 	db	116	;'t'
   384  007E15  20                 	db	32
   385  007E16  77                 	db	119	;'w'
   386  007E17  6F                 	db	111	;'o'
   387  007E18  75                 	db	117	;'u'
   388  007E19  6C                 	db	108	;'l'
   389  007E1A  64                 	db	100	;'d'
   390  007E1B  20                 	db	32
   391  007E1C  79                 	db	121	;'y'
   392  007E1D  6F                 	db	111	;'o'
   393  007E1E  75                 	db	117	;'u'
   394  007E1F  20                 	db	32
   395  007E20  6C                 	db	108	;'l'
   396  007E21  69                 	db	105	;'i'
   397  007E22  6B                 	db	107	;'k'
   398  007E23  65                 	db	101	;'e'
   399  007E24  20                 	db	32
   400  007E25  74                 	db	116	;'t'
   401  007E26  6F                 	db	111	;'o'
   402  007E27  20                 	db	32
   403  007E28  72                 	db	114	;'r'
   404  007E29  65                 	db	101	;'e'
   405  007E2A  6D                 	db	109	;'m'
   406  007E2B  6F                 	db	111	;'o'
   407  007E2C  76                 	db	118	;'v'
   408  007E2D  65                 	db	101	;'e'
   409  007E2E  20                 	db	32
   410  007E2F  66                 	db	102	;'f'
   411  007E30  72                 	db	114	;'r'
   412  007E31  6F                 	db	111	;'o'
   413  007E32  6D                 	db	109	;'m'
   414  007E33  20                 	db	32
   415  007E34  74                 	db	116	;'t'
   416  007E35  68                 	db	104	;'h'
   417  007E36  65                 	db	101	;'e'
   418  007E37  20                 	db	32
   419  007E38  20                 	db	32
   420  007E39  73                 	db	115	;'s'
   421  007E3A  65                 	db	101	;'e'
   422  007E3B  71                 	db	113	;'q'
   423  007E3C  75                 	db	117	;'u'
   424  007E3D  65                 	db	101	;'e'
   425  007E3E  6E                 	db	110	;'n'
   426  007E3F  63                 	db	99	;'c'
   427  007E40  65                 	db	101	;'e'
   428  007E41  3F                 	db	63	;'?'
   429  007E42  0A                 	db	10
   430  007E43  00                 	db	0
   431  007E44                     STR_6:
   432  007E44  0A                 	db	10
   433  007E45  45                 	db	69	;'E'
   434  007E46  6E                 	db	110	;'n'
   435  007E47  74                 	db	116	;'t'
   436  007E48  65                 	db	101	;'e'
   437  007E49  72                 	db	114	;'r'
   438  007E4A  20                 	db	32
   439  007E4B  74                 	db	116	;'t'
   440  007E4C  68                 	db	104	;'h'
   441  007E4D  65                 	db	101	;'e'
   442  007E4E  20                 	db	32
   443  007E4F  63                 	db	99	;'c'
   444  007E50  6F                 	db	111	;'o'
   445  007E51  6D                 	db	109	;'m'
   446  007E52  70                 	db	112	;'p'
   447  007E53  6F                 	db	111	;'o'
   448  007E54  6E                 	db	110	;'n'
   449  007E55  65                 	db	101	;'e'
   450  007E56  6E                 	db	110	;'n'
   451  007E57  74                 	db	116	;'t'
   452  007E58  20                 	db	32
   453  007E59  79                 	db	121	;'y'
   454  007E5A  6F                 	db	111	;'o'
   455  007E5B  75                 	db	117	;'u'
   456  007E5C  20                 	db	32
   457  007E5D  77                 	db	119	;'w'
   458  007E5E  61                 	db	97	;'a'
   459  007E5F  6E                 	db	110	;'n'
   460  007E60  74                 	db	116	;'t'
   461  007E61  20                 	db	32
   462  007E62  74                 	db	116	;'t'
   463  007E63  6F                 	db	111	;'o'
   464  007E64  20                 	db	32
   465  007E65  61                 	db	97	;'a'
   466  007E66  64                 	db	100	;'d'
   467  007E67  64                 	db	100	;'d'
   468  007E68  3A                 	db	58	;':'
   469  007E69  20                 	db	32
   470  007E6A  41                 	db	65	;'A'
   471  007E6B  2C                 	db	44
   472  007E6C  20                 	db	32
   473  007E6D  42                 	db	66	;'B'
   474  007E6E  2C                 	db	44
   475  007E6F  20                 	db	32
   476  007E70  43                 	db	67	;'C'
   477  007E71  20                 	db	32
   478  007E72  6F                 	db	111	;'o'
   479  007E73  72                 	db	114	;'r'
   480  007E74  20                 	db	32
   481  007E75  44                 	db	68	;'D'
   482  007E76  3F                 	db	63	;'?'
   483  007E77  00                 	db	0
   484  007E78                     STR_4:
   485  007E78  0A                 	db	10
   486  007E79  50                 	db	80	;'P'
   487  007E7A  6C                 	db	108	;'l'
   488  007E7B  65                 	db	101	;'e'
   489  007E7C  61                 	db	97	;'a'
   490  007E7D  73                 	db	115	;'s'
   491  007E7E  65                 	db	101	;'e'
   492  007E7F  20                 	db	32
   493  007E80  67                 	db	103	;'g'
   494  007E81  69                 	db	105	;'i'
   495  007E82  76                 	db	118	;'v'
   496  007E83  65                 	db	101	;'e'
   497  007E84  20                 	db	32
   498  007E85  74                 	db	116	;'t'
   499  007E86  68                 	db	104	;'h'
   500  007E87  65                 	db	101	;'e'
   501  007E88  20                 	db	32
   502  007E89  6E                 	db	110	;'n'
   503  007E8A  65                 	db	101	;'e'
   504  007E8B  77                 	db	119	;'w'
   505  007E8C  20                 	db	32
   506  007E8D  73                 	db	115	;'s'
   507  007E8E  65                 	db	101	;'e'
   508  007E8F  71                 	db	113	;'q'
   509  007E90  75                 	db	117	;'u'
   510  007E91  65                 	db	101	;'e'
   511  007E92  6E                 	db	110	;'n'
   512  007E93  63                 	db	99	;'c'
   513  007E94  65                 	db	101	;'e'
   514  007E95  20                 	db	32
   515  007E96  61                 	db	97	;'a'
   516  007E97  73                 	db	115	;'s'
   517  007E98  20                 	db	32
   518  007E99  69                 	db	105	;'i'
   519  007E9A  6E                 	db	110	;'n'
   520  007E9B  70                 	db	112	;'p'
   521  007E9C  75                 	db	117	;'u'
   522  007E9D  74                 	db	116	;'t'
   523  007E9E  0D                 	db	13
   524  007E9F  00                 	db	0
   525  007EA0                     STR_12:
   526  007EA0  0A                 	db	10
   527  007EA1  45                 	db	69	;'E'
   528  007EA2  6E                 	db	110	;'n'
   529  007EA3  74                 	db	116	;'t'
   530  007EA4  65                 	db	101	;'e'
   531  007EA5  72                 	db	114	;'r'
   532  007EA6  20                 	db	32
   533  007EA7  74                 	db	116	;'t'
   534  007EA8  68                 	db	104	;'h'
   535  007EA9  65                 	db	101	;'e'
   536  007EAA  20                 	db	32
   537  007EAB  70                 	db	112	;'p'
   538  007EAC  6C                 	db	108	;'l'
   539  007EAD  61                 	db	97	;'a'
   540  007EAE  63                 	db	99	;'c'
   541  007EAF  65                 	db	101	;'e'
   542  007EB0  20                 	db	32
   543  007EB1  6F                 	db	111	;'o'
   544  007EB2  72                 	db	114	;'r'
   545  007EB3  69                 	db	105	;'i'
   546  007EB4  65                 	db	101	;'e'
   547  007EB5  6E                 	db	110	;'n'
   548  007EB6  74                 	db	116	;'t'
   549  007EB7  61                 	db	97	;'a'
   550  007EB8  74                 	db	116	;'t'
   551  007EB9  69                 	db	105	;'i'
   552  007EBA  6F                 	db	111	;'o'
   553  007EBB  6E                 	db	110	;'n'
   554  007EBC  3A                 	db	58	;':'
   555  007EBD  00                 	db	0
   556  007EBE                     STR_10:
   557  007EBE  0A                 	db	10
   558  007EBF  45                 	db	69	;'E'
   559  007EC0  6E                 	db	110	;'n'
   560  007EC1  74                 	db	116	;'t'
   561  007EC2  65                 	db	101	;'e'
   562  007EC3  72                 	db	114	;'r'
   563  007EC4  20                 	db	32
   564  007EC5  74                 	db	116	;'t'
   565  007EC6  68                 	db	104	;'h'
   566  007EC7  65                 	db	101	;'e'
   567  007EC8  20                 	db	32
   568  007EC9  70                 	db	112	;'p'
   569  007ECA  6C                 	db	108	;'l'
   570  007ECB  61                 	db	97	;'a'
   571  007ECC  63                 	db	99	;'c'
   572  007ECD  65                 	db	101	;'e'
   573  007ECE  20                 	db	32
   574  007ECF  70                 	db	112	;'p'
   575  007ED0  6F                 	db	111	;'o'
   576  007ED1  73                 	db	115	;'s'
   577  007ED2  69                 	db	105	;'i'
   578  007ED3  74                 	db	116	;'t'
   579  007ED4  69                 	db	105	;'i'
   580  007ED5  6F                 	db	111	;'o'
   581  007ED6  6E                 	db	110	;'n'
   582  007ED7  20                 	db	32
   583  007ED8  58                 	db	88	;'X'
   584  007ED9  3A                 	db	58	;':'
   585  007EDA  00                 	db	0
   586  007EDB                     STR_11:
   587  007EDB  0A                 	db	10
   588  007EDC  45                 	db	69	;'E'
   589  007EDD  6E                 	db	110	;'n'
   590  007EDE  74                 	db	116	;'t'
   591  007EDF  65                 	db	101	;'e'
   592  007EE0  72                 	db	114	;'r'
   593  007EE1  20                 	db	32
   594  007EE2  74                 	db	116	;'t'
   595  007EE3  68                 	db	104	;'h'
   596  007EE4  65                 	db	101	;'e'
   597  007EE5  20                 	db	32
   598  007EE6  70                 	db	112	;'p'
   599  007EE7  6C                 	db	108	;'l'
   600  007EE8  61                 	db	97	;'a'
   601  007EE9  63                 	db	99	;'c'
   602  007EEA  65                 	db	101	;'e'
   603  007EEB  20                 	db	32
   604  007EEC  70                 	db	112	;'p'
   605  007EED  6F                 	db	111	;'o'
   606  007EEE  73                 	db	115	;'s'
   607  007EEF  69                 	db	105	;'i'
   608  007EF0  74                 	db	116	;'t'
   609  007EF1  69                 	db	105	;'i'
   610  007EF2  6F                 	db	111	;'o'
   611  007EF3  6E                 	db	110	;'n'
   612  007EF4  20                 	db	32
   613  007EF5  59                 	db	89	;'Y'
   614  007EF6  3A                 	db	58	;':'
   615  007EF7  00                 	db	0
   616  007EF8                     STR_9:
   617  007EF8  0A                 	db	10
   618  007EF9  45                 	db	69	;'E'
   619  007EFA  6E                 	db	110	;'n'
   620  007EFB  74                 	db	116	;'t'
   621  007EFC  65                 	db	101	;'e'
   622  007EFD  72                 	db	114	;'r'
   623  007EFE  20                 	db	32
   624  007EFF  74                 	db	116	;'t'
   625  007F00  68                 	db	104	;'h'
   626  007F01  65                 	db	101	;'e'
   627  007F02  20                 	db	32
   628  007F03  70                 	db	112	;'p'
   629  007F04  69                 	db	105	;'i'
   630  007F05  63                 	db	99	;'c'
   631  007F06  6B                 	db	107	;'k'
   632  007F07  20                 	db	32
   633  007F08  6F                 	db	111	;'o'
   634  007F09  72                 	db	114	;'r'
   635  007F0A  69                 	db	105	;'i'
   636  007F0B  65                 	db	101	;'e'
   637  007F0C  6E                 	db	110	;'n'
   638  007F0D  74                 	db	116	;'t'
   639  007F0E  61                 	db	97	;'a'
   640  007F0F  74                 	db	116	;'t'
   641  007F10  69                 	db	105	;'i'
   642  007F11  6F                 	db	111	;'o'
   643  007F12  6E                 	db	110	;'n'
   644  007F13  3A                 	db	58	;':'
   645  007F14  00                 	db	0
   646  007F15                     STR_7:
   647  007F15  0A                 	db	10
   648  007F16  45                 	db	69	;'E'
   649  007F17  6E                 	db	110	;'n'
   650  007F18  74                 	db	116	;'t'
   651  007F19  65                 	db	101	;'e'
   652  007F1A  72                 	db	114	;'r'
   653  007F1B  20                 	db	32
   654  007F1C  74                 	db	116	;'t'
   655  007F1D  68                 	db	104	;'h'
   656  007F1E  65                 	db	101	;'e'
   657  007F1F  20                 	db	32
   658  007F20  70                 	db	112	;'p'
   659  007F21  69                 	db	105	;'i'
   660  007F22  63                 	db	99	;'c'
   661  007F23  6B                 	db	107	;'k'
   662  007F24  20                 	db	32
   663  007F25  70                 	db	112	;'p'
   664  007F26  6F                 	db	111	;'o'
   665  007F27  73                 	db	115	;'s'
   666  007F28  69                 	db	105	;'i'
   667  007F29  74                 	db	116	;'t'
   668  007F2A  69                 	db	105	;'i'
   669  007F2B  6F                 	db	111	;'o'
   670  007F2C  6E                 	db	110	;'n'
   671  007F2D  20                 	db	32
   672  007F2E  58                 	db	88	;'X'
   673  007F2F  3A                 	db	58	;':'
   674  007F30  00                 	db	0
   675  007F31                     STR_8:
   676  007F31  0A                 	db	10
   677  007F32  45                 	db	69	;'E'
   678  007F33  6E                 	db	110	;'n'
   679  007F34  74                 	db	116	;'t'
   680  007F35  65                 	db	101	;'e'
   681  007F36  72                 	db	114	;'r'
   682  007F37  20                 	db	32
   683  007F38  74                 	db	116	;'t'
   684  007F39  68                 	db	104	;'h'
   685  007F3A  65                 	db	101	;'e'
   686  007F3B  20                 	db	32
   687  007F3C  70                 	db	112	;'p'
   688  007F3D  69                 	db	105	;'i'
   689  007F3E  63                 	db	99	;'c'
   690  007F3F  6B                 	db	107	;'k'
   691  007F40  20                 	db	32
   692  007F41  70                 	db	112	;'p'
   693  007F42  6F                 	db	111	;'o'
   694  007F43  73                 	db	115	;'s'
   695  007F44  69                 	db	105	;'i'
   696  007F45  74                 	db	116	;'t'
   697  007F46  69                 	db	105	;'i'
   698  007F47  6F                 	db	111	;'o'
   699  007F48  6E                 	db	110	;'n'
   700  007F49  20                 	db	32
   701  007F4A  59                 	db	89	;'Y'
   702  007F4B  3A                 	db	58	;':'
   703  007F4C  00                 	db	0
   704  007F4D                     STR_3:
   705  007F4D  0A                 	db	10
   706  007F4E  54                 	db	84	;'T'
   707  007F4F  68                 	db	104	;'h'
   708  007F50  65                 	db	101	;'e'
   709  007F51  20                 	db	32
   710  007F52  63                 	db	99	;'c'
   711  007F53  75                 	db	117	;'u'
   712  007F54  72                 	db	114	;'r'
   713  007F55  72                 	db	114	;'r'
   714  007F56  65                 	db	101	;'e'
   715  007F57  6E                 	db	110	;'n'
   716  007F58  74                 	db	116	;'t'
   717  007F59  20                 	db	32
   718  007F5A  73                 	db	115	;'s'
   719  007F5B  65                 	db	101	;'e'
   720  007F5C  71                 	db	113	;'q'
   721  007F5D  75                 	db	117	;'u'
   722  007F5E  65                 	db	101	;'e'
   723  007F5F  6E                 	db	110	;'n'
   724  007F60  63                 	db	99	;'c'
   725  007F61  65                 	db	101	;'e'
   726  007F62  20                 	db	32
   727  007F63  69                 	db	105	;'i'
   728  007F64  73                 	db	115	;'s'
   729  007F65  3A                 	db	58	;':'
   730  007F66  20                 	db	32
   731  007F67  00                 	db	0
   732  007F68                     STR_5:
   733  007F68  0A                 	db	10
   734  007F69  0A                 	db	10
   735  007F6A  54                 	db	84	;'T'
   736  007F6B  68                 	db	104	;'h'
   737  007F6C  65                 	db	101	;'e'
   738  007F6D  20                 	db	32
   739  007F6E  43                 	db	67	;'C'
   740  007F6F  75                 	db	117	;'u'
   741  007F70  72                 	db	114	;'r'
   742  007F71  72                 	db	114	;'r'
   743  007F72  65                 	db	101	;'e'
   744  007F73  6E                 	db	110	;'n'
   745  007F74  74                 	db	116	;'t'
   746  007F75  20                 	db	32
   747  007F76  73                 	db	115	;'s'
   748  007F77  65                 	db	101	;'e'
   749  007F78  71                 	db	113	;'q'
   750  007F79  75                 	db	117	;'u'
   751  007F7A  65                 	db	101	;'e'
   752  007F7B  6E                 	db	110	;'n'
   753  007F7C  63                 	db	99	;'c'
   754  007F7D  65                 	db	101	;'e'
   755  007F7E  20                 	db	32
   756  007F7F  69                 	db	105	;'i'
   757  007F80  73                 	db	115	;'s'
   758  007F81  3A                 	db	58	;':'
   759  007F82  00                 	db	0
   760  007F83                     STR_2:
   761  007F83  0A                 	db	10
   762  007F84  0A                 	db	10
   763  007F85  53                 	db	83	;'S'
   764  007F86  74                 	db	116	;'t'
   765  007F87  61                 	db	97	;'a'
   766  007F88  72                 	db	114	;'r'
   767  007F89  74                 	db	116	;'t'
   768  007F8A  69                 	db	105	;'i'
   769  007F8B  6E                 	db	110	;'n'
   770  007F8C  67                 	db	103	;'g'
   771  007F8D  20                 	db	32
   772  007F8E  73                 	db	115	;'s'
   773  007F8F  65                 	db	101	;'e'
   774  007F90  71                 	db	113	;'q'
   775  007F91  75                 	db	117	;'u'
   776  007F92  65                 	db	101	;'e'
   777  007F93  6E                 	db	110	;'n'
   778  007F94  63                 	db	99	;'c'
   779  007F95  65                 	db	101	;'e'
   780  007F96  3A                 	db	58	;':'
   781  007F97  00                 	db	0
   782  007F98                     STR_13:
   783  007F98  0A                 	db	10
   784  007F99  0A                 	db	10
   785  007F9A  43                 	db	67	;'C'
   786  007F9B  6F                 	db	111	;'o'
   787  007F9C  6D                 	db	109	;'m'
   788  007F9D  70                 	db	112	;'p'
   789  007F9E  6F                 	db	111	;'o'
   790  007F9F  6E                 	db	110	;'n'
   791  007FA0  65                 	db	101	;'e'
   792  007FA1  6E                 	db	110	;'n'
   793  007FA2  74                 	db	116	;'t'
   794  007FA3  20                 	db	32
   795  007FA4  41                 	db	65	;'A'
   796  007FA5  64                 	db	100	;'d'
   797  007FA6  64                 	db	100	;'d'
   798  007FA7  65                 	db	101	;'e'
   799  007FA8  64                 	db	100	;'d'
   800  007FA9  3A                 	db	58	;':'
   801  007FAA  20                 	db	32
   802  007FAB  00                 	db	0
   803  007FAC                     STR_20:
   804  007FAC  0A                 	db	10
   805  007FAD  50                 	db	80	;'P'
   806  007FAE  6C                 	db	108	;'l'
   807  007FAF  61                 	db	97	;'a'
   808  007FB0  63                 	db	99	;'c'
   809  007FB1  69                 	db	105	;'i'
   810  007FB2  6E                 	db	110	;'n'
   811  007FB3  67                 	db	103	;'g'
   812  007FB4  20                 	db	32
   813  007FB5  63                 	db	99	;'c'
   814  007FB6  6F                 	db	111	;'o'
   815  007FB7  6D                 	db	109	;'m'
   816  007FB8  70                 	db	112	;'p'
   817  007FB9  6F                 	db	111	;'o'
   818  007FBA  6E                 	db	110	;'n'
   819  007FBB  65                 	db	101	;'e'
   820  007FBC  6E                 	db	110	;'n'
   821  007FBD  74                 	db	116	;'t'
   822  007FBE  3A                 	db	58	;':'
   823  007FBF  00                 	db	0
   824  007FC0                     STR_19:
   825  007FC0  0A                 	db	10
   826  007FC1  50                 	db	80	;'P'
   827  007FC2  69                 	db	105	;'i'
   828  007FC3  63                 	db	99	;'c'
   829  007FC4  6B                 	db	107	;'k'
   830  007FC5  69                 	db	105	;'i'
   831  007FC6  6E                 	db	110	;'n'
   832  007FC7  67                 	db	103	;'g'
   833  007FC8  20                 	db	32
   834  007FC9  63                 	db	99	;'c'
   835  007FCA  6F                 	db	111	;'o'
   836  007FCB  6D                 	db	109	;'m'
   837  007FCC  70                 	db	112	;'p'
   838  007FCD  6F                 	db	111	;'o'
   839  007FCE  6E                 	db	110	;'n'
   840  007FCF  65                 	db	101	;'e'
   841  007FD0  6E                 	db	110	;'n'
   842  007FD1  74                 	db	116	;'t'
   843  007FD2  3A                 	db	58	;':'
   844  007FD3  00                 	db	0
   845  007FD4                     STR_15:
   846  007FD4  0A                 	db	10
   847  007FD5  63                 	db	99	;'c'
   848  007FD6  6F                 	db	111	;'o'
   849  007FD7  6D                 	db	109	;'m'
   850  007FD8  70                 	db	112	;'p'
   851  007FD9  6F                 	db	111	;'o'
   852  007FDA  6E                 	db	110	;'n'
   853  007FDB  65                 	db	101	;'e'
   854  007FDC  6E                 	db	110	;'n'
   855  007FDD  74                 	db	116	;'t'
   856  007FDE  20                 	db	32
   857  007FDF  72                 	db	114	;'r'
   858  007FE0  65                 	db	101	;'e'
   859  007FE1  6D                 	db	109	;'m'
   860  007FE2  6F                 	db	111	;'o'
   861  007FE3  76                 	db	118	;'v'
   862  007FE4  65                 	db	101	;'e'
   863  007FE5  64                 	db	100	;'d'
   864  007FE6  00                 	db	0
   865  007FE7                     STR_17:
   866  007FE7  0A                 	db	10
   867  007FE8  43                 	db	67	;'C'
   868  007FE9  6F                 	db	111	;'o'
   869  007FEA  6D                 	db	109	;'m'
   870  007FEB  70                 	db	112	;'p'
   871  007FEC  6F                 	db	111	;'o'
   872  007FED  6E                 	db	110	;'n'
   873  007FEE  65                 	db	101	;'e'
   874  007FEF  6E                 	db	110	;'n'
   875  007FF0  74                 	db	116	;'t'
   876  007FF1  20                 	db	32
   877  007FF2  00                 	db	0
   878  007FF3                     STR_18:
   879  007FF3  20                 	db	32
   880  007FF4  6D                 	db	109	;'m'
   881  007FF5  69                 	db	105	;'i'
   882  007FF6  73                 	db	115	;'s'
   883  007FF7  73                 	db	115	;'s'
   884  007FF8  69                 	db	105	;'i'
   885  007FF9  6E                 	db	110	;'n'
   886  007FFA  67                 	db	103	;'g'
   887  007FFB  21                 	db	33
   888  007FFC  00                 	db	0
   889  007FFD                     STR_21:
   890  007FFD  51                 	db	81	;'Q'
   891  007FFE  00                 	db	0
   892  007FFF  00                 	db	0	; dummy byte at the end
   893  0000                     
   894                           	psect	nvCOMRAM
   895  000070                     __pnvCOMRAM:
   896                           	callstack 0
   897  000070                     _New_char_RX:
   898                           	callstack 0
   899  000070                     	ds	1
   900  0000                     _RCREG	set	4014
   901  0000                     _PORTD	set	3971
   902  0000                     _PORTB	set	3969
   903  0000                     _LATCbits	set	3979
   904  0000                     _TXREG	set	4013
   905  0000                     _RCSTAbits	set	4011
   906  0000                     _TXSTAbits	set	4012
   907  0000                     _SPBRG	set	4015
   908  0000                     _INTCON3bits	set	4080
   909  0000                     _INTCON3	set	4080
   910  0000                     _INTCON2	set	4081
   911  0000                     _INTCONbits	set	4082
   912  0000                     _PIE1bits	set	3997
   913  0000                     _PIR1bits	set	3998
   914  0000                     _TMR1L	set	4046
   915  0000                     _TMR1H	set	4047
   916  0000                     _T1CONbits	set	4045
   917  0000                     _TMR0L	set	4054
   918  0000                     _TMR0H	set	4055
   919  0000                     _T0CONbits	set	4053
   920  0000                     _TRISCbits	set	3988
   921  0000                     _PORTC	set	3970
   922  0000                     _LATC	set	3979
   923  0000                     _PORTA	set	3968
   924  0000                     _TRISB	set	3987
   925  0000                     _TRISA	set	3986
   926  0000                     _TRISD	set	3989
   927  0000                     _RCIF	set	31989
   928                           
   929                           ; #config settings
   930                           
   931                           	psect	cinit
   932  003166                     __pcinit:
   933                           	callstack 0
   934  003166                     start_initialization:
   935                           	callstack 0
   936  003166                     __initialization:
   937                           	callstack 0
   938                           
   939                           ; Initialize objects allocated to BANK0 (29 bytes)
   940                           ; load TBLPTR registers with __pidataBANK0
   941  003166  0E70               	movlw	low __pidataBANK0
   942  003168  6EF6               	movwf	tblptrl,c
   943  00316A  0E35               	movlw	high __pidataBANK0
   944  00316C  6EF7               	movwf	tblptrh,c
   945  00316E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   946  003170  6EF8               	movwf	tblptru,c
   947  003172  EE00  F0D7         	lfsr	0,__pdataBANK0
   948  003176  EE10 F01D          	lfsr	1,29
   949  00317A                     copy_data0:
   950  00317A  0009               	tblrd		*+
   951  00317C  CFF5 FFEE          	movff	tablat,postinc0
   952  003180  50E5               	movf	postdec1,w,c
   953  003182  50E1               	movf	fsr1l,w,c
   954  003184  E1FA               	bnz	copy_data0
   955                           
   956                           ; Initialize objects allocated to COMRAM (4 bytes)
   957                           ; load TBLPTR registers with __pidataCOMRAM
   958  003186  0EA2               	movlw	low __pidataCOMRAM
   959  003188  6EF6               	movwf	tblptrl,c
   960  00318A  0E35               	movlw	high __pidataCOMRAM
   961  00318C  6EF7               	movwf	tblptrh,c
   962  00318E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   963  003190  6EF8               	movwf	tblptru,c
   964  003192  EE00  F06C         	lfsr	0,__pdataCOMRAM
   965  003196  EE10 F004          	lfsr	1,4
   966  00319A                     copy_data1:
   967  00319A  0009               	tblrd		*+
   968  00319C  CFF5 FFEE          	movff	tablat,postinc0
   969  0031A0  50E5               	movf	postdec1,w,c
   970  0031A2  50E1               	movf	fsr1l,w,c
   971  0031A4  E1FA               	bnz	copy_data1
   972                           
   973                           ; Clear objects allocated to BANK1 (30 bytes)
   974  0031A6  EE01  F000         	lfsr	0,__pbssBANK1
   975  0031AA  0E1E               	movlw	30
   976  0031AC                     clear_0:
   977  0031AC  6AEE               	clrf	postinc0,c
   978  0031AE  06E8               	decf	wreg,f,c
   979  0031B0  E1FD               	bnz	clear_0
   980                           
   981                           ; Clear objects allocated to BANK0 (54 bytes)
   982  0031B2  EE00  F080         	lfsr	0,__pbssBANK0
   983  0031B6  0E36               	movlw	54
   984  0031B8                     clear_1:
   985  0031B8  6AEE               	clrf	postinc0,c
   986  0031BA  06E8               	decf	wreg,f,c
   987  0031BC  E1FD               	bnz	clear_1
   988                           
   989                           ; Clear objects allocated to COMRAM (4 bytes)
   990  0031BE  6A6B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   991  0031C0  6A6A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   992  0031C2  6A69               	clrf	(__pbssCOMRAM+1)& (0+255),c
   993  0031C4  6A68               	clrf	__pbssCOMRAM& (0+255),c
   994  0031C6                     end_of_initialization:
   995                           	callstack 0
   996  0031C6                     __end_of__initialization:
   997                           	callstack 0
   998  0031C6  9071               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   999  0031C8  9271               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1000  0031CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1001  0031CC  6EF8               	movwf	tblptru,c
  1002  0031CE  0100               	movlb	0
  1003  0031D0  EF31  F01A         	goto	_main	;jump to C main() function
  1004                           
  1005                           	psect	bssCOMRAM
  1006  000068                     __pbssCOMRAM:
  1007                           	callstack 0
  1008  000068                     _Steps:
  1009                           	callstack 0
  1010  000068                     	ds	2
  1011  00006A                     _stop:
  1012                           	callstack 0
  1013  00006A                     	ds	1
  1014  00006B                     _component_present:
  1015                           	callstack 0
  1016  00006B                     	ds	1
  1017                           
  1018                           	psect	dataCOMRAM
  1019  00006C                     __pdataCOMRAM:
  1020                           	callstack 0
  1021  00006C                     _new_TMR1L@main$F825:
  1022                           	callstack 0
  1023  00006C                     	ds	1
  1024  00006D                     _new_TMR1H@main$F824:
  1025                           	callstack 0
  1026  00006D                     	ds	1
  1027  00006E                     _State:
  1028                           	callstack 0
  1029  00006E                     	ds	1
  1030  00006F                     	ds	1
  1031                           
  1032                           	psect	bssBANK0
  1033  000080                     __pbssBANK0:
  1034                           	callstack 0
  1035  000080                     roundf@F528:
  1036                           	callstack 0
  1037  000080                     	ds	4
  1038  000084                     _angle_diff:
  1039                           	callstack 0
  1040  000084                     	ds	2
  1041  000086                     _Place_Angle_D:
  1042                           	callstack 0
  1043  000086                     	ds	2
  1044  000088                     _Y_Place_D:
  1045                           	callstack 0
  1046  000088                     	ds	2
  1047  00008A                     _X_Place_D:
  1048                           	callstack 0
  1049  00008A                     	ds	2
  1050  00008C                     _Pick_Angle_D:
  1051                           	callstack 0
  1052  00008C                     	ds	2
  1053  00008E                     _Y_Pick_D:
  1054                           	callstack 0
  1055  00008E                     	ds	2
  1056  000090                     _X_Pick_D:
  1057                           	callstack 0
  1058  000090                     	ds	2
  1059  000092                     _Step_Angle:
  1060                           	callstack 0
  1061  000092                     	ds	2
  1062  000094                     _Step_Z:
  1063                           	callstack 0
  1064  000094                     	ds	2
  1065  000096                     _Step_Y:
  1066                           	callstack 0
  1067  000096                     	ds	2
  1068  000098                     _Step_X:
  1069                           	callstack 0
  1070  000098                     	ds	2
  1071  00009A                     _Angle_diff:
  1072                           	callstack 0
  1073  00009A                     	ds	2
  1074  00009C                     _Y_diff:
  1075                           	callstack 0
  1076  00009C                     	ds	2
  1077  00009E                     _X_diff:
  1078                           	callstack 0
  1079  00009E                     	ds	2
  1080  0000A0                     _Place_Angle:
  1081                           	callstack 0
  1082  0000A0                     	ds	2
  1083  0000A2                     _Pick_Angle:
  1084                           	callstack 0
  1085  0000A2                     	ds	2
  1086  0000A4                     _Y_Place:
  1087                           	callstack 0
  1088  0000A4                     	ds	2
  1089  0000A6                     _Y_Pick:
  1090                           	callstack 0
  1091  0000A6                     	ds	2
  1092  0000A8                     _X_Place:
  1093                           	callstack 0
  1094  0000A8                     	ds	2
  1095  0000AA                     _X_Pick:
  1096                           	callstack 0
  1097  0000AA                     	ds	2
  1098  0000AC                     _rotation:
  1099                           	callstack 0
  1100  0000AC                     	ds	2
  1101  0000AE                     _displacement_Y:
  1102                           	callstack 0
  1103  0000AE                     	ds	2
  1104  0000B0                     _displacement_X:
  1105                           	callstack 0
  1106  0000B0                     	ds	2
  1107  0000B2                     _RX_Char:
  1108                           	callstack 0
  1109  0000B2                     	ds	1
  1110  0000B3                     _Rot_dir:
  1111                           	callstack 0
  1112  0000B3                     	ds	1
  1113  0000B4                     _Y_dir:
  1114                           	callstack 0
  1115  0000B4                     	ds	1
  1116  0000B5                     _X_dir:
  1117                           	callstack 0
  1118  0000B5                     	ds	1
  1119                           
  1120                           	psect	dataBANK0
  1121  0000D7                     __pdataBANK0:
  1122                           	callstack 0
  1123  0000D7                     	ds	4
  1124  0000DB                     	ds	4
  1125  0000DF                     add_component@F3143:
  1126                           	callstack 0
  1127  0000DF                     	ds	2
  1128  0000E1                     _steps_per_unit:
  1129                           	callstack 0
  1130  0000E1                     	ds	2
  1131  0000E3                     _lenth_of_array:
  1132                           	callstack 0
  1133  0000E3                     	ds	2
  1134  0000E5                     	ds	1
  1135  0000E6                     _input_str:
  1136                           	callstack 0
  1137  0000E6                     	ds	10
  1138  0000F0                     _sequence:
  1139                           	callstack 0
  1140  0000F0                     	ds	4
  1141                           
  1142                           	psect	bssBANK1
  1143  000100                     __pbssBANK1:
  1144                           	callstack 0
  1145  000100                     _testarray:
  1146                           	callstack 0
  1147  000100                     	ds	30
  1148                           
  1149                           	psect	cstackBANK0
  1150  0000B6                     __pcstackBANK0:
  1151                           	callstack 0
  1152  0000B6                     pick_and_place@i:
  1153                           	callstack 0
  1154  0000B6                     _roundf$1690:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x0
  1158  0000B6                     	ds	2
  1159  0000B8                     _pick_and_place$911:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x2
  1163  0000B8                     	ds	2
  1164  0000BA                     pick_and_place@i_912:
  1165                           	callstack 0
  1166  0000BA                     roundf@e:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x4
  1170  0000BA                     	ds	2
  1171  0000BC                     _pick_and_place$914:
  1172                           	callstack 0
  1173  0000BC                     _roundf$1689:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x6
  1177  0000BC                     	ds	2
  1178  0000BE                     pick_and_place@i_915:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x8
  1182  0000BE                     	ds	2
  1183  0000C0                     _pick_and_place$917:
  1184                           	callstack 0
  1185  0000C0                     roundf@u:
  1186                           	callstack 0
  1187                           
  1188                           ; 4 bytes @ 0xA
  1189  0000C0                     	ds	2
  1190  0000C2                     pick_and_place@i_919:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0xC
  1194  0000C2                     	ds	2
  1195  0000C4                     pick_and_place@i_922:
  1196                           	callstack 0
  1197  0000C4                     roundf@y:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0xE
  1201  0000C4                     	ds	2
  1202  0000C6                     pick_and_place@i_924:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x10
  1206  0000C6                     	ds	2
  1207  0000C8                     _pick_and_place$925:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x12
  1211  0000C8                     	ds	2
  1212  0000CA                     pick_and_place@i_926:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x14
  1216  0000CA                     	ds	2
  1217  0000CC                     _pick_and_place$927:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x16
  1221  0000CC                     	ds	2
  1222  0000CE                     pick_and_place@i_928:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x18
  1226  0000CE                     	ds	2
  1227  0000D0                     _pick_and_place$929:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x1A
  1231  0000D0                     	ds	2
  1232  0000D2                     pick_and_place@i_930:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x1C
  1236  0000D2                     	ds	2
  1237  0000D4                     pick_and_place@i_931:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x1E
  1241  0000D4                     	ds	2
  1242  0000D6                     pick_and_place@Componnt:
  1243                           	callstack 0
  1244                           
  1245                           ; 1 bytes @ 0x20
  1246  0000D6                     	ds	1
  1247                           
  1248                           	psect	cstackCOMRAM
  1249  000001                     __pcstackCOMRAM:
  1250                           	callstack 0
  1251  000001                     set_new_pos@nTMR1L:
  1252                           	callstack 0
  1253                           
  1254                           ; 1 bytes @ 0x0
  1255  000001                     	ds	1
  1256  000002                     set_new_pos@nTMR1H:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x1
  1260  000002                     	ds	1
  1261  000003                     ??_Rx_char_USART:
  1262                           
  1263                           ; 1 bytes @ 0x2
  1264  000003                     	ds	5
  1265  000008                     Rx_char_USART@i:
  1266                           	callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x7
  1269  000008                     	ds	2
  1270  00000A                     ?_strlen:
  1271                           	callstack 0
  1272  00000A                     ?_isspace:
  1273                           	callstack 0
  1274  00000A                     ?_isdigit:
  1275                           	callstack 0
  1276  00000A                     ?___wmul:
  1277                           	callstack 0
  1278  00000A                     ?___fladd:
  1279                           	callstack 0
  1280  00000A                     ?___flneg:
  1281                           	callstack 0
  1282  00000A                     ?___xxtofl:
  1283                           	callstack 0
  1284  00000A                     print_char@chr:
  1285                           	callstack 0
  1286  00000A                     Tweezer@action:
  1287                           	callstack 0
  1288  00000A                     fetch_parameters@Componnt:
  1289                           	callstack 0
  1290  00000A                     print_string@strng:
  1291                           	callstack 0
  1292  00000A                     ms_delay@val:
  1293                           	callstack 0
  1294  00000A                     ___wmul@multiplier:
  1295                           	callstack 0
  1296  00000A                     isdigit@c:
  1297                           	callstack 0
  1298  00000A                     isspace@c:
  1299                           	callstack 0
  1300  00000A                     strlen@s:
  1301                           	callstack 0
  1302  00000A                     ___flneg@f1:
  1303                           	callstack 0
  1304  00000A                     ___fladd@b:
  1305                           	callstack 0
  1306  00000A                     ___xxtofl@val:
  1307                           	callstack 0
  1308                           
  1309                           ; 4 bytes @ 0x9
  1310  00000A                     	ds	2
  1311  00000C                     ??_isspace:
  1312  00000C                     ??_isdigit:
  1313  00000C                     ??_print_string:
  1314  00000C                     ms_delay@i:
  1315                           	callstack 0
  1316  00000C                     ___wmul@multiplicand:
  1317                           	callstack 0
  1318  00000C                     strlen@a:
  1319                           	callstack 0
  1320                           
  1321                           ; 2 bytes @ 0xB
  1322  00000C                     	ds	2
  1323  00000E                     ??___xxtofl:
  1324  00000E                     ?___memrchr:
  1325                           	callstack 0
  1326  00000E                     print_string@i:
  1327                           	callstack 0
  1328  00000E                     ms_delay@j:
  1329                           	callstack 0
  1330  00000E                     ___wmul@product:
  1331                           	callstack 0
  1332  00000E                     memmove@d1:
  1333                           	callstack 0
  1334  00000E                     strcpy@dest:
  1335                           	callstack 0
  1336  00000E                     ___memrchr@m:
  1337                           	callstack 0
  1338  00000E                     ___fladd@a:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0xD
  1342  00000E                     	ds	2
  1343  000010                     ??_change_sequence:
  1344  000010                     ??_Z_axis:
  1345  000010                     ??_check_component:
  1346  000010                     X_axis@direction:
  1347                           	callstack 0
  1348  000010                     Y_axis@direction:
  1349                           	callstack 0
  1350  000010                     Twister@direction:
  1351                           	callstack 0
  1352  000010                     _isspace$1418:
  1353                           	callstack 0
  1354  000010                     memmove@s1:
  1355                           	callstack 0
  1356  000010                     strcpy@src:
  1357                           	callstack 0
  1358  000010                     ___memrchr@c:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0xF
  1362  000010                     	ds	1
  1363  000011                     ?_atoi:
  1364                           	callstack 0
  1365  000011                     atoi@s:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x10
  1369  000011                     	ds	1
  1370  000012                     ??___fladd:
  1371  000012                     Z_axis@direction:
  1372                           	callstack 0
  1373  000012                     check_component@Compnt:
  1374                           	callstack 0
  1375  000012                     ___xxtofl@sign:
  1376                           	callstack 0
  1377  000012                     memmove@n:
  1378                           	callstack 0
  1379  000012                     strcpy@s:
  1380                           	callstack 0
  1381  000012                     ___memrchr@n:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x11
  1385  000012                     	ds	1
  1386  000013                     ??_return_to_initial:
  1387  000013                     ??_atoi:
  1388  000013                     ___xxtofl@exp:
  1389                           	callstack 0
  1390  000013                     change_sequence@i:
  1391                           	callstack 0
  1392  000013                     check_component@j:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x12
  1396  000013                     	ds	1
  1397  000014                     ??_memmove:
  1398  000014                     ??___memrchr:
  1399  000014                     return_to_initial@i:
  1400                           	callstack 0
  1401  000014                     strcpy@d:
  1402                           	callstack 0
  1403  000014                     ___xxtofl@arg:
  1404                           	callstack 0
  1405                           
  1406                           ; 4 bytes @ 0x13
  1407  000014                     	ds	2
  1408  000016                     ___fladd@signs:
  1409                           	callstack 0
  1410  000016                     return_to_initial@i_934:
  1411                           	callstack 0
  1412  000016                     memmove@d:
  1413                           	callstack 0
  1414  000016                     strcat@dest:
  1415                           	callstack 0
  1416  000016                     ___memrchr@s:
  1417                           	callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x15
  1420  000016                     	ds	1
  1421  000017                     ___fladd@aexp:
  1422                           	callstack 0
  1423  000017                     atoi@neg:
  1424                           	callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x16
  1427  000017                     	ds	1
  1428  000018                     ?_strrchr:
  1429                           	callstack 0
  1430  000018                     ?___fldiv:
  1431                           	callstack 0
  1432  000018                     ___fladd@bexp:
  1433                           	callstack 0
  1434  000018                     return_to_initial@i_935:
  1435                           	callstack 0
  1436  000018                     memmove@s:
  1437                           	callstack 0
  1438  000018                     strcat@src:
  1439                           	callstack 0
  1440  000018                     strrchr@s:
  1441                           	callstack 0
  1442  000018                     ___fldiv@b:
  1443                           	callstack 0
  1444                           
  1445                           ; 4 bytes @ 0x17
  1446  000018                     	ds	1
  1447  000019                     ___fladd@grs:
  1448                           	callstack 0
  1449  000019                     _atoi$1400:
  1450                           	callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x18
  1453  000019                     	ds	1
  1454  00001A                     ?___flsub:
  1455                           	callstack 0
  1456  00001A                     return_to_initial@i_936:
  1457                           	callstack 0
  1458  00001A                     strrchr@c:
  1459                           	callstack 0
  1460  00001A                     ___flsub@b:
  1461                           	callstack 0
  1462                           
  1463                           ; 4 bytes @ 0x19
  1464  00001A                     	ds	1
  1465  00001B                     _atoi$1402:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x1A
  1469  00001B                     	ds	1
  1470  00001C                     remove_component@ptr:
  1471                           	callstack 0
  1472  00001C                     ___fldiv@a:
  1473                           	callstack 0
  1474                           
  1475                           ; 4 bytes @ 0x1B
  1476  00001C                     	ds	1
  1477  00001D                     _atoi$1401:
  1478                           	callstack 0
  1479                           
  1480                           ; 1 bytes @ 0x1C
  1481  00001D                     	ds	1
  1482  00001E                     remove_component@rm_comp:
  1483                           	callstack 0
  1484  00001E                     atoi@n:
  1485                           	callstack 0
  1486  00001E                     ___flsub@a:
  1487                           	callstack 0
  1488                           
  1489                           ; 4 bytes @ 0x1D
  1490  00001E                     	ds	1
  1491  00001F                     remove_component@indxToDel:
  1492                           	callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x1E
  1495  00001F                     	ds	1
  1496  000020                     ??___fldiv:
  1497  000020                     add_component@add_componnt:
  1498                           	callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x1F
  1501  000020                     	ds	2
  1502  000022                     
  1503                           ; 1 bytes @ 0x21
  1504  000022                     	ds	2
  1505  000024                     ___fldiv@rem:
  1506                           	callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x23
  1509  000024                     	ds	4
  1510  000028                     ___fldiv@sign:
  1511                           	callstack 0
  1512                           
  1513                           ; 1 bytes @ 0x27
  1514  000028                     	ds	1
  1515  000029                     ___fldiv@new_exp:
  1516                           	callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x28
  1519  000029                     	ds	2
  1520  00002B                     ___fldiv@grs:
  1521                           	callstack 0
  1522                           
  1523                           ; 4 bytes @ 0x2A
  1524  00002B                     	ds	4
  1525  00002F                     ___fldiv@bexp:
  1526                           	callstack 0
  1527                           
  1528                           ; 1 bytes @ 0x2E
  1529  00002F                     	ds	1
  1530  000030                     ___fldiv@aexp:
  1531                           	callstack 0
  1532                           
  1533                           ; 1 bytes @ 0x2F
  1534  000030                     	ds	1
  1535  000031                     ?___flmul:
  1536                           	callstack 0
  1537  000031                     ___flmul@b:
  1538                           	callstack 0
  1539                           
  1540                           ; 4 bytes @ 0x30
  1541  000031                     	ds	4
  1542  000035                     ___flmul@a:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x34
  1546  000035                     	ds	4
  1547  000039                     ??___flmul:
  1548                           
  1549                           ; 1 bytes @ 0x38
  1550  000039                     	ds	4
  1551  00003D                     ___flmul@sign:
  1552                           	callstack 0
  1553                           
  1554                           ; 1 bytes @ 0x3C
  1555  00003D                     	ds	1
  1556  00003E                     ___flmul@aexp:
  1557                           	callstack 0
  1558                           
  1559                           ; 1 bytes @ 0x3D
  1560  00003E                     	ds	1
  1561  00003F                     ___flmul@grs:
  1562                           	callstack 0
  1563                           
  1564                           ; 4 bytes @ 0x3E
  1565  00003F                     	ds	4
  1566  000043                     ___flmul@bexp:
  1567                           	callstack 0
  1568                           
  1569                           ; 1 bytes @ 0x42
  1570  000043                     	ds	1
  1571  000044                     ___flmul@prod:
  1572                           	callstack 0
  1573                           
  1574                           ; 4 bytes @ 0x43
  1575  000044                     	ds	4
  1576  000048                     ___flmul@temp:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x47
  1580  000048                     	ds	2
  1581  00004A                     ___flge@ff1:
  1582                           	callstack 0
  1583                           
  1584                           ; 4 bytes @ 0x49
  1585  00004A                     	ds	4
  1586  00004E                     ___flge@ff2:
  1587                           	callstack 0
  1588                           
  1589                           ; 4 bytes @ 0x4D
  1590  00004E                     	ds	4
  1591  000052                     ??___flge:
  1592                           
  1593                           ; 1 bytes @ 0x51
  1594  000052                     	ds	4
  1595  000056                     ??_pick_and_place:
  1596  000056                     ?_roundf:
  1597                           	callstack 0
  1598  000056                     roundf@x:
  1599                           	callstack 0
  1600                           
  1601                           ; 4 bytes @ 0x55
  1602  000056                     	ds	2
  1603  000058                     ??_start_up_menu:
  1604                           
  1605                           ; 1 bytes @ 0x57
  1606  000058                     	ds	2
  1607  00005A                     ??_roundf:
  1608  00005A                     start_up_menu@i:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x59
  1612  00005A                     	ds	4
  1613  00005E                     ?___fltol:
  1614                           	callstack 0
  1615  00005E                     ___fltol@f1:
  1616                           	callstack 0
  1617                           
  1618                           ; 4 bytes @ 0x5D
  1619  00005E                     	ds	4
  1620  000062                     ??___fltol:
  1621                           
  1622                           ; 1 bytes @ 0x61
  1623  000062                     	ds	4
  1624  000066                     ___fltol@sign1:
  1625                           	callstack 0
  1626                           
  1627                           ; 1 bytes @ 0x65
  1628  000066                     	ds	1
  1629  000067                     ___fltol@exp1:
  1630                           	callstack 0
  1631                           
  1632                           ; 1 bytes @ 0x66
  1633  000067                     	ds	1
  1634  000068                     
  1635                           ; 1 bytes @ 0x67
  1636 ;;
  1637 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1638 ;;
  1639 ;; *************** function _main *****************
  1640 ;; Defined at:
  1641 ;;		line 198 in file "main.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1655 ;;      Params:         0       0       0       0       0       0       0
  1656 ;;      Locals:         0       0       0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0       0
  1658 ;;      Totals:         0       0       0       0       0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels required when called: 6
  1661 ;; This function calls:
  1662 ;;		_init_PORTS
  1663 ;;		_init_Timers
  1664 ;;		_init_USART
  1665 ;;		_init_interrupts
  1666 ;;		_start_up_menu
  1667 ;; This function is called by:
  1668 ;;		Startup code after reset
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text0
  1673  003462                     __ptext0:
  1674                           	callstack 0
  1675  003462                     _main:
  1676                           	callstack 25
  1677  003462  FFFF               	dw	65535	; assembler added errata NOP
  1678                           
  1679                           ;main.c: 201:     init_PORTS();
  1680  003464  EC86  F01A         	call	_init_PORTS	;wreg free
  1681  003468                     
  1682                           ;main.c: 202:     init_USART();
  1683  003468  ECF4  F019         	call	_init_USART	;wreg free
  1684  00346C                     
  1685                           ;main.c: 203:     init_interrupts();
  1686  00346C  ECA8  F01A         	call	_init_interrupts	;wreg free
  1687  003470                     
  1688                           ;main.c: 205:     init_Timers();
  1689  003470  EC71  F01A         	call	_init_Timers	;wreg free
  1690  003474                     
  1691                           ;main.c: 207:     (INTCONbits.GIE = 1);
  1692  003474  8EF2               	bsf	242,7,c	;volatile
  1693  003476                     
  1694                           ;main.c: 208:     T0CONbits.TMR0ON = 1;
  1695  003476  8ED5               	bsf	213,7,c	;volatile
  1696  003478                     
  1697                           ;main.c: 209:  T1CONbits.TMR1ON = 1;
  1698  003478  80CD               	bsf	205,0,c	;volatile
  1699  00347A                     
  1700                           ;main.c: 210:  LATCbits.LC2 = 1;
  1701  00347A  848B               	bsf	139,2,c	;volatile
  1702  00347C                     l5051:
  1703  00347C  FFFF               	dw	65535	; assembler added errata NOP
  1704                           
  1705                           ;main.c: 213:         New_char_RX=0;
  1706  00347E  0E00               	movlw	0
  1707  003480  6E70               	movwf	_New_char_RX^0,c
  1708  003482                     
  1709                           ;main.c: 214:         start_up_menu();
  1710  003482  ECED  F010         	call	_start_up_menu	;wreg free
  1711  003486  EF3E  F01A         	goto	l5051
  1712  00348A  EFDF  F000         	goto	start
  1713  00348E                     __end_of_main:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function _start_up_menu *****************
  1717 ;; Defined at:
  1718 ;;		line 222 in file "main.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  i               2   89[COMRAM] int 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1732 ;;      Params:         0       0       0       0       0       0       0
  1733 ;;      Locals:         2       0       0       0       0       0       0
  1734 ;;      Temps:          2       0       0       0       0       0       0
  1735 ;;      Totals:         4       0       0       0       0       0       0
  1736 ;;Total ram usage:        4 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 5
  1739 ;; This function calls:
  1740 ;;		_add_component
  1741 ;;		_change_sequence
  1742 ;;		_pick_and_place
  1743 ;;		_print_string
  1744 ;;		_remove_component
  1745 ;;		_return_to_initial
  1746 ;;		_strlen
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text1
  1753  0021DA                     __ptext1:
  1754                           	callstack 0
  1755  0021DA                     _start_up_menu:
  1756                           	callstack 0
  1757  0021DA  FFFF               	dw	65535	; assembler added errata NOP
  1758  0021DC                     
  1759                           ;main.c: 224:     print_string("\n\n1. Start Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component\n5. Return to Initial Position");
  1760  0021DC  0E4F               	movlw	low STR_1
  1761  0021DE  6E0A               	movwf	print_string@strng^0,c
  1762  0021E0  0E7D               	movlw	high STR_1
  1763  0021E2  6E0B               	movwf	(print_string@strng+1)^0,c
  1764  0021E4  EC9E  F017         	call	_print_string	;wreg free
  1765  0021E8                     l4991:
  1766  0021E8  FFFF               	dw	65535	; assembler added errata NOP
  1767                           
  1768                           ;main.c: 227:         if(New_char_RX){
  1769  0021EA  5070               	movf	_New_char_RX^0,w,c
  1770  0021EC  B4D8               	btfsc	status,2,c
  1771  0021EE  EFFB  F010         	goto	u6191
  1772  0021F2  EFFE  F010         	goto	u6190
  1773  0021F6                     u6191:
  1774  0021F6  FFFF               	dw	65535	; assembler added errata NOP
  1775  0021F8  EFF4  F010         	goto	l4991
  1776  0021FC                     u6190:
  1777  0021FC  FFFF               	dw	65535	; assembler added errata NOP
  1778  0021FE                     
  1779                           ;main.c: 228:             New_char_RX=0;
  1780  0021FE  0E00               	movlw	0
  1781  002200  6E70               	movwf	_New_char_RX^0,c
  1782                           
  1783                           ;main.c: 229:             switch(State){
  1784  002202  EF79  F011         	goto	l5029
  1785  002206                     l4995:
  1786  002206  FFFF               	dw	65535	; assembler added errata NOP
  1787                           
  1788                           ;main.c: 231:                     print_string("\n\nStarting sequence:");
  1789  002208  0E83               	movlw	low STR_2
  1790  00220A  6E0A               	movwf	print_string@strng^0,c
  1791  00220C  0E7F               	movlw	high STR_2
  1792  00220E  6E0B               	movwf	(print_string@strng+1)^0,c
  1793  002210  EC9E  F017         	call	_print_string	;wreg free
  1794                           
  1795                           ;main.c: 232:                     print_string(sequence);
  1796  002214  0EF0               	movlw	low _sequence
  1797  002216  6E0A               	movwf	print_string@strng^0,c
  1798  002218  0E00               	movlw	high _sequence
  1799  00221A  6E0B               	movwf	(print_string@strng+1)^0,c
  1800  00221C  EC9E  F017         	call	_print_string	;wreg free
  1801  002220                     
  1802                           ;main.c: 234:                     return_to_initial();
  1803  002220  ECA3  F011         	call	_return_to_initial	;wreg free
  1804  002224                     
  1805                           ;main.c: 235:                         X_diff=0;
  1806  002224  0E00               	movlw	0
  1807  002226  0100               	movlb	0	; () banked
  1808  002228  6F9F               	movwf	(_X_diff+1)& (0+255),b
  1809  00222A  0E00               	movlw	0
  1810  00222C  6F9E               	movwf	_X_diff& (0+255),b
  1811  00222E                     
  1812                           ; BSR set to: 0
  1813                           ;main.c: 236:                         Y_diff=0;
  1814  00222E  0E00               	movlw	0
  1815  002230  6F9D               	movwf	(_Y_diff+1)& (0+255),b
  1816  002232  0E00               	movlw	0
  1817  002234  6F9C               	movwf	_Y_diff& (0+255),b
  1818  002236                     
  1819                           ; BSR set to: 0
  1820                           ;main.c: 237:                         Angle_diff=0;
  1821  002236  0E00               	movlw	0
  1822  002238  6F9B               	movwf	(_Angle_diff+1)& (0+255),b
  1823  00223A  0E00               	movlw	0
  1824  00223C  6F9A               	movwf	_Angle_diff& (0+255),b
  1825                           
  1826                           ;main.c: 239:                         while(!stop){
  1827  00223E  EF51  F011         	goto	l5015
  1828  002242                     l5005:
  1829  002242  FFFF               	dw	65535	; assembler added errata NOP
  1830                           
  1831                           ;main.c: 240:                         for(int i=0; i<strlen(sequence) && !stop;i++){
  1832  002244  0E00               	movlw	0
  1833  002246  6E5B               	movwf	(start_up_menu@i+1)^0,c
  1834  002248  0E00               	movlw	0
  1835  00224A  6E5A               	movwf	start_up_menu@i^0,c
  1836  00224C  EF34  F011         	goto	l5011
  1837  002250                     l5007:
  1838  002250  FFFF               	dw	65535	; assembler added errata NOP
  1839                           
  1840                           ;main.c: 241:                             pick_and_place(sequence[i]);
  1841  002252  0EF0               	movlw	low _sequence
  1842  002254  245A               	addwf	start_up_menu@i^0,w,c
  1843  002256  6ED9               	movwf	fsr2l,c
  1844  002258  0E00               	movlw	high _sequence
  1845  00225A  205B               	addwfc	(start_up_menu@i+1)^0,w,c
  1846  00225C  6EDA               	movwf	fsr2h,c
  1847  00225E  50DF               	movf	indf2,w,c
  1848  002260  ECE1  F000         	call	_pick_and_place
  1849  002264                     
  1850                           ;main.c: 242:                         }
  1851  002264  4A5A               	infsnz	start_up_menu@i^0,f,c
  1852  002266  2A5B               	incf	(start_up_menu@i+1)^0,f,c
  1853  002268                     l5011:
  1854  002268  FFFF               	dw	65535	; assembler added errata NOP
  1855  00226A  0EF0               	movlw	low _sequence
  1856  00226C  6E0A               	movwf	strlen@s^0,c
  1857  00226E  0E00               	movlw	high _sequence
  1858  002270  6E0B               	movwf	(strlen@s+1)^0,c
  1859  002272  EC91  F019         	call	_strlen	;wreg free
  1860  002276  500A               	movf	?_strlen^0,w,c
  1861  002278  5C5A               	subwf	start_up_menu@i^0,w,c
  1862  00227A  500B               	movf	(?_strlen+1)^0,w,c
  1863  00227C  585B               	subwfb	(start_up_menu@i+1)^0,w,c
  1864  00227E  B0D8               	btfsc	status,0,c
  1865  002280  EF44  F011         	goto	u6201
  1866  002284  EF47  F011         	goto	u6200
  1867  002288                     u6201:
  1868  002288  FFFF               	dw	65535	; assembler added errata NOP
  1869  00228A  EF51  F011         	goto	l5015
  1870  00228E                     u6200:
  1871  00228E  FFFF               	dw	65535	; assembler added errata NOP
  1872  002290  506A               	movf	_stop^0,w,c
  1873  002292  B4D8               	btfsc	status,2,c
  1874  002294  EF4E  F011         	goto	u6211
  1875  002298  EF51  F011         	goto	u6210
  1876  00229C                     u6211:
  1877  00229C  FFFF               	dw	65535	; assembler added errata NOP
  1878  00229E  EF28  F011         	goto	l5007
  1879  0022A2                     u6210:
  1880  0022A2                     l5015:
  1881  0022A2  FFFF               	dw	65535	; assembler added errata NOP
  1882                           
  1883                           ;main.c: 239:                         while(!stop){
  1884  0022A4  506A               	movf	_stop^0,w,c
  1885  0022A6  B4D8               	btfsc	status,2,c
  1886  0022A8  EF58  F011         	goto	u6221
  1887  0022AC  EF5B  F011         	goto	u6220
  1888  0022B0                     u6221:
  1889  0022B0  FFFF               	dw	65535	; assembler added errata NOP
  1890  0022B2  EF21  F011         	goto	l5005
  1891  0022B6                     u6220:
  1892  0022B6  FFFF               	dw	65535	; assembler added errata NOP
  1893  0022B8  EFA0  F011         	goto	l274
  1894  0022BC                     l5017:
  1895  0022BC  FFFF               	dw	65535	; assembler added errata NOP
  1896                           
  1897                           ;main.c: 252:                     change_sequence();
  1898  0022BE  ECEE  F017         	call	_change_sequence	;wreg free
  1899                           
  1900                           ;main.c: 254:                     break;
  1901  0022C2  EFA0  F011         	goto	l274
  1902  0022C6                     l5019:
  1903  0022C6  FFFF               	dw	65535	; assembler added errata NOP
  1904                           
  1905                           ;main.c: 257:                     add_component();
  1906  0022C8  EC12  F00F         	call	_add_component	;wreg free
  1907                           
  1908                           ;main.c: 259:                     break;
  1909  0022CC  EFA0  F011         	goto	l274
  1910  0022D0                     l5021:
  1911  0022D0  FFFF               	dw	65535	; assembler added errata NOP
  1912                           
  1913                           ;main.c: 262:                     remove_component();
  1914  0022D2  ECAF  F014         	call	_remove_component	;wreg free
  1915                           
  1916                           ;main.c: 264:                     break;
  1917  0022D6  EFA0  F011         	goto	l274
  1918  0022DA                     l5023:
  1919  0022DA  FFFF               	dw	65535	; assembler added errata NOP
  1920                           
  1921                           ;main.c: 267:                     return_to_initial();
  1922  0022DC  ECA3  F011         	call	_return_to_initial	;wreg free
  1923                           
  1924                           ;main.c: 268:                     break;
  1925  0022E0  EFA0  F011         	goto	l274
  1926  0022E4                     l5025:
  1927  0022E4  FFFF               	dw	65535	; assembler added errata NOP
  1928                           
  1929                           ;main.c: 271:                     New_char_RX=0;
  1930  0022E6  0E00               	movlw	0
  1931  0022E8  6E70               	movwf	_New_char_RX^0,c
  1932                           
  1933                           ;main.c: 272:                     stop=0;
  1934  0022EA  0E00               	movlw	0
  1935  0022EC  6E6A               	movwf	_stop^0,c
  1936                           
  1937                           ;main.c: 273:                     break;
  1938  0022EE  EFA0  F011         	goto	l274
  1939  0022F2                     l5029:
  1940  0022F2  FFFF               	dw	65535	; assembler added errata NOP
  1941  0022F4  506E               	movf	_State^0,w,c
  1942  0022F6  6E58               	movwf	??_start_up_menu^0,c
  1943  0022F8  6A59               	clrf	(??_start_up_menu+1)^0,c
  1944                           
  1945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1946                           ; Switch size 1, requested type "simple"
  1947                           ; Number of cases is 1, Range of values is 0 to 0
  1948                           ; switch strategies available:
  1949                           ; Name         Instructions Cycles
  1950                           ; simple_byte            4     3 (average)
  1951                           ;	Chosen strategy is simple_byte
  1952  0022FA  5059               	movf	(??_start_up_menu+1)^0,w,c
  1953  0022FC  0A00               	xorlw	0	; case 0
  1954  0022FE  B4D8               	btfsc	status,2,c
  1955  002300  EF84  F011         	goto	l5095
  1956  002304  EFA0  F011         	goto	l274
  1957  002308                     l5095:
  1958  002308  FFFF               	dw	65535	; assembler added errata NOP
  1959                           
  1960                           ; Switch size 1, requested type "simple"
  1961                           ; Number of cases is 6, Range of values is 49 to 81
  1962                           ; switch strategies available:
  1963                           ; Name         Instructions Cycles
  1964                           ; simple_byte           19    10 (average)
  1965                           ;	Chosen strategy is simple_byte
  1966  00230A  5058               	movf	??_start_up_menu^0,w,c
  1967  00230C  0A31               	xorlw	49	; case 49
  1968  00230E  B4D8               	btfsc	status,2,c
  1969  002310  EF03  F011         	goto	l4995
  1970  002314  0A03               	xorlw	3	; case 50
  1971  002316  B4D8               	btfsc	status,2,c
  1972  002318  EF5E  F011         	goto	l5017
  1973  00231C  0A01               	xorlw	1	; case 51
  1974  00231E  B4D8               	btfsc	status,2,c
  1975  002320  EF63  F011         	goto	l5019
  1976  002324  0A07               	xorlw	7	; case 52
  1977  002326  B4D8               	btfsc	status,2,c
  1978  002328  EF68  F011         	goto	l5021
  1979  00232C  0A01               	xorlw	1	; case 53
  1980  00232E  B4D8               	btfsc	status,2,c
  1981  002330  EF6D  F011         	goto	l5023
  1982  002334  0A64               	xorlw	100	; case 81
  1983  002336  B4D8               	btfsc	status,2,c
  1984  002338  EF72  F011         	goto	l5025
  1985  00233C  EFA0  F011         	goto	l274
  1986  002340                     l274:
  1987  002340  FFFF               	dw	65535	; assembler added errata NOP
  1988  002342  0012               	return		;funcret
  1989  002344  FFFF               	dw	65535	; errata NOP
  1990  002346                     __end_of_start_up_menu:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function _return_to_initial *****************
  1994 ;; Defined at:
  1995 ;;		line 686 in file "main.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  i               2   25[COMRAM] int 
  2000 ;;  i               2   23[COMRAM] int 
  2001 ;;  i               2   21[COMRAM] int 
  2002 ;;  i               2   19[COMRAM] int 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2012 ;;      Params:         0       0       0       0       0       0       0
  2013 ;;      Locals:         8       0       0       0       0       0       0
  2014 ;;      Temps:          1       0       0       0       0       0       0
  2015 ;;      Totals:         9       0       0       0       0       0       0
  2016 ;;Total ram usage:        9 bytes
  2017 ;; Hardware stack levels used: 1
  2018 ;; Hardware stack levels required when called: 4
  2019 ;; This function calls:
  2020 ;;		_Twister
  2021 ;;		_X_axis
  2022 ;;		_Y_axis
  2023 ;;		_Z_axis
  2024 ;; This function is called by:
  2025 ;;		_start_up_menu
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text2
  2030  002346                     __ptext2:
  2031                           	callstack 0
  2032  002346                     _return_to_initial:
  2033                           	callstack 0
  2034  002346  FFFF               	dw	65535	; assembler added errata NOP
  2035  002348                     
  2036                           ;main.c: 688:     New_char_RX=0;
  2037  002348  0E00               	movlw	0
  2038  00234A  6E70               	movwf	_New_char_RX^0,c
  2039                           
  2040                           ;main.c: 689:     stop=0;
  2041  00234C  0E00               	movlw	0
  2042  00234E  6E6A               	movwf	_stop^0,c
  2043  002350                     
  2044                           ;main.c: 690:     Steps=Step_X;
  2045  002350  C098  F068         	movff	_Step_X,_Steps
  2046  002354  C099  F069         	movff	_Step_X+1,_Steps+1
  2047                           
  2048                           ;main.c: 691:     for(int i = 0; i<Steps; i++){X_axis(0);}
  2049  002358  0E00               	movlw	0
  2050  00235A  6E15               	movwf	(return_to_initial@i+1)^0,c
  2051  00235C  0E00               	movlw	0
  2052  00235E  6E14               	movwf	return_to_initial@i^0,c
  2053  002360  EFB8  F011         	goto	l3797
  2054  002364                     l3793:
  2055  002364  FFFF               	dw	65535	; assembler added errata NOP
  2056  002366  0E00               	movlw	0
  2057  002368  ECB9  F015         	call	_X_axis
  2058  00236C  4A14               	infsnz	return_to_initial@i^0,f,c
  2059  00236E  2A15               	incf	(return_to_initial@i+1)^0,f,c
  2060  002370                     l3797:
  2061  002370  FFFF               	dw	65535	; assembler added errata NOP
  2062  002372  5068               	movf	_Steps^0,w,c
  2063  002374  5C14               	subwf	return_to_initial@i^0,w,c
  2064  002376  5015               	movf	(return_to_initial@i+1)^0,w,c
  2065  002378  0A80               	xorlw	128
  2066  00237A  6E13               	movwf	??_return_to_initial^0,c
  2067  00237C  5069               	movf	(_Steps+1)^0,w,c
  2068  00237E  0A80               	xorlw	128
  2069  002380  5813               	subwfb	??_return_to_initial^0,w,c
  2070  002382  A0D8               	btfss	status,0,c
  2071  002384  EFC6  F011         	goto	u4121
  2072  002388  EFC9  F011         	goto	u4120
  2073  00238C                     u4121:
  2074  00238C  FFFF               	dw	65535	; assembler added errata NOP
  2075  00238E  EFB2  F011         	goto	l3793
  2076  002392                     u4120:
  2077  002392  FFFF               	dw	65535	; assembler added errata NOP
  2078  002394                     
  2079                           ;main.c: 692:     Step_X=0;
  2080  002394  0E00               	movlw	0
  2081  002396  0100               	movlb	0	; () banked
  2082  002398  6F99               	movwf	(_Step_X+1)& (0+255),b
  2083  00239A  0E00               	movlw	0
  2084  00239C  6F98               	movwf	_Step_X& (0+255),b
  2085  00239E                     
  2086                           ; BSR set to: 0
  2087                           ;main.c: 694:     Steps=Step_Y;
  2088  00239E  C096  F068         	movff	_Step_Y,_Steps
  2089  0023A2  C097  F069         	movff	_Step_Y+1,_Steps+1
  2090                           
  2091                           ;main.c: 695:     for(int i = 0; i<Steps; i++){Y_axis(0);}
  2092  0023A6  0E00               	movlw	0
  2093  0023A8  6E17               	movwf	(return_to_initial@i_934+1)^0,c
  2094  0023AA  0E00               	movlw	0
  2095  0023AC  6E16               	movwf	return_to_initial@i_934^0,c
  2096  0023AE  EFDF  F011         	goto	l3807
  2097  0023B2                     l3803:
  2098  0023B2  FFFF               	dw	65535	; assembler added errata NOP
  2099  0023B4  0E00               	movlw	0
  2100  0023B6  EC34  F015         	call	_Y_axis
  2101  0023BA  4A16               	infsnz	return_to_initial@i_934^0,f,c
  2102  0023BC  2A17               	incf	(return_to_initial@i_934+1)^0,f,c
  2103  0023BE                     l3807:
  2104  0023BE  FFFF               	dw	65535	; assembler added errata NOP
  2105  0023C0  5068               	movf	_Steps^0,w,c
  2106  0023C2  5C16               	subwf	return_to_initial@i_934^0,w,c
  2107  0023C4  5017               	movf	(return_to_initial@i_934+1)^0,w,c
  2108  0023C6  0A80               	xorlw	128
  2109  0023C8  6E13               	movwf	??_return_to_initial^0,c
  2110  0023CA  5069               	movf	(_Steps+1)^0,w,c
  2111  0023CC  0A80               	xorlw	128
  2112  0023CE  5813               	subwfb	??_return_to_initial^0,w,c
  2113  0023D0  A0D8               	btfss	status,0,c
  2114  0023D2  EFED  F011         	goto	u4131
  2115  0023D6  EFF0  F011         	goto	u4130
  2116  0023DA                     u4131:
  2117  0023DA  FFFF               	dw	65535	; assembler added errata NOP
  2118  0023DC  EFD9  F011         	goto	l3803
  2119  0023E0                     u4130:
  2120  0023E0  FFFF               	dw	65535	; assembler added errata NOP
  2121  0023E2                     
  2122                           ;main.c: 696:     Step_Y=0;
  2123  0023E2  0E00               	movlw	0
  2124  0023E4  0100               	movlb	0	; () banked
  2125  0023E6  6F97               	movwf	(_Step_Y+1)& (0+255),b
  2126  0023E8  0E00               	movlw	0
  2127  0023EA  6F96               	movwf	_Step_Y& (0+255),b
  2128  0023EC                     
  2129                           ; BSR set to: 0
  2130                           ;main.c: 698:     Steps=Step_Angle;
  2131  0023EC  C092  F068         	movff	_Step_Angle,_Steps
  2132  0023F0  C093  F069         	movff	_Step_Angle+1,_Steps+1
  2133                           
  2134                           ;main.c: 699:     for(int i = 0; i<Steps; i++){Twister(0);}
  2135  0023F4  0E00               	movlw	0
  2136  0023F6  6E19               	movwf	(return_to_initial@i_935+1)^0,c
  2137  0023F8  0E00               	movlw	0
  2138  0023FA  6E18               	movwf	return_to_initial@i_935^0,c
  2139  0023FC  EF06  F012         	goto	l3817
  2140  002400                     l3813:
  2141  002400  FFFF               	dw	65535	; assembler added errata NOP
  2142  002402  0E00               	movlw	0
  2143  002404  ECBB  F016         	call	_Twister
  2144  002408  4A18               	infsnz	return_to_initial@i_935^0,f,c
  2145  00240A  2A19               	incf	(return_to_initial@i_935+1)^0,f,c
  2146  00240C                     l3817:
  2147  00240C  FFFF               	dw	65535	; assembler added errata NOP
  2148  00240E  5068               	movf	_Steps^0,w,c
  2149  002410  5C18               	subwf	return_to_initial@i_935^0,w,c
  2150  002412  5019               	movf	(return_to_initial@i_935+1)^0,w,c
  2151  002414  0A80               	xorlw	128
  2152  002416  6E13               	movwf	??_return_to_initial^0,c
  2153  002418  5069               	movf	(_Steps+1)^0,w,c
  2154  00241A  0A80               	xorlw	128
  2155  00241C  5813               	subwfb	??_return_to_initial^0,w,c
  2156  00241E  A0D8               	btfss	status,0,c
  2157  002420  EF14  F012         	goto	u4141
  2158  002424  EF17  F012         	goto	u4140
  2159  002428                     u4141:
  2160  002428  FFFF               	dw	65535	; assembler added errata NOP
  2161  00242A  EF00  F012         	goto	l3813
  2162  00242E                     u4140:
  2163  00242E  FFFF               	dw	65535	; assembler added errata NOP
  2164  002430                     
  2165                           ;main.c: 700:     Step_Angle=0;
  2166  002430  0E00               	movlw	0
  2167  002432  0100               	movlb	0	; () banked
  2168  002434  6F93               	movwf	(_Step_Angle+1)& (0+255),b
  2169  002436  0E00               	movlw	0
  2170  002438  6F92               	movwf	_Step_Angle& (0+255),b
  2171  00243A                     
  2172                           ; BSR set to: 0
  2173                           ;main.c: 702:     Steps=Step_Z;
  2174  00243A  C094  F068         	movff	_Step_Z,_Steps
  2175  00243E  C095  F069         	movff	_Step_Z+1,_Steps+1
  2176                           
  2177                           ;main.c: 703:     for(int i=0; i<Steps && !stop; i++){Z_axis(0);}
  2178  002442  0E00               	movlw	0
  2179  002444  6E1B               	movwf	(return_to_initial@i_936+1)^0,c
  2180  002446  0E00               	movlw	0
  2181  002448  6E1A               	movwf	return_to_initial@i_936^0,c
  2182  00244A  EF2D  F012         	goto	l3827
  2183  00244E                     l3823:
  2184  00244E  FFFF               	dw	65535	; assembler added errata NOP
  2185  002450  0E00               	movlw	0
  2186  002452  EC1D  F014         	call	_Z_axis
  2187  002456  4A1A               	infsnz	return_to_initial@i_936^0,f,c
  2188  002458  2A1B               	incf	(return_to_initial@i_936+1)^0,f,c
  2189  00245A                     l3827:
  2190  00245A  FFFF               	dw	65535	; assembler added errata NOP
  2191  00245C  5068               	movf	_Steps^0,w,c
  2192  00245E  5C1A               	subwf	return_to_initial@i_936^0,w,c
  2193  002460  501B               	movf	(return_to_initial@i_936+1)^0,w,c
  2194  002462  0A80               	xorlw	128
  2195  002464  6E13               	movwf	??_return_to_initial^0,c
  2196  002466  5069               	movf	(_Steps+1)^0,w,c
  2197  002468  0A80               	xorlw	128
  2198  00246A  5813               	subwfb	??_return_to_initial^0,w,c
  2199  00246C  B0D8               	btfsc	status,0,c
  2200  00246E  EF3B  F012         	goto	u4151
  2201  002472  EF3E  F012         	goto	u4150
  2202  002476                     u4151:
  2203  002476  FFFF               	dw	65535	; assembler added errata NOP
  2204  002478  EF48  F012         	goto	l3831
  2205  00247C                     u4150:
  2206  00247C  FFFF               	dw	65535	; assembler added errata NOP
  2207  00247E  506A               	movf	_stop^0,w,c
  2208  002480  B4D8               	btfsc	status,2,c
  2209  002482  EF45  F012         	goto	u4161
  2210  002486  EF48  F012         	goto	u4160
  2211  00248A                     u4161:
  2212  00248A  FFFF               	dw	65535	; assembler added errata NOP
  2213  00248C  EF27  F012         	goto	l3823
  2214  002490                     u4160:
  2215  002490                     l3831:
  2216  002490  FFFF               	dw	65535	; assembler added errata NOP
  2217                           
  2218                           ;main.c: 704:     Steps=0;
  2219  002492  0E00               	movlw	0
  2220  002494  6E69               	movwf	(_Steps+1)^0,c
  2221  002496  0E00               	movlw	0
  2222  002498  6E68               	movwf	_Steps^0,c
  2223  00249A  0012               	return		;funcret
  2224  00249C  FFFF               	dw	65535	; errata NOP
  2225  00249E                     __end_of_return_to_initial:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function _remove_component *****************
  2229 ;; Defined at:
  2230 ;;		line 369 in file "main.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  indxToDel       2   30[COMRAM] int 
  2235 ;;  ptr             2   27[COMRAM] PTR unsigned char 
  2236 ;;		 -> sequence(4), NULL(0), 
  2237 ;;  rm_comp         1   29[COMRAM] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2247 ;;      Params:         0       0       0       0       0       0       0
  2248 ;;      Locals:         5       0       0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0
  2250 ;;      Totals:         5       0       0       0       0       0       0
  2251 ;;Total ram usage:        5 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 4
  2254 ;; This function calls:
  2255 ;;		_memmove
  2256 ;;		_print_string
  2257 ;;		_strlen
  2258 ;;		_strrchr
  2259 ;; This function is called by:
  2260 ;;		_start_up_menu
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text3
  2265  00295E                     __ptext3:
  2266                           	callstack 0
  2267  00295E                     _remove_component:
  2268                           	callstack 0
  2269  00295E  FFFF               	dw	65535	; assembler added errata NOP
  2270  002960                     
  2271                           ;main.c: 370:     print_string("\nWhich component would you like to remove from the  seq
      +                          uence?\n");
  2272  002960  0E05               	movlw	low STR_14
  2273  002962  6E0A               	movwf	print_string@strng^0,c
  2274  002964  0E7E               	movlw	high STR_14
  2275  002966  6E0B               	movwf	(print_string@strng+1)^0,c
  2276  002968  EC9E  F017         	call	_print_string	;wreg free
  2277                           
  2278                           ;main.c: 371:     print_string(sequence);
  2279  00296C  0EF0               	movlw	low _sequence
  2280  00296E  6E0A               	movwf	print_string@strng^0,c
  2281  002970  0E00               	movlw	high _sequence
  2282  002972  6E0B               	movwf	(print_string@strng+1)^0,c
  2283  002974  EC9E  F017         	call	_print_string	;wreg free
  2284  002978                     l4079:
  2285  002978  FFFF               	dw	65535	; assembler added errata NOP
  2286                           
  2287                           ;main.c: 373:         if(New_char_RX){
  2288  00297A  5070               	movf	_New_char_RX^0,w,c
  2289  00297C  B4D8               	btfsc	status,2,c
  2290  00297E  EFC3  F014         	goto	u4671
  2291  002982  EFC6  F014         	goto	u4670
  2292  002986                     u4671:
  2293  002986  FFFF               	dw	65535	; assembler added errata NOP
  2294  002988  EFBC  F014         	goto	l4079
  2295  00298C                     u4670:
  2296  00298C  FFFF               	dw	65535	; assembler added errata NOP
  2297  00298E                     
  2298                           ;main.c: 374:             New_char_RX=0;
  2299  00298E  0E00               	movlw	0
  2300  002990  6E70               	movwf	_New_char_RX^0,c
  2301  002992                     
  2302                           ;main.c: 375:             char rm_comp = input_str[0];
  2303  002992  C0E6  F01E         	movff	_input_str,remove_component@rm_comp	;volatile
  2304  002996                     
  2305                           ;main.c: 376:             char *ptr;;main.c: 377:             int indxToDel;;main.c: 378
      +                          :             ptr=strrchr(sequence,rm_comp);
  2306  002996  0EF0               	movlw	low _sequence
  2307  002998  6E18               	movwf	strrchr@s^0,c
  2308  00299A  0E00               	movlw	high _sequence
  2309  00299C  6E19               	movwf	(strrchr@s+1)^0,c
  2310  00299E  C01E  F01A         	movff	remove_component@rm_comp,strrchr@c
  2311  0029A2  6A1B               	clrf	(strrchr@c+1)^0,c
  2312  0029A4  EC14  F01A         	call	_strrchr	;wreg free
  2313  0029A8  C018  F01C         	movff	?_strrchr,remove_component@ptr
  2314  0029AC  C019  F01D         	movff	?_strrchr+1,remove_component@ptr+1
  2315  0029B0                     
  2316                           ;main.c: 380:             if (rm_comp=='Q'){
  2317  0029B0  0E51               	movlw	81
  2318  0029B2  181E               	xorwf	remove_component@rm_comp^0,w,c
  2319  0029B4  A4D8               	btfss	status,2,c
  2320  0029B6  EFDF  F014         	goto	u4681
  2321  0029BA  EFE2  F014         	goto	u4680
  2322  0029BE                     u4681:
  2323  0029BE  FFFF               	dw	65535	; assembler added errata NOP
  2324  0029C0  EFE5  F014         	goto	l4093
  2325  0029C4                     u4680:
  2326  0029C4  FFFF               	dw	65535	; assembler added errata NOP
  2327  0029C6  EF2F  F015         	goto	l4109
  2328  0029CA                     l4093:
  2329  0029CA  FFFF               	dw	65535	; assembler added errata NOP
  2330  0029CC  501C               	movf	remove_component@ptr^0,w,c
  2331  0029CE  101D               	iorwf	(remove_component@ptr+1)^0,w,c
  2332  0029D0  B4D8               	btfsc	status,2,c
  2333  0029D2  EFED  F014         	goto	u4691
  2334  0029D6  EFF0  F014         	goto	u4690
  2335  0029DA                     u4691:
  2336  0029DA  FFFF               	dw	65535	; assembler added errata NOP
  2337  0029DC  EF1B  F015         	goto	l4105
  2338  0029E0                     u4690:
  2339  0029E0  FFFF               	dw	65535	; assembler added errata NOP
  2340  0029E2                     
  2341                           ;main.c: 384:                 indxToDel = ptr - sequence;
  2342  0029E2  0EF0               	movlw	low _sequence
  2343  0029E4  5C1C               	subwf	remove_component@ptr^0,w,c
  2344  0029E6  6E1F               	movwf	remove_component@indxToDel^0,c
  2345  0029E8  0E00               	movlw	high _sequence
  2346  0029EA  581D               	subwfb	(remove_component@ptr+1)^0,w,c
  2347  0029EC  6E20               	movwf	(remove_component@indxToDel+1)^0,c
  2348  0029EE                     
  2349                           ;main.c: 385:                 memmove(&sequence[indxToDel], &sequence[indxToDel + 1], st
      +                          rlen(sequence) - indxToDel);
  2350  0029EE  0EF0               	movlw	low _sequence
  2351  0029F0  241F               	addwf	remove_component@indxToDel^0,w,c
  2352  0029F2  6E0E               	movwf	memmove@d1^0,c
  2353  0029F4  0E00               	movlw	high _sequence
  2354  0029F6  2020               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2355  0029F8  6E0F               	movwf	(memmove@d1+1)^0,c
  2356  0029FA  0EF1               	movlw	low (_sequence+1)
  2357  0029FC  241F               	addwf	remove_component@indxToDel^0,w,c
  2358  0029FE  6E10               	movwf	memmove@s1^0,c
  2359  002A00  0E00               	movlw	high (_sequence+1)
  2360  002A02  2020               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2361  002A04  6E11               	movwf	(memmove@s1+1)^0,c
  2362  002A06  0EF0               	movlw	low _sequence
  2363  002A08  6E0A               	movwf	strlen@s^0,c
  2364  002A0A  0E00               	movlw	high _sequence
  2365  002A0C  6E0B               	movwf	(strlen@s+1)^0,c
  2366  002A0E  EC91  F019         	call	_strlen	;wreg free
  2367  002A12  501F               	movf	remove_component@indxToDel^0,w,c
  2368  002A14  5C0A               	subwf	?_strlen^0,w,c
  2369  002A16  6E12               	movwf	memmove@n^0,c
  2370  002A18  5020               	movf	(remove_component@indxToDel+1)^0,w,c
  2371  002A1A  580B               	subwfb	(?_strlen+1)^0,w,c
  2372  002A1C  6E13               	movwf	(memmove@n+1)^0,c
  2373  002A1E  EC3E  F016         	call	_memmove	;wreg free
  2374  002A22                     
  2375                           ;main.c: 386:                 print_string("\ncomponent removed");
  2376  002A22  0ED4               	movlw	low STR_15
  2377  002A24  6E0A               	movwf	print_string@strng^0,c
  2378  002A26  0E7F               	movlw	high STR_15
  2379  002A28  6E0B               	movwf	(print_string@strng+1)^0,c
  2380  002A2A  EC9E  F017         	call	_print_string	;wreg free
  2381  002A2E                     
  2382                           ;main.c: 387:                 stop=0;
  2383  002A2E  0E00               	movlw	0
  2384  002A30  6E6A               	movwf	_stop^0,c
  2385                           
  2386                           ;main.c: 388:                 break;
  2387  002A32  EF2F  F015         	goto	l4109
  2388  002A36                     l4105:
  2389  002A36  FFFF               	dw	65535	; assembler added errata NOP
  2390                           
  2391                           ;main.c: 392:                 print_string("\ncomponent is not in the sequence. Try sele
      +                          cting another component: \n");
  2392  002A38  0EBF               	movlw	low STR_16
  2393  002A3A  6E0A               	movwf	print_string@strng^0,c
  2394  002A3C  0E7D               	movlw	high STR_16
  2395  002A3E  6E0B               	movwf	(print_string@strng+1)^0,c
  2396  002A40  EC9E  F017         	call	_print_string	;wreg free
  2397  002A44                     l4107:
  2398  002A44  FFFF               	dw	65535	; assembler added errata NOP
  2399  002A46  5070               	movf	_New_char_RX^0,w,c
  2400  002A48  B4D8               	btfsc	status,2,c
  2401  002A4A  EF29  F015         	goto	u4701
  2402  002A4E  EF2C  F015         	goto	u4700
  2403  002A52                     u4701:
  2404  002A52  FFFF               	dw	65535	; assembler added errata NOP
  2405  002A54  EF22  F015         	goto	l4107
  2406  002A58                     u4700:
  2407  002A58  FFFF               	dw	65535	; assembler added errata NOP
  2408  002A5A  EFBC  F014         	goto	l4079
  2409  002A5E                     l4109:
  2410  002A5E  FFFF               	dw	65535	; assembler added errata NOP
  2411                           
  2412                           ;main.c: 397:     New_char_RX=0;
  2413  002A60  0E00               	movlw	0
  2414  002A62  6E70               	movwf	_New_char_RX^0,c
  2415  002A64  0012               	return		;funcret
  2416  002A66  FFFF               	dw	65535	; errata NOP
  2417  002A68                     __end_of_remove_component:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _strrchr *****************
  2421 ;; Defined at:
  2422 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2425 ;;		 -> sequence(4), 
  2426 ;;  c               2   25[COMRAM] int 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  2   23[COMRAM] PTR unsigned char 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2438 ;;      Params:         4       0       0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0
  2441 ;;      Totals:         4       0       0       0       0       0       0
  2442 ;;Total ram usage:        4 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 3
  2445 ;; This function calls:
  2446 ;;		___memrchr
  2447 ;;		_strlen
  2448 ;; This function is called by:
  2449 ;;		_remove_component
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text4
  2454  003428                     __ptext4:
  2455                           	callstack 0
  2456  003428                     _strrchr:
  2457                           	callstack 0
  2458  003428  FFFF               	dw	65535	; assembler added errata NOP
  2459  00342A  C018  F00E         	movff	strrchr@s,___memrchr@m
  2460  00342E  C019  F00F         	movff	strrchr@s+1,___memrchr@m+1
  2461  003432  C01A  F010         	movff	strrchr@c,___memrchr@c
  2462  003436  C01B  F011         	movff	strrchr@c+1,___memrchr@c+1
  2463  00343A  C018  F00A         	movff	strrchr@s,strlen@s
  2464  00343E  C019  F00B         	movff	strrchr@s+1,strlen@s+1
  2465  003442  EC91  F019         	call	_strlen	;wreg free
  2466  003446  0E01               	movlw	1
  2467  003448  240A               	addwf	?_strlen^0,w,c
  2468  00344A  6E12               	movwf	___memrchr@n^0,c
  2469  00344C  0E00               	movlw	0
  2470  00344E  200B               	addwfc	(?_strlen+1)^0,w,c
  2471  003450  6E13               	movwf	(___memrchr@n+1)^0,c
  2472  003452  EC3A  F018         	call	___memrchr	;wreg free
  2473  003456  C00E  F018         	movff	?___memrchr,?_strrchr
  2474  00345A  C00F  F019         	movff	?___memrchr+1,?_strrchr+1
  2475  00345E  0012               	return		;funcret
  2476  003460  FFFF               	dw	65535	; errata NOP
  2477  003462                     __end_of_strrchr:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function ___memrchr *****************
  2481 ;; Defined at:
  2482 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  m               2   13[COMRAM] PTR const void 
  2485 ;;		 -> sequence(4), 
  2486 ;;  c               2   15[COMRAM] int 
  2487 ;;  n               2   17[COMRAM] unsigned int 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2490 ;;		 -> sequence(4), 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  2   13[COMRAM] PTR void 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2500 ;;      Params:         6       0       0       0       0       0       0
  2501 ;;      Locals:         2       0       0       0       0       0       0
  2502 ;;      Temps:          2       0       0       0       0       0       0
  2503 ;;      Totals:        10       0       0       0       0       0       0
  2504 ;;Total ram usage:       10 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; Hardware stack levels required when called: 2
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_strrchr
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text5
  2515  003074                     __ptext5:
  2516                           	callstack 0
  2517  003074                     ___memrchr:
  2518                           	callstack 0
  2519  003074  FFFF               	dw	65535	; assembler added errata NOP
  2520  003076  C00E  F016         	movff	___memrchr@m,___memrchr@s
  2521  00307A  C00F  F017         	movff	___memrchr@m+1,___memrchr@s+1
  2522  00307E  C010  F010         	movff	___memrchr@c,___memrchr@c
  2523  003082  6A11               	clrf	(___memrchr@c+1)^0,c
  2524  003084  EF64  F018         	goto	l3109
  2525  003088                     l3103:
  2526  003088  FFFF               	dw	65535	; assembler added errata NOP
  2527  00308A  5012               	movf	___memrchr@n^0,w,c
  2528  00308C  2416               	addwf	___memrchr@s^0,w,c
  2529  00308E  6ED9               	movwf	fsr2l,c
  2530  003090  5013               	movf	(___memrchr@n+1)^0,w,c
  2531  003092  2017               	addwfc	(___memrchr@s+1)^0,w,c
  2532  003094  6EDA               	movwf	fsr2h,c
  2533  003096  50DF               	movf	indf2,w,c
  2534  003098  6E14               	movwf	??___memrchr^0,c
  2535  00309A  6A15               	clrf	(??___memrchr+1)^0,c
  2536  00309C  5010               	movf	___memrchr@c^0,w,c
  2537  00309E  1814               	xorwf	??___memrchr^0,w,c
  2538  0030A0  E107               	bnz	u3021
  2539  0030A2  5011               	movf	(___memrchr@c+1)^0,w,c
  2540  0030A4  1815               	xorwf	(??___memrchr+1)^0,w,c
  2541  0030A6  A4D8               	btfss	status,2,c
  2542  0030A8  EF58  F018         	goto	u3021
  2543  0030AC  EF5B  F018         	goto	u3020
  2544  0030B0                     u3021:
  2545  0030B0  FFFF               	dw	65535	; assembler added errata NOP
  2546  0030B2  EF64  F018         	goto	l3109
  2547  0030B6                     u3020:
  2548  0030B6  FFFF               	dw	65535	; assembler added errata NOP
  2549  0030B8  5012               	movf	___memrchr@n^0,w,c
  2550  0030BA  2416               	addwf	___memrchr@s^0,w,c
  2551  0030BC  6E0E               	movwf	?___memrchr^0,c
  2552  0030BE  5013               	movf	(___memrchr@n+1)^0,w,c
  2553  0030C0  2017               	addwfc	(___memrchr@s+1)^0,w,c
  2554  0030C2  6E0F               	movwf	(?___memrchr+1)^0,c
  2555  0030C4  EF78  F018         	goto	l1288
  2556  0030C8                     l3109:
  2557  0030C8  FFFF               	dw	65535	; assembler added errata NOP
  2558  0030CA  0612               	decf	___memrchr@n^0,f,c
  2559  0030CC  A0D8               	btfss	status,0,c
  2560  0030CE  0613               	decf	(___memrchr@n+1)^0,f,c
  2561  0030D0  2812               	incf	___memrchr@n^0,w,c
  2562  0030D2  E106               	bnz	u3031
  2563  0030D4  2813               	incf	(___memrchr@n+1)^0,w,c
  2564  0030D6  A4D8               	btfss	status,2,c
  2565  0030D8  EF70  F018         	goto	u3031
  2566  0030DC  EF73  F018         	goto	u3030
  2567  0030E0                     u3031:
  2568  0030E0  FFFF               	dw	65535	; assembler added errata NOP
  2569  0030E2  EF44  F018         	goto	l3103
  2570  0030E6                     u3030:
  2571  0030E6  FFFF               	dw	65535	; assembler added errata NOP
  2572  0030E8  0E00               	movlw	0
  2573  0030EA  6E0E               	movwf	?___memrchr^0,c
  2574  0030EC  0E00               	movlw	0
  2575  0030EE  6E0F               	movwf	(?___memrchr+1)^0,c
  2576  0030F0                     l1288:
  2577  0030F0  FFFF               	dw	65535	; assembler added errata NOP
  2578  0030F2  0012               	return		;funcret
  2579  0030F4  FFFF               	dw	65535	; errata NOP
  2580  0030F6                     __end_of___memrchr:
  2581                           	callstack 0
  2582                           
  2583 ;; *************** function _memmove *****************
  2584 ;; Defined at:
  2585 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  d1              2   13[COMRAM] PTR void 
  2588 ;;		 -> sequence(4), 
  2589 ;;  s1              2   15[COMRAM] PTR const void 
  2590 ;;		 -> sequence(4), 
  2591 ;;  n               2   17[COMRAM] unsigned int 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2594 ;;		 -> sequence(4), 
  2595 ;;  d               2   21[COMRAM] PTR unsigned char 
  2596 ;;		 -> sequence(4), 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  2   13[COMRAM] PTR void 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2606 ;;      Params:         6       0       0       0       0       0       0
  2607 ;;      Locals:         4       0       0       0       0       0       0
  2608 ;;      Temps:          2       0       0       0       0       0       0
  2609 ;;      Totals:        12       0       0       0       0       0       0
  2610 ;;Total ram usage:       12 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 2
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_remove_component
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text6
  2621  002C7C                     __ptext6:
  2622                           	callstack 0
  2623  002C7C                     _memmove:
  2624                           	callstack 0
  2625  002C7C  FFFF               	dw	65535	; assembler added errata NOP
  2626  002C7E  C010  F018         	movff	memmove@s1,memmove@s
  2627  002C82  C011  F019         	movff	memmove@s1+1,memmove@s+1
  2628  002C86  C00E  F016         	movff	memmove@d1,memmove@d
  2629  002C8A  C00F  F017         	movff	memmove@d1+1,memmove@d+1
  2630  002C8E  5016               	movf	memmove@d^0,w,c
  2631  002C90  5C18               	subwf	memmove@s^0,w,c
  2632  002C92  5017               	movf	(memmove@d+1)^0,w,c
  2633  002C94  5819               	subwfb	(memmove@s+1)^0,w,c
  2634  002C96  B0D8               	btfsc	status,0,c
  2635  002C98  EF50  F016         	goto	u3111
  2636  002C9C  EF53  F016         	goto	u3110
  2637  002CA0                     u3111:
  2638  002CA0  FFFF               	dw	65535	; assembler added errata NOP
  2639  002CA2  EF90  F016         	goto	l3175
  2640  002CA6                     u3110:
  2641  002CA6  FFFF               	dw	65535	; assembler added errata NOP
  2642  002CA8  5012               	movf	memmove@n^0,w,c
  2643  002CAA  2418               	addwf	memmove@s^0,w,c
  2644  002CAC  6E14               	movwf	??_memmove^0,c
  2645  002CAE  5013               	movf	(memmove@n+1)^0,w,c
  2646  002CB0  2019               	addwfc	(memmove@s+1)^0,w,c
  2647  002CB2  6E15               	movwf	(??_memmove+1)^0,c
  2648  002CB4  5014               	movf	??_memmove^0,w,c
  2649  002CB6  5C16               	subwf	memmove@d^0,w,c
  2650  002CB8  5015               	movf	(??_memmove+1)^0,w,c
  2651  002CBA  5817               	subwfb	(memmove@d+1)^0,w,c
  2652  002CBC  B0D8               	btfsc	status,0,c
  2653  002CBE  EF63  F016         	goto	u3121
  2654  002CC2  EF66  F016         	goto	u3120
  2655  002CC6                     u3121:
  2656  002CC6  FFFF               	dw	65535	; assembler added errata NOP
  2657  002CC8  EF90  F016         	goto	l3175
  2658  002CCC                     u3120:
  2659  002CCC  FFFF               	dw	65535	; assembler added errata NOP
  2660  002CCE  5012               	movf	memmove@n^0,w,c
  2661  002CD0  2618               	addwf	memmove@s^0,f,c
  2662  002CD2  5013               	movf	(memmove@n+1)^0,w,c
  2663  002CD4  2219               	addwfc	(memmove@s+1)^0,f,c
  2664  002CD6  5012               	movf	memmove@n^0,w,c
  2665  002CD8  2616               	addwf	memmove@d^0,f,c
  2666  002CDA  5013               	movf	(memmove@n+1)^0,w,c
  2667  002CDC  2217               	addwfc	(memmove@d+1)^0,f,c
  2668  002CDE                     l3171:
  2669  002CDE  FFFF               	dw	65535	; assembler added errata NOP
  2670  002CE0  0618               	decf	memmove@s^0,f,c
  2671  002CE2  A0D8               	btfss	status,0,c
  2672  002CE4  0619               	decf	(memmove@s+1)^0,f,c
  2673  002CE6  C018  FFD9         	movff	memmove@s,fsr2l
  2674  002CEA  C019  FFDA         	movff	memmove@s+1,fsr2h
  2675  002CEE  0616               	decf	memmove@d^0,f,c
  2676  002CF0  A0D8               	btfss	status,0,c
  2677  002CF2  0617               	decf	(memmove@d+1)^0,f,c
  2678  002CF4  C016  FFE1         	movff	memmove@d,fsr1l
  2679  002CF8  C017  FFE2         	movff	memmove@d+1,fsr1h
  2680  002CFC  CFDF FFE7          	movff	indf2,indf1
  2681  002D00  0612               	decf	memmove@n^0,f,c
  2682  002D02  A0D8               	btfss	status,0,c
  2683  002D04  0613               	decf	(memmove@n+1)^0,f,c
  2684  002D06  5012               	movf	memmove@n^0,w,c
  2685  002D08  1013               	iorwf	(memmove@n+1)^0,w,c
  2686  002D0A  A4D8               	btfss	status,2,c
  2687  002D0C  EF8A  F016         	goto	u3131
  2688  002D10  EF8D  F016         	goto	u3130
  2689  002D14                     u3131:
  2690  002D14  FFFF               	dw	65535	; assembler added errata NOP
  2691  002D16  EF6F  F016         	goto	l3171
  2692  002D1A                     u3130:
  2693  002D1A  FFFF               	dw	65535	; assembler added errata NOP
  2694  002D1C  EFB8  F016         	goto	l1241
  2695  002D20                     l3175:
  2696  002D20  FFFF               	dw	65535	; assembler added errata NOP
  2697  002D22  5012               	movf	memmove@n^0,w,c
  2698  002D24  1013               	iorwf	(memmove@n+1)^0,w,c
  2699  002D26  B4D8               	btfsc	status,2,c
  2700  002D28  EF98  F016         	goto	u3141
  2701  002D2C  EF9B  F016         	goto	u3140
  2702  002D30                     u3141:
  2703  002D30  FFFF               	dw	65535	; assembler added errata NOP
  2704  002D32  EFB8  F016         	goto	l1241
  2705  002D36                     u3140:
  2706  002D36  FFFF               	dw	65535	; assembler added errata NOP
  2707  002D38                     l3177:
  2708  002D38  FFFF               	dw	65535	; assembler added errata NOP
  2709  002D3A  C018  FFD9         	movff	memmove@s,fsr2l
  2710  002D3E  C019  FFDA         	movff	memmove@s+1,fsr2h
  2711  002D42  C016  FFE1         	movff	memmove@d,fsr1l
  2712  002D46  C017  FFE2         	movff	memmove@d+1,fsr1h
  2713  002D4A  CFDF FFE7          	movff	indf2,indf1
  2714  002D4E  4A18               	infsnz	memmove@s^0,f,c
  2715  002D50  2A19               	incf	(memmove@s+1)^0,f,c
  2716  002D52  4A16               	infsnz	memmove@d^0,f,c
  2717  002D54  2A17               	incf	(memmove@d+1)^0,f,c
  2718  002D56  0612               	decf	memmove@n^0,f,c
  2719  002D58  A0D8               	btfss	status,0,c
  2720  002D5A  0613               	decf	(memmove@n+1)^0,f,c
  2721  002D5C  5012               	movf	memmove@n^0,w,c
  2722  002D5E  1013               	iorwf	(memmove@n+1)^0,w,c
  2723  002D60  A4D8               	btfss	status,2,c
  2724  002D62  EFB5  F016         	goto	u3151
  2725  002D66  EFB8  F016         	goto	u3150
  2726  002D6A                     u3151:
  2727  002D6A  FFFF               	dw	65535	; assembler added errata NOP
  2728  002D6C  EF9C  F016         	goto	l3177
  2729  002D70                     u3150:
  2730  002D70                     l1241:
  2731  002D70  FFFF               	dw	65535	; assembler added errata NOP
  2732  002D72  0012               	return		;funcret
  2733  002D74  FFFF               	dw	65535	; errata NOP
  2734  002D76                     __end_of_memmove:
  2735                           	callstack 0
  2736                           
  2737 ;; *************** function _pick_and_place *****************
  2738 ;; Defined at:
  2739 ;;		line 639 in file "main.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  Componnt        1    wreg     unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  Componnt        1   32[BANK0 ] unsigned char 
  2744 ;;  i               2   30[BANK0 ] int 
  2745 ;;  i               2   28[BANK0 ] int 
  2746 ;;  i               2   24[BANK0 ] int 
  2747 ;;  i               2   20[BANK0 ] int 
  2748 ;;  i               2   16[BANK0 ] int 
  2749 ;;  i               2   14[BANK0 ] int 
  2750 ;;  i               2   12[BANK0 ] int 
  2751 ;;  i               2    8[BANK0 ] int 
  2752 ;;  i               2    4[BANK0 ] int 
  2753 ;;  i               2    0[BANK0 ] int 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  2  109[None  ] int 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2763 ;;      Params:         0       0       0       0       0       0       0
  2764 ;;      Locals:         0      33       0       0       0       0       0
  2765 ;;      Temps:          2       0       0       0       0       0       0
  2766 ;;      Totals:         2      33       0       0       0       0       0
  2767 ;;Total ram usage:       35 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 4
  2770 ;; This function calls:
  2771 ;;		_Tweezer
  2772 ;;		_Twister
  2773 ;;		_X_axis
  2774 ;;		_Y_axis
  2775 ;;		_Z_axis
  2776 ;;		___fldiv
  2777 ;;		___flge
  2778 ;;		___flmul
  2779 ;;		___xxtofl
  2780 ;;		_check_component
  2781 ;;		_fetch_parameters
  2782 ;;		_print_char
  2783 ;;		_print_string
  2784 ;; This function is called by:
  2785 ;;		_start_up_menu
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text7
  2790  0001C2                     __ptext7:
  2791                           	callstack 0
  2792  0001C2                     _pick_and_place:
  2793                           	callstack 0
  2794  0001C2  FFFF               	dw	65535	; assembler added errata NOP
  2795                           
  2796                           ;incstack = 0
  2797                           ;pick_and_place@Componnt stored from wreg
  2798  0001C4  0100               	movlb	0	; () banked
  2799  0001C6  6FD6               	movwf	pick_and_place@Componnt& (0+255),b
  2800  0001C8                     
  2801                           ;main.c: 639: int pick_and_place(char Componnt);main.c: 640: {;main.c: 643:     fetch_pa
      +                          rameters(Componnt);
  2802  0001C8  0100               	movlb	0	; () banked
  2803  0001CA  51D6               	movf	pick_and_place@Componnt& (0+255),w,b
  2804  0001CC  EC4F  F012         	call	_fetch_parameters
  2805  0001D0                     
  2806                           ;main.c: 645:     if(!stop){
  2807  0001D0  506A               	movf	_stop^0,w,c
  2808  0001D2  A4D8               	btfss	status,2,c
  2809  0001D4  EFEE  F000         	goto	u5721
  2810  0001D8  EFF1  F000         	goto	u5720
  2811  0001DC                     u5721:
  2812  0001DC  FFFF               	dw	65535	; assembler added errata NOP
  2813  0001DE  EFFC  F000         	goto	l4779
  2814  0001E2                     u5720:
  2815  0001E2  FFFF               	dw	65535	; assembler added errata NOP
  2816  0001E4                     
  2817                           ;main.c: 646:         print_string("\nPicking component:");
  2818  0001E4  0EC0               	movlw	low STR_19
  2819  0001E6  6E0A               	movwf	print_string@strng^0,c
  2820  0001E8  0E7F               	movlw	high STR_19
  2821  0001EA  6E0B               	movwf	(print_string@strng+1)^0,c
  2822  0001EC  EC9E  F017         	call	_print_string	;wreg free
  2823  0001F0                     
  2824                           ;main.c: 647:         print_char(Componnt);
  2825  0001F0  0100               	movlb	0	; () banked
  2826  0001F2  51D6               	movf	pick_and_place@Componnt& (0+255),w,b
  2827  0001F4  EC98  F01A         	call	_print_char
  2828  0001F8                     l4779:
  2829  0001F8  FFFF               	dw	65535	; assembler added errata NOP
  2830                           
  2831                           ;main.c: 649:         X_dir=((X_diff<X_Pick)? 1:0);
  2832  0001FA  0100               	movlb	0	; () banked
  2833  0001FC  51AA               	movf	_X_Pick& (0+255),w,b
  2834  0001FE  5D9E               	subwf	_X_diff& (0+255),w,b
  2835  000200  519F               	movf	(_X_diff+1)& (0+255),w,b
  2836  000202  0A80               	xorlw	128
  2837  000204  6E56               	movwf	??_pick_and_place^0,c
  2838  000206  51AB               	movf	(_X_Pick+1)& (0+255),w,b
  2839  000208  0A80               	xorlw	128
  2840  00020A  5856               	subwfb	??_pick_and_place^0,w,c
  2841  00020C  A0D8               	btfss	status,0,c
  2842  00020E  EF0B  F001         	goto	u5731
  2843  000212  EF0F  F001         	goto	u5730
  2844  000216                     u5731:
  2845  000216  FFFF               	dw	65535	; assembler added errata NOP
  2846  000218  0E01               	movlw	1
  2847  00021A  EF11  F001         	goto	u5740
  2848  00021E                     u5730:
  2849  00021E  FFFF               	dw	65535	; assembler added errata NOP
  2850  000220  0E00               	movlw	0
  2851  000222                     u5740:
  2852  000222  FFFF               	dw	65535	; assembler added errata NOP
  2853  000224  6FB5               	movwf	_X_dir& (0+255),b
  2854  000226                     
  2855                           ; BSR set to: 0
  2856                           ;main.c: 650:         Y_dir=((Y_diff<Y_Pick)? 1:0);
  2857  000226  51A6               	movf	_Y_Pick& (0+255),w,b
  2858  000228  5D9C               	subwf	_Y_diff& (0+255),w,b
  2859  00022A  519D               	movf	(_Y_diff+1)& (0+255),w,b
  2860  00022C  0A80               	xorlw	128
  2861  00022E  6E56               	movwf	??_pick_and_place^0,c
  2862  000230  51A7               	movf	(_Y_Pick+1)& (0+255),w,b
  2863  000232  0A80               	xorlw	128
  2864  000234  5856               	subwfb	??_pick_and_place^0,w,c
  2865  000236  A0D8               	btfss	status,0,c
  2866  000238  EF20  F001         	goto	u5751
  2867  00023C  EF24  F001         	goto	u5750
  2868  000240                     u5751:
  2869  000240  FFFF               	dw	65535	; assembler added errata NOP
  2870  000242  0E01               	movlw	1
  2871  000244  EF26  F001         	goto	u5760
  2872  000248                     u5750:
  2873  000248  FFFF               	dw	65535	; assembler added errata NOP
  2874  00024A  0E00               	movlw	0
  2875  00024C                     u5760:
  2876  00024C  FFFF               	dw	65535	; assembler added errata NOP
  2877  00024E  6FB4               	movwf	_Y_dir& (0+255),b
  2878  000250                     
  2879                           ; BSR set to: 0
  2880                           ;main.c: 651:         Rot_dir=((Angle_diff<Pick_Angle)? 1:0);
  2881  000250  51A2               	movf	_Pick_Angle& (0+255),w,b
  2882  000252  5D9A               	subwf	_Angle_diff& (0+255),w,b
  2883  000254  519B               	movf	(_Angle_diff+1)& (0+255),w,b
  2884  000256  0A80               	xorlw	128
  2885  000258  6E56               	movwf	??_pick_and_place^0,c
  2886  00025A  51A3               	movf	(_Pick_Angle+1)& (0+255),w,b
  2887  00025C  0A80               	xorlw	128
  2888  00025E  5856               	subwfb	??_pick_and_place^0,w,c
  2889  000260  A0D8               	btfss	status,0,c
  2890  000262  EF35  F001         	goto	u5771
  2891  000266  EF39  F001         	goto	u5770
  2892  00026A                     u5771:
  2893  00026A  FFFF               	dw	65535	; assembler added errata NOP
  2894  00026C  0E01               	movlw	1
  2895  00026E  EF3B  F001         	goto	u5780
  2896  000272                     u5770:
  2897  000272  FFFF               	dw	65535	; assembler added errata NOP
  2898  000274  0E00               	movlw	0
  2899  000276                     u5780:
  2900  000276  FFFF               	dw	65535	; assembler added errata NOP
  2901  000278  6FB3               	movwf	_Rot_dir& (0+255),b
  2902  00027A                     
  2903                           ; BSR set to: 0
  2904                           ;main.c: 653:         for(int i = 0; (i<((((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_P
      +                          ick-X_diff)))*steps_per_unit)) && !stop; i++){X_axis(X_dir);}
  2905  00027A  0E00               	movlw	0
  2906  00027C  6FB7               	movwf	(pick_and_place@i+1)& (0+255),b
  2907  00027E  0E00               	movlw	0
  2908  000280  6FB6               	movwf	pick_and_place@i& (0+255),b
  2909  000282  EF4A  F001         	goto	l4791
  2910  000286                     l4787:
  2911  000286  FFFF               	dw	65535	; assembler added errata NOP
  2912                           
  2913                           ; BSR set to: 0
  2914  000288  51B5               	movf	_X_dir& (0+255),w,b
  2915  00028A  ECB9  F015         	call	_X_axis
  2916  00028E  0100               	movlb	0	; () banked
  2917  000290  4BB6               	infsnz	pick_and_place@i& (0+255),f,b
  2918  000292  2BB7               	incf	(pick_and_place@i+1)& (0+255),f,b
  2919  000294                     l4791:
  2920  000294  FFFF               	dw	65535	; assembler added errata NOP
  2921                           
  2922                           ; BSR set to: 0
  2923  000296  519E               	movf	_X_diff& (0+255),w,b
  2924  000298  5DAA               	subwf	_X_Pick& (0+255),w,b
  2925  00029A  6E56               	movwf	??_pick_and_place^0,c
  2926  00029C  519F               	movf	(_X_diff+1)& (0+255),w,b
  2927  00029E  59AB               	subwfb	(_X_Pick+1)& (0+255),w,b
  2928  0002A0  6E57               	movwf	(??_pick_and_place+1)^0,c
  2929  0002A2  BE57               	btfsc	(??_pick_and_place+1)^0,7,c
  2930  0002A4  EF5F  F001         	goto	u5790
  2931  0002A8  5057               	movf	(??_pick_and_place+1)^0,w,c
  2932  0002AA  E106               	bnz	u5791
  2933  0002AC  0456               	decf	??_pick_and_place^0,w,c
  2934  0002AE  B0D8               	btfsc	status,0,c
  2935  0002B0  EF5C  F001         	goto	u5791
  2936  0002B4  EF5F  F001         	goto	u5790
  2937  0002B8                     u5791:
  2938  0002B8  FFFF               	dw	65535	; assembler added errata NOP
  2939  0002BA  EF70  F001         	goto	l4795
  2940  0002BE                     u5790:
  2941  0002BE  FFFF               	dw	65535	; assembler added errata NOP
  2942  0002C0                     
  2943                           ; BSR set to: 0
  2944  0002C0  519E               	movf	_X_diff& (0+255),w,b
  2945  0002C2  5DAA               	subwf	_X_Pick& (0+255),w,b
  2946  0002C4  6E56               	movwf	??_pick_and_place^0,c
  2947  0002C6  519F               	movf	(_X_diff+1)& (0+255),w,b
  2948  0002C8  59AB               	subwfb	(_X_Pick+1)& (0+255),w,b
  2949  0002CA  6E57               	movwf	(??_pick_and_place+1)^0,c
  2950  0002CC  1E56               	comf	??_pick_and_place^0,f,c
  2951  0002CE  1E57               	comf	(??_pick_and_place+1)^0,f,c
  2952  0002D0  4A56               	infsnz	??_pick_and_place^0,f,c
  2953  0002D2  2A57               	incf	(??_pick_and_place+1)^0,f,c
  2954  0002D4  C056  F0B8         	movff	??_pick_and_place,_pick_and_place$911
  2955  0002D8  C057  F0B9         	movff	??_pick_and_place+1,_pick_and_place$911+1
  2956  0002DC  EF77  F001         	goto	l400
  2957  0002E0                     l4795:
  2958  0002E0  FFFF               	dw	65535	; assembler added errata NOP
  2959                           
  2960                           ; BSR set to: 0
  2961  0002E2  519E               	movf	_X_diff& (0+255),w,b
  2962  0002E4  5DAA               	subwf	_X_Pick& (0+255),w,b
  2963  0002E6  6FB8               	movwf	_pick_and_place$911& (0+255),b
  2964  0002E8  519F               	movf	(_X_diff+1)& (0+255),w,b
  2965  0002EA  59AB               	subwfb	(_X_Pick+1)& (0+255),w,b
  2966  0002EC  6FB9               	movwf	(_pick_and_place$911+1)& (0+255),b
  2967  0002EE                     l400:
  2968  0002EE  FFFF               	dw	65535	; assembler added errata NOP
  2969                           
  2970                           ; BSR set to: 0
  2971  0002F0  51B8               	movf	_pick_and_place$911& (0+255),w,b
  2972  0002F2  5DB6               	subwf	pick_and_place@i& (0+255),w,b
  2973  0002F4  51B7               	movf	(pick_and_place@i+1)& (0+255),w,b
  2974  0002F6  0A80               	xorlw	128
  2975  0002F8  6E56               	movwf	??_pick_and_place^0,c
  2976  0002FA  51B9               	movf	(_pick_and_place$911+1)& (0+255),w,b
  2977  0002FC  0A80               	xorlw	128
  2978  0002FE  5856               	subwfb	??_pick_and_place^0,w,c
  2979  000300  B0D8               	btfsc	status,0,c
  2980  000302  EF85  F001         	goto	u5801
  2981  000306  EF88  F001         	goto	u5800
  2982  00030A                     u5801:
  2983  00030A  FFFF               	dw	65535	; assembler added errata NOP
  2984  00030C  EF92  F001         	goto	l4799
  2985  000310                     u5800:
  2986  000310  FFFF               	dw	65535	; assembler added errata NOP
  2987  000312                     
  2988                           ; BSR set to: 0
  2989  000312  506A               	movf	_stop^0,w,c
  2990  000314  B4D8               	btfsc	status,2,c
  2991  000316  EF8F  F001         	goto	u5811
  2992  00031A  EF92  F001         	goto	u5810
  2993  00031E                     u5811:
  2994  00031E  FFFF               	dw	65535	; assembler added errata NOP
  2995  000320  EF43  F001         	goto	l4787
  2996  000324                     u5810:
  2997  000324                     l4799:
  2998  000324  FFFF               	dw	65535	; assembler added errata NOP
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;main.c: 655:         for(int i = 0; (i<((((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_P
      +                          ick-Y_diff)))*steps_per_unit)) && !stop; i++){Y_axis(Y_dir);}
  3002  000326  0E00               	movlw	0
  3003  000328  6FBB               	movwf	(pick_and_place@i_912+1)& (0+255),b
  3004  00032A  0E00               	movlw	0
  3005  00032C  6FBA               	movwf	pick_and_place@i_912& (0+255),b
  3006  00032E  EFA0  F001         	goto	l4805
  3007  000332                     l4801:
  3008  000332  FFFF               	dw	65535	; assembler added errata NOP
  3009                           
  3010                           ; BSR set to: 0
  3011  000334  51B4               	movf	_Y_dir& (0+255),w,b
  3012  000336  EC34  F015         	call	_Y_axis
  3013  00033A  0100               	movlb	0	; () banked
  3014  00033C  4BBA               	infsnz	pick_and_place@i_912& (0+255),f,b
  3015  00033E  2BBB               	incf	(pick_and_place@i_912+1)& (0+255),f,b
  3016  000340                     l4805:
  3017  000340  FFFF               	dw	65535	; assembler added errata NOP
  3018                           
  3019                           ; BSR set to: 0
  3020  000342  519C               	movf	_Y_diff& (0+255),w,b
  3021  000344  5DA6               	subwf	_Y_Pick& (0+255),w,b
  3022  000346  6E56               	movwf	??_pick_and_place^0,c
  3023  000348  519D               	movf	(_Y_diff+1)& (0+255),w,b
  3024  00034A  59A7               	subwfb	(_Y_Pick+1)& (0+255),w,b
  3025  00034C  6E57               	movwf	(??_pick_and_place+1)^0,c
  3026  00034E  BE57               	btfsc	(??_pick_and_place+1)^0,7,c
  3027  000350  EFB5  F001         	goto	u5820
  3028  000354  5057               	movf	(??_pick_and_place+1)^0,w,c
  3029  000356  E106               	bnz	u5821
  3030  000358  0456               	decf	??_pick_and_place^0,w,c
  3031  00035A  B0D8               	btfsc	status,0,c
  3032  00035C  EFB2  F001         	goto	u5821
  3033  000360  EFB5  F001         	goto	u5820
  3034  000364                     u5821:
  3035  000364  FFFF               	dw	65535	; assembler added errata NOP
  3036  000366  EFC6  F001         	goto	l4809
  3037  00036A                     u5820:
  3038  00036A  FFFF               	dw	65535	; assembler added errata NOP
  3039  00036C                     
  3040                           ; BSR set to: 0
  3041  00036C  519C               	movf	_Y_diff& (0+255),w,b
  3042  00036E  5DA6               	subwf	_Y_Pick& (0+255),w,b
  3043  000370  6E56               	movwf	??_pick_and_place^0,c
  3044  000372  519D               	movf	(_Y_diff+1)& (0+255),w,b
  3045  000374  59A7               	subwfb	(_Y_Pick+1)& (0+255),w,b
  3046  000376  6E57               	movwf	(??_pick_and_place+1)^0,c
  3047  000378  1E56               	comf	??_pick_and_place^0,f,c
  3048  00037A  1E57               	comf	(??_pick_and_place+1)^0,f,c
  3049  00037C  4A56               	infsnz	??_pick_and_place^0,f,c
  3050  00037E  2A57               	incf	(??_pick_and_place+1)^0,f,c
  3051  000380  C056  F0BC         	movff	??_pick_and_place,_pick_and_place$914
  3052  000384  C057  F0BD         	movff	??_pick_and_place+1,_pick_and_place$914+1
  3053  000388  EFCD  F001         	goto	l409
  3054  00038C                     l4809:
  3055  00038C  FFFF               	dw	65535	; assembler added errata NOP
  3056                           
  3057                           ; BSR set to: 0
  3058  00038E  519C               	movf	_Y_diff& (0+255),w,b
  3059  000390  5DA6               	subwf	_Y_Pick& (0+255),w,b
  3060  000392  6FBC               	movwf	_pick_and_place$914& (0+255),b
  3061  000394  519D               	movf	(_Y_diff+1)& (0+255),w,b
  3062  000396  59A7               	subwfb	(_Y_Pick+1)& (0+255),w,b
  3063  000398  6FBD               	movwf	(_pick_and_place$914+1)& (0+255),b
  3064  00039A                     l409:
  3065  00039A  FFFF               	dw	65535	; assembler added errata NOP
  3066                           
  3067                           ; BSR set to: 0
  3068  00039C  51BC               	movf	_pick_and_place$914& (0+255),w,b
  3069  00039E  5DBA               	subwf	pick_and_place@i_912& (0+255),w,b
  3070  0003A0  51BB               	movf	(pick_and_place@i_912+1)& (0+255),w,b
  3071  0003A2  0A80               	xorlw	128
  3072  0003A4  6E56               	movwf	??_pick_and_place^0,c
  3073  0003A6  51BD               	movf	(_pick_and_place$914+1)& (0+255),w,b
  3074  0003A8  0A80               	xorlw	128
  3075  0003AA  5856               	subwfb	??_pick_and_place^0,w,c
  3076  0003AC  B0D8               	btfsc	status,0,c
  3077  0003AE  EFDB  F001         	goto	u5831
  3078  0003B2  EFDE  F001         	goto	u5830
  3079  0003B6                     u5831:
  3080  0003B6  FFFF               	dw	65535	; assembler added errata NOP
  3081  0003B8  EFE8  F001         	goto	l4813
  3082  0003BC                     u5830:
  3083  0003BC  FFFF               	dw	65535	; assembler added errata NOP
  3084  0003BE                     
  3085                           ; BSR set to: 0
  3086  0003BE  506A               	movf	_stop^0,w,c
  3087  0003C0  B4D8               	btfsc	status,2,c
  3088  0003C2  EFE5  F001         	goto	u5841
  3089  0003C6  EFE8  F001         	goto	u5840
  3090  0003CA                     u5841:
  3091  0003CA  FFFF               	dw	65535	; assembler added errata NOP
  3092  0003CC  EF99  F001         	goto	l4801
  3093  0003D0                     u5840:
  3094  0003D0                     l4813:
  3095  0003D0  FFFF               	dw	65535	; assembler added errata NOP
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;main.c: 657:         for(int i = 0; (i<((((Angle_diff-Pick_Angle) > 0 ? (Angle_diff-Pic
      +                          k_Angle) : -(Angle_diff-Pick_Angle))/3.6)*steps_per_unit)) && !stop; i++){Twister(Rot_di
      +                          r);}
  3099  0003D2  0E00               	movlw	0
  3100  0003D4  6FBF               	movwf	(pick_and_place@i_915+1)& (0+255),b
  3101  0003D6  0E00               	movlw	0
  3102  0003D8  6FBE               	movwf	pick_and_place@i_915& (0+255),b
  3103  0003DA  EFF7  F001         	goto	l4819
  3104  0003DE                     l4815:
  3105  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  3106  0003E0  0100               	movlb	0	; () banked
  3107  0003E2  51B3               	movf	_Rot_dir& (0+255),w,b
  3108  0003E4  ECBB  F016         	call	_Twister
  3109  0003E8  0100               	movlb	0	; () banked
  3110  0003EA  4BBE               	infsnz	pick_and_place@i_915& (0+255),f,b
  3111  0003EC  2BBF               	incf	(pick_and_place@i_915+1)& (0+255),f,b
  3112  0003EE                     l4819:
  3113  0003EE  FFFF               	dw	65535	; assembler added errata NOP
  3114                           
  3115                           ; BSR set to: 0
  3116  0003F0  51A2               	movf	_Pick_Angle& (0+255),w,b
  3117  0003F2  5D9A               	subwf	_Angle_diff& (0+255),w,b
  3118  0003F4  6E56               	movwf	??_pick_and_place^0,c
  3119  0003F6  51A3               	movf	(_Pick_Angle+1)& (0+255),w,b
  3120  0003F8  599B               	subwfb	(_Angle_diff+1)& (0+255),w,b
  3121  0003FA  6E57               	movwf	(??_pick_and_place+1)^0,c
  3122  0003FC  BE57               	btfsc	(??_pick_and_place+1)^0,7,c
  3123  0003FE  EF0C  F002         	goto	u5850
  3124  000402  5057               	movf	(??_pick_and_place+1)^0,w,c
  3125  000404  E106               	bnz	u5851
  3126  000406  0456               	decf	??_pick_and_place^0,w,c
  3127  000408  B0D8               	btfsc	status,0,c
  3128  00040A  EF09  F002         	goto	u5851
  3129  00040E  EF0C  F002         	goto	u5850
  3130  000412                     u5851:
  3131  000412  FFFF               	dw	65535	; assembler added errata NOP
  3132  000414  EF1D  F002         	goto	l4823
  3133  000418                     u5850:
  3134  000418  FFFF               	dw	65535	; assembler added errata NOP
  3135  00041A                     
  3136                           ; BSR set to: 0
  3137  00041A  51A2               	movf	_Pick_Angle& (0+255),w,b
  3138  00041C  5D9A               	subwf	_Angle_diff& (0+255),w,b
  3139  00041E  6E56               	movwf	??_pick_and_place^0,c
  3140  000420  51A3               	movf	(_Pick_Angle+1)& (0+255),w,b
  3141  000422  599B               	subwfb	(_Angle_diff+1)& (0+255),w,b
  3142  000424  6E57               	movwf	(??_pick_and_place+1)^0,c
  3143  000426  1E56               	comf	??_pick_and_place^0,f,c
  3144  000428  1E57               	comf	(??_pick_and_place+1)^0,f,c
  3145  00042A  4A56               	infsnz	??_pick_and_place^0,f,c
  3146  00042C  2A57               	incf	(??_pick_and_place+1)^0,f,c
  3147  00042E  C056  F0C0         	movff	??_pick_and_place,_pick_and_place$917
  3148  000432  C057  F0C1         	movff	??_pick_and_place+1,_pick_and_place$917+1
  3149  000436  EF24  F002         	goto	l4825
  3150  00043A                     l4823:
  3151  00043A  FFFF               	dw	65535	; assembler added errata NOP
  3152                           
  3153                           ; BSR set to: 0
  3154  00043C  51A2               	movf	_Pick_Angle& (0+255),w,b
  3155  00043E  5D9A               	subwf	_Angle_diff& (0+255),w,b
  3156  000440  6FC0               	movwf	_pick_and_place$917& (0+255),b
  3157  000442  51A3               	movf	(_Pick_Angle+1)& (0+255),w,b
  3158  000444  599B               	subwfb	(_Angle_diff+1)& (0+255),w,b
  3159  000446  6FC1               	movwf	(_pick_and_place$917+1)& (0+255),b
  3160  000448                     l4825:
  3161  000448  FFFF               	dw	65535	; assembler added errata NOP
  3162                           
  3163                           ; BSR set to: 0
  3164  00044A  C0BE  F00A         	movff	pick_and_place@i_915,___xxtofl@val
  3165  00044E  C0BF  F00B         	movff	pick_and_place@i_915+1,___xxtofl@val+1
  3166  000452  0E00               	movlw	0
  3167  000454  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3168  000456  0EFF               	movlw	-1
  3169  000458  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3170  00045A  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3171  00045C  0E01               	movlw	1
  3172  00045E  EC16  F00E         	call	___xxtofl
  3173  000462  C00A  F04A         	movff	?___xxtofl,___flge@ff1
  3174  000466  C00B  F04B         	movff	?___xxtofl+1,___flge@ff1+1
  3175  00046A  C00C  F04C         	movff	?___xxtofl+2,___flge@ff1+2
  3176  00046E  C00D  F04D         	movff	?___xxtofl+3,___flge@ff1+3
  3177  000472  0E00               	movlw	0
  3178  000474  6E35               	movwf	___flmul@a^0,c
  3179  000476  0E00               	movlw	0
  3180  000478  6E36               	movwf	(___flmul@a+1)^0,c
  3181  00047A  0E80               	movlw	128
  3182  00047C  6E37               	movwf	(___flmul@a+2)^0,c
  3183  00047E  0E3F               	movlw	63
  3184  000480  6E38               	movwf	(___flmul@a+3)^0,c
  3185  000482  0E66               	movlw	102
  3186  000484  6E1C               	movwf	___fldiv@a^0,c
  3187  000486  0E66               	movlw	102
  3188  000488  6E1D               	movwf	(___fldiv@a+1)^0,c
  3189  00048A  0E66               	movlw	102
  3190  00048C  6E1E               	movwf	(___fldiv@a+2)^0,c
  3191  00048E  0E40               	movlw	64
  3192  000490  6E1F               	movwf	(___fldiv@a+3)^0,c
  3193  000492  C0C0  F00A         	movff	_pick_and_place$917,___xxtofl@val
  3194  000496  C0C1  F00B         	movff	_pick_and_place$917+1,___xxtofl@val+1
  3195  00049A  0E00               	movlw	0
  3196  00049C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3197  00049E  0EFF               	movlw	-1
  3198  0004A0  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3199  0004A2  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3200  0004A4  0E01               	movlw	1
  3201  0004A6  EC16  F00E         	call	___xxtofl
  3202  0004AA  C00A  F018         	movff	?___xxtofl,___fldiv@b
  3203  0004AE  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
  3204  0004B2  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
  3205  0004B6  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
  3206  0004BA  EC08  F00A         	call	___fldiv	;wreg free
  3207  0004BE  C018  F031         	movff	?___fldiv,___flmul@b
  3208  0004C2  C019  F032         	movff	?___fldiv+1,___flmul@b+1
  3209  0004C6  C01A  F033         	movff	?___fldiv+2,___flmul@b+2
  3210  0004CA  C01B  F034         	movff	?___fldiv+3,___flmul@b+3
  3211  0004CE  ECB6  F007         	call	___flmul	;wreg free
  3212  0004D2  C031  F04E         	movff	?___flmul,___flge@ff2
  3213  0004D6  C032  F04F         	movff	?___flmul+1,___flge@ff2+1
  3214  0004DA  C033  F050         	movff	?___flmul+2,___flge@ff2+2
  3215  0004DE  C034  F051         	movff	?___flmul+3,___flge@ff2+3
  3216  0004E2  EC89  F013         	call	___flge	;wreg free
  3217  0004E6  B0D8               	btfsc	status,0,c
  3218  0004E8  EF78  F002         	goto	u5861
  3219  0004EC  EF7B  F002         	goto	u5860
  3220  0004F0                     u5861:
  3221  0004F0  FFFF               	dw	65535	; assembler added errata NOP
  3222  0004F2  EF85  F002         	goto	l4829
  3223  0004F6                     u5860:
  3224  0004F6  FFFF               	dw	65535	; assembler added errata NOP
  3225  0004F8  506A               	movf	_stop^0,w,c
  3226  0004FA  B4D8               	btfsc	status,2,c
  3227  0004FC  EF82  F002         	goto	u5871
  3228  000500  EF85  F002         	goto	u5870
  3229  000504                     u5871:
  3230  000504  FFFF               	dw	65535	; assembler added errata NOP
  3231  000506  EFEF  F001         	goto	l4815
  3232  00050A                     u5870:
  3233  00050A                     l4829:
  3234  00050A  FFFF               	dw	65535	; assembler added errata NOP
  3235                           
  3236                           ;main.c: 658:         Tweezer(1);
  3237  00050C  0E01               	movlw	1
  3238  00050E  EC7B  F018         	call	_Tweezer
  3239  000512                     
  3240                           ;main.c: 659:         for(int i=0; i<3*steps_per_unit && !stop; i++){Z_axis(1);}
  3241  000512  0E00               	movlw	0
  3242  000514  0100               	movlb	0	; () banked
  3243  000516  6FC3               	movwf	(pick_and_place@i_919+1)& (0+255),b
  3244  000518  0E00               	movlw	0
  3245  00051A  6FC2               	movwf	pick_and_place@i_919& (0+255),b
  3246  00051C  EF97  F002         	goto	l4837
  3247  000520                     l4833:
  3248  000520  FFFF               	dw	65535	; assembler added errata NOP
  3249                           
  3250                           ; BSR set to: 0
  3251  000522  0E01               	movlw	1
  3252  000524  EC1D  F014         	call	_Z_axis
  3253  000528  0100               	movlb	0	; () banked
  3254  00052A  4BC2               	infsnz	pick_and_place@i_919& (0+255),f,b
  3255  00052C  2BC3               	incf	(pick_and_place@i_919+1)& (0+255),f,b
  3256  00052E                     l4837:
  3257  00052E  FFFF               	dw	65535	; assembler added errata NOP
  3258                           
  3259                           ; BSR set to: 0
  3260  000530  BFC3               	btfsc	(pick_and_place@i_919+1)& (0+255),7,b
  3261  000532  EFA7  F002         	goto	u5880
  3262  000536  51C3               	movf	(pick_and_place@i_919+1)& (0+255),w,b
  3263  000538  E107               	bnz	u5881
  3264  00053A  0E03               	movlw	3
  3265  00053C  5DC2               	subwf	pick_and_place@i_919& (0+255),w,b
  3266  00053E  B0D8               	btfsc	status,0,c
  3267  000540  EFA4  F002         	goto	u5881
  3268  000544  EFA7  F002         	goto	u5880
  3269  000548                     u5881:
  3270  000548  FFFF               	dw	65535	; assembler added errata NOP
  3271  00054A  EFB1  F002         	goto	l4841
  3272  00054E                     u5880:
  3273  00054E  FFFF               	dw	65535	; assembler added errata NOP
  3274  000550                     
  3275                           ; BSR set to: 0
  3276  000550  506A               	movf	_stop^0,w,c
  3277  000552  B4D8               	btfsc	status,2,c
  3278  000554  EFAE  F002         	goto	u5891
  3279  000558  EFB1  F002         	goto	u5890
  3280  00055C                     u5891:
  3281  00055C  FFFF               	dw	65535	; assembler added errata NOP
  3282  00055E  EF90  F002         	goto	l4833
  3283  000562                     u5890:
  3284  000562                     l4841:
  3285  000562  FFFF               	dw	65535	; assembler added errata NOP
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;main.c: 660:         check_component(Componnt);
  3289  000564  51D6               	movf	pick_and_place@Componnt& (0+255),w,b
  3290  000566  EC30  F017         	call	_check_component
  3291  00056A                     
  3292                           ;main.c: 661:         Tweezer(0);
  3293  00056A  0E00               	movlw	0
  3294  00056C  EC7B  F018         	call	_Tweezer
  3295  000570                     
  3296                           ;main.c: 662:         for(int i=0; i<3*steps_per_unit && !stop; i++){Z_axis(0);}
  3297  000570  0E00               	movlw	0
  3298  000572  0100               	movlb	0	; () banked
  3299  000574  6FC5               	movwf	(pick_and_place@i_922+1)& (0+255),b
  3300  000576  0E00               	movlw	0
  3301  000578  6FC4               	movwf	pick_and_place@i_922& (0+255),b
  3302  00057A  EFC6  F002         	goto	l4851
  3303  00057E                     l4847:
  3304  00057E  FFFF               	dw	65535	; assembler added errata NOP
  3305                           
  3306                           ; BSR set to: 0
  3307  000580  0E00               	movlw	0
  3308  000582  EC1D  F014         	call	_Z_axis
  3309  000586  0100               	movlb	0	; () banked
  3310  000588  4BC4               	infsnz	pick_and_place@i_922& (0+255),f,b
  3311  00058A  2BC5               	incf	(pick_and_place@i_922+1)& (0+255),f,b
  3312  00058C                     l4851:
  3313  00058C  FFFF               	dw	65535	; assembler added errata NOP
  3314                           
  3315                           ; BSR set to: 0
  3316  00058E  BFC5               	btfsc	(pick_and_place@i_922+1)& (0+255),7,b
  3317  000590  EFD6  F002         	goto	u5900
  3318  000594  51C5               	movf	(pick_and_place@i_922+1)& (0+255),w,b
  3319  000596  E107               	bnz	u5901
  3320  000598  0E03               	movlw	3
  3321  00059A  5DC4               	subwf	pick_and_place@i_922& (0+255),w,b
  3322  00059C  B0D8               	btfsc	status,0,c
  3323  00059E  EFD3  F002         	goto	u5901
  3324  0005A2  EFD6  F002         	goto	u5900
  3325  0005A6                     u5901:
  3326  0005A6  FFFF               	dw	65535	; assembler added errata NOP
  3327  0005A8  EFE0  F002         	goto	l4855
  3328  0005AC                     u5900:
  3329  0005AC  FFFF               	dw	65535	; assembler added errata NOP
  3330  0005AE                     
  3331                           ; BSR set to: 0
  3332  0005AE  506A               	movf	_stop^0,w,c
  3333  0005B0  B4D8               	btfsc	status,2,c
  3334  0005B2  EFDD  F002         	goto	u5911
  3335  0005B6  EFE0  F002         	goto	u5910
  3336  0005BA                     u5911:
  3337  0005BA  FFFF               	dw	65535	; assembler added errata NOP
  3338  0005BC  EFBF  F002         	goto	l4847
  3339  0005C0                     u5910:
  3340  0005C0                     l4855:
  3341  0005C0  FFFF               	dw	65535	; assembler added errata NOP
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;main.c: 666:         X_dir=((X_Pick<X_Place)? 1:0);
  3345  0005C2  51A8               	movf	_X_Place& (0+255),w,b
  3346  0005C4  5DAA               	subwf	_X_Pick& (0+255),w,b
  3347  0005C6  51AB               	movf	(_X_Pick+1)& (0+255),w,b
  3348  0005C8  0A80               	xorlw	128
  3349  0005CA  6E56               	movwf	??_pick_and_place^0,c
  3350  0005CC  51A9               	movf	(_X_Place+1)& (0+255),w,b
  3351  0005CE  0A80               	xorlw	128
  3352  0005D0  5856               	subwfb	??_pick_and_place^0,w,c
  3353  0005D2  A0D8               	btfss	status,0,c
  3354  0005D4  EFEE  F002         	goto	u5921
  3355  0005D8  EFF2  F002         	goto	u5920
  3356  0005DC                     u5921:
  3357  0005DC  FFFF               	dw	65535	; assembler added errata NOP
  3358  0005DE  0E01               	movlw	1
  3359  0005E0  EFF4  F002         	goto	u5930
  3360  0005E4                     u5920:
  3361  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  3362  0005E6  0E00               	movlw	0
  3363  0005E8                     u5930:
  3364  0005E8  FFFF               	dw	65535	; assembler added errata NOP
  3365  0005EA  6FB5               	movwf	_X_dir& (0+255),b
  3366                           
  3367                           ;main.c: 667:         Y_dir=((Y_Pick<Y_Place)? 1:0);
  3368  0005EC  51A4               	movf	_Y_Place& (0+255),w,b
  3369  0005EE  5DA6               	subwf	_Y_Pick& (0+255),w,b
  3370  0005F0  51A7               	movf	(_Y_Pick+1)& (0+255),w,b
  3371  0005F2  0A80               	xorlw	128
  3372  0005F4  6E56               	movwf	??_pick_and_place^0,c
  3373  0005F6  51A5               	movf	(_Y_Place+1)& (0+255),w,b
  3374  0005F8  0A80               	xorlw	128
  3375  0005FA  5856               	subwfb	??_pick_and_place^0,w,c
  3376  0005FC  A0D8               	btfss	status,0,c
  3377  0005FE  EF03  F003         	goto	u5941
  3378  000602  EF07  F003         	goto	u5940
  3379  000606                     u5941:
  3380  000606  FFFF               	dw	65535	; assembler added errata NOP
  3381  000608  0E01               	movlw	1
  3382  00060A  EF09  F003         	goto	u5950
  3383  00060E                     u5940:
  3384  00060E  FFFF               	dw	65535	; assembler added errata NOP
  3385  000610  0E00               	movlw	0
  3386  000612                     u5950:
  3387  000612  FFFF               	dw	65535	; assembler added errata NOP
  3388  000614  6FB4               	movwf	_Y_dir& (0+255),b
  3389                           
  3390                           ;main.c: 668:         Rot_dir=((Pick_Angle<Place_Angle)? 1:0);
  3391  000616  51A0               	movf	_Place_Angle& (0+255),w,b
  3392  000618  5DA2               	subwf	_Pick_Angle& (0+255),w,b
  3393  00061A  51A3               	movf	(_Pick_Angle+1)& (0+255),w,b
  3394  00061C  0A80               	xorlw	128
  3395  00061E  6E56               	movwf	??_pick_and_place^0,c
  3396  000620  51A1               	movf	(_Place_Angle+1)& (0+255),w,b
  3397  000622  0A80               	xorlw	128
  3398  000624  5856               	subwfb	??_pick_and_place^0,w,c
  3399  000626  A0D8               	btfss	status,0,c
  3400  000628  EF18  F003         	goto	u5961
  3401  00062C  EF1C  F003         	goto	u5960
  3402  000630                     u5961:
  3403  000630  FFFF               	dw	65535	; assembler added errata NOP
  3404  000632  0E01               	movlw	1
  3405  000634  EF1E  F003         	goto	u5970
  3406  000638                     u5960:
  3407  000638  FFFF               	dw	65535	; assembler added errata NOP
  3408  00063A  0E00               	movlw	0
  3409  00063C                     u5970:
  3410  00063C  FFFF               	dw	65535	; assembler added errata NOP
  3411  00063E  6FB3               	movwf	_Rot_dir& (0+255),b
  3412  000640                     
  3413                           ; BSR set to: 0
  3414                           ;main.c: 669:    if(!stop){
  3415  000640  506A               	movf	_stop^0,w,c
  3416  000642  A4D8               	btfss	status,2,c
  3417  000644  EF26  F003         	goto	u5981
  3418  000648  EF29  F003         	goto	u5980
  3419  00064C                     u5981:
  3420  00064C  FFFF               	dw	65535	; assembler added errata NOP
  3421  00064E  EF34  F003         	goto	l4863
  3422  000652                     u5980:
  3423  000652  FFFF               	dw	65535	; assembler added errata NOP
  3424  000654                     
  3425                           ; BSR set to: 0
  3426                           ;main.c: 670:         print_string("\nPlacing component:");
  3427  000654  0EAC               	movlw	low STR_20
  3428  000656  6E0A               	movwf	print_string@strng^0,c
  3429  000658  0E7F               	movlw	high STR_20
  3430  00065A  6E0B               	movwf	(print_string@strng+1)^0,c
  3431  00065C  EC9E  F017         	call	_print_string	;wreg free
  3432  000660                     
  3433                           ;main.c: 671:         print_char(Componnt);
  3434  000660  0100               	movlb	0	; () banked
  3435  000662  51D6               	movf	pick_and_place@Componnt& (0+255),w,b
  3436  000664  EC98  F01A         	call	_print_char
  3437  000668                     l4863:
  3438  000668  FFFF               	dw	65535	; assembler added errata NOP
  3439                           
  3440                           ;main.c: 673:         for(int i = 0; (i<((((X_Place-X_Pick) > 0 ? (X_Place-X_Pick) : -(X
      +                          _Place-X_Pick)))*steps_per_unit)) && !stop; i++){X_axis(X_dir);}
  3441  00066A  0E00               	movlw	0
  3442  00066C  0100               	movlb	0	; () banked
  3443  00066E  6FC7               	movwf	(pick_and_place@i_924+1)& (0+255),b
  3444  000670  0E00               	movlw	0
  3445  000672  6FC6               	movwf	pick_and_place@i_924& (0+255),b
  3446  000674  EF43  F003         	goto	l4869
  3447  000678                     l4865:
  3448  000678  FFFF               	dw	65535	; assembler added errata NOP
  3449                           
  3450                           ; BSR set to: 0
  3451  00067A  51B5               	movf	_X_dir& (0+255),w,b
  3452  00067C  ECB9  F015         	call	_X_axis
  3453  000680  0100               	movlb	0	; () banked
  3454  000682  4BC6               	infsnz	pick_and_place@i_924& (0+255),f,b
  3455  000684  2BC7               	incf	(pick_and_place@i_924+1)& (0+255),f,b
  3456  000686                     l4869:
  3457  000686  FFFF               	dw	65535	; assembler added errata NOP
  3458                           
  3459                           ; BSR set to: 0
  3460  000688  51AA               	movf	_X_Pick& (0+255),w,b
  3461  00068A  5DA8               	subwf	_X_Place& (0+255),w,b
  3462  00068C  6E56               	movwf	??_pick_and_place^0,c
  3463  00068E  51AB               	movf	(_X_Pick+1)& (0+255),w,b
  3464  000690  59A9               	subwfb	(_X_Place+1)& (0+255),w,b
  3465  000692  6E57               	movwf	(??_pick_and_place+1)^0,c
  3466  000694  BE57               	btfsc	(??_pick_and_place+1)^0,7,c
  3467  000696  EF58  F003         	goto	u5990
  3468  00069A  5057               	movf	(??_pick_and_place+1)^0,w,c
  3469  00069C  E106               	bnz	u5991
  3470  00069E  0456               	decf	??_pick_and_place^0,w,c
  3471  0006A0  B0D8               	btfsc	status,0,c
  3472  0006A2  EF55  F003         	goto	u5991
  3473  0006A6  EF58  F003         	goto	u5990
  3474  0006AA                     u5991:
  3475  0006AA  FFFF               	dw	65535	; assembler added errata NOP
  3476  0006AC  EF69  F003         	goto	l4873
  3477  0006B0                     u5990:
  3478  0006B0  FFFF               	dw	65535	; assembler added errata NOP
  3479  0006B2                     
  3480                           ; BSR set to: 0
  3481  0006B2  51AA               	movf	_X_Pick& (0+255),w,b
  3482  0006B4  5DA8               	subwf	_X_Place& (0+255),w,b
  3483  0006B6  6E56               	movwf	??_pick_and_place^0,c
  3484  0006B8  51AB               	movf	(_X_Pick+1)& (0+255),w,b
  3485  0006BA  59A9               	subwfb	(_X_Place+1)& (0+255),w,b
  3486  0006BC  6E57               	movwf	(??_pick_and_place+1)^0,c
  3487  0006BE  1E56               	comf	??_pick_and_place^0,f,c
  3488  0006C0  1E57               	comf	(??_pick_and_place+1)^0,f,c
  3489  0006C2  4A56               	infsnz	??_pick_and_place^0,f,c
  3490  0006C4  2A57               	incf	(??_pick_and_place+1)^0,f,c
  3491  0006C6  C056  F0C8         	movff	??_pick_and_place,_pick_and_place$925
  3492  0006CA  C057  F0C9         	movff	??_pick_and_place+1,_pick_and_place$925+1
  3493  0006CE  EF70  F003         	goto	l438
  3494  0006D2                     l4873:
  3495  0006D2  FFFF               	dw	65535	; assembler added errata NOP
  3496                           
  3497                           ; BSR set to: 0
  3498  0006D4  51AA               	movf	_X_Pick& (0+255),w,b
  3499  0006D6  5DA8               	subwf	_X_Place& (0+255),w,b
  3500  0006D8  6FC8               	movwf	_pick_and_place$925& (0+255),b
  3501  0006DA  51AB               	movf	(_X_Pick+1)& (0+255),w,b
  3502  0006DC  59A9               	subwfb	(_X_Place+1)& (0+255),w,b
  3503  0006DE  6FC9               	movwf	(_pick_and_place$925+1)& (0+255),b
  3504  0006E0                     l438:
  3505  0006E0  FFFF               	dw	65535	; assembler added errata NOP
  3506                           
  3507                           ; BSR set to: 0
  3508  0006E2  51C8               	movf	_pick_and_place$925& (0+255),w,b
  3509  0006E4  5DC6               	subwf	pick_and_place@i_924& (0+255),w,b
  3510  0006E6  51C7               	movf	(pick_and_place@i_924+1)& (0+255),w,b
  3511  0006E8  0A80               	xorlw	128
  3512  0006EA  6E56               	movwf	??_pick_and_place^0,c
  3513  0006EC  51C9               	movf	(_pick_and_place$925+1)& (0+255),w,b
  3514  0006EE  0A80               	xorlw	128
  3515  0006F0  5856               	subwfb	??_pick_and_place^0,w,c
  3516  0006F2  B0D8               	btfsc	status,0,c
  3517  0006F4  EF7E  F003         	goto	u6001
  3518  0006F8  EF81  F003         	goto	u6000
  3519  0006FC                     u6001:
  3520  0006FC  FFFF               	dw	65535	; assembler added errata NOP
  3521  0006FE  EF8B  F003         	goto	l4877
  3522  000702                     u6000:
  3523  000702  FFFF               	dw	65535	; assembler added errata NOP
  3524  000704                     
  3525                           ; BSR set to: 0
  3526  000704  506A               	movf	_stop^0,w,c
  3527  000706  B4D8               	btfsc	status,2,c
  3528  000708  EF88  F003         	goto	u6011
  3529  00070C  EF8B  F003         	goto	u6010
  3530  000710                     u6011:
  3531  000710  FFFF               	dw	65535	; assembler added errata NOP
  3532  000712  EF3C  F003         	goto	l4865
  3533  000716                     u6010:
  3534  000716                     l4877:
  3535  000716  FFFF               	dw	65535	; assembler added errata NOP
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;main.c: 674:         for(int i = 0; (i<((((Y_Place-Y_Pick) > 0 ? (Y_Place-Y_Pick) : -(Y
      +                          _Place-Y_Pick)))*steps_per_unit)) && !stop; i++){Y_axis(Y_dir);}
  3539  000718  0E00               	movlw	0
  3540  00071A  6FCB               	movwf	(pick_and_place@i_926+1)& (0+255),b
  3541  00071C  0E00               	movlw	0
  3542  00071E  6FCA               	movwf	pick_and_place@i_926& (0+255),b
  3543  000720  EF99  F003         	goto	l4883
  3544  000724                     l4879:
  3545  000724  FFFF               	dw	65535	; assembler added errata NOP
  3546                           
  3547                           ; BSR set to: 0
  3548  000726  51B4               	movf	_Y_dir& (0+255),w,b
  3549  000728  EC34  F015         	call	_Y_axis
  3550  00072C  0100               	movlb	0	; () banked
  3551  00072E  4BCA               	infsnz	pick_and_place@i_926& (0+255),f,b
  3552  000730  2BCB               	incf	(pick_and_place@i_926+1)& (0+255),f,b
  3553  000732                     l4883:
  3554  000732  FFFF               	dw	65535	; assembler added errata NOP
  3555                           
  3556                           ; BSR set to: 0
  3557  000734  51A6               	movf	_Y_Pick& (0+255),w,b
  3558  000736  5DA4               	subwf	_Y_Place& (0+255),w,b
  3559  000738  6E56               	movwf	??_pick_and_place^0,c
  3560  00073A  51A7               	movf	(_Y_Pick+1)& (0+255),w,b
  3561  00073C  59A5               	subwfb	(_Y_Place+1)& (0+255),w,b
  3562  00073E  6E57               	movwf	(??_pick_and_place+1)^0,c
  3563  000740  BE57               	btfsc	(??_pick_and_place+1)^0,7,c
  3564  000742  EFAE  F003         	goto	u6020
  3565  000746  5057               	movf	(??_pick_and_place+1)^0,w,c
  3566  000748  E106               	bnz	u6021
  3567  00074A  0456               	decf	??_pick_and_place^0,w,c
  3568  00074C  B0D8               	btfsc	status,0,c
  3569  00074E  EFAB  F003         	goto	u6021
  3570  000752  EFAE  F003         	goto	u6020
  3571  000756                     u6021:
  3572  000756  FFFF               	dw	65535	; assembler added errata NOP
  3573  000758  EFBF  F003         	goto	l4887
  3574  00075C                     u6020:
  3575  00075C  FFFF               	dw	65535	; assembler added errata NOP
  3576  00075E                     
  3577                           ; BSR set to: 0
  3578  00075E  51A6               	movf	_Y_Pick& (0+255),w,b
  3579  000760  5DA4               	subwf	_Y_Place& (0+255),w,b
  3580  000762  6E56               	movwf	??_pick_and_place^0,c
  3581  000764  51A7               	movf	(_Y_Pick+1)& (0+255),w,b
  3582  000766  59A5               	subwfb	(_Y_Place+1)& (0+255),w,b
  3583  000768  6E57               	movwf	(??_pick_and_place+1)^0,c
  3584  00076A  1E56               	comf	??_pick_and_place^0,f,c
  3585  00076C  1E57               	comf	(??_pick_and_place+1)^0,f,c
  3586  00076E  4A56               	infsnz	??_pick_and_place^0,f,c
  3587  000770  2A57               	incf	(??_pick_and_place+1)^0,f,c
  3588  000772  C056  F0CC         	movff	??_pick_and_place,_pick_and_place$927
  3589  000776  C057  F0CD         	movff	??_pick_and_place+1,_pick_and_place$927+1
  3590  00077A  EFC6  F003         	goto	l447
  3591  00077E                     l4887:
  3592  00077E  FFFF               	dw	65535	; assembler added errata NOP
  3593                           
  3594                           ; BSR set to: 0
  3595  000780  51A6               	movf	_Y_Pick& (0+255),w,b
  3596  000782  5DA4               	subwf	_Y_Place& (0+255),w,b
  3597  000784  6FCC               	movwf	_pick_and_place$927& (0+255),b
  3598  000786  51A7               	movf	(_Y_Pick+1)& (0+255),w,b
  3599  000788  59A5               	subwfb	(_Y_Place+1)& (0+255),w,b
  3600  00078A  6FCD               	movwf	(_pick_and_place$927+1)& (0+255),b
  3601  00078C                     l447:
  3602  00078C  FFFF               	dw	65535	; assembler added errata NOP
  3603                           
  3604                           ; BSR set to: 0
  3605  00078E  51CC               	movf	_pick_and_place$927& (0+255),w,b
  3606  000790  5DCA               	subwf	pick_and_place@i_926& (0+255),w,b
  3607  000792  51CB               	movf	(pick_and_place@i_926+1)& (0+255),w,b
  3608  000794  0A80               	xorlw	128
  3609  000796  6E56               	movwf	??_pick_and_place^0,c
  3610  000798  51CD               	movf	(_pick_and_place$927+1)& (0+255),w,b
  3611  00079A  0A80               	xorlw	128
  3612  00079C  5856               	subwfb	??_pick_and_place^0,w,c
  3613  00079E  B0D8               	btfsc	status,0,c
  3614  0007A0  EFD4  F003         	goto	u6031
  3615  0007A4  EFD7  F003         	goto	u6030
  3616  0007A8                     u6031:
  3617  0007A8  FFFF               	dw	65535	; assembler added errata NOP
  3618  0007AA  EFE1  F003         	goto	l4891
  3619  0007AE                     u6030:
  3620  0007AE  FFFF               	dw	65535	; assembler added errata NOP
  3621  0007B0                     
  3622                           ; BSR set to: 0
  3623  0007B0  506A               	movf	_stop^0,w,c
  3624  0007B2  B4D8               	btfsc	status,2,c
  3625  0007B4  EFDE  F003         	goto	u6041
  3626  0007B8  EFE1  F003         	goto	u6040
  3627  0007BC                     u6041:
  3628  0007BC  FFFF               	dw	65535	; assembler added errata NOP
  3629  0007BE  EF92  F003         	goto	l4879
  3630  0007C2                     u6040:
  3631  0007C2                     l4891:
  3632  0007C2  FFFF               	dw	65535	; assembler added errata NOP
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;main.c: 675:         for(int i = 0; (i<((((Pick_Angle-Place_Angle) > 0 ? (Pick_Angle-Pl
      +                          ace_Angle) : -(Pick_Angle-Place_Angle))/3.6)*steps_per_unit)) && !stop; i++){Twister(Rot
      +                          _dir);}
  3636  0007C4  0E00               	movlw	0
  3637  0007C6  6FCF               	movwf	(pick_and_place@i_928+1)& (0+255),b
  3638  0007C8  0E00               	movlw	0
  3639  0007CA  6FCE               	movwf	pick_and_place@i_928& (0+255),b
  3640  0007CC  EFF0  F003         	goto	l4897
  3641  0007D0                     l4893:
  3642  0007D0  FFFF               	dw	65535	; assembler added errata NOP
  3643  0007D2  0100               	movlb	0	; () banked
  3644  0007D4  51B3               	movf	_Rot_dir& (0+255),w,b
  3645  0007D6  ECBB  F016         	call	_Twister
  3646  0007DA  0100               	movlb	0	; () banked
  3647  0007DC  4BCE               	infsnz	pick_and_place@i_928& (0+255),f,b
  3648  0007DE  2BCF               	incf	(pick_and_place@i_928+1)& (0+255),f,b
  3649  0007E0                     l4897:
  3650  0007E0  FFFF               	dw	65535	; assembler added errata NOP
  3651                           
  3652                           ; BSR set to: 0
  3653  0007E2  51A0               	movf	_Place_Angle& (0+255),w,b
  3654  0007E4  5DA2               	subwf	_Pick_Angle& (0+255),w,b
  3655  0007E6  6E56               	movwf	??_pick_and_place^0,c
  3656  0007E8  51A1               	movf	(_Place_Angle+1)& (0+255),w,b
  3657  0007EA  59A3               	subwfb	(_Pick_Angle+1)& (0+255),w,b
  3658  0007EC  6E57               	movwf	(??_pick_and_place+1)^0,c
  3659  0007EE  BE57               	btfsc	(??_pick_and_place+1)^0,7,c
  3660  0007F0  EF05  F004         	goto	u6050
  3661  0007F4  5057               	movf	(??_pick_and_place+1)^0,w,c
  3662  0007F6  E106               	bnz	u6051
  3663  0007F8  0456               	decf	??_pick_and_place^0,w,c
  3664  0007FA  B0D8               	btfsc	status,0,c
  3665  0007FC  EF02  F004         	goto	u6051
  3666  000800  EF05  F004         	goto	u6050
  3667  000804                     u6051:
  3668  000804  FFFF               	dw	65535	; assembler added errata NOP
  3669  000806  EF16  F004         	goto	l4901
  3670  00080A                     u6050:
  3671  00080A  FFFF               	dw	65535	; assembler added errata NOP
  3672  00080C                     
  3673                           ; BSR set to: 0
  3674  00080C  51A0               	movf	_Place_Angle& (0+255),w,b
  3675  00080E  5DA2               	subwf	_Pick_Angle& (0+255),w,b
  3676  000810  6E56               	movwf	??_pick_and_place^0,c
  3677  000812  51A1               	movf	(_Place_Angle+1)& (0+255),w,b
  3678  000814  59A3               	subwfb	(_Pick_Angle+1)& (0+255),w,b
  3679  000816  6E57               	movwf	(??_pick_and_place+1)^0,c
  3680  000818  1E56               	comf	??_pick_and_place^0,f,c
  3681  00081A  1E57               	comf	(??_pick_and_place+1)^0,f,c
  3682  00081C  4A56               	infsnz	??_pick_and_place^0,f,c
  3683  00081E  2A57               	incf	(??_pick_and_place+1)^0,f,c
  3684  000820  C056  F0D0         	movff	??_pick_and_place,_pick_and_place$929
  3685  000824  C057  F0D1         	movff	??_pick_and_place+1,_pick_and_place$929+1
  3686  000828  EF1D  F004         	goto	l4903
  3687  00082C                     l4901:
  3688  00082C  FFFF               	dw	65535	; assembler added errata NOP
  3689                           
  3690                           ; BSR set to: 0
  3691  00082E  51A0               	movf	_Place_Angle& (0+255),w,b
  3692  000830  5DA2               	subwf	_Pick_Angle& (0+255),w,b
  3693  000832  6FD0               	movwf	_pick_and_place$929& (0+255),b
  3694  000834  51A1               	movf	(_Place_Angle+1)& (0+255),w,b
  3695  000836  59A3               	subwfb	(_Pick_Angle+1)& (0+255),w,b
  3696  000838  6FD1               	movwf	(_pick_and_place$929+1)& (0+255),b
  3697  00083A                     l4903:
  3698  00083A  FFFF               	dw	65535	; assembler added errata NOP
  3699                           
  3700                           ; BSR set to: 0
  3701  00083C  C0CE  F00A         	movff	pick_and_place@i_928,___xxtofl@val
  3702  000840  C0CF  F00B         	movff	pick_and_place@i_928+1,___xxtofl@val+1
  3703  000844  0E00               	movlw	0
  3704  000846  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3705  000848  0EFF               	movlw	-1
  3706  00084A  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3707  00084C  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3708  00084E  0E01               	movlw	1
  3709  000850  EC16  F00E         	call	___xxtofl
  3710  000854  C00A  F04A         	movff	?___xxtofl,___flge@ff1
  3711  000858  C00B  F04B         	movff	?___xxtofl+1,___flge@ff1+1
  3712  00085C  C00C  F04C         	movff	?___xxtofl+2,___flge@ff1+2
  3713  000860  C00D  F04D         	movff	?___xxtofl+3,___flge@ff1+3
  3714  000864  0E00               	movlw	0
  3715  000866  6E35               	movwf	___flmul@a^0,c
  3716  000868  0E00               	movlw	0
  3717  00086A  6E36               	movwf	(___flmul@a+1)^0,c
  3718  00086C  0E80               	movlw	128
  3719  00086E  6E37               	movwf	(___flmul@a+2)^0,c
  3720  000870  0E3F               	movlw	63
  3721  000872  6E38               	movwf	(___flmul@a+3)^0,c
  3722  000874  0E66               	movlw	102
  3723  000876  6E1C               	movwf	___fldiv@a^0,c
  3724  000878  0E66               	movlw	102
  3725  00087A  6E1D               	movwf	(___fldiv@a+1)^0,c
  3726  00087C  0E66               	movlw	102
  3727  00087E  6E1E               	movwf	(___fldiv@a+2)^0,c
  3728  000880  0E40               	movlw	64
  3729  000882  6E1F               	movwf	(___fldiv@a+3)^0,c
  3730  000884  C0D0  F00A         	movff	_pick_and_place$929,___xxtofl@val
  3731  000888  C0D1  F00B         	movff	_pick_and_place$929+1,___xxtofl@val+1
  3732  00088C  0E00               	movlw	0
  3733  00088E  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3734  000890  0EFF               	movlw	-1
  3735  000892  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3736  000894  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3737  000896  0E01               	movlw	1
  3738  000898  EC16  F00E         	call	___xxtofl
  3739  00089C  C00A  F018         	movff	?___xxtofl,___fldiv@b
  3740  0008A0  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
  3741  0008A4  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
  3742  0008A8  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
  3743  0008AC  EC08  F00A         	call	___fldiv	;wreg free
  3744  0008B0  C018  F031         	movff	?___fldiv,___flmul@b
  3745  0008B4  C019  F032         	movff	?___fldiv+1,___flmul@b+1
  3746  0008B8  C01A  F033         	movff	?___fldiv+2,___flmul@b+2
  3747  0008BC  C01B  F034         	movff	?___fldiv+3,___flmul@b+3
  3748  0008C0  ECB6  F007         	call	___flmul	;wreg free
  3749  0008C4  C031  F04E         	movff	?___flmul,___flge@ff2
  3750  0008C8  C032  F04F         	movff	?___flmul+1,___flge@ff2+1
  3751  0008CC  C033  F050         	movff	?___flmul+2,___flge@ff2+2
  3752  0008D0  C034  F051         	movff	?___flmul+3,___flge@ff2+3
  3753  0008D4  EC89  F013         	call	___flge	;wreg free
  3754  0008D8  B0D8               	btfsc	status,0,c
  3755  0008DA  EF71  F004         	goto	u6061
  3756  0008DE  EF74  F004         	goto	u6060
  3757  0008E2                     u6061:
  3758  0008E2  FFFF               	dw	65535	; assembler added errata NOP
  3759  0008E4  EF7E  F004         	goto	l4907
  3760  0008E8                     u6060:
  3761  0008E8  FFFF               	dw	65535	; assembler added errata NOP
  3762  0008EA  506A               	movf	_stop^0,w,c
  3763  0008EC  B4D8               	btfsc	status,2,c
  3764  0008EE  EF7B  F004         	goto	u6071
  3765  0008F2  EF7E  F004         	goto	u6070
  3766  0008F6                     u6071:
  3767  0008F6  FFFF               	dw	65535	; assembler added errata NOP
  3768  0008F8  EFE8  F003         	goto	l4893
  3769  0008FC                     u6070:
  3770  0008FC                     l4907:
  3771  0008FC  FFFF               	dw	65535	; assembler added errata NOP
  3772                           
  3773                           ;main.c: 676:         for(int i=0; i<3*steps_per_unit && !stop; i++){Z_axis(1);}
  3774  0008FE  0E00               	movlw	0
  3775  000900  0100               	movlb	0	; () banked
  3776  000902  6FD3               	movwf	(pick_and_place@i_930+1)& (0+255),b
  3777  000904  0E00               	movlw	0
  3778  000906  6FD2               	movwf	pick_and_place@i_930& (0+255),b
  3779  000908  EF8D  F004         	goto	l4913
  3780  00090C                     l4909:
  3781  00090C  FFFF               	dw	65535	; assembler added errata NOP
  3782                           
  3783                           ; BSR set to: 0
  3784  00090E  0E01               	movlw	1
  3785  000910  EC1D  F014         	call	_Z_axis
  3786  000914  0100               	movlb	0	; () banked
  3787  000916  4BD2               	infsnz	pick_and_place@i_930& (0+255),f,b
  3788  000918  2BD3               	incf	(pick_and_place@i_930+1)& (0+255),f,b
  3789  00091A                     l4913:
  3790  00091A  FFFF               	dw	65535	; assembler added errata NOP
  3791                           
  3792                           ; BSR set to: 0
  3793  00091C  BFD3               	btfsc	(pick_and_place@i_930+1)& (0+255),7,b
  3794  00091E  EF9D  F004         	goto	u6080
  3795  000922  51D3               	movf	(pick_and_place@i_930+1)& (0+255),w,b
  3796  000924  E107               	bnz	u6081
  3797  000926  0E03               	movlw	3
  3798  000928  5DD2               	subwf	pick_and_place@i_930& (0+255),w,b
  3799  00092A  B0D8               	btfsc	status,0,c
  3800  00092C  EF9A  F004         	goto	u6081
  3801  000930  EF9D  F004         	goto	u6080
  3802  000934                     u6081:
  3803  000934  FFFF               	dw	65535	; assembler added errata NOP
  3804  000936  EFA7  F004         	goto	l4917
  3805  00093A                     u6080:
  3806  00093A  FFFF               	dw	65535	; assembler added errata NOP
  3807  00093C                     
  3808                           ; BSR set to: 0
  3809  00093C  506A               	movf	_stop^0,w,c
  3810  00093E  B4D8               	btfsc	status,2,c
  3811  000940  EFA4  F004         	goto	u6091
  3812  000944  EFA7  F004         	goto	u6090
  3813  000948                     u6091:
  3814  000948  FFFF               	dw	65535	; assembler added errata NOP
  3815  00094A  EF86  F004         	goto	l4909
  3816  00094E                     u6090:
  3817  00094E                     l4917:
  3818  00094E  FFFF               	dw	65535	; assembler added errata NOP
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;main.c: 677:         Tweezer(1);
  3822  000950  0E01               	movlw	1
  3823  000952  EC7B  F018         	call	_Tweezer
  3824  000956                     
  3825                           ;main.c: 678:         for(int i=0; i<3*steps_per_unit && !stop; i++){Z_axis(0);}
  3826  000956  0E00               	movlw	0
  3827  000958  0100               	movlb	0	; () banked
  3828  00095A  6FD5               	movwf	(pick_and_place@i_931+1)& (0+255),b
  3829  00095C  0E00               	movlw	0
  3830  00095E  6FD4               	movwf	pick_and_place@i_931& (0+255),b
  3831  000960  EFB9  F004         	goto	l4925
  3832  000964                     l4921:
  3833  000964  FFFF               	dw	65535	; assembler added errata NOP
  3834                           
  3835                           ; BSR set to: 0
  3836  000966  0E00               	movlw	0
  3837  000968  EC1D  F014         	call	_Z_axis
  3838  00096C  0100               	movlb	0	; () banked
  3839  00096E  4BD4               	infsnz	pick_and_place@i_931& (0+255),f,b
  3840  000970  2BD5               	incf	(pick_and_place@i_931+1)& (0+255),f,b
  3841  000972                     l4925:
  3842  000972  FFFF               	dw	65535	; assembler added errata NOP
  3843                           
  3844                           ; BSR set to: 0
  3845  000974  BFD5               	btfsc	(pick_and_place@i_931+1)& (0+255),7,b
  3846  000976  EFC9  F004         	goto	u6100
  3847  00097A  51D5               	movf	(pick_and_place@i_931+1)& (0+255),w,b
  3848  00097C  E107               	bnz	u6101
  3849  00097E  0E03               	movlw	3
  3850  000980  5DD4               	subwf	pick_and_place@i_931& (0+255),w,b
  3851  000982  B0D8               	btfsc	status,0,c
  3852  000984  EFC6  F004         	goto	u6101
  3853  000988  EFC9  F004         	goto	u6100
  3854  00098C                     u6101:
  3855  00098C  FFFF               	dw	65535	; assembler added errata NOP
  3856  00098E  EFD3  F004         	goto	l467
  3857  000992                     u6100:
  3858  000992  FFFF               	dw	65535	; assembler added errata NOP
  3859  000994                     
  3860                           ; BSR set to: 0
  3861  000994  506A               	movf	_stop^0,w,c
  3862  000996  B4D8               	btfsc	status,2,c
  3863  000998  EFD0  F004         	goto	u6111
  3864  00099C  EFD3  F004         	goto	u6110
  3865  0009A0                     u6111:
  3866  0009A0  FFFF               	dw	65535	; assembler added errata NOP
  3867  0009A2  EFB2  F004         	goto	l4921
  3868  0009A6                     u6110:
  3869  0009A6                     l467:
  3870  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;main.c: 679:         Angle_diff= Place_Angle;
  3874  0009A8  C0A0  F09A         	movff	_Place_Angle,_Angle_diff
  3875  0009AC  C0A1  F09B         	movff	_Place_Angle+1,_Angle_diff+1
  3876                           
  3877                           ;main.c: 680:         X_diff = X_Place;
  3878  0009B0  C0A8  F09E         	movff	_X_Place,_X_diff
  3879  0009B4  C0A9  F09F         	movff	_X_Place+1,_X_diff+1
  3880                           
  3881                           ;main.c: 681:         Y_diff = Y_Place;
  3882  0009B8  C0A4  F09C         	movff	_Y_Place,_Y_diff
  3883  0009BC  C0A5  F09D         	movff	_Y_Place+1,_Y_diff+1
  3884  0009C0                     
  3885                           ; BSR set to: 0
  3886  0009C0  0012               	return		;funcret
  3887  0009C2  FFFF               	dw	65535	; errata NOP
  3888  0009C4                     __end_of_pick_and_place:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _fetch_parameters *****************
  3892 ;; Defined at:
  3893 ;;		line 568 in file "main.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  Componnt        1    wreg     unsigned char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  Componnt        1    9[COMRAM] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  2  370[None  ] int 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3907 ;;      Params:         0       0       0       0       0       0       0
  3908 ;;      Locals:         1       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0
  3910 ;;      Totals:         1       0       0       0       0       0       0
  3911 ;;Total ram usage:        1 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 2
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_pick_and_place
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text8
  3922  00249E                     __ptext8:
  3923                           	callstack 0
  3924  00249E                     _fetch_parameters:
  3925                           	callstack 0
  3926  00249E  FFFF               	dw	65535	; assembler added errata NOP
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;incstack = 0
  3930                           ;fetch_parameters@Componnt stored from wreg
  3931  0024A0  6E0A               	movwf	fetch_parameters@Componnt^0,c
  3932  0024A2                     
  3933                           ;main.c: 569:     if(Componnt=='A')
  3934  0024A2  0E41               	movlw	65
  3935  0024A4  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  3936  0024A6  A4D8               	btfss	status,2,c
  3937  0024A8  EF58  F012         	goto	u3361
  3938  0024AC  EF5B  F012         	goto	u3360
  3939  0024B0                     u3361:
  3940  0024B0  FFFF               	dw	65535	; assembler added errata NOP
  3941  0024B2  EF77  F012         	goto	l3361
  3942  0024B6                     u3360:
  3943  0024B6  FFFF               	dw	65535	; assembler added errata NOP
  3944  0024B8                     
  3945                           ;main.c: 570:         {;main.c: 571:             X_Pick=3;
  3946  0024B8  0E00               	movlw	0
  3947  0024BA  0100               	movlb	0	; () banked
  3948  0024BC  6FAB               	movwf	(_X_Pick+1)& (0+255),b
  3949  0024BE  0E03               	movlw	3
  3950  0024C0  6FAA               	movwf	_X_Pick& (0+255),b
  3951                           
  3952                           ;main.c: 572:             Y_Pick=4;
  3953  0024C2  0E00               	movlw	0
  3954  0024C4  6FA7               	movwf	(_Y_Pick+1)& (0+255),b
  3955  0024C6  0E04               	movlw	4
  3956  0024C8  6FA6               	movwf	_Y_Pick& (0+255),b
  3957                           
  3958                           ;main.c: 573:             Pick_Angle=0;
  3959  0024CA  0E00               	movlw	0
  3960  0024CC  6FA3               	movwf	(_Pick_Angle+1)& (0+255),b
  3961  0024CE  0E00               	movlw	0
  3962  0024D0  6FA2               	movwf	_Pick_Angle& (0+255),b
  3963                           
  3964                           ;main.c: 575:             X_Place=17;
  3965  0024D2  0E00               	movlw	0
  3966  0024D4  6FA9               	movwf	(_X_Place+1)& (0+255),b
  3967  0024D6  0E11               	movlw	17
  3968  0024D8  6FA8               	movwf	_X_Place& (0+255),b
  3969                           
  3970                           ;main.c: 576:             Y_Place=5;
  3971  0024DA  0E00               	movlw	0
  3972  0024DC  6FA5               	movwf	(_Y_Place+1)& (0+255),b
  3973  0024DE  0E05               	movlw	5
  3974  0024E0  6FA4               	movwf	_Y_Place& (0+255),b
  3975                           
  3976                           ;main.c: 577:             Place_Angle=270;
  3977  0024E2  0E01               	movlw	1
  3978  0024E4  6FA1               	movwf	(_Place_Angle+1)& (0+255),b
  3979  0024E6  0E0E               	movlw	14
  3980  0024E8  6FA0               	movwf	_Place_Angle& (0+255),b
  3981                           
  3982                           ;main.c: 578:         }
  3983  0024EA  EFEB  F012         	goto	l378
  3984  0024EE                     l3361:
  3985  0024EE  FFFF               	dw	65535	; assembler added errata NOP
  3986  0024F0  0E42               	movlw	66
  3987  0024F2  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  3988  0024F4  A4D8               	btfss	status,2,c
  3989  0024F6  EF7F  F012         	goto	u3371
  3990  0024FA  EF82  F012         	goto	u3370
  3991  0024FE                     u3371:
  3992  0024FE  FFFF               	dw	65535	; assembler added errata NOP
  3993  002500  EF9E  F012         	goto	l3365
  3994  002504                     u3370:
  3995  002504  FFFF               	dw	65535	; assembler added errata NOP
  3996  002506                     
  3997                           ;main.c: 580:             X_Pick=3;
  3998  002506  0E00               	movlw	0
  3999  002508  0100               	movlb	0	; () banked
  4000  00250A  6FAB               	movwf	(_X_Pick+1)& (0+255),b
  4001  00250C  0E03               	movlw	3
  4002  00250E  6FAA               	movwf	_X_Pick& (0+255),b
  4003                           
  4004                           ;main.c: 581:             Y_Pick=10;
  4005  002510  0E00               	movlw	0
  4006  002512  6FA7               	movwf	(_Y_Pick+1)& (0+255),b
  4007  002514  0E0A               	movlw	10
  4008  002516  6FA6               	movwf	_Y_Pick& (0+255),b
  4009                           
  4010                           ;main.c: 582:             Pick_Angle=90;
  4011  002518  0E00               	movlw	0
  4012  00251A  6FA3               	movwf	(_Pick_Angle+1)& (0+255),b
  4013  00251C  0E5A               	movlw	90
  4014  00251E  6FA2               	movwf	_Pick_Angle& (0+255),b
  4015                           
  4016                           ;main.c: 584:             X_Place=10;
  4017  002520  0E00               	movlw	0
  4018  002522  6FA9               	movwf	(_X_Place+1)& (0+255),b
  4019  002524  0E0A               	movlw	10
  4020  002526  6FA8               	movwf	_X_Place& (0+255),b
  4021                           
  4022                           ;main.c: 585:              Y_Place=5;
  4023  002528  0E00               	movlw	0
  4024  00252A  6FA5               	movwf	(_Y_Place+1)& (0+255),b
  4025  00252C  0E05               	movlw	5
  4026  00252E  6FA4               	movwf	_Y_Place& (0+255),b
  4027                           
  4028                           ;main.c: 586:             Place_Angle=180;
  4029  002530  0E00               	movlw	0
  4030  002532  6FA1               	movwf	(_Place_Angle+1)& (0+255),b
  4031  002534  0EB4               	movlw	180
  4032  002536  6FA0               	movwf	_Place_Angle& (0+255),b
  4033                           
  4034                           ;main.c: 587:         }
  4035  002538  EFEB  F012         	goto	l378
  4036  00253C                     l3365:
  4037  00253C  FFFF               	dw	65535	; assembler added errata NOP
  4038  00253E  0E43               	movlw	67
  4039  002540  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  4040  002542  A4D8               	btfss	status,2,c
  4041  002544  EFA6  F012         	goto	u3381
  4042  002548  EFA9  F012         	goto	u3380
  4043  00254C                     u3381:
  4044  00254C  FFFF               	dw	65535	; assembler added errata NOP
  4045  00254E  EFC5  F012         	goto	l3369
  4046  002552                     u3380:
  4047  002552  FFFF               	dw	65535	; assembler added errata NOP
  4048  002554                     
  4049                           ;main.c: 589:             X_Pick=3;
  4050  002554  0E00               	movlw	0
  4051  002556  0100               	movlb	0	; () banked
  4052  002558  6FAB               	movwf	(_X_Pick+1)& (0+255),b
  4053  00255A  0E03               	movlw	3
  4054  00255C  6FAA               	movwf	_X_Pick& (0+255),b
  4055                           
  4056                           ;main.c: 590:             Y_Pick=15;
  4057  00255E  0E00               	movlw	0
  4058  002560  6FA7               	movwf	(_Y_Pick+1)& (0+255),b
  4059  002562  0E0F               	movlw	15
  4060  002564  6FA6               	movwf	_Y_Pick& (0+255),b
  4061                           
  4062                           ;main.c: 591:             Pick_Angle=90;
  4063  002566  0E00               	movlw	0
  4064  002568  6FA3               	movwf	(_Pick_Angle+1)& (0+255),b
  4065  00256A  0E5A               	movlw	90
  4066  00256C  6FA2               	movwf	_Pick_Angle& (0+255),b
  4067                           
  4068                           ;main.c: 593:             X_Place=16;
  4069  00256E  0E00               	movlw	0
  4070  002570  6FA9               	movwf	(_X_Place+1)& (0+255),b
  4071  002572  0E10               	movlw	16
  4072  002574  6FA8               	movwf	_X_Place& (0+255),b
  4073                           
  4074                           ;main.c: 594:             Y_Place=14;
  4075  002576  0E00               	movlw	0
  4076  002578  6FA5               	movwf	(_Y_Place+1)& (0+255),b
  4077  00257A  0E0E               	movlw	14
  4078  00257C  6FA4               	movwf	_Y_Place& (0+255),b
  4079                           
  4080                           ;main.c: 595:             Place_Angle=270;
  4081  00257E  0E01               	movlw	1
  4082  002580  6FA1               	movwf	(_Place_Angle+1)& (0+255),b
  4083  002582  0E0E               	movlw	14
  4084  002584  6FA0               	movwf	_Place_Angle& (0+255),b
  4085                           
  4086                           ;main.c: 596:         }
  4087  002586  EFEB  F012         	goto	l378
  4088  00258A                     l3369:
  4089  00258A  FFFF               	dw	65535	; assembler added errata NOP
  4090  00258C  0E44               	movlw	68
  4091  00258E  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  4092  002590  A4D8               	btfss	status,2,c
  4093  002592  EFCD  F012         	goto	u3391
  4094  002596  EFD0  F012         	goto	u3390
  4095  00259A                     u3391:
  4096  00259A  FFFF               	dw	65535	; assembler added errata NOP
  4097  00259C  EFEB  F012         	goto	l374
  4098  0025A0                     u3390:
  4099  0025A0  FFFF               	dw	65535	; assembler added errata NOP
  4100  0025A2                     
  4101                           ;main.c: 598:             X_Pick=X_Pick_D;
  4102  0025A2  C090  F0AA         	movff	_X_Pick_D,_X_Pick
  4103  0025A6  C091  F0AB         	movff	_X_Pick_D+1,_X_Pick+1
  4104                           
  4105                           ;main.c: 599:             Y_Pick=Y_Pick_D;
  4106  0025AA  C08E  F0A6         	movff	_Y_Pick_D,_Y_Pick
  4107  0025AE  C08F  F0A7         	movff	_Y_Pick_D+1,_Y_Pick+1
  4108                           
  4109                           ;main.c: 600:             Pick_Angle=Pick_Angle_D;
  4110  0025B2  C08C  F0A2         	movff	_Pick_Angle_D,_Pick_Angle
  4111  0025B6  C08D  F0A3         	movff	_Pick_Angle_D+1,_Pick_Angle+1
  4112                           
  4113                           ;main.c: 602:             X_Place=X_Place_D;
  4114  0025BA  C08A  F0A8         	movff	_X_Place_D,_X_Place
  4115  0025BE  C08B  F0A9         	movff	_X_Place_D+1,_X_Place+1
  4116                           
  4117                           ;main.c: 603:             Y_Place=Y_Place_D;
  4118  0025C2  C088  F0A4         	movff	_Y_Place_D,_Y_Place
  4119  0025C6  C089  F0A5         	movff	_Y_Place_D+1,_Y_Place+1
  4120                           
  4121                           ;main.c: 604:             Place_Angle=Place_Angle_D;
  4122  0025CA  C086  F0A0         	movff	_Place_Angle_D,_Place_Angle
  4123  0025CE  C087  F0A1         	movff	_Place_Angle_D+1,_Place_Angle+1
  4124  0025D2  EFEB  F012         	goto	l378
  4125  0025D6                     l374:
  4126  0025D6                     l378:
  4127  0025D6  FFFF               	dw	65535	; assembler added errata NOP
  4128  0025D8  0012               	return		;funcret
  4129  0025DA  FFFF               	dw	65535	; errata NOP
  4130  0025DC                     __end_of_fetch_parameters:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _check_component *****************
  4134 ;; Defined at:
  4135 ;;		line 609 in file "main.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  Compnt          1    wreg     unsigned char 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  Compnt          1   17[COMRAM] unsigned char 
  4140 ;;  j               2   18[COMRAM] int 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4150 ;;      Params:         0       0       0       0       0       0       0
  4151 ;;      Locals:         3       0       0       0       0       0       0
  4152 ;;      Temps:          2       0       0       0       0       0       0
  4153 ;;      Totals:         5       0       0       0       0       0       0
  4154 ;;Total ram usage:        5 bytes
  4155 ;; Hardware stack levels used: 1
  4156 ;; Hardware stack levels required when called: 3
  4157 ;; This function calls:
  4158 ;;		_print_char
  4159 ;;		_print_string
  4160 ;; This function is called by:
  4161 ;;		_pick_and_place
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text9
  4166  002E60                     __ptext9:
  4167                           	callstack 0
  4168  002E60                     _check_component:
  4169                           	callstack 0
  4170  002E60  FFFF               	dw	65535	; assembler added errata NOP
  4171                           
  4172                           ;incstack = 0
  4173                           ;check_component@Compnt stored from wreg
  4174  002E62  6E12               	movwf	check_component@Compnt^0,c
  4175  002E64                     
  4176                           ;main.c: 620:     int j = 0;
  4177  002E64  0E00               	movlw	0
  4178  002E66  6E14               	movwf	(check_component@j+1)^0,c
  4179  002E68  0E00               	movlw	0
  4180  002E6A  6E13               	movwf	check_component@j^0,c
  4181                           
  4182                           ;main.c: 621:     while(!stop){
  4183  002E6C  EF91  F017         	goto	l3403
  4184  002E70                     l3375:
  4185  002E70  FFFF               	dw	65535	; assembler added errata NOP
  4186                           
  4187                           ;main.c: 622:             if(component_present){
  4188  002E72  506B               	movf	_component_present^0,w,c
  4189  002E74  B4D8               	btfsc	status,2,c
  4190  002E76  EF3F  F017         	goto	u3401
  4191  002E7A  EF42  F017         	goto	u3400
  4192  002E7E                     u3401:
  4193  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  4194  002E80  EF48  F017         	goto	l3381
  4195  002E84                     u3400:
  4196  002E84  FFFF               	dw	65535	; assembler added errata NOP
  4197  002E86                     l3377:
  4198  002E86  FFFF               	dw	65535	; assembler added errata NOP
  4199                           
  4200                           ;main.c: 623:                 component_present=0;
  4201  002E88  0E00               	movlw	0
  4202  002E8A  6E6B               	movwf	_component_present^0,c
  4203                           
  4204                           ;main.c: 624:                 break;
  4205  002E8C  EF9B  F017         	goto	l389
  4206  002E90                     l3381:
  4207  002E90  FFFF               	dw	65535	; assembler added errata NOP
  4208  002E92  BE14               	btfsc	(check_component@j+1)^0,7,c
  4209  002E94  EF55  F017         	goto	u3411
  4210  002E98  5014               	movf	(check_component@j+1)^0,w,c
  4211  002E9A  E10A               	bnz	u3410
  4212  002E9C  0E02               	movlw	2
  4213  002E9E  5C13               	subwf	check_component@j^0,w,c
  4214  002EA0  A0D8               	btfss	status,0,c
  4215  002EA2  EF55  F017         	goto	u3411
  4216  002EA6  EF58  F017         	goto	u3410
  4217  002EAA                     u3411:
  4218  002EAA  FFFF               	dw	65535	; assembler added errata NOP
  4219  002EAC  EF76  F017         	goto	l3397
  4220  002EB0                     u3410:
  4221  002EB0  FFFF               	dw	65535	; assembler added errata NOP
  4222  002EB2  506B               	movf	_component_present^0,w,c
  4223  002EB4  A4D8               	btfss	status,2,c
  4224  002EB6  EF5F  F017         	goto	u3421
  4225  002EBA  EF62  F017         	goto	u3420
  4226  002EBE                     u3421:
  4227  002EBE  FFFF               	dw	65535	; assembler added errata NOP
  4228  002EC0  EF76  F017         	goto	l3397
  4229  002EC4                     u3420:
  4230  002EC4  FFFF               	dw	65535	; assembler added errata NOP
  4231  002EC6                     
  4232                           ;main.c: 627:                 print_string("\nComponent ");
  4233  002EC6  0EE7               	movlw	low STR_17
  4234  002EC8  6E0A               	movwf	print_string@strng^0,c
  4235  002ECA  0E7F               	movlw	high STR_17
  4236  002ECC  6E0B               	movwf	(print_string@strng+1)^0,c
  4237  002ECE  EC9E  F017         	call	_print_string	;wreg free
  4238  002ED2                     
  4239                           ;main.c: 628:                 print_char(Compnt);
  4240  002ED2  5012               	movf	check_component@Compnt^0,w,c
  4241  002ED4  EC98  F01A         	call	_print_char
  4242  002ED8                     
  4243                           ;main.c: 629:                 print_string(" missing!");
  4244  002ED8  0EF3               	movlw	low STR_18
  4245  002EDA  6E0A               	movwf	print_string@strng^0,c
  4246  002EDC  0E7F               	movlw	high STR_18
  4247  002EDE  6E0B               	movwf	(print_string@strng+1)^0,c
  4248  002EE0  EC9E  F017         	call	_print_string	;wreg free
  4249  002EE4                     
  4250                           ;main.c: 630:                 stop=1;
  4251  002EE4  0E01               	movlw	1
  4252  002EE6  6E6A               	movwf	_stop^0,c
  4253  002EE8  EF43  F017         	goto	l3377
  4254  002EEC                     l3397:
  4255  002EEC  FFFF               	dw	65535	; assembler added errata NOP
  4256  002EEE  506B               	movf	_component_present^0,w,c
  4257  002EF0  A4D8               	btfss	status,2,c
  4258  002EF2  EF7D  F017         	goto	u3431
  4259  002EF6  EF80  F017         	goto	u3430
  4260  002EFA                     u3431:
  4261  002EFA  FFFF               	dw	65535	; assembler added errata NOP
  4262  002EFC  EF91  F017         	goto	l385
  4263  002F00                     u3430:
  4264  002F00  FFFF               	dw	65535	; assembler added errata NOP
  4265  002F02                     
  4266                           ;main.c: 635:                 _delay((unsigned long)((100)*(200000000/4000.0)));
  4267  002F02  0E14               	movlw	20
  4268  002F04  6E11               	movwf	(??_check_component+1)^0,c
  4269  002F06  0E0A               	movlw	10
  4270  002F08  6E10               	movwf	??_check_component^0,c
  4271  002F0A  0E40               	movlw	64
  4272  002F0C                     u6237:
  4273  002F0C  FFFF               	dw	65535	; errata NOP
  4274  002F0E  2EE8               	decfsz	wreg,f,c
  4275  002F10  D7FD               	bra	u6237
  4276  002F12  2E10               	decfsz	??_check_component^0,f,c
  4277  002F14  D7FB               	bra	u6237
  4278  002F16  2E11               	decfsz	(??_check_component+1)^0,f,c
  4279  002F18  D7F9               	bra	u6237
  4280  002F1A                     
  4281                           ;main.c: 636:                 j++;}
  4282  002F1A  4A13               	infsnz	check_component@j^0,f,c
  4283  002F1C  2A14               	incf	(check_component@j+1)^0,f,c
  4284  002F1E  EF91  F017         	goto	l3403
  4285  002F22                     l385:
  4286  002F22                     l3403:
  4287  002F22  FFFF               	dw	65535	; assembler added errata NOP
  4288                           
  4289                           ;main.c: 621:     while(!stop){
  4290  002F24  506A               	movf	_stop^0,w,c
  4291  002F26  B4D8               	btfsc	status,2,c
  4292  002F28  EF98  F017         	goto	u3441
  4293  002F2C  EF9B  F017         	goto	u3440
  4294  002F30                     u3441:
  4295  002F30  FFFF               	dw	65535	; assembler added errata NOP
  4296  002F32  EF38  F017         	goto	l3375
  4297  002F36                     u3440:
  4298  002F36                     l389:
  4299  002F36  FFFF               	dw	65535	; assembler added errata NOP
  4300  002F38  0012               	return		;funcret
  4301  002F3A  FFFF               	dw	65535	; errata NOP
  4302  002F3C                     __end_of_check_component:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function _print_char *****************
  4306 ;; Defined at:
  4307 ;;		line 52 in file "serial_rs232.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  chr             1    wreg     unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  chr             1    9[COMRAM] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      void 
  4314 ;; Registers used:
  4315 ;;		wreg
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4321 ;;      Params:         0       0       0       0       0       0       0
  4322 ;;      Locals:         1       0       0       0       0       0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0
  4324 ;;      Totals:         1       0       0       0       0       0       0
  4325 ;;Total ram usage:        1 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; Hardware stack levels required when called: 2
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_check_component
  4332 ;;		_pick_and_place
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text10
  4337  003530                     __ptext10:
  4338                           	callstack 0
  4339  003530                     _print_char:
  4340                           	callstack 0
  4341  003530  FFFF               	dw	65535	; assembler added errata NOP
  4342                           
  4343                           ;incstack = 0
  4344                           ;print_char@chr stored from wreg
  4345  003532  6E0A               	movwf	print_char@chr^0,c
  4346  003534                     
  4347                           ;serial_rs232.c: 53:     TXREG=chr;
  4348  003534  C00A  FFAD         	movff	print_char@chr,4013	;volatile
  4349  003538                     l82:
  4350  003538  FFFF               	dw	65535	; assembler added errata NOP
  4351  00353A  A2AC               	btfss	172,1,c	;volatile
  4352  00353C  EFA2  F01A         	goto	u2541
  4353  003540  EFA5  F01A         	goto	u2540
  4354  003544                     u2541:
  4355  003544  FFFF               	dw	65535	; assembler added errata NOP
  4356  003546  EF9C  F01A         	goto	l82
  4357  00354A                     u2540:
  4358  00354A  FFFF               	dw	65535	; assembler added errata NOP
  4359  00354C  0012               	return		;funcret
  4360  00354E  FFFF               	dw	65535	; errata NOP
  4361  003550                     __end_of_print_char:
  4362                           	callstack 0
  4363                           
  4364 ;; *************** function ___xxtofl *****************
  4365 ;; Defined at:
  4366 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  sign            1    wreg     unsigned char 
  4369 ;;  val             4    9[COMRAM] long 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  sign            1   17[COMRAM] unsigned char 
  4372 ;;  arg             4   19[COMRAM] unsigned long 
  4373 ;;  exp             1   18[COMRAM] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  4    9[COMRAM] unsigned char 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4383 ;;      Params:         4       0       0       0       0       0       0
  4384 ;;      Locals:         6       0       0       0       0       0       0
  4385 ;;      Temps:          4       0       0       0       0       0       0
  4386 ;;      Totals:        14       0       0       0       0       0       0
  4387 ;;Total ram usage:       14 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; Hardware stack levels required when called: 2
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_pick_and_place
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text11
  4398  001C2C                     __ptext11:
  4399                           	callstack 0
  4400  001C2C                     ___xxtofl:
  4401                           	callstack 0
  4402  001C2C  FFFF               	dw	65535	; assembler added errata NOP
  4403                           
  4404                           ;incstack = 0
  4405                           ;___xxtofl@sign stored from wreg
  4406  001C2E  6E12               	movwf	___xxtofl@sign^0,c
  4407  001C30  5012               	movf	___xxtofl@sign^0,w,c
  4408  001C32  B4D8               	btfsc	status,2,c
  4409  001C34  EF1E  F00E         	goto	u3931
  4410  001C38  EF21  F00E         	goto	u3930
  4411  001C3C                     u3931:
  4412  001C3C  FFFF               	dw	65535	; assembler added errata NOP
  4413  001C3E  EF46  F00E         	goto	l1170
  4414  001C42                     u3930:
  4415  001C42  FFFF               	dw	65535	; assembler added errata NOP
  4416  001C44  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  4417  001C46  EF2A  F00E         	goto	u3940
  4418  001C4A  EF27  F00E         	goto	u3941
  4419  001C4E                     u3941:
  4420  001C4E  FFFF               	dw	65535	; assembler added errata NOP
  4421  001C50  EF46  F00E         	goto	l1170
  4422  001C54                     u3940:
  4423  001C54  FFFF               	dw	65535	; assembler added errata NOP
  4424  001C56  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
  4425  001C5A  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
  4426  001C5E  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
  4427  001C62  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
  4428  001C66  1E0E               	comf	??___xxtofl^0,f,c
  4429  001C68  1E0F               	comf	(??___xxtofl+1)^0,f,c
  4430  001C6A  1E10               	comf	(??___xxtofl+2)^0,f,c
  4431  001C6C  1E11               	comf	(??___xxtofl+3)^0,f,c
  4432  001C6E  2A0E               	incf	??___xxtofl^0,f,c
  4433  001C70  0E00               	movlw	0
  4434  001C72  220F               	addwfc	(??___xxtofl+1)^0,f,c
  4435  001C74  2210               	addwfc	(??___xxtofl+2)^0,f,c
  4436  001C76  2211               	addwfc	(??___xxtofl+3)^0,f,c
  4437  001C78  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
  4438  001C7C  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
  4439  001C80  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
  4440  001C84  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
  4441  001C88  EF4F  F00E         	goto	l3715
  4442  001C8C                     l1170:
  4443  001C8C  FFFF               	dw	65535	; assembler added errata NOP
  4444  001C8E  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
  4445  001C92  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4446  001C96  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4447  001C9A  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4448  001C9E                     l3715:
  4449  001C9E  FFFF               	dw	65535	; assembler added errata NOP
  4450  001CA0  500A               	movf	___xxtofl@val^0,w,c
  4451  001CA2  100B               	iorwf	(___xxtofl@val+1)^0,w,c
  4452  001CA4  100C               	iorwf	(___xxtofl@val+2)^0,w,c
  4453  001CA6  100D               	iorwf	(___xxtofl@val+3)^0,w,c
  4454  001CA8  A4D8               	btfss	status,2,c
  4455  001CAA  EF59  F00E         	goto	u3951
  4456  001CAE  EF5C  F00E         	goto	u3950
  4457  001CB2                     u3951:
  4458  001CB2  FFFF               	dw	65535	; assembler added errata NOP
  4459  001CB4  EF67  F00E         	goto	l3721
  4460  001CB8                     u3950:
  4461  001CB8  FFFF               	dw	65535	; assembler added errata NOP
  4462  001CBA  0E00               	movlw	0
  4463  001CBC  6E0A               	movwf	?___xxtofl^0,c
  4464  001CBE  0E00               	movlw	0
  4465  001CC0  6E0B               	movwf	(?___xxtofl+1)^0,c
  4466  001CC2  0E00               	movlw	0
  4467  001CC4  6E0C               	movwf	(?___xxtofl+2)^0,c
  4468  001CC6  0E00               	movlw	0
  4469  001CC8  6E0D               	movwf	(?___xxtofl+3)^0,c
  4470  001CCA  EF0F  F00F         	goto	l1173
  4471  001CCE                     l3721:
  4472  001CCE  FFFF               	dw	65535	; assembler added errata NOP
  4473  001CD0  0E96               	movlw	150
  4474  001CD2  6E13               	movwf	___xxtofl@exp^0,c
  4475  001CD4  EF73  F00E         	goto	l3725
  4476  001CD8                     l3723:
  4477  001CD8  FFFF               	dw	65535	; assembler added errata NOP
  4478  001CDA  2A13               	incf	___xxtofl@exp^0,f,c
  4479  001CDC  90D8               	bcf	status,0,c
  4480  001CDE  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  4481  001CE0  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  4482  001CE2  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  4483  001CE4  3214               	rrcf	___xxtofl@arg^0,f,c
  4484  001CE6                     l3725:
  4485  001CE6  FFFF               	dw	65535	; assembler added errata NOP
  4486  001CE8  0E00               	movlw	0
  4487  001CEA  1414               	andwf	___xxtofl@arg^0,w,c
  4488  001CEC  6E0E               	movwf	??___xxtofl^0,c
  4489  001CEE  0E00               	movlw	0
  4490  001CF0  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  4491  001CF2  6E0F               	movwf	(??___xxtofl+1)^0,c
  4492  001CF4  0E00               	movlw	0
  4493  001CF6  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  4494  001CF8  6E10               	movwf	(??___xxtofl+2)^0,c
  4495  001CFA  0EFE               	movlw	254
  4496  001CFC  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  4497  001CFE  6E11               	movwf	(??___xxtofl+3)^0,c
  4498  001D00  500E               	movf	??___xxtofl^0,w,c
  4499  001D02  100F               	iorwf	(??___xxtofl+1)^0,w,c
  4500  001D04  1010               	iorwf	(??___xxtofl+2)^0,w,c
  4501  001D06  1011               	iorwf	(??___xxtofl+3)^0,w,c
  4502  001D08  A4D8               	btfss	status,2,c
  4503  001D0A  EF89  F00E         	goto	u3961
  4504  001D0E  EF8C  F00E         	goto	u3960
  4505  001D12                     u3961:
  4506  001D12  FFFF               	dw	65535	; assembler added errata NOP
  4507  001D14  EF6C  F00E         	goto	l3723
  4508  001D18                     u3960:
  4509  001D18  FFFF               	dw	65535	; assembler added errata NOP
  4510  001D1A  EF9C  F00E         	goto	l1177
  4511  001D1E                     l3727:
  4512  001D1E  FFFF               	dw	65535	; assembler added errata NOP
  4513  001D20  2A13               	incf	___xxtofl@exp^0,f,c
  4514  001D22  0E01               	movlw	1
  4515  001D24  2614               	addwf	___xxtofl@arg^0,f,c
  4516  001D26  0E00               	movlw	0
  4517  001D28  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
  4518  001D2A  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
  4519  001D2C  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
  4520  001D2E  90D8               	bcf	status,0,c
  4521  001D30  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  4522  001D32  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  4523  001D34  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  4524  001D36  3214               	rrcf	___xxtofl@arg^0,f,c
  4525  001D38                     l1177:
  4526  001D38  FFFF               	dw	65535	; assembler added errata NOP
  4527  001D3A  0E00               	movlw	0
  4528  001D3C  1414               	andwf	___xxtofl@arg^0,w,c
  4529  001D3E  6E0E               	movwf	??___xxtofl^0,c
  4530  001D40  0E00               	movlw	0
  4531  001D42  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  4532  001D44  6E0F               	movwf	(??___xxtofl+1)^0,c
  4533  001D46  0E00               	movlw	0
  4534  001D48  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  4535  001D4A  6E10               	movwf	(??___xxtofl+2)^0,c
  4536  001D4C  0EFF               	movlw	255
  4537  001D4E  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  4538  001D50  6E11               	movwf	(??___xxtofl+3)^0,c
  4539  001D52  500E               	movf	??___xxtofl^0,w,c
  4540  001D54  100F               	iorwf	(??___xxtofl+1)^0,w,c
  4541  001D56  1010               	iorwf	(??___xxtofl+2)^0,w,c
  4542  001D58  1011               	iorwf	(??___xxtofl+3)^0,w,c
  4543  001D5A  A4D8               	btfss	status,2,c
  4544  001D5C  EFB2  F00E         	goto	u3971
  4545  001D60  EFB5  F00E         	goto	u3970
  4546  001D64                     u3971:
  4547  001D64  FFFF               	dw	65535	; assembler added errata NOP
  4548  001D66  EF8F  F00E         	goto	l3727
  4549  001D6A                     u3970:
  4550  001D6A  FFFF               	dw	65535	; assembler added errata NOP
  4551  001D6C  EFBF  F00E         	goto	l3735
  4552  001D70                     l3733:
  4553  001D70  FFFF               	dw	65535	; assembler added errata NOP
  4554  001D72  0613               	decf	___xxtofl@exp^0,f,c
  4555  001D74  90D8               	bcf	status,0,c
  4556  001D76  3614               	rlcf	___xxtofl@arg^0,f,c
  4557  001D78  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
  4558  001D7A  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
  4559  001D7C  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
  4560  001D7E                     l3735:
  4561  001D7E  FFFF               	dw	65535	; assembler added errata NOP
  4562  001D80  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
  4563  001D82  EFC5  F00E         	goto	u3981
  4564  001D86  EFC8  F00E         	goto	u3980
  4565  001D8A                     u3981:
  4566  001D8A  FFFF               	dw	65535	; assembler added errata NOP
  4567  001D8C  EFD2  F00E         	goto	l1184
  4568  001D90                     u3980:
  4569  001D90  FFFF               	dw	65535	; assembler added errata NOP
  4570  001D92  0E02               	movlw	2
  4571  001D94  6013               	cpfslt	___xxtofl@exp^0,c
  4572  001D96  EFCF  F00E         	goto	u3991
  4573  001D9A  EFD2  F00E         	goto	u3990
  4574  001D9E                     u3991:
  4575  001D9E  FFFF               	dw	65535	; assembler added errata NOP
  4576  001DA0  EFB8  F00E         	goto	l3733
  4577  001DA4                     u3990:
  4578  001DA4                     l1184:
  4579  001DA4  FFFF               	dw	65535	; assembler added errata NOP
  4580  001DA6  B013               	btfsc	___xxtofl@exp^0,0,c
  4581  001DA8  EFD8  F00E         	goto	u4001
  4582  001DAC  EFDB  F00E         	goto	u4000
  4583  001DB0                     u4001:
  4584  001DB0  FFFF               	dw	65535	; assembler added errata NOP
  4585  001DB2  EFDD  F00E         	goto	l3741
  4586  001DB6                     u4000:
  4587  001DB6  FFFF               	dw	65535	; assembler added errata NOP
  4588  001DB8  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
  4589  001DBA                     l3741:
  4590  001DBA  FFFF               	dw	65535	; assembler added errata NOP
  4591  001DBC  90D8               	bcf	status,0,c
  4592  001DBE  3213               	rrcf	___xxtofl@exp^0,f,c
  4593  001DC0  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
  4594  001DC4  6A0F               	clrf	(??___xxtofl+1)^0,c
  4595  001DC6  6A10               	clrf	(??___xxtofl+2)^0,c
  4596  001DC8  6A11               	clrf	(??___xxtofl+3)^0,c
  4597  001DCA  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
  4598  001DCE  6A10               	clrf	(??___xxtofl+2)^0,c
  4599  001DD0  6A0F               	clrf	(??___xxtofl+1)^0,c
  4600  001DD2  6A0E               	clrf	??___xxtofl^0,c
  4601  001DD4  500E               	movf	??___xxtofl^0,w,c
  4602  001DD6  1214               	iorwf	___xxtofl@arg^0,f,c
  4603  001DD8  500F               	movf	(??___xxtofl+1)^0,w,c
  4604  001DDA  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
  4605  001DDC  5010               	movf	(??___xxtofl+2)^0,w,c
  4606  001DDE  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
  4607  001DE0  5011               	movf	(??___xxtofl+3)^0,w,c
  4608  001DE2  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
  4609  001DE4  5012               	movf	___xxtofl@sign^0,w,c
  4610  001DE6  B4D8               	btfsc	status,2,c
  4611  001DE8  EFF8  F00E         	goto	u4011
  4612  001DEC  EFFB  F00E         	goto	u4010
  4613  001DF0                     u4011:
  4614  001DF0  FFFF               	dw	65535	; assembler added errata NOP
  4615  001DF2  EF06  F00F         	goto	l3751
  4616  001DF6                     u4010:
  4617  001DF6  FFFF               	dw	65535	; assembler added errata NOP
  4618  001DF8  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  4619  001DFA  EF04  F00F         	goto	u4020
  4620  001DFE  EF01  F00F         	goto	u4021
  4621  001E02                     u4021:
  4622  001E02  FFFF               	dw	65535	; assembler added errata NOP
  4623  001E04  EF06  F00F         	goto	l3751
  4624  001E08                     u4020:
  4625  001E08  FFFF               	dw	65535	; assembler added errata NOP
  4626  001E0A  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
  4627  001E0C                     l3751:
  4628  001E0C  FFFF               	dw	65535	; assembler added errata NOP
  4629  001E0E  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
  4630  001E12  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
  4631  001E16  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
  4632  001E1A  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
  4633  001E1E                     l1173:
  4634  001E1E  FFFF               	dw	65535	; assembler added errata NOP
  4635  001E20  0012               	return		;funcret
  4636  001E22  FFFF               	dw	65535	; errata NOP
  4637  001E24                     __end_of___xxtofl:
  4638                           	callstack 0
  4639                           
  4640 ;; *************** function ___fldiv *****************
  4641 ;; Defined at:
  4642 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  b               4   23[COMRAM] unsigned char 
  4645 ;;  a               4   27[COMRAM] unsigned char 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  grs             4   42[COMRAM] unsigned long 
  4648 ;;  rem             4   35[COMRAM] unsigned long 
  4649 ;;  new_exp         2   40[COMRAM] short 
  4650 ;;  aexp            1   47[COMRAM] unsigned char 
  4651 ;;  bexp            1   46[COMRAM] unsigned char 
  4652 ;;  sign            1   39[COMRAM] unsigned char 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  4   23[COMRAM] unsigned char 
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4662 ;;      Params:         8       0       0       0       0       0       0
  4663 ;;      Locals:        13       0       0       0       0       0       0
  4664 ;;      Temps:          4       0       0       0       0       0       0
  4665 ;;      Totals:        25       0       0       0       0       0       0
  4666 ;;Total ram usage:       25 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 2
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_pick_and_place
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text12
  4677  001410                     __ptext12:
  4678                           	callstack 0
  4679  001410                     ___fldiv:
  4680                           	callstack 0
  4681  001410  FFFF               	dw	65535	; assembler added errata NOP
  4682  001412  501B               	movf	(___fldiv@b+3)^0,w,c
  4683  001414  0B80               	andlw	128
  4684  001416  6E28               	movwf	___fldiv@sign^0,c
  4685  001418  501B               	movf	(___fldiv@b+3)^0,w,c
  4686  00141A  241B               	addwf	(___fldiv@b+3)^0,w,c
  4687  00141C  6E2F               	movwf	___fldiv@bexp^0,c
  4688  00141E  AE1A               	btfss	(___fldiv@b+2)^0,7,c
  4689  001420  EF14  F00A         	goto	u3451
  4690  001424  EF17  F00A         	goto	u3450
  4691  001428                     u3451:
  4692  001428  FFFF               	dw	65535	; assembler added errata NOP
  4693  00142A  EF19  F00A         	goto	l3411
  4694  00142E                     u3450:
  4695  00142E  FFFF               	dw	65535	; assembler added errata NOP
  4696  001430  802F               	bsf	___fldiv@bexp^0,0,c
  4697  001432                     l3411:
  4698  001432  FFFF               	dw	65535	; assembler added errata NOP
  4699  001434  502F               	movf	___fldiv@bexp^0,w,c
  4700  001436  B4D8               	btfsc	status,2,c
  4701  001438  EF20  F00A         	goto	u3461
  4702  00143C  EF23  F00A         	goto	u3460
  4703  001440                     u3461:
  4704  001440  FFFF               	dw	65535	; assembler added errata NOP
  4705  001442  EF3C  F00A         	goto	l3421
  4706  001446                     u3460:
  4707  001446  FFFF               	dw	65535	; assembler added errata NOP
  4708  001448  282F               	incf	___fldiv@bexp^0,w,c
  4709  00144A  A4D8               	btfss	status,2,c
  4710  00144C  EF2A  F00A         	goto	u3471
  4711  001450  EF2D  F00A         	goto	u3470
  4712  001454                     u3471:
  4713  001454  FFFF               	dw	65535	; assembler added errata NOP
  4714  001456  EF36  F00A         	goto	l3417
  4715  00145A                     u3470:
  4716  00145A  FFFF               	dw	65535	; assembler added errata NOP
  4717  00145C  0E00               	movlw	0
  4718  00145E  6E18               	movwf	___fldiv@b^0,c
  4719  001460  0E00               	movlw	0
  4720  001462  6E19               	movwf	(___fldiv@b+1)^0,c
  4721  001464  0E00               	movlw	0
  4722  001466  6E1A               	movwf	(___fldiv@b+2)^0,c
  4723  001468  0E00               	movlw	0
  4724  00146A  6E1B               	movwf	(___fldiv@b+3)^0,c
  4725  00146C                     l3417:
  4726  00146C  FFFF               	dw	65535	; assembler added errata NOP
  4727  00146E  8E1A               	bsf	(___fldiv@b+2)^0,7,c
  4728  001470  0E00               	movlw	0
  4729  001472  6E1B               	movwf	(___fldiv@b+3)^0,c
  4730  001474  EF45  F00A         	goto	l3423
  4731  001478                     l3421:
  4732  001478  FFFF               	dw	65535	; assembler added errata NOP
  4733  00147A  0E00               	movlw	0
  4734  00147C  6E18               	movwf	___fldiv@b^0,c
  4735  00147E  0E00               	movlw	0
  4736  001480  6E19               	movwf	(___fldiv@b+1)^0,c
  4737  001482  0E00               	movlw	0
  4738  001484  6E1A               	movwf	(___fldiv@b+2)^0,c
  4739  001486  0E00               	movlw	0
  4740  001488  6E1B               	movwf	(___fldiv@b+3)^0,c
  4741  00148A                     l3423:
  4742  00148A  FFFF               	dw	65535	; assembler added errata NOP
  4743  00148C  501F               	movf	(___fldiv@a+3)^0,w,c
  4744  00148E  0B80               	andlw	128
  4745  001490  1A28               	xorwf	___fldiv@sign^0,f,c
  4746  001492  501F               	movf	(___fldiv@a+3)^0,w,c
  4747  001494  241F               	addwf	(___fldiv@a+3)^0,w,c
  4748  001496  6E30               	movwf	___fldiv@aexp^0,c
  4749  001498  AE1E               	btfss	(___fldiv@a+2)^0,7,c
  4750  00149A  EF51  F00A         	goto	u3481
  4751  00149E  EF54  F00A         	goto	u3480
  4752  0014A2                     u3481:
  4753  0014A2  FFFF               	dw	65535	; assembler added errata NOP
  4754  0014A4  EF56  F00A         	goto	l3431
  4755  0014A8                     u3480:
  4756  0014A8  FFFF               	dw	65535	; assembler added errata NOP
  4757  0014AA  8030               	bsf	___fldiv@aexp^0,0,c
  4758  0014AC                     l3431:
  4759  0014AC  FFFF               	dw	65535	; assembler added errata NOP
  4760  0014AE  5030               	movf	___fldiv@aexp^0,w,c
  4761  0014B0  B4D8               	btfsc	status,2,c
  4762  0014B2  EF5D  F00A         	goto	u3491
  4763  0014B6  EF60  F00A         	goto	u3490
  4764  0014BA                     u3491:
  4765  0014BA  FFFF               	dw	65535	; assembler added errata NOP
  4766  0014BC  EF79  F00A         	goto	l3441
  4767  0014C0                     u3490:
  4768  0014C0  FFFF               	dw	65535	; assembler added errata NOP
  4769  0014C2  2830               	incf	___fldiv@aexp^0,w,c
  4770  0014C4  A4D8               	btfss	status,2,c
  4771  0014C6  EF67  F00A         	goto	u3501
  4772  0014CA  EF6A  F00A         	goto	u3500
  4773  0014CE                     u3501:
  4774  0014CE  FFFF               	dw	65535	; assembler added errata NOP
  4775  0014D0  EF73  F00A         	goto	l3437
  4776  0014D4                     u3500:
  4777  0014D4  FFFF               	dw	65535	; assembler added errata NOP
  4778  0014D6  0E00               	movlw	0
  4779  0014D8  6E1C               	movwf	___fldiv@a^0,c
  4780  0014DA  0E00               	movlw	0
  4781  0014DC  6E1D               	movwf	(___fldiv@a+1)^0,c
  4782  0014DE  0E00               	movlw	0
  4783  0014E0  6E1E               	movwf	(___fldiv@a+2)^0,c
  4784  0014E2  0E00               	movlw	0
  4785  0014E4  6E1F               	movwf	(___fldiv@a+3)^0,c
  4786  0014E6                     l3437:
  4787  0014E6  FFFF               	dw	65535	; assembler added errata NOP
  4788  0014E8  8E1E               	bsf	(___fldiv@a+2)^0,7,c
  4789  0014EA  0E00               	movlw	0
  4790  0014EC  6E1F               	movwf	(___fldiv@a+3)^0,c
  4791  0014EE  EF82  F00A         	goto	l3443
  4792  0014F2                     l3441:
  4793  0014F2  FFFF               	dw	65535	; assembler added errata NOP
  4794  0014F4  0E00               	movlw	0
  4795  0014F6  6E1C               	movwf	___fldiv@a^0,c
  4796  0014F8  0E00               	movlw	0
  4797  0014FA  6E1D               	movwf	(___fldiv@a+1)^0,c
  4798  0014FC  0E00               	movlw	0
  4799  0014FE  6E1E               	movwf	(___fldiv@a+2)^0,c
  4800  001500  0E00               	movlw	0
  4801  001502  6E1F               	movwf	(___fldiv@a+3)^0,c
  4802  001504                     l3443:
  4803  001504  FFFF               	dw	65535	; assembler added errata NOP
  4804  001506  501C               	movf	___fldiv@a^0,w,c
  4805  001508  101D               	iorwf	(___fldiv@a+1)^0,w,c
  4806  00150A  101E               	iorwf	(___fldiv@a+2)^0,w,c
  4807  00150C  101F               	iorwf	(___fldiv@a+3)^0,w,c
  4808  00150E  A4D8               	btfss	status,2,c
  4809  001510  EF8C  F00A         	goto	u3511
  4810  001514  EF8F  F00A         	goto	u3510
  4811  001518                     u3511:
  4812  001518  FFFF               	dw	65535	; assembler added errata NOP
  4813  00151A  EFA9  F00A         	goto	l3455
  4814  00151E                     u3510:
  4815  00151E  FFFF               	dw	65535	; assembler added errata NOP
  4816  001520  0E00               	movlw	0
  4817  001522  6E18               	movwf	___fldiv@b^0,c
  4818  001524  0E00               	movlw	0
  4819  001526  6E19               	movwf	(___fldiv@b+1)^0,c
  4820  001528  0E00               	movlw	0
  4821  00152A  6E1A               	movwf	(___fldiv@b+2)^0,c
  4822  00152C  0E00               	movlw	0
  4823  00152E  6E1B               	movwf	(___fldiv@b+3)^0,c
  4824  001530  0E80               	movlw	128
  4825  001532  121A               	iorwf	(___fldiv@b+2)^0,f,c
  4826  001534  0E7F               	movlw	127
  4827  001536  121B               	iorwf	(___fldiv@b+3)^0,f,c
  4828  001538                     l3449:
  4829  001538  FFFF               	dw	65535	; assembler added errata NOP
  4830  00153A  5028               	movf	___fldiv@sign^0,w,c
  4831  00153C  121B               	iorwf	(___fldiv@b+3)^0,f,c
  4832  00153E  C018  F018         	movff	___fldiv@b,?___fldiv
  4833  001542  C019  F019         	movff	___fldiv@b+1,?___fldiv+1
  4834  001546  C01A  F01A         	movff	___fldiv@b+2,?___fldiv+2
  4835  00154A  C01B  F01B         	movff	___fldiv@b+3,?___fldiv+3
  4836  00154E  EF1E  F00C         	goto	l1097
  4837  001552                     l3455:
  4838  001552  FFFF               	dw	65535	; assembler added errata NOP
  4839  001554  502F               	movf	___fldiv@bexp^0,w,c
  4840  001556  A4D8               	btfss	status,2,c
  4841  001558  EFB0  F00A         	goto	u3521
  4842  00155C  EFB3  F00A         	goto	u3520
  4843  001560                     u3521:
  4844  001560  FFFF               	dw	65535	; assembler added errata NOP
  4845  001562  EFBE  F00A         	goto	l3463
  4846  001566                     u3520:
  4847  001566  FFFF               	dw	65535	; assembler added errata NOP
  4848  001568  0E00               	movlw	0
  4849  00156A  6E18               	movwf	?___fldiv^0,c
  4850  00156C  0E00               	movlw	0
  4851  00156E  6E19               	movwf	(?___fldiv+1)^0,c
  4852  001570  0E00               	movlw	0
  4853  001572  6E1A               	movwf	(?___fldiv+2)^0,c
  4854  001574  0E00               	movlw	0
  4855  001576  6E1B               	movwf	(?___fldiv+3)^0,c
  4856  001578  EF1E  F00C         	goto	l1097
  4857  00157C                     l3463:
  4858  00157C  FFFF               	dw	65535	; assembler added errata NOP
  4859  00157E  5030               	movf	___fldiv@aexp^0,w,c
  4860  001580  C02F  F020         	movff	___fldiv@bexp,??___fldiv
  4861  001584  6A21               	clrf	(??___fldiv+1)^0,c
  4862  001586  5E20               	subwf	??___fldiv^0,f,c
  4863  001588  0E00               	movlw	0
  4864  00158A  5A21               	subwfb	(??___fldiv+1)^0,f,c
  4865  00158C  0E7F               	movlw	127
  4866  00158E  2420               	addwf	??___fldiv^0,w,c
  4867  001590  6E29               	movwf	___fldiv@new_exp^0,c
  4868  001592  0E00               	movlw	0
  4869  001594  2021               	addwfc	(??___fldiv+1)^0,w,c
  4870  001596  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  4871  001598  C018  F024         	movff	___fldiv@b,___fldiv@rem
  4872  00159C  C019  F025         	movff	___fldiv@b+1,___fldiv@rem+1
  4873  0015A0  C01A  F026         	movff	___fldiv@b+2,___fldiv@rem+2
  4874  0015A4  C01B  F027         	movff	___fldiv@b+3,___fldiv@rem+3
  4875  0015A8  0E00               	movlw	0
  4876  0015AA  6E18               	movwf	___fldiv@b^0,c
  4877  0015AC  0E00               	movlw	0
  4878  0015AE  6E19               	movwf	(___fldiv@b+1)^0,c
  4879  0015B0  0E00               	movlw	0
  4880  0015B2  6E1A               	movwf	(___fldiv@b+2)^0,c
  4881  0015B4  0E00               	movlw	0
  4882  0015B6  6E1B               	movwf	(___fldiv@b+3)^0,c
  4883  0015B8  0E00               	movlw	0
  4884  0015BA  6E2B               	movwf	___fldiv@grs^0,c
  4885  0015BC  0E00               	movlw	0
  4886  0015BE  6E2C               	movwf	(___fldiv@grs+1)^0,c
  4887  0015C0  0E00               	movlw	0
  4888  0015C2  6E2D               	movwf	(___fldiv@grs+2)^0,c
  4889  0015C4  0E00               	movlw	0
  4890  0015C6  6E2E               	movwf	(___fldiv@grs+3)^0,c
  4891  0015C8  0E00               	movlw	0
  4892  0015CA  6E30               	movwf	___fldiv@aexp^0,c
  4893  0015CC  EF2A  F00B         	goto	l1099
  4894  0015D0                     l3473:
  4895  0015D0  FFFF               	dw	65535	; assembler added errata NOP
  4896  0015D2  5030               	movf	___fldiv@aexp^0,w,c
  4897  0015D4  B4D8               	btfsc	status,2,c
  4898  0015D6  EFEF  F00A         	goto	u3531
  4899  0015DA  EFF2  F00A         	goto	u3530
  4900  0015DE                     u3531:
  4901  0015DE  FFFF               	dw	65535	; assembler added errata NOP
  4902  0015E0  EF0D  F00B         	goto	l3481
  4903  0015E4                     u3530:
  4904  0015E4  FFFF               	dw	65535	; assembler added errata NOP
  4905  0015E6  90D8               	bcf	status,0,c
  4906  0015E8  3624               	rlcf	___fldiv@rem^0,f,c
  4907  0015EA  3625               	rlcf	(___fldiv@rem+1)^0,f,c
  4908  0015EC  3626               	rlcf	(___fldiv@rem+2)^0,f,c
  4909  0015EE  3627               	rlcf	(___fldiv@rem+3)^0,f,c
  4910  0015F0  90D8               	bcf	status,0,c
  4911  0015F2  3618               	rlcf	___fldiv@b^0,f,c
  4912  0015F4  3619               	rlcf	(___fldiv@b+1)^0,f,c
  4913  0015F6  361A               	rlcf	(___fldiv@b+2)^0,f,c
  4914  0015F8  361B               	rlcf	(___fldiv@b+3)^0,f,c
  4915  0015FA  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  4916  0015FC  EF02  F00B         	goto	u3541
  4917  001600  EF05  F00B         	goto	u3540
  4918  001604                     u3541:
  4919  001604  FFFF               	dw	65535	; assembler added errata NOP
  4920  001606  EF07  F00B         	goto	l1102
  4921  00160A                     u3540:
  4922  00160A  FFFF               	dw	65535	; assembler added errata NOP
  4923  00160C  8018               	bsf	___fldiv@b^0,0,c
  4924  00160E                     l1102:
  4925  00160E  FFFF               	dw	65535	; assembler added errata NOP
  4926  001610  90D8               	bcf	status,0,c
  4927  001612  362B               	rlcf	___fldiv@grs^0,f,c
  4928  001614  362C               	rlcf	(___fldiv@grs+1)^0,f,c
  4929  001616  362D               	rlcf	(___fldiv@grs+2)^0,f,c
  4930  001618  362E               	rlcf	(___fldiv@grs+3)^0,f,c
  4931  00161A                     l3481:
  4932  00161A  FFFF               	dw	65535	; assembler added errata NOP
  4933  00161C  501C               	movf	___fldiv@a^0,w,c
  4934  00161E  5C24               	subwf	___fldiv@rem^0,w,c
  4935  001620  501D               	movf	(___fldiv@a+1)^0,w,c
  4936  001622  5825               	subwfb	(___fldiv@rem+1)^0,w,c
  4937  001624  501E               	movf	(___fldiv@a+2)^0,w,c
  4938  001626  5826               	subwfb	(___fldiv@rem+2)^0,w,c
  4939  001628  501F               	movf	(___fldiv@a+3)^0,w,c
  4940  00162A  5827               	subwfb	(___fldiv@rem+3)^0,w,c
  4941  00162C  A0D8               	btfss	status,0,c
  4942  00162E  EF1B  F00B         	goto	u3551
  4943  001632  EF1E  F00B         	goto	u3550
  4944  001636                     u3551:
  4945  001636  FFFF               	dw	65535	; assembler added errata NOP
  4946  001638  EF28  F00B         	goto	l3487
  4947  00163C                     u3550:
  4948  00163C  FFFF               	dw	65535	; assembler added errata NOP
  4949  00163E  8C2E               	bsf	(___fldiv@grs+3)^0,6,c
  4950  001640  501C               	movf	___fldiv@a^0,w,c
  4951  001642  5E24               	subwf	___fldiv@rem^0,f,c
  4952  001644  501D               	movf	(___fldiv@a+1)^0,w,c
  4953  001646  5A25               	subwfb	(___fldiv@rem+1)^0,f,c
  4954  001648  501E               	movf	(___fldiv@a+2)^0,w,c
  4955  00164A  5A26               	subwfb	(___fldiv@rem+2)^0,f,c
  4956  00164C  501F               	movf	(___fldiv@a+3)^0,w,c
  4957  00164E  5A27               	subwfb	(___fldiv@rem+3)^0,f,c
  4958  001650                     l3487:
  4959  001650  FFFF               	dw	65535	; assembler added errata NOP
  4960  001652  2A30               	incf	___fldiv@aexp^0,f,c
  4961  001654                     l1099:
  4962  001654  FFFF               	dw	65535	; assembler added errata NOP
  4963  001656  0E19               	movlw	25
  4964  001658  6430               	cpfsgt	___fldiv@aexp^0,c
  4965  00165A  EF31  F00B         	goto	u3561
  4966  00165E  EF34  F00B         	goto	u3560
  4967  001662                     u3561:
  4968  001662  FFFF               	dw	65535	; assembler added errata NOP
  4969  001664  EFE8  F00A         	goto	l3473
  4970  001668                     u3560:
  4971  001668  FFFF               	dw	65535	; assembler added errata NOP
  4972  00166A  5024               	movf	___fldiv@rem^0,w,c
  4973  00166C  1025               	iorwf	(___fldiv@rem+1)^0,w,c
  4974  00166E  1026               	iorwf	(___fldiv@rem+2)^0,w,c
  4975  001670  1027               	iorwf	(___fldiv@rem+3)^0,w,c
  4976  001672  B4D8               	btfsc	status,2,c
  4977  001674  EF3E  F00B         	goto	u3571
  4978  001678  EF41  F00B         	goto	u3570
  4979  00167C                     u3571:
  4980  00167C  FFFF               	dw	65535	; assembler added errata NOP
  4981  00167E  EF5E  F00B         	goto	l3499
  4982  001682                     u3570:
  4983  001682  FFFF               	dw	65535	; assembler added errata NOP
  4984  001684  802B               	bsf	___fldiv@grs^0,0,c
  4985  001686  EF5E  F00B         	goto	l3499
  4986  00168A                     l3493:
  4987  00168A  FFFF               	dw	65535	; assembler added errata NOP
  4988  00168C  90D8               	bcf	status,0,c
  4989  00168E  3618               	rlcf	___fldiv@b^0,f,c
  4990  001690  3619               	rlcf	(___fldiv@b+1)^0,f,c
  4991  001692  361A               	rlcf	(___fldiv@b+2)^0,f,c
  4992  001694  361B               	rlcf	(___fldiv@b+3)^0,f,c
  4993  001696  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  4994  001698  EF50  F00B         	goto	u3581
  4995  00169C  EF53  F00B         	goto	u3580
  4996  0016A0                     u3581:
  4997  0016A0  FFFF               	dw	65535	; assembler added errata NOP
  4998  0016A2  EF55  F00B         	goto	l1108
  4999  0016A6                     u3580:
  5000  0016A6  FFFF               	dw	65535	; assembler added errata NOP
  5001  0016A8  8018               	bsf	___fldiv@b^0,0,c
  5002  0016AA                     l1108:
  5003  0016AA  FFFF               	dw	65535	; assembler added errata NOP
  5004  0016AC  90D8               	bcf	status,0,c
  5005  0016AE  362B               	rlcf	___fldiv@grs^0,f,c
  5006  0016B0  362C               	rlcf	(___fldiv@grs+1)^0,f,c
  5007  0016B2  362D               	rlcf	(___fldiv@grs+2)^0,f,c
  5008  0016B4  362E               	rlcf	(___fldiv@grs+3)^0,f,c
  5009  0016B6  0629               	decf	___fldiv@new_exp^0,f,c
  5010  0016B8  A0D8               	btfss	status,0,c
  5011  0016BA  062A               	decf	(___fldiv@new_exp+1)^0,f,c
  5012  0016BC                     l3499:
  5013  0016BC  FFFF               	dw	65535	; assembler added errata NOP
  5014  0016BE  AE1A               	btfss	(___fldiv@b+2)^0,7,c
  5015  0016C0  EF64  F00B         	goto	u3591
  5016  0016C4  EF67  F00B         	goto	u3590
  5017  0016C8                     u3591:
  5018  0016C8  FFFF               	dw	65535	; assembler added errata NOP
  5019  0016CA  EF45  F00B         	goto	l3493
  5020  0016CE                     u3590:
  5021  0016CE  FFFF               	dw	65535	; assembler added errata NOP
  5022  0016D0  0E00               	movlw	0
  5023  0016D2  6E30               	movwf	___fldiv@aexp^0,c
  5024  0016D4  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  5025  0016D6  EF6F  F00B         	goto	u3601
  5026  0016DA  EF72  F00B         	goto	u3600
  5027  0016DE                     u3601:
  5028  0016DE  FFFF               	dw	65535	; assembler added errata NOP
  5029  0016E0  EF9D  F00B         	goto	l1110
  5030  0016E4                     u3600:
  5031  0016E4  FFFF               	dw	65535	; assembler added errata NOP
  5032  0016E6  0EFF               	movlw	255
  5033  0016E8  142B               	andwf	___fldiv@grs^0,w,c
  5034  0016EA  6E20               	movwf	??___fldiv^0,c
  5035  0016EC  0EFF               	movlw	255
  5036  0016EE  142C               	andwf	(___fldiv@grs+1)^0,w,c
  5037  0016F0  6E21               	movwf	(??___fldiv+1)^0,c
  5038  0016F2  0EFF               	movlw	255
  5039  0016F4  142D               	andwf	(___fldiv@grs+2)^0,w,c
  5040  0016F6  6E22               	movwf	(??___fldiv+2)^0,c
  5041  0016F8  0E7F               	movlw	127
  5042  0016FA  142E               	andwf	(___fldiv@grs+3)^0,w,c
  5043  0016FC  6E23               	movwf	(??___fldiv+3)^0,c
  5044  0016FE  5020               	movf	??___fldiv^0,w,c
  5045  001700  1021               	iorwf	(??___fldiv+1)^0,w,c
  5046  001702  1022               	iorwf	(??___fldiv+2)^0,w,c
  5047  001704  1023               	iorwf	(??___fldiv+3)^0,w,c
  5048  001706  B4D8               	btfsc	status,2,c
  5049  001708  EF88  F00B         	goto	u3611
  5050  00170C  EF8B  F00B         	goto	u3610
  5051  001710                     u3611:
  5052  001710  FFFF               	dw	65535	; assembler added errata NOP
  5053  001712  EF91  F00B         	goto	l1111
  5054  001716                     u3610:
  5055  001716  FFFF               	dw	65535	; assembler added errata NOP
  5056  001718                     l3507:
  5057  001718  FFFF               	dw	65535	; assembler added errata NOP
  5058  00171A  0E01               	movlw	1
  5059  00171C  6E30               	movwf	___fldiv@aexp^0,c
  5060  00171E  EF9D  F00B         	goto	l1110
  5061  001722                     l1111:
  5062  001722  FFFF               	dw	65535	; assembler added errata NOP
  5063  001724  A018               	btfss	___fldiv@b^0,0,c
  5064  001726  EF97  F00B         	goto	u3621
  5065  00172A  EF9A  F00B         	goto	u3620
  5066  00172E                     u3621:
  5067  00172E  FFFF               	dw	65535	; assembler added errata NOP
  5068  001730  EF9D  F00B         	goto	l1110
  5069  001734                     u3620:
  5070  001734  FFFF               	dw	65535	; assembler added errata NOP
  5071  001736  EF8C  F00B         	goto	l3507
  5072  00173A                     l1110:
  5073  00173A  FFFF               	dw	65535	; assembler added errata NOP
  5074  00173C  5030               	movf	___fldiv@aexp^0,w,c
  5075  00173E  B4D8               	btfsc	status,2,c
  5076  001740  EFA4  F00B         	goto	u3631
  5077  001744  EFA7  F00B         	goto	u3630
  5078  001748                     u3631:
  5079  001748  FFFF               	dw	65535	; assembler added errata NOP
  5080  00174A  EFCE  F00B         	goto	l3519
  5081  00174E                     u3630:
  5082  00174E  FFFF               	dw	65535	; assembler added errata NOP
  5083  001750  0E01               	movlw	1
  5084  001752  2618               	addwf	___fldiv@b^0,f,c
  5085  001754  0E00               	movlw	0
  5086  001756  2219               	addwfc	(___fldiv@b+1)^0,f,c
  5087  001758  221A               	addwfc	(___fldiv@b+2)^0,f,c
  5088  00175A  221B               	addwfc	(___fldiv@b+3)^0,f,c
  5089  00175C  A01B               	btfss	(___fldiv@b+3)^0,0,c
  5090  00175E  EFB3  F00B         	goto	u3641
  5091  001762  EFB6  F00B         	goto	u3640
  5092  001766                     u3641:
  5093  001766  FFFF               	dw	65535	; assembler added errata NOP
  5094  001768  EFCE  F00B         	goto	l3519
  5095  00176C                     u3640:
  5096  00176C  FFFF               	dw	65535	; assembler added errata NOP
  5097  00176E  C018  F020         	movff	___fldiv@b,??___fldiv
  5098  001772  C019  F021         	movff	___fldiv@b+1,??___fldiv+1
  5099  001776  C01A  F022         	movff	___fldiv@b+2,??___fldiv+2
  5100  00177A  C01B  F023         	movff	___fldiv@b+3,??___fldiv+3
  5101  00177E  3423               	rlcf	(??___fldiv+3)^0,w,c
  5102  001780  3223               	rrcf	(??___fldiv+3)^0,f,c
  5103  001782  3222               	rrcf	(??___fldiv+2)^0,f,c
  5104  001784  3221               	rrcf	(??___fldiv+1)^0,f,c
  5105  001786  3220               	rrcf	??___fldiv^0,f,c
  5106  001788  C020  F018         	movff	??___fldiv,___fldiv@b
  5107  00178C  C021  F019         	movff	??___fldiv+1,___fldiv@b+1
  5108  001790  C022  F01A         	movff	??___fldiv+2,___fldiv@b+2
  5109  001794  C023  F01B         	movff	??___fldiv+3,___fldiv@b+3
  5110  001798  4A29               	infsnz	___fldiv@new_exp^0,f,c
  5111  00179A  2A2A               	incf	(___fldiv@new_exp+1)^0,f,c
  5112  00179C                     l3519:
  5113  00179C  FFFF               	dw	65535	; assembler added errata NOP
  5114  00179E  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5115  0017A0  EFDA  F00B         	goto	u3651
  5116  0017A4  502A               	movf	(___fldiv@new_exp+1)^0,w,c
  5117  0017A6  E109               	bnz	u3650
  5118  0017A8  2829               	incf	___fldiv@new_exp^0,w,c
  5119  0017AA  A0D8               	btfss	status,0,c
  5120  0017AC  EFDA  F00B         	goto	u3651
  5121  0017B0  EFDD  F00B         	goto	u3650
  5122  0017B4                     u3651:
  5123  0017B4  FFFF               	dw	65535	; assembler added errata NOP
  5124  0017B6  EFE9  F00B         	goto	l3523
  5125  0017BA                     u3650:
  5126  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  5127  0017BC  0E00               	movlw	0
  5128  0017BE  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  5129  0017C0  6829               	setf	___fldiv@new_exp^0,c
  5130  0017C2  0E00               	movlw	0
  5131  0017C4  6E18               	movwf	___fldiv@b^0,c
  5132  0017C6  0E00               	movlw	0
  5133  0017C8  6E19               	movwf	(___fldiv@b+1)^0,c
  5134  0017CA  0E00               	movlw	0
  5135  0017CC  6E1A               	movwf	(___fldiv@b+2)^0,c
  5136  0017CE  0E00               	movlw	0
  5137  0017D0  6E1B               	movwf	(___fldiv@b+3)^0,c
  5138  0017D2                     l3523:
  5139  0017D2  FFFF               	dw	65535	; assembler added errata NOP
  5140  0017D4  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5141  0017D6  EFF8  F00B         	goto	u3660
  5142  0017DA  502A               	movf	(___fldiv@new_exp+1)^0,w,c
  5143  0017DC  E106               	bnz	u3661
  5144  0017DE  0429               	decf	___fldiv@new_exp^0,w,c
  5145  0017E0  B0D8               	btfsc	status,0,c
  5146  0017E2  EFF5  F00B         	goto	u3661
  5147  0017E6  EFF8  F00B         	goto	u3660
  5148  0017EA                     u3661:
  5149  0017EA  FFFF               	dw	65535	; assembler added errata NOP
  5150  0017EC  EF07  F00C         	goto	l3527
  5151  0017F0                     u3660:
  5152  0017F0  FFFF               	dw	65535	; assembler added errata NOP
  5153  0017F2  0E00               	movlw	0
  5154  0017F4  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  5155  0017F6  0E00               	movlw	0
  5156  0017F8  6E29               	movwf	___fldiv@new_exp^0,c
  5157  0017FA  0E00               	movlw	0
  5158  0017FC  6E18               	movwf	___fldiv@b^0,c
  5159  0017FE  0E00               	movlw	0
  5160  001800  6E19               	movwf	(___fldiv@b+1)^0,c
  5161  001802  0E00               	movlw	0
  5162  001804  6E1A               	movwf	(___fldiv@b+2)^0,c
  5163  001806  0E00               	movlw	0
  5164  001808  6E1B               	movwf	(___fldiv@b+3)^0,c
  5165  00180A  0E00               	movlw	0
  5166  00180C  6E28               	movwf	___fldiv@sign^0,c
  5167  00180E                     l3527:
  5168  00180E  FFFF               	dw	65535	; assembler added errata NOP
  5169  001810  C029  F02F         	movff	___fldiv@new_exp,___fldiv@bexp
  5170  001814  A02F               	btfss	___fldiv@bexp^0,0,c
  5171  001816  EF0F  F00C         	goto	u3671
  5172  00181A  EF12  F00C         	goto	u3670
  5173  00181E                     u3671:
  5174  00181E  FFFF               	dw	65535	; assembler added errata NOP
  5175  001820  EF16  F00C         	goto	l3533
  5176  001824                     u3670:
  5177  001824  FFFF               	dw	65535	; assembler added errata NOP
  5178  001826  8E1A               	bsf	(___fldiv@b+2)^0,7,c
  5179  001828  EF18  F00C         	goto	l3535
  5180  00182C                     l3533:
  5181  00182C  FFFF               	dw	65535	; assembler added errata NOP
  5182  00182E  9E1A               	bcf	(___fldiv@b+2)^0,7,c
  5183  001830                     l3535:
  5184  001830  FFFF               	dw	65535	; assembler added errata NOP
  5185  001832  90D8               	bcf	status,0,c
  5186  001834  302F               	rrcf	___fldiv@bexp^0,w,c
  5187  001836  6E1B               	movwf	(___fldiv@b+3)^0,c
  5188  001838  EF9C  F00A         	goto	l3449
  5189  00183C                     l1097:
  5190  00183C  FFFF               	dw	65535	; assembler added errata NOP
  5191  00183E  0012               	return		;funcret
  5192  001840  FFFF               	dw	65535	; errata NOP
  5193  001842                     __end_of___fldiv:
  5194                           	callstack 0
  5195                           
  5196 ;; *************** function _Z_axis *****************
  5197 ;; Defined at:
  5198 ;;		line 463 in file "main.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  direction       1    wreg     unsigned char 
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;  direction       1   17[COMRAM] unsigned char 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      void 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5212 ;;      Params:         0       0       0       0       0       0       0
  5213 ;;      Locals:         1       0       0       0       0       0       0
  5214 ;;      Temps:          2       0       0       0       0       0       0
  5215 ;;      Totals:         3       0       0       0       0       0       0
  5216 ;;Total ram usage:        3 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; Hardware stack levels required when called: 3
  5219 ;; This function calls:
  5220 ;;		_ms_delay
  5221 ;; This function is called by:
  5222 ;;		_pick_and_place
  5223 ;;		_return_to_initial
  5224 ;;		_Z_axis_and_Tweezer
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text13
  5229  00283A                     __ptext13:
  5230                           	callstack 0
  5231  00283A                     _Z_axis:
  5232                           	callstack 0
  5233  00283A  FFFF               	dw	65535	; assembler added errata NOP
  5234                           
  5235                           ;incstack = 0
  5236                           ;Z_axis@direction stored from wreg
  5237  00283C  6E12               	movwf	Z_axis@direction^0,c
  5238  00283E                     
  5239                           ;main.c: 464:         _delay((unsigned long)((20)*(200000000/4000.0)));
  5240  00283E  0E04               	movlw	4
  5241  002840  6E11               	movwf	(??_Z_axis+1)^0,c
  5242  002842  0ECF               	movlw	207
  5243  002844  6E10               	movwf	??_Z_axis^0,c
  5244  002846  0EA5               	movlw	165
  5245  002848                     u6247:
  5246  002848  FFFF               	dw	65535	; errata NOP
  5247  00284A  2EE8               	decfsz	wreg,f,c
  5248  00284C  D7FD               	bra	u6247
  5249  00284E  2E10               	decfsz	??_Z_axis^0,f,c
  5250  002850  D7FB               	bra	u6247
  5251  002852  2E11               	decfsz	(??_Z_axis+1)^0,f,c
  5252  002854  D7F9               	bra	u6247
  5253  002856  D000               	nop2	
  5254  002858                     
  5255                           ;main.c: 465:         if (direction == 0 && !stop){
  5256  002858  5012               	movf	Z_axis@direction^0,w,c
  5257  00285A  A4D8               	btfss	status,2,c
  5258  00285C  EF32  F014         	goto	u3241
  5259  002860  EF35  F014         	goto	u3240
  5260  002864                     u3241:
  5261  002864  FFFF               	dw	65535	; assembler added errata NOP
  5262  002866  EF6C  F014         	goto	l3287
  5263  00286A                     u3240:
  5264  00286A  FFFF               	dw	65535	; assembler added errata NOP
  5265  00286C  506A               	movf	_stop^0,w,c
  5266  00286E  A4D8               	btfss	status,2,c
  5267  002870  EF3C  F014         	goto	u3251
  5268  002874  EF3F  F014         	goto	u3250
  5269  002878                     u3251:
  5270  002878  FFFF               	dw	65535	; assembler added errata NOP
  5271  00287A  EF6C  F014         	goto	l3287
  5272  00287E                     u3250:
  5273  00287E  FFFF               	dw	65535	; assembler added errata NOP
  5274  002880                     
  5275                           ;main.c: 466:             PORTD = 0b00000011;
  5276  002880  0E03               	movlw	3
  5277  002882  6E83               	movwf	131,c	;volatile
  5278  002884                     
  5279                           ;main.c: 467:             ms_delay(10);
  5280  002884  0E00               	movlw	0
  5281  002886  6E0B               	movwf	(ms_delay@val+1)^0,c
  5282  002888  0E0A               	movlw	10
  5283  00288A  6E0A               	movwf	ms_delay@val^0,c
  5284  00288C  EC1A  F019         	call	_ms_delay	;wreg free
  5285  002890                     
  5286                           ;main.c: 468:             PORTD = 0b00000110;
  5287  002890  0E06               	movlw	6
  5288  002892  6E83               	movwf	131,c	;volatile
  5289                           
  5290                           ;main.c: 469:             ms_delay(10);
  5291  002894  0E00               	movlw	0
  5292  002896  6E0B               	movwf	(ms_delay@val+1)^0,c
  5293  002898  0E0A               	movlw	10
  5294  00289A  6E0A               	movwf	ms_delay@val^0,c
  5295  00289C  EC1A  F019         	call	_ms_delay	;wreg free
  5296  0028A0                     
  5297                           ;main.c: 470:             PORTD = 0b00001100;
  5298  0028A0  0E0C               	movlw	12
  5299  0028A2  6E83               	movwf	131,c	;volatile
  5300  0028A4                     
  5301                           ;main.c: 471:             ms_delay(10);
  5302  0028A4  0E00               	movlw	0
  5303  0028A6  6E0B               	movwf	(ms_delay@val+1)^0,c
  5304  0028A8  0E0A               	movlw	10
  5305  0028AA  6E0A               	movwf	ms_delay@val^0,c
  5306  0028AC  EC1A  F019         	call	_ms_delay	;wreg free
  5307                           
  5308                           ;main.c: 472:             PORTD = 0b00001001;
  5309  0028B0  0E09               	movlw	9
  5310  0028B2  6E83               	movwf	131,c	;volatile
  5311  0028B4                     
  5312                           ;main.c: 473:             ms_delay(10);
  5313  0028B4  0E00               	movlw	0
  5314  0028B6  6E0B               	movwf	(ms_delay@val+1)^0,c
  5315  0028B8  0E0A               	movlw	10
  5316  0028BA  6E0A               	movwf	ms_delay@val^0,c
  5317  0028BC  EC1A  F019         	call	_ms_delay	;wreg free
  5318  0028C0                     
  5319                           ;main.c: 474:             PORTD = 0b00000011;
  5320  0028C0  0E03               	movlw	3
  5321  0028C2  6E83               	movwf	131,c	;volatile
  5322                           
  5323                           ;main.c: 475:             ms_delay(10);
  5324  0028C4  0E00               	movlw	0
  5325  0028C6  6E0B               	movwf	(ms_delay@val+1)^0,c
  5326  0028C8  0E0A               	movlw	10
  5327  0028CA  6E0A               	movwf	ms_delay@val^0,c
  5328  0028CC  EC1A  F019         	call	_ms_delay	;wreg free
  5329  0028D0                     
  5330                           ;main.c: 476:             Step_Z--;
  5331  0028D0  0100               	movlb	0	; () banked
  5332  0028D2  0794               	decf	_Step_Z& (0+255),f,b
  5333  0028D4  A0D8               	btfss	status,0,c
  5334  0028D6  0795               	decf	(_Step_Z+1)& (0+255),f,b
  5335  0028D8                     l3287:
  5336  0028D8  FFFF               	dw	65535	; assembler added errata NOP
  5337                           
  5338                           ;main.c: 478:         if (direction == 1 && !stop){
  5339  0028DA  0412               	decf	Z_axis@direction^0,w,c
  5340  0028DC  A4D8               	btfss	status,2,c
  5341  0028DE  EF73  F014         	goto	u3261
  5342  0028E2  EF76  F014         	goto	u3260
  5343  0028E6                     u3261:
  5344  0028E6  FFFF               	dw	65535	; assembler added errata NOP
  5345  0028E8  EFAC  F014         	goto	l347
  5346  0028EC                     u3260:
  5347  0028EC  FFFF               	dw	65535	; assembler added errata NOP
  5348  0028EE  506A               	movf	_stop^0,w,c
  5349  0028F0  A4D8               	btfss	status,2,c
  5350  0028F2  EF7D  F014         	goto	u3271
  5351  0028F6  EF80  F014         	goto	u3270
  5352  0028FA                     u3271:
  5353  0028FA  FFFF               	dw	65535	; assembler added errata NOP
  5354  0028FC  EFAC  F014         	goto	l347
  5355  002900                     u3270:
  5356  002900  FFFF               	dw	65535	; assembler added errata NOP
  5357  002902                     
  5358                           ;main.c: 479:             PORTD = 0b00001001;
  5359  002902  0E09               	movlw	9
  5360  002904  6E83               	movwf	131,c	;volatile
  5361  002906                     
  5362                           ;main.c: 480:             ms_delay(10);
  5363  002906  0E00               	movlw	0
  5364  002908  6E0B               	movwf	(ms_delay@val+1)^0,c
  5365  00290A  0E0A               	movlw	10
  5366  00290C  6E0A               	movwf	ms_delay@val^0,c
  5367  00290E  EC1A  F019         	call	_ms_delay	;wreg free
  5368  002912                     
  5369                           ;main.c: 481:             PORTD = 0b00001100;
  5370  002912  0E0C               	movlw	12
  5371  002914  6E83               	movwf	131,c	;volatile
  5372                           
  5373                           ;main.c: 482:             ms_delay(10);
  5374  002916  0E00               	movlw	0
  5375  002918  6E0B               	movwf	(ms_delay@val+1)^0,c
  5376  00291A  0E0A               	movlw	10
  5377  00291C  6E0A               	movwf	ms_delay@val^0,c
  5378  00291E  EC1A  F019         	call	_ms_delay	;wreg free
  5379  002922                     
  5380                           ;main.c: 483:             PORTD = 0b00000110;
  5381  002922  0E06               	movlw	6
  5382  002924  6E83               	movwf	131,c	;volatile
  5383  002926                     
  5384                           ;main.c: 484:             ms_delay(10);
  5385  002926  0E00               	movlw	0
  5386  002928  6E0B               	movwf	(ms_delay@val+1)^0,c
  5387  00292A  0E0A               	movlw	10
  5388  00292C  6E0A               	movwf	ms_delay@val^0,c
  5389  00292E  EC1A  F019         	call	_ms_delay	;wreg free
  5390                           
  5391                           ;main.c: 485:             PORTD = 0b00000011;
  5392  002932  0E03               	movlw	3
  5393  002934  6E83               	movwf	131,c	;volatile
  5394  002936                     
  5395                           ;main.c: 486:             ms_delay(10);
  5396  002936  0E00               	movlw	0
  5397  002938  6E0B               	movwf	(ms_delay@val+1)^0,c
  5398  00293A  0E0A               	movlw	10
  5399  00293C  6E0A               	movwf	ms_delay@val^0,c
  5400  00293E  EC1A  F019         	call	_ms_delay	;wreg free
  5401  002942                     
  5402                           ;main.c: 487:             PORTD = 0b00001001;
  5403  002942  0E09               	movlw	9
  5404  002944  6E83               	movwf	131,c	;volatile
  5405                           
  5406                           ;main.c: 488:             ms_delay(10);
  5407  002946  0E00               	movlw	0
  5408  002948  6E0B               	movwf	(ms_delay@val+1)^0,c
  5409  00294A  0E0A               	movlw	10
  5410  00294C  6E0A               	movwf	ms_delay@val^0,c
  5411  00294E  EC1A  F019         	call	_ms_delay	;wreg free
  5412  002952                     
  5413                           ;main.c: 489:             Step_Z++;
  5414  002952  0100               	movlb	0	; () banked
  5415  002954  4B94               	infsnz	_Step_Z& (0+255),f,b
  5416  002956  2B95               	incf	(_Step_Z+1)& (0+255),f,b
  5417  002958                     l347:
  5418  002958  FFFF               	dw	65535	; assembler added errata NOP
  5419  00295A  0012               	return		;funcret
  5420  00295C  FFFF               	dw	65535	; errata NOP
  5421  00295E                     __end_of_Z_axis:
  5422                           	callstack 0
  5423                           
  5424 ;; *************** function _Y_axis *****************
  5425 ;; Defined at:
  5426 ;;		line 434 in file "main.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  direction       1    wreg     unsigned char 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;  direction       1   15[COMRAM] unsigned char 
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0, cstack
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5440 ;;      Params:         0       0       0       0       0       0       0
  5441 ;;      Locals:         1       0       0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0       0       0
  5443 ;;      Totals:         1       0       0       0       0       0       0
  5444 ;;Total ram usage:        1 bytes
  5445 ;; Hardware stack levels used: 1
  5446 ;; Hardware stack levels required when called: 3
  5447 ;; This function calls:
  5448 ;;		_ms_delay
  5449 ;; This function is called by:
  5450 ;;		_pick_and_place
  5451 ;;		_return_to_initial
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text14
  5456  002A68                     __ptext14:
  5457                           	callstack 0
  5458  002A68                     _Y_axis:
  5459                           	callstack 0
  5460  002A68  FFFF               	dw	65535	; assembler added errata NOP
  5461                           
  5462                           ;incstack = 0
  5463                           ;Y_axis@direction stored from wreg
  5464  002A6A  6E10               	movwf	Y_axis@direction^0,c
  5465  002A6C                     
  5466                           ;main.c: 435:         if (direction == 0 && !stop){
  5467  002A6C  5010               	movf	Y_axis@direction^0,w,c
  5468  002A6E  A4D8               	btfss	status,2,c
  5469  002A70  EF3C  F015         	goto	u3201
  5470  002A74  EF3F  F015         	goto	u3200
  5471  002A78                     u3201:
  5472  002A78  FFFF               	dw	65535	; assembler added errata NOP
  5473  002A7A  EF76  F015         	goto	l3245
  5474  002A7E                     u3200:
  5475  002A7E  FFFF               	dw	65535	; assembler added errata NOP
  5476  002A80  506A               	movf	_stop^0,w,c
  5477  002A82  A4D8               	btfss	status,2,c
  5478  002A84  EF46  F015         	goto	u3211
  5479  002A88  EF49  F015         	goto	u3210
  5480  002A8C                     u3211:
  5481  002A8C  FFFF               	dw	65535	; assembler added errata NOP
  5482  002A8E  EF76  F015         	goto	l3245
  5483  002A92                     u3210:
  5484  002A92  FFFF               	dw	65535	; assembler added errata NOP
  5485  002A94                     
  5486                           ;main.c: 436:             PORTB = 0b00110000;
  5487  002A94  0E30               	movlw	48
  5488  002A96  6E81               	movwf	129,c	;volatile
  5489  002A98                     
  5490                           ;main.c: 437:             ms_delay(1);
  5491  002A98  0E00               	movlw	0
  5492  002A9A  6E0B               	movwf	(ms_delay@val+1)^0,c
  5493  002A9C  0E01               	movlw	1
  5494  002A9E  6E0A               	movwf	ms_delay@val^0,c
  5495  002AA0  EC1A  F019         	call	_ms_delay	;wreg free
  5496  002AA4                     
  5497                           ;main.c: 438:             PORTB = 0b01100000;
  5498  002AA4  0E60               	movlw	96
  5499  002AA6  6E81               	movwf	129,c	;volatile
  5500                           
  5501                           ;main.c: 439:             ms_delay(1);
  5502  002AA8  0E00               	movlw	0
  5503  002AAA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5504  002AAC  0E01               	movlw	1
  5505  002AAE  6E0A               	movwf	ms_delay@val^0,c
  5506  002AB0  EC1A  F019         	call	_ms_delay	;wreg free
  5507  002AB4                     
  5508                           ;main.c: 440:             PORTB = 0b11000000;
  5509  002AB4  0EC0               	movlw	192
  5510  002AB6  6E81               	movwf	129,c	;volatile
  5511  002AB8                     
  5512                           ;main.c: 441:             ms_delay(1);
  5513  002AB8  0E00               	movlw	0
  5514  002ABA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5515  002ABC  0E01               	movlw	1
  5516  002ABE  6E0A               	movwf	ms_delay@val^0,c
  5517  002AC0  EC1A  F019         	call	_ms_delay	;wreg free
  5518                           
  5519                           ;main.c: 442:             PORTB = 0b10010000;
  5520  002AC4  0E90               	movlw	144
  5521  002AC6  6E81               	movwf	129,c	;volatile
  5522  002AC8                     
  5523                           ;main.c: 443:             ms_delay(1);
  5524  002AC8  0E00               	movlw	0
  5525  002ACA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5526  002ACC  0E01               	movlw	1
  5527  002ACE  6E0A               	movwf	ms_delay@val^0,c
  5528  002AD0  EC1A  F019         	call	_ms_delay	;wreg free
  5529  002AD4                     
  5530                           ;main.c: 444:             PORTB = 0b00110000;
  5531  002AD4  0E30               	movlw	48
  5532  002AD6  6E81               	movwf	129,c	;volatile
  5533                           
  5534                           ;main.c: 445:             ms_delay(1);
  5535  002AD8  0E00               	movlw	0
  5536  002ADA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5537  002ADC  0E01               	movlw	1
  5538  002ADE  6E0A               	movwf	ms_delay@val^0,c
  5539  002AE0  EC1A  F019         	call	_ms_delay	;wreg free
  5540  002AE4                     
  5541                           ;main.c: 446:             Step_Y--;
  5542  002AE4  0100               	movlb	0	; () banked
  5543  002AE6  0796               	decf	_Step_Y& (0+255),f,b
  5544  002AE8  A0D8               	btfss	status,0,c
  5545  002AEA  0797               	decf	(_Step_Y+1)& (0+255),f,b
  5546  002AEC                     l3245:
  5547  002AEC  FFFF               	dw	65535	; assembler added errata NOP
  5548                           
  5549                           ;main.c: 448:         if (direction == 1 && !stop){
  5550  002AEE  0410               	decf	Y_axis@direction^0,w,c
  5551  002AF0  A4D8               	btfss	status,2,c
  5552  002AF2  EF7D  F015         	goto	u3221
  5553  002AF6  EF80  F015         	goto	u3220
  5554  002AFA                     u3221:
  5555  002AFA  FFFF               	dw	65535	; assembler added errata NOP
  5556  002AFC  EFB6  F015         	goto	l342
  5557  002B00                     u3220:
  5558  002B00  FFFF               	dw	65535	; assembler added errata NOP
  5559  002B02  506A               	movf	_stop^0,w,c
  5560  002B04  A4D8               	btfss	status,2,c
  5561  002B06  EF87  F015         	goto	u3231
  5562  002B0A  EF8A  F015         	goto	u3230
  5563  002B0E                     u3231:
  5564  002B0E  FFFF               	dw	65535	; assembler added errata NOP
  5565  002B10  EFB6  F015         	goto	l342
  5566  002B14                     u3230:
  5567  002B14  FFFF               	dw	65535	; assembler added errata NOP
  5568  002B16                     
  5569                           ;main.c: 449:             PORTB = 0b10010000;
  5570  002B16  0E90               	movlw	144
  5571  002B18  6E81               	movwf	129,c	;volatile
  5572  002B1A                     
  5573                           ;main.c: 450:             ms_delay(1);
  5574  002B1A  0E00               	movlw	0
  5575  002B1C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5576  002B1E  0E01               	movlw	1
  5577  002B20  6E0A               	movwf	ms_delay@val^0,c
  5578  002B22  EC1A  F019         	call	_ms_delay	;wreg free
  5579  002B26                     
  5580                           ;main.c: 451:             PORTB = 0b11000000;
  5581  002B26  0EC0               	movlw	192
  5582  002B28  6E81               	movwf	129,c	;volatile
  5583                           
  5584                           ;main.c: 452:             ms_delay(1);
  5585  002B2A  0E00               	movlw	0
  5586  002B2C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5587  002B2E  0E01               	movlw	1
  5588  002B30  6E0A               	movwf	ms_delay@val^0,c
  5589  002B32  EC1A  F019         	call	_ms_delay	;wreg free
  5590  002B36                     
  5591                           ;main.c: 453:             PORTB = 0b01100000;
  5592  002B36  0E60               	movlw	96
  5593  002B38  6E81               	movwf	129,c	;volatile
  5594  002B3A                     
  5595                           ;main.c: 454:             ms_delay(1);
  5596  002B3A  0E00               	movlw	0
  5597  002B3C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5598  002B3E  0E01               	movlw	1
  5599  002B40  6E0A               	movwf	ms_delay@val^0,c
  5600  002B42  EC1A  F019         	call	_ms_delay	;wreg free
  5601                           
  5602                           ;main.c: 455:             PORTB = 0b00110000;
  5603  002B46  0E30               	movlw	48
  5604  002B48  6E81               	movwf	129,c	;volatile
  5605  002B4A                     
  5606                           ;main.c: 456:             ms_delay(1);
  5607  002B4A  0E00               	movlw	0
  5608  002B4C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5609  002B4E  0E01               	movlw	1
  5610  002B50  6E0A               	movwf	ms_delay@val^0,c
  5611  002B52  EC1A  F019         	call	_ms_delay	;wreg free
  5612  002B56                     
  5613                           ;main.c: 457:             PORTB = 0b10010000;
  5614  002B56  0E90               	movlw	144
  5615  002B58  6E81               	movwf	129,c	;volatile
  5616                           
  5617                           ;main.c: 458:             ms_delay(1);
  5618  002B5A  0E00               	movlw	0
  5619  002B5C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5620  002B5E  0E01               	movlw	1
  5621  002B60  6E0A               	movwf	ms_delay@val^0,c
  5622  002B62  EC1A  F019         	call	_ms_delay	;wreg free
  5623  002B66                     
  5624                           ;main.c: 459:             Step_Y++;
  5625  002B66  0100               	movlb	0	; () banked
  5626  002B68  4B96               	infsnz	_Step_Y& (0+255),f,b
  5627  002B6A  2B97               	incf	(_Step_Y+1)& (0+255),f,b
  5628  002B6C                     l342:
  5629  002B6C  FFFF               	dw	65535	; assembler added errata NOP
  5630  002B6E  0012               	return		;funcret
  5631  002B70  FFFF               	dw	65535	; errata NOP
  5632  002B72                     __end_of_Y_axis:
  5633                           	callstack 0
  5634                           
  5635 ;; *************** function _X_axis *****************
  5636 ;; Defined at:
  5637 ;;		line 404 in file "main.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;  direction       1    wreg     unsigned char 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  direction       1   15[COMRAM] unsigned char 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  1    wreg      void 
  5644 ;; Registers used:
  5645 ;;		wreg, status,2, status,0, cstack
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5651 ;;      Params:         0       0       0       0       0       0       0
  5652 ;;      Locals:         1       0       0       0       0       0       0
  5653 ;;      Temps:          0       0       0       0       0       0       0
  5654 ;;      Totals:         1       0       0       0       0       0       0
  5655 ;;Total ram usage:        1 bytes
  5656 ;; Hardware stack levels used: 1
  5657 ;; Hardware stack levels required when called: 3
  5658 ;; This function calls:
  5659 ;;		_ms_delay
  5660 ;; This function is called by:
  5661 ;;		_pick_and_place
  5662 ;;		_return_to_initial
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text15
  5667  002B72                     __ptext15:
  5668                           	callstack 0
  5669  002B72                     _X_axis:
  5670                           	callstack 0
  5671  002B72  FFFF               	dw	65535	; assembler added errata NOP
  5672                           
  5673                           ;incstack = 0
  5674                           ;X_axis@direction stored from wreg
  5675  002B74  6E10               	movwf	X_axis@direction^0,c
  5676  002B76                     
  5677                           ;main.c: 405:         if (direction == 0 && !stop){
  5678  002B76  5010               	movf	X_axis@direction^0,w,c
  5679  002B78  A4D8               	btfss	status,2,c
  5680  002B7A  EFC1  F015         	goto	u3161
  5681  002B7E  EFC4  F015         	goto	u3160
  5682  002B82                     u3161:
  5683  002B82  FFFF               	dw	65535	; assembler added errata NOP
  5684  002B84  EFFB  F015         	goto	l3205
  5685  002B88                     u3160:
  5686  002B88  FFFF               	dw	65535	; assembler added errata NOP
  5687  002B8A  506A               	movf	_stop^0,w,c
  5688  002B8C  A4D8               	btfss	status,2,c
  5689  002B8E  EFCB  F015         	goto	u3171
  5690  002B92  EFCE  F015         	goto	u3170
  5691  002B96                     u3171:
  5692  002B96  FFFF               	dw	65535	; assembler added errata NOP
  5693  002B98  EFFB  F015         	goto	l3205
  5694  002B9C                     u3170:
  5695  002B9C  FFFF               	dw	65535	; assembler added errata NOP
  5696  002B9E                     
  5697                           ;main.c: 406:             PORTA = 0b00000011;
  5698  002B9E  0E03               	movlw	3
  5699  002BA0  6E80               	movwf	128,c	;volatile
  5700  002BA2                     
  5701                           ;main.c: 407:             ms_delay(1);
  5702  002BA2  0E00               	movlw	0
  5703  002BA4  6E0B               	movwf	(ms_delay@val+1)^0,c
  5704  002BA6  0E01               	movlw	1
  5705  002BA8  6E0A               	movwf	ms_delay@val^0,c
  5706  002BAA  EC1A  F019         	call	_ms_delay	;wreg free
  5707  002BAE                     
  5708                           ;main.c: 408:             PORTA = 0b00000110;
  5709  002BAE  0E06               	movlw	6
  5710  002BB0  6E80               	movwf	128,c	;volatile
  5711                           
  5712                           ;main.c: 409:             ms_delay(1);
  5713  002BB2  0E00               	movlw	0
  5714  002BB4  6E0B               	movwf	(ms_delay@val+1)^0,c
  5715  002BB6  0E01               	movlw	1
  5716  002BB8  6E0A               	movwf	ms_delay@val^0,c
  5717  002BBA  EC1A  F019         	call	_ms_delay	;wreg free
  5718  002BBE                     
  5719                           ;main.c: 410:             PORTA = 0b00001100;
  5720  002BBE  0E0C               	movlw	12
  5721  002BC0  6E80               	movwf	128,c	;volatile
  5722  002BC2                     
  5723                           ;main.c: 411:             ms_delay(1);
  5724  002BC2  0E00               	movlw	0
  5725  002BC4  6E0B               	movwf	(ms_delay@val+1)^0,c
  5726  002BC6  0E01               	movlw	1
  5727  002BC8  6E0A               	movwf	ms_delay@val^0,c
  5728  002BCA  EC1A  F019         	call	_ms_delay	;wreg free
  5729                           
  5730                           ;main.c: 412:             PORTA = 0b00001001;
  5731  002BCE  0E09               	movlw	9
  5732  002BD0  6E80               	movwf	128,c	;volatile
  5733  002BD2                     
  5734                           ;main.c: 413:             ms_delay(1);
  5735  002BD2  0E00               	movlw	0
  5736  002BD4  6E0B               	movwf	(ms_delay@val+1)^0,c
  5737  002BD6  0E01               	movlw	1
  5738  002BD8  6E0A               	movwf	ms_delay@val^0,c
  5739  002BDA  EC1A  F019         	call	_ms_delay	;wreg free
  5740  002BDE                     
  5741                           ;main.c: 414:             PORTA = 0b00000011;
  5742  002BDE  0E03               	movlw	3
  5743  002BE0  6E80               	movwf	128,c	;volatile
  5744                           
  5745                           ;main.c: 415:             ms_delay(1);
  5746  002BE2  0E00               	movlw	0
  5747  002BE4  6E0B               	movwf	(ms_delay@val+1)^0,c
  5748  002BE6  0E01               	movlw	1
  5749  002BE8  6E0A               	movwf	ms_delay@val^0,c
  5750  002BEA  EC1A  F019         	call	_ms_delay	;wreg free
  5751  002BEE                     
  5752                           ;main.c: 416:             Step_X--;
  5753  002BEE  0100               	movlb	0	; () banked
  5754  002BF0  0798               	decf	_Step_X& (0+255),f,b
  5755  002BF2  A0D8               	btfss	status,0,c
  5756  002BF4  0799               	decf	(_Step_X+1)& (0+255),f,b
  5757  002BF6                     l3205:
  5758  002BF6  FFFF               	dw	65535	; assembler added errata NOP
  5759                           
  5760                           ;main.c: 418:         if (direction == 1 && !stop){
  5761  002BF8  0410               	decf	X_axis@direction^0,w,c
  5762  002BFA  A4D8               	btfss	status,2,c
  5763  002BFC  EF02  F016         	goto	u3181
  5764  002C00  EF05  F016         	goto	u3180
  5765  002C04                     u3181:
  5766  002C04  FFFF               	dw	65535	; assembler added errata NOP
  5767  002C06  EF3B  F016         	goto	l337
  5768  002C0A                     u3180:
  5769  002C0A  FFFF               	dw	65535	; assembler added errata NOP
  5770  002C0C  506A               	movf	_stop^0,w,c
  5771  002C0E  A4D8               	btfss	status,2,c
  5772  002C10  EF0C  F016         	goto	u3191
  5773  002C14  EF0F  F016         	goto	u3190
  5774  002C18                     u3191:
  5775  002C18  FFFF               	dw	65535	; assembler added errata NOP
  5776  002C1A  EF3B  F016         	goto	l337
  5777  002C1E                     u3190:
  5778  002C1E  FFFF               	dw	65535	; assembler added errata NOP
  5779  002C20                     
  5780                           ;main.c: 419:             PORTA = 0b00001001;
  5781  002C20  0E09               	movlw	9
  5782  002C22  6E80               	movwf	128,c	;volatile
  5783  002C24                     
  5784                           ;main.c: 420:             ms_delay(1);
  5785  002C24  0E00               	movlw	0
  5786  002C26  6E0B               	movwf	(ms_delay@val+1)^0,c
  5787  002C28  0E01               	movlw	1
  5788  002C2A  6E0A               	movwf	ms_delay@val^0,c
  5789  002C2C  EC1A  F019         	call	_ms_delay	;wreg free
  5790  002C30                     
  5791                           ;main.c: 421:             PORTA = 0b00001100;
  5792  002C30  0E0C               	movlw	12
  5793  002C32  6E80               	movwf	128,c	;volatile
  5794                           
  5795                           ;main.c: 422:             ms_delay(1);
  5796  002C34  0E00               	movlw	0
  5797  002C36  6E0B               	movwf	(ms_delay@val+1)^0,c
  5798  002C38  0E01               	movlw	1
  5799  002C3A  6E0A               	movwf	ms_delay@val^0,c
  5800  002C3C  EC1A  F019         	call	_ms_delay	;wreg free
  5801  002C40                     
  5802                           ;main.c: 423:             PORTA = 0b00000110;
  5803  002C40  0E06               	movlw	6
  5804  002C42  6E80               	movwf	128,c	;volatile
  5805  002C44                     
  5806                           ;main.c: 424:             ms_delay(1);
  5807  002C44  0E00               	movlw	0
  5808  002C46  6E0B               	movwf	(ms_delay@val+1)^0,c
  5809  002C48  0E01               	movlw	1
  5810  002C4A  6E0A               	movwf	ms_delay@val^0,c
  5811  002C4C  EC1A  F019         	call	_ms_delay	;wreg free
  5812                           
  5813                           ;main.c: 425:             PORTA = 0b00000011;
  5814  002C50  0E03               	movlw	3
  5815  002C52  6E80               	movwf	128,c	;volatile
  5816  002C54                     
  5817                           ;main.c: 426:             ms_delay(1);
  5818  002C54  0E00               	movlw	0
  5819  002C56  6E0B               	movwf	(ms_delay@val+1)^0,c
  5820  002C58  0E01               	movlw	1
  5821  002C5A  6E0A               	movwf	ms_delay@val^0,c
  5822  002C5C  EC1A  F019         	call	_ms_delay	;wreg free
  5823  002C60                     
  5824                           ;main.c: 427:             PORTA = 0b00001001;
  5825  002C60  0E09               	movlw	9
  5826  002C62  6E80               	movwf	128,c	;volatile
  5827                           
  5828                           ;main.c: 428:             ms_delay(1);
  5829  002C64  0E00               	movlw	0
  5830  002C66  6E0B               	movwf	(ms_delay@val+1)^0,c
  5831  002C68  0E01               	movlw	1
  5832  002C6A  6E0A               	movwf	ms_delay@val^0,c
  5833  002C6C  EC1A  F019         	call	_ms_delay	;wreg free
  5834  002C70                     
  5835                           ;main.c: 429:             Step_X++;
  5836  002C70  0100               	movlb	0	; () banked
  5837  002C72  4B98               	infsnz	_Step_X& (0+255),f,b
  5838  002C74  2B99               	incf	(_Step_X+1)& (0+255),f,b
  5839  002C76                     l337:
  5840  002C76  FFFF               	dw	65535	; assembler added errata NOP
  5841  002C78  0012               	return		;funcret
  5842  002C7A  FFFF               	dw	65535	; errata NOP
  5843  002C7C                     __end_of_X_axis:
  5844                           	callstack 0
  5845                           
  5846 ;; *************** function _Twister *****************
  5847 ;; Defined at:
  5848 ;;		line 493 in file "main.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  direction       1    wreg     unsigned char 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  direction       1   15[COMRAM] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      void 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5862 ;;      Params:         0       0       0       0       0       0       0
  5863 ;;      Locals:         1       0       0       0       0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0
  5865 ;;      Totals:         1       0       0       0       0       0       0
  5866 ;;Total ram usage:        1 bytes
  5867 ;; Hardware stack levels used: 1
  5868 ;; Hardware stack levels required when called: 3
  5869 ;; This function calls:
  5870 ;;		_ms_delay
  5871 ;; This function is called by:
  5872 ;;		_pick_and_place
  5873 ;;		_return_to_initial
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text16
  5878  002D76                     __ptext16:
  5879                           	callstack 0
  5880  002D76                     _Twister:
  5881                           	callstack 0
  5882  002D76  FFFF               	dw	65535	; assembler added errata NOP
  5883                           
  5884                           ;incstack = 0
  5885                           ;Twister@direction stored from wreg
  5886  002D78  6E10               	movwf	Twister@direction^0,c
  5887  002D7A                     
  5888                           ;main.c: 494:         if (direction == 0 && !stop){
  5889  002D7A  5010               	movf	Twister@direction^0,w,c
  5890  002D7C  A4D8               	btfss	status,2,c
  5891  002D7E  EFC3  F016         	goto	u3281
  5892  002D82  EFC6  F016         	goto	u3280
  5893  002D86                     u3281:
  5894  002D86  FFFF               	dw	65535	; assembler added errata NOP
  5895  002D88  EFF5  F016         	goto	l3325
  5896  002D8C                     u3280:
  5897  002D8C  FFFF               	dw	65535	; assembler added errata NOP
  5898  002D8E  506A               	movf	_stop^0,w,c
  5899  002D90  A4D8               	btfss	status,2,c
  5900  002D92  EFCD  F016         	goto	u3291
  5901  002D96  EFD0  F016         	goto	u3290
  5902  002D9A                     u3291:
  5903  002D9A  FFFF               	dw	65535	; assembler added errata NOP
  5904  002D9C  EFF5  F016         	goto	l3325
  5905  002DA0                     u3290:
  5906  002DA0  FFFF               	dw	65535	; assembler added errata NOP
  5907  002DA2                     
  5908                           ;main.c: 495:             PORTD = 0b00110000;
  5909  002DA2  0E30               	movlw	48
  5910  002DA4  6E83               	movwf	131,c	;volatile
  5911  002DA6                     
  5912                           ;main.c: 496:             ms_delay(1);
  5913  002DA6  0E00               	movlw	0
  5914  002DA8  6E0B               	movwf	(ms_delay@val+1)^0,c
  5915  002DAA  0E01               	movlw	1
  5916  002DAC  6E0A               	movwf	ms_delay@val^0,c
  5917  002DAE  EC1A  F019         	call	_ms_delay	;wreg free
  5918  002DB2                     
  5919                           ;main.c: 497:             PORTD = 0b11000000;
  5920  002DB2  0EC0               	movlw	192
  5921  002DB4  6E83               	movwf	131,c	;volatile
  5922                           
  5923                           ;main.c: 498:             ms_delay(1);
  5924  002DB6  0E00               	movlw	0
  5925  002DB8  6E0B               	movwf	(ms_delay@val+1)^0,c
  5926  002DBA  0E01               	movlw	1
  5927  002DBC  6E0A               	movwf	ms_delay@val^0,c
  5928  002DBE  EC1A  F019         	call	_ms_delay	;wreg free
  5929  002DC2                     
  5930                           ;main.c: 499:             PORTD = 0b10010000;
  5931  002DC2  0E90               	movlw	144
  5932  002DC4  6E83               	movwf	131,c	;volatile
  5933  002DC6                     
  5934                           ;main.c: 500:             ms_delay(1);
  5935  002DC6  0E00               	movlw	0
  5936  002DC8  6E0B               	movwf	(ms_delay@val+1)^0,c
  5937  002DCA  0E01               	movlw	1
  5938  002DCC  6E0A               	movwf	ms_delay@val^0,c
  5939  002DCE  EC1A  F019         	call	_ms_delay	;wreg free
  5940                           
  5941                           ;main.c: 501:             PORTD = 0b00110000;
  5942  002DD2  0E30               	movlw	48
  5943  002DD4  6E83               	movwf	131,c	;volatile
  5944  002DD6                     
  5945                           ;main.c: 502:             ms_delay(1);
  5946  002DD6  0E00               	movlw	0
  5947  002DD8  6E0B               	movwf	(ms_delay@val+1)^0,c
  5948  002DDA  0E01               	movlw	1
  5949  002DDC  6E0A               	movwf	ms_delay@val^0,c
  5950  002DDE  EC1A  F019         	call	_ms_delay	;wreg free
  5951  002DE2                     
  5952                           ;main.c: 503:             Step_Angle--;
  5953  002DE2  0100               	movlb	0	; () banked
  5954  002DE4  0792               	decf	_Step_Angle& (0+255),f,b
  5955  002DE6  A0D8               	btfss	status,0,c
  5956  002DE8  0793               	decf	(_Step_Angle+1)& (0+255),f,b
  5957  002DEA                     l3325:
  5958  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  5959                           
  5960                           ;main.c: 505:         if (direction == 1 && !stop){
  5961  002DEC  0410               	decf	Twister@direction^0,w,c
  5962  002DEE  A4D8               	btfss	status,2,c
  5963  002DF0  EFFC  F016         	goto	u3301
  5964  002DF4  EFFF  F016         	goto	u3300
  5965  002DF8                     u3301:
  5966  002DF8  FFFF               	dw	65535	; assembler added errata NOP
  5967  002DFA  EF2D  F017         	goto	l352
  5968  002DFE                     u3300:
  5969  002DFE  FFFF               	dw	65535	; assembler added errata NOP
  5970  002E00  506A               	movf	_stop^0,w,c
  5971  002E02  A4D8               	btfss	status,2,c
  5972  002E04  EF06  F017         	goto	u3311
  5973  002E08  EF09  F017         	goto	u3310
  5974  002E0C                     u3311:
  5975  002E0C  FFFF               	dw	65535	; assembler added errata NOP
  5976  002E0E  EF2D  F017         	goto	l352
  5977  002E12                     u3310:
  5978  002E12  FFFF               	dw	65535	; assembler added errata NOP
  5979  002E14                     
  5980                           ;main.c: 506:             PORTD = 0b10010000;
  5981  002E14  0E90               	movlw	144
  5982  002E16  6E83               	movwf	131,c	;volatile
  5983  002E18                     
  5984                           ;main.c: 507:             ms_delay(1);
  5985  002E18  0E00               	movlw	0
  5986  002E1A  6E0B               	movwf	(ms_delay@val+1)^0,c
  5987  002E1C  0E01               	movlw	1
  5988  002E1E  6E0A               	movwf	ms_delay@val^0,c
  5989  002E20  EC1A  F019         	call	_ms_delay	;wreg free
  5990  002E24                     
  5991                           ;main.c: 508:             PORTD = 0b01100000;
  5992  002E24  0E60               	movlw	96
  5993  002E26  6E83               	movwf	131,c	;volatile
  5994                           
  5995                           ;main.c: 509:             ms_delay(1);
  5996  002E28  0E00               	movlw	0
  5997  002E2A  6E0B               	movwf	(ms_delay@val+1)^0,c
  5998  002E2C  0E01               	movlw	1
  5999  002E2E  6E0A               	movwf	ms_delay@val^0,c
  6000  002E30  EC1A  F019         	call	_ms_delay	;wreg free
  6001  002E34                     
  6002                           ;main.c: 510:             PORTD = 0b00110000;
  6003  002E34  0E30               	movlw	48
  6004  002E36  6E83               	movwf	131,c	;volatile
  6005  002E38                     
  6006                           ;main.c: 511:             ms_delay(1);
  6007  002E38  0E00               	movlw	0
  6008  002E3A  6E0B               	movwf	(ms_delay@val+1)^0,c
  6009  002E3C  0E01               	movlw	1
  6010  002E3E  6E0A               	movwf	ms_delay@val^0,c
  6011  002E40  EC1A  F019         	call	_ms_delay	;wreg free
  6012                           
  6013                           ;main.c: 512:             PORTD = 0b10010000;
  6014  002E44  0E90               	movlw	144
  6015  002E46  6E83               	movwf	131,c	;volatile
  6016  002E48                     
  6017                           ;main.c: 513:             ms_delay(1);
  6018  002E48  0E00               	movlw	0
  6019  002E4A  6E0B               	movwf	(ms_delay@val+1)^0,c
  6020  002E4C  0E01               	movlw	1
  6021  002E4E  6E0A               	movwf	ms_delay@val^0,c
  6022  002E50  EC1A  F019         	call	_ms_delay	;wreg free
  6023  002E54                     
  6024                           ;main.c: 514:             Step_Angle++;
  6025  002E54  0100               	movlb	0	; () banked
  6026  002E56  4B92               	infsnz	_Step_Angle& (0+255),f,b
  6027  002E58  2B93               	incf	(_Step_Angle+1)& (0+255),f,b
  6028  002E5A                     l352:
  6029  002E5A  FFFF               	dw	65535	; assembler added errata NOP
  6030  002E5C  0012               	return		;funcret
  6031  002E5E  FFFF               	dw	65535	; errata NOP
  6032  002E60                     __end_of_Twister:
  6033                           	callstack 0
  6034                           
  6035 ;; *************** function _ms_delay *****************
  6036 ;; Defined at:
  6037 ;;		line 562 in file "main.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  val             2    9[COMRAM] unsigned int 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;  j               2   13[COMRAM] unsigned int 
  6042 ;;  i               2   11[COMRAM] unsigned int 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6052 ;;      Params:         2       0       0       0       0       0       0
  6053 ;;      Locals:         4       0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0
  6055 ;;      Totals:         6       0       0       0       0       0       0
  6056 ;;Total ram usage:        6 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 2
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_X_axis
  6063 ;;		_Y_axis
  6064 ;;		_Z_axis
  6065 ;;		_Twister
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text17
  6070  003234                     __ptext17:
  6071                           	callstack 0
  6072  003234                     _ms_delay:
  6073                           	callstack 0
  6074  003234  FFFF               	dw	65535	; assembler added errata NOP
  6075  003236                     
  6076                           ;main.c: 562: void ms_delay(unsigned int val);main.c: 563: {;main.c: 564:      unsigned 
      +                          int i,j;;main.c: 565:         for(i=0;i<val;i++);
  6077  003236  0E00               	movlw	0
  6078  003238  6E0D               	movwf	(ms_delay@i+1)^0,c
  6079  00323A  0E00               	movlw	0
  6080  00323C  6E0C               	movwf	ms_delay@i^0,c
  6081  00323E  EF24  F019         	goto	l2859
  6082  003242                     l2857:
  6083  003242  FFFF               	dw	65535	; assembler added errata NOP
  6084  003244  4A0C               	infsnz	ms_delay@i^0,f,c
  6085  003246  2A0D               	incf	(ms_delay@i+1)^0,f,c
  6086  003248                     l2859:
  6087  003248  FFFF               	dw	65535	; assembler added errata NOP
  6088  00324A  500A               	movf	ms_delay@val^0,w,c
  6089  00324C  5C0C               	subwf	ms_delay@i^0,w,c
  6090  00324E  500B               	movf	(ms_delay@val+1)^0,w,c
  6091  003250  580D               	subwfb	(ms_delay@i+1)^0,w,c
  6092  003252  A0D8               	btfss	status,0,c
  6093  003254  EF2E  F019         	goto	u2561
  6094  003258  EF31  F019         	goto	u2560
  6095  00325C                     u2561:
  6096  00325C  FFFF               	dw	65535	; assembler added errata NOP
  6097  00325E  EF21  F019         	goto	l2857
  6098  003262                     u2560:
  6099  003262  FFFF               	dw	65535	; assembler added errata NOP
  6100  003264                     
  6101                           ;main.c: 566:         for(j=0;j<1650;j++);
  6102  003264  0E00               	movlw	0
  6103  003266  6E0F               	movwf	(ms_delay@j+1)^0,c
  6104  003268  0E00               	movlw	0
  6105  00326A  6E0E               	movwf	ms_delay@j^0,c
  6106  00326C                     l2867:
  6107  00326C  FFFF               	dw	65535	; assembler added errata NOP
  6108  00326E  4A0E               	infsnz	ms_delay@j^0,f,c
  6109  003270  2A0F               	incf	(ms_delay@j+1)^0,f,c
  6110  003272  0E72               	movlw	114
  6111  003274  5C0E               	subwf	ms_delay@j^0,w,c
  6112  003276  0E06               	movlw	6
  6113  003278  580F               	subwfb	(ms_delay@j+1)^0,w,c
  6114  00327A  A0D8               	btfss	status,0,c
  6115  00327C  EF42  F019         	goto	u2571
  6116  003280  EF45  F019         	goto	u2570
  6117  003284                     u2571:
  6118  003284  FFFF               	dw	65535	; assembler added errata NOP
  6119  003286  EF36  F019         	goto	l2867
  6120  00328A                     u2570:
  6121  00328A  FFFF               	dw	65535	; assembler added errata NOP
  6122  00328C  0012               	return		;funcret
  6123  00328E  FFFF               	dw	65535	; errata NOP
  6124  003290                     __end_of_ms_delay:
  6125                           	callstack 0
  6126                           
  6127 ;; *************** function _Tweezer *****************
  6128 ;; Defined at:
  6129 ;;		line 548 in file "main.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  action          1    wreg     unsigned char 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  action          1    9[COMRAM] unsigned char 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2, status,0
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6143 ;;      Params:         0       0       0       0       0       0       0
  6144 ;;      Locals:         1       0       0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0
  6146 ;;      Totals:         1       0       0       0       0       0       0
  6147 ;;Total ram usage:        1 bytes
  6148 ;; Hardware stack levels used: 1
  6149 ;; Hardware stack levels required when called: 2
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_pick_and_place
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text18
  6158  0030F6                     __ptext18:
  6159                           	callstack 0
  6160  0030F6                     _Tweezer:
  6161                           	callstack 0
  6162  0030F6  FFFF               	dw	65535	; assembler added errata NOP
  6163                           
  6164                           ;incstack = 0
  6165                           ;Tweezer@action stored from wreg
  6166  0030F8  6E0A               	movwf	Tweezer@action^0,c
  6167  0030FA                     
  6168                           ;main.c: 549:         if(action==1 && !stop){
  6169  0030FA  040A               	decf	Tweezer@action^0,w,c
  6170  0030FC  A4D8               	btfss	status,2,c
  6171  0030FE  EF83  F018         	goto	u3321
  6172  003102  EF86  F018         	goto	u3320
  6173  003106                     u3321:
  6174  003106  FFFF               	dw	65535	; assembler added errata NOP
  6175  003108  EF95  F018         	goto	l358
  6176  00310C                     u3320:
  6177  00310C  FFFF               	dw	65535	; assembler added errata NOP
  6178  00310E  506A               	movf	_stop^0,w,c
  6179  003110  A4D8               	btfss	status,2,c
  6180  003112  EF8D  F018         	goto	u3331
  6181  003116  EF90  F018         	goto	u3330
  6182  00311A                     u3331:
  6183  00311A  FFFF               	dw	65535	; assembler added errata NOP
  6184  00311C  EF95  F018         	goto	l358
  6185  003120                     u3330:
  6186  003120  FFFF               	dw	65535	; assembler added errata NOP
  6187  003122                     
  6188                           ;main.c: 550:             new_TMR1H = 0xF9;
  6189  003122  0EF9               	movlw	249
  6190  003124  6E6D               	movwf	_new_TMR1H@main$F824^0,c
  6191                           
  6192                           ;main.c: 551:             new_TMR1L = 0x53;
  6193  003126  0E53               	movlw	83
  6194  003128  6E6C               	movwf	_new_TMR1L@main$F825^0,c
  6195  00312A                     l358:
  6196  00312A  FFFF               	dw	65535	; assembler added errata NOP
  6197                           
  6198                           ;main.c: 554:         if(action == 0 && !stop){
  6199  00312C  500A               	movf	Tweezer@action^0,w,c
  6200  00312E  A4D8               	btfss	status,2,c
  6201  003130  EF9C  F018         	goto	u3341
  6202  003134  EF9F  F018         	goto	u3340
  6203  003138                     u3341:
  6204  003138  FFFF               	dw	65535	; assembler added errata NOP
  6205  00313A  EFAE  F018         	goto	l3353
  6206  00313E                     u3340:
  6207  00313E  FFFF               	dw	65535	; assembler added errata NOP
  6208  003140  506A               	movf	_stop^0,w,c
  6209  003142  A4D8               	btfss	status,2,c
  6210  003144  EFA6  F018         	goto	u3351
  6211  003148  EFA9  F018         	goto	u3350
  6212  00314C                     u3351:
  6213  00314C  FFFF               	dw	65535	; assembler added errata NOP
  6214  00314E  EFAE  F018         	goto	l3353
  6215  003152                     u3350:
  6216  003152  FFFF               	dw	65535	; assembler added errata NOP
  6217  003154                     
  6218                           ;main.c: 555:             new_TMR1H= 0xFA;
  6219  003154  0EFA               	movlw	250
  6220  003156  6E6D               	movwf	_new_TMR1H@main$F824^0,c
  6221                           
  6222                           ;main.c: 556:             new_TMR1L= 0x60;
  6223  003158  0E60               	movlw	96
  6224  00315A  6E6C               	movwf	_new_TMR1L@main$F825^0,c
  6225  00315C                     l3353:
  6226  00315C  FFFF               	dw	65535	; assembler added errata NOP
  6227                           
  6228                           ;main.c: 558:         LATCbits.LC2=1;
  6229  00315E  848B               	bsf	139,2,c	;volatile
  6230  003160                     
  6231                           ;main.c: 559:         T1CONbits.TMR1ON=1;
  6232  003160  80CD               	bsf	205,0,c	;volatile
  6233  003162  0012               	return		;funcret
  6234  003164  FFFF               	dw	65535	; errata NOP
  6235  003166                     __end_of_Tweezer:
  6236                           	callstack 0
  6237                           
  6238 ;; *************** function _change_sequence *****************
  6239 ;; Defined at:
  6240 ;;		line 280 in file "main.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;		None
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  i               2   18[COMRAM] int 
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  1    wreg      void 
  6247 ;; Registers used:
  6248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6254 ;;      Params:         0       0       0       0       0       0       0
  6255 ;;      Locals:         2       0       0       0       0       0       0
  6256 ;;      Temps:          3       0       0       0       0       0       0
  6257 ;;      Totals:         5       0       0       0       0       0       0
  6258 ;;Total ram usage:        5 bytes
  6259 ;; Hardware stack levels used: 1
  6260 ;; Hardware stack levels required when called: 3
  6261 ;; This function calls:
  6262 ;;		_print_string
  6263 ;; This function is called by:
  6264 ;;		_start_up_menu
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text19
  6269  002FDC                     __ptext19:
  6270                           	callstack 0
  6271  002FDC                     _change_sequence:
  6272                           	callstack 0
  6273  002FDC  FFFF               	dw	65535	; assembler added errata NOP
  6274  002FDE                     
  6275                           ;main.c: 281:     print_string("\nThe current sequence is: ");
  6276  002FDE  0E4D               	movlw	low STR_3
  6277  002FE0  6E0A               	movwf	print_string@strng^0,c
  6278  002FE2  0E7F               	movlw	high STR_3
  6279  002FE4  6E0B               	movwf	(print_string@strng+1)^0,c
  6280  002FE6  EC9E  F017         	call	_print_string	;wreg free
  6281                           
  6282                           ;main.c: 282:     print_string(sequence);
  6283  002FEA  0EF0               	movlw	low _sequence
  6284  002FEC  6E0A               	movwf	print_string@strng^0,c
  6285  002FEE  0E00               	movlw	high _sequence
  6286  002FF0  6E0B               	movwf	(print_string@strng+1)^0,c
  6287  002FF2  EC9E  F017         	call	_print_string	;wreg free
  6288                           
  6289                           ;main.c: 283:     print_string("\nPlease give the new sequence as input\r");
  6290  002FF6  0E78               	movlw	low STR_4
  6291  002FF8  6E0A               	movwf	print_string@strng^0,c
  6292  002FFA  0E7E               	movlw	high STR_4
  6293  002FFC  6E0B               	movwf	(print_string@strng+1)^0,c
  6294  002FFE  EC9E  F017         	call	_print_string	;wreg free
  6295  003002                     
  6296                           ;main.c: 284:     int i = 0;
  6297  003002  0E00               	movlw	0
  6298  003004  6E14               	movwf	(change_sequence@i+1)^0,c
  6299  003006  0E00               	movlw	0
  6300  003008  6E13               	movwf	change_sequence@i^0,c
  6301  00300A                     l3995:
  6302  00300A  FFFF               	dw	65535	; assembler added errata NOP
  6303                           
  6304                           ;main.c: 286:         if(New_char_RX){
  6305  00300C  5070               	movf	_New_char_RX^0,w,c
  6306  00300E  B4D8               	btfsc	status,2,c
  6307  003010  EF0C  F018         	goto	u4571
  6308  003014  EF0F  F018         	goto	u4570
  6309  003018                     u4571:
  6310  003018  FFFF               	dw	65535	; assembler added errata NOP
  6311  00301A  EF05  F018         	goto	l3995
  6312  00301E                     u4570:
  6313  00301E  FFFF               	dw	65535	; assembler added errata NOP
  6314  003020                     l3997:
  6315  003020  FFFF               	dw	65535	; assembler added errata NOP
  6316                           
  6317                           ;main.c: 288:                 sequence[i]=input_str[i];
  6318  003022  0EE6               	movlw	low _input_str
  6319  003024  2413               	addwf	change_sequence@i^0,w,c
  6320  003026  6ED9               	movwf	fsr2l,c
  6321  003028  0E00               	movlw	high _input_str
  6322  00302A  2014               	addwfc	(change_sequence@i+1)^0,w,c
  6323  00302C  6EDA               	movwf	fsr2h,c
  6324  00302E  0EF0               	movlw	low _sequence
  6325  003030  2413               	addwf	change_sequence@i^0,w,c
  6326  003032  6EE1               	movwf	fsr1l,c
  6327  003034  0E00               	movlw	high _sequence
  6328  003036  2014               	addwfc	(change_sequence@i+1)^0,w,c
  6329  003038  6EE2               	movwf	fsr1h,c
  6330  00303A  CFDF FFE7          	movff	indf2,indf1
  6331  00303E                     
  6332                           ;main.c: 289:             }while(input_str[i++]!='\n');
  6333  00303E  5013               	movf	change_sequence@i^0,w,c
  6334  003040  6E10               	movwf	??_change_sequence^0,c
  6335  003042  5014               	movf	(change_sequence@i+1)^0,w,c
  6336  003044  6E11               	movwf	(??_change_sequence+1)^0,c
  6337  003046  4A13               	infsnz	change_sequence@i^0,f,c
  6338  003048  2A14               	incf	(change_sequence@i+1)^0,f,c
  6339  00304A  0EE6               	movlw	low _input_str
  6340  00304C  2410               	addwf	??_change_sequence^0,w,c
  6341  00304E  6ED9               	movwf	fsr2l,c
  6342  003050  0E00               	movlw	high _input_str
  6343  003052  2011               	addwfc	(??_change_sequence+1)^0,w,c
  6344  003054  6EDA               	movwf	fsr2h,c
  6345  003056  0E0A               	movlw	10
  6346  003058  18DE               	xorwf	postinc2,w,c
  6347  00305A  A4D8               	btfss	status,2,c
  6348  00305C  EF32  F018         	goto	u4581
  6349  003060  EF35  F018         	goto	u4580
  6350  003064                     u4581:
  6351  003064  FFFF               	dw	65535	; assembler added errata NOP
  6352  003066  EF10  F018         	goto	l3997
  6353  00306A                     u4580:
  6354  00306A  FFFF               	dw	65535	; assembler added errata NOP
  6355  00306C                     
  6356                           ;main.c: 290:             New_char_RX=0;
  6357  00306C  0E00               	movlw	0
  6358  00306E  6E70               	movwf	_New_char_RX^0,c
  6359  003070  0012               	return		;funcret
  6360  003072  FFFF               	dw	65535	; errata NOP
  6361  003074                     __end_of_change_sequence:
  6362                           	callstack 0
  6363                           
  6364 ;; *************** function _add_component *****************
  6365 ;; Defined at:
  6366 ;;		line 296 in file "main.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;		None
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  add_componnt    2   31[COMRAM] unsigned char [2]
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  1    wreg      void 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6380 ;;      Params:         0       0       0       0       0       0       0
  6381 ;;      Locals:         2       0       0       0       0       0       0
  6382 ;;      Temps:          0       0       0       0       0       0       0
  6383 ;;      Totals:         2       0       0       0       0       0       0
  6384 ;;Total ram usage:        2 bytes
  6385 ;; Hardware stack levels used: 1
  6386 ;; Hardware stack levels required when called: 4
  6387 ;; This function calls:
  6388 ;;		_atoi
  6389 ;;		_print_string
  6390 ;;		_strcat
  6391 ;; This function is called by:
  6392 ;;		_start_up_menu
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text20
  6397  001E24                     __ptext20:
  6398                           	callstack 0
  6399  001E24                     _add_component:
  6400                           	callstack 0
  6401  001E24  FFFF               	dw	65535	; assembler added errata NOP
  6402  001E26                     
  6403                           ;main.c: 297:     char add_componnt[]=" ";
  6404  001E26  C0DF  F020         	movff	add_component@F3143,add_component@add_componnt
  6405  001E2A  C0E0  F021         	movff	add_component@F3143+1,add_component@add_componnt+1
  6406  001E2E                     
  6407                           ;main.c: 298:     print_string("\n\nThe Current sequence is:");
  6408  001E2E  0E68               	movlw	low STR_5
  6409  001E30  6E0A               	movwf	print_string@strng^0,c
  6410  001E32  0E7F               	movlw	high STR_5
  6411  001E34  6E0B               	movwf	(print_string@strng+1)^0,c
  6412  001E36  EC9E  F017         	call	_print_string	;wreg free
  6413                           
  6414                           ;main.c: 299:     print_string(sequence);
  6415  001E3A  0EF0               	movlw	low _sequence
  6416  001E3C  6E0A               	movwf	print_string@strng^0,c
  6417  001E3E  0E00               	movlw	high _sequence
  6418  001E40  6E0B               	movwf	(print_string@strng+1)^0,c
  6419  001E42  EC9E  F017         	call	_print_string	;wreg free
  6420                           
  6421                           ;main.c: 300:     print_string("\nEnter the component you want to add: A, B, C or D?");
  6422  001E46  0E44               	movlw	low STR_6
  6423  001E48  6E0A               	movwf	print_string@strng^0,c
  6424  001E4A  0E7E               	movlw	high STR_6
  6425  001E4C  6E0B               	movwf	(print_string@strng+1)^0,c
  6426  001E4E  EC9E  F017         	call	_print_string	;wreg free
  6427  001E52                     l4007:
  6428  001E52  FFFF               	dw	65535	; assembler added errata NOP
  6429                           
  6430                           ;main.c: 302:         if(New_char_RX){
  6431  001E54  5070               	movf	_New_char_RX^0,w,c
  6432  001E56  B4D8               	btfsc	status,2,c
  6433  001E58  EF30  F00F         	goto	u4591
  6434  001E5C  EF33  F00F         	goto	u4590
  6435  001E60                     u4591:
  6436  001E60  FFFF               	dw	65535	; assembler added errata NOP
  6437  001E62  EF29  F00F         	goto	l4007
  6438  001E66                     u4590:
  6439  001E66  FFFF               	dw	65535	; assembler added errata NOP
  6440  001E68                     
  6441                           ;main.c: 303:             add_componnt[0]=input_str[0];
  6442  001E68  C0E6  F020         	movff	_input_str,add_component@add_componnt	;volatile
  6443  001E6C                     
  6444                           ;main.c: 304:             if(add_componnt[0]=='D'){
  6445  001E6C  0E44               	movlw	68
  6446  001E6E  1820               	xorwf	add_component@add_componnt^0,w,c
  6447  001E70  A4D8               	btfss	status,2,c
  6448  001E72  EF3D  F00F         	goto	u4601
  6449  001E76  EF40  F00F         	goto	u4600
  6450  001E7A                     u4601:
  6451  001E7A  FFFF               	dw	65535	; assembler added errata NOP
  6452  001E7C  EFEF  F00F         	goto	l4061
  6453  001E80                     u4600:
  6454  001E80  FFFF               	dw	65535	; assembler added errata NOP
  6455  001E82                     
  6456                           ;main.c: 305:                 New_char_RX=0;
  6457  001E82  0E00               	movlw	0
  6458  001E84  6E70               	movwf	_New_char_RX^0,c
  6459  001E86                     
  6460                           ;main.c: 306:                 print_string("\nEnter the pick position X:");
  6461  001E86  0E15               	movlw	low STR_7
  6462  001E88  6E0A               	movwf	print_string@strng^0,c
  6463  001E8A  0E7F               	movlw	high STR_7
  6464  001E8C  6E0B               	movwf	(print_string@strng+1)^0,c
  6465  001E8E  EC9E  F017         	call	_print_string	;wreg free
  6466  001E92                     l4017:
  6467  001E92  FFFF               	dw	65535	; assembler added errata NOP
  6468                           
  6469                           ;main.c: 308:                     if(New_char_RX){
  6470  001E94  5070               	movf	_New_char_RX^0,w,c
  6471  001E96  B4D8               	btfsc	status,2,c
  6472  001E98  EF50  F00F         	goto	u4611
  6473  001E9C  EF53  F00F         	goto	u4610
  6474  001EA0                     u4611:
  6475  001EA0  FFFF               	dw	65535	; assembler added errata NOP
  6476  001EA2  EF49  F00F         	goto	l4017
  6477  001EA6                     u4610:
  6478  001EA6  FFFF               	dw	65535	; assembler added errata NOP
  6479  001EA8                     
  6480                           ;main.c: 309:                         X_Pick_D=atoi(input_str);
  6481  001EA8  0EE6               	movlw	low _input_str
  6482  001EAA  6E11               	movwf	atoi@s^0,c
  6483  001EAC  0E00               	movlw	high _input_str
  6484  001EAE  6E12               	movwf	(atoi@s+1)^0,c
  6485  001EB0  EC0E  F010         	call	_atoi	;wreg free
  6486  001EB4  C011  F090         	movff	?_atoi,_X_Pick_D
  6487  001EB8  C012  F091         	movff	?_atoi+1,_X_Pick_D+1
  6488  001EBC                     
  6489                           ;main.c: 310:                         New_char_RX=0;
  6490  001EBC  0E00               	movlw	0
  6491  001EBE  6E70               	movwf	_New_char_RX^0,c
  6492  001EC0                     
  6493                           ;main.c: 314:                 print_string("\nEnter the pick position Y:");
  6494  001EC0  0E31               	movlw	low STR_8
  6495  001EC2  6E0A               	movwf	print_string@strng^0,c
  6496  001EC4  0E7F               	movlw	high STR_8
  6497  001EC6  6E0B               	movwf	(print_string@strng+1)^0,c
  6498  001EC8  EC9E  F017         	call	_print_string	;wreg free
  6499  001ECC                     l4025:
  6500  001ECC  FFFF               	dw	65535	; assembler added errata NOP
  6501                           
  6502                           ;main.c: 316:                     if(New_char_RX){
  6503  001ECE  5070               	movf	_New_char_RX^0,w,c
  6504  001ED0  B4D8               	btfsc	status,2,c
  6505  001ED2  EF6D  F00F         	goto	u4621
  6506  001ED6  EF70  F00F         	goto	u4620
  6507  001EDA                     u4621:
  6508  001EDA  FFFF               	dw	65535	; assembler added errata NOP
  6509  001EDC  EF66  F00F         	goto	l4025
  6510  001EE0                     u4620:
  6511  001EE0  FFFF               	dw	65535	; assembler added errata NOP
  6512  001EE2                     
  6513                           ;main.c: 317:                         Y_Pick_D=(atoi(input_str));
  6514  001EE2  0EE6               	movlw	low _input_str
  6515  001EE4  6E11               	movwf	atoi@s^0,c
  6516  001EE6  0E00               	movlw	high _input_str
  6517  001EE8  6E12               	movwf	(atoi@s+1)^0,c
  6518  001EEA  EC0E  F010         	call	_atoi	;wreg free
  6519  001EEE  C011  F08E         	movff	?_atoi,_Y_Pick_D
  6520  001EF2  C012  F08F         	movff	?_atoi+1,_Y_Pick_D+1
  6521  001EF6                     
  6522                           ;main.c: 318:                         New_char_RX=0;
  6523  001EF6  0E00               	movlw	0
  6524  001EF8  6E70               	movwf	_New_char_RX^0,c
  6525  001EFA                     
  6526                           ;main.c: 322:                 print_string("\nEnter the pick orientation:");
  6527  001EFA  0EF8               	movlw	low STR_9
  6528  001EFC  6E0A               	movwf	print_string@strng^0,c
  6529  001EFE  0E7E               	movlw	high STR_9
  6530  001F00  6E0B               	movwf	(print_string@strng+1)^0,c
  6531  001F02  EC9E  F017         	call	_print_string	;wreg free
  6532  001F06                     l4033:
  6533  001F06  FFFF               	dw	65535	; assembler added errata NOP
  6534                           
  6535                           ;main.c: 324:                     if(New_char_RX){
  6536  001F08  5070               	movf	_New_char_RX^0,w,c
  6537  001F0A  B4D8               	btfsc	status,2,c
  6538  001F0C  EF8A  F00F         	goto	u4631
  6539  001F10  EF8D  F00F         	goto	u4630
  6540  001F14                     u4631:
  6541  001F14  FFFF               	dw	65535	; assembler added errata NOP
  6542  001F16  EF83  F00F         	goto	l4033
  6543  001F1A                     u4630:
  6544  001F1A  FFFF               	dw	65535	; assembler added errata NOP
  6545  001F1C                     
  6546                           ;main.c: 325:                         Pick_Angle_D=(atoi(input_str));
  6547  001F1C  0EE6               	movlw	low _input_str
  6548  001F1E  6E11               	movwf	atoi@s^0,c
  6549  001F20  0E00               	movlw	high _input_str
  6550  001F22  6E12               	movwf	(atoi@s+1)^0,c
  6551  001F24  EC0E  F010         	call	_atoi	;wreg free
  6552  001F28  C011  F08C         	movff	?_atoi,_Pick_Angle_D
  6553  001F2C  C012  F08D         	movff	?_atoi+1,_Pick_Angle_D+1
  6554  001F30                     
  6555                           ;main.c: 326:                         New_char_RX=0;
  6556  001F30  0E00               	movlw	0
  6557  001F32  6E70               	movwf	_New_char_RX^0,c
  6558  001F34                     
  6559                           ;main.c: 330:                 print_string("\nEnter the place position X:");
  6560  001F34  0EBE               	movlw	low STR_10
  6561  001F36  6E0A               	movwf	print_string@strng^0,c
  6562  001F38  0E7E               	movlw	high STR_10
  6563  001F3A  6E0B               	movwf	(print_string@strng+1)^0,c
  6564  001F3C  EC9E  F017         	call	_print_string	;wreg free
  6565  001F40                     l4041:
  6566  001F40  FFFF               	dw	65535	; assembler added errata NOP
  6567                           
  6568                           ;main.c: 332:                     if(New_char_RX){
  6569  001F42  5070               	movf	_New_char_RX^0,w,c
  6570  001F44  B4D8               	btfsc	status,2,c
  6571  001F46  EFA7  F00F         	goto	u4641
  6572  001F4A  EFAA  F00F         	goto	u4640
  6573  001F4E                     u4641:
  6574  001F4E  FFFF               	dw	65535	; assembler added errata NOP
  6575  001F50  EFA0  F00F         	goto	l4041
  6576  001F54                     u4640:
  6577  001F54  FFFF               	dw	65535	; assembler added errata NOP
  6578  001F56                     
  6579                           ;main.c: 333:                         X_Place_D=(atoi(input_str));
  6580  001F56  0EE6               	movlw	low _input_str
  6581  001F58  6E11               	movwf	atoi@s^0,c
  6582  001F5A  0E00               	movlw	high _input_str
  6583  001F5C  6E12               	movwf	(atoi@s+1)^0,c
  6584  001F5E  EC0E  F010         	call	_atoi	;wreg free
  6585  001F62  C011  F08A         	movff	?_atoi,_X_Place_D
  6586  001F66  C012  F08B         	movff	?_atoi+1,_X_Place_D+1
  6587  001F6A                     
  6588                           ;main.c: 334:                         New_char_RX=0;
  6589  001F6A  0E00               	movlw	0
  6590  001F6C  6E70               	movwf	_New_char_RX^0,c
  6591  001F6E                     
  6592                           ;main.c: 338:                 print_string("\nEnter the place position Y:");
  6593  001F6E  0EDB               	movlw	low STR_11
  6594  001F70  6E0A               	movwf	print_string@strng^0,c
  6595  001F72  0E7E               	movlw	high STR_11
  6596  001F74  6E0B               	movwf	(print_string@strng+1)^0,c
  6597  001F76  EC9E  F017         	call	_print_string	;wreg free
  6598  001F7A                     l4049:
  6599  001F7A  FFFF               	dw	65535	; assembler added errata NOP
  6600                           
  6601                           ;main.c: 340:                     if(New_char_RX){
  6602  001F7C  5070               	movf	_New_char_RX^0,w,c
  6603  001F7E  B4D8               	btfsc	status,2,c
  6604  001F80  EFC4  F00F         	goto	u4651
  6605  001F84  EFC7  F00F         	goto	u4650
  6606  001F88                     u4651:
  6607  001F88  FFFF               	dw	65535	; assembler added errata NOP
  6608  001F8A  EFBD  F00F         	goto	l4049
  6609  001F8E                     u4650:
  6610  001F8E  FFFF               	dw	65535	; assembler added errata NOP
  6611  001F90                     
  6612                           ;main.c: 341:                         Y_Place_D=(atoi(input_str));
  6613  001F90  0EE6               	movlw	low _input_str
  6614  001F92  6E11               	movwf	atoi@s^0,c
  6615  001F94  0E00               	movlw	high _input_str
  6616  001F96  6E12               	movwf	(atoi@s+1)^0,c
  6617  001F98  EC0E  F010         	call	_atoi	;wreg free
  6618  001F9C  C011  F088         	movff	?_atoi,_Y_Place_D
  6619  001FA0  C012  F089         	movff	?_atoi+1,_Y_Place_D+1
  6620  001FA4                     
  6621                           ;main.c: 342:                         New_char_RX=0;
  6622  001FA4  0E00               	movlw	0
  6623  001FA6  6E70               	movwf	_New_char_RX^0,c
  6624  001FA8                     
  6625                           ;main.c: 346:                 print_string("\nEnter the place orientation:");
  6626  001FA8  0EA0               	movlw	low STR_12
  6627  001FAA  6E0A               	movwf	print_string@strng^0,c
  6628  001FAC  0E7E               	movlw	high STR_12
  6629  001FAE  6E0B               	movwf	(print_string@strng+1)^0,c
  6630  001FB0  EC9E  F017         	call	_print_string	;wreg free
  6631  001FB4                     l4057:
  6632  001FB4  FFFF               	dw	65535	; assembler added errata NOP
  6633                           
  6634                           ;main.c: 348:                         if(New_char_RX){
  6635  001FB6  5070               	movf	_New_char_RX^0,w,c
  6636  001FB8  B4D8               	btfsc	status,2,c
  6637  001FBA  EFE1  F00F         	goto	u4661
  6638  001FBE  EFE4  F00F         	goto	u4660
  6639  001FC2                     u4661:
  6640  001FC2  FFFF               	dw	65535	; assembler added errata NOP
  6641  001FC4  EFDA  F00F         	goto	l4057
  6642  001FC8                     u4660:
  6643  001FC8  FFFF               	dw	65535	; assembler added errata NOP
  6644  001FCA                     
  6645                           ;main.c: 349:                         Place_Angle_D=(atoi(input_str));
  6646  001FCA  0EE6               	movlw	low _input_str
  6647  001FCC  6E11               	movwf	atoi@s^0,c
  6648  001FCE  0E00               	movlw	high _input_str
  6649  001FD0  6E12               	movwf	(atoi@s+1)^0,c
  6650  001FD2  EC0E  F010         	call	_atoi	;wreg free
  6651  001FD6  C011  F086         	movff	?_atoi,_Place_Angle_D
  6652  001FDA  C012  F087         	movff	?_atoi+1,_Place_Angle_D+1
  6653  001FDE                     l4061:
  6654  001FDE  FFFF               	dw	65535	; assembler added errata NOP
  6655                           
  6656                           ;main.c: 350:                         New_char_RX=0;
  6657  001FE0  0E00               	movlw	0
  6658  001FE2  6E70               	movwf	_New_char_RX^0,c
  6659  001FE4                     
  6660                           ;main.c: 362:     State='0';
  6661  001FE4  0E30               	movlw	48
  6662  001FE6  6E6E               	movwf	_State^0,c
  6663  001FE8                     
  6664                           ;main.c: 363:     strcat(sequence,add_componnt);
  6665  001FE8  0EF0               	movlw	low _sequence
  6666  001FEA  6E16               	movwf	strcat@dest^0,c
  6667  001FEC  0E00               	movlw	high _sequence
  6668  001FEE  6E17               	movwf	(strcat@dest+1)^0,c
  6669  001FF0  0E20               	movlw	low add_component@add_componnt
  6670  001FF2  6E18               	movwf	strcat@src^0,c
  6671  001FF4  0E00               	movlw	high add_component@add_componnt
  6672  001FF6  6E19               	movwf	(strcat@src+1)^0,c
  6673  001FF8  EC47  F01A         	call	_strcat	;wreg free
  6674  001FFC                     
  6675                           ;main.c: 364:     print_string("\n\nComponent Added: ");
  6676  001FFC  0E98               	movlw	low STR_13
  6677  001FFE  6E0A               	movwf	print_string@strng^0,c
  6678  002000  0E7F               	movlw	high STR_13
  6679  002002  6E0B               	movwf	(print_string@strng+1)^0,c
  6680  002004  EC9E  F017         	call	_print_string	;wreg free
  6681  002008                     
  6682                           ;main.c: 365:     print_string(add_componnt);
  6683  002008  0E20               	movlw	low add_component@add_componnt
  6684  00200A  6E0A               	movwf	print_string@strng^0,c
  6685  00200C  0E00               	movlw	high add_component@add_componnt
  6686  00200E  6E0B               	movwf	(print_string@strng+1)^0,c
  6687  002010  EC9E  F017         	call	_print_string	;wreg free
  6688  002014                     
  6689                           ;main.c: 366:     New_char_RX=0;
  6690  002014  0E00               	movlw	0
  6691  002016  6E70               	movwf	_New_char_RX^0,c
  6692  002018  0012               	return		;funcret
  6693  00201A  FFFF               	dw	65535	; errata NOP
  6694  00201C                     __end_of_add_component:
  6695                           	callstack 0
  6696                           
  6697 ;; *************** function _strcat *****************
  6698 ;; Defined at:
  6699 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strcat.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  dest            2   21[COMRAM] PTR unsigned char 
  6702 ;;		 -> sequence(4), 
  6703 ;;  src             2   23[COMRAM] PTR const unsigned char 
  6704 ;;		 -> add_component@add_componnt(2), 
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;		None
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  2   21[COMRAM] PTR unsigned char 
  6709 ;; Registers used:
  6710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6716 ;;      Params:         4       0       0       0       0       0       0
  6717 ;;      Locals:         0       0       0       0       0       0       0
  6718 ;;      Temps:          0       0       0       0       0       0       0
  6719 ;;      Totals:         4       0       0       0       0       0       0
  6720 ;;Total ram usage:        4 bytes
  6721 ;; Hardware stack levels used: 1
  6722 ;; Hardware stack levels required when called: 3
  6723 ;; This function calls:
  6724 ;;		_strcpy
  6725 ;;		_strlen
  6726 ;; This function is called by:
  6727 ;;		_add_component
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text21
  6732  00348E                     __ptext21:
  6733                           	callstack 0
  6734  00348E                     _strcat:
  6735                           	callstack 0
  6736  00348E  FFFF               	dw	65535	; assembler added errata NOP
  6737  003490  C016  F00A         	movff	strcat@dest,strlen@s
  6738  003494  C017  F00B         	movff	strcat@dest+1,strlen@s+1
  6739  003498  EC91  F019         	call	_strlen	;wreg free
  6740  00349C  500A               	movf	?_strlen^0,w,c
  6741  00349E  2416               	addwf	strcat@dest^0,w,c
  6742  0034A0  6E0E               	movwf	strcpy@dest^0,c
  6743  0034A2  500B               	movf	(?_strlen+1)^0,w,c
  6744  0034A4  2017               	addwfc	(strcat@dest+1)^0,w,c
  6745  0034A6  6E0F               	movwf	(strcpy@dest+1)^0,c
  6746  0034A8  C018  F010         	movff	strcat@src,strcpy@src
  6747  0034AC  C019  F011         	movff	strcat@src+1,strcpy@src+1
  6748  0034B0  EC6D  F019         	call	_strcpy	;wreg free
  6749  0034B4  0012               	return		;funcret
  6750  0034B6  FFFF               	dw	65535	; errata NOP
  6751  0034B8                     __end_of_strcat:
  6752                           	callstack 0
  6753                           
  6754 ;; *************** function _strlen *****************
  6755 ;; Defined at:
  6756 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6759 ;;		 -> sequence(4), 
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;  a               2   11[COMRAM] PTR const unsigned char 
  6762 ;;		 -> sequence(4), 
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  2    9[COMRAM] unsigned int 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6772 ;;      Params:         2       0       0       0       0       0       0
  6773 ;;      Locals:         2       0       0       0       0       0       0
  6774 ;;      Temps:          0       0       0       0       0       0       0
  6775 ;;      Totals:         4       0       0       0       0       0       0
  6776 ;;Total ram usage:        4 bytes
  6777 ;; Hardware stack levels used: 1
  6778 ;; Hardware stack levels required when called: 2
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_start_up_menu
  6783 ;;		_remove_component
  6784 ;;		_strcat
  6785 ;;		_strrchr
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text22
  6790  003322                     __ptext22:
  6791                           	callstack 0
  6792  003322                     _strlen:
  6793                           	callstack 0
  6794  003322  FFFF               	dw	65535	; assembler added errata NOP
  6795  003324  C00A  F00C         	movff	strlen@s,strlen@a
  6796  003328  C00B  F00D         	movff	strlen@s+1,strlen@a+1
  6797  00332C  EF9B  F019         	goto	l2849
  6798  003330                     l2847:
  6799  003330  FFFF               	dw	65535	; assembler added errata NOP
  6800  003332  4A0A               	infsnz	strlen@s^0,f,c
  6801  003334  2A0B               	incf	(strlen@s+1)^0,f,c
  6802  003336                     l2849:
  6803  003336  FFFF               	dw	65535	; assembler added errata NOP
  6804  003338  C00A  FFD9         	movff	strlen@s,fsr2l
  6805  00333C  C00B  FFDA         	movff	strlen@s+1,fsr2h
  6806  003340  50DF               	movf	indf2,w,c
  6807  003342  A4D8               	btfss	status,2,c
  6808  003344  EFA6  F019         	goto	u2551
  6809  003348  EFA9  F019         	goto	u2550
  6810  00334C                     u2551:
  6811  00334C  FFFF               	dw	65535	; assembler added errata NOP
  6812  00334E  EF98  F019         	goto	l2847
  6813  003352                     u2550:
  6814  003352  FFFF               	dw	65535	; assembler added errata NOP
  6815  003354  500C               	movf	strlen@a^0,w,c
  6816  003356  5C0A               	subwf	strlen@s^0,w,c
  6817  003358  6E0A               	movwf	?_strlen^0,c
  6818  00335A  500D               	movf	(strlen@a+1)^0,w,c
  6819  00335C  580B               	subwfb	(strlen@s+1)^0,w,c
  6820  00335E  6E0B               	movwf	(?_strlen+1)^0,c
  6821  003360  0012               	return		;funcret
  6822  003362  FFFF               	dw	65535	; errata NOP
  6823  003364                     __end_of_strlen:
  6824                           	callstack 0
  6825                           
  6826 ;; *************** function _strcpy *****************
  6827 ;; Defined at:
  6828 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strcpy.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  dest            2   13[COMRAM] PTR unsigned char 
  6831 ;;		 -> sequence(4), 
  6832 ;;  src             2   15[COMRAM] PTR const unsigned char 
  6833 ;;		 -> add_component@add_componnt(2), 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;  d               2   19[COMRAM] PTR unsigned char 
  6836 ;;		 -> sequence(4), 
  6837 ;;  s               2   17[COMRAM] PTR const unsigned char 
  6838 ;;		 -> add_component@add_componnt(2), 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  2   13[COMRAM] PTR unsigned char 
  6841 ;; Registers used:
  6842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6848 ;;      Params:         4       0       0       0       0       0       0
  6849 ;;      Locals:         4       0       0       0       0       0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0
  6851 ;;      Totals:         8       0       0       0       0       0       0
  6852 ;;Total ram usage:        8 bytes
  6853 ;; Hardware stack levels used: 1
  6854 ;; Hardware stack levels required when called: 2
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_strcat
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text23
  6863  0032DA                     __ptext23:
  6864                           	callstack 0
  6865  0032DA                     _strcpy:
  6866                           	callstack 0
  6867  0032DA  FFFF               	dw	65535	; assembler added errata NOP
  6868  0032DC  C010  F012         	movff	strcpy@src,strcpy@s
  6869  0032E0  C011  F013         	movff	strcpy@src+1,strcpy@s+1
  6870  0032E4  C00E  F014         	movff	strcpy@dest,strcpy@d
  6871  0032E8  C00F  F015         	movff	strcpy@dest+1,strcpy@d+1
  6872  0032EC                     l3097:
  6873  0032EC  FFFF               	dw	65535	; assembler added errata NOP
  6874  0032EE  C012  FFD9         	movff	strcpy@s,fsr2l
  6875  0032F2  C013  FFDA         	movff	strcpy@s+1,fsr2h
  6876  0032F6  4A12               	infsnz	strcpy@s^0,f,c
  6877  0032F8  2A13               	incf	(strcpy@s+1)^0,f,c
  6878  0032FA  C014  FFE1         	movff	strcpy@d,fsr1l
  6879  0032FE  C015  FFE2         	movff	strcpy@d+1,fsr1h
  6880  003302  4A14               	infsnz	strcpy@d^0,f,c
  6881  003304  2A15               	incf	(strcpy@d+1)^0,f,c
  6882  003306  CFDF FFE7          	movff	indf2,indf1
  6883  00330A  50E7               	movf	indf1,w,c
  6884  00330C  A4D8               	btfss	status,2,c
  6885  00330E  EF8B  F019         	goto	u3011
  6886  003312  EF8E  F019         	goto	u3010
  6887  003316                     u3011:
  6888  003316  FFFF               	dw	65535	; assembler added errata NOP
  6889  003318  EF76  F019         	goto	l3097
  6890  00331C                     u3010:
  6891  00331C  FFFF               	dw	65535	; assembler added errata NOP
  6892  00331E  0012               	return		;funcret
  6893  003320  FFFF               	dw	65535	; errata NOP
  6894  003322                     __end_of_strcpy:
  6895                           	callstack 0
  6896                           
  6897 ;; *************** function _print_string *****************
  6898 ;; Defined at:
  6899 ;;		line 44 in file "serial_rs232.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  strng           2    9[COMRAM] PTR unsigned char 
  6902 ;;		 -> STR_20(20), STR_19(20), STR_18(10), STR_17(12), 
  6903 ;;		 -> STR_16(70), STR_15(19), STR_14(63), STR_13(20), 
  6904 ;;		 -> STR_12(30), STR_11(29), STR_10(29), STR_9(29), 
  6905 ;;		 -> STR_8(28), STR_7(28), STR_6(52), STR_5(27), 
  6906 ;;		 -> add_component@add_componnt(2), STR_4(40), STR_3(27), sequence(4), 
  6907 ;;		 -> STR_2(21), STR_1(112), 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;  i               2   13[COMRAM] int 
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6919 ;;      Params:         2       0       0       0       0       0       0
  6920 ;;      Locals:         2       0       0       0       0       0       0
  6921 ;;      Temps:          2       0       0       0       0       0       0
  6922 ;;      Totals:         6       0       0       0       0       0       0
  6923 ;;Total ram usage:        6 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 2
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_start_up_menu
  6930 ;;		_change_sequence
  6931 ;;		_add_component
  6932 ;;		_remove_component
  6933 ;;		_check_component
  6934 ;;		_pick_and_place
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text24
  6939  002F3C                     __ptext24:
  6940                           	callstack 0
  6941  002F3C                     _print_string:
  6942                           	callstack 0
  6943  002F3C  FFFF               	dw	65535	; assembler added errata NOP
  6944  002F3E                     
  6945                           ;serial_rs232.c: 44: void print_string(char strng[]);serial_rs232.c: 45: {;serial_rs232.
      +                          c: 46:     for(int i=0; strng[i]!=((void*)0);i++){
  6946  002F3E  0E00               	movlw	0
  6947  002F40  6E0F               	movwf	(print_string@i+1)^0,c
  6948  002F42  0E00               	movlw	0
  6949  002F44  6E0E               	movwf	print_string@i^0,c
  6950  002F46  EFCA  F017         	goto	l2841
  6951  002F4A                     l2837:
  6952  002F4A  FFFF               	dw	65535	; assembler added errata NOP
  6953                           
  6954                           ;serial_rs232.c: 47:         TXREG=strng[i];
  6955  002F4C  500E               	movf	print_string@i^0,w,c
  6956  002F4E  240A               	addwf	print_string@strng^0,w,c
  6957  002F50  6E0C               	movwf	??_print_string^0,c
  6958  002F52  500F               	movf	(print_string@i+1)^0,w,c
  6959  002F54  200B               	addwfc	(print_string@strng+1)^0,w,c
  6960  002F56  6E0D               	movwf	(??_print_string+1)^0,c
  6961  002F58  C00C  FFF6         	movff	??_print_string,tblptrl
  6962  002F5C  C00D  FFF7         	movff	??_print_string+1,tblptrh
  6963  002F60  6AF8               	clrf	tblptru,c
  6964  002F62  0E05               	movlw	(high __ramtop+-1)
  6965  002F64  64F7               	cpfsgt	tblptrh,c
  6966  002F66  D004               	bra	u2507
  6967  002F68  0008               	tblrd		*
  6968  002F6A  FFFF               	dw	65535	; errata NOP
  6969  002F6C  50F5               	movf	tablat,w,c
  6970  002F6E  D005               	bra	u2500
  6971  002F70                     u2507:
  6972  002F70  CFF6 FFE9          	movff	tblptrl,fsr0l
  6973  002F74  CFF7 FFEA          	movff	tblptrh,fsr0h
  6974  002F78  50EF               	movf	indf0,w,c
  6975  002F7A                     u2500:
  6976  002F7A  6EAD               	movwf	173,c	;volatile
  6977  002F7C                     l75:
  6978  002F7C  FFFF               	dw	65535	; assembler added errata NOP
  6979  002F7E  A2AC               	btfss	172,1,c	;volatile
  6980  002F80  EFC4  F017         	goto	u2511
  6981  002F84  EFC7  F017         	goto	u2510
  6982  002F88                     u2511:
  6983  002F88  FFFF               	dw	65535	; assembler added errata NOP
  6984  002F8A  EFBE  F017         	goto	l75
  6985  002F8E                     u2510:
  6986  002F8E  FFFF               	dw	65535	; assembler added errata NOP
  6987  002F90                     
  6988                           ;serial_rs232.c: 49:     }
  6989  002F90  4A0E               	infsnz	print_string@i^0,f,c
  6990  002F92  2A0F               	incf	(print_string@i+1)^0,f,c
  6991  002F94                     l2841:
  6992  002F94  FFFF               	dw	65535	; assembler added errata NOP
  6993  002F96  500E               	movf	print_string@i^0,w,c
  6994  002F98  240A               	addwf	print_string@strng^0,w,c
  6995  002F9A  6E0C               	movwf	??_print_string^0,c
  6996  002F9C  500F               	movf	(print_string@i+1)^0,w,c
  6997  002F9E  200B               	addwfc	(print_string@strng+1)^0,w,c
  6998  002FA0  6E0D               	movwf	(??_print_string+1)^0,c
  6999  002FA2  C00C  FFF6         	movff	??_print_string,tblptrl
  7000  002FA6  C00D  FFF7         	movff	??_print_string+1,tblptrh
  7001  002FAA  6AF8               	clrf	tblptru,c
  7002  002FAC  0E05               	movlw	(high __ramtop+-1)
  7003  002FAE  64F7               	cpfsgt	tblptrh,c
  7004  002FB0  D004               	bra	u2527
  7005  002FB2  0008               	tblrd		*
  7006  002FB4  FFFF               	dw	65535	; errata NOP
  7007  002FB6  50F5               	movf	tablat,w,c
  7008  002FB8  D005               	bra	u2520
  7009  002FBA                     u2527:
  7010  002FBA  CFF6 FFE9          	movff	tblptrl,fsr0l
  7011  002FBE  CFF7 FFEA          	movff	tblptrh,fsr0h
  7012  002FC2  50EF               	movf	indf0,w,c
  7013  002FC4                     u2520:
  7014  002FC4  0900               	iorlw	0
  7015  002FC6  A4D8               	btfss	status,2,c
  7016  002FC8  EFE8  F017         	goto	u2531
  7017  002FCC  EFEB  F017         	goto	u2530
  7018  002FD0                     u2531:
  7019  002FD0  FFFF               	dw	65535	; assembler added errata NOP
  7020  002FD2  EFA5  F017         	goto	l2837
  7021  002FD6                     u2530:
  7022  002FD6  FFFF               	dw	65535	; assembler added errata NOP
  7023  002FD8  0012               	return		;funcret
  7024  002FDA  FFFF               	dw	65535	; errata NOP
  7025  002FDC                     __end_of_print_string:
  7026                           	callstack 0
  7027                           
  7028 ;; *************** function _atoi *****************
  7029 ;; Defined at:
  7030 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  s               2   16[COMRAM] PTR const unsigned char 
  7033 ;;		 -> input_str(10), 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  n               2   29[COMRAM] int 
  7036 ;;  neg             2   22[COMRAM] int 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  2   16[COMRAM] int 
  7039 ;; Registers used:
  7040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7046 ;;      Params:         2       0       0       0       0       0       0
  7047 ;;      Locals:         9       0       0       0       0       0       0
  7048 ;;      Temps:          4       0       0       0       0       0       0
  7049 ;;      Totals:        15       0       0       0       0       0       0
  7050 ;;Total ram usage:       15 bytes
  7051 ;; Hardware stack levels used: 1
  7052 ;; Hardware stack levels required when called: 3
  7053 ;; This function calls:
  7054 ;;		___wmul
  7055 ;;		_isdigit
  7056 ;;		_isspace
  7057 ;; This function is called by:
  7058 ;;		_add_component
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text25
  7063  00201C                     __ptext25:
  7064                           	callstack 0
  7065  00201C                     _atoi:
  7066                           	callstack 0
  7067  00201C  FFFF               	dw	65535	; assembler added errata NOP
  7068  00201E  0E00               	movlw	0
  7069  002020  6E1F               	movwf	(atoi@n+1)^0,c
  7070  002022  0E00               	movlw	0
  7071  002024  6E1E               	movwf	atoi@n^0,c
  7072  002026  0E00               	movlw	0
  7073  002028  6E18               	movwf	(atoi@neg+1)^0,c
  7074  00202A  0E00               	movlw	0
  7075  00202C  6E17               	movwf	atoi@neg^0,c
  7076  00202E  EF1C  F010         	goto	l3119
  7077  002032                     l3117:
  7078  002032  FFFF               	dw	65535	; assembler added errata NOP
  7079  002034  4A11               	infsnz	atoi@s^0,f,c
  7080  002036  2A12               	incf	(atoi@s+1)^0,f,c
  7081  002038                     l3119:
  7082  002038  FFFF               	dw	65535	; assembler added errata NOP
  7083  00203A  0E01               	movlw	1
  7084  00203C  6E1D               	movwf	_atoi$1401^0,c
  7085  00203E  C011  FFD9         	movff	atoi@s,fsr2l
  7086  002042  C012  FFDA         	movff	atoi@s+1,fsr2h
  7087  002046  0E20               	movlw	32
  7088  002048  18DE               	xorwf	postinc2,w,c
  7089  00204A  B4D8               	btfsc	status,2,c
  7090  00204C  EF2A  F010         	goto	u3041
  7091  002050  EF2D  F010         	goto	u3040
  7092  002054                     u3041:
  7093  002054  FFFF               	dw	65535	; assembler added errata NOP
  7094  002056  EF4C  F010         	goto	l3127
  7095  00205A                     u3040:
  7096  00205A  FFFF               	dw	65535	; assembler added errata NOP
  7097  00205C  0EF7               	movlw	247
  7098  00205E  6E13               	movwf	??_atoi^0,c
  7099  002060  0EFF               	movlw	255
  7100  002062  6E14               	movwf	(??_atoi+1)^0,c
  7101  002064  C011  FFD9         	movff	atoi@s,fsr2l
  7102  002068  C012  FFDA         	movff	atoi@s+1,fsr2h
  7103  00206C  50DF               	movf	indf2,w,c
  7104  00206E  6E15               	movwf	(??_atoi+2)^0,c
  7105  002070  6A16               	clrf	(??_atoi+3)^0,c
  7106  002072  5013               	movf	??_atoi^0,w,c
  7107  002074  2615               	addwf	(??_atoi+2)^0,f,c
  7108  002076  5014               	movf	(??_atoi+1)^0,w,c
  7109  002078  2216               	addwfc	(??_atoi+3)^0,f,c
  7110  00207A  5016               	movf	(??_atoi+3)^0,w,c
  7111  00207C  E10A               	bnz	u3050
  7112  00207E  0E05               	movlw	5
  7113  002080  5C15               	subwf	(??_atoi+2)^0,w,c
  7114  002082  A0D8               	btfss	status,0,c
  7115  002084  EF46  F010         	goto	u3051
  7116  002088  EF49  F010         	goto	u3050
  7117  00208C                     u3051:
  7118  00208C  FFFF               	dw	65535	; assembler added errata NOP
  7119  00208E  EF4C  F010         	goto	l3127
  7120  002092                     u3050:
  7121  002092  FFFF               	dw	65535	; assembler added errata NOP
  7122  002094  0E00               	movlw	0
  7123  002096  6E1D               	movwf	_atoi$1401^0,c
  7124  002098                     l3127:
  7125  002098  FFFF               	dw	65535	; assembler added errata NOP
  7126  00209A  C01D  F019         	movff	_atoi$1401,_atoi$1400
  7127  00209E  6A1A               	clrf	(_atoi$1400+1)^0,c
  7128  0020A0  5019               	movf	_atoi$1400^0,w,c
  7129  0020A2  101A               	iorwf	(_atoi$1400+1)^0,w,c
  7130  0020A4  A4D8               	btfss	status,2,c
  7131  0020A6  EF57  F010         	goto	u3061
  7132  0020AA  EF5A  F010         	goto	u3060
  7133  0020AE                     u3061:
  7134  0020AE  FFFF               	dw	65535	; assembler added errata NOP
  7135  0020B0  EF19  F010         	goto	l3117
  7136  0020B4                     u3060:
  7137  0020B4  FFFF               	dw	65535	; assembler added errata NOP
  7138  0020B6  EF67  F010         	goto	l3137
  7139  0020BA                     l3133:
  7140  0020BA  FFFF               	dw	65535	; assembler added errata NOP
  7141  0020BC  0E00               	movlw	0
  7142  0020BE  6E18               	movwf	(atoi@neg+1)^0,c
  7143  0020C0  0E01               	movlw	1
  7144  0020C2  6E17               	movwf	atoi@neg^0,c
  7145  0020C4                     l3135:
  7146  0020C4  FFFF               	dw	65535	; assembler added errata NOP
  7147  0020C6  4A11               	infsnz	atoi@s^0,f,c
  7148  0020C8  2A12               	incf	(atoi@s+1)^0,f,c
  7149  0020CA  EF9F  F010         	goto	l3143
  7150  0020CE                     l3137:
  7151  0020CE  FFFF               	dw	65535	; assembler added errata NOP
  7152  0020D0  C011  FFD9         	movff	atoi@s,fsr2l
  7153  0020D4  C012  FFDA         	movff	atoi@s+1,fsr2h
  7154  0020D8  50DF               	movf	indf2,w,c
  7155  0020DA  6E13               	movwf	??_atoi^0,c
  7156  0020DC  6A14               	clrf	(??_atoi+1)^0,c
  7157                           
  7158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7159                           ; Switch size 1, requested type "simple"
  7160                           ; Number of cases is 1, Range of values is 0 to 0
  7161                           ; switch strategies available:
  7162                           ; Name         Instructions Cycles
  7163                           ; simple_byte            4     3 (average)
  7164                           ;	Chosen strategy is simple_byte
  7165  0020DE  5014               	movf	(??_atoi+1)^0,w,c
  7166  0020E0  0A00               	xorlw	0	; case 0
  7167  0020E2  B4D8               	btfsc	status,2,c
  7168  0020E4  EF76  F010         	goto	l5097
  7169  0020E8  EF9F  F010         	goto	l3143
  7170  0020EC                     l5097:
  7171  0020EC  FFFF               	dw	65535	; assembler added errata NOP
  7172                           
  7173                           ; Switch size 1, requested type "simple"
  7174                           ; Number of cases is 2, Range of values is 43 to 45
  7175                           ; switch strategies available:
  7176                           ; Name         Instructions Cycles
  7177                           ; simple_byte            7     4 (average)
  7178                           ;	Chosen strategy is simple_byte
  7179  0020EE  5013               	movf	??_atoi^0,w,c
  7180  0020F0  0A2B               	xorlw	43	; case 43
  7181  0020F2  B4D8               	btfsc	status,2,c
  7182  0020F4  EF62  F010         	goto	l3135
  7183  0020F8  0A06               	xorlw	6	; case 45
  7184  0020FA  B4D8               	btfsc	status,2,c
  7185  0020FC  EF5D  F010         	goto	l3133
  7186  002100  EF9F  F010         	goto	l3143
  7187  002104                     l3139:
  7188  002104  FFFF               	dw	65535	; assembler added errata NOP
  7189  002106  C01E  F00A         	movff	atoi@n,___wmul@multiplier
  7190  00210A  C01F  F00B         	movff	atoi@n+1,___wmul@multiplier+1
  7191  00210E  0E00               	movlw	0
  7192  002110  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  7193  002112  0E0A               	movlw	10
  7194  002114  6E0C               	movwf	___wmul@multiplicand^0,c
  7195  002116  EC5C  F01A         	call	___wmul	;wreg free
  7196  00211A  C011  FFD9         	movff	atoi@s,fsr2l
  7197  00211E  C012  FFDA         	movff	atoi@s+1,fsr2h
  7198  002122  50DF               	movf	indf2,w,c
  7199  002124  6E13               	movwf	??_atoi^0,c
  7200  002126  5013               	movf	??_atoi^0,w,c
  7201  002128  5E0A               	subwf	?___wmul^0,f,c
  7202  00212A  0E00               	movlw	0
  7203  00212C  5A0B               	subwfb	(?___wmul+1)^0,f,c
  7204  00212E  0E30               	movlw	48
  7205  002130  240A               	addwf	?___wmul^0,w,c
  7206  002132  6E1E               	movwf	atoi@n^0,c
  7207  002134  0E00               	movlw	0
  7208  002136  200B               	addwfc	(?___wmul+1)^0,w,c
  7209  002138  6E1F               	movwf	(atoi@n+1)^0,c
  7210  00213A  EF62  F010         	goto	l3135
  7211  00213E                     l3143:
  7212  00213E  FFFF               	dw	65535	; assembler added errata NOP
  7213  002140  0ED0               	movlw	208
  7214  002142  6E13               	movwf	??_atoi^0,c
  7215  002144  0EFF               	movlw	255
  7216  002146  6E14               	movwf	(??_atoi+1)^0,c
  7217  002148  C011  FFD9         	movff	atoi@s,fsr2l
  7218  00214C  C012  FFDA         	movff	atoi@s+1,fsr2h
  7219  002150  50DF               	movf	indf2,w,c
  7220  002152  6E15               	movwf	(??_atoi+2)^0,c
  7221  002154  6A16               	clrf	(??_atoi+3)^0,c
  7222  002156  5013               	movf	??_atoi^0,w,c
  7223  002158  2615               	addwf	(??_atoi+2)^0,f,c
  7224  00215A  5014               	movf	(??_atoi+1)^0,w,c
  7225  00215C  2216               	addwfc	(??_atoi+3)^0,f,c
  7226  00215E  5016               	movf	(??_atoi+3)^0,w,c
  7227  002160  E10B               	bnz	u3070
  7228  002162  0E0A               	movlw	10
  7229  002164  5C15               	subwf	(??_atoi+2)^0,w,c
  7230  002166  A0D8               	btfss	status,0,c
  7231  002168  EFB8  F010         	goto	u3071
  7232  00216C  EFBC  F010         	goto	u3070
  7233  002170                     u3071:
  7234  002170  FFFF               	dw	65535	; assembler added errata NOP
  7235  002172  0E01               	movlw	1
  7236  002174  EFBE  F010         	goto	u3080
  7237  002178                     u3070:
  7238  002178  FFFF               	dw	65535	; assembler added errata NOP
  7239  00217A  0E00               	movlw	0
  7240  00217C                     u3080:
  7241  00217C  FFFF               	dw	65535	; assembler added errata NOP
  7242  00217E  6E1B               	movwf	_atoi$1402^0,c
  7243  002180  6A1C               	clrf	(_atoi$1402+1)^0,c
  7244  002182  501B               	movf	_atoi$1402^0,w,c
  7245  002184  101C               	iorwf	(_atoi$1402+1)^0,w,c
  7246  002186  A4D8               	btfss	status,2,c
  7247  002188  EFC8  F010         	goto	u3091
  7248  00218C  EFCB  F010         	goto	u3090
  7249  002190                     u3091:
  7250  002190  FFFF               	dw	65535	; assembler added errata NOP
  7251  002192  EF82  F010         	goto	l3139
  7252  002196                     u3090:
  7253  002196  FFFF               	dw	65535	; assembler added errata NOP
  7254  002198  5017               	movf	atoi@neg^0,w,c
  7255  00219A  1018               	iorwf	(atoi@neg+1)^0,w,c
  7256  00219C  A4D8               	btfss	status,2,c
  7257  00219E  EFD3  F010         	goto	u3101
  7258  0021A2  EFD6  F010         	goto	u3100
  7259  0021A6                     u3101:
  7260  0021A6  FFFF               	dw	65535	; assembler added errata NOP
  7261  0021A8  EFE5  F010         	goto	l1214
  7262  0021AC                     u3100:
  7263  0021AC  FFFF               	dw	65535	; assembler added errata NOP
  7264  0021AE  C01E  F013         	movff	atoi@n,??_atoi
  7265  0021B2  C01F  F014         	movff	atoi@n+1,??_atoi+1
  7266  0021B6  1E13               	comf	??_atoi^0,f,c
  7267  0021B8  1E14               	comf	(??_atoi+1)^0,f,c
  7268  0021BA  4A13               	infsnz	??_atoi^0,f,c
  7269  0021BC  2A14               	incf	(??_atoi+1)^0,f,c
  7270  0021BE  C013  F011         	movff	??_atoi,?_atoi
  7271  0021C2  C014  F012         	movff	??_atoi+1,?_atoi+1
  7272  0021C6  EFEA  F010         	goto	l1217
  7273  0021CA                     l1214:
  7274  0021CA  FFFF               	dw	65535	; assembler added errata NOP
  7275  0021CC  C01E  F011         	movff	atoi@n,?_atoi
  7276  0021D0  C01F  F012         	movff	atoi@n+1,?_atoi+1
  7277  0021D4                     l1217:
  7278  0021D4  FFFF               	dw	65535	; assembler added errata NOP
  7279  0021D6  0012               	return		;funcret
  7280  0021D8  FFFF               	dw	65535	; errata NOP
  7281  0021DA                     __end_of_atoi:
  7282                           	callstack 0
  7283                           
  7284 ;; *************** function _isspace *****************
  7285 ;; Defined at:
  7286 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  c               2    9[COMRAM] int 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  2    9[COMRAM] int 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7300 ;;      Params:         2       0       0       0       0       0       0
  7301 ;;      Locals:         1       0       0       0       0       0       0
  7302 ;;      Temps:          4       0       0       0       0       0       0
  7303 ;;      Totals:         7       0       0       0       0       0       0
  7304 ;;Total ram usage:        7 bytes
  7305 ;; Hardware stack levels used: 1
  7306 ;; Hardware stack levels required when called: 2
  7307 ;; This function calls:
  7308 ;;		Nothing
  7309 ;; This function is called by:
  7310 ;;		_atoi
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text26
  7315  0031D4                     __ptext26:
  7316                           	callstack 0
  7317  0031D4                     _isspace:
  7318                           	callstack 25
  7319  0031D4  FFFF               	dw	65535	; assembler added errata NOP
  7320  0031D6  0E01               	movlw	1
  7321  0031D8  6E10               	movwf	_isspace$1418^0,c
  7322  0031DA  0E20               	movlw	32
  7323  0031DC  180A               	xorwf	isspace@c^0,w,c
  7324  0031DE  100B               	iorwf	(isspace@c+1)^0,w,c
  7325  0031E0  B4D8               	btfsc	status,2,c
  7326  0031E2  EFF5  F018         	goto	u2971
  7327  0031E6  EFF8  F018         	goto	u2970
  7328  0031EA                     u2971:
  7329  0031EA  FFFF               	dw	65535	; assembler added errata NOP
  7330  0031EC  EF14  F019         	goto	l3087
  7331  0031F0                     u2970:
  7332  0031F0  FFFF               	dw	65535	; assembler added errata NOP
  7333  0031F2  0EF7               	movlw	247
  7334  0031F4  6E0C               	movwf	??_isspace^0,c
  7335  0031F6  0EFF               	movlw	255
  7336  0031F8  6E0D               	movwf	(??_isspace+1)^0,c
  7337  0031FA  C00A  F00E         	movff	isspace@c,??_isspace+2
  7338  0031FE  C00B  F00F         	movff	isspace@c+1,??_isspace+3
  7339  003202  500C               	movf	??_isspace^0,w,c
  7340  003204  260E               	addwf	(??_isspace+2)^0,f,c
  7341  003206  500D               	movf	(??_isspace+1)^0,w,c
  7342  003208  220F               	addwfc	(??_isspace+3)^0,f,c
  7343  00320A  500F               	movf	(??_isspace+3)^0,w,c
  7344  00320C  E10A               	bnz	u2980
  7345  00320E  0E05               	movlw	5
  7346  003210  5C0E               	subwf	(??_isspace+2)^0,w,c
  7347  003212  A0D8               	btfss	status,0,c
  7348  003214  EF0E  F019         	goto	u2981
  7349  003218  EF11  F019         	goto	u2980
  7350  00321C                     u2981:
  7351  00321C  FFFF               	dw	65535	; assembler added errata NOP
  7352  00321E  EF14  F019         	goto	l3087
  7353  003222                     u2980:
  7354  003222  FFFF               	dw	65535	; assembler added errata NOP
  7355  003224  0E00               	movlw	0
  7356  003226  6E10               	movwf	_isspace$1418^0,c
  7357  003228                     l3087:
  7358  003228  FFFF               	dw	65535	; assembler added errata NOP
  7359  00322A  C010  F00A         	movff	_isspace$1418,?_isspace
  7360  00322E  6A0B               	clrf	(?_isspace+1)^0,c
  7361  003230  0012               	return		;funcret
  7362  003232  FFFF               	dw	65535	; errata NOP
  7363  003234                     __end_of_isspace:
  7364                           	callstack 0
  7365                           
  7366 ;; *************** function _isdigit *****************
  7367 ;; Defined at:
  7368 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  c               2    9[COMRAM] int 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;		None
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  2    9[COMRAM] int 
  7375 ;; Registers used:
  7376 ;;		wreg, status,2, status,0
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7382 ;;      Params:         2       0       0       0       0       0       0
  7383 ;;      Locals:         0       0       0       0       0       0       0
  7384 ;;      Temps:          4       0       0       0       0       0       0
  7385 ;;      Totals:         6       0       0       0       0       0       0
  7386 ;;Total ram usage:        6 bytes
  7387 ;; Hardware stack levels used: 1
  7388 ;; Hardware stack levels required when called: 2
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_atoi
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text27
  7397  003364                     __ptext27:
  7398                           	callstack 0
  7399  003364                     _isdigit:
  7400                           	callstack 25
  7401  003364  FFFF               	dw	65535	; assembler added errata NOP
  7402  003366  0ED0               	movlw	208
  7403  003368  6E0C               	movwf	??_isdigit^0,c
  7404  00336A  0EFF               	movlw	255
  7405  00336C  6E0D               	movwf	(??_isdigit+1)^0,c
  7406  00336E  C00A  F00E         	movff	isdigit@c,??_isdigit+2
  7407  003372  C00B  F00F         	movff	isdigit@c+1,??_isdigit+3
  7408  003376  500C               	movf	??_isdigit^0,w,c
  7409  003378  260E               	addwf	(??_isdigit+2)^0,f,c
  7410  00337A  500D               	movf	(??_isdigit+1)^0,w,c
  7411  00337C  220F               	addwfc	(??_isdigit+3)^0,f,c
  7412  00337E  500F               	movf	(??_isdigit+3)^0,w,c
  7413  003380  E10B               	bnz	u2990
  7414  003382  0E0A               	movlw	10
  7415  003384  5C0E               	subwf	(??_isdigit+2)^0,w,c
  7416  003386  A0D8               	btfss	status,0,c
  7417  003388  EFC8  F019         	goto	u2991
  7418  00338C  EFCC  F019         	goto	u2990
  7419  003390                     u2991:
  7420  003390  FFFF               	dw	65535	; assembler added errata NOP
  7421  003392  0E01               	movlw	1
  7422  003394  EFCE  F019         	goto	u3000
  7423  003398                     u2990:
  7424  003398  FFFF               	dw	65535	; assembler added errata NOP
  7425  00339A  0E00               	movlw	0
  7426  00339C                     u3000:
  7427  00339C  FFFF               	dw	65535	; assembler added errata NOP
  7428  00339E  6E0A               	movwf	?_isdigit^0,c
  7429  0033A0  6A0B               	clrf	(?_isdigit+1)^0,c
  7430  0033A2  0012               	return		;funcret
  7431  0033A4  FFFF               	dw	65535	; errata NOP
  7432  0033A6                     __end_of_isdigit:
  7433                           	callstack 0
  7434                           
  7435 ;; *************** function ___wmul *****************
  7436 ;; Defined at:
  7437 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;  multiplier      2    9[COMRAM] unsigned int 
  7440 ;;  multiplicand    2   11[COMRAM] unsigned int 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;  product         2   13[COMRAM] unsigned int 
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  2    9[COMRAM] unsigned int 
  7445 ;; Registers used:
  7446 ;;		wreg, status,2, status,0, prodl, prodh
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7452 ;;      Params:         4       0       0       0       0       0       0
  7453 ;;      Locals:         2       0       0       0       0       0       0
  7454 ;;      Temps:          0       0       0       0       0       0       0
  7455 ;;      Totals:         6       0       0       0       0       0       0
  7456 ;;Total ram usage:        6 bytes
  7457 ;; Hardware stack levels used: 1
  7458 ;; Hardware stack levels required when called: 2
  7459 ;; This function calls:
  7460 ;;		Nothing
  7461 ;; This function is called by:
  7462 ;;		_pick_and_place
  7463 ;;		_atoi
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text28
  7468  0034B8                     __ptext28:
  7469                           	callstack 0
  7470  0034B8                     ___wmul:
  7471                           	callstack 0
  7472  0034B8  FFFF               	dw	65535	; assembler added errata NOP
  7473  0034BA  500A               	movf	___wmul@multiplier^0,w,c
  7474  0034BC  020C               	mulwf	___wmul@multiplicand^0,c
  7475  0034BE  CFF3 F00E          	movff	prodl,___wmul@product
  7476  0034C2  CFF4 F00F          	movff	prodh,___wmul@product+1
  7477  0034C6  500A               	movf	___wmul@multiplier^0,w,c
  7478  0034C8  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  7479  0034CA  50F3               	movf	243,w,c
  7480  0034CC  260F               	addwf	(___wmul@product+1)^0,f,c
  7481  0034CE  500B               	movf	(___wmul@multiplier+1)^0,w,c
  7482  0034D0  020C               	mulwf	___wmul@multiplicand^0,c
  7483  0034D2  50F3               	movf	243,w,c
  7484  0034D4  260F               	addwf	(___wmul@product+1)^0,f,c
  7485  0034D6  C00E  F00A         	movff	___wmul@product,?___wmul
  7486  0034DA  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  7487  0034DE  0012               	return		;funcret
  7488  0034E0  FFFF               	dw	65535	; errata NOP
  7489  0034E2                     __end_of___wmul:
  7490                           	callstack 0
  7491                           
  7492 ;; *************** function _init_interrupts *****************
  7493 ;; Defined at:
  7494 ;;		line 71 in file "init_PIC.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;		None
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;		None
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1    wreg      void 
  7501 ;; Registers used:
  7502 ;;		wreg, status,2
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7508 ;;      Params:         0       0       0       0       0       0       0
  7509 ;;      Locals:         0       0       0       0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0
  7511 ;;      Totals:         0       0       0       0       0       0       0
  7512 ;;Total ram usage:        0 bytes
  7513 ;; Hardware stack levels used: 1
  7514 ;; Hardware stack levels required when called: 2
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_main
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text29
  7523  003550                     __ptext29:
  7524                           	callstack 0
  7525  003550                     _init_interrupts:
  7526                           	callstack 0
  7527  003550  FFFF               	dw	65535	; assembler added errata NOP
  7528  003552                     
  7529                           ;init_PIC.c: 73:     PIR1bits.RCIF = 0;
  7530  003552  9A9E               	bcf	158,5,c	;volatile
  7531                           
  7532                           ;init_PIC.c: 74:  PIE1bits.RCIE = 1;
  7533  003554  8A9D               	bsf	157,5,c	;volatile
  7534                           
  7535                           ;init_PIC.c: 75:  INTCONbits.PEIE = 1;
  7536  003556  8CF2               	bsf	242,6,c	;volatile
  7537                           
  7538                           ;init_PIC.c: 77:     PIE1bits.TMR1IE = 1;
  7539  003558  809D               	bsf	157,0,c	;volatile
  7540                           
  7541                           ;init_PIC.c: 78:     INTCONbits.TMR0IE = 1;
  7542  00355A  8AF2               	bsf	242,5,c	;volatile
  7543  00355C                     
  7544                           ;init_PIC.c: 80:     INTCON2=0x00;
  7545  00355C  0E00               	movlw	0
  7546  00355E  6EF1               	movwf	241,c	;volatile
  7547                           
  7548                           ;init_PIC.c: 82:     INTCON3=0x00;
  7549  003560  0E00               	movlw	0
  7550  003562  6EF0               	movwf	240,c	;volatile
  7551  003564                     
  7552                           ;init_PIC.c: 83:     INTCONbits.INT0IF=0;
  7553  003564  92F2               	bcf	242,1,c	;volatile
  7554  003566                     
  7555                           ;init_PIC.c: 84:     INTCONbits.INT0IE=1;
  7556  003566  88F2               	bsf	242,4,c	;volatile
  7557  003568                     
  7558                           ;init_PIC.c: 85:     INTCON3bits.INT1IF=0;
  7559  003568  90F0               	bcf	240,0,c	;volatile
  7560  00356A                     
  7561                           ;init_PIC.c: 86:     INTCON3bits.INT1IE=1;
  7562  00356A  86F0               	bsf	240,3,c	;volatile
  7563  00356C  0012               	return		;funcret
  7564  00356E  FFFF               	dw	65535	; errata NOP
  7565  003570                     __end_of_init_interrupts:
  7566                           	callstack 0
  7567                           
  7568 ;; *************** function _init_USART *****************
  7569 ;; Defined at:
  7570 ;;		line 17 in file "serial_rs232.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;		None
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7584 ;;      Params:         0       0       0       0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0
  7587 ;;      Totals:         0       0       0       0       0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used: 1
  7590 ;; Hardware stack levels required when called: 5
  7591 ;; This function calls:
  7592 ;;		___fltol
  7593 ;;		_roundf
  7594 ;; This function is called by:
  7595 ;;		_main
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text30
  7600  0033E8                     __ptext30:
  7601                           	callstack 0
  7602  0033E8                     _init_USART:
  7603                           	callstack 0
  7604  0033E8  FFFF               	dw	65535	; assembler added errata NOP
  7605  0033EA                     
  7606                           ;serial_rs232.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  7607  0033EA  0E55               	movlw	85
  7608  0033EC  6E56               	movwf	roundf@x^0,c
  7609  0033EE  0E55               	movlw	85
  7610  0033F0  6E57               	movwf	(roundf@x+1)^0,c
  7611  0033F2  0EC8               	movlw	200
  7612  0033F4  6E58               	movwf	(roundf@x+2)^0,c
  7613  0033F6  0E41               	movlw	65
  7614  0033F8  6E59               	movwf	(roundf@x+3)^0,c
  7615  0033FA  EC21  F00C         	call	_roundf	;wreg free
  7616  0033FE  C056  F05E         	movff	?_roundf,___fltol@f1
  7617  003402  C057  F05F         	movff	?_roundf+1,___fltol@f1+1
  7618  003406  C058  F060         	movff	?_roundf+2,___fltol@f1+2
  7619  00340A  C059  F061         	movff	?_roundf+3,___fltol@f1+3
  7620  00340E  ECEE  F012         	call	___fltol	;wreg free
  7621  003412  505E               	movf	?___fltol^0,w,c
  7622  003414  6EAF               	movwf	175,c	;volatile
  7623  003416                     
  7624                           ;serial_rs232.c: 35:  TXSTAbits.TX9=0;
  7625  003416  9CAC               	bcf	172,6,c	;volatile
  7626  003418                     
  7627                           ;serial_rs232.c: 36:     TXSTAbits.TXEN=1;
  7628  003418  8AAC               	bsf	172,5,c	;volatile
  7629  00341A                     
  7630                           ;serial_rs232.c: 37:     TXSTAbits.SYNC=0;
  7631  00341A  98AC               	bcf	172,4,c	;volatile
  7632  00341C                     
  7633                           ;serial_rs232.c: 38:     TXSTAbits.BRGH=1;
  7634  00341C  84AC               	bsf	172,2,c	;volatile
  7635  00341E                     
  7636                           ;serial_rs232.c: 39:     RCSTAbits.SPEN=1;
  7637  00341E  8EAB               	bsf	171,7,c	;volatile
  7638  003420                     
  7639                           ;serial_rs232.c: 40:     RCSTAbits.RX9=0;
  7640  003420  9CAB               	bcf	171,6,c	;volatile
  7641  003422                     
  7642                           ;serial_rs232.c: 41:     RCSTAbits.CREN=1;
  7643  003422  88AB               	bsf	171,4,c	;volatile
  7644  003424  0012               	return		;funcret
  7645  003426  FFFF               	dw	65535	; errata NOP
  7646  003428                     __end_of_init_USART:
  7647                           	callstack 0
  7648                           
  7649 ;; *************** function _roundf *****************
  7650 ;; Defined at:
  7651 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  x               4   85[COMRAM] float 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  y               4   14[BANK0 ] float 
  7656 ;;  u               4   10[BANK0 ] struct .
  7657 ;;  e               2    4[BANK0 ] int 
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  4   85[COMRAM] float 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7667 ;;      Params:         4       0       0       0       0       0       0
  7668 ;;      Locals:         0      18       0       0       0       0       0
  7669 ;;      Temps:          4       0       0       0       0       0       0
  7670 ;;      Totals:         8      18       0       0       0       0       0
  7671 ;;Total ram usage:       26 bytes
  7672 ;; Hardware stack levels used: 1
  7673 ;; Hardware stack levels required when called: 4
  7674 ;; This function calls:
  7675 ;;		___fladd
  7676 ;;		___flge
  7677 ;;		___flmul
  7678 ;;		___flneg
  7679 ;;		___flsub
  7680 ;; This function is called by:
  7681 ;;		_init_USART
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text31
  7686  001842                     __ptext31:
  7687                           	callstack 0
  7688  001842                     _roundf:
  7689                           	callstack 0
  7690  001842  FFFF               	dw	65535	; assembler added errata NOP
  7691  001844  C080  F0C0         	movff	roundf@F528,roundf@u
  7692  001848  C081  F0C1         	movff	roundf@F528+1,roundf@u+1
  7693  00184C  C082  F0C2         	movff	roundf@F528+2,roundf@u+2
  7694  001850  C083  F0C3         	movff	roundf@F528+3,roundf@u+3
  7695  001854  C056  F0C0         	movff	roundf@x,roundf@u
  7696  001858  C057  F0C1         	movff	roundf@x+1,roundf@u+1
  7697  00185C  C058  F0C2         	movff	roundf@x+2,roundf@u+2
  7698  001860  C059  F0C3         	movff	roundf@x+3,roundf@u+3
  7699  001864  C0C0  F05A         	movff	roundf@u,??_roundf
  7700  001868  C0C1  F05B         	movff	roundf@u+1,??_roundf+1
  7701  00186C  C0C2  F05C         	movff	roundf@u+2,??_roundf+2
  7702  001870  C0C3  F05D         	movff	roundf@u+3,??_roundf+3
  7703  001874  0E18               	movlw	24
  7704  001876  EF43  F00C         	goto	u5630
  7705  00187A                     u5635:
  7706  00187A  FFFF               	dw	65535	; assembler added errata NOP
  7707  00187C  90D8               	bcf	status,0,c
  7708  00187E  325D               	rrcf	(??_roundf+3)^0,f,c
  7709  001880  325C               	rrcf	(??_roundf+2)^0,f,c
  7710  001882  325B               	rrcf	(??_roundf+1)^0,f,c
  7711  001884  325A               	rrcf	??_roundf^0,f,c
  7712  001886                     u5630:
  7713  001886  FFFF               	dw	65535	; assembler added errata NOP
  7714  001888  2EE8               	decfsz	wreg,f,c
  7715  00188A  EF3D  F00C         	goto	u5635
  7716  00188E  505A               	movf	??_roundf^0,w,c
  7717  001890  0100               	movlb	0	; () banked
  7718  001892  6FBA               	movwf	roundf@e& (0+255),b
  7719  001894  6BBB               	clrf	(roundf@e+1)& (0+255),b
  7720  001896  BFBB               	btfsc	(roundf@e+1)& (0+255),7,b
  7721  001898  EF57  F00C         	goto	u5641
  7722  00189C  51BB               	movf	(roundf@e+1)& (0+255),w,b
  7723  00189E  E10A               	bnz	u5640
  7724  0018A0  0E96               	movlw	150
  7725  0018A2  5DBA               	subwf	roundf@e& (0+255),w,b
  7726  0018A4  A0D8               	btfss	status,0,c
  7727  0018A6  EF57  F00C         	goto	u5641
  7728  0018AA  EF5A  F00C         	goto	u5640
  7729  0018AE                     u5641:
  7730  0018AE  FFFF               	dw	65535	; assembler added errata NOP
  7731  0018B0  EF65  F00C         	goto	l4743
  7732  0018B4                     u5640:
  7733  0018B4  FFFF               	dw	65535	; assembler added errata NOP
  7734  0018B6                     
  7735                           ; BSR set to: 0
  7736  0018B6  C056  F056         	movff	roundf@x,?_roundf
  7737  0018BA  C057  F057         	movff	roundf@x+1,?_roundf+1
  7738  0018BE  C058  F058         	movff	roundf@x+2,?_roundf+2
  7739  0018C2  C059  F059         	movff	roundf@x+3,?_roundf+3
  7740  0018C6  EF13  F00E         	goto	l1249
  7741  0018CA                     l4743:
  7742  0018CA  FFFF               	dw	65535	; assembler added errata NOP
  7743                           
  7744                           ; BSR set to: 0
  7745  0018CC  C0C0  F05A         	movff	roundf@u,??_roundf
  7746  0018D0  C0C1  F05B         	movff	roundf@u+1,??_roundf+1
  7747  0018D4  C0C2  F05C         	movff	roundf@u+2,??_roundf+2
  7748  0018D8  C0C3  F05D         	movff	roundf@u+3,??_roundf+3
  7749  0018DC  0E20               	movlw	32
  7750  0018DE  EF77  F00C         	goto	u5650
  7751  0018E2                     u5655:
  7752  0018E2  FFFF               	dw	65535	; assembler added errata NOP
  7753  0018E4  90D8               	bcf	status,0,c
  7754  0018E6  325D               	rrcf	(??_roundf+3)^0,f,c
  7755  0018E8  325C               	rrcf	(??_roundf+2)^0,f,c
  7756  0018EA  325B               	rrcf	(??_roundf+1)^0,f,c
  7757  0018EC  325A               	rrcf	??_roundf^0,f,c
  7758  0018EE                     u5650:
  7759  0018EE  FFFF               	dw	65535	; assembler added errata NOP
  7760  0018F0  2EE8               	decfsz	wreg,f,c
  7761  0018F2  EF71  F00C         	goto	u5655
  7762  0018F6  505A               	movf	??_roundf^0,w,c
  7763  0018F8  105B               	iorwf	(??_roundf+1)^0,w,c
  7764  0018FA  105C               	iorwf	(??_roundf+2)^0,w,c
  7765  0018FC  105D               	iorwf	(??_roundf+3)^0,w,c
  7766  0018FE  B4D8               	btfsc	status,2,c
  7767  001900  EF84  F00C         	goto	u5661
  7768  001904  EF87  F00C         	goto	u5660
  7769  001908                     u5661:
  7770  001908  FFFF               	dw	65535	; assembler added errata NOP
  7771  00190A  EF9A  F00C         	goto	l4747
  7772  00190E                     u5660:
  7773  00190E  FFFF               	dw	65535	; assembler added errata NOP
  7774  001910                     
  7775                           ; BSR set to: 0
  7776  001910  C056  F00A         	movff	roundf@x,___flneg@f1
  7777  001914  C057  F00B         	movff	roundf@x+1,___flneg@f1+1
  7778  001918  C058  F00C         	movff	roundf@x+2,___flneg@f1+2
  7779  00191C  C059  F00D         	movff	roundf@x+3,___flneg@f1+3
  7780  001920  ECD3  F019         	call	___flneg	;wreg free
  7781  001924  C00A  F056         	movff	?___flneg,roundf@x
  7782  001928  C00B  F057         	movff	?___flneg+1,roundf@x+1
  7783  00192C  C00C  F058         	movff	?___flneg+2,roundf@x+2
  7784  001930  C00D  F059         	movff	?___flneg+3,roundf@x+3
  7785  001934                     l4747:
  7786  001934  FFFF               	dw	65535	; assembler added errata NOP
  7787  001936  0100               	movlb	0	; () banked
  7788  001938  BFBB               	btfsc	(roundf@e+1)& (0+255),7,b
  7789  00193A  EFAB  F00C         	goto	u5670
  7790  00193E  51BB               	movf	(roundf@e+1)& (0+255),w,b
  7791  001940  E107               	bnz	u5671
  7792  001942  0E7E               	movlw	126
  7793  001944  5DBA               	subwf	roundf@e& (0+255),w,b
  7794  001946  B0D8               	btfsc	status,0,c
  7795  001948  EFA8  F00C         	goto	u5671
  7796  00194C  EFAB  F00C         	goto	u5670
  7797  001950                     u5671:
  7798  001950  FFFF               	dw	65535	; assembler added errata NOP
  7799  001952  EFC8  F00C         	goto	l4753
  7800  001956                     u5670:
  7801  001956  FFFF               	dw	65535	; assembler added errata NOP
  7802  001958                     
  7803                           ; BSR set to: 0
  7804  001958  C0C0  F031         	movff	roundf@u,___flmul@b
  7805  00195C  C0C1  F032         	movff	roundf@u+1,___flmul@b+1
  7806  001960  C0C2  F033         	movff	roundf@u+2,___flmul@b+2
  7807  001964  C0C3  F034         	movff	roundf@u+3,___flmul@b+3
  7808  001968  0E00               	movlw	0
  7809  00196A  6E35               	movwf	___flmul@a^0,c
  7810  00196C  0E00               	movlw	0
  7811  00196E  6E36               	movwf	(___flmul@a+1)^0,c
  7812  001970  0E00               	movlw	0
  7813  001972  6E37               	movwf	(___flmul@a+2)^0,c
  7814  001974  0E00               	movlw	0
  7815  001976  6E38               	movwf	(___flmul@a+3)^0,c
  7816  001978  ECB6  F007         	call	___flmul	;wreg free
  7817  00197C  C031  F056         	movff	?___flmul,?_roundf
  7818  001980  C032  F057         	movff	?___flmul+1,?_roundf+1
  7819  001984  C033  F058         	movff	?___flmul+2,?_roundf+2
  7820  001988  C034  F059         	movff	?___flmul+3,?_roundf+3
  7821  00198C  EF13  F00E         	goto	l1249
  7822  001990                     l4753:
  7823  001990  FFFF               	dw	65535	; assembler added errata NOP
  7824                           
  7825                           ; BSR set to: 0
  7826  001992  0E00               	movlw	0
  7827  001994  6E0E               	movwf	___fladd@a^0,c
  7828  001996  0E00               	movlw	0
  7829  001998  6E0F               	movwf	(___fladd@a+1)^0,c
  7830  00199A  0E00               	movlw	0
  7831  00199C  6E10               	movwf	(___fladd@a+2)^0,c
  7832  00199E  0E4B               	movlw	75
  7833  0019A0  6E11               	movwf	(___fladd@a+3)^0,c
  7834  0019A2  C056  F00A         	movff	roundf@x,___fladd@b
  7835  0019A6  C057  F00B         	movff	roundf@x+1,___fladd@b+1
  7836  0019AA  C058  F00C         	movff	roundf@x+2,___fladd@b+2
  7837  0019AE  C059  F00D         	movff	roundf@x+3,___fladd@b+3
  7838  0019B2  ECE2  F004         	call	___fladd	;wreg free
  7839  0019B6  C00A  F0BC         	movff	?___fladd,_roundf$1689
  7840  0019BA  C00B  F0BD         	movff	?___fladd+1,_roundf$1689+1
  7841  0019BE  C00C  F0BE         	movff	?___fladd+2,_roundf$1689+2
  7842  0019C2  C00D  F0BF         	movff	?___fladd+3,_roundf$1689+3
  7843  0019C6  0E00               	movlw	0
  7844  0019C8  6E0E               	movwf	___fladd@a^0,c
  7845  0019CA  0E00               	movlw	0
  7846  0019CC  6E0F               	movwf	(___fladd@a+1)^0,c
  7847  0019CE  0E00               	movlw	0
  7848  0019D0  6E10               	movwf	(___fladd@a+2)^0,c
  7849  0019D2  0ECB               	movlw	203
  7850  0019D4  6E11               	movwf	(___fladd@a+3)^0,c
  7851  0019D6  C0BC  F00A         	movff	_roundf$1689,___fladd@b
  7852  0019DA  C0BD  F00B         	movff	_roundf$1689+1,___fladd@b+1
  7853  0019DE  C0BE  F00C         	movff	_roundf$1689+2,___fladd@b+2
  7854  0019E2  C0BF  F00D         	movff	_roundf$1689+3,___fladd@b+3
  7855  0019E6  ECE2  F004         	call	___fladd	;wreg free
  7856  0019EA  C00A  F0B6         	movff	?___fladd,_roundf$1690
  7857  0019EE  C00B  F0B7         	movff	?___fladd+1,_roundf$1690+1
  7858  0019F2  C00C  F0B8         	movff	?___fladd+2,_roundf$1690+2
  7859  0019F6  C00D  F0B9         	movff	?___fladd+3,_roundf$1690+3
  7860  0019FA  C0B6  F01A         	movff	_roundf$1690,___flsub@b
  7861  0019FE  C0B7  F01B         	movff	_roundf$1690+1,___flsub@b+1
  7862  001A02  C0B8  F01C         	movff	_roundf$1690+2,___flsub@b+2
  7863  001A06  C0B9  F01D         	movff	_roundf$1690+3,___flsub@b+3
  7864  001A0A  C056  F01E         	movff	roundf@x,___flsub@a
  7865  001A0E  C057  F01F         	movff	roundf@x+1,___flsub@a+1
  7866  001A12  C058  F020         	movff	roundf@x+2,___flsub@a+2
  7867  001A16  C059  F021         	movff	roundf@x+3,___flsub@a+3
  7868  001A1A  EC48  F019         	call	___flsub	;wreg free
  7869  001A1E  C01A  F0C4         	movff	?___flsub,roundf@y
  7870  001A22  C01B  F0C5         	movff	?___flsub+1,roundf@y+1
  7871  001A26  C01C  F0C6         	movff	?___flsub+2,roundf@y+2
  7872  001A2A  C01D  F0C7         	movff	?___flsub+3,roundf@y+3
  7873  001A2E  0E00               	movlw	0
  7874  001A30  6E4A               	movwf	___flge@ff1^0,c
  7875  001A32  0E00               	movlw	0
  7876  001A34  6E4B               	movwf	(___flge@ff1+1)^0,c
  7877  001A36  0E00               	movlw	0
  7878  001A38  6E4C               	movwf	(___flge@ff1+2)^0,c
  7879  001A3A  0E3F               	movlw	63
  7880  001A3C  6E4D               	movwf	(___flge@ff1+3)^0,c
  7881  001A3E  C0C4  F04E         	movff	roundf@y,___flge@ff2
  7882  001A42  C0C5  F04F         	movff	roundf@y+1,___flge@ff2+1
  7883  001A46  C0C6  F050         	movff	roundf@y+2,___flge@ff2+2
  7884  001A4A  C0C7  F051         	movff	roundf@y+3,___flge@ff2+3
  7885  001A4E  EC89  F013         	call	___flge	;wreg free
  7886  001A52  B0D8               	btfsc	status,0,c
  7887  001A54  EF2E  F00D         	goto	u5681
  7888  001A58  EF31  F00D         	goto	u5680
  7889  001A5C                     u5681:
  7890  001A5C  FFFF               	dw	65535	; assembler added errata NOP
  7891  001A5E  EF68  F00D         	goto	l4757
  7892  001A62                     u5680:
  7893  001A62  FFFF               	dw	65535	; assembler added errata NOP
  7894  001A64  C056  F00E         	movff	roundf@x,___fladd@a
  7895  001A68  C057  F00F         	movff	roundf@x+1,___fladd@a+1
  7896  001A6C  C058  F010         	movff	roundf@x+2,___fladd@a+2
  7897  001A70  C059  F011         	movff	roundf@x+3,___fladd@a+3
  7898  001A74  C0C4  F00A         	movff	roundf@y,___fladd@b
  7899  001A78  C0C5  F00B         	movff	roundf@y+1,___fladd@b+1
  7900  001A7C  C0C6  F00C         	movff	roundf@y+2,___fladd@b+2
  7901  001A80  C0C7  F00D         	movff	roundf@y+3,___fladd@b+3
  7902  001A84  ECE2  F004         	call	___fladd	;wreg free
  7903  001A88  C00A  F0BC         	movff	?___fladd,_roundf$1689
  7904  001A8C  C00B  F0BD         	movff	?___fladd+1,_roundf$1689+1
  7905  001A90  C00C  F0BE         	movff	?___fladd+2,_roundf$1689+2
  7906  001A94  C00D  F0BF         	movff	?___fladd+3,_roundf$1689+3
  7907  001A98  C0BC  F00A         	movff	_roundf$1689,___fladd@b
  7908  001A9C  C0BD  F00B         	movff	_roundf$1689+1,___fladd@b+1
  7909  001AA0  C0BE  F00C         	movff	_roundf$1689+2,___fladd@b+2
  7910  001AA4  C0BF  F00D         	movff	_roundf$1689+3,___fladd@b+3
  7911  001AA8  0E00               	movlw	0
  7912  001AAA  6E0E               	movwf	___fladd@a^0,c
  7913  001AAC  0E00               	movlw	0
  7914  001AAE  6E0F               	movwf	(___fladd@a+1)^0,c
  7915  001AB0  0E80               	movlw	128
  7916  001AB2  6E10               	movwf	(___fladd@a+2)^0,c
  7917  001AB4  0EBF               	movlw	191
  7918  001AB6  6E11               	movwf	(___fladd@a+3)^0,c
  7919  001AB8  ECE2  F004         	call	___fladd	;wreg free
  7920  001ABC  C00A  F0C4         	movff	?___fladd,roundf@y
  7921  001AC0  C00B  F0C5         	movff	?___fladd+1,roundf@y+1
  7922  001AC4  C00C  F0C6         	movff	?___fladd+2,roundf@y+2
  7923  001AC8  C00D  F0C7         	movff	?___fladd+3,roundf@y+3
  7924  001ACC  EFD5  F00D         	goto	l4763
  7925  001AD0                     l4757:
  7926  001AD0  FFFF               	dw	65535	; assembler added errata NOP
  7927  001AD2  0E00               	movlw	0
  7928  001AD4  6E4A               	movwf	___flge@ff1^0,c
  7929  001AD6  0E00               	movlw	0
  7930  001AD8  6E4B               	movwf	(___flge@ff1+1)^0,c
  7931  001ADA  0E00               	movlw	0
  7932  001ADC  6E4C               	movwf	(___flge@ff1+2)^0,c
  7933  001ADE  0EBF               	movlw	191
  7934  001AE0  6E4D               	movwf	(___flge@ff1+3)^0,c
  7935  001AE2  C0C4  F04E         	movff	roundf@y,___flge@ff2
  7936  001AE6  C0C5  F04F         	movff	roundf@y+1,___flge@ff2+1
  7937  001AEA  C0C6  F050         	movff	roundf@y+2,___flge@ff2+2
  7938  001AEE  C0C7  F051         	movff	roundf@y+3,___flge@ff2+3
  7939  001AF2  EC89  F013         	call	___flge	;wreg free
  7940  001AF6  A0D8               	btfss	status,0,c
  7941  001AF8  EF80  F00D         	goto	u5691
  7942  001AFC  EF83  F00D         	goto	u5690
  7943  001B00                     u5691:
  7944  001B00  FFFF               	dw	65535	; assembler added errata NOP
  7945  001B02  EFBA  F00D         	goto	l4761
  7946  001B06                     u5690:
  7947  001B06  FFFF               	dw	65535	; assembler added errata NOP
  7948  001B08  C056  F00E         	movff	roundf@x,___fladd@a
  7949  001B0C  C057  F00F         	movff	roundf@x+1,___fladd@a+1
  7950  001B10  C058  F010         	movff	roundf@x+2,___fladd@a+2
  7951  001B14  C059  F011         	movff	roundf@x+3,___fladd@a+3
  7952  001B18  C0C4  F00A         	movff	roundf@y,___fladd@b
  7953  001B1C  C0C5  F00B         	movff	roundf@y+1,___fladd@b+1
  7954  001B20  C0C6  F00C         	movff	roundf@y+2,___fladd@b+2
  7955  001B24  C0C7  F00D         	movff	roundf@y+3,___fladd@b+3
  7956  001B28  ECE2  F004         	call	___fladd	;wreg free
  7957  001B2C  C00A  F0BC         	movff	?___fladd,_roundf$1689
  7958  001B30  C00B  F0BD         	movff	?___fladd+1,_roundf$1689+1
  7959  001B34  C00C  F0BE         	movff	?___fladd+2,_roundf$1689+2
  7960  001B38  C00D  F0BF         	movff	?___fladd+3,_roundf$1689+3
  7961  001B3C  C0BC  F00A         	movff	_roundf$1689,___fladd@b
  7962  001B40  C0BD  F00B         	movff	_roundf$1689+1,___fladd@b+1
  7963  001B44  C0BE  F00C         	movff	_roundf$1689+2,___fladd@b+2
  7964  001B48  C0BF  F00D         	movff	_roundf$1689+3,___fladd@b+3
  7965  001B4C  0E00               	movlw	0
  7966  001B4E  6E0E               	movwf	___fladd@a^0,c
  7967  001B50  0E00               	movlw	0
  7968  001B52  6E0F               	movwf	(___fladd@a+1)^0,c
  7969  001B54  0E80               	movlw	128
  7970  001B56  6E10               	movwf	(___fladd@a+2)^0,c
  7971  001B58  0E3F               	movlw	63
  7972  001B5A  6E11               	movwf	(___fladd@a+3)^0,c
  7973  001B5C  ECE2  F004         	call	___fladd	;wreg free
  7974  001B60  C00A  F0C4         	movff	?___fladd,roundf@y
  7975  001B64  C00B  F0C5         	movff	?___fladd+1,roundf@y+1
  7976  001B68  C00C  F0C6         	movff	?___fladd+2,roundf@y+2
  7977  001B6C  C00D  F0C7         	movff	?___fladd+3,roundf@y+3
  7978  001B70  EFD5  F00D         	goto	l4763
  7979  001B74                     l4761:
  7980  001B74  FFFF               	dw	65535	; assembler added errata NOP
  7981  001B76  C0C4  F00A         	movff	roundf@y,___fladd@b
  7982  001B7A  C0C5  F00B         	movff	roundf@y+1,___fladd@b+1
  7983  001B7E  C0C6  F00C         	movff	roundf@y+2,___fladd@b+2
  7984  001B82  C0C7  F00D         	movff	roundf@y+3,___fladd@b+3
  7985  001B86  C056  F00E         	movff	roundf@x,___fladd@a
  7986  001B8A  C057  F00F         	movff	roundf@x+1,___fladd@a+1
  7987  001B8E  C058  F010         	movff	roundf@x+2,___fladd@a+2
  7988  001B92  C059  F011         	movff	roundf@x+3,___fladd@a+3
  7989  001B96  ECE2  F004         	call	___fladd	;wreg free
  7990  001B9A  C00A  F0C4         	movff	?___fladd,roundf@y
  7991  001B9E  C00B  F0C5         	movff	?___fladd+1,roundf@y+1
  7992  001BA2  C00C  F0C6         	movff	?___fladd+2,roundf@y+2
  7993  001BA6  C00D  F0C7         	movff	?___fladd+3,roundf@y+3
  7994  001BAA                     l4763:
  7995  001BAA  FFFF               	dw	65535	; assembler added errata NOP
  7996  001BAC  C0C0  F05A         	movff	roundf@u,??_roundf
  7997  001BB0  C0C1  F05B         	movff	roundf@u+1,??_roundf+1
  7998  001BB4  C0C2  F05C         	movff	roundf@u+2,??_roundf+2
  7999  001BB8  C0C3  F05D         	movff	roundf@u+3,??_roundf+3
  8000  001BBC  0E20               	movlw	32
  8001  001BBE  EFE7  F00D         	goto	u5700
  8002  001BC2                     u5705:
  8003  001BC2  FFFF               	dw	65535	; assembler added errata NOP
  8004  001BC4  90D8               	bcf	status,0,c
  8005  001BC6  325D               	rrcf	(??_roundf+3)^0,f,c
  8006  001BC8  325C               	rrcf	(??_roundf+2)^0,f,c
  8007  001BCA  325B               	rrcf	(??_roundf+1)^0,f,c
  8008  001BCC  325A               	rrcf	??_roundf^0,f,c
  8009  001BCE                     u5700:
  8010  001BCE  FFFF               	dw	65535	; assembler added errata NOP
  8011  001BD0  2EE8               	decfsz	wreg,f,c
  8012  001BD2  EFE1  F00D         	goto	u5705
  8013  001BD6  505A               	movf	??_roundf^0,w,c
  8014  001BD8  105B               	iorwf	(??_roundf+1)^0,w,c
  8015  001BDA  105C               	iorwf	(??_roundf+2)^0,w,c
  8016  001BDC  105D               	iorwf	(??_roundf+3)^0,w,c
  8017  001BDE  B4D8               	btfsc	status,2,c
  8018  001BE0  EFF4  F00D         	goto	u5711
  8019  001BE4  EFF7  F00D         	goto	u5710
  8020  001BE8                     u5711:
  8021  001BE8  FFFF               	dw	65535	; assembler added errata NOP
  8022  001BEA  EF0A  F00E         	goto	l4767
  8023  001BEE                     u5710:
  8024  001BEE  FFFF               	dw	65535	; assembler added errata NOP
  8025  001BF0  C0C4  F00A         	movff	roundf@y,___flneg@f1
  8026  001BF4  C0C5  F00B         	movff	roundf@y+1,___flneg@f1+1
  8027  001BF8  C0C6  F00C         	movff	roundf@y+2,___flneg@f1+2
  8028  001BFC  C0C7  F00D         	movff	roundf@y+3,___flneg@f1+3
  8029  001C00  ECD3  F019         	call	___flneg	;wreg free
  8030  001C04  C00A  F0C4         	movff	?___flneg,roundf@y
  8031  001C08  C00B  F0C5         	movff	?___flneg+1,roundf@y+1
  8032  001C0C  C00C  F0C6         	movff	?___flneg+2,roundf@y+2
  8033  001C10  C00D  F0C7         	movff	?___flneg+3,roundf@y+3
  8034  001C14                     l4767:
  8035  001C14  FFFF               	dw	65535	; assembler added errata NOP
  8036  001C16  C0C4  F056         	movff	roundf@y,?_roundf
  8037  001C1A  C0C5  F057         	movff	roundf@y+1,?_roundf+1
  8038  001C1E  C0C6  F058         	movff	roundf@y+2,?_roundf+2
  8039  001C22  C0C7  F059         	movff	roundf@y+3,?_roundf+3
  8040  001C26                     l1249:
  8041  001C26  FFFF               	dw	65535	; assembler added errata NOP
  8042  001C28  0012               	return		;funcret
  8043  001C2A  FFFF               	dw	65535	; errata NOP
  8044  001C2C                     __end_of_roundf:
  8045                           	callstack 0
  8046                           
  8047 ;; *************** function ___flsub *****************
  8048 ;; Defined at:
  8049 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  b               4   25[COMRAM] float 
  8052 ;;  a               4   29[COMRAM] float 
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;		None
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  4   25[COMRAM] float 
  8057 ;; Registers used:
  8058 ;;		wreg, status,2, status,0, cstack
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8064 ;;      Params:         8       0       0       0       0       0       0
  8065 ;;      Locals:         0       0       0       0       0       0       0
  8066 ;;      Temps:          0       0       0       0       0       0       0
  8067 ;;      Totals:         8       0       0       0       0       0       0
  8068 ;;Total ram usage:        8 bytes
  8069 ;; Hardware stack levels used: 1
  8070 ;; Hardware stack levels required when called: 3
  8071 ;; This function calls:
  8072 ;;		___fladd
  8073 ;; This function is called by:
  8074 ;;		_roundf
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text32
  8079  003290                     __ptext32:
  8080                           	callstack 0
  8081  003290                     ___flsub:
  8082                           	callstack 0
  8083  003290  FFFF               	dw	65535	; assembler added errata NOP
  8084  003292  0E00               	movlw	0
  8085  003294  1A1E               	xorwf	___flsub@a^0,f,c
  8086  003296  0E00               	movlw	0
  8087  003298  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  8088  00329A  0E00               	movlw	0
  8089  00329C  1A20               	xorwf	(___flsub@a+2)^0,f,c
  8090  00329E  0E80               	movlw	128
  8091  0032A0  1A21               	xorwf	(___flsub@a+3)^0,f,c
  8092  0032A2  C01A  F00A         	movff	___flsub@b,___fladd@b
  8093  0032A6  C01B  F00B         	movff	___flsub@b+1,___fladd@b+1
  8094  0032AA  C01C  F00C         	movff	___flsub@b+2,___fladd@b+2
  8095  0032AE  C01D  F00D         	movff	___flsub@b+3,___fladd@b+3
  8096  0032B2  C01E  F00E         	movff	___flsub@a,___fladd@a
  8097  0032B6  C01F  F00F         	movff	___flsub@a+1,___fladd@a+1
  8098  0032BA  C020  F010         	movff	___flsub@a+2,___fladd@a+2
  8099  0032BE  C021  F011         	movff	___flsub@a+3,___fladd@a+3
  8100  0032C2  ECE2  F004         	call	___fladd	;wreg free
  8101  0032C6  C00A  F01A         	movff	?___fladd,?___flsub
  8102  0032CA  C00B  F01B         	movff	?___fladd+1,?___flsub+1
  8103  0032CE  C00C  F01C         	movff	?___fladd+2,?___flsub+2
  8104  0032D2  C00D  F01D         	movff	?___fladd+3,?___flsub+3
  8105  0032D6  0012               	return		;funcret
  8106  0032D8  FFFF               	dw	65535	; errata NOP
  8107  0032DA                     __end_of___flsub:
  8108                           	callstack 0
  8109                           
  8110 ;; *************** function ___fladd *****************
  8111 ;; Defined at:
  8112 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;  b               4    9[COMRAM] float 
  8115 ;;  a               4   13[COMRAM] float 
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;  grs             1   24[COMRAM] unsigned char 
  8118 ;;  bexp            1   23[COMRAM] unsigned char 
  8119 ;;  aexp            1   22[COMRAM] unsigned char 
  8120 ;;  signs           1   21[COMRAM] unsigned char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  4    9[COMRAM] unsigned char 
  8123 ;; Registers used:
  8124 ;;		wreg, status,2, status,0
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8130 ;;      Params:         8       0       0       0       0       0       0
  8131 ;;      Locals:         4       0       0       0       0       0       0
  8132 ;;      Temps:          4       0       0       0       0       0       0
  8133 ;;      Totals:        16       0       0       0       0       0       0
  8134 ;;Total ram usage:       16 bytes
  8135 ;; Hardware stack levels used: 1
  8136 ;; Hardware stack levels required when called: 2
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		___flsub
  8141 ;;		_roundf
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           	psect	text33
  8146  0009C4                     __ptext33:
  8147                           	callstack 0
  8148  0009C4                     ___fladd:
  8149                           	callstack 0
  8150  0009C4  FFFF               	dw	65535	; assembler added errata NOP
  8151  0009C6  500D               	movf	(___fladd@b+3)^0,w,c
  8152  0009C8  0B80               	andlw	128
  8153  0009CA  6E16               	movwf	___fladd@signs^0,c
  8154  0009CC  500D               	movf	(___fladd@b+3)^0,w,c
  8155  0009CE  240D               	addwf	(___fladd@b+3)^0,w,c
  8156  0009D0  6E18               	movwf	___fladd@bexp^0,c
  8157  0009D2  AE0C               	btfss	(___fladd@b+2)^0,7,c
  8158  0009D4  EFEE  F004         	goto	u4991
  8159  0009D8  EFF1  F004         	goto	u4990
  8160  0009DC                     u4991:
  8161  0009DC  FFFF               	dw	65535	; assembler added errata NOP
  8162  0009DE  EFF3  F004         	goto	l4375
  8163  0009E2                     u4990:
  8164  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  8165  0009E4  8018               	bsf	___fladd@bexp^0,0,c
  8166  0009E6                     l4375:
  8167  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  8168  0009E8  5018               	movf	___fladd@bexp^0,w,c
  8169  0009EA  B4D8               	btfsc	status,2,c
  8170  0009EC  EFFA  F004         	goto	u5001
  8171  0009F0  EFFD  F004         	goto	u5000
  8172  0009F4                     u5001:
  8173  0009F4  FFFF               	dw	65535	; assembler added errata NOP
  8174  0009F6  EF16  F005         	goto	l4385
  8175  0009FA                     u5000:
  8176  0009FA  FFFF               	dw	65535	; assembler added errata NOP
  8177  0009FC  2818               	incf	___fladd@bexp^0,w,c
  8178  0009FE  A4D8               	btfss	status,2,c
  8179  000A00  EF04  F005         	goto	u5011
  8180  000A04  EF07  F005         	goto	u5010
  8181  000A08                     u5011:
  8182  000A08  FFFF               	dw	65535	; assembler added errata NOP
  8183  000A0A  EF10  F005         	goto	l4381
  8184  000A0E                     u5010:
  8185  000A0E  FFFF               	dw	65535	; assembler added errata NOP
  8186  000A10  0E00               	movlw	0
  8187  000A12  6E0A               	movwf	___fladd@b^0,c
  8188  000A14  0E00               	movlw	0
  8189  000A16  6E0B               	movwf	(___fladd@b+1)^0,c
  8190  000A18  0E00               	movlw	0
  8191  000A1A  6E0C               	movwf	(___fladd@b+2)^0,c
  8192  000A1C  0E00               	movlw	0
  8193  000A1E  6E0D               	movwf	(___fladd@b+3)^0,c
  8194  000A20                     l4381:
  8195  000A20  FFFF               	dw	65535	; assembler added errata NOP
  8196  000A22  8E0C               	bsf	(___fladd@b+2)^0,7,c
  8197  000A24  0E00               	movlw	0
  8198  000A26  6E0D               	movwf	(___fladd@b+3)^0,c
  8199  000A28  EF1F  F005         	goto	l4387
  8200  000A2C                     l4385:
  8201  000A2C  FFFF               	dw	65535	; assembler added errata NOP
  8202  000A2E  0E00               	movlw	0
  8203  000A30  6E0A               	movwf	___fladd@b^0,c
  8204  000A32  0E00               	movlw	0
  8205  000A34  6E0B               	movwf	(___fladd@b+1)^0,c
  8206  000A36  0E00               	movlw	0
  8207  000A38  6E0C               	movwf	(___fladd@b+2)^0,c
  8208  000A3A  0E00               	movlw	0
  8209  000A3C  6E0D               	movwf	(___fladd@b+3)^0,c
  8210  000A3E                     l4387:
  8211  000A3E  FFFF               	dw	65535	; assembler added errata NOP
  8212  000A40  5011               	movf	(___fladd@a+3)^0,w,c
  8213  000A42  0B80               	andlw	128
  8214  000A44  6E17               	movwf	___fladd@aexp^0,c
  8215  000A46  5016               	movf	___fladd@signs^0,w,c
  8216  000A48  1817               	xorwf	___fladd@aexp^0,w,c
  8217  000A4A  B4D8               	btfsc	status,2,c
  8218  000A4C  EF2A  F005         	goto	u5021
  8219  000A50  EF2D  F005         	goto	u5020
  8220  000A54                     u5021:
  8221  000A54  FFFF               	dw	65535	; assembler added errata NOP
  8222  000A56  EF2F  F005         	goto	l4393
  8223  000A5A                     u5020:
  8224  000A5A  FFFF               	dw	65535	; assembler added errata NOP
  8225  000A5C  8C16               	bsf	___fladd@signs^0,6,c
  8226  000A5E                     l4393:
  8227  000A5E  FFFF               	dw	65535	; assembler added errata NOP
  8228  000A60  5011               	movf	(___fladd@a+3)^0,w,c
  8229  000A62  2411               	addwf	(___fladd@a+3)^0,w,c
  8230  000A64  6E17               	movwf	___fladd@aexp^0,c
  8231  000A66  AE10               	btfss	(___fladd@a+2)^0,7,c
  8232  000A68  EF38  F005         	goto	u5031
  8233  000A6C  EF3B  F005         	goto	u5030
  8234  000A70                     u5031:
  8235  000A70  FFFF               	dw	65535	; assembler added errata NOP
  8236  000A72  EF3D  F005         	goto	l4399
  8237  000A76                     u5030:
  8238  000A76  FFFF               	dw	65535	; assembler added errata NOP
  8239  000A78  8017               	bsf	___fladd@aexp^0,0,c
  8240  000A7A                     l4399:
  8241  000A7A  FFFF               	dw	65535	; assembler added errata NOP
  8242  000A7C  5017               	movf	___fladd@aexp^0,w,c
  8243  000A7E  B4D8               	btfsc	status,2,c
  8244  000A80  EF44  F005         	goto	u5041
  8245  000A84  EF47  F005         	goto	u5040
  8246  000A88                     u5041:
  8247  000A88  FFFF               	dw	65535	; assembler added errata NOP
  8248  000A8A  EF60  F005         	goto	l4409
  8249  000A8E                     u5040:
  8250  000A8E  FFFF               	dw	65535	; assembler added errata NOP
  8251  000A90  2817               	incf	___fladd@aexp^0,w,c
  8252  000A92  A4D8               	btfss	status,2,c
  8253  000A94  EF4E  F005         	goto	u5051
  8254  000A98  EF51  F005         	goto	u5050
  8255  000A9C                     u5051:
  8256  000A9C  FFFF               	dw	65535	; assembler added errata NOP
  8257  000A9E  EF5A  F005         	goto	l4405
  8258  000AA2                     u5050:
  8259  000AA2  FFFF               	dw	65535	; assembler added errata NOP
  8260  000AA4  0E00               	movlw	0
  8261  000AA6  6E0E               	movwf	___fladd@a^0,c
  8262  000AA8  0E00               	movlw	0
  8263  000AAA  6E0F               	movwf	(___fladd@a+1)^0,c
  8264  000AAC  0E00               	movlw	0
  8265  000AAE  6E10               	movwf	(___fladd@a+2)^0,c
  8266  000AB0  0E00               	movlw	0
  8267  000AB2  6E11               	movwf	(___fladd@a+3)^0,c
  8268  000AB4                     l4405:
  8269  000AB4  FFFF               	dw	65535	; assembler added errata NOP
  8270  000AB6  8E10               	bsf	(___fladd@a+2)^0,7,c
  8271  000AB8  0E00               	movlw	0
  8272  000ABA  6E11               	movwf	(___fladd@a+3)^0,c
  8273  000ABC  EF69  F005         	goto	l4411
  8274  000AC0                     l4409:
  8275  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  8276  000AC2  0E00               	movlw	0
  8277  000AC4  6E0E               	movwf	___fladd@a^0,c
  8278  000AC6  0E00               	movlw	0
  8279  000AC8  6E0F               	movwf	(___fladd@a+1)^0,c
  8280  000ACA  0E00               	movlw	0
  8281  000ACC  6E10               	movwf	(___fladd@a+2)^0,c
  8282  000ACE  0E00               	movlw	0
  8283  000AD0  6E11               	movwf	(___fladd@a+3)^0,c
  8284  000AD2                     l4411:
  8285  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  8286  000AD4  5018               	movf	___fladd@bexp^0,w,c
  8287  000AD6  5C17               	subwf	___fladd@aexp^0,w,c
  8288  000AD8  B0D8               	btfsc	status,0,c
  8289  000ADA  EF71  F005         	goto	u5061
  8290  000ADE  EF74  F005         	goto	u5060
  8291  000AE2                     u5061:
  8292  000AE2  FFFF               	dw	65535	; assembler added errata NOP
  8293  000AE4  EF9F  F005         	goto	l4447
  8294  000AE8                     u5060:
  8295  000AE8  FFFF               	dw	65535	; assembler added errata NOP
  8296  000AEA  AC16               	btfss	___fladd@signs^0,6,c
  8297  000AEC  EF7A  F005         	goto	u5071
  8298  000AF0  EF7D  F005         	goto	u5070
  8299  000AF4                     u5071:
  8300  000AF4  FFFF               	dw	65535	; assembler added errata NOP
  8301  000AF6  EF80  F005         	goto	l4417
  8302  000AFA                     u5070:
  8303  000AFA  FFFF               	dw	65535	; assembler added errata NOP
  8304  000AFC  0E80               	movlw	128
  8305  000AFE  1A16               	xorwf	___fladd@signs^0,f,c
  8306  000B00                     l4417:
  8307  000B00  FFFF               	dw	65535	; assembler added errata NOP
  8308  000B02  C018  F019         	movff	___fladd@bexp,___fladd@grs
  8309  000B06  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  8310  000B0A  C019  F017         	movff	___fladd@grs,___fladd@aexp
  8311  000B0E  C00A  F019         	movff	___fladd@b,___fladd@grs
  8312  000B12  C00E  F00A         	movff	___fladd@a,___fladd@b
  8313  000B16  C019  F00E         	movff	___fladd@grs,___fladd@a
  8314  000B1A  C00B  F019         	movff	___fladd@b+1,___fladd@grs
  8315  000B1E  C00F  F00B         	movff	___fladd@a+1,___fladd@b+1
  8316  000B22  C019  F00F         	movff	___fladd@grs,___fladd@a+1
  8317  000B26  C00C  F019         	movff	___fladd@b+2,___fladd@grs
  8318  000B2A  C010  F00C         	movff	___fladd@a+2,___fladd@b+2
  8319  000B2E  C019  F010         	movff	___fladd@grs,___fladd@a+2
  8320  000B32  C00D  F019         	movff	___fladd@b+3,___fladd@grs
  8321  000B36  C011  F00D         	movff	___fladd@a+3,___fladd@b+3
  8322  000B3A  C019  F011         	movff	___fladd@grs,___fladd@a+3
  8323  000B3E                     l4447:
  8324  000B3E  FFFF               	dw	65535	; assembler added errata NOP
  8325  000B40  0E00               	movlw	0
  8326  000B42  6E19               	movwf	___fladd@grs^0,c
  8327  000B44  5018               	movf	___fladd@bexp^0,w,c
  8328  000B46  C017  F012         	movff	___fladd@aexp,??___fladd
  8329  000B4A  6A13               	clrf	(??___fladd+1)^0,c
  8330  000B4C  5E12               	subwf	??___fladd^0,f,c
  8331  000B4E  0E00               	movlw	0
  8332  000B50  5A13               	subwfb	(??___fladd+1)^0,f,c
  8333  000B52  BE13               	btfsc	(??___fladd+1)^0,7,c
  8334  000B54  EFB5  F005         	goto	u5081
  8335  000B58  5013               	movf	(??___fladd+1)^0,w,c
  8336  000B5A  E10A               	bnz	u5080
  8337  000B5C  0E1A               	movlw	26
  8338  000B5E  5C12               	subwf	??___fladd^0,w,c
  8339  000B60  A0D8               	btfss	status,0,c
  8340  000B62  EFB5  F005         	goto	u5081
  8341  000B66  EFB8  F005         	goto	u5080
  8342  000B6A                     u5081:
  8343  000B6A  FFFF               	dw	65535	; assembler added errata NOP
  8344  000B6C  EFFB  F005         	goto	l1044
  8345  000B70                     u5080:
  8346  000B70  FFFF               	dw	65535	; assembler added errata NOP
  8347  000B72  500A               	movf	___fladd@b^0,w,c
  8348  000B74  100B               	iorwf	(___fladd@b+1)^0,w,c
  8349  000B76  100C               	iorwf	(___fladd@b+2)^0,w,c
  8350  000B78  100D               	iorwf	(___fladd@b+3)^0,w,c
  8351  000B7A  A4D8               	btfss	status,2,c
  8352  000B7C  EFC2  F005         	goto	u5091
  8353  000B80  EFC6  F005         	goto	u5090
  8354  000B84                     u5091:
  8355  000B84  FFFF               	dw	65535	; assembler added errata NOP
  8356  000B86  0E01               	movlw	1
  8357  000B88  EFC8  F005         	goto	u5100
  8358  000B8C                     u5090:
  8359  000B8C  FFFF               	dw	65535	; assembler added errata NOP
  8360  000B8E  0E00               	movlw	0
  8361  000B90                     u5100:
  8362  000B90  FFFF               	dw	65535	; assembler added errata NOP
  8363  000B92  6E19               	movwf	___fladd@grs^0,c
  8364  000B94  0E00               	movlw	0
  8365  000B96  6E0A               	movwf	___fladd@b^0,c
  8366  000B98  0E00               	movlw	0
  8367  000B9A  6E0B               	movwf	(___fladd@b+1)^0,c
  8368  000B9C  0E00               	movlw	0
  8369  000B9E  6E0C               	movwf	(___fladd@b+2)^0,c
  8370  000BA0  0E00               	movlw	0
  8371  000BA2  6E0D               	movwf	(___fladd@b+3)^0,c
  8372  000BA4  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  8373  000BA8  EF06  F006         	goto	l1043
  8374  000BAC                     l1045:
  8375  000BAC  FFFF               	dw	65535	; assembler added errata NOP
  8376  000BAE  A019               	btfss	___fladd@grs^0,0,c
  8377  000BB0  EFDC  F005         	goto	u5111
  8378  000BB4  EFDF  F005         	goto	u5110
  8379  000BB8                     u5111:
  8380  000BB8  FFFF               	dw	65535	; assembler added errata NOP
  8381  000BBA  EFE6  F005         	goto	l4459
  8382  000BBE                     u5110:
  8383  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  8384  000BC0  90D8               	bcf	status,0,c
  8385  000BC2  3019               	rrcf	___fladd@grs^0,w,c
  8386  000BC4  0901               	iorlw	1
  8387  000BC6  6E19               	movwf	___fladd@grs^0,c
  8388  000BC8  EFE9  F005         	goto	l4461
  8389  000BCC                     l4459:
  8390  000BCC  FFFF               	dw	65535	; assembler added errata NOP
  8391  000BCE  90D8               	bcf	status,0,c
  8392  000BD0  3219               	rrcf	___fladd@grs^0,f,c
  8393  000BD2                     l4461:
  8394  000BD2  FFFF               	dw	65535	; assembler added errata NOP
  8395  000BD4  A00A               	btfss	___fladd@b^0,0,c
  8396  000BD6  EFEF  F005         	goto	u5121
  8397  000BDA  EFF2  F005         	goto	u5120
  8398  000BDE                     u5121:
  8399  000BDE  FFFF               	dw	65535	; assembler added errata NOP
  8400  000BE0  EFF4  F005         	goto	l4465
  8401  000BE4                     u5120:
  8402  000BE4  FFFF               	dw	65535	; assembler added errata NOP
  8403  000BE6  8E19               	bsf	___fladd@grs^0,7,c
  8404  000BE8                     l4465:
  8405  000BE8  FFFF               	dw	65535	; assembler added errata NOP
  8406  000BEA  340D               	rlcf	(___fladd@b+3)^0,w,c
  8407  000BEC  320D               	rrcf	(___fladd@b+3)^0,f,c
  8408  000BEE  320C               	rrcf	(___fladd@b+2)^0,f,c
  8409  000BF0  320B               	rrcf	(___fladd@b+1)^0,f,c
  8410  000BF2  320A               	rrcf	___fladd@b^0,f,c
  8411  000BF4  2A18               	incf	___fladd@bexp^0,f,c
  8412  000BF6                     l1044:
  8413  000BF6  FFFF               	dw	65535	; assembler added errata NOP
  8414  000BF8  5017               	movf	___fladd@aexp^0,w,c
  8415  000BFA  5C18               	subwf	___fladd@bexp^0,w,c
  8416  000BFC  A0D8               	btfss	status,0,c
  8417  000BFE  EF03  F006         	goto	u5131
  8418  000C02  EF06  F006         	goto	u5130
  8419  000C06                     u5131:
  8420  000C06  FFFF               	dw	65535	; assembler added errata NOP
  8421  000C08  EFD6  F005         	goto	l1045
  8422  000C0C                     u5130:
  8423  000C0C                     l1043:
  8424  000C0C  FFFF               	dw	65535	; assembler added errata NOP
  8425  000C0E  BC16               	btfsc	___fladd@signs^0,6,c
  8426  000C10  EF0C  F006         	goto	u5141
  8427  000C14  EF0F  F006         	goto	u5140
  8428  000C18                     u5141:
  8429  000C18  FFFF               	dw	65535	; assembler added errata NOP
  8430  000C1A  EF5C  F006         	goto	l4493
  8431  000C1E                     u5140:
  8432  000C1E  FFFF               	dw	65535	; assembler added errata NOP
  8433  000C20  5018               	movf	___fladd@bexp^0,w,c
  8434  000C22  A4D8               	btfss	status,2,c
  8435  000C24  EF16  F006         	goto	u5151
  8436  000C28  EF19  F006         	goto	u5150
  8437  000C2C                     u5151:
  8438  000C2C  FFFF               	dw	65535	; assembler added errata NOP
  8439  000C2E  EF24  F006         	goto	l4475
  8440  000C32                     u5150:
  8441  000C32  FFFF               	dw	65535	; assembler added errata NOP
  8442  000C34  0E00               	movlw	0
  8443  000C36  6E0A               	movwf	?___fladd^0,c
  8444  000C38  0E00               	movlw	0
  8445  000C3A  6E0B               	movwf	(?___fladd+1)^0,c
  8446  000C3C  0E00               	movlw	0
  8447  000C3E  6E0C               	movwf	(?___fladd+2)^0,c
  8448  000C40  0E00               	movlw	0
  8449  000C42  6E0D               	movwf	(?___fladd+3)^0,c
  8450  000C44  EFB3  F007         	goto	l1052
  8451  000C48                     l4475:
  8452  000C48  FFFF               	dw	65535	; assembler added errata NOP
  8453  000C4A  500E               	movf	___fladd@a^0,w,c
  8454  000C4C  260A               	addwf	___fladd@b^0,f,c
  8455  000C4E  500F               	movf	(___fladd@a+1)^0,w,c
  8456  000C50  220B               	addwfc	(___fladd@b+1)^0,f,c
  8457  000C52  5010               	movf	(___fladd@a+2)^0,w,c
  8458  000C54  220C               	addwfc	(___fladd@b+2)^0,f,c
  8459  000C56  5011               	movf	(___fladd@a+3)^0,w,c
  8460  000C58  220D               	addwfc	(___fladd@b+3)^0,f,c
  8461  000C5A  A00D               	btfss	(___fladd@b+3)^0,0,c
  8462  000C5C  EF32  F006         	goto	u5161
  8463  000C60  EF35  F006         	goto	u5160
  8464  000C64                     u5161:
  8465  000C64  FFFF               	dw	65535	; assembler added errata NOP
  8466  000C66  EF00  F007         	goto	l4529
  8467  000C6A                     u5160:
  8468  000C6A  FFFF               	dw	65535	; assembler added errata NOP
  8469  000C6C  A019               	btfss	___fladd@grs^0,0,c
  8470  000C6E  EF3B  F006         	goto	u5171
  8471  000C72  EF3E  F006         	goto	u5170
  8472  000C76                     u5171:
  8473  000C76  FFFF               	dw	65535	; assembler added errata NOP
  8474  000C78  EF45  F006         	goto	l4483
  8475  000C7C                     u5170:
  8476  000C7C  FFFF               	dw	65535	; assembler added errata NOP
  8477  000C7E  90D8               	bcf	status,0,c
  8478  000C80  3019               	rrcf	___fladd@grs^0,w,c
  8479  000C82  0901               	iorlw	1
  8480  000C84  6E19               	movwf	___fladd@grs^0,c
  8481  000C86  EF48  F006         	goto	l4485
  8482  000C8A                     l4483:
  8483  000C8A  FFFF               	dw	65535	; assembler added errata NOP
  8484  000C8C  90D8               	bcf	status,0,c
  8485  000C8E  3219               	rrcf	___fladd@grs^0,f,c
  8486  000C90                     l4485:
  8487  000C90  FFFF               	dw	65535	; assembler added errata NOP
  8488  000C92  A00A               	btfss	___fladd@b^0,0,c
  8489  000C94  EF4E  F006         	goto	u5181
  8490  000C98  EF51  F006         	goto	u5180
  8491  000C9C                     u5181:
  8492  000C9C  FFFF               	dw	65535	; assembler added errata NOP
  8493  000C9E  EF53  F006         	goto	l4489
  8494  000CA2                     u5180:
  8495  000CA2  FFFF               	dw	65535	; assembler added errata NOP
  8496  000CA4  8E19               	bsf	___fladd@grs^0,7,c
  8497  000CA6                     l4489:
  8498  000CA6  FFFF               	dw	65535	; assembler added errata NOP
  8499  000CA8  340D               	rlcf	(___fladd@b+3)^0,w,c
  8500  000CAA  320D               	rrcf	(___fladd@b+3)^0,f,c
  8501  000CAC  320C               	rrcf	(___fladd@b+2)^0,f,c
  8502  000CAE  320B               	rrcf	(___fladd@b+1)^0,f,c
  8503  000CB0  320A               	rrcf	___fladd@b^0,f,c
  8504  000CB2  2A18               	incf	___fladd@bexp^0,f,c
  8505  000CB4  EF00  F007         	goto	l4529
  8506  000CB8                     l4493:
  8507  000CB8  FFFF               	dw	65535	; assembler added errata NOP
  8508  000CBA  500E               	movf	___fladd@a^0,w,c
  8509  000CBC  5C0A               	subwf	___fladd@b^0,w,c
  8510  000CBE  500F               	movf	(___fladd@a+1)^0,w,c
  8511  000CC0  580B               	subwfb	(___fladd@b+1)^0,w,c
  8512  000CC2  5010               	movf	(___fladd@a+2)^0,w,c
  8513  000CC4  580C               	subwfb	(___fladd@b+2)^0,w,c
  8514  000CC6  500D               	movf	(___fladd@b+3)^0,w,c
  8515  000CC8  0A80               	xorlw	128
  8516  000CCA  6E12               	movwf	??___fladd^0,c
  8517  000CCC  5011               	movf	(___fladd@a+3)^0,w,c
  8518  000CCE  0A80               	xorlw	128
  8519  000CD0  5812               	subwfb	??___fladd^0,w,c
  8520  000CD2  B0D8               	btfsc	status,0,c
  8521  000CD4  EF6E  F006         	goto	u5191
  8522  000CD8  EF71  F006         	goto	u5190
  8523  000CDC                     u5191:
  8524  000CDC  FFFF               	dw	65535	; assembler added errata NOP
  8525  000CDE  EF9F  F006         	goto	l4503
  8526  000CE2                     u5190:
  8527  000CE2  FFFF               	dw	65535	; assembler added errata NOP
  8528  000CE4  500A               	movf	___fladd@b^0,w,c
  8529  000CE6  5C0E               	subwf	___fladd@a^0,w,c
  8530  000CE8  6E12               	movwf	??___fladd^0,c
  8531  000CEA  500B               	movf	(___fladd@b+1)^0,w,c
  8532  000CEC  580F               	subwfb	(___fladd@a+1)^0,w,c
  8533  000CEE  6E13               	movwf	(??___fladd+1)^0,c
  8534  000CF0  500C               	movf	(___fladd@b+2)^0,w,c
  8535  000CF2  5810               	subwfb	(___fladd@a+2)^0,w,c
  8536  000CF4  6E14               	movwf	(??___fladd+2)^0,c
  8537  000CF6  500D               	movf	(___fladd@b+3)^0,w,c
  8538  000CF8  5811               	subwfb	(___fladd@a+3)^0,w,c
  8539  000CFA  6E15               	movwf	(??___fladd+3)^0,c
  8540  000CFC  0EFF               	movlw	255
  8541  000CFE  2412               	addwf	??___fladd^0,w,c
  8542  000D00  6E0A               	movwf	___fladd@b^0,c
  8543  000D02  0EFF               	movlw	255
  8544  000D04  2013               	addwfc	(??___fladd+1)^0,w,c
  8545  000D06  6E0B               	movwf	(___fladd@b+1)^0,c
  8546  000D08  0EFF               	movlw	255
  8547  000D0A  2014               	addwfc	(??___fladd+2)^0,w,c
  8548  000D0C  6E0C               	movwf	(___fladd@b+2)^0,c
  8549  000D0E  0EFF               	movlw	255
  8550  000D10  2015               	addwfc	(??___fladd+3)^0,w,c
  8551  000D12  6E0D               	movwf	(___fladd@b+3)^0,c
  8552  000D14  0E80               	movlw	128
  8553  000D16  1A16               	xorwf	___fladd@signs^0,f,c
  8554  000D18  6C19               	negf	___fladd@grs^0,c
  8555  000D1A  5019               	movf	___fladd@grs^0,w,c
  8556  000D1C  A4D8               	btfss	status,2,c
  8557  000D1E  EF93  F006         	goto	u5201
  8558  000D22  EF96  F006         	goto	u5200
  8559  000D26                     u5201:
  8560  000D26  FFFF               	dw	65535	; assembler added errata NOP
  8561  000D28  EFA8  F006         	goto	l1060
  8562  000D2C                     u5200:
  8563  000D2C  FFFF               	dw	65535	; assembler added errata NOP
  8564  000D2E  0E01               	movlw	1
  8565  000D30  260A               	addwf	___fladd@b^0,f,c
  8566  000D32  0E00               	movlw	0
  8567  000D34  220B               	addwfc	(___fladd@b+1)^0,f,c
  8568  000D36  220C               	addwfc	(___fladd@b+2)^0,f,c
  8569  000D38  220D               	addwfc	(___fladd@b+3)^0,f,c
  8570  000D3A  EFA8  F006         	goto	l1060
  8571  000D3E                     l4503:
  8572  000D3E  FFFF               	dw	65535	; assembler added errata NOP
  8573  000D40  500E               	movf	___fladd@a^0,w,c
  8574  000D42  5E0A               	subwf	___fladd@b^0,f,c
  8575  000D44  500F               	movf	(___fladd@a+1)^0,w,c
  8576  000D46  5A0B               	subwfb	(___fladd@b+1)^0,f,c
  8577  000D48  5010               	movf	(___fladd@a+2)^0,w,c
  8578  000D4A  5A0C               	subwfb	(___fladd@b+2)^0,f,c
  8579  000D4C  5011               	movf	(___fladd@a+3)^0,w,c
  8580  000D4E  5A0D               	subwfb	(___fladd@b+3)^0,f,c
  8581  000D50                     l1060:
  8582  000D50  FFFF               	dw	65535	; assembler added errata NOP
  8583  000D52  500A               	movf	___fladd@b^0,w,c
  8584  000D54  100B               	iorwf	(___fladd@b+1)^0,w,c
  8585  000D56  100C               	iorwf	(___fladd@b+2)^0,w,c
  8586  000D58  100D               	iorwf	(___fladd@b+3)^0,w,c
  8587  000D5A  A4D8               	btfss	status,2,c
  8588  000D5C  EFB2  F006         	goto	u5211
  8589  000D60  EFB5  F006         	goto	u5210
  8590  000D64                     u5211:
  8591  000D64  FFFF               	dw	65535	; assembler added errata NOP
  8592  000D66  EFF7  F006         	goto	l4527
  8593  000D6A                     u5210:
  8594  000D6A  FFFF               	dw	65535	; assembler added errata NOP
  8595  000D6C  5019               	movf	___fladd@grs^0,w,c
  8596  000D6E  A4D8               	btfss	status,2,c
  8597  000D70  EFBC  F006         	goto	u5221
  8598  000D74  EFBF  F006         	goto	u5220
  8599  000D78                     u5221:
  8600  000D78  FFFF               	dw	65535	; assembler added errata NOP
  8601  000D7A  EFF7  F006         	goto	l4527
  8602  000D7E                     u5220:
  8603  000D7E  FFFF               	dw	65535	; assembler added errata NOP
  8604  000D80  0E00               	movlw	0
  8605  000D82  6E0A               	movwf	?___fladd^0,c
  8606  000D84  0E00               	movlw	0
  8607  000D86  6E0B               	movwf	(?___fladd+1)^0,c
  8608  000D88  0E00               	movlw	0
  8609  000D8A  6E0C               	movwf	(?___fladd+2)^0,c
  8610  000D8C  0E00               	movlw	0
  8611  000D8E  6E0D               	movwf	(?___fladd+3)^0,c
  8612  000D90  EFB3  F007         	goto	l1052
  8613  000D94                     l4511:
  8614  000D94  FFFF               	dw	65535	; assembler added errata NOP
  8615  000D96  90D8               	bcf	status,0,c
  8616  000D98  360A               	rlcf	___fladd@b^0,f,c
  8617  000D9A  360B               	rlcf	(___fladd@b+1)^0,f,c
  8618  000D9C  360C               	rlcf	(___fladd@b+2)^0,f,c
  8619  000D9E  360D               	rlcf	(___fladd@b+3)^0,f,c
  8620  000DA0  AE19               	btfss	___fladd@grs^0,7,c
  8621  000DA2  EFD5  F006         	goto	u5231
  8622  000DA6  EFD8  F006         	goto	u5230
  8623  000DAA                     u5231:
  8624  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  8625  000DAC  EFDA  F006         	goto	l4517
  8626  000DB0                     u5230:
  8627  000DB0  FFFF               	dw	65535	; assembler added errata NOP
  8628  000DB2  800A               	bsf	___fladd@b^0,0,c
  8629  000DB4                     l4517:
  8630  000DB4  FFFF               	dw	65535	; assembler added errata NOP
  8631  000DB6  A019               	btfss	___fladd@grs^0,0,c
  8632  000DB8  EFE0  F006         	goto	u5241
  8633  000DBC  EFE3  F006         	goto	u5240
  8634  000DC0                     u5241:
  8635  000DC0  FFFF               	dw	65535	; assembler added errata NOP
  8636  000DC2  EFE8  F006         	goto	l4521
  8637  000DC6                     u5240:
  8638  000DC6  FFFF               	dw	65535	; assembler added errata NOP
  8639  000DC8  80D8               	bsf	status,0,c
  8640  000DCA  3619               	rlcf	___fladd@grs^0,f,c
  8641  000DCC  EFEB  F006         	goto	l4523
  8642  000DD0                     l4521:
  8643  000DD0  FFFF               	dw	65535	; assembler added errata NOP
  8644  000DD2  90D8               	bcf	status,0,c
  8645  000DD4  3619               	rlcf	___fladd@grs^0,f,c
  8646  000DD6                     l4523:
  8647  000DD6  FFFF               	dw	65535	; assembler added errata NOP
  8648  000DD8  5018               	movf	___fladd@bexp^0,w,c
  8649  000DDA  B4D8               	btfsc	status,2,c
  8650  000DDC  EFF2  F006         	goto	u5251
  8651  000DE0  EFF5  F006         	goto	u5250
  8652  000DE4                     u5251:
  8653  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  8654  000DE6  EFF7  F006         	goto	l4527
  8655  000DEA                     u5250:
  8656  000DEA  FFFF               	dw	65535	; assembler added errata NOP
  8657  000DEC  0618               	decf	___fladd@bexp^0,f,c
  8658  000DEE                     l4527:
  8659  000DEE  FFFF               	dw	65535	; assembler added errata NOP
  8660  000DF0  AE0C               	btfss	(___fladd@b+2)^0,7,c
  8661  000DF2  EFFD  F006         	goto	u5261
  8662  000DF6  EF00  F007         	goto	u5260
  8663  000DFA                     u5261:
  8664  000DFA  FFFF               	dw	65535	; assembler added errata NOP
  8665  000DFC  EFCA  F006         	goto	l4511
  8666  000E00                     u5260:
  8667  000E00                     l4529:
  8668  000E00  FFFF               	dw	65535	; assembler added errata NOP
  8669  000E02  0E00               	movlw	0
  8670  000E04  6E17               	movwf	___fladd@aexp^0,c
  8671  000E06  AE19               	btfss	___fladd@grs^0,7,c
  8672  000E08  EF08  F007         	goto	u5271
  8673  000E0C  EF0B  F007         	goto	u5270
  8674  000E10                     u5271:
  8675  000E10  FFFF               	dw	65535	; assembler added errata NOP
  8676  000E12  EF2A  F007         	goto	l1069
  8677  000E16                     u5270:
  8678  000E16  FFFF               	dw	65535	; assembler added errata NOP
  8679  000E18  C019  F012         	movff	___fladd@grs,??___fladd
  8680  000E1C  0E7F               	movlw	127
  8681  000E1E  1612               	andwf	??___fladd^0,f,c
  8682  000E20  B4D8               	btfsc	status,2,c
  8683  000E22  EF15  F007         	goto	u5281
  8684  000E26  EF18  F007         	goto	u5280
  8685  000E2A                     u5281:
  8686  000E2A  FFFF               	dw	65535	; assembler added errata NOP
  8687  000E2C  EF1E  F007         	goto	l1070
  8688  000E30                     u5280:
  8689  000E30  FFFF               	dw	65535	; assembler added errata NOP
  8690  000E32                     l4535:
  8691  000E32  FFFF               	dw	65535	; assembler added errata NOP
  8692  000E34  0E01               	movlw	1
  8693  000E36  6E17               	movwf	___fladd@aexp^0,c
  8694  000E38  EF2A  F007         	goto	l1069
  8695  000E3C                     l1070:
  8696  000E3C  FFFF               	dw	65535	; assembler added errata NOP
  8697  000E3E  A00A               	btfss	___fladd@b^0,0,c
  8698  000E40  EF24  F007         	goto	u5291
  8699  000E44  EF27  F007         	goto	u5290
  8700  000E48                     u5291:
  8701  000E48  FFFF               	dw	65535	; assembler added errata NOP
  8702  000E4A  EF2A  F007         	goto	l1069
  8703  000E4E                     u5290:
  8704  000E4E  FFFF               	dw	65535	; assembler added errata NOP
  8705  000E50  EF19  F007         	goto	l4535
  8706  000E54                     l1069:
  8707  000E54  FFFF               	dw	65535	; assembler added errata NOP
  8708  000E56  5017               	movf	___fladd@aexp^0,w,c
  8709  000E58  B4D8               	btfsc	status,2,c
  8710  000E5A  EF31  F007         	goto	u5301
  8711  000E5E  EF34  F007         	goto	u5300
  8712  000E62                     u5301:
  8713  000E62  FFFF               	dw	65535	; assembler added errata NOP
  8714  000E64  EF64  F007         	goto	l4547
  8715  000E68                     u5300:
  8716  000E68  FFFF               	dw	65535	; assembler added errata NOP
  8717  000E6A  0E01               	movlw	1
  8718  000E6C  260A               	addwf	___fladd@b^0,f,c
  8719  000E6E  0E00               	movlw	0
  8720  000E70  220B               	addwfc	(___fladd@b+1)^0,f,c
  8721  000E72  220C               	addwfc	(___fladd@b+2)^0,f,c
  8722  000E74  220D               	addwfc	(___fladd@b+3)^0,f,c
  8723  000E76  A00D               	btfss	(___fladd@b+3)^0,0,c
  8724  000E78  EF40  F007         	goto	u5311
  8725  000E7C  EF43  F007         	goto	u5310
  8726  000E80                     u5311:
  8727  000E80  FFFF               	dw	65535	; assembler added errata NOP
  8728  000E82  EF64  F007         	goto	l4547
  8729  000E86                     u5310:
  8730  000E86  FFFF               	dw	65535	; assembler added errata NOP
  8731  000E88  C00A  F012         	movff	___fladd@b,??___fladd
  8732  000E8C  C00B  F013         	movff	___fladd@b+1,??___fladd+1
  8733  000E90  C00C  F014         	movff	___fladd@b+2,??___fladd+2
  8734  000E94  C00D  F015         	movff	___fladd@b+3,??___fladd+3
  8735  000E98  3415               	rlcf	(??___fladd+3)^0,w,c
  8736  000E9A  3215               	rrcf	(??___fladd+3)^0,f,c
  8737  000E9C  3214               	rrcf	(??___fladd+2)^0,f,c
  8738  000E9E  3213               	rrcf	(??___fladd+1)^0,f,c
  8739  000EA0  3212               	rrcf	??___fladd^0,f,c
  8740  000EA2  C012  F00A         	movff	??___fladd,___fladd@b
  8741  000EA6  C013  F00B         	movff	??___fladd+1,___fladd@b+1
  8742  000EAA  C014  F00C         	movff	??___fladd+2,___fladd@b+2
  8743  000EAE  C015  F00D         	movff	??___fladd+3,___fladd@b+3
  8744  000EB2  2818               	incf	___fladd@bexp^0,w,c
  8745  000EB4  B4D8               	btfsc	status,2,c
  8746  000EB6  EF5F  F007         	goto	u5321
  8747  000EBA  EF62  F007         	goto	u5320
  8748  000EBE                     u5321:
  8749  000EBE  FFFF               	dw	65535	; assembler added errata NOP
  8750  000EC0  EF64  F007         	goto	l4547
  8751  000EC4                     u5320:
  8752  000EC4  FFFF               	dw	65535	; assembler added errata NOP
  8753  000EC6  2A18               	incf	___fladd@bexp^0,f,c
  8754  000EC8                     l4547:
  8755  000EC8  FFFF               	dw	65535	; assembler added errata NOP
  8756  000ECA  2818               	incf	___fladd@bexp^0,w,c
  8757  000ECC  B4D8               	btfsc	status,2,c
  8758  000ECE  EF6B  F007         	goto	u5331
  8759  000ED2  EF6E  F007         	goto	u5330
  8760  000ED6                     u5331:
  8761  000ED6  FFFF               	dw	65535	; assembler added errata NOP
  8762  000ED8  EF78  F007         	goto	l4551
  8763  000EDC                     u5330:
  8764  000EDC  FFFF               	dw	65535	; assembler added errata NOP
  8765  000EDE  5018               	movf	___fladd@bexp^0,w,c
  8766  000EE0  A4D8               	btfss	status,2,c
  8767  000EE2  EF75  F007         	goto	u5341
  8768  000EE6  EF78  F007         	goto	u5340
  8769  000EEA                     u5341:
  8770  000EEA  FFFF               	dw	65535	; assembler added errata NOP
  8771  000EEC  EF8D  F007         	goto	l4555
  8772  000EF0                     u5340:
  8773  000EF0                     l4551:
  8774  000EF0  FFFF               	dw	65535	; assembler added errata NOP
  8775  000EF2  0E00               	movlw	0
  8776  000EF4  6E0A               	movwf	___fladd@b^0,c
  8777  000EF6  0E00               	movlw	0
  8778  000EF8  6E0B               	movwf	(___fladd@b+1)^0,c
  8779  000EFA  0E00               	movlw	0
  8780  000EFC  6E0C               	movwf	(___fladd@b+2)^0,c
  8781  000EFE  0E00               	movlw	0
  8782  000F00  6E0D               	movwf	(___fladd@b+3)^0,c
  8783  000F02  5018               	movf	___fladd@bexp^0,w,c
  8784  000F04  A4D8               	btfss	status,2,c
  8785  000F06  EF87  F007         	goto	u5351
  8786  000F0A  EF8A  F007         	goto	u5350
  8787  000F0E                     u5351:
  8788  000F0E  FFFF               	dw	65535	; assembler added errata NOP
  8789  000F10  EF8D  F007         	goto	l4555
  8790  000F14                     u5350:
  8791  000F14  FFFF               	dw	65535	; assembler added errata NOP
  8792  000F16  0E00               	movlw	0
  8793  000F18  6E16               	movwf	___fladd@signs^0,c
  8794  000F1A                     l4555:
  8795  000F1A  FFFF               	dw	65535	; assembler added errata NOP
  8796  000F1C  A018               	btfss	___fladd@bexp^0,0,c
  8797  000F1E  EF93  F007         	goto	u5361
  8798  000F22  EF96  F007         	goto	u5360
  8799  000F26                     u5361:
  8800  000F26  FFFF               	dw	65535	; assembler added errata NOP
  8801  000F28  EF9A  F007         	goto	l4559
  8802  000F2C                     u5360:
  8803  000F2C  FFFF               	dw	65535	; assembler added errata NOP
  8804  000F2E  8E0C               	bsf	(___fladd@b+2)^0,7,c
  8805  000F30  EF9C  F007         	goto	l4561
  8806  000F34                     l4559:
  8807  000F34  FFFF               	dw	65535	; assembler added errata NOP
  8808  000F36  9E0C               	bcf	(___fladd@b+2)^0,7,c
  8809  000F38                     l4561:
  8810  000F38  FFFF               	dw	65535	; assembler added errata NOP
  8811  000F3A  90D8               	bcf	status,0,c
  8812  000F3C  3018               	rrcf	___fladd@bexp^0,w,c
  8813  000F3E  6E0D               	movwf	(___fladd@b+3)^0,c
  8814  000F40  AE16               	btfss	___fladd@signs^0,7,c
  8815  000F42  EFA5  F007         	goto	u5371
  8816  000F46  EFA8  F007         	goto	u5370
  8817  000F4A                     u5371:
  8818  000F4A  FFFF               	dw	65535	; assembler added errata NOP
  8819  000F4C  EFAA  F007         	goto	l4567
  8820  000F50                     u5370:
  8821  000F50  FFFF               	dw	65535	; assembler added errata NOP
  8822  000F52  8E0D               	bsf	(___fladd@b+3)^0,7,c
  8823  000F54                     l4567:
  8824  000F54  FFFF               	dw	65535	; assembler added errata NOP
  8825  000F56  C00A  F00A         	movff	___fladd@b,?___fladd
  8826  000F5A  C00B  F00B         	movff	___fladd@b+1,?___fladd+1
  8827  000F5E  C00C  F00C         	movff	___fladd@b+2,?___fladd+2
  8828  000F62  C00D  F00D         	movff	___fladd@b+3,?___fladd+3
  8829  000F66                     l1052:
  8830  000F66  FFFF               	dw	65535	; assembler added errata NOP
  8831  000F68  0012               	return		;funcret
  8832  000F6A  FFFF               	dw	65535	; errata NOP
  8833  000F6C                     __end_of___fladd:
  8834                           	callstack 0
  8835                           
  8836 ;; *************** function ___flneg *****************
  8837 ;; Defined at:
  8838 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  f1              4    9[COMRAM] unsigned char 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  4    9[COMRAM] unsigned char 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8852 ;;      Params:         4       0       0       0       0       0       0
  8853 ;;      Locals:         0       0       0       0       0       0       0
  8854 ;;      Temps:          0       0       0       0       0       0       0
  8855 ;;      Totals:         4       0       0       0       0       0       0
  8856 ;;Total ram usage:        4 bytes
  8857 ;; Hardware stack levels used: 1
  8858 ;; Hardware stack levels required when called: 2
  8859 ;; This function calls:
  8860 ;;		Nothing
  8861 ;; This function is called by:
  8862 ;;		_roundf
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text34
  8867  0033A6                     __ptext34:
  8868                           	callstack 0
  8869  0033A6                     ___flneg:
  8870                           	callstack 0
  8871  0033A6  FFFF               	dw	65535	; assembler added errata NOP
  8872  0033A8  500A               	movf	___flneg@f1^0,w,c
  8873  0033AA  100B               	iorwf	(___flneg@f1+1)^0,w,c
  8874  0033AC  100C               	iorwf	(___flneg@f1+2)^0,w,c
  8875  0033AE  100D               	iorwf	(___flneg@f1+3)^0,w,c
  8876  0033B0  B4D8               	btfsc	status,2,c
  8877  0033B2  EFDD  F019         	goto	u5621
  8878  0033B6  EFE0  F019         	goto	u5620
  8879  0033BA                     u5621:
  8880  0033BA  FFFF               	dw	65535	; assembler added errata NOP
  8881  0033BC  EFE9  F019         	goto	l4733
  8882  0033C0                     u5620:
  8883  0033C0  FFFF               	dw	65535	; assembler added errata NOP
  8884  0033C2  0E00               	movlw	0
  8885  0033C4  1A0A               	xorwf	___flneg@f1^0,f,c
  8886  0033C6  0E00               	movlw	0
  8887  0033C8  1A0B               	xorwf	(___flneg@f1+1)^0,f,c
  8888  0033CA  0E00               	movlw	0
  8889  0033CC  1A0C               	xorwf	(___flneg@f1+2)^0,f,c
  8890  0033CE  0E80               	movlw	128
  8891  0033D0  1A0D               	xorwf	(___flneg@f1+3)^0,f,c
  8892  0033D2                     l4733:
  8893  0033D2  FFFF               	dw	65535	; assembler added errata NOP
  8894  0033D4  C00A  F00A         	movff	___flneg@f1,?___flneg
  8895  0033D8  C00B  F00B         	movff	___flneg@f1+1,?___flneg+1
  8896  0033DC  C00C  F00C         	movff	___flneg@f1+2,?___flneg+2
  8897  0033E0  C00D  F00D         	movff	___flneg@f1+3,?___flneg+3
  8898  0033E4  0012               	return		;funcret
  8899  0033E6  FFFF               	dw	65535	; errata NOP
  8900  0033E8                     __end_of___flneg:
  8901                           	callstack 0
  8902                           
  8903 ;; *************** function ___flmul *****************
  8904 ;; Defined at:
  8905 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;  b               4   48[COMRAM] unsigned char 
  8908 ;;  a               4   52[COMRAM] unsigned char 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  prod            4   67[COMRAM] struct .
  8911 ;;  grs             4   62[COMRAM] unsigned long 
  8912 ;;  temp            2   71[COMRAM] struct .
  8913 ;;  bexp            1   66[COMRAM] unsigned char 
  8914 ;;  aexp            1   61[COMRAM] unsigned char 
  8915 ;;  sign            1   60[COMRAM] unsigned char 
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  4   48[COMRAM] unsigned char 
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0, prodl, prodh
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8925 ;;      Params:         8       0       0       0       0       0       0
  8926 ;;      Locals:        13       0       0       0       0       0       0
  8927 ;;      Temps:          4       0       0       0       0       0       0
  8928 ;;      Totals:        25       0       0       0       0       0       0
  8929 ;;Total ram usage:       25 bytes
  8930 ;; Hardware stack levels used: 1
  8931 ;; Hardware stack levels required when called: 2
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_pick_and_place
  8936 ;;		_roundf
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text35
  8941  000F6C                     __ptext35:
  8942                           	callstack 0
  8943  000F6C                     ___flmul:
  8944                           	callstack 0
  8945  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  8946  000F6E  5034               	movf	(___flmul@b+3)^0,w,c
  8947  000F70  0B80               	andlw	128
  8948  000F72  6E3D               	movwf	___flmul@sign^0,c
  8949  000F74  5034               	movf	(___flmul@b+3)^0,w,c
  8950  000F76  2434               	addwf	(___flmul@b+3)^0,w,c
  8951  000F78  6E43               	movwf	___flmul@bexp^0,c
  8952  000F7A  AE33               	btfss	(___flmul@b+2)^0,7,c
  8953  000F7C  EFC2  F007         	goto	u5381
  8954  000F80  EFC5  F007         	goto	u5380
  8955  000F84                     u5381:
  8956  000F84  FFFF               	dw	65535	; assembler added errata NOP
  8957  000F86  EFC7  F007         	goto	l4577
  8958  000F8A                     u5380:
  8959  000F8A  FFFF               	dw	65535	; assembler added errata NOP
  8960  000F8C  8043               	bsf	___flmul@bexp^0,0,c
  8961  000F8E                     l4577:
  8962  000F8E  FFFF               	dw	65535	; assembler added errata NOP
  8963  000F90  5043               	movf	___flmul@bexp^0,w,c
  8964  000F92  B4D8               	btfsc	status,2,c
  8965  000F94  EFCE  F007         	goto	u5391
  8966  000F98  EFD1  F007         	goto	u5390
  8967  000F9C                     u5391:
  8968  000F9C  FFFF               	dw	65535	; assembler added errata NOP
  8969  000F9E  EFE8  F007         	goto	l4585
  8970  000FA2                     u5390:
  8971  000FA2  FFFF               	dw	65535	; assembler added errata NOP
  8972  000FA4  2843               	incf	___flmul@bexp^0,w,c
  8973  000FA6  A4D8               	btfss	status,2,c
  8974  000FA8  EFD8  F007         	goto	u5401
  8975  000FAC  EFDB  F007         	goto	u5400
  8976  000FB0                     u5401:
  8977  000FB0  FFFF               	dw	65535	; assembler added errata NOP
  8978  000FB2  EFE4  F007         	goto	l4583
  8979  000FB6                     u5400:
  8980  000FB6  FFFF               	dw	65535	; assembler added errata NOP
  8981  000FB8  0E00               	movlw	0
  8982  000FBA  6E31               	movwf	___flmul@b^0,c
  8983  000FBC  0E00               	movlw	0
  8984  000FBE  6E32               	movwf	(___flmul@b+1)^0,c
  8985  000FC0  0E00               	movlw	0
  8986  000FC2  6E33               	movwf	(___flmul@b+2)^0,c
  8987  000FC4  0E00               	movlw	0
  8988  000FC6  6E34               	movwf	(___flmul@b+3)^0,c
  8989  000FC8                     l4583:
  8990  000FC8  FFFF               	dw	65535	; assembler added errata NOP
  8991  000FCA  8E33               	bsf	(___flmul@b+2)^0,7,c
  8992  000FCC  EFF1  F007         	goto	l4587
  8993  000FD0                     l4585:
  8994  000FD0  FFFF               	dw	65535	; assembler added errata NOP
  8995  000FD2  0E00               	movlw	0
  8996  000FD4  6E31               	movwf	___flmul@b^0,c
  8997  000FD6  0E00               	movlw	0
  8998  000FD8  6E32               	movwf	(___flmul@b+1)^0,c
  8999  000FDA  0E00               	movlw	0
  9000  000FDC  6E33               	movwf	(___flmul@b+2)^0,c
  9001  000FDE  0E00               	movlw	0
  9002  000FE0  6E34               	movwf	(___flmul@b+3)^0,c
  9003  000FE2                     l4587:
  9004  000FE2  FFFF               	dw	65535	; assembler added errata NOP
  9005  000FE4  5038               	movf	(___flmul@a+3)^0,w,c
  9006  000FE6  0B80               	andlw	128
  9007  000FE8  1A3D               	xorwf	___flmul@sign^0,f,c
  9008  000FEA  5038               	movf	(___flmul@a+3)^0,w,c
  9009  000FEC  2438               	addwf	(___flmul@a+3)^0,w,c
  9010  000FEE  6E3E               	movwf	___flmul@aexp^0,c
  9011  000FF0  AE37               	btfss	(___flmul@a+2)^0,7,c
  9012  000FF2  EFFD  F007         	goto	u5411
  9013  000FF6  EF00  F008         	goto	u5410
  9014  000FFA                     u5411:
  9015  000FFA  FFFF               	dw	65535	; assembler added errata NOP
  9016  000FFC  EF02  F008         	goto	l4595
  9017  001000                     u5410:
  9018  001000  FFFF               	dw	65535	; assembler added errata NOP
  9019  001002  803E               	bsf	___flmul@aexp^0,0,c
  9020  001004                     l4595:
  9021  001004  FFFF               	dw	65535	; assembler added errata NOP
  9022  001006  503E               	movf	___flmul@aexp^0,w,c
  9023  001008  B4D8               	btfsc	status,2,c
  9024  00100A  EF09  F008         	goto	u5421
  9025  00100E  EF0C  F008         	goto	u5420
  9026  001012                     u5421:
  9027  001012  FFFF               	dw	65535	; assembler added errata NOP
  9028  001014  EF23  F008         	goto	l4603
  9029  001018                     u5420:
  9030  001018  FFFF               	dw	65535	; assembler added errata NOP
  9031  00101A  283E               	incf	___flmul@aexp^0,w,c
  9032  00101C  A4D8               	btfss	status,2,c
  9033  00101E  EF13  F008         	goto	u5431
  9034  001022  EF16  F008         	goto	u5430
  9035  001026                     u5431:
  9036  001026  FFFF               	dw	65535	; assembler added errata NOP
  9037  001028  EF1F  F008         	goto	l4601
  9038  00102C                     u5430:
  9039  00102C  FFFF               	dw	65535	; assembler added errata NOP
  9040  00102E  0E00               	movlw	0
  9041  001030  6E35               	movwf	___flmul@a^0,c
  9042  001032  0E00               	movlw	0
  9043  001034  6E36               	movwf	(___flmul@a+1)^0,c
  9044  001036  0E00               	movlw	0
  9045  001038  6E37               	movwf	(___flmul@a+2)^0,c
  9046  00103A  0E00               	movlw	0
  9047  00103C  6E38               	movwf	(___flmul@a+3)^0,c
  9048  00103E                     l4601:
  9049  00103E  FFFF               	dw	65535	; assembler added errata NOP
  9050  001040  8E37               	bsf	(___flmul@a+2)^0,7,c
  9051  001042  EF2C  F008         	goto	l1129
  9052  001046                     l4603:
  9053  001046  FFFF               	dw	65535	; assembler added errata NOP
  9054  001048  0E00               	movlw	0
  9055  00104A  6E35               	movwf	___flmul@a^0,c
  9056  00104C  0E00               	movlw	0
  9057  00104E  6E36               	movwf	(___flmul@a+1)^0,c
  9058  001050  0E00               	movlw	0
  9059  001052  6E37               	movwf	(___flmul@a+2)^0,c
  9060  001054  0E00               	movlw	0
  9061  001056  6E38               	movwf	(___flmul@a+3)^0,c
  9062  001058                     l1129:
  9063  001058  FFFF               	dw	65535	; assembler added errata NOP
  9064  00105A  503E               	movf	___flmul@aexp^0,w,c
  9065  00105C  B4D8               	btfsc	status,2,c
  9066  00105E  EF33  F008         	goto	u5441
  9067  001062  EF36  F008         	goto	u5440
  9068  001066                     u5441:
  9069  001066  FFFF               	dw	65535	; assembler added errata NOP
  9070  001068  EF40  F008         	goto	l4607
  9071  00106C                     u5440:
  9072  00106C  FFFF               	dw	65535	; assembler added errata NOP
  9073  00106E  5043               	movf	___flmul@bexp^0,w,c
  9074  001070  A4D8               	btfss	status,2,c
  9075  001072  EF3D  F008         	goto	u5451
  9076  001076  EF40  F008         	goto	u5450
  9077  00107A                     u5451:
  9078  00107A  FFFF               	dw	65535	; assembler added errata NOP
  9079  00107C  EF4B  F008         	goto	l4611
  9080  001080                     u5450:
  9081  001080                     l4607:
  9082  001080  FFFF               	dw	65535	; assembler added errata NOP
  9083  001082  0E00               	movlw	0
  9084  001084  6E31               	movwf	?___flmul^0,c
  9085  001086  0E00               	movlw	0
  9086  001088  6E32               	movwf	(?___flmul+1)^0,c
  9087  00108A  0E00               	movlw	0
  9088  00108C  6E33               	movwf	(?___flmul+2)^0,c
  9089  00108E  0E00               	movlw	0
  9090  001090  6E34               	movwf	(?___flmul+3)^0,c
  9091  001092  EF05  F00A         	goto	l1133
  9092  001096                     l4611:
  9093  001096  FFFF               	dw	65535	; assembler added errata NOP
  9094  001098  5037               	movf	(___flmul@a+2)^0,w,c
  9095  00109A  0231               	mulwf	___flmul@b^0,c
  9096  00109C  CFF3 F048          	movff	prodl,___flmul@temp
  9097  0010A0  CFF4 F049          	movff	prodh,___flmul@temp+1
  9098  0010A4  5048               	movf	___flmul@temp^0,w,c
  9099  0010A6  6E3F               	movwf	___flmul@grs^0,c
  9100  0010A8  6A40               	clrf	(___flmul@grs+1)^0,c
  9101  0010AA  6A41               	clrf	(___flmul@grs+2)^0,c
  9102  0010AC  6A42               	clrf	(___flmul@grs+3)^0,c
  9103  0010AE  5049               	movf	(___flmul@temp+1)^0,w,c
  9104  0010B0  6E44               	movwf	___flmul@prod^0,c
  9105  0010B2  6A45               	clrf	(___flmul@prod+1)^0,c
  9106  0010B4  6A46               	clrf	(___flmul@prod+2)^0,c
  9107  0010B6  6A47               	clrf	(___flmul@prod+3)^0,c
  9108  0010B8  5036               	movf	(___flmul@a+1)^0,w,c
  9109  0010BA  0232               	mulwf	(___flmul@b+1)^0,c
  9110  0010BC  CFF3 F048          	movff	prodl,___flmul@temp
  9111  0010C0  CFF4 F049          	movff	prodh,___flmul@temp+1
  9112  0010C4  5048               	movf	___flmul@temp^0,w,c
  9113  0010C6  263F               	addwf	___flmul@grs^0,f,c
  9114  0010C8  0E00               	movlw	0
  9115  0010CA  2240               	addwfc	(___flmul@grs+1)^0,f,c
  9116  0010CC  2241               	addwfc	(___flmul@grs+2)^0,f,c
  9117  0010CE  2242               	addwfc	(___flmul@grs+3)^0,f,c
  9118  0010D0  5049               	movf	(___flmul@temp+1)^0,w,c
  9119  0010D2  2644               	addwf	___flmul@prod^0,f,c
  9120  0010D4  0E00               	movlw	0
  9121  0010D6  2245               	addwfc	(___flmul@prod+1)^0,f,c
  9122  0010D8  2246               	addwfc	(___flmul@prod+2)^0,f,c
  9123  0010DA  2247               	addwfc	(___flmul@prod+3)^0,f,c
  9124  0010DC  5035               	movf	___flmul@a^0,w,c
  9125  0010DE  0233               	mulwf	(___flmul@b+2)^0,c
  9126  0010E0  CFF3 F048          	movff	prodl,___flmul@temp
  9127  0010E4  CFF4 F049          	movff	prodh,___flmul@temp+1
  9128  0010E8  5048               	movf	___flmul@temp^0,w,c
  9129  0010EA  263F               	addwf	___flmul@grs^0,f,c
  9130  0010EC  0E00               	movlw	0
  9131  0010EE  2240               	addwfc	(___flmul@grs+1)^0,f,c
  9132  0010F0  2241               	addwfc	(___flmul@grs+2)^0,f,c
  9133  0010F2  2242               	addwfc	(___flmul@grs+3)^0,f,c
  9134  0010F4  5049               	movf	(___flmul@temp+1)^0,w,c
  9135  0010F6  2644               	addwf	___flmul@prod^0,f,c
  9136  0010F8  0E00               	movlw	0
  9137  0010FA  2245               	addwfc	(___flmul@prod+1)^0,f,c
  9138  0010FC  2246               	addwfc	(___flmul@prod+2)^0,f,c
  9139  0010FE  2247               	addwfc	(___flmul@prod+3)^0,f,c
  9140  001100  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  9141  001104  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  9142  001108  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  9143  00110C  6A3F               	clrf	___flmul@grs^0,c
  9144  00110E  5035               	movf	___flmul@a^0,w,c
  9145  001110  0232               	mulwf	(___flmul@b+1)^0,c
  9146  001112  CFF3 F048          	movff	prodl,___flmul@temp
  9147  001116  CFF4 F049          	movff	prodh,___flmul@temp+1
  9148  00111A  5048               	movf	___flmul@temp^0,w,c
  9149  00111C  263F               	addwf	___flmul@grs^0,f,c
  9150  00111E  5049               	movf	(___flmul@temp+1)^0,w,c
  9151  001120  2240               	addwfc	(___flmul@grs+1)^0,f,c
  9152  001122  0E00               	movlw	0
  9153  001124  2241               	addwfc	(___flmul@grs+2)^0,f,c
  9154  001126  0E00               	movlw	0
  9155  001128  2242               	addwfc	(___flmul@grs+3)^0,f,c
  9156  00112A  5036               	movf	(___flmul@a+1)^0,w,c
  9157  00112C  0231               	mulwf	___flmul@b^0,c
  9158  00112E  CFF3 F048          	movff	prodl,___flmul@temp
  9159  001132  CFF4 F049          	movff	prodh,___flmul@temp+1
  9160  001136  5048               	movf	___flmul@temp^0,w,c
  9161  001138  263F               	addwf	___flmul@grs^0,f,c
  9162  00113A  5049               	movf	(___flmul@temp+1)^0,w,c
  9163  00113C  2240               	addwfc	(___flmul@grs+1)^0,f,c
  9164  00113E  0E00               	movlw	0
  9165  001140  2241               	addwfc	(___flmul@grs+2)^0,f,c
  9166  001142  0E00               	movlw	0
  9167  001144  2242               	addwfc	(___flmul@grs+3)^0,f,c
  9168  001146  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  9169  00114A  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  9170  00114E  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  9171  001152  6A3F               	clrf	___flmul@grs^0,c
  9172  001154  5035               	movf	___flmul@a^0,w,c
  9173  001156  0231               	mulwf	___flmul@b^0,c
  9174  001158  CFF3 F048          	movff	prodl,___flmul@temp
  9175  00115C  CFF4 F049          	movff	prodh,___flmul@temp+1
  9176  001160  5048               	movf	___flmul@temp^0,w,c
  9177  001162  263F               	addwf	___flmul@grs^0,f,c
  9178  001164  5049               	movf	(___flmul@temp+1)^0,w,c
  9179  001166  2240               	addwfc	(___flmul@grs+1)^0,f,c
  9180  001168  0E00               	movlw	0
  9181  00116A  2241               	addwfc	(___flmul@grs+2)^0,f,c
  9182  00116C  0E00               	movlw	0
  9183  00116E  2242               	addwfc	(___flmul@grs+3)^0,f,c
  9184  001170  5037               	movf	(___flmul@a+2)^0,w,c
  9185  001172  0232               	mulwf	(___flmul@b+1)^0,c
  9186  001174  CFF3 F048          	movff	prodl,___flmul@temp
  9187  001178  CFF4 F049          	movff	prodh,___flmul@temp+1
  9188  00117C  5048               	movf	___flmul@temp^0,w,c
  9189  00117E  2644               	addwf	___flmul@prod^0,f,c
  9190  001180  5049               	movf	(___flmul@temp+1)^0,w,c
  9191  001182  2245               	addwfc	(___flmul@prod+1)^0,f,c
  9192  001184  0E00               	movlw	0
  9193  001186  2246               	addwfc	(___flmul@prod+2)^0,f,c
  9194  001188  0E00               	movlw	0
  9195  00118A  2247               	addwfc	(___flmul@prod+3)^0,f,c
  9196  00118C  5036               	movf	(___flmul@a+1)^0,w,c
  9197  00118E  0233               	mulwf	(___flmul@b+2)^0,c
  9198  001190  CFF3 F048          	movff	prodl,___flmul@temp
  9199  001194  CFF4 F049          	movff	prodh,___flmul@temp+1
  9200  001198  5048               	movf	___flmul@temp^0,w,c
  9201  00119A  2644               	addwf	___flmul@prod^0,f,c
  9202  00119C  5049               	movf	(___flmul@temp+1)^0,w,c
  9203  00119E  2245               	addwfc	(___flmul@prod+1)^0,f,c
  9204  0011A0  0E00               	movlw	0
  9205  0011A2  2246               	addwfc	(___flmul@prod+2)^0,f,c
  9206  0011A4  0E00               	movlw	0
  9207  0011A6  2247               	addwfc	(___flmul@prod+3)^0,f,c
  9208  0011A8  5037               	movf	(___flmul@a+2)^0,w,c
  9209  0011AA  0233               	mulwf	(___flmul@b+2)^0,c
  9210  0011AC  CFF3 F048          	movff	prodl,___flmul@temp
  9211  0011B0  CFF4 F049          	movff	prodh,___flmul@temp+1
  9212  0011B4  5048               	movf	___flmul@temp^0,w,c
  9213  0011B6  6E39               	movwf	??___flmul^0,c
  9214  0011B8  5049               	movf	(___flmul@temp+1)^0,w,c
  9215  0011BA  6E3A               	movwf	(??___flmul+1)^0,c
  9216  0011BC  6A3B               	clrf	(??___flmul+2)^0,c
  9217  0011BE  6A3C               	clrf	(??___flmul+3)^0,c
  9218  0011C0  C03B  F03C         	movff	??___flmul+2,??___flmul+3
  9219  0011C4  C03A  F03B         	movff	??___flmul+1,??___flmul+2
  9220  0011C8  C039  F03A         	movff	??___flmul,??___flmul+1
  9221  0011CC  6A39               	clrf	??___flmul^0,c
  9222  0011CE  5039               	movf	??___flmul^0,w,c
  9223  0011D0  2644               	addwf	___flmul@prod^0,f,c
  9224  0011D2  503A               	movf	(??___flmul+1)^0,w,c
  9225  0011D4  2245               	addwfc	(___flmul@prod+1)^0,f,c
  9226  0011D6  503B               	movf	(??___flmul+2)^0,w,c
  9227  0011D8  2246               	addwfc	(___flmul@prod+2)^0,f,c
  9228  0011DA  503C               	movf	(??___flmul+3)^0,w,c
  9229  0011DC  2247               	addwfc	(___flmul@prod+3)^0,f,c
  9230  0011DE  C03F  F039         	movff	___flmul@grs,??___flmul
  9231  0011E2  C040  F03A         	movff	___flmul@grs+1,??___flmul+1
  9232  0011E6  C041  F03B         	movff	___flmul@grs+2,??___flmul+2
  9233  0011EA  C042  F03C         	movff	___flmul@grs+3,??___flmul+3
  9234  0011EE  0E19               	movlw	25
  9235  0011F0  EF00  F009         	goto	u5460
  9236  0011F4                     u5465:
  9237  0011F4  FFFF               	dw	65535	; assembler added errata NOP
  9238  0011F6  90D8               	bcf	status,0,c
  9239  0011F8  323C               	rrcf	(??___flmul+3)^0,f,c
  9240  0011FA  323B               	rrcf	(??___flmul+2)^0,f,c
  9241  0011FC  323A               	rrcf	(??___flmul+1)^0,f,c
  9242  0011FE  3239               	rrcf	??___flmul^0,f,c
  9243  001200                     u5460:
  9244  001200  FFFF               	dw	65535	; assembler added errata NOP
  9245  001202  2EE8               	decfsz	wreg,f,c
  9246  001204  EFFA  F008         	goto	u5465
  9247  001208  5039               	movf	??___flmul^0,w,c
  9248  00120A  2644               	addwf	___flmul@prod^0,f,c
  9249  00120C  503A               	movf	(??___flmul+1)^0,w,c
  9250  00120E  2245               	addwfc	(___flmul@prod+1)^0,f,c
  9251  001210  503B               	movf	(??___flmul+2)^0,w,c
  9252  001212  2246               	addwfc	(___flmul@prod+2)^0,f,c
  9253  001214  503C               	movf	(??___flmul+3)^0,w,c
  9254  001216  2247               	addwfc	(___flmul@prod+3)^0,f,c
  9255  001218  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
  9256  00121C  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
  9257  001220  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
  9258  001224  6A3F               	clrf	___flmul@grs^0,c
  9259  001226  503E               	movf	___flmul@aexp^0,w,c
  9260  001228  C043  F039         	movff	___flmul@bexp,??___flmul
  9261  00122C  6A3A               	clrf	(??___flmul+1)^0,c
  9262  00122E  2639               	addwf	??___flmul^0,f,c
  9263  001230  0E00               	movlw	0
  9264  001232  223A               	addwfc	(??___flmul+1)^0,f,c
  9265  001234  0E82               	movlw	130
  9266  001236  2439               	addwf	??___flmul^0,w,c
  9267  001238  6E48               	movwf	___flmul@temp^0,c
  9268  00123A  0EFF               	movlw	255
  9269  00123C  203A               	addwfc	(??___flmul+1)^0,w,c
  9270  00123E  6E49               	movwf	(___flmul@temp+1)^0,c
  9271  001240  EF3B  F009         	goto	l4659
  9272  001244                     l4653:
  9273  001244  FFFF               	dw	65535	; assembler added errata NOP
  9274  001246  90D8               	bcf	status,0,c
  9275  001248  3644               	rlcf	___flmul@prod^0,f,c
  9276  00124A  3645               	rlcf	(___flmul@prod+1)^0,f,c
  9277  00124C  3646               	rlcf	(___flmul@prod+2)^0,f,c
  9278  00124E  3647               	rlcf	(___flmul@prod+3)^0,f,c
  9279  001250  AE42               	btfss	(___flmul@grs+3)^0,7,c
  9280  001252  EF2D  F009         	goto	u5471
  9281  001256  EF30  F009         	goto	u5470
  9282  00125A                     u5471:
  9283  00125A  FFFF               	dw	65535	; assembler added errata NOP
  9284  00125C  EF32  F009         	goto	l1136
  9285  001260                     u5470:
  9286  001260  FFFF               	dw	65535	; assembler added errata NOP
  9287  001262  8044               	bsf	___flmul@prod^0,0,c
  9288  001264                     l1136:
  9289  001264  FFFF               	dw	65535	; assembler added errata NOP
  9290  001266  90D8               	bcf	status,0,c
  9291  001268  363F               	rlcf	___flmul@grs^0,f,c
  9292  00126A  3640               	rlcf	(___flmul@grs+1)^0,f,c
  9293  00126C  3641               	rlcf	(___flmul@grs+2)^0,f,c
  9294  00126E  3642               	rlcf	(___flmul@grs+3)^0,f,c
  9295  001270  0648               	decf	___flmul@temp^0,f,c
  9296  001272  A0D8               	btfss	status,0,c
  9297  001274  0649               	decf	(___flmul@temp+1)^0,f,c
  9298  001276                     l4659:
  9299  001276  FFFF               	dw	65535	; assembler added errata NOP
  9300  001278  AE46               	btfss	(___flmul@prod+2)^0,7,c
  9301  00127A  EF41  F009         	goto	u5481
  9302  00127E  EF44  F009         	goto	u5480
  9303  001282                     u5481:
  9304  001282  FFFF               	dw	65535	; assembler added errata NOP
  9305  001284  EF22  F009         	goto	l4653
  9306  001288                     u5480:
  9307  001288  FFFF               	dw	65535	; assembler added errata NOP
  9308  00128A  0E00               	movlw	0
  9309  00128C  6E3E               	movwf	___flmul@aexp^0,c
  9310  00128E  AE42               	btfss	(___flmul@grs+3)^0,7,c
  9311  001290  EF4C  F009         	goto	u5491
  9312  001294  EF4F  F009         	goto	u5490
  9313  001298                     u5491:
  9314  001298  FFFF               	dw	65535	; assembler added errata NOP
  9315  00129A  EF7A  F009         	goto	l1138
  9316  00129E                     u5490:
  9317  00129E  FFFF               	dw	65535	; assembler added errata NOP
  9318  0012A0  0EFF               	movlw	255
  9319  0012A2  143F               	andwf	___flmul@grs^0,w,c
  9320  0012A4  6E39               	movwf	??___flmul^0,c
  9321  0012A6  0EFF               	movlw	255
  9322  0012A8  1440               	andwf	(___flmul@grs+1)^0,w,c
  9323  0012AA  6E3A               	movwf	(??___flmul+1)^0,c
  9324  0012AC  0EFF               	movlw	255
  9325  0012AE  1441               	andwf	(___flmul@grs+2)^0,w,c
  9326  0012B0  6E3B               	movwf	(??___flmul+2)^0,c
  9327  0012B2  0E7F               	movlw	127
  9328  0012B4  1442               	andwf	(___flmul@grs+3)^0,w,c
  9329  0012B6  6E3C               	movwf	(??___flmul+3)^0,c
  9330  0012B8  5039               	movf	??___flmul^0,w,c
  9331  0012BA  103A               	iorwf	(??___flmul+1)^0,w,c
  9332  0012BC  103B               	iorwf	(??___flmul+2)^0,w,c
  9333  0012BE  103C               	iorwf	(??___flmul+3)^0,w,c
  9334  0012C0  B4D8               	btfsc	status,2,c
  9335  0012C2  EF65  F009         	goto	u5501
  9336  0012C6  EF68  F009         	goto	u5500
  9337  0012CA                     u5501:
  9338  0012CA  FFFF               	dw	65535	; assembler added errata NOP
  9339  0012CC  EF6E  F009         	goto	l1139
  9340  0012D0                     u5500:
  9341  0012D0  FFFF               	dw	65535	; assembler added errata NOP
  9342  0012D2                     l4667:
  9343  0012D2  FFFF               	dw	65535	; assembler added errata NOP
  9344  0012D4  0E01               	movlw	1
  9345  0012D6  6E3E               	movwf	___flmul@aexp^0,c
  9346  0012D8  EF7A  F009         	goto	l1138
  9347  0012DC                     l1139:
  9348  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  9349  0012DE  A044               	btfss	___flmul@prod^0,0,c
  9350  0012E0  EF74  F009         	goto	u5511
  9351  0012E4  EF77  F009         	goto	u5510
  9352  0012E8                     u5511:
  9353  0012E8  FFFF               	dw	65535	; assembler added errata NOP
  9354  0012EA  EF7A  F009         	goto	l1138
  9355  0012EE                     u5510:
  9356  0012EE  FFFF               	dw	65535	; assembler added errata NOP
  9357  0012F0  EF69  F009         	goto	l4667
  9358  0012F4                     l1138:
  9359  0012F4  FFFF               	dw	65535	; assembler added errata NOP
  9360  0012F6  503E               	movf	___flmul@aexp^0,w,c
  9361  0012F8  B4D8               	btfsc	status,2,c
  9362  0012FA  EF81  F009         	goto	u5521
  9363  0012FE  EF84  F009         	goto	u5520
  9364  001302                     u5521:
  9365  001302  FFFF               	dw	65535	; assembler added errata NOP
  9366  001304  EFAB  F009         	goto	l4679
  9367  001308                     u5520:
  9368  001308  FFFF               	dw	65535	; assembler added errata NOP
  9369  00130A  0E01               	movlw	1
  9370  00130C  2644               	addwf	___flmul@prod^0,f,c
  9371  00130E  0E00               	movlw	0
  9372  001310  2245               	addwfc	(___flmul@prod+1)^0,f,c
  9373  001312  2246               	addwfc	(___flmul@prod+2)^0,f,c
  9374  001314  2247               	addwfc	(___flmul@prod+3)^0,f,c
  9375  001316  A047               	btfss	(___flmul@prod+3)^0,0,c
  9376  001318  EF90  F009         	goto	u5531
  9377  00131C  EF93  F009         	goto	u5530
  9378  001320                     u5531:
  9379  001320  FFFF               	dw	65535	; assembler added errata NOP
  9380  001322  EFAB  F009         	goto	l4679
  9381  001326                     u5530:
  9382  001326  FFFF               	dw	65535	; assembler added errata NOP
  9383  001328  C044  F039         	movff	___flmul@prod,??___flmul
  9384  00132C  C045  F03A         	movff	___flmul@prod+1,??___flmul+1
  9385  001330  C046  F03B         	movff	___flmul@prod+2,??___flmul+2
  9386  001334  C047  F03C         	movff	___flmul@prod+3,??___flmul+3
  9387  001338  343C               	rlcf	(??___flmul+3)^0,w,c
  9388  00133A  323C               	rrcf	(??___flmul+3)^0,f,c
  9389  00133C  323B               	rrcf	(??___flmul+2)^0,f,c
  9390  00133E  323A               	rrcf	(??___flmul+1)^0,f,c
  9391  001340  3239               	rrcf	??___flmul^0,f,c
  9392  001342  C039  F044         	movff	??___flmul,___flmul@prod
  9393  001346  C03A  F045         	movff	??___flmul+1,___flmul@prod+1
  9394  00134A  C03B  F046         	movff	??___flmul+2,___flmul@prod+2
  9395  00134E  C03C  F047         	movff	??___flmul+3,___flmul@prod+3
  9396  001352  4A48               	infsnz	___flmul@temp^0,f,c
  9397  001354  2A49               	incf	(___flmul@temp+1)^0,f,c
  9398  001356                     l4679:
  9399  001356  FFFF               	dw	65535	; assembler added errata NOP
  9400  001358  BE49               	btfsc	(___flmul@temp+1)^0,7,c
  9401  00135A  EFB7  F009         	goto	u5541
  9402  00135E  5049               	movf	(___flmul@temp+1)^0,w,c
  9403  001360  E109               	bnz	u5540
  9404  001362  2848               	incf	___flmul@temp^0,w,c
  9405  001364  A0D8               	btfss	status,0,c
  9406  001366  EFB7  F009         	goto	u5541
  9407  00136A  EFBA  F009         	goto	u5540
  9408  00136E                     u5541:
  9409  00136E  FFFF               	dw	65535	; assembler added errata NOP
  9410  001370  EFC5  F009         	goto	l4683
  9411  001374                     u5540:
  9412  001374  FFFF               	dw	65535	; assembler added errata NOP
  9413  001376  0E00               	movlw	0
  9414  001378  6E44               	movwf	___flmul@prod^0,c
  9415  00137A  0E00               	movlw	0
  9416  00137C  6E45               	movwf	(___flmul@prod+1)^0,c
  9417  00137E  0E80               	movlw	128
  9418  001380  6E46               	movwf	(___flmul@prod+2)^0,c
  9419  001382  0E7F               	movlw	127
  9420  001384  6E47               	movwf	(___flmul@prod+3)^0,c
  9421  001386  EFFA  F009         	goto	l4695
  9422  00138A                     l4683:
  9423  00138A  FFFF               	dw	65535	; assembler added errata NOP
  9424  00138C  BE49               	btfsc	(___flmul@temp+1)^0,7,c
  9425  00138E  EFD4  F009         	goto	u5550
  9426  001392  5049               	movf	(___flmul@temp+1)^0,w,c
  9427  001394  E106               	bnz	u5551
  9428  001396  0448               	decf	___flmul@temp^0,w,c
  9429  001398  B0D8               	btfsc	status,0,c
  9430  00139A  EFD1  F009         	goto	u5551
  9431  00139E  EFD4  F009         	goto	u5550
  9432  0013A2                     u5551:
  9433  0013A2  FFFF               	dw	65535	; assembler added errata NOP
  9434  0013A4  EFE1  F009         	goto	l1146
  9435  0013A8                     u5550:
  9436  0013A8  FFFF               	dw	65535	; assembler added errata NOP
  9437  0013AA  0E00               	movlw	0
  9438  0013AC  6E44               	movwf	___flmul@prod^0,c
  9439  0013AE  0E00               	movlw	0
  9440  0013B0  6E45               	movwf	(___flmul@prod+1)^0,c
  9441  0013B2  0E00               	movlw	0
  9442  0013B4  6E46               	movwf	(___flmul@prod+2)^0,c
  9443  0013B6  0E00               	movlw	0
  9444  0013B8  6E47               	movwf	(___flmul@prod+3)^0,c
  9445  0013BA  0E00               	movlw	0
  9446  0013BC  6E3D               	movwf	___flmul@sign^0,c
  9447  0013BE  EFFA  F009         	goto	l4695
  9448  0013C2                     l1146:
  9449  0013C2  FFFF               	dw	65535	; assembler added errata NOP
  9450  0013C4  C048  F043         	movff	___flmul@temp,___flmul@bexp
  9451  0013C8  0EFF               	movlw	255
  9452  0013CA  1644               	andwf	___flmul@prod^0,f,c
  9453  0013CC  0EFF               	movlw	255
  9454  0013CE  1645               	andwf	(___flmul@prod+1)^0,f,c
  9455  0013D0  0E7F               	movlw	127
  9456  0013D2  1646               	andwf	(___flmul@prod+2)^0,f,c
  9457  0013D4  0E00               	movlw	0
  9458  0013D6  1647               	andwf	(___flmul@prod+3)^0,f,c
  9459  0013D8  A043               	btfss	___flmul@bexp^0,0,c
  9460  0013DA  EFF1  F009         	goto	u5561
  9461  0013DE  EFF4  F009         	goto	u5560
  9462  0013E2                     u5561:
  9463  0013E2  FFFF               	dw	65535	; assembler added errata NOP
  9464  0013E4  EFF6  F009         	goto	l4693
  9465  0013E8                     u5560:
  9466  0013E8  FFFF               	dw	65535	; assembler added errata NOP
  9467  0013EA  8E46               	bsf	(___flmul@prod+2)^0,7,c
  9468  0013EC                     l4693:
  9469  0013EC  FFFF               	dw	65535	; assembler added errata NOP
  9470  0013EE  90D8               	bcf	status,0,c
  9471  0013F0  3043               	rrcf	___flmul@bexp^0,w,c
  9472  0013F2  6E47               	movwf	(___flmul@prod+3)^0,c
  9473  0013F4                     l4695:
  9474  0013F4  FFFF               	dw	65535	; assembler added errata NOP
  9475  0013F6  503D               	movf	___flmul@sign^0,w,c
  9476  0013F8  1247               	iorwf	(___flmul@prod+3)^0,f,c
  9477  0013FA  C044  F031         	movff	___flmul@prod,?___flmul
  9478  0013FE  C045  F032         	movff	___flmul@prod+1,?___flmul+1
  9479  001402  C046  F033         	movff	___flmul@prod+2,?___flmul+2
  9480  001406  C047  F034         	movff	___flmul@prod+3,?___flmul+3
  9481  00140A                     l1133:
  9482  00140A  FFFF               	dw	65535	; assembler added errata NOP
  9483  00140C  0012               	return		;funcret
  9484  00140E  FFFF               	dw	65535	; errata NOP
  9485  001410                     __end_of___flmul:
  9486                           	callstack 0
  9487                           
  9488 ;; *************** function ___flge *****************
  9489 ;; Defined at:
  9490 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  ff1             4   73[COMRAM] unsigned char 
  9493 ;;  ff2             4   77[COMRAM] unsigned char 
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;		None
  9496 ;; Return value:  Size  Location     Type
  9497 ;;		None               void
  9498 ;; Registers used:
  9499 ;;		wreg, status,2, status,0
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9505 ;;      Params:         8       0       0       0       0       0       0
  9506 ;;      Locals:         0       0       0       0       0       0       0
  9507 ;;      Temps:          4       0       0       0       0       0       0
  9508 ;;      Totals:        12       0       0       0       0       0       0
  9509 ;;Total ram usage:       12 bytes
  9510 ;; Hardware stack levels used: 1
  9511 ;; Hardware stack levels required when called: 2
  9512 ;; This function calls:
  9513 ;;		Nothing
  9514 ;; This function is called by:
  9515 ;;		_pick_and_place
  9516 ;;		_roundf
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text36
  9521  002712                     __ptext36:
  9522                           	callstack 0
  9523  002712                     ___flge:
  9524                           	callstack 0
  9525  002712  FFFF               	dw	65535	; assembler added errata NOP
  9526  002714  0E00               	movlw	0
  9527  002716  144A               	andwf	___flge@ff1^0,w,c
  9528  002718  6E52               	movwf	??___flge^0,c
  9529  00271A  0E00               	movlw	0
  9530  00271C  144B               	andwf	(___flge@ff1+1)^0,w,c
  9531  00271E  6E53               	movwf	(??___flge+1)^0,c
  9532  002720  0E80               	movlw	128
  9533  002722  144C               	andwf	(___flge@ff1+2)^0,w,c
  9534  002724  6E54               	movwf	(??___flge+2)^0,c
  9535  002726  0E7F               	movlw	127
  9536  002728  144D               	andwf	(___flge@ff1+3)^0,w,c
  9537  00272A  6E55               	movwf	(??___flge+3)^0,c
  9538  00272C  5052               	movf	??___flge^0,w,c
  9539  00272E  1053               	iorwf	(??___flge+1)^0,w,c
  9540  002730  1054               	iorwf	(??___flge+2)^0,w,c
  9541  002732  1055               	iorwf	(??___flge+3)^0,w,c
  9542  002734  A4D8               	btfss	status,2,c
  9543  002736  EF9F  F013         	goto	u5571
  9544  00273A  EFA2  F013         	goto	u5570
  9545  00273E                     u5571:
  9546  00273E  FFFF               	dw	65535	; assembler added errata NOP
  9547  002740  EFAB  F013         	goto	l4711
  9548  002744                     u5570:
  9549  002744  FFFF               	dw	65535	; assembler added errata NOP
  9550  002746  0E00               	movlw	0
  9551  002748  6E4A               	movwf	___flge@ff1^0,c
  9552  00274A  0E00               	movlw	0
  9553  00274C  6E4B               	movwf	(___flge@ff1+1)^0,c
  9554  00274E  0E00               	movlw	0
  9555  002750  6E4C               	movwf	(___flge@ff1+2)^0,c
  9556  002752  0E00               	movlw	0
  9557  002754  6E4D               	movwf	(___flge@ff1+3)^0,c
  9558  002756                     l4711:
  9559  002756  FFFF               	dw	65535	; assembler added errata NOP
  9560  002758  0E00               	movlw	0
  9561  00275A  144E               	andwf	___flge@ff2^0,w,c
  9562  00275C  6E52               	movwf	??___flge^0,c
  9563  00275E  0E00               	movlw	0
  9564  002760  144F               	andwf	(___flge@ff2+1)^0,w,c
  9565  002762  6E53               	movwf	(??___flge+1)^0,c
  9566  002764  0E80               	movlw	128
  9567  002766  1450               	andwf	(___flge@ff2+2)^0,w,c
  9568  002768  6E54               	movwf	(??___flge+2)^0,c
  9569  00276A  0E7F               	movlw	127
  9570  00276C  1451               	andwf	(___flge@ff2+3)^0,w,c
  9571  00276E  6E55               	movwf	(??___flge+3)^0,c
  9572  002770  5052               	movf	??___flge^0,w,c
  9573  002772  1053               	iorwf	(??___flge+1)^0,w,c
  9574  002774  1054               	iorwf	(??___flge+2)^0,w,c
  9575  002776  1055               	iorwf	(??___flge+3)^0,w,c
  9576  002778  A4D8               	btfss	status,2,c
  9577  00277A  EFC1  F013         	goto	u5581
  9578  00277E  EFC4  F013         	goto	u5580
  9579  002782                     u5581:
  9580  002782  FFFF               	dw	65535	; assembler added errata NOP
  9581  002784  EFCD  F013         	goto	l4715
  9582  002788                     u5580:
  9583  002788  FFFF               	dw	65535	; assembler added errata NOP
  9584  00278A  0E00               	movlw	0
  9585  00278C  6E4E               	movwf	___flge@ff2^0,c
  9586  00278E  0E00               	movlw	0
  9587  002790  6E4F               	movwf	(___flge@ff2+1)^0,c
  9588  002792  0E00               	movlw	0
  9589  002794  6E50               	movwf	(___flge@ff2+2)^0,c
  9590  002796  0E00               	movlw	0
  9591  002798  6E51               	movwf	(___flge@ff2+3)^0,c
  9592  00279A                     l4715:
  9593  00279A  FFFF               	dw	65535	; assembler added errata NOP
  9594  00279C  AE4D               	btfss	(___flge@ff1+3)^0,7,c
  9595  00279E  EFD3  F013         	goto	u5591
  9596  0027A2  EFD6  F013         	goto	u5590
  9597  0027A6                     u5591:
  9598  0027A6  FFFF               	dw	65535	; assembler added errata NOP
  9599  0027A8  EFE0  F013         	goto	l4719
  9600  0027AC                     u5590:
  9601  0027AC  FFFF               	dw	65535	; assembler added errata NOP
  9602  0027AE  6C4A               	negf	___flge@ff1^0,c
  9603  0027B0  1E4B               	comf	(___flge@ff1+1)^0,f,c
  9604  0027B2  B0D8               	btfsc	status,0,c
  9605  0027B4  2A4B               	incf	(___flge@ff1+1)^0,f,c
  9606  0027B6  1E4C               	comf	(___flge@ff1+2)^0,f,c
  9607  0027B8  B0D8               	btfsc	status,0,c
  9608  0027BA  2A4C               	incf	(___flge@ff1+2)^0,f,c
  9609  0027BC  0E80               	movlw	128
  9610  0027BE  564D               	subfwb	(___flge@ff1+3)^0,f,c
  9611  0027C0                     l4719:
  9612  0027C0  FFFF               	dw	65535	; assembler added errata NOP
  9613  0027C2  AE51               	btfss	(___flge@ff2+3)^0,7,c
  9614  0027C4  EFE6  F013         	goto	u5601
  9615  0027C8  EFE9  F013         	goto	u5600
  9616  0027CC                     u5601:
  9617  0027CC  FFFF               	dw	65535	; assembler added errata NOP
  9618  0027CE  EFF3  F013         	goto	l780
  9619  0027D2                     u5600:
  9620  0027D2  FFFF               	dw	65535	; assembler added errata NOP
  9621  0027D4  6C4E               	negf	___flge@ff2^0,c
  9622  0027D6  1E4F               	comf	(___flge@ff2+1)^0,f,c
  9623  0027D8  B0D8               	btfsc	status,0,c
  9624  0027DA  2A4F               	incf	(___flge@ff2+1)^0,f,c
  9625  0027DC  1E50               	comf	(___flge@ff2+2)^0,f,c
  9626  0027DE  B0D8               	btfsc	status,0,c
  9627  0027E0  2A50               	incf	(___flge@ff2+2)^0,f,c
  9628  0027E2  0E80               	movlw	128
  9629  0027E4  5651               	subfwb	(___flge@ff2+3)^0,f,c
  9630  0027E6                     l780:
  9631  0027E6  FFFF               	dw	65535	; assembler added errata NOP
  9632  0027E8  0E00               	movlw	0
  9633  0027EA  1A4A               	xorwf	___flge@ff1^0,f,c
  9634  0027EC  0E00               	movlw	0
  9635  0027EE  1A4B               	xorwf	(___flge@ff1+1)^0,f,c
  9636  0027F0  0E00               	movlw	0
  9637  0027F2  1A4C               	xorwf	(___flge@ff1+2)^0,f,c
  9638  0027F4  0E80               	movlw	128
  9639  0027F6  1A4D               	xorwf	(___flge@ff1+3)^0,f,c
  9640  0027F8  0E00               	movlw	0
  9641  0027FA  1A4E               	xorwf	___flge@ff2^0,f,c
  9642  0027FC  0E00               	movlw	0
  9643  0027FE  1A4F               	xorwf	(___flge@ff2+1)^0,f,c
  9644  002800  0E00               	movlw	0
  9645  002802  1A50               	xorwf	(___flge@ff2+2)^0,f,c
  9646  002804  0E80               	movlw	128
  9647  002806  1A51               	xorwf	(___flge@ff2+3)^0,f,c
  9648  002808  504E               	movf	___flge@ff2^0,w,c
  9649  00280A  5C4A               	subwf	___flge@ff1^0,w,c
  9650  00280C  504F               	movf	(___flge@ff2+1)^0,w,c
  9651  00280E  584B               	subwfb	(___flge@ff1+1)^0,w,c
  9652  002810  5050               	movf	(___flge@ff2+2)^0,w,c
  9653  002812  584C               	subwfb	(___flge@ff1+2)^0,w,c
  9654  002814  5051               	movf	(___flge@ff2+3)^0,w,c
  9655  002816  584D               	subwfb	(___flge@ff1+3)^0,w,c
  9656  002818  B0D8               	btfsc	status,0,c
  9657  00281A  EF11  F014         	goto	u5611
  9658  00281E  EF14  F014         	goto	u5610
  9659  002822                     u5611:
  9660  002822  FFFF               	dw	65535	; assembler added errata NOP
  9661  002824  EF18  F014         	goto	l4725
  9662  002828                     u5610:
  9663  002828  FFFF               	dw	65535	; assembler added errata NOP
  9664  00282A  90D8               	bcf	status,0,c
  9665  00282C  EF1A  F014         	goto	l785
  9666  002830                     l4725:
  9667  002830  FFFF               	dw	65535	; assembler added errata NOP
  9668  002832  80D8               	bsf	status,0,c
  9669  002834                     l785:
  9670  002834  FFFF               	dw	65535	; assembler added errata NOP
  9671  002836  0012               	return		;funcret
  9672  002838  FFFF               	dw	65535	; errata NOP
  9673  00283A                     __end_of___flge:
  9674                           	callstack 0
  9675                           
  9676 ;; *************** function ___fltol *****************
  9677 ;; Defined at:
  9678 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  f1              4   93[COMRAM] unsigned char 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;  exp1            1  102[COMRAM] unsigned char 
  9683 ;;  sign1           1  101[COMRAM] unsigned char 
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  4   93[COMRAM] long 
  9686 ;; Registers used:
  9687 ;;		wreg, status,2, status,0
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9693 ;;      Params:         4       0       0       0       0       0       0
  9694 ;;      Locals:         2       0       0       0       0       0       0
  9695 ;;      Temps:          4       0       0       0       0       0       0
  9696 ;;      Totals:        10       0       0       0       0       0       0
  9697 ;;Total ram usage:       10 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; Hardware stack levels required when called: 2
  9700 ;; This function calls:
  9701 ;;		Nothing
  9702 ;; This function is called by:
  9703 ;;		_init_USART
  9704 ;; This function uses a non-reentrant model
  9705 ;;
  9706                           
  9707                           	psect	text37
  9708  0025DC                     __ptext37:
  9709                           	callstack 0
  9710  0025DC                     ___fltol:
  9711                           	callstack 0
  9712  0025DC  FFFF               	dw	65535	; assembler added errata NOP
  9713  0025DE  3460               	rlcf	(___fltol@f1+2)^0,w,c
  9714  0025E0  3461               	rlcf	(___fltol@f1+3)^0,w,c
  9715  0025E2  6E67               	movwf	___fltol@exp1^0,c
  9716  0025E4  5067               	movf	___fltol@exp1^0,w,c
  9717  0025E6  A4D8               	btfss	status,2,c
  9718  0025E8  EFF8  F012         	goto	u6121
  9719  0025EC  EFFB  F012         	goto	u6120
  9720  0025F0                     u6121:
  9721  0025F0  FFFF               	dw	65535	; assembler added errata NOP
  9722  0025F2  EF07  F013         	goto	l4935
  9723  0025F6                     u6120:
  9724  0025F6  FFFF               	dw	65535	; assembler added errata NOP
  9725  0025F8                     l4931:
  9726  0025F8  FFFF               	dw	65535	; assembler added errata NOP
  9727  0025FA  0E00               	movlw	0
  9728  0025FC  6E5E               	movwf	?___fltol^0,c
  9729  0025FE  0E00               	movlw	0
  9730  002600  6E5F               	movwf	(?___fltol+1)^0,c
  9731  002602  0E00               	movlw	0
  9732  002604  6E60               	movwf	(?___fltol+2)^0,c
  9733  002606  0E00               	movlw	0
  9734  002608  6E61               	movwf	(?___fltol+3)^0,c
  9735  00260A  EF86  F013         	goto	l812
  9736  00260E                     l4935:
  9737  00260E  FFFF               	dw	65535	; assembler added errata NOP
  9738  002610  C05E  F062         	movff	___fltol@f1,??___fltol
  9739  002614  C05F  F063         	movff	___fltol@f1+1,??___fltol+1
  9740  002618  C060  F064         	movff	___fltol@f1+2,??___fltol+2
  9741  00261C  C061  F065         	movff	___fltol@f1+3,??___fltol+3
  9742  002620  0E20               	movlw	32
  9743  002622  EF19  F013         	goto	u6130
  9744  002626                     u6135:
  9745  002626  FFFF               	dw	65535	; assembler added errata NOP
  9746  002628  90D8               	bcf	status,0,c
  9747  00262A  3265               	rrcf	(??___fltol+3)^0,f,c
  9748  00262C  3264               	rrcf	(??___fltol+2)^0,f,c
  9749  00262E  3263               	rrcf	(??___fltol+1)^0,f,c
  9750  002630  3262               	rrcf	??___fltol^0,f,c
  9751  002632                     u6130:
  9752  002632  FFFF               	dw	65535	; assembler added errata NOP
  9753  002634  2EE8               	decfsz	wreg,f,c
  9754  002636  EF13  F013         	goto	u6135
  9755  00263A  5062               	movf	??___fltol^0,w,c
  9756  00263C  6E66               	movwf	___fltol@sign1^0,c
  9757  00263E  8E60               	bsf	(___fltol@f1+2)^0,7,c
  9758  002640  0EFF               	movlw	255
  9759  002642  165E               	andwf	___fltol@f1^0,f,c
  9760  002644  0EFF               	movlw	255
  9761  002646  165F               	andwf	(___fltol@f1+1)^0,f,c
  9762  002648  0EFF               	movlw	255
  9763  00264A  1660               	andwf	(___fltol@f1+2)^0,f,c
  9764  00264C  0E00               	movlw	0
  9765  00264E  1661               	andwf	(___fltol@f1+3)^0,f,c
  9766  002650  0E96               	movlw	150
  9767  002652  5E67               	subwf	___fltol@exp1^0,f,c
  9768  002654  BE67               	btfsc	___fltol@exp1^0,7,c
  9769  002656  EF32  F013         	goto	u6140
  9770  00265A  EF2F  F013         	goto	u6141
  9771  00265E                     u6141:
  9772  00265E  FFFF               	dw	65535	; assembler added errata NOP
  9773  002660  EF4C  F013         	goto	l4955
  9774  002664                     u6140:
  9775  002664  FFFF               	dw	65535	; assembler added errata NOP
  9776  002666  5067               	movf	___fltol@exp1^0,w,c
  9777  002668  0A80               	xorlw	128
  9778  00266A  0F97               	addlw	151
  9779  00266C  B0D8               	btfsc	status,0,c
  9780  00266E  EF3B  F013         	goto	u6151
  9781  002672  EF3E  F013         	goto	u6150
  9782  002676                     u6151:
  9783  002676  FFFF               	dw	65535	; assembler added errata NOP
  9784  002678  EF41  F013         	goto	l4951
  9785  00267C                     u6150:
  9786  00267C  FFFF               	dw	65535	; assembler added errata NOP
  9787  00267E  EFFC  F012         	goto	l4931
  9788  002682                     l4951:
  9789  002682  FFFF               	dw	65535	; assembler added errata NOP
  9790  002684  90D8               	bcf	status,0,c
  9791  002686  3261               	rrcf	(___fltol@f1+3)^0,f,c
  9792  002688  3260               	rrcf	(___fltol@f1+2)^0,f,c
  9793  00268A  325F               	rrcf	(___fltol@f1+1)^0,f,c
  9794  00268C  325E               	rrcf	___fltol@f1^0,f,c
  9795  00268E  3E67               	incfsz	___fltol@exp1^0,f,c
  9796  002690  EF41  F013         	goto	l4951
  9797  002694  EF6A  F013         	goto	l4965
  9798  002698                     l4955:
  9799  002698  FFFF               	dw	65535	; assembler added errata NOP
  9800  00269A  0E1F               	movlw	31
  9801  00269C  6467               	cpfsgt	___fltol@exp1^0,c
  9802  00269E  EF53  F013         	goto	u6161
  9803  0026A2  EF56  F013         	goto	u6160
  9804  0026A6                     u6161:
  9805  0026A6  FFFF               	dw	65535	; assembler added errata NOP
  9806  0026A8  EF60  F013         	goto	l4963
  9807  0026AC                     u6160:
  9808  0026AC  FFFF               	dw	65535	; assembler added errata NOP
  9809  0026AE  EFFC  F012         	goto	l4931
  9810  0026B2                     l4961:
  9811  0026B2  FFFF               	dw	65535	; assembler added errata NOP
  9812  0026B4  90D8               	bcf	status,0,c
  9813  0026B6  365E               	rlcf	___fltol@f1^0,f,c
  9814  0026B8  365F               	rlcf	(___fltol@f1+1)^0,f,c
  9815  0026BA  3660               	rlcf	(___fltol@f1+2)^0,f,c
  9816  0026BC  3661               	rlcf	(___fltol@f1+3)^0,f,c
  9817  0026BE  0667               	decf	___fltol@exp1^0,f,c
  9818  0026C0                     l4963:
  9819  0026C0  FFFF               	dw	65535	; assembler added errata NOP
  9820  0026C2  5067               	movf	___fltol@exp1^0,w,c
  9821  0026C4  A4D8               	btfss	status,2,c
  9822  0026C6  EF67  F013         	goto	u6171
  9823  0026CA  EF6A  F013         	goto	u6170
  9824  0026CE                     u6171:
  9825  0026CE  FFFF               	dw	65535	; assembler added errata NOP
  9826  0026D0  EF59  F013         	goto	l4961
  9827  0026D4                     u6170:
  9828  0026D4                     l4965:
  9829  0026D4  FFFF               	dw	65535	; assembler added errata NOP
  9830  0026D6  5066               	movf	___fltol@sign1^0,w,c
  9831  0026D8  B4D8               	btfsc	status,2,c
  9832  0026DA  EF71  F013         	goto	u6181
  9833  0026DE  EF74  F013         	goto	u6180
  9834  0026E2                     u6181:
  9835  0026E2  FFFF               	dw	65535	; assembler added errata NOP
  9836  0026E4  EF7D  F013         	goto	l4969
  9837  0026E8                     u6180:
  9838  0026E8  FFFF               	dw	65535	; assembler added errata NOP
  9839  0026EA  1E61               	comf	(___fltol@f1+3)^0,f,c
  9840  0026EC  1E60               	comf	(___fltol@f1+2)^0,f,c
  9841  0026EE  1E5F               	comf	(___fltol@f1+1)^0,f,c
  9842  0026F0  6C5E               	negf	___fltol@f1^0,c
  9843  0026F2  0E00               	movlw	0
  9844  0026F4  225F               	addwfc	(___fltol@f1+1)^0,f,c
  9845  0026F6  2260               	addwfc	(___fltol@f1+2)^0,f,c
  9846  0026F8  2261               	addwfc	(___fltol@f1+3)^0,f,c
  9847  0026FA                     l4969:
  9848  0026FA  FFFF               	dw	65535	; assembler added errata NOP
  9849  0026FC  C05E  F05E         	movff	___fltol@f1,?___fltol
  9850  002700  C05F  F05F         	movff	___fltol@f1+1,?___fltol+1
  9851  002704  C060  F060         	movff	___fltol@f1+2,?___fltol+2
  9852  002708  C061  F061         	movff	___fltol@f1+3,?___fltol+3
  9853  00270C                     l812:
  9854  00270C  FFFF               	dw	65535	; assembler added errata NOP
  9855  00270E  0012               	return		;funcret
  9856  002710  FFFF               	dw	65535	; errata NOP
  9857  002712                     __end_of___fltol:
  9858                           	callstack 0
  9859                           
  9860 ;; *************** function _init_Timers *****************
  9861 ;; Defined at:
  9862 ;;		line 44 in file "init_PIC.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;		None
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;		None
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  1    wreg      void 
  9869 ;; Registers used:
  9870 ;;		wreg, status,2
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9876 ;;      Params:         0       0       0       0       0       0       0
  9877 ;;      Locals:         0       0       0       0       0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0
  9879 ;;      Totals:         0       0       0       0       0       0       0
  9880 ;;Total ram usage:        0 bytes
  9881 ;; Hardware stack levels used: 1
  9882 ;; Hardware stack levels required when called: 2
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_main
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text38
  9891  0034E2                     __ptext38:
  9892                           	callstack 0
  9893  0034E2                     _init_Timers:
  9894                           	callstack 0
  9895  0034E2  FFFF               	dw	65535	; assembler added errata NOP
  9896  0034E4                     
  9897                           ;init_PIC.c: 45:     T0CONbits.T08BIT = 0;
  9898  0034E4  9CD5               	bcf	213,6,c	;volatile
  9899                           
  9900                           ;init_PIC.c: 46:  T0CONbits.T0CS = 0;
  9901  0034E6  9AD5               	bcf	213,5,c	;volatile
  9902                           
  9903                           ;init_PIC.c: 47:  T0CONbits.PSA = 1;
  9904  0034E8  86D5               	bsf	213,3,c	;volatile
  9905                           
  9906                           ;init_PIC.c: 48:  T0CONbits.TMR0ON = 0;
  9907  0034EA  9ED5               	bcf	213,7,c	;volatile
  9908  0034EC                     
  9909                           ;init_PIC.c: 51:  TMR0H = 0xB2;
  9910  0034EC  0EB2               	movlw	178
  9911  0034EE  6ED7               	movwf	215,c	;volatile
  9912                           
  9913                           ;init_PIC.c: 52:  TMR0L = 0x04;
  9914  0034F0  0E04               	movlw	4
  9915  0034F2  6ED6               	movwf	214,c	;volatile
  9916  0034F4                     
  9917                           ;init_PIC.c: 55:     T1CONbits.RD16 = 1;
  9918  0034F4  8ECD               	bsf	205,7,c	;volatile
  9919  0034F6                     
  9920                           ;init_PIC.c: 56:  T1CONbits.T1CKPS1 = 0;
  9921  0034F6  9ACD               	bcf	205,5,c	;volatile
  9922  0034F8                     
  9923                           ;init_PIC.c: 57:  T1CONbits.T1CKPS0 = 0;
  9924  0034F8  98CD               	bcf	205,4,c	;volatile
  9925  0034FA                     
  9926                           ;init_PIC.c: 58:  T1CONbits.T1OSCEN = 0;
  9927  0034FA  96CD               	bcf	205,3,c	;volatile
  9928  0034FC                     
  9929                           ;init_PIC.c: 59:  T1CONbits.TMR1CS = 0;
  9930  0034FC  92CD               	bcf	205,1,c	;volatile
  9931  0034FE                     
  9932                           ;init_PIC.c: 60:  T1CONbits.TMR1ON = 0;
  9933  0034FE  90CD               	bcf	205,0,c	;volatile
  9934                           
  9935                           ;init_PIC.c: 63:  TMR1H = 0xFA;
  9936  003500  0EFA               	movlw	250
  9937  003502  6ECF               	movwf	207,c	;volatile
  9938                           
  9939                           ;init_PIC.c: 64:     TMR1L = 0x24;
  9940  003504  0E24               	movlw	36
  9941  003506  6ECE               	movwf	206,c	;volatile
  9942  003508  0012               	return		;funcret
  9943  00350A  FFFF               	dw	65535	; errata NOP
  9944  00350C                     __end_of_init_Timers:
  9945                           	callstack 0
  9946                           
  9947 ;; *************** function _init_PORTS *****************
  9948 ;; Defined at:
  9949 ;;		line 21 in file "init_PIC.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;		None
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;		None
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  1    wreg      void 
  9956 ;; Registers used:
  9957 ;;		wreg, status,2
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9963 ;;      Params:         0       0       0       0       0       0       0
  9964 ;;      Locals:         0       0       0       0       0       0       0
  9965 ;;      Temps:          0       0       0       0       0       0       0
  9966 ;;      Totals:         0       0       0       0       0       0       0
  9967 ;;Total ram usage:        0 bytes
  9968 ;; Hardware stack levels used: 1
  9969 ;; Hardware stack levels required when called: 2
  9970 ;; This function calls:
  9971 ;;		Nothing
  9972 ;; This function is called by:
  9973 ;;		_main
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           	psect	text39
  9978  00350C                     __ptext39:
  9979                           	callstack 0
  9980  00350C                     _init_PORTS:
  9981                           	callstack 0
  9982  00350C  FFFF               	dw	65535	; assembler added errata NOP
  9983  00350E                     
  9984                           ;init_PIC.c: 25:     TRISD = 0x00;
  9985  00350E  0E00               	movlw	0
  9986  003510  6E95               	movwf	149,c	;volatile
  9987                           
  9988                           ;init_PIC.c: 26:     TRISA = 0x00;
  9989  003512  0E00               	movlw	0
  9990  003514  6E92               	movwf	146,c	;volatile
  9991                           
  9992                           ;init_PIC.c: 27:     TRISB = 0X03;
  9993  003516  0E03               	movlw	3
  9994  003518  6E93               	movwf	147,c	;volatile
  9995                           
  9996                           ;init_PIC.c: 28:     PORTA = 0x00;
  9997  00351A  0E00               	movlw	0
  9998  00351C  6E80               	movwf	128,c	;volatile
  9999                           
 10000                           ;init_PIC.c: 34:     LATC = 0;
 10001  00351E  0E00               	movlw	0
 10002  003520  6E8B               	movwf	139,c	;volatile
 10003                           
 10004                           ;init_PIC.c: 35:     PORTC = 0;
 10005  003522  0E00               	movlw	0
 10006  003524  6E82               	movwf	130,c	;volatile
 10007  003526                     
 10008                           ;init_PIC.c: 36:     TRISCbits.RC7 = 1;
 10009  003526  8E94               	bsf	148,7,c	;volatile
 10010  003528                     
 10011                           ;init_PIC.c: 37:     TRISCbits.RC6 = 0;
 10012  003528  9C94               	bcf	148,6,c	;volatile
 10013  00352A                     
 10014                           ;init_PIC.c: 38:     TRISCbits.RC2 = 0;
 10015  00352A  9494               	bcf	148,2,c	;volatile
 10016  00352C  0012               	return		;funcret
 10017  00352E  FFFF               	dw	65535	; errata NOP
 10018  003530                     __end_of_init_PORTS:
 10019                           	callstack 0
 10020                           
 10021 ;; *************** function _Rx_char_USART *****************
 10022 ;; Defined at:
 10023 ;;		line 724 in file "main.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;		None
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  i               2    7[COMRAM] int 
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10037 ;;      Params:         0       0       0       0       0       0       0
 10038 ;;      Locals:         2       0       0       0       0       0       0
 10039 ;;      Temps:          5       0       0       0       0       0       0
 10040 ;;      Totals:         7       0       0       0       0       0       0
 10041 ;;Total ram usage:        7 bytes
 10042 ;; Hardware stack levels used: 1
 10043 ;; Hardware stack levels required when called: 1
 10044 ;; This function calls:
 10045 ;;		_set_new_pos
 10046 ;; This function is called by:
 10047 ;;		Interrupt level 2
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	intcode
 10052  000008                     __pintcode:
 10053                           	callstack 0
 10054  000008                     _Rx_char_USART:
 10055                           	callstack 0
 10056  000008  FFFF               	dw	65535	; assembler added errata NOP
 10057                           
 10058                           ;incstack = 0
 10059  00000A  8271               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10060  00000C  CFD9 F006          	movff	fsr2l,??_Rx_char_USART+3
 10061  000010  CFDA F007          	movff	fsr2h,??_Rx_char_USART+4
 10062  000014                     
 10063                           ;main.c: 726:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 10064  000014  AA9D               	btfss	157,5,c	;volatile
 10065  000016  EF0F  F000         	goto	i2u484_41
 10066  00001A  EF12  F000         	goto	i2u484_40
 10067  00001E                     i2u484_41:
 10068  00001E  FFFF               	dw	65535	; assembler added errata NOP
 10069  000020  EF73  F000         	goto	i2l4293
 10070  000024                     i2u484_40:
 10071  000024  FFFF               	dw	65535	; assembler added errata NOP
 10072  000026  AA9E               	btfss	158,5,c	;volatile
 10073  000028  EF18  F000         	goto	i2u485_41
 10074  00002C  EF1B  F000         	goto	i2u485_40
 10075  000030                     i2u485_41:
 10076  000030  FFFF               	dw	65535	; assembler added errata NOP
 10077  000032  EF73  F000         	goto	i2l4293
 10078  000036                     i2u485_40:
 10079  000036  FFFF               	dw	65535	; assembler added errata NOP
 10080  000038                     
 10081                           ;main.c: 727:         int i=0;
 10082  000038  0E00               	movlw	0
 10083  00003A  6E09               	movwf	(Rx_char_USART@i+1)^0,c
 10084  00003C  0E00               	movlw	0
 10085  00003E  6E08               	movwf	Rx_char_USART@i^0,c
 10086  000040                     i2l499:
 10087  000040  FFFF               	dw	65535	; assembler added errata NOP
 10088  000042  B2F2               	btfsc	242,1,c	;volatile
 10089  000044  EF26  F000         	goto	i2u486_41
 10090  000048  EF29  F000         	goto	i2u486_40
 10091  00004C                     i2u486_41:
 10092  00004C  FFFF               	dw	65535	; assembler added errata NOP
 10093  00004E  EF32  F000         	goto	i2l4279
 10094  000052                     i2u486_40:
 10095  000052  FFFF               	dw	65535	; assembler added errata NOP
 10096  000054  AA9E               	btfss	3998,5,c	;volatile
 10097  000056  EF2F  F000         	goto	i2u487_41
 10098  00005A  EF32  F000         	goto	i2u487_40
 10099  00005E                     i2u487_41:
 10100  00005E  FFFF               	dw	65535	; assembler added errata NOP
 10101  000060  EF20  F000         	goto	i2l499
 10102  000064                     i2u487_40:
 10103  000064                     i2l4279:
 10104  000064  FFFF               	dw	65535	; assembler added errata NOP
 10105                           
 10106                           ;main.c: 731:             input_str[i]=RCREG;
 10107  000066  0EE6               	movlw	low _input_str
 10108  000068  2408               	addwf	Rx_char_USART@i^0,w,c
 10109  00006A  6ED9               	movwf	fsr2l,c
 10110  00006C  0E00               	movlw	high _input_str
 10111  00006E  2009               	addwfc	(Rx_char_USART@i+1)^0,w,c
 10112  000070  6EDA               	movwf	fsr2h,c
 10113  000072  CFAE FFDF          	movff	4014,indf2	;volatile
 10114  000076                     
 10115                           ;main.c: 732:         }while(INTCONbits.INT0IF==0 && input_str[i++] != '\n');
 10116  000076  B2F2               	btfsc	242,1,c	;volatile
 10117  000078  EF40  F000         	goto	i2u488_41
 10118  00007C  EF43  F000         	goto	i2u488_40
 10119  000080                     i2u488_41:
 10120  000080  FFFF               	dw	65535	; assembler added errata NOP
 10121  000082  EF5A  F000         	goto	i2l506
 10122  000086                     i2u488_40:
 10123  000086  FFFF               	dw	65535	; assembler added errata NOP
 10124  000088  5008               	movf	Rx_char_USART@i^0,w,c
 10125  00008A  6E03               	movwf	??_Rx_char_USART^0,c
 10126  00008C  5009               	movf	(Rx_char_USART@i+1)^0,w,c
 10127  00008E  6E04               	movwf	(??_Rx_char_USART+1)^0,c
 10128  000090  4A08               	infsnz	Rx_char_USART@i^0,f,c
 10129  000092  2A09               	incf	(Rx_char_USART@i+1)^0,f,c
 10130  000094  0EE6               	movlw	low _input_str
 10131  000096  2403               	addwf	??_Rx_char_USART^0,w,c
 10132  000098  6ED9               	movwf	fsr2l,c
 10133  00009A  0E00               	movlw	high _input_str
 10134  00009C  2004               	addwfc	(??_Rx_char_USART+1)^0,w,c
 10135  00009E  6EDA               	movwf	fsr2h,c
 10136  0000A0  0E0A               	movlw	10
 10137  0000A2  18DE               	xorwf	postinc2,w,c
 10138  0000A4  A4D8               	btfss	status,2,c
 10139  0000A6  EF57  F000         	goto	i2u489_41
 10140  0000AA  EF5A  F000         	goto	i2u489_40
 10141  0000AE                     i2u489_41:
 10142  0000AE  FFFF               	dw	65535	; assembler added errata NOP
 10143  0000B0  EF20  F000         	goto	i2l499
 10144  0000B4                     i2u489_40:
 10145  0000B4                     i2l506:
 10146  0000B4  FFFF               	dw	65535	; assembler added errata NOP
 10147                           
 10148                           ;main.c: 734:         PIR1bits.RCIF = 0;
 10149  0000B6  9A9E               	bcf	158,5,c	;volatile
 10150  0000B8                     
 10151                           ;main.c: 735:         New_char_RX = 1;
 10152  0000B8  0E01               	movlw	1
 10153  0000BA  6E70               	movwf	_New_char_RX^0,c
 10154  0000BC                     
 10155                           ;main.c: 736:         State = input_str[0];
 10156  0000BC  C0E6  F06E         	movff	_input_str,_State	;volatile
 10157  0000C0                     
 10158                           ;main.c: 737:         if(State=="Q"){
 10159  0000C0  506E               	movf	_State^0,w,c
 10160  0000C2  6E03               	movwf	??_Rx_char_USART^0,c
 10161  0000C4  6A04               	clrf	(??_Rx_char_USART+1)^0,c
 10162  0000C6  0EFD               	movlw	low STR_21
 10163  0000C8  1803               	xorwf	??_Rx_char_USART^0,w,c
 10164  0000CA  E107               	bnz	i2u490_41
 10165  0000CC  0E7F               	movlw	high STR_21
 10166  0000CE  1804               	xorwf	(??_Rx_char_USART+1)^0,w,c
 10167  0000D0  A4D8               	btfss	status,2,c
 10168  0000D2  EF6D  F000         	goto	i2u490_41
 10169  0000D6  EF70  F000         	goto	i2u490_40
 10170  0000DA                     i2u490_41:
 10171  0000DA  FFFF               	dw	65535	; assembler added errata NOP
 10172  0000DC  EF73  F000         	goto	i2l4293
 10173  0000E0                     i2u490_40:
 10174  0000E0  FFFF               	dw	65535	; assembler added errata NOP
 10175  0000E2                     
 10176                           ;main.c: 738:             stop=1;
 10177  0000E2  0E01               	movlw	1
 10178  0000E4  6E6A               	movwf	_stop^0,c
 10179  0000E6                     i2l4293:
 10180  0000E6  FFFF               	dw	65535	; assembler added errata NOP
 10181                           
 10182                           ;main.c: 744:     if(INTCONbits.INT0IF==1 && INTCONbits.INT0IE==1){
 10183  0000E8  A2F2               	btfss	242,1,c	;volatile
 10184  0000EA  EF79  F000         	goto	i2u491_41
 10185  0000EE  EF7C  F000         	goto	i2u491_40
 10186  0000F2                     i2u491_41:
 10187  0000F2  FFFF               	dw	65535	; assembler added errata NOP
 10188  0000F4  EF8C  F000         	goto	i2l4301
 10189  0000F8                     i2u491_40:
 10190  0000F8  FFFF               	dw	65535	; assembler added errata NOP
 10191  0000FA  A8F2               	btfss	242,4,c	;volatile
 10192  0000FC  EF82  F000         	goto	i2u492_41
 10193  000100  EF85  F000         	goto	i2u492_40
 10194  000104                     i2u492_41:
 10195  000104  FFFF               	dw	65535	; assembler added errata NOP
 10196  000106  EF8C  F000         	goto	i2l4301
 10197  00010A                     i2u492_40:
 10198  00010A  FFFF               	dw	65535	; assembler added errata NOP
 10199  00010C                     
 10200                           ;main.c: 745:         INTCONbits.INT0IF=0;
 10201  00010C  92F2               	bcf	242,1,c	;volatile
 10202  00010E                     
 10203                           ;main.c: 747:         input_str[0]="Q";
 10204  00010E  0EFD               	movlw	low (low STR_21)
 10205  000110  0100               	movlb	0	; () banked
 10206  000112  6FE6               	movwf	_input_str& (0+255),b	;volatile
 10207                           
 10208                           ;main.c: 748:         stop=1;
 10209  000114  0E01               	movlw	1
 10210  000116  6E6A               	movwf	_stop^0,c
 10211  000118                     i2l4301:
 10212  000118  FFFF               	dw	65535	; assembler added errata NOP
 10213                           
 10214                           ;main.c: 753:     if(INTCON3bits.INT1IF==1 && INTCON3bits.INT1IE==1){
 10215  00011A  A0F0               	btfss	240,0,c	;volatile
 10216  00011C  EF92  F000         	goto	i2u493_41
 10217  000120  EF95  F000         	goto	i2u493_40
 10218  000124                     i2u493_41:
 10219  000124  FFFF               	dw	65535	; assembler added errata NOP
 10220  000126  EFA2  F000         	goto	i2l4309
 10221  00012A                     i2u493_40:
 10222  00012A  FFFF               	dw	65535	; assembler added errata NOP
 10223  00012C  A6F0               	btfss	240,3,c	;volatile
 10224  00012E  EF9B  F000         	goto	i2u494_41
 10225  000132  EF9E  F000         	goto	i2u494_40
 10226  000136                     i2u494_41:
 10227  000136  FFFF               	dw	65535	; assembler added errata NOP
 10228  000138  EFA2  F000         	goto	i2l4309
 10229  00013C                     i2u494_40:
 10230  00013C  FFFF               	dw	65535	; assembler added errata NOP
 10231  00013E                     
 10232                           ;main.c: 754:         INTCON3bits.INT1IF=0;
 10233  00013E  90F0               	bcf	240,0,c	;volatile
 10234  000140                     
 10235                           ;main.c: 755:         component_present=1;
 10236  000140  0E01               	movlw	1
 10237  000142  6E6B               	movwf	_component_present^0,c
 10238  000144                     i2l4309:
 10239  000144  FFFF               	dw	65535	; assembler added errata NOP
 10240                           
 10241                           ;main.c: 760:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
 10242  000146  AAF2               	btfss	242,5,c	;volatile
 10243  000148  EFA8  F000         	goto	i2u495_41
 10244  00014C  EFAB  F000         	goto	i2u495_40
 10245  000150                     i2u495_41:
 10246  000150  FFFF               	dw	65535	; assembler added errata NOP
 10247  000152  EFC1  F000         	goto	i2l4323
 10248  000156                     i2u495_40:
 10249  000156  FFFF               	dw	65535	; assembler added errata NOP
 10250  000158  A4F2               	btfss	242,2,c	;volatile
 10251  00015A  EFB1  F000         	goto	i2u496_41
 10252  00015E  EFB4  F000         	goto	i2u496_40
 10253  000162                     i2u496_41:
 10254  000162  FFFF               	dw	65535	; assembler added errata NOP
 10255  000164  EFC1  F000         	goto	i2l4323
 10256  000168                     i2u496_40:
 10257  000168  FFFF               	dw	65535	; assembler added errata NOP
 10258  00016A                     
 10259                           ;main.c: 761:         {;main.c: 763:          TMR0H = 0xB2;
 10260  00016A  0EB2               	movlw	178
 10261  00016C  6ED7               	movwf	215,c	;volatile
 10262                           
 10263                           ;main.c: 764:             TMR0L = 0x04;
 10264  00016E  0E04               	movlw	4
 10265  000170  6ED6               	movwf	214,c	;volatile
 10266  000172                     
 10267                           ;main.c: 765:    set_new_pos(new_TMR1H, new_TMR1L);
 10268  000172  C06C  F001         	movff	_new_TMR1L@main$F825,set_new_pos@nTMR1L
 10269  000176  506D               	movf	_new_TMR1H@main$F824^0,w,c
 10270  000178  ECC7  F01A         	call	_set_new_pos
 10271  00017C                     
 10272                           ;main.c: 766:             T0CONbits.TMR0ON = 1;
 10273  00017C  8ED5               	bsf	213,7,c	;volatile
 10274  00017E                     
 10275                           ;main.c: 767:    T1CONbits.TMR1ON = 1;
 10276  00017E  80CD               	bsf	205,0,c	;volatile
 10277  000180                     
 10278                           ;main.c: 768:             INTCONbits.TMR0IF = 0;
 10279  000180  94F2               	bcf	242,2,c	;volatile
 10280  000182                     i2l4323:
 10281  000182  FFFF               	dw	65535	; assembler added errata NOP
 10282                           
 10283                           ;main.c: 772:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF)
 10284  000184  A09D               	btfss	157,0,c	;volatile
 10285  000186  EFC7  F000         	goto	i2u497_41
 10286  00018A  EFCA  F000         	goto	i2u497_40
 10287  00018E                     i2u497_41:
 10288  00018E  FFFF               	dw	65535	; assembler added errata NOP
 10289  000190  EFD7  F000         	goto	i2l512
 10290  000194                     i2u497_40:
 10291  000194  FFFF               	dw	65535	; assembler added errata NOP
 10292  000196  A09E               	btfss	158,0,c	;volatile
 10293  000198  EFD0  F000         	goto	i2u498_41
 10294  00019C  EFD3  F000         	goto	i2u498_40
 10295  0001A0                     i2u498_41:
 10296  0001A0  FFFF               	dw	65535	; assembler added errata NOP
 10297  0001A2  EFD7  F000         	goto	i2l512
 10298  0001A6                     i2u498_40:
 10299  0001A6  FFFF               	dw	65535	; assembler added errata NOP
 10300  0001A8                     
 10301                           ;main.c: 773:         {;main.c: 774:             LATCbits.LC2 = 0;
 10302  0001A8  948B               	bcf	139,2,c	;volatile
 10303                           
 10304                           ;main.c: 775:             T1CONbits.TMR1ON = 0;
 10305  0001AA  90CD               	bcf	205,0,c	;volatile
 10306                           
 10307                           ;main.c: 776:          PIR1bits.TMR1IF = 0;
 10308  0001AC  909E               	bcf	158,0,c	;volatile
 10309  0001AE                     i2l512:
 10310  0001AE  FFFF               	dw	65535	; assembler added errata NOP
 10311  0001B0  C007  FFDA         	movff	??_Rx_char_USART+4,fsr2h
 10312  0001B4  C006  FFD9         	movff	??_Rx_char_USART+3,fsr2l
 10313  0001B8  9271               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10314  0001BA  0011               	retfie		f
 10315  0001BC  FFFF               	dw	65535	; errata NOP
 10316  0001BE                     __end_of_Rx_char_USART:
 10317                           	callstack 0
 10318                           
 10319 ;; *************** function _set_new_pos *****************
 10320 ;; Defined at:
 10321 ;;		line 518 in file "main.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;  nTMR1H          1    wreg     unsigned char 
 10324 ;;  nTMR1L          1    0[COMRAM] unsigned char 
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;  nTMR1H          1    1[COMRAM] unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      void 
 10329 ;; Registers used:
 10330 ;;		wreg
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10336 ;;      Params:         1       0       0       0       0       0       0
 10337 ;;      Locals:         1       0       0       0       0       0       0
 10338 ;;      Temps:          0       0       0       0       0       0       0
 10339 ;;      Totals:         2       0       0       0       0       0       0
 10340 ;;Total ram usage:        2 bytes
 10341 ;; Hardware stack levels used: 1
 10342 ;; This function calls:
 10343 ;;		Nothing
 10344 ;; This function is called by:
 10345 ;;		_Rx_char_USART
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           
 10349                           	psect	text41
 10350  00358E                     __ptext41:
 10351                           	callstack 0
 10352  00358E                     _set_new_pos:
 10353                           	callstack 0
 10354  00358E  FFFF               	dw	65535	; assembler added errata NOP
 10355                           
 10356                           ;incstack = 0
 10357                           ;set_new_pos@nTMR1H stored from wreg
 10358  003590  6E02               	movwf	set_new_pos@nTMR1H^0,c
 10359  003592                     
 10360                           ;main.c: 518: void set_new_pos(uint8_t nTMR1H, uint8_t nTMR1L);main.c: 519: {;main.c: 52
      +                          0:     TMR1H = nTMR1H;
 10361  003592  C002  FFCF         	movff	set_new_pos@nTMR1H,4047	;volatile
 10362  003596                     
 10363                           ;main.c: 521:     TMR1L = nTMR1L;
 10364  003596  C001  FFCE         	movff	set_new_pos@nTMR1L,4046	;volatile
 10365  00359A                     
 10366                           ;main.c: 541:     LATCbits.LC2 = 1;
 10367  00359A  848B               	bsf	139,2,c	;volatile
 10368  00359C                     
 10369                           ;main.c: 542:  T1CONbits.TMR1ON = 1;
 10370  00359C  80CD               	bsf	205,0,c	;volatile
 10371  00359E  0012               	return		;funcret
 10372  0035A0  FFFF               	dw	65535	; errata NOP
 10373  0035A2                     __end_of_set_new_pos:
 10374                           	callstack 0
 10375                           
 10376                           	psect	rparam
 10377  0000                     
 10378                           	psect	temp
 10379  000071                     btemp:
 10380                           	callstack 0
 10381  000071                     	ds	1
 10382  0000                     int$flags	set	btemp
 10383  0000                     wtemp8	set	btemp+1
 10384  0000                     ttemp5	set	btemp+1
 10385  0000                     ttemp6	set	btemp+4
 10386  0000                     ttemp7	set	btemp+8
 10387                           
 10388                           	psect	idloc
 10389                           
 10390                           ;Config register IDLOC0 @ 0x200000
 10391                           ;	unspecified, using default values
 10392  200000                     	org	2097152
 10393  200000  FF                 	db	255
 10394                           
 10395                           ;Config register IDLOC1 @ 0x200001
 10396                           ;	unspecified, using default values
 10397  200001                     	org	2097153
 10398  200001  FF                 	db	255
 10399                           
 10400                           ;Config register IDLOC2 @ 0x200002
 10401                           ;	unspecified, using default values
 10402  200002                     	org	2097154
 10403  200002  FF                 	db	255
 10404                           
 10405                           ;Config register IDLOC3 @ 0x200003
 10406                           ;	unspecified, using default values
 10407  200003                     	org	2097155
 10408  200003  FF                 	db	255
 10409                           
 10410                           ;Config register IDLOC4 @ 0x200004
 10411                           ;	unspecified, using default values
 10412  200004                     	org	2097156
 10413  200004  FF                 	db	255
 10414                           
 10415                           ;Config register IDLOC5 @ 0x200005
 10416                           ;	unspecified, using default values
 10417  200005                     	org	2097157
 10418  200005  FF                 	db	255
 10419                           
 10420                           ;Config register IDLOC6 @ 0x200006
 10421                           ;	unspecified, using default values
 10422  200006                     	org	2097158
 10423  200006  FF                 	db	255
 10424                           
 10425                           ;Config register IDLOC7 @ 0x200007
 10426                           ;	unspecified, using default values
 10427  200007                     	org	2097159
 10428  200007  FF                 	db	255
 10429                           
 10430                           	psect	config
 10431                           
 10432                           ; Padding undefined space
 10433  300000                     	org	3145728
 10434  300000  FF                 	db	255
 10435                           
 10436                           ;Config register CONFIG1H @ 0x300001
 10437                           ;	Oscillator Selection bits
 10438                           ;	OSC = XT, XT oscillator
 10439                           ;	Oscillator System Clock Switch Enable bit
 10440                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 10441  300001                     	org	3145729
 10442  300001  21                 	db	33
 10443                           
 10444                           ;Config register CONFIG2L @ 0x300002
 10445                           ;	Power-up Timer Enable bit
 10446                           ;	PWRT = OFF, PWRT disabled
 10447                           ;	Brown-out Reset Enable bit
 10448                           ;	BOR = OFF, Brown-out Reset disabled
 10449                           ;	Brown-out Reset Voltage bits
 10450                           ;	BORV = 20, VBOR set to 2.0V
 10451  300002                     	org	3145730
 10452  300002  0D                 	db	13
 10453                           
 10454                           ;Config register CONFIG2H @ 0x300003
 10455                           ;	Watchdog Timer Enable bit
 10456                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10457                           ;	Watchdog Timer Postscale Select bits
 10458                           ;	WDTPS = 128, 1:128
 10459  300003                     	org	3145731
 10460  300003  0E                 	db	14
 10461                           
 10462                           ; Padding undefined space
 10463  300004                     	org	3145732
 10464  300004  FF                 	db	255
 10465                           
 10466                           ;Config register CONFIG3H @ 0x300005
 10467                           ;	CCP2 Mux bit
 10468                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
 10469  300005                     	org	3145733
 10470  300005  00                 	db	0
 10471                           
 10472                           ;Config register CONFIG4L @ 0x300006
 10473                           ;	Stack Full/Underflow Reset Enable bit
 10474                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
 10475                           ;	Low Voltage ICSP Enable bit
 10476                           ;	LVP = OFF, Low Voltage ICSP disabled
 10477                           ;	Background Debugger Enable bit
 10478                           ;	DEBUG = 0x1, unprogrammed default
 10479  300006                     	org	3145734
 10480  300006  80                 	db	128
 10481                           
 10482                           ; Padding undefined space
 10483  300007                     	org	3145735
 10484  300007  FF                 	db	255
 10485                           
 10486                           ;Config register CONFIG5L @ 0x300008
 10487                           ;	Code Protection bit
 10488                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 10489                           ;	Code Protection bit
 10490                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 10491                           ;	Code Protection bit
 10492                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 10493                           ;	Code Protection bit
 10494                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 10495  300008                     	org	3145736
 10496  300008  0F                 	db	15
 10497                           
 10498                           ;Config register CONFIG5H @ 0x300009
 10499                           ;	Boot Block Code Protection bit
 10500                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 10501                           ;	Data EEPROM Code Protection bit
 10502                           ;	CPD = OFF, Data EEPROM not code protected
 10503  300009                     	org	3145737
 10504  300009  C0                 	db	192
 10505                           
 10506                           ;Config register CONFIG6L @ 0x30000A
 10507                           ;	Write Protection bit
 10508                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 10509                           ;	Write Protection bit
 10510                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 10511                           ;	Write Protection bit
 10512                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 10513                           ;	Write Protection bit
 10514                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 10515  30000A                     	org	3145738
 10516  30000A  0F                 	db	15
 10517                           
 10518                           ;Config register CONFIG6H @ 0x30000B
 10519                           ;	Configuration Register Write Protection bit
 10520                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 10521                           ;	Boot Block Write Protection bit
 10522                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 10523                           ;	Data EEPROM Write Protection bit
 10524                           ;	WRTD = OFF, Data EEPROM not write protected
 10525  30000B                     	org	3145739
 10526  30000B  E0                 	db	224
 10527                           
 10528                           ;Config register CONFIG7L @ 0x30000C
 10529                           ;	Table Read Protection bit
 10530                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 10531                           ;	Table Read Protection bit
 10532                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 10533                           ;	Table Read Protection bit
 10534                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 10535                           ;	Table Read Protection bit
 10536                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 10537  30000C                     	org	3145740
 10538  30000C  0F                 	db	15
 10539                           
 10540                           ;Config register CONFIG7H @ 0x30000D
 10541                           ;	Boot Block Table Read Protection bit
 10542                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 10543  30000D                     	org	3145741
 10544  30000D  40                 	db	64
 10545                           tosu	equ	0xFFF
 10546                           tosh	equ	0xFFE
 10547                           tosl	equ	0xFFD
 10548                           stkptr	equ	0xFFC
 10549                           pclatu	equ	0xFFB
 10550                           pclath	equ	0xFFA
 10551                           pcl	equ	0xFF9
 10552                           tblptru	equ	0xFF8
 10553                           tblptrh	equ	0xFF7
 10554                           tblptrl	equ	0xFF6
 10555                           tablat	equ	0xFF5
 10556                           prodh	equ	0xFF4
 10557                           prodl	equ	0xFF3
 10558                           indf0	equ	0xFEF
 10559                           postinc0	equ	0xFEE
 10560                           postdec0	equ	0xFED
 10561                           preinc0	equ	0xFEC
 10562                           plusw0	equ	0xFEB
 10563                           fsr0h	equ	0xFEA
 10564                           fsr0l	equ	0xFE9
 10565                           wreg	equ	0xFE8
 10566                           indf1	equ	0xFE7
 10567                           postinc1	equ	0xFE6
 10568                           postdec1	equ	0xFE5
 10569                           preinc1	equ	0xFE4
 10570                           plusw1	equ	0xFE3
 10571                           fsr1h	equ	0xFE2
 10572                           fsr1l	equ	0xFE1
 10573                           bsr	equ	0xFE0
 10574                           indf2	equ	0xFDF
 10575                           postinc2	equ	0xFDE
 10576                           postdec2	equ	0xFDD
 10577                           preinc2	equ	0xFDC
 10578                           plusw2	equ	0xFDB
 10579                           fsr2h	equ	0xFDA
 10580                           fsr2l	equ	0xFD9
 10581                           status	equ	0xFD8

Data Sizes:
    Strings     688
    Constant    20
    Data        33
    BSS         88
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    103     112
    BANK0           128     33     116
    BANK1           256      0      30
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> input_str(BANK0[10]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 112
		 -> STR_20(CODE[20]), STR_19(CODE[20]), STR_18(CODE[10]), STR_17(CODE[12]), 
		 -> STR_16(CODE[70]), STR_15(CODE[19]), STR_14(CODE[63]), STR_13(CODE[20]), 
		 -> STR_12(CODE[30]), STR_11(CODE[29]), STR_10(CODE[29]), STR_9(CODE[29]), 
		 -> STR_8(CODE[28]), STR_7(CODE[28]), STR_6(CODE[52]), STR_5(CODE[27]), 
		 -> add_component@add_componnt(COMRAM[2]), STR_4(CODE[40]), STR_3(CODE[27]), sequence(BANK0[4]), 
		 -> STR_2(CODE[21]), STR_1(CODE[112]), 


Critical Paths under _main in COMRAM

    _start_up_menu->_pick_and_place
    _return_to_initial->_Z_axis
    _remove_component->_strrchr
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _pick_and_place->___flge
    _check_component->_print_string
    ___fldiv->___xxtofl
    _Z_axis->_ms_delay
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _change_sequence->_print_string
    _add_component->_atoi
    _strcat->_strcpy
    _strcpy->_strlen
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flmul->___fldiv
    ___flge->___flmul
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    _Rx_char_USART->_set_new_pos

Critical Paths under _main in BANK0

    _start_up_menu->_pick_and_place
    _init_USART->_roundf
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   64373
                         _init_PORTS
                        _init_Timers
                         _init_USART
                    _init_interrupts
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                        4     4      0   49509
                                             87 COMRAM     4     4      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
                  _return_to_initial
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _return_to_initial                                    9     9      0   12192
                                             18 COMRAM     9     9      0
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
 ---------------------------------------------------------------------------------
 (2) _remove_component                                     5     5      0    4151
                                             27 COMRAM     5     5      0
                            _memmove
                       _print_string
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4    1018
                                             23 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     406
                                             13 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     592
                                             13 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _pick_and_place                                      35    35      0   23186
                                             85 COMRAM     2     2      0
                                              0 BANK0     33    33      0
                            _Tweezer
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                    _check_component
                   _fetch_parameters
                         _print_char
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _fetch_parameters                                     1     1      0      88
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_component                                      5     5      0    2058
                                             15 COMRAM     5     5      0
                         _print_char
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _print_char                                           1     1      0      22
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     762
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1551
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Z_axis                                               3     3      0    3024
                                             15 COMRAM     3     3      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Y_axis                                               1     1      0    3024
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _X_axis                                               1     1      0    3024
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Twister                                              1     1      0    3024
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _ms_delay                                             6     4      2    2980
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _Tweezer                                              1     1      0      44
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                      5     5      0    2057
                                             15 COMRAM     5     5      0
                       _print_string
 ---------------------------------------------------------------------------------
 (2) _add_component                                        2     2      0    5471
                                             31 COMRAM     2     2      0
                               _atoi
                       _print_string
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     0      4     866
                                             21 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     394
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               8     4      4     248
                                             13 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2    1990
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    2544
                                             16 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     207
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     161
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1399
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   14864
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   14437
                                             85 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4907
                                             25 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    4522
                                              9 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     245
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2873
                                             48 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                             73 COMRAM    12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             93 COMRAM    10     6      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Rx_char_USART                                        7     7      0     165
                                              2 COMRAM     7     7      0
                        _set_new_pos
 ---------------------------------------------------------------------------------
 (6) _set_new_pos                                          2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_Timers
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _print_string
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
     _change_sequence
       _print_string
     _pick_and_place
       _Tweezer
       _Twister
         _ms_delay
       _X_axis
         _ms_delay
       _Y_axis
         _ms_delay
       _Z_axis
         _ms_delay
       ___fldiv
       ___flge
       ___flmul
       ___xxtofl
       _check_component
         _print_char
         _print_string
       _fetch_parameters
       _print_char
       _print_string
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _print_string
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen
     _return_to_initial
       _Twister
       _X_axis
       _Y_axis
       _Z_axis
     _strlen

 _Rx_char_USART (ROOT)
   _set_new_pos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      1E       7       11.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      74       5       90.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     67      70       1       88.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     102      15        0.0%
DATA                 0      0     102       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 17 23:30:55 2021

                                                     ___fldiv@aexp 0030  
                                                     ___fldiv@bexp 002F  
                                                     ___fldiv@sign 0028  
                                                               l51 356C  
                                                               l45 352C  
                                                               l70 3424  
                                                               l48 3508  
                                                               l82 3538  
                                                               l75 2F7C  
                                                               l85 354C  
                                                               l79 2FD8  
                                              ___wmul@multiplicand 000C  
                                           __size_of_start_up_menu 016C  
                                                              l400 02EE  
                                                              l332 2A64  
                                                              l318 2018  
                                                              l342 2B6C  
                                                              l360 3162  
                                                              l352 2E5A  
                                                              l337 2C76  
                                                              l409 039A  
                                                              l274 2340  
                                                              l515 34DE  
                                                              l283 3070  
                                                              l347 2958  
                                                              l358 312A  
                                                              l374 25D6  
                                                              l438 06E0  
                                                              l447 078C  
                                                              l368 328C  
                                                              l385 2F22  
                                                              l378 25D6  
                                                              l467 09A6  
                                                              l812 270C  
                                                              l468 09C0  
                                                              l389 2F36  
                                                              l485 249A  
                                                              l780 27E6  
                                                              l785 2834  
                                                              l789 33E4  
                                                ??_init_interrupts 000A  
                                                              wreg 000FE8  
                                                     ___flmul@aexp 003E  
                                                     ___flmul@bexp 0043  
                                                     ___flmul@sign 003D  
                                                     ___flmul@temp 0048  
                                                     ___flmul@prod 0044  
                                                     ___fltol@exp1 0067  
                                                             l1110 173A  
                                                             l1102 160E  
                                                             l1111 1722  
                                                             l1043 0C0C  
                                                             l1060 0D50  
                                                             l1052 0F66  
                                                             l1044 0BF6  
                                                             l1220 33A2  
                                                             l1108 16AA  
                                                             l1133 140A  
                                                             l1045 0BAC  
                                                             l1070 0E3C  
                                                             l1214 21CA  
                                                             l1136 1264  
                                                             l1129 1058  
                                                             l1217 21D4  
                                                             l1241 2D70  
                                                             l1146 13C2  
                                                             l1138 12F4  
                                                             l1170 1C8C  
                                                             l1139 12DC  
                                                             l1228 3230  
                                                             l1069 0E54  
                                                             l1085 32D6  
                                                             l1173 1E1E  
                                                             l3101 307E  
                                                             l1263 34B4  
                                                             l3111 30E8  
                                                             l3103 3088  
                                                             l1184 1DA4  
                                                             l1249 1C26  
                                                             l3121 203E  
                                                             l4001 306C  
                                                             l3201 2BDE  
                                                             l1097 183C  
                                                             l1177 1D38  
                                                             l3105 30B8  
                                                             l1282 345E  
                                                             l3131 20A0  
                                                             l3123 205C  
                                                             l3115 201E  
                                                             l1275 3360  
                                                             l4011 1E6C  
                                                             l4003 1E26  
                                                             l3211 2C24  
                                                             l3203 2BEE  
                                                             l1099 1654  
                                                             l3133 20BA  
                                                             l3125 2094  
                                                             l3117 2032  
                                                             l1269 331E  
                                                             l4021 1EBC  
                                                             l4013 1E82  
                                                             l4005 1E2E  
                                                             l3221 2C60  
                                                             l3213 2C30  
                                                             l3205 2BF6  
                                                             l3301 2936  
                                                             l3109 30C8  
                                                             l4101 2A2E  
                                                             l3151 21AE  
                                                             l3143 213E  
                                                             l3135 20C4  
                                                             l3127 2098  
                                                             l3119 2038  
                                                             l4031 1EFA  
                                                             l4023 1EC0  
                                                             l4015 1E86  
                                                             l4007 1E52  
                                                             l3311 2DA2  
                                                             l3223 2C70  
                                                             l3215 2C40  
                                                             l3207 2C0C  
                                                             l3231 2A98  
                                                             l3303 2942  
                                                             l1288 30F0  
                                                             l3081 31DA  
                                                             l3137 20CE  
                                                             l4041 1F40  
                                                             l4033 1F06  
                                                             l4025 1ECC  
                                                             l4017 1E92  
                                                             l4009 1E68  
                                                             l3321 2DD6  
                                                             l3313 2DA6  
                                                             l3217 2C44  
                                                             l3209 2C20  
                                                             l3241 2AD4  
                                                             l3233 2AA4  
                                                             l3225 2A6C  
                                                             l3305 2952  
                                                             l3401 2F1A  
                                                             l3161 342A  
                                                             l4105 2A36  
                                                             l5001 222E  
                                                             l2611 350E  
                                                             l3091 3364  
                                                             l3083 31F2  
                                                             l3147 2182  
                                                             l3139 2104  
                                                             l4051 1F90  
                                                             l4043 1F56  
                                                             l4035 1F1C  
                                                             l4027 1EE2  
                                                             l4019 1EA8  
                                                             l3331 2E18  
                                                             l3323 2DE2  
                                                             l3315 2DB2  
                                                             l3307 2D7A  
                                                             l3219 2C54  
                                                             l3251 2B1A  
                                                             l3243 2AE4  
                                                             l3235 2AB4  
                                                             l3227 2A80  
                                                             l3411 1432  
                                                             l3403 2F22  
                                                             l3171 2CDE  
                                                             l4107 2A44  
                                                             l5011 2268  
                                                             l5003 2236  
                                                             l2613 3526  
                                                             l2621 34E4  
                                                             l3085 3224  
                                                             l3149 2198  
                                                             l3157 3490  
                                                             l4053 1FA4  
                                                             l4045 1F6A  
                                                             l4037 1F30  
                                                             l4029 1EF6  
                                                             l4061 1FDE  
                                                             l3341 2E54  
                                                             l3333 2E24  
                                                             l3317 2DC2  
                                                             l3309 2D8E  
                                                             l3325 2DEA  
                                                             l3261 2B56  
                                                             l3253 2B26  
                                                             l3237 2AB8  
                                                             l3229 2A94  
                                                             l3245 2AEC  
                                                             l3501 16D0  
                                                             l3413 1448  
                                                             l3421 1478  
                                                             l3405 1412  
                                                             l3181 2D52  
                                                             l3173 2D00  
                                                             l3165 2C7E  
                                                             l4109 2A5E  
                                                             l5021 22D0  
                                                             l5013 2290  
                                                             l5005 2242  
                                                             l2615 3528  
                                                             l2631 34FA  
                                                             l2623 34EC  
                                                             l3087 3228  
                                                             l3079 31D4  
                                                             l3095 32DC  
                                                             l4071 1FFC  
                                                             l4055 1FA8  
                                                             l4047 1F6E  
                                                             l4039 1F34  
                                                             l3351 3154  
                                                             l3343 30FA  
                                                             l3335 2E34  
                                                             l3327 2E00  
                                                             l3319 2DC6  
                                                             l3191 2BA2  
                                                             l3263 2B66  
                                                             l3255 2B36  
                                                             l3247 2B02  
                                                             l3239 2AC8  
                                                             l3271 2880  
                                                             l3511 1750  
                                                             l3503 16D4  
                                                             l3431 14AC  
                                                             l3423 148A  
                                                             l3415 145C  
                                                             l3407 141E  
                                                             l3183 2D56  
                                                             l3167 2CA8  
                                                             l3175 2D20  
                                                             l5023 22DA  
                                                             l5007 2250  
                                                             l5015 22A2  
                                                             l2617 352A  
                                                             l2633 34FC  
                                                             l2625 34F4  
                                                             l4401 0A90  
                                                             l2641 355C  
                                                             l3097 32EC  
                                                             l4073 2008  
                                                             l4057 1FB4  
                                                             l4049 1F7A  
                                                             l3353 315C  
                                                             l3345 310E  
                                                             l3337 2E38  
                                                             l3329 2E14  
                                                             l3193 2BAE  
                                                             l3185 2B76  
                                                             l3257 2B3A  
                                                             l3249 2B16  
                                                             l3281 28B4  
                                                             l3273 2884  
                                                             l3265 283E  
                                                             l3521 17BC  
                                                             l3513 175C  
                                                             l3505 16E6  
                                                             l3433 14C2  
                                                             l3441 14F2  
                                                             l3425 1492  
                                                             l3417 146C  
                                                             l3409 1430  
                                                             l3361 24EE  
                                                             l3177 2D38  
                                                             l3169 2CCE  
                                                             l4081 298E  
                                                             l5025 22E4  
                                                             l5017 22BC  
                                                             l5009 2264  
                                                             l5041 3470  
                                                             l2635 34FE  
                                                             l2627 34F6  
                                                             l4411 0AD2  
                                                             l4403 0AA4  
                                                             l2643 3564  
                                                             l4075 2014  
                                                             l4067 1FE4  
                                                             l4059 1FCA  
                                                             l3355 3160  
                                                             l3347 3122  
                                                             l3339 2E48  
                                                             l3195 2BBE  
                                                             l3187 2B8A  
                                                             l3259 2B4A  
                                                             l3291 2902  
                                                             l3283 28C0  
                                                             l3275 2890  
                                                             l3267 2858  
                                                             l3531 1826  
                                                             l3523 17D2  
                                                             l3515 176E  
                                                             l3507 1718  
                                                             l3451 153E  
                                                             l3443 1504  
                                                             l3435 14D6  
                                                             l3427 1498  
                                                             l3419 1470  
                                                             l3371 25A2  
                                                             l3363 2506  
                                                             l3179 2D4E  
                                                             l3099 3076  
                                                             l4083 2992  
                                                             l5019 22C6  
                                                             l5051 347C  
                                                             l5043 3474  
                                                             l5035 3462  
                                                             l2629 34F8  
                                                             l4501 0D2E  
                                                             l4421 0B0A  
                                                             l4413 0AEA  
                                                             l4405 0AB4  
                                                             l2645 3566  
                                                             l4069 1FE8  
                                                             l3349 3140  
                                                             l3197 2BC2  
                                                             l3189 2B9E  
                                                             l3293 2906  
                                                             l3285 28D0  
                                                             l3277 28A0  
                                                             l3269 286C  
                                                             l3533 182C  
                                                             l3525 17F2  
                                                             l3517 1798  
                                                             l3445 1520  
                                                             l3437 14E6  
                                                             l3429 14AA  
                                                             l3381 2E90  
                                                             l3373 2E64  
                                                             l3365 253C  
                                                             l3357 24A2  
                                                             l4093 29CA  
                                                             l4085 2996  
                                                             l4077 2960  
                                                             l5029 22F2  
                                                             l5053 3482  
                                                             l5045 3476  
                                                             l5037 3468  
                                                             l4511 0D94  
                                                             l4503 0D3E  
                                                             l4431 0B1E  
                                                             l4423 0B0E  
                                                             l4415 0AFC  
                                                             l4407 0AB8  
                                                             l2647 3568  
                                                             l2639 3552  
                                                             l3199 2BD2  
                                                             l3295 2912  
                                                             l3279 28A4  
                                                             l3287 28D8  
                                                             l3535 1830  
                                                             l3527 180E  
                                                             l3519 179C  
                                                             l3471 15C8  
                                                             l3463 157C  
                                                             l3447 1530  
                                                             l3455 1552  
                                                             l3439 14EA  
                                                             l3711 1C44  
                                                             l3391 2EE4  
                                                             l3383 2EB2  
                                                             l3375 2E70  
                                                             l3367 2554  
                                                             l3359 24B8  
                                                             l4095 29E2  
                                                             l4087 29B0  
                                                             l4079 2978  
                                                             l5047 3478  
                                                             l5039 346C  
                                                             l4601 103E  
                                                             l4521 0DD0  
                                                             l4513 0DA0  
                                                             l4505 0D6C  
                                                             l4441 0B32  
                                                             l4433 0B22  
                                                             l4425 0B12  
                                                             l4417 0B00  
                                                             l4409 0AC0  
                                                             l2649 356A  
                                                             l2841 2F94  
                                                             l3297 2922  
                                                             l3289 28EE  
                                                             l3529 1814  
                                                             l3481 161A  
                                                             l3473 15D0  
                                                             l3465 1598  
                                                             l3457 1568  
                                                             l3449 1538  
                                                             l3721 1CCE  
                                                             l3713 1C56  
                                                             l3385 2EC6  
                                                             l3377 2E86  
                                                             l3369 258A  
                                                             l4097 29EE  
                                                             l3801 239E  
                                                             l5049 347A  
                                                             l4611 1096  
                                                             l4603 1046  
                                                             l4531 0E06  
                                                             l4523 0DD6  
                                                             l4515 0DB2  
                                                             l4507 0D80  
                                                             l4451 0B72  
                                                             l4443 0B36  
                                                             l4435 0B26  
                                                             l4427 0B16  
                                                             l4419 0B06  
                                                             l4371 09D2  
                                                             l2835 2F3E  
                                                             l2851 3354  
                                                             l3299 2926  
                                                             l3491 1684  
                                                             l3483 163E  
                                                             l3475 15E6  
                                                             l3467 15A8  
                                                             l3459 1568  
                                                             l3731 1D2E  
                                                             l3723 1CD8  
                                                             l3715 1C9E  
                                                             l2843 3534  
                                                             l3387 2ED2  
                                                             l4099 2A22  
                                                             l3811 23EC  
                                                             l3803 23B2  
                                                             l4621 10E8  
                                                             l4613 10A4  
                                                             l4605 106E  
                                                             l4541 0E76  
                                                             l4533 0E18  
                                                             l4525 0DEC  
                                                             l4517 0DB4  
                                                             l4461 0BD2  
                                                             l4453 0B94  
                                                             l4445 0B3A  
                                                             l4437 0B2A  
                                                             l4429 0B1A  
                                                             l4381 0A20  
                                                             l4373 09E4  
                                                             l4701 3292  
                                                             l2837 2F4A  
                                                             l2845 3324  
                                                             l2861 3264  
                                                             l3493 168A  
                                                             l3485 1640  
                                                             l3477 15FA  
                                                             l3469 15B8  
                                                             l3741 1DBA  
                                                             l3733 1D70  
                                                             l3725 1CE6  
                                                             l3717 1CBA  
                                                             l3709 1C30  
                                                             l3389 2ED8  
                                                             l3397 2EEC  
                                                             l3821 243A  
                                                             l3813 2400  
                                                             l3805 23BA  
                                                             l4711 2756  
                                                             l4631 112A  
                                                             l4623 10F4  
                                                             l4615 10AE  
                                                             l4607 1080  
                                                             l4551 0EF0  
                                                             l4543 0E88  
                                                             l4535 0E32  
                                                             l4519 0DC8  
                                                             l4527 0DEE  
                                                             l4471 0C34  
                                                             l4463 0BE6  
                                                             l4455 0BA4  
                                                             l4439 0B2E  
                                                             l4447 0B3E  
                                                             l4391 0A5C  
                                                             l4383 0A24  
                                                             l4375 09E6  
                                                             l4703 32A2  
                                                             l2871 34BA  
                                                             l2839 2F90  
                                                             l2847 3330  
                                                             l2855 3236  
                                                             l3495 1696  
                                                             l3487 1650  
                                                             l3479 160C  
                                                             l3751 1E0C  
                                                             l3743 1DC0  
                                                             l3735 1D7E  
                                                             l3727 1D1E  
                                                             l3399 2F02  
                                                             l3831 2490  
                                                             l3823 244E  
                                                             l3815 2408  
                                                             l3807 23BE  
                                                             l5095 2308  
                                                             l4721 27D4  
                                                             l4713 278A  
                                                             l4641 118C  
                                                             l4633 1136  
                                                             l4625 1100  
                                                             l4617 10C4  
                                                             l4561 0F38  
                                                             l4553 0F16  
                                                             l4545 0EC6  
                                                             l4481 0C7E  
                                                             l4529 0E00  
                                                             l4465 0BE8  
                                                             l4457 0BC0  
                                                             l4449 0B44  
                                                             l4393 0A5E  
                                                             l4377 09FC  
                                                             l4385 0A2C  
                                                             l4369 09C6  
                                                             l2873 34D6  
                                                             l5097 20EC  
                                                             l2849 3336  
                                                             l2857 3242  
                                                             l3497 16A8  
                                                             l3489 166A  
                                                             l3745 1DE4  
                                                             l3737 1D92  
                                                             l3729 1D22  
                                                             l4801 0332  
                                                             l3825 2456  
                                                             l3817 240C  
                                                             l3809 23E2  
                                                             l4723 282A  
                                                             l4715 279A  
                                                             l4707 2714  
                                                             l4651 1226  
                                                             l4643 1198  
                                                             l4635 1146  
                                                             l4627 110E  
                                                             l4619 10D0  
                                                             l4571 0F6E  
                                                             l4731 33C2  
                                                             l4563 0F40  
                                                             l4555 0F1A  
                                                             l4539 0E6A  
                                                             l4547 0EC8  
                                                             l4491 0CB2  
                                                             l4483 0C8A  
                                                             l4475 0C48  
                                                             l4467 0BF4  
                                                             l4459 0BCC  
                                                             l4395 0A66  
                                                             l4387 0A3E  
                                                             l4379 0A10  
                                                             l2867 326C  
                                                             l2859 3248  
                                                             l3499 16BC  
                                                             l3747 1DF8  
                                                             l3739 1DB8  
                                                             l4811 03BE  
                                                             l4803 033A  
                                                             l3827 245A  
                                                             l3819 2430  
                                                             l4725 2830  
                                                             l4717 27AE  
                                                             l4709 2746  
                                                             l4661 128A  
                                                             l4653 1244  
                                                             l4645 11B4  
                                                             l4637 1160  
                                                             l4629 111A  
                                                             l4581 0FB8  
                                                             l4573 0F7A  
                                                             l4733 33D2  
                                                             l4565 0F52  
                                                             l4557 0F2E  
                                                             l4549 0EDE  
                                                             l4485 0C90  
                                                             l4477 0C5A  
                                                             l4469 0C20  
                                                             l4493 0CB8  
                                                             l4397 0A78  
                                                             l4389 0A46  
                                                             l4741 18B6  
                                                             l2869 3272  
                                                             l3749 1E0A  
                                                             l4901 082C  
                                                             l4821 041A  
                                                             l4813 03D0  
                                                             l4805 0340  
                                                             l3829 247E  
                                                             l4719 27C0  
                                                             l4671 130A  
                                                             l4663 128E  
                                                             l4655 1250  
                                                             l4647 11DE  
                                                             l4639 1170  
                                                             l4591 0FF0  
                                                             l4583 0FC8  
                                                             l4575 0F8C  
                                                             l4567 0F54  
                                                             l4559 0F34  
                                                             l4495 0CE4  
                                                             l4487 0CA4  
                                                             l4479 0C6C  
                                                             l4399 0A7A  
                                                             l4743 18CA  
                                                             l4911 0914  
                                                             l4903 083A  
                                                             l4831 0512  
                                                             l4823 043A  
                                                             l4815 03DE  
                                                             l4807 036C  
                                                             l3791 2350  
                                                             l4681 1376  
                                                             l4673 1316  
                                                             l4665 12A0  
                                                             l4657 1262  
                                                             l4649 1218  
                                                             l4593 1002  
                                                             l4585 0FD0  
                                                             l4577 0F8E  
                                                             l4729 33A8  
                                                             l4497 0D18  
                                                             l4489 0CA6  
                                                             l4761 1B74  
                                                             l4753 1990  
                                                             l4745 1910  
                                                             l4737 1844  
                                                             l4921 0964  
                                                             l4913 091A  
                                                             l4905 08EA  
                                                             l4841 0562  
                                                             l4833 0520  
                                                             l4825 0448  
                                                             l4817 03E8  
                                                             l4809 038C  
                                                             l3793 2364  
                                                             l4931 25F8  
                                                             l4691 13EA  
                                                             l4683 138A  
                                                             l4675 1328  
                                                             l4667 12D2  
                                                             l4659 1276  
                                                             l4595 1004  
                                                             l4587 0FE2  
                                                             l4579 0FA4  
                                                             l4499 0D1A  
                                                             l4763 1BAA  
                                                             l4755 1A64  
                                                             l4747 1934  
                                                             l4739 1864  
                                                             l4923 096C  
                                                             l4915 093C  
                                                             l4907 08FC  
                                                             l4851 058C  
                                                             l4843 056A  
                                                             l4835 0528  
                                                             l4827 04F8  
                                                             l4819 03EE  
                                                             l4771 01C8  
                                                             l3795 236C  
                                                             l4941 2650  
                                                             l4693 13EC  
                                                             l4685 13AA  
                                                             l4677 1352  
                                                             l4597 101A  
                                                             l4589 0FEA  
                                                             l4765 1BF0  
                                                             l4757 1AD0  
                                                             l4749 1958  
                                                             l4925 0972  
                                                             l4917 094E  
                                                             l4909 090C  
                                                             l4861 0660  
                                                             l4853 05AE  
                                                             l4845 0570  
                                                             l4837 052E  
                                                             l4829 050A  
                                                             l4781 0226  
                                                             l4773 01D0  
                                                             l3797 2370  
                                                             l3789 2348  
                                                             l4951 2682  
                                                             l4943 2654  
                                                             l4935 260E  
                                                             l4687 13C8  
                                                             l4695 13F4  
                                                             l4679 1356  
                                                             l4599 102E  
                                                             l4767 1C14  
                                                             l4759 1B08  
                                                             l3991 2FDE  
                                                             l4927 0994  
                                                             l4919 0956  
                                                             l4871 06B2  
                                                             l4863 0668  
                                                             l4855 05C0  
                                                             l4847 057E  
                                                             l4839 0550  
                                                             l4791 0294  
                                                             l4783 0250  
                                                             l4775 01E4  
                                                             l3799 2394  
                                                             l4961 26B2  
                                                             l4953 268E  
                                                             l4945 2666  
                                                             l4937 263E  
                                                             l4929 25DE  
                                                             l4697 13FA  
                                                             l4689 13D8  
                                                             l3993 3002  
                                                             l4881 072C  
                                                             l4873 06D2  
                                                             l4865 0678  
                                                             l4857 0640  
                                                             l4849 0586  
                                                             l4793 02C0  
                                                             l4785 027A  
                                                             l4777 01F0  
                                                             l4963 26C0  
                                                             l4955 2698  
                                                             l4939 2640  
                                                             l3995 300A  
                                                             l4891 07C2  
                                                             l4883 0732  
                                                             l4875 0704  
                                                             l4867 0680  
                                                             l4859 0654  
                                                             l4795 02E0  
                                                             l4787 0286  
                                                             l4779 01F8  
                                                             l4965 26D4  
                                                             l4981 341C  
                                                             l4973 33EA  
                                                             l3997 3020  
                                                             l4893 07D0  
                                                             l4885 075E  
                                                             l4877 0716  
                                                             l4869 0686  
                                                             l4797 0312  
                                                             l4789 028E  
                                                             l4967 26EA  
                                                             l4983 341E  
                                                             l4975 3416  
                                                             l3999 303E  
                                                             l4895 07DA  
                                                             l4887 077E  
                                                             l4879 0724  
                                                             l4799 0324  
                                                             l4991 21E8  
                                                             l4969 26FA  
                                                             l4985 3420  
                                                             l4977 3418  
                                                             l4897 07E0  
                                                             l4889 07B0  
                                                             l4993 21FE  
                                                             l4987 3422  
                                                             l4979 341A  
                                                             l4899 080C  
                                                             l4995 2206  
                                                             l4997 2220  
                                                             l4989 21DC  
                                                             l4999 2224  
                                                             STR_1 7D4F  
                                                             STR_2 7F83  
                                                             STR_3 7F4D  
                                                             STR_4 7E78  
                                                             STR_5 7F68  
                                                             STR_6 7E44  
                                                             STR_7 7F15  
                                                             STR_8 7F31  
                                                             STR_9 7EF8  
                                                             u3000 339C  
                                                             u3010 331C  
                                                             u3011 3316  
                                                             u3100 21AC  
                                                             u3020 30B6  
                                                             u3101 21A6  
                                                             u3021 30B0  
                                                             u3110 2CA6  
                                                             u3030 30E6  
                                                             u3111 2CA0  
                                                             u3031 30E0  
                                                             _LATC 000F8B  
                                                             u3040 205A  
                                                             u3200 2A7E  
                                                             u4000 1DB6  
                                                             u3120 2CCC  
                                                             u3041 2054  
                                                             u3201 2A78  
                                                             u4001 1DB0  
                                                             u3121 2CC6  
                                                             u3050 2092  
                                                             u3210 2A92  
                                                             u4010 1DF6  
                                                             u3130 2D1A  
                                                             u3051 208C  
                                                             u3211 2A8C  
                                                             u4011 1DF0  
                                                             u3131 2D14  
                                                             u3060 20B4  
                                                             u2500 2F7A  
                                                             u3300 2DFE  
                                                             u3220 2B00  
                                                             u4020 1E08  
                                                             u3140 2D36  
                                                             u3061 20AE  
                                                             u3301 2DF8  
                                                             u3221 2AFA  
                                                             u4021 1E02  
                                                             u3141 2D30  
                                                             u3070 2178  
                                                             u2510 2F8E  
                                                             u3310 2E12  
                                                             u3230 2B14  
                                                             u3150 2D70  
                                                             u3071 2170  
                                                             u2511 2F88  
                                                             u3311 2E0C  
                                                             u3231 2B0E  
                                                             u3151 2D6A  
                                                             u5000 09FA  
                                                             u3080 217C  
                                                             u2520 2FC4  
                                                             u3320 310C  
                                                             u3160 2B88  
                                                             u3240 286A  
                                                             u3400 2E84  
                                                             u4120 2392  
                                                             u5001 09F4  
                                                             u3321 3106  
                                                             u3161 2B82  
                                                             u3241 2864  
                                                             u3401 2E7E  
                                                             u4121 238C  
                                                             u5010 0A0E  
                                                             u3090 2196  
                                                             u2530 2FD6  
                                                             u3330 3120  
                                                             u3170 2B9C  
                                                             u3250 287E  
                                                             u3410 2EB0  
                                                             u4130 23E0  
                                                             u5011 0A08  
                                                             u3091 2190  
                                                             u2531 2FD0  
                                                             u2507 2F70  
                                                             u3331 311A  
                                                             u3171 2B96  
                                                             u3251 2878  
                                                             u3411 2EAA  
                                                             u4131 23DA  
                                                             u5100 0B90  
                                                             u5020 0A5A  
                                                             u3340 313E  
                                                             u3180 2C0A  
                                                             u3260 28EC  
                                                             u3500 14D4  
                                                             u2540 354A  
                                                             u3420 2EC4  
                                                             u4140 242E  
                                                             u5021 0A54  
                                                             u3341 3138  
                                                             u3181 2C04  
                                                             u3261 28E6  
                                                             u3501 14CE  
                                                             u2541 3544  
                                                             u3421 2EBE  
                                                             u4141 2428  
                                                             u5110 0BBE  
                                                             u5030 0A76  
                                                             u2550 3352  
                                                             u3350 3152  
                                                             u3190 2C1E  
                                                             u3270 2900  
                                                             u3510 151E  
                                                             u3430 2F00  
                                                             u4150 247C  
                                                             u5111 0BB8  
                                                             u5031 0A70  
                                                             u2527 2FBA  
                                                             u2551 334C  
                                                             u3351 314C  
                                                             u3191 2C18  
                                                             u3271 28FA  
                                                             u3511 1518  
                                                             u3431 2EFA  
                                                             u4151 2476  
                                                             u5200 0D2C  
                                                             u5120 0BE4  
                                                             u5040 0A8E  
                                                             u2560 3262  
                                                             u3280 2D8C  
                                                             u3600 16E4  
                                                             u3520 1566  
                                                             u3440 2F36  
                                                             u3360 24B6  
                                                             u6000 0702  
                                                             u4160 2490  
                                                             u5201 0D26  
                                                             u5121 0BDE  
                                                             u5041 0A88  
                                                             u2561 325C  
                                                             u3281 2D86  
                                                             u3601 16DE  
                                                             u3521 1560  
                                                             u3441 2F30  
                                                             u3361 24B0  
                                                             u6001 06FC  
                                                             u4161 248A  
                                                             u5210 0D6A  
                                                             u5130 0C0C  
                                                             u5050 0AA2  
                                                             u2570 328A  
                                                             u3290 2DA0  
                                                             u3610 1716  
                                                             u3530 15E4  
                                                             u3450 142E  
                                                             u3370 2504  
                                                             u6010 0716  
                                                             u5211 0D64  
                                                             u5131 0C06  
                                                             u5051 0A9C  
                                                             u2571 3284  
                                                             u3291 2D9A  
                                                             u3611 1710  
                                                             u3531 15DE  
                                                             u3451 1428  
                                                             u3371 24FE  
                                                             u6011 0710  
                                                             u5300 0E68  
                                                             u5220 0D7E  
                                                             u5140 0C1E  
                                                             u5060 0AE8  
                                                             u3620 1734  
                                                             u3540 160A  
                                                             u3460 1446  
                                                             u3380 2552  
                                                             u6100 0992  
                                                             u6020 075C  
                                                             u5301 0E62  
                                                             u5221 0D78  
                                                             u5141 0C18  
                                                             u5061 0AE2  
                                                             u3621 172E  
                                                             u3541 1604  
                                                             u3461 1440  
                                                             u3381 254C  
                                                             u6101 098C  
                                                             u6021 0756  
                                                             u5310 0E86  
                                                             u5230 0DB0  
                                                             u5150 0C32  
                                                             u5070 0AFA  
                                                             u3630 174E  
                                                             u3550 163C  
                                                             u3470 145A  
                                                             u3390 25A0  
                                                             u6110 09A6  
                                                             u6030 07AE  
                                                             u5311 0E80  
                                                             u5231 0DAA  
                                                             u5151 0C2C  
                                                             u5071 0AF4  
                                                             u3631 1748  
                                                             u3551 1636  
                                                             u3471 1454  
                                                             u3391 259A  
                                                             u6111 09A0  
                                                             u6031 07A8  
                                                             u6120 25F6  
                                                             u5400 0FB6  
                                                             u5320 0EC4  
                                                             u5240 0DC6  
                                                             u5160 0C6A  
                                                             u5080 0B70  
                                                             u4600 1E80  
                                                             u3640 176C  
                                                             u3560 1668  
                                                             u3480 14A8  
                                                             u6040 07C2  
                                                             u6200 228E  
                                                             u6121 25F0  
                                                             u5401 0FB0  
                                                             u5321 0EBE  
                                                             u5241 0DC0  
                                                             u5161 0C64  
                                                             u5081 0B6A  
                                                             u4601 1E7A  
                                                             u3641 1766  
                                                             u3561 1662  
                                                             u3481 14A2  
                                                             u6041 07BC  
                                                             u6201 2288  
                                                             u6130 2632  
                                                             u5410 1000  
                                                             u5330 0EDC  
                                                             u5250 0DEA  
                                                             u5170 0C7C  
                                                             u5090 0B8C  
                                                             u4610 1EA6  
                                                             u3650 17BA  
                                                             u3570 1682  
                                                             u3490 14C0  
                                                             u6050 080A  
                                                             u6210 22A2  
                                                             u5411 0FFA  
                                                             u5331 0ED6  
                                                             u5251 0DE4  
                                                             u5171 0C76  
                                                             u5091 0B84  
                                                             u4611 1EA0  
                                                             u3651 17B4  
                                                             u3571 167C  
                                                             u3491 14BA  
                                                             u6051 0804  
                                                             u6211 229C  
                                                             u6140 2664  
                                                             u5500 12D0  
                                                             u5420 1018  
                                                             u5340 0EF0  
                                                             u5260 0E00  
                                                             u5180 0CA2  
                                                             u4620 1EE0  
                                                             u3660 17F0  
                                                             u3580 16A6  
                                                             u6060 08E8  
                                                             u4700 2A58  
                                                             u6220 22B6  
                                                             u6141 265E  
                                                             u5501 12CA  
                                                             u5421 1012  
                                                             u5341 0EEA  
                                                             u5261 0DFA  
                                                             u5181 0C9C  
                                                             u4621 1EDA  
                                                             u3661 17EA  
                                                             u3581 16A0  
                                                             u6061 08E2  
                                                             u4701 2A52  
                                                             u6221 22B0  
                                                             u6150 267C  
                                                             u5510 12EE  
                                                             u5430 102C  
                                                             u5350 0F14  
                                                             u5270 0E16  
                                                             u5190 0CE2  
                                                             u4630 1F1A  
                                                             u3670 1824  
                                                             u3590 16CE  
                                                             u6070 08FC  
                                                             u6151 2676  
                                                             u6135 2626  
                                                             u5511 12E8  
                                                             u5431 1026  
                                                             u5351 0F0E  
                                                             u5271 0E10  
                                                             u5191 0CDC  
                                                             u4631 1F14  
                                                             u3671 181E  
                                                             u3591 16C8  
                                                             u6071 08F6  
                                                             u6160 26AC  
                                                             u5600 27D2  
                                                             u5520 1308  
                                                             u5440 106C  
                                                             u5360 0F2C  
                                                             u5280 0E30  
                                                             u4640 1F54  
                                                             u6080 093A  
                                                             u6161 26A6  
                                                             u5601 27CC  
                                                             u5521 1302  
                                                             u5441 1066  
                                                             u5361 0F26  
                                                             u5281 0E2A  
                                                             u4641 1F4E  
                                                             u6081 0934  
                                                             u6170 26D4  
                                                             u5610 2828  
                                                             u5530 1326  
                                                             u5450 1080  
                                                             u5370 0F50  
                                                             u5290 0E4E  
                                                             u2970 31F0  
                                                             u4650 1F8E  
                                                             u4570 301E  
                                                             u3930 1C42  
                                                             u6090 094E  
                                                             u6171 26CE  
                                                             u5611 2822  
                                                             u5531 1320  
                                                             u5451 107A  
                                                             u5371 0F4A  
                                                             u5291 0E48  
                                                             u2971 31EA  
                                                             u4651 1F88  
                                                             u4571 3018  
                                                             u3931 1C3C  
                                                             u6091 0948  
                                                             u6180 26E8  
                                                             u5540 1374  
                                                             u5460 1200  
                                                             u5380 0F8A  
                                                             u5620 33C0  
                                                             u5700 1BCE  
                                                             u2980 3222  
                                                             u4660 1FC8  
                                                             u4580 306A  
                                                             u3940 1C54  
                                                             _RCIF 007CF5  
                                                             u6181 26E2  
                                                             u5541 136E  
                                                             u5381 0F84  
                                                             u5621 33BA  
                                                             u2981 321C  
                                                             u4661 1FC2  
                                                             u4581 3064  
                                                             u3941 1C4E  
                                                             u6237 2F0C  
                                                             u5550 13A8  
                                                             u5470 1260  
                                                             u5390 0FA2  
                                                             u5710 1BEE  
                                                             u5630 1886  
                                                             u2990 3398  
                                                             u4590 1E66  
                                                             u3950 1CB8  
                                                             u4670 298C  
                                                             u6190 21FC  
                                                             u5551 13A2  
                                                             u5471 125A  
                                                             u5391 0F9C  
                                                             u5711 1BE8  
                                                             u2991 3390  
                                                             u4591 1E60  
                                                             u6247 2848  
                                                             u3951 1CB2  
                                                             u4671 2986  
                                                             u6191 21F6  
                                                             u5560 13E8  
                                                             u5480 1288  
                                                             u5640 18B4  
                                                             u3960 1D18  
                                                             u5800 0310  
                                                             u5720 01E2  
                                                             u4680 29C4  
                                                             u5561 13E2  
                                                             u5481 1282  
                                                             u5465 11F4  
                                                             u5705 1BC2  
                                                             u5641 18AE  
                                                             u3961 1D12  
                                                             u5801 030A  
                                                             u5721 01DC  
                                                             u4681 29BE  
                                                             u5570 2744  
                                                             u5490 129E  
                                                             u5650 18EE  
                                                             u3970 1D6A  
                                                             u5810 0324  
                                                             u5730 021E  
                                                             u4690 29E0  
                                                             u5571 273E  
                                                             u5491 1298  
                                                             u5635 187A  
                                                             u3971 1D64  
                                                             u5811 031E  
                                                             u5731 0216  
                                                             u4691 29DA  
                                                             u5580 2788  
                                                             u5660 190E  
                                                             u3980 1D90  
                                                             u5900 05AC  
                                                             u5820 036A  
                                                             u5740 0222  
                                                             u5581 2782  
                                                             u5661 1908  
                                                             u3981 1D8A  
                                                             u5901 05A6  
                                                             u5821 0364  
                                                             u5590 27AC  
                                                             u5670 1956  
                                                             u3990 1DA4  
                                                             u5910 05C0  
                                                             u5830 03BC  
                                                             u5750 0248  
                                                             u5591 27A6  
                                                             u5671 1950  
                                                             u5655 18E2  
                                                             u3991 1D9E  
                                                             u5911 05BA  
                                                             u5831 03B6  
                                                             u5751 0240  
                                                             u5680 1A62  
                                                             u5920 05E4  
                                                             u5840 03D0  
                                                             u5760 024C  
                                                             u5681 1A5C  
                                                             u5921 05DC  
                                                             u5841 03CA  
                                                             u5690 1B06  
                                                             u5930 05E8  
                                                             u5850 0418  
                                                             u5770 0272  
                                                             u5691 1B00  
                                                             u5851 0412  
                                                             u5771 026A  
                                                             u5940 060E  
                                                             u5860 04F6  
                                                             u5780 0276  
                                                             u5941 0606  
                                                             u5861 04F0  
                                                             u4990 09E2  
                                                             u5950 0612  
                                                             u5870 050A  
                                                             u5790 02BE  
                                                             u4991 09DC  
                                                             u5871 0504  
                                                             u5791 02B8  
                                                             u5960 0638  
                                                             u5880 054E  
                                                             u5961 0630  
                                                             u5881 0548  
                                                             u5970 063C  
                                                             u5890 0562  
                                                             u5891 055C  
                                                             u5980 0652  
                                                             u5981 064C  
                                                             u5990 06B0  
                                                             u5991 06AA  
                                                  _check_component 2E60  
                                                             _Fosc 7D4B  
                                                             _Tosc 00DB  
                                                             _atoi 201C  
                                                             _main 3462  
                                                             fsr0h 000FEA  
                                                             fsr1h 000FE2  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf1 000FE7  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0071  
                                                             _stop 006A  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 01BE  
                                                       _Angle_diff 009A  
                                                  ___fldiv@new_exp 0029  
                                                     ___param_bank 000000  
                                                     ?_init_Timers 0001  
                                                    ___fltol@sign1 0066  
                                                            ?_atoi 0011  
                                                  __end_of___fladd 0F6C  
                                                            ?_main 0001  
                                                  __end_of___fldiv 1842  
                                                  __end_of___flneg 33E8  
                                                            STR_10 7EBE  
                                                            STR_11 7EDB  
                                                            STR_20 7FAC  
                                                            STR_12 7EA0  
                                                            STR_21 7FFD  
                                                            STR_13 7F98  
                                                            STR_22 7FFD  
                                                            STR_14 7E05  
                                                            STR_15 7FD4  
                                                            STR_16 7DBF  
                                                            STR_17 7FE7  
                                                            STR_18 7FF3  
                                                            STR_19 7FC0  
                                                  __end_of___flmul 1410  
                                                  __end_of___flsub 32DA  
                                                  __end_of___fltol 2712  
                                                  __end_of_Tweezer 3166  
                                                  __end_of_Twister 2E60  
                                                            i2l512 01AE  
                                                            i2l506 00B4  
                                                            i2l355 359E  
                                                            i2l499 0040  
                                                            _RCREG 000FAE  
                                                            _TMR0H 000FD7  
                                                            _TMR1H 000FCF  
                                                            _TMR0L 000FD6  
                                                            _TMR1L 000FCE  
                                                            _SPBRG 000FAF  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                 Twister@direction 0010  
                                                            _X_dir 00B5  
                                                            _Y_dir 00B4  
                                                            _State 006E  
                                                            _Steps 0068  
                                           __size_of_add_component 01F8  
                                                  __end_of_isdigit 33A6  
                                                  __end_of_memmove 2D76  
                                                            atoi@n 001E  
                                                            atoi@s 0011  
                               __end_of_desired_BaudRate@main$F793 7D43  
                                       _desired_BaudRate@main$F793 7D3F  
                                                    print_char@chr 000A  
                                                            _toint 7D3B  
                                                  __end_of_isspace 3234  
                                                            tablat 000FF5  
                                                    _start_up_menu 21DA  
                                                  _change_sequence 2FDC  
                                         __end_of_fetch_parameters 25DC  
                                                            ttemp5 0072  
                                                            ttemp6 0075  
                                                  Y_axis@direction 0010  
                                                            ttemp7 0079  
                                                            status 000FD8  
                                                            wtemp8 0072  
                                                  __end_of_strrchr 3462  
                                                     __end_of_Fosc 7D4F  
                                                  __initialization 3166  
                                                     __end_of_atoi 21DA  
                                                     __end_of_main 348E  
                                                       _Pick_Angle 00A2  
                                                           ??_atoi 0013  
                                                           ??_main 0068  
                                                    __activetblptr 000002  
                                          __end_of_check_component 2F3C  
                                                    print_string@i 000E  
                                                   ?_start_up_menu 0001  
                                                           i2l4221 359A  
                                                           i2l4301 0118  
                                                           i2l4223 359C  
                                                           i2l4311 0158  
                                                           i2l4303 012C  
                                                           i2l4217 3592  
                                                           i2l4321 0180  
                                                           i2l4313 016A  
                                                           i2l4305 013E  
                                                           i2l4219 3596  
                                                           i2l4315 0172  
                                                           i2l4323 0182  
                                                           i2l4307 0140  
                                                           i2l4325 0196  
                                                           i2l4317 017C  
                                                           i2l4309 0144  
                                                           i2l4327 01A8  
                                                           i2l4319 017E  
                                                           i2l4271 0014  
                                                           i2l4281 0076  
                                                           i2l4273 0026  
                                                           i2l4291 00E2  
                                                           i2l4283 0088  
                                                           i2l4275 0038  
                                                           i2l4285 00B8  
                                                           i2l4277 0054  
                                                           i2l4293 00E6  
                                                           i2l4295 00FA  
                                                           i2l4287 00BC  
                                                           i2l4279 0064  
                                                           i2l4297 010C  
                                                           i2l4289 00C0  
                                                           i2l4299 010E  
                                                 __end_of___xxtofl 1E24  
                                          remove_component@rm_comp 001E  
                                                           _X_Pick 00AA  
                                                           _Y_Pick 00A6  
                                                           _X_diff 009E  
                                                           _Y_diff 009C  
                                                           _X_axis 2B72  
                                                           _Y_axis 2A68  
                                                           _Z_axis 283A  
                                                    _add_component 1E24  
                                                ?_remove_component 0001  
                                                           _Step_X 0098  
                                                           _Step_Y 0096  
                                                           _Step_Z 0094  
                                                           ___flge 2712  
                                                     ?_set_new_pos 0001  
                                                        ??___fladd 0012  
                                                           ___wmul 34B8  
                                                        ??___fldiv 0020  
                                                        ??___flneg 000E  
                                                        ??___flmul 0039  
                                                        ??___flsub 0022  
                                                        ??___fltol 0062  
                                                        ??_Tweezer 000A  
                                                 ??_pick_and_place 0056  
                                               ??_remove_component 001C  
                                                        ??_Twister 0010  
                                                           clear_0 31AC  
                                                           clear_1 31B8  
                                                           isa$std 000001  
                                                 __end_of_ms_delay 3290  
                                                           _roundf 1842  
                                                           _strcat 348E  
                                                           _strcpy 32DA  
                                                           _strlen 3322  
                                                     __pdataCOMRAM 006C  
                                                        ??_isdigit 000C  
                                                        ??_memmove 0014  
                                                    _Place_Angle_D 0086  
                                                       _Step_Angle 0092  
                                                     __mediumconst 7D3A  
                                                        ??_isspace 000C  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                          __end_of_change_sequence 3074  
                                         fetch_parameters@Componnt 000A  
                                                        ??_strrchr 001C  
                                                _return_to_initial 2346  
                                                       ___flge@ff1 004A  
                                                       ___flge@ff2 004E  
                                                     ___xxtofl@arg 0014  
                                                     ___xxtofl@exp 0013  
                                                     ___xxtofl@val 000A  
                                                       __accesstop 0080  
                                          __end_of__initialization 31C6  
                                               __size_of___memrchr 0082  
                                               ?_return_to_initial 0001  
                                                       ___flneg@f1 000A  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 005E  
                                               _pick_and_place$911 00B8  
                                               _pick_and_place$914 00BC  
                                               _pick_and_place$925 00C8  
                                               _pick_and_place$917 00C0  
                                               _pick_and_place$927 00CC  
                                               _pick_and_place$929 00D0  
                                                   ?_add_component 0001  
                                                  _init_interrupts 3550  
                                              ??_return_to_initial 0013  
                                                   __pcstackCOMRAM 0001  
                                              _new_TMR1H@main$F824 006D  
                                                     __pidataBANK0 3570  
                                                    __end_of_toint 7D3F  
                                             __size_of_init_Timers 002A  
                                                      ms_delay@val 000A  
                                                 _desired_BaudRate 7D43  
                                                 ?_check_component 0001  
                                        __end_of_return_to_initial 249E  
                                                  ??_start_up_menu 0058  
                                                      _Place_Angle 00A0  
                                                   _steps_per_unit 00E1  
                                                      _New_char_RX 0070  
                                                       __pbssBANK0 0080  
                                                       __pbssBANK1 0100  
                                            __end_of_Rx_char_USART 01BE  
                                        remove_component@indxToDel 001F  
                                                       __pnvCOMRAM 0070  
                                                       _angle_diff 0084  
                                            check_component@Compnt 0012  
                                                          ?_X_axis 0001  
                                                          ?_Y_axis 0001  
                                                          ?_Z_axis 0001  
                                                          ?___flge 004A  
                                              _new_TMR1L@main$F825 006C  
                                                          ?___wmul 000A  
                                                          ?_roundf 0056  
                                                          ?_strcat 0016  
                                                __end_of___memrchr 30F6  
                                                          ?_strcpy 000E  
                                                          ?_strlen 000A  
                                                 check_component@j 0013  
                                                set_new_pos@nTMR1H 0002  
                                                set_new_pos@nTMR1L 0001  
                                                          _INTCON2 000FF1  
                                                          _INTCON3 000FF0  
                                                        ?___xxtofl 000A  
                                              pick_and_place@i_912 00BA  
                                              pick_and_place@i_930 00D2  
                                              pick_and_place@i_922 00C4  
                                              pick_and_place@i_931 00D4  
                                              pick_and_place@i_915 00BE  
                                              pick_and_place@i_924 00C6  
                                              pick_and_place@i_926 00CA  
                                              pick_and_place@i_919 00C2  
                                              pick_and_place@i_928 00CE  
                                                 ?_change_sequence 0001  
                                                          _RX_Char 00B2  
                                          __end_of_init_interrupts 3570  
                                                ?_fetch_parameters 0001  
                                                  ??_add_component 0020  
                                                        ?_ms_delay 000A  
                                                          _X_Place 00A8  
                                                          _Y_Place 00A4  
                                               ??_fetch_parameters 000A  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  pick_and_place@i 00B6  
                                                       _init_PORTS 350C  
                                                       _init_USART 33E8  
                                                  __size_of_X_axis 010A  
                                                  __size_of_Y_axis 010A  
                                                          _Rot_dir 00B3  
                                                  __size_of_Z_axis 0124  
                                                  __size_of___flge 0128  
                                                          ___fladd 09C4  
                                                          ___fldiv 1410  
                                                          ___flneg 33A6  
                                                          ___flmul 0F6C  
                                                          ___flsub 3290  
                                                          ___fltol 25DC  
                                                          _Tweezer 30F6  
                                                  __size_of___wmul 002A  
                                                          _Twister 2D76  
                                             __size_of_set_new_pos 0014  
                                                          __pcinit 3166  
                                                          __ramtop 0600  
                                                          __ptext0 3462  
                                                          __ptext1 21DA  
                                                          __ptext2 2346  
                                                          __ptext3 295E  
                                                          __ptext4 3428  
                                                          __ptext5 3074  
                                                          __ptext6 2C7C  
                                                          __ptext7 01C2  
                                                          __ptext8 249E  
                                                          __ptext9 2E60  
                                                        _T0CONbits 000FD5  
                                                  __size_of_roundf 03EA  
                                                  __size_of_strcat 002A  
                                                  __size_of_strcpy 0048  
                                                  __size_of_strlen 0042  
                                                        _T1CONbits 000FCD  
                                                          _isdigit 3364  
                                                          _memmove 2C7C  
                                                       ??___xxtofl 000E  
                                                          _isspace 31D4  
                                       __size_of_return_to_initial 0158  
                                                          atoi@neg 0017  
                                                    Tweezer@action 000A  
                                                          _strrchr 3428  
                                             end_of_initialization 31C6  
                                              remove_component@ptr 001C  
                                                    __Lmediumconst 7D3A  
                                                       ??_ms_delay 000C  
                                                        _RCSTAbits 000FAB  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                          roundf@e 00BA  
                                                          roundf@u 00C0  
                                                          roundf@x 0056  
                                                          roundf@y 00C4  
                                                          strcpy@d 0014  
                                                          strlen@a 000C  
                                                          strcpy@s 0012  
                                                          strlen@s 000A  
                                                       _print_char 3530  
                                               add_component@F3143 00DF  
                                                      ___fladd@grs 0019  
                                                    ___xxtofl@sign 0012  
                                        __size_of_remove_component 010A  
                                                        _TRISCbits 000F94  
                                                      ___fldiv@grs 002B  
                                                      ___fldiv@rem 0024  
                                                    ?_print_string 000A  
                                                      ___flmul@grs 003F  
                                                 ?_init_interrupts 0001  
                                                        _TXSTAbits 000FAC  
                                                      ___memrchr@c 0010  
                                                      ___memrchr@m 000E  
                                                      ___memrchr@n 0012  
                                                      ___memrchr@s 0016  
                                         __end_of_desired_BaudRate 7D47  
                                                      ?_init_PORTS 0001  
                                                      ?_init_USART 0001  
                                                   __end_of_X_axis 2C7C  
                                                   __end_of_Y_axis 2B72  
                                                   __end_of_Z_axis 295E  
                                                   __end_of___flge 283A  
                                                   __end_of___wmul 34E2  
                                                    __pidataCOMRAM 35A2  
                                                   __end_of_roundf 1C2C  
                                                   __end_of_strcat 34B8  
                                                   __end_of_strcpy 3322  
                                                   __end_of_strlen 3364  
                                              start_initialization 3166  
                                                   ??_print_string 000C  
                                                        _X_Place_D 008A  
                                                        _Y_Place_D 0088  
                                                  X_axis@direction 0010  
                                                     _Pick_Angle_D 008C  
                                                   _Tosc@main$F792 00D7  
                                                         ??_X_axis 0010  
                                                         ??_Y_axis 0010  
                                                         ??_Z_axis 0010  
                                                         ??___flge 0052  
                                                         ??___wmul 000E  
                                                      __pdataBANK0 00D7  
                                                   _lenth_of_array 00E3  
                                                    ??_init_Timers 000A  
                                               return_to_initial@i 0014  
                                                         ??_roundf 005A  
                                                         ??_strcat 001A  
                                                         ??_strcpy 0012  
                                                         ??_strlen 000C  
                                                        ___fladd@a 000E  
                                                        ___fladd@b 000A  
                                                      ?_print_char 0001  
                                                        ___fldiv@a 001C  
                                                        ___fldiv@b 0018  
                                                        ___flmul@a 0035  
                                                        ___flmul@b 0031  
                                                      __pbssCOMRAM 0068  
                                                 change_sequence@i 0013  
                                                        ___flsub@a 001E  
                                                        ___flsub@b 001A  
                                                    __pcstackBANK0 00B6  
                                          __size_of_pick_and_place 0802  
                                                        ___memrchr 3074  
                                                __size_of___xxtofl 01F8  
                                              __size_of_init_PORTS 0024  
                                              __size_of_init_USART 0040  
                                            __end_of_start_up_menu 2346  
                                         __size_of_check_component 00DC  
                                                        _atoi$1400 0019  
                                                        _atoi$1401 001D  
                                                        _atoi$1402 001B  
                                                  Z_axis@direction 0012  
                                                __size_of_ms_delay 005C  
                                                        __pintcode 0008  
                                                    __pmediumconst 7D3A  
                                                         ?___fladd 000A  
                                                         ?___fldiv 0018  
                                                         ?___flneg 000A  
                                                         ?___flmul 0031  
                                                         ?___flsub 001A  
                                                         ?___fltol 005E  
                                                         ?_Tweezer 0001  
                                                         ?_Twister 0001  
                                                   Rx_char_USART@i 0008  
                                        __size_of_fetch_parameters 013E  
                                           __size_of_Rx_char_USART 01B6  
                                                print_string@strng 000A  
                                                         ?_isdigit 000A  
                                                         ?_memmove 000E  
                                                         ?_isspace 000A  
                                              __end_of_init_Timers 350C  
                                                 _remove_component 295E  
                                                   _Fosc@main$F791 7D47  
                                                       ?___memrchr 000E  
                                                        _new_TMR1H 006F  
                                                        _new_TMR1L 00E5  
                                                         ?_strrchr 0018  
                                                _component_present 006B  
                                                        _input_str 00E6  
                                                   ___wmul@product 000E  
                                                         _LATCbits 000F8B  
                                         __size_of_change_sequence 0098  
                                                         _PIE1bits 000F9D  
                                              __size_of_print_char 0020  
                                            __end_of_add_component 201C  
                                                         _PIR1bits 000F9E  
                                                         i2u490_40 00E0  
                                                         i2u490_41 00DA  
                                                         i2u491_40 00F8  
                                                         i2u491_41 00F2  
                                                         i2u492_40 010A  
                                                         i2u484_40 0024  
                                                         i2u492_41 0104  
                                                         i2u484_41 001E  
                                                         i2u493_40 012A  
                                                         i2u485_40 0036  
                                                         i2u493_41 0124  
                                                         i2u485_41 0030  
                                                         i2u494_40 013C  
                                                         i2u486_40 0052  
                                                         i2u494_41 0136  
                                                         i2u486_41 004C  
                                                         i2u495_40 0156  
                                                         i2u487_40 0064  
                                                         i2u495_41 0150  
                                                         i2u487_41 005E  
                                                         i2u496_40 0168  
                                                         i2u488_40 0086  
                                                         i2u496_41 0162  
                                                         i2u488_41 0080  
                                                         i2u497_40 0194  
                                                         i2u489_40 00B4  
                                                         i2u497_41 018E  
                                                         i2u489_41 00AE  
                                                         i2u498_40 01A6  
                                                         i2u498_41 01A0  
                                                    ??_set_new_pos 0002  
                                             __end_of_print_string 2FDC  
                                                        _testarray 0100  
                                                ___wmul@multiplier 000A  
                                           __end_of_Fosc@main$F791 7D4B  
                                                     _isspace$1418 0010  
                                                      _INTCON3bits 000FF0  
                                                        copy_data0 317A  
                                                        copy_data1 319A  
                                                         _X_Pick_D 0090  
                                                    _Rx_char_USART 0008  
                                                         _Y_Pick_D 008E  
                                                       roundf@F528 0080  
                                                         __Hrparam 0000  
                                                     ??_init_PORTS 000A  
                                                     ??_init_USART 0068  
                                                         __Lrparam 0000  
                                                ??_check_component 0010  
                                                        memmove@d1 000E  
                                                        memmove@s1 0010  
                                                 __size_of___fladd 05A8  
                                                 __size_of___fldiv 0432  
                                                 __size_of___flneg 0042  
                                                 __size_of___flmul 04A4  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 0136  
                                                 __size_of_Tweezer 0070  
                                                 __size_of_Twister 00EA  
                                                      _init_Timers 34E2  
                                              __end_of_set_new_pos 35A2  
                                                        ms_delay@i 000C  
                                                        ms_delay@j 000E  
                                                         ___xxtofl 1C2C  
                                                       strcat@dest 0016  
                                                   _pick_and_place 01C2  
                                                 __size_of_isdigit 0042  
                                                 __size_of_memmove 00FA  
                                                      ??___memrchr 0014  
                                                 __size_of_isspace 0060  
                                                         __ptext10 3530  
                                                         __ptext11 1C2C  
                                                         __ptext20 1E24  
                                                         __ptext12 1410  
                                                         __ptext21 348E  
                                                         __ptext13 283A  
                                                         __ptext30 33E8  
                                                         __ptext22 3322  
                                                         __ptext14 2A68  
                                                         __ptext31 1842  
                                                         __ptext23 32DA  
                                                         __ptext15 2B72  
                                                         __ptext32 3290  
                                                         __ptext24 2F3C  
                                                         __ptext16 2D76  
                                                         __ptext41 358E  
                                                         __ptext33 09C4  
                                                         __ptext25 201C  
                                                         __ptext17 3234  
                                                         __ptext34 33A6  
                                                         __ptext26 31D4  
                                                         __ptext18 30F6  
                                                         __ptext35 0F6C  
                                                         __ptext27 3364  
                                                         __ptext19 2FDC  
                                                         __ptext36 2712  
                                                         __ptext28 34B8  
                                                         __ptext37 25DC  
                                                         __ptext29 3550  
                                                         __ptext38 34E2  
                                                         __ptext39 350C  
                                               __end_of_init_PORTS 3530  
                                               __end_of_init_USART 3428  
                                                       strcpy@dest 000E  
                                                 __size_of_strrchr 003A  
                                                   ?_Rx_char_USART 0001  
                                                    __size_of_atoi 01BE  
                                                    __size_of_main 002C  
                                                         _ms_delay 3234  
                                                         isa$xinst 000000  
                                                         _sequence 00F0  
                                         __size_of_init_interrupts 0020  
                                                ??_change_sequence 0010  
                                                         int$flags 0071  
                                                         _rotation 00AC  
                                                 _fetch_parameters 249E  
                                           __end_of_pick_and_place 09C4  
                                                     ??_print_char 000A  
                                                       _INTCONbits 000FF2  
                                           return_to_initial@i_934 0016  
                                           return_to_initial@i_935 0018  
                                           return_to_initial@i_936 001A  
                                                         isdigit@c 000A  
                                                         memmove@d 0016  
                                                         memmove@n 0012  
                                                         memmove@s 0018  
                                                         intlevel2 35A6  
                                                        strcat@src 0018  
                                                         isspace@c 000A  
                                                   _displacement_X 00B0  
                                                        strcpy@src 0010  
                                                   _displacement_Y 00AE  
                                            __size_of_print_string 00A0  
                                               __end_of_print_char 3550  
                                         __end_of_remove_component 2A68  
                                                      _set_new_pos 358E  
                                           pick_and_place@Componnt 00D6  
                                                  ?_pick_and_place 0001  
                                                         strrchr@c 001A  
                                                         strrchr@s 0018  
                                                    ___fladd@signs 0016  
                                                  ??_Rx_char_USART 0003  
                                                     _print_string 2F3C  
                                                     ___fladd@aexp 0017  
                                                     ___fladd@bexp 0018  
                                        add_component@add_componnt 0020  
                                                   start_up_menu@i 005A  
                                                      _roundf$1690 00B6  
                                                      _roundf$1689 00BC  
