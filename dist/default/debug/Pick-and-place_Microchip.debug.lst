

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 28 23:42:33 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F452 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  00352E                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for _State
   103  00352E  30                 	db	48
   104                           
   105                           	psect	idataBANK0
   106  0034FA                     __pidataBANK0:
   107                           	callstack 0
   108                           
   109                           ;initializer for _Tosc@main$F794
   110  0034FA  37BD               	dw	14269
   111  0034FC  3486               	dw	13446
   112                           
   113                           ;initializer for _Tosc
   114  0034FE  37BD               	dw	14269
   115  003500  3486               	dw	13446
   116                           
   117                           ;initializer for add_component@F3142
   118  003502  20                 	db	32
   119  003503  00                 	db	0
   120                           
   121                           ;initializer for _lenth_of_array
   122  003504  001E               	dw	30
   123                           
   124                           ;initializer for _new_TMR1L@main$F826
   125  003506  60                 	db	96
   126                           
   127                           ;initializer for _new_TMR1H@main$F825
   128  003507  FA                 	db	250
   129                           
   130                           ;initializer for _new_TMR1L
   131  003508  24                 	db	36
   132                           
   133                           ;initializer for _new_TMR1H
   134  003509  FA                 	db	250
   135                           
   136                           ;initializer for _input_str
   137  00350A  20                 	db	32
   138  00350B  00                 	db	0
   139  00350C  00                 	db	0
   140  00350D  00                 	db	0
   141  00350E  00                 	db	0
   142  00350F  00                 	db	0
   143  003510  00                 	db	0
   144  003511  00                 	db	0
   145  003512  00                 	db	0
   146  003513  00                 	db	0
   147                           
   148                           ;initializer for _sequence
   149  003514  43                 	db	67
   150  003515  41                 	db	65
   151  003516  42                 	db	66
   152  003517  00                 	db	0
   153                           
   154                           	psect	mediumconst
   155  007D3A                     __pmediumconst:
   156                           	callstack 0
   157  007D3A  00                 	db	0
   158  007D3B  0000               	dw	0
   159  007D3D  4B00               	dw	19200
   160  007D3F                     __end_of_toint:
   161                           	callstack 0
   162  007D3F  0000               	dw	0
   163  007D41  4616               	dw	17942
   164  007D43                     __end_of_desired_BaudRate@main$F795:
   165                           	callstack 0
   166  007D43  0000               	dw	0
   167  007D45  4616               	dw	17942
   168  007D47                     __end_of_desired_BaudRate:
   169                           	callstack 0
   170  007D47  2400               	dw	9216
   171  007D49  4A74               	dw	19060
   172  007D4B                     __end_of_Fosc@main$F793:
   173                           	callstack 0
   174  007D4B  2400               	dw	9216
   175  007D4D  4A74               	dw	19060
   176  007D4F                     __end_of_Fosc:
   177                           	callstack 0
   178  007D4F                     STR_1:
   179  007D4F  0A                 	db	10
   180  007D50  0A                 	db	10
   181  007D51  31                 	db	49	;'1'
   182  007D52  2E                 	db	46
   183  007D53  20                 	db	32
   184  007D54  53                 	db	83	;'S'
   185  007D55  74                 	db	116	;'t'
   186  007D56  61                 	db	97	;'a'
   187  007D57  72                 	db	114	;'r'
   188  007D58  74                 	db	116	;'t'
   189  007D59  20                 	db	32
   190  007D5A  53                 	db	83	;'S'
   191  007D5B  65                 	db	101	;'e'
   192  007D5C  71                 	db	113	;'q'
   193  007D5D  75                 	db	117	;'u'
   194  007D5E  65                 	db	101	;'e'
   195  007D5F  6E                 	db	110	;'n'
   196  007D60  63                 	db	99	;'c'
   197  007D61  65                 	db	101	;'e'
   198  007D62  0A                 	db	10
   199  007D63  32                 	db	50	;'2'
   200  007D64  2E                 	db	46
   201  007D65  20                 	db	32
   202  007D66  43                 	db	67	;'C'
   203  007D67  68                 	db	104	;'h'
   204  007D68  61                 	db	97	;'a'
   205  007D69  6E                 	db	110	;'n'
   206  007D6A  67                 	db	103	;'g'
   207  007D6B  65                 	db	101	;'e'
   208  007D6C  20                 	db	32
   209  007D6D  73                 	db	115	;'s'
   210  007D6E  65                 	db	101	;'e'
   211  007D6F  71                 	db	113	;'q'
   212  007D70  75                 	db	117	;'u'
   213  007D71  65                 	db	101	;'e'
   214  007D72  6E                 	db	110	;'n'
   215  007D73  63                 	db	99	;'c'
   216  007D74  65                 	db	101	;'e'
   217  007D75  0A                 	db	10
   218  007D76  33                 	db	51	;'3'
   219  007D77  2E                 	db	46
   220  007D78  20                 	db	32
   221  007D79  41                 	db	65	;'A'
   222  007D7A  64                 	db	100	;'d'
   223  007D7B  64                 	db	100	;'d'
   224  007D7C  20                 	db	32
   225  007D7D  6E                 	db	110	;'n'
   226  007D7E  65                 	db	101	;'e'
   227  007D7F  77                 	db	119	;'w'
   228  007D80  20                 	db	32
   229  007D81  63                 	db	99	;'c'
   230  007D82  6F                 	db	111	;'o'
   231  007D83  6D                 	db	109	;'m'
   232  007D84  70                 	db	112	;'p'
   233  007D85  6F                 	db	111	;'o'
   234  007D86  6E                 	db	110	;'n'
   235  007D87  65                 	db	101	;'e'
   236  007D88  6E                 	db	110	;'n'
   237  007D89  74                 	db	116	;'t'
   238  007D8A  0A                 	db	10
   239  007D8B  34                 	db	52	;'4'
   240  007D8C  2E                 	db	46
   241  007D8D  20                 	db	32
   242  007D8E  52                 	db	82	;'R'
   243  007D8F  65                 	db	101	;'e'
   244  007D90  6D                 	db	109	;'m'
   245  007D91  6F                 	db	111	;'o'
   246  007D92  76                 	db	118	;'v'
   247  007D93  65                 	db	101	;'e'
   248  007D94  20                 	db	32
   249  007D95  61                 	db	97	;'a'
   250  007D96  20                 	db	32
   251  007D97  63                 	db	99	;'c'
   252  007D98  6F                 	db	111	;'o'
   253  007D99  6D                 	db	109	;'m'
   254  007D9A  70                 	db	112	;'p'
   255  007D9B  6F                 	db	111	;'o'
   256  007D9C  6E                 	db	110	;'n'
   257  007D9D  65                 	db	101	;'e'
   258  007D9E  6E                 	db	110	;'n'
   259  007D9F  74                 	db	116	;'t'
   260  007DA0  00                 	db	0
   261  007DA1                     STR_17:
   262  007DA1  0A                 	db	10
   263  007DA2  63                 	db	99	;'c'
   264  007DA3  6F                 	db	111	;'o'
   265  007DA4  6D                 	db	109	;'m'
   266  007DA5  70                 	db	112	;'p'
   267  007DA6  6F                 	db	111	;'o'
   268  007DA7  6E                 	db	110	;'n'
   269  007DA8  65                 	db	101	;'e'
   270  007DA9  6E                 	db	110	;'n'
   271  007DAA  74                 	db	116	;'t'
   272  007DAB  20                 	db	32
   273  007DAC  69                 	db	105	;'i'
   274  007DAD  73                 	db	115	;'s'
   275  007DAE  20                 	db	32
   276  007DAF  6E                 	db	110	;'n'
   277  007DB0  6F                 	db	111	;'o'
   278  007DB1  74                 	db	116	;'t'
   279  007DB2  20                 	db	32
   280  007DB3  69                 	db	105	;'i'
   281  007DB4  6E                 	db	110	;'n'
   282  007DB5  20                 	db	32
   283  007DB6  74                 	db	116	;'t'
   284  007DB7  68                 	db	104	;'h'
   285  007DB8  65                 	db	101	;'e'
   286  007DB9  20                 	db	32
   287  007DBA  73                 	db	115	;'s'
   288  007DBB  65                 	db	101	;'e'
   289  007DBC  71                 	db	113	;'q'
   290  007DBD  75                 	db	117	;'u'
   291  007DBE  65                 	db	101	;'e'
   292  007DBF  6E                 	db	110	;'n'
   293  007DC0  63                 	db	99	;'c'
   294  007DC1  65                 	db	101	;'e'
   295  007DC2  2E                 	db	46
   296  007DC3  20                 	db	32
   297  007DC4  54                 	db	84	;'T'
   298  007DC5  72                 	db	114	;'r'
   299  007DC6  79                 	db	121	;'y'
   300  007DC7  20                 	db	32
   301  007DC8  73                 	db	115	;'s'
   302  007DC9  65                 	db	101	;'e'
   303  007DCA  6C                 	db	108	;'l'
   304  007DCB  65                 	db	101	;'e'
   305  007DCC  63                 	db	99	;'c'
   306  007DCD  74                 	db	116	;'t'
   307  007DCE  69                 	db	105	;'i'
   308  007DCF  6E                 	db	110	;'n'
   309  007DD0  67                 	db	103	;'g'
   310  007DD1  20                 	db	32
   311  007DD2  61                 	db	97	;'a'
   312  007DD3  6E                 	db	110	;'n'
   313  007DD4  6F                 	db	111	;'o'
   314  007DD5  74                 	db	116	;'t'
   315  007DD6  68                 	db	104	;'h'
   316  007DD7  65                 	db	101	;'e'
   317  007DD8  72                 	db	114	;'r'
   318  007DD9  20                 	db	32
   319  007DDA  63                 	db	99	;'c'
   320  007DDB  6F                 	db	111	;'o'
   321  007DDC  6D                 	db	109	;'m'
   322  007DDD  70                 	db	112	;'p'
   323  007DDE  6F                 	db	111	;'o'
   324  007DDF  6E                 	db	110	;'n'
   325  007DE0  65                 	db	101	;'e'
   326  007DE1  6E                 	db	110	;'n'
   327  007DE2  74                 	db	116	;'t'
   328  007DE3  3A                 	db	58	;':'
   329  007DE4  20                 	db	32
   330  007DE5  0A                 	db	10
   331  007DE6  00                 	db	0
   332  007DE7                     STR_15:
   333  007DE7  0A                 	db	10
   334  007DE8  57                 	db	87	;'W'
   335  007DE9  68                 	db	104	;'h'
   336  007DEA  69                 	db	105	;'i'
   337  007DEB  63                 	db	99	;'c'
   338  007DEC  68                 	db	104	;'h'
   339  007DED  20                 	db	32
   340  007DEE  63                 	db	99	;'c'
   341  007DEF  6F                 	db	111	;'o'
   342  007DF0  6D                 	db	109	;'m'
   343  007DF1  70                 	db	112	;'p'
   344  007DF2  6F                 	db	111	;'o'
   345  007DF3  6E                 	db	110	;'n'
   346  007DF4  65                 	db	101	;'e'
   347  007DF5  6E                 	db	110	;'n'
   348  007DF6  74                 	db	116	;'t'
   349  007DF7  20                 	db	32
   350  007DF8  77                 	db	119	;'w'
   351  007DF9  6F                 	db	111	;'o'
   352  007DFA  75                 	db	117	;'u'
   353  007DFB  6C                 	db	108	;'l'
   354  007DFC  64                 	db	100	;'d'
   355  007DFD  20                 	db	32
   356  007DFE  79                 	db	121	;'y'
   357  007DFF  6F                 	db	111	;'o'
   358  007E00  75                 	db	117	;'u'
   359  007E01  20                 	db	32
   360  007E02  6C                 	db	108	;'l'
   361  007E03  69                 	db	105	;'i'
   362  007E04  6B                 	db	107	;'k'
   363  007E05  65                 	db	101	;'e'
   364  007E06  20                 	db	32
   365  007E07  74                 	db	116	;'t'
   366  007E08  6F                 	db	111	;'o'
   367  007E09  20                 	db	32
   368  007E0A  72                 	db	114	;'r'
   369  007E0B  65                 	db	101	;'e'
   370  007E0C  6D                 	db	109	;'m'
   371  007E0D  6F                 	db	111	;'o'
   372  007E0E  76                 	db	118	;'v'
   373  007E0F  65                 	db	101	;'e'
   374  007E10  20                 	db	32
   375  007E11  66                 	db	102	;'f'
   376  007E12  72                 	db	114	;'r'
   377  007E13  6F                 	db	111	;'o'
   378  007E14  6D                 	db	109	;'m'
   379  007E15  20                 	db	32
   380  007E16  74                 	db	116	;'t'
   381  007E17  68                 	db	104	;'h'
   382  007E18  65                 	db	101	;'e'
   383  007E19  20                 	db	32
   384  007E1A  20                 	db	32
   385  007E1B  73                 	db	115	;'s'
   386  007E1C  65                 	db	101	;'e'
   387  007E1D  71                 	db	113	;'q'
   388  007E1E  75                 	db	117	;'u'
   389  007E1F  65                 	db	101	;'e'
   390  007E20  6E                 	db	110	;'n'
   391  007E21  63                 	db	99	;'c'
   392  007E22  65                 	db	101	;'e'
   393  007E23  3F                 	db	63	;'?'
   394  007E24  0A                 	db	10
   395  007E25  00                 	db	0
   396  007E26                     STR_7:
   397  007E26  0A                 	db	10
   398  007E27  45                 	db	69	;'E'
   399  007E28  6E                 	db	110	;'n'
   400  007E29  74                 	db	116	;'t'
   401  007E2A  65                 	db	101	;'e'
   402  007E2B  72                 	db	114	;'r'
   403  007E2C  20                 	db	32
   404  007E2D  74                 	db	116	;'t'
   405  007E2E  68                 	db	104	;'h'
   406  007E2F  65                 	db	101	;'e'
   407  007E30  20                 	db	32
   408  007E31  63                 	db	99	;'c'
   409  007E32  6F                 	db	111	;'o'
   410  007E33  6D                 	db	109	;'m'
   411  007E34  70                 	db	112	;'p'
   412  007E35  6F                 	db	111	;'o'
   413  007E36  6E                 	db	110	;'n'
   414  007E37  65                 	db	101	;'e'
   415  007E38  6E                 	db	110	;'n'
   416  007E39  74                 	db	116	;'t'
   417  007E3A  20                 	db	32
   418  007E3B  79                 	db	121	;'y'
   419  007E3C  6F                 	db	111	;'o'
   420  007E3D  75                 	db	117	;'u'
   421  007E3E  20                 	db	32
   422  007E3F  77                 	db	119	;'w'
   423  007E40  61                 	db	97	;'a'
   424  007E41  6E                 	db	110	;'n'
   425  007E42  74                 	db	116	;'t'
   426  007E43  20                 	db	32
   427  007E44  74                 	db	116	;'t'
   428  007E45  6F                 	db	111	;'o'
   429  007E46  20                 	db	32
   430  007E47  61                 	db	97	;'a'
   431  007E48  64                 	db	100	;'d'
   432  007E49  64                 	db	100	;'d'
   433  007E4A  3A                 	db	58	;':'
   434  007E4B  20                 	db	32
   435  007E4C  41                 	db	65	;'A'
   436  007E4D  2C                 	db	44
   437  007E4E  20                 	db	32
   438  007E4F  42                 	db	66	;'B'
   439  007E50  2C                 	db	44
   440  007E51  20                 	db	32
   441  007E52  43                 	db	67	;'C'
   442  007E53  20                 	db	32
   443  007E54  6F                 	db	111	;'o'
   444  007E55  72                 	db	114	;'r'
   445  007E56  20                 	db	32
   446  007E57  44                 	db	68	;'D'
   447  007E58  3F                 	db	63	;'?'
   448  007E59  00                 	db	0
   449  007E5A                     STR_5:
   450  007E5A  0A                 	db	10
   451  007E5B  50                 	db	80	;'P'
   452  007E5C  6C                 	db	108	;'l'
   453  007E5D  65                 	db	101	;'e'
   454  007E5E  61                 	db	97	;'a'
   455  007E5F  73                 	db	115	;'s'
   456  007E60  65                 	db	101	;'e'
   457  007E61  20                 	db	32
   458  007E62  67                 	db	103	;'g'
   459  007E63  69                 	db	105	;'i'
   460  007E64  76                 	db	118	;'v'
   461  007E65  65                 	db	101	;'e'
   462  007E66  20                 	db	32
   463  007E67  74                 	db	116	;'t'
   464  007E68  68                 	db	104	;'h'
   465  007E69  65                 	db	101	;'e'
   466  007E6A  20                 	db	32
   467  007E6B  6E                 	db	110	;'n'
   468  007E6C  65                 	db	101	;'e'
   469  007E6D  77                 	db	119	;'w'
   470  007E6E  20                 	db	32
   471  007E6F  73                 	db	115	;'s'
   472  007E70  65                 	db	101	;'e'
   473  007E71  71                 	db	113	;'q'
   474  007E72  75                 	db	117	;'u'
   475  007E73  65                 	db	101	;'e'
   476  007E74  6E                 	db	110	;'n'
   477  007E75  63                 	db	99	;'c'
   478  007E76  65                 	db	101	;'e'
   479  007E77  20                 	db	32
   480  007E78  61                 	db	97	;'a'
   481  007E79  73                 	db	115	;'s'
   482  007E7A  20                 	db	32
   483  007E7B  69                 	db	105	;'i'
   484  007E7C  6E                 	db	110	;'n'
   485  007E7D  70                 	db	112	;'p'
   486  007E7E  75                 	db	117	;'u'
   487  007E7F  74                 	db	116	;'t'
   488  007E80  0D                 	db	13
   489  007E81  00                 	db	0
   490  007E82                     STR_3:
   491  007E82  0A                 	db	10
   492  007E83  45                 	db	69	;'E'
   493  007E84  6E                 	db	110	;'n'
   494  007E85  74                 	db	116	;'t'
   495  007E86  65                 	db	101	;'e'
   496  007E87  72                 	db	114	;'r'
   497  007E88  20                 	db	32
   498  007E89  27                 	db	39
   499  007E8A  51                 	db	81	;'Q'
   500  007E8B  27                 	db	39
   501  007E8C  20                 	db	32
   502  007E8D  74                 	db	116	;'t'
   503  007E8E  6F                 	db	111	;'o'
   504  007E8F  20                 	db	32
   505  007E90  65                 	db	101	;'e'
   506  007E91  78                 	db	120	;'x'
   507  007E92  69                 	db	105	;'i'
   508  007E93  74                 	db	116	;'t'
   509  007E94  20                 	db	32
   510  007E95  74                 	db	116	;'t'
   511  007E96  6F                 	db	111	;'o'
   512  007E97  20                 	db	32
   513  007E98  4D                 	db	77	;'M'
   514  007E99  41                 	db	65	;'A'
   515  007E9A  49                 	db	73	;'I'
   516  007E9B  4E                 	db	78	;'N'
   517  007E9C  20                 	db	32
   518  007E9D  4D                 	db	77	;'M'
   519  007E9E  45                 	db	69	;'E'
   520  007E9F  4E                 	db	78	;'N'
   521  007EA0  55                 	db	85	;'U'
   522  007EA1  00                 	db	0
   523  007EA2                     STR_13:
   524  007EA2  0A                 	db	10
   525  007EA3  45                 	db	69	;'E'
   526  007EA4  6E                 	db	110	;'n'
   527  007EA5  74                 	db	116	;'t'
   528  007EA6  65                 	db	101	;'e'
   529  007EA7  72                 	db	114	;'r'
   530  007EA8  20                 	db	32
   531  007EA9  74                 	db	116	;'t'
   532  007EAA  68                 	db	104	;'h'
   533  007EAB  65                 	db	101	;'e'
   534  007EAC  20                 	db	32
   535  007EAD  70                 	db	112	;'p'
   536  007EAE  6C                 	db	108	;'l'
   537  007EAF  61                 	db	97	;'a'
   538  007EB0  63                 	db	99	;'c'
   539  007EB1  65                 	db	101	;'e'
   540  007EB2  20                 	db	32
   541  007EB3  6F                 	db	111	;'o'
   542  007EB4  72                 	db	114	;'r'
   543  007EB5  69                 	db	105	;'i'
   544  007EB6  65                 	db	101	;'e'
   545  007EB7  6E                 	db	110	;'n'
   546  007EB8  74                 	db	116	;'t'
   547  007EB9  61                 	db	97	;'a'
   548  007EBA  74                 	db	116	;'t'
   549  007EBB  69                 	db	105	;'i'
   550  007EBC  6F                 	db	111	;'o'
   551  007EBD  6E                 	db	110	;'n'
   552  007EBE  3A                 	db	58	;':'
   553  007EBF  00                 	db	0
   554  007EC0                     STR_11:
   555  007EC0  0A                 	db	10
   556  007EC1  45                 	db	69	;'E'
   557  007EC2  6E                 	db	110	;'n'
   558  007EC3  74                 	db	116	;'t'
   559  007EC4  65                 	db	101	;'e'
   560  007EC5  72                 	db	114	;'r'
   561  007EC6  20                 	db	32
   562  007EC7  74                 	db	116	;'t'
   563  007EC8  68                 	db	104	;'h'
   564  007EC9  65                 	db	101	;'e'
   565  007ECA  20                 	db	32
   566  007ECB  70                 	db	112	;'p'
   567  007ECC  6C                 	db	108	;'l'
   568  007ECD  61                 	db	97	;'a'
   569  007ECE  63                 	db	99	;'c'
   570  007ECF  65                 	db	101	;'e'
   571  007ED0  20                 	db	32
   572  007ED1  70                 	db	112	;'p'
   573  007ED2  6F                 	db	111	;'o'
   574  007ED3  73                 	db	115	;'s'
   575  007ED4  69                 	db	105	;'i'
   576  007ED5  74                 	db	116	;'t'
   577  007ED6  69                 	db	105	;'i'
   578  007ED7  6F                 	db	111	;'o'
   579  007ED8  6E                 	db	110	;'n'
   580  007ED9  20                 	db	32
   581  007EDA  58                 	db	88	;'X'
   582  007EDB  3A                 	db	58	;':'
   583  007EDC  00                 	db	0
   584  007EDD                     STR_12:
   585  007EDD  0A                 	db	10
   586  007EDE  45                 	db	69	;'E'
   587  007EDF  6E                 	db	110	;'n'
   588  007EE0  74                 	db	116	;'t'
   589  007EE1  65                 	db	101	;'e'
   590  007EE2  72                 	db	114	;'r'
   591  007EE3  20                 	db	32
   592  007EE4  74                 	db	116	;'t'
   593  007EE5  68                 	db	104	;'h'
   594  007EE6  65                 	db	101	;'e'
   595  007EE7  20                 	db	32
   596  007EE8  70                 	db	112	;'p'
   597  007EE9  6C                 	db	108	;'l'
   598  007EEA  61                 	db	97	;'a'
   599  007EEB  63                 	db	99	;'c'
   600  007EEC  65                 	db	101	;'e'
   601  007EED  20                 	db	32
   602  007EEE  70                 	db	112	;'p'
   603  007EEF  6F                 	db	111	;'o'
   604  007EF0  73                 	db	115	;'s'
   605  007EF1  69                 	db	105	;'i'
   606  007EF2  74                 	db	116	;'t'
   607  007EF3  69                 	db	105	;'i'
   608  007EF4  6F                 	db	111	;'o'
   609  007EF5  6E                 	db	110	;'n'
   610  007EF6  20                 	db	32
   611  007EF7  59                 	db	89	;'Y'
   612  007EF8  3A                 	db	58	;':'
   613  007EF9  00                 	db	0
   614  007EFA                     STR_10:
   615  007EFA  0A                 	db	10
   616  007EFB  45                 	db	69	;'E'
   617  007EFC  6E                 	db	110	;'n'
   618  007EFD  74                 	db	116	;'t'
   619  007EFE  65                 	db	101	;'e'
   620  007EFF  72                 	db	114	;'r'
   621  007F00  20                 	db	32
   622  007F01  74                 	db	116	;'t'
   623  007F02  68                 	db	104	;'h'
   624  007F03  65                 	db	101	;'e'
   625  007F04  20                 	db	32
   626  007F05  70                 	db	112	;'p'
   627  007F06  69                 	db	105	;'i'
   628  007F07  63                 	db	99	;'c'
   629  007F08  6B                 	db	107	;'k'
   630  007F09  20                 	db	32
   631  007F0A  6F                 	db	111	;'o'
   632  007F0B  72                 	db	114	;'r'
   633  007F0C  69                 	db	105	;'i'
   634  007F0D  65                 	db	101	;'e'
   635  007F0E  6E                 	db	110	;'n'
   636  007F0F  74                 	db	116	;'t'
   637  007F10  61                 	db	97	;'a'
   638  007F11  74                 	db	116	;'t'
   639  007F12  69                 	db	105	;'i'
   640  007F13  6F                 	db	111	;'o'
   641  007F14  6E                 	db	110	;'n'
   642  007F15  3A                 	db	58	;':'
   643  007F16  00                 	db	0
   644  007F17                     STR_8:
   645  007F17  0A                 	db	10
   646  007F18  45                 	db	69	;'E'
   647  007F19  6E                 	db	110	;'n'
   648  007F1A  74                 	db	116	;'t'
   649  007F1B  65                 	db	101	;'e'
   650  007F1C  72                 	db	114	;'r'
   651  007F1D  20                 	db	32
   652  007F1E  74                 	db	116	;'t'
   653  007F1F  68                 	db	104	;'h'
   654  007F20  65                 	db	101	;'e'
   655  007F21  20                 	db	32
   656  007F22  70                 	db	112	;'p'
   657  007F23  69                 	db	105	;'i'
   658  007F24  63                 	db	99	;'c'
   659  007F25  6B                 	db	107	;'k'
   660  007F26  20                 	db	32
   661  007F27  70                 	db	112	;'p'
   662  007F28  6F                 	db	111	;'o'
   663  007F29  73                 	db	115	;'s'
   664  007F2A  69                 	db	105	;'i'
   665  007F2B  74                 	db	116	;'t'
   666  007F2C  69                 	db	105	;'i'
   667  007F2D  6F                 	db	111	;'o'
   668  007F2E  6E                 	db	110	;'n'
   669  007F2F  20                 	db	32
   670  007F30  58                 	db	88	;'X'
   671  007F31  3A                 	db	58	;':'
   672  007F32  00                 	db	0
   673  007F33                     STR_9:
   674  007F33  0A                 	db	10
   675  007F34  45                 	db	69	;'E'
   676  007F35  6E                 	db	110	;'n'
   677  007F36  74                 	db	116	;'t'
   678  007F37  65                 	db	101	;'e'
   679  007F38  72                 	db	114	;'r'
   680  007F39  20                 	db	32
   681  007F3A  74                 	db	116	;'t'
   682  007F3B  68                 	db	104	;'h'
   683  007F3C  65                 	db	101	;'e'
   684  007F3D  20                 	db	32
   685  007F3E  70                 	db	112	;'p'
   686  007F3F  69                 	db	105	;'i'
   687  007F40  63                 	db	99	;'c'
   688  007F41  6B                 	db	107	;'k'
   689  007F42  20                 	db	32
   690  007F43  70                 	db	112	;'p'
   691  007F44  6F                 	db	111	;'o'
   692  007F45  73                 	db	115	;'s'
   693  007F46  69                 	db	105	;'i'
   694  007F47  74                 	db	116	;'t'
   695  007F48  69                 	db	105	;'i'
   696  007F49  6F                 	db	111	;'o'
   697  007F4A  6E                 	db	110	;'n'
   698  007F4B  20                 	db	32
   699  007F4C  59                 	db	89	;'Y'
   700  007F4D  3A                 	db	58	;':'
   701  007F4E  00                 	db	0
   702  007F4F                     STR_4:
   703  007F4F  0A                 	db	10
   704  007F50  54                 	db	84	;'T'
   705  007F51  68                 	db	104	;'h'
   706  007F52  65                 	db	101	;'e'
   707  007F53  20                 	db	32
   708  007F54  63                 	db	99	;'c'
   709  007F55  75                 	db	117	;'u'
   710  007F56  72                 	db	114	;'r'
   711  007F57  72                 	db	114	;'r'
   712  007F58  65                 	db	101	;'e'
   713  007F59  6E                 	db	110	;'n'
   714  007F5A  74                 	db	116	;'t'
   715  007F5B  20                 	db	32
   716  007F5C  73                 	db	115	;'s'
   717  007F5D  65                 	db	101	;'e'
   718  007F5E  71                 	db	113	;'q'
   719  007F5F  75                 	db	117	;'u'
   720  007F60  65                 	db	101	;'e'
   721  007F61  6E                 	db	110	;'n'
   722  007F62  63                 	db	99	;'c'
   723  007F63  65                 	db	101	;'e'
   724  007F64  20                 	db	32
   725  007F65  69                 	db	105	;'i'
   726  007F66  73                 	db	115	;'s'
   727  007F67  3A                 	db	58	;':'
   728  007F68  20                 	db	32
   729  007F69  00                 	db	0
   730  007F6A                     STR_6:
   731  007F6A  0A                 	db	10
   732  007F6B  54                 	db	84	;'T'
   733  007F6C  68                 	db	104	;'h'
   734  007F6D  65                 	db	101	;'e'
   735  007F6E  20                 	db	32
   736  007F6F  43                 	db	67	;'C'
   737  007F70  75                 	db	117	;'u'
   738  007F71  72                 	db	114	;'r'
   739  007F72  72                 	db	114	;'r'
   740  007F73  65                 	db	101	;'e'
   741  007F74  6E                 	db	110	;'n'
   742  007F75  74                 	db	116	;'t'
   743  007F76  20                 	db	32
   744  007F77  73                 	db	115	;'s'
   745  007F78  65                 	db	101	;'e'
   746  007F79  71                 	db	113	;'q'
   747  007F7A  75                 	db	117	;'u'
   748  007F7B  65                 	db	101	;'e'
   749  007F7C  6E                 	db	110	;'n'
   750  007F7D  63                 	db	99	;'c'
   751  007F7E  65                 	db	101	;'e'
   752  007F7F  20                 	db	32
   753  007F80  69                 	db	105	;'i'
   754  007F81  73                 	db	115	;'s'
   755  007F82  3A                 	db	58	;':'
   756  007F83  00                 	db	0
   757  007F84                     STR_14:
   758  007F84  0A                 	db	10
   759  007F85  0A                 	db	10
   760  007F86  43                 	db	67	;'C'
   761  007F87  6F                 	db	111	;'o'
   762  007F88  6D                 	db	109	;'m'
   763  007F89  70                 	db	112	;'p'
   764  007F8A  6F                 	db	111	;'o'
   765  007F8B  6E                 	db	110	;'n'
   766  007F8C  65                 	db	101	;'e'
   767  007F8D  6E                 	db	110	;'n'
   768  007F8E  74                 	db	116	;'t'
   769  007F8F  20                 	db	32
   770  007F90  41                 	db	65	;'A'
   771  007F91  64                 	db	100	;'d'
   772  007F92  64                 	db	100	;'d'
   773  007F93  65                 	db	101	;'e'
   774  007F94  64                 	db	100	;'d'
   775  007F95  3A                 	db	58	;':'
   776  007F96  20                 	db	32
   777  007F97  00                 	db	0
   778  007F98                     STR_2:
   779  007F98  0A                 	db	10
   780  007F99  53                 	db	83	;'S'
   781  007F9A  74                 	db	116	;'t'
   782  007F9B  61                 	db	97	;'a'
   783  007F9C  72                 	db	114	;'r'
   784  007F9D  74                 	db	116	;'t'
   785  007F9E  69                 	db	105	;'i'
   786  007F9F  6E                 	db	110	;'n'
   787  007FA0  67                 	db	103	;'g'
   788  007FA1  20                 	db	32
   789  007FA2  73                 	db	115	;'s'
   790  007FA3  65                 	db	101	;'e'
   791  007FA4  71                 	db	113	;'q'
   792  007FA5  75                 	db	117	;'u'
   793  007FA6  65                 	db	101	;'e'
   794  007FA7  6E                 	db	110	;'n'
   795  007FA8  63                 	db	99	;'c'
   796  007FA9  65                 	db	101	;'e'
   797  007FAA  3A                 	db	58	;':'
   798  007FAB  00                 	db	0
   799  007FAC                     STR_21:
   800  007FAC  0A                 	db	10
   801  007FAD  50                 	db	80	;'P'
   802  007FAE  6C                 	db	108	;'l'
   803  007FAF  61                 	db	97	;'a'
   804  007FB0  63                 	db	99	;'c'
   805  007FB1  69                 	db	105	;'i'
   806  007FB2  6E                 	db	110	;'n'
   807  007FB3  67                 	db	103	;'g'
   808  007FB4  20                 	db	32
   809  007FB5  63                 	db	99	;'c'
   810  007FB6  6F                 	db	111	;'o'
   811  007FB7  6D                 	db	109	;'m'
   812  007FB8  70                 	db	112	;'p'
   813  007FB9  6F                 	db	111	;'o'
   814  007FBA  6E                 	db	110	;'n'
   815  007FBB  65                 	db	101	;'e'
   816  007FBC  6E                 	db	110	;'n'
   817  007FBD  74                 	db	116	;'t'
   818  007FBE  3A                 	db	58	;':'
   819  007FBF  00                 	db	0
   820  007FC0                     STR_20:
   821  007FC0  0A                 	db	10
   822  007FC1  50                 	db	80	;'P'
   823  007FC2  69                 	db	105	;'i'
   824  007FC3  63                 	db	99	;'c'
   825  007FC4  6B                 	db	107	;'k'
   826  007FC5  69                 	db	105	;'i'
   827  007FC6  6E                 	db	110	;'n'
   828  007FC7  67                 	db	103	;'g'
   829  007FC8  20                 	db	32
   830  007FC9  63                 	db	99	;'c'
   831  007FCA  6F                 	db	111	;'o'
   832  007FCB  6D                 	db	109	;'m'
   833  007FCC  70                 	db	112	;'p'
   834  007FCD  6F                 	db	111	;'o'
   835  007FCE  6E                 	db	110	;'n'
   836  007FCF  65                 	db	101	;'e'
   837  007FD0  6E                 	db	110	;'n'
   838  007FD1  74                 	db	116	;'t'
   839  007FD2  3A                 	db	58	;':'
   840  007FD3  00                 	db	0
   841  007FD4                     STR_16:
   842  007FD4  0A                 	db	10
   843  007FD5  63                 	db	99	;'c'
   844  007FD6  6F                 	db	111	;'o'
   845  007FD7  6D                 	db	109	;'m'
   846  007FD8  70                 	db	112	;'p'
   847  007FD9  6F                 	db	111	;'o'
   848  007FDA  6E                 	db	110	;'n'
   849  007FDB  65                 	db	101	;'e'
   850  007FDC  6E                 	db	110	;'n'
   851  007FDD  74                 	db	116	;'t'
   852  007FDE  20                 	db	32
   853  007FDF  72                 	db	114	;'r'
   854  007FE0  65                 	db	101	;'e'
   855  007FE1  6D                 	db	109	;'m'
   856  007FE2  6F                 	db	111	;'o'
   857  007FE3  76                 	db	118	;'v'
   858  007FE4  65                 	db	101	;'e'
   859  007FE5  64                 	db	100	;'d'
   860  007FE6  00                 	db	0
   861  007FE7                     STR_18:
   862  007FE7  43                 	db	67	;'C'
   863  007FE8  6F                 	db	111	;'o'
   864  007FE9  6D                 	db	109	;'m'
   865  007FEA  70                 	db	112	;'p'
   866  007FEB  6F                 	db	111	;'o'
   867  007FEC  6E                 	db	110	;'n'
   868  007FED  65                 	db	101	;'e'
   869  007FEE  6E                 	db	110	;'n'
   870  007FEF  74                 	db	116	;'t'
   871  007FF0  20                 	db	32
   872  007FF1  00                 	db	0
   873  007FF2                     STR_19:
   874  007FF2  20                 	db	32
   875  007FF3  6D                 	db	109	;'m'
   876  007FF4  69                 	db	105	;'i'
   877  007FF5  73                 	db	115	;'s'
   878  007FF6  73                 	db	115	;'s'
   879  007FF7  69                 	db	105	;'i'
   880  007FF8  6E                 	db	110	;'n'
   881  007FF9  67                 	db	103	;'g'
   882  007FFA  21                 	db	33
   883  007FFB  00                 	db	0
   884  007FFC                     STR_22:
   885  007FFC  51                 	db	81	;'Q'
   886  007FFD  00                 	db	0
   887  007FFE  00                 	db	0	; dummy byte at the end
   888  0000                     
   889                           	psect	nvCOMRAM
   890  000074                     __pnvCOMRAM:
   891                           	callstack 0
   892  000074                     _New_char_RX:
   893                           	callstack 0
   894  000074                     	ds	1
   895  0000                     _RCREG	set	4014
   896  0000                     _PORTB	set	3969
   897  0000                     _LATCbits	set	3979
   898  0000                     _TXREG	set	4013
   899  0000                     _RCSTAbits	set	4011
   900  0000                     _TXSTAbits	set	4012
   901  0000                     _SPBRG	set	4015
   902  0000                     _INTCON3bits	set	4080
   903  0000                     _INTCON3	set	4080
   904  0000                     _INTCON2	set	4081
   905  0000                     _INTCONbits	set	4082
   906  0000                     _PIE1bits	set	3997
   907  0000                     _PIR1bits	set	3998
   908  0000                     _TMR1L	set	4046
   909  0000                     _TMR1H	set	4047
   910  0000                     _T1CONbits	set	4045
   911  0000                     _TMR0L	set	4054
   912  0000                     _TMR0H	set	4055
   913  0000                     _T0CONbits	set	4053
   914  0000                     _TRISCbits	set	3988
   915  0000                     _PORTC	set	3970
   916  0000                     _LATC	set	3979
   917  0000                     _PORTD	set	3971
   918  0000                     _PORTA	set	3968
   919  0000                     _TRISB	set	3987
   920  0000                     _TRISA	set	3986
   921  0000                     _TRISD	set	3989
   922  0000                     _RCIF	set	31989
   923                           
   924                           ; #config settings
   925                           
   926                           	psect	cinit
   927  003230                     __pcinit:
   928                           	callstack 0
   929  003230                     start_initialization:
   930                           	callstack 0
   931  003230                     __initialization:
   932                           	callstack 0
   933                           
   934                           ; Initialize objects allocated to BANK0 (30 bytes)
   935                           ; load TBLPTR registers with __pidataBANK0
   936  003230  0EFA               	movlw	low __pidataBANK0
   937  003232  6EF6               	movwf	tblptrl,c
   938  003234  0E34               	movlw	high __pidataBANK0
   939  003236  6EF7               	movwf	tblptrh,c
   940  003238  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   941  00323A  6EF8               	movwf	tblptru,c
   942  00323C  EE00  F0E0         	lfsr	0,__pdataBANK0
   943  003240  EE10 F01E          	lfsr	1,30
   944  003244                     copy_data0:
   945  003244  0009               	tblrd		*+
   946  003246  CFF5 FFEE          	movff	tablat,postinc0
   947  00324A  50E5               	movf	postdec1,w,c
   948  00324C  50E1               	movf	fsr1l,w,c
   949  00324E  E1FA               	bnz	copy_data0
   950                           
   951                           ; Initialize objects allocated to COMRAM (1 bytes)
   952                           ; load TBLPTR registers with __pidataCOMRAM
   953  003250  0E2E               	movlw	low __pidataCOMRAM
   954  003252  6EF6               	movwf	tblptrl,c
   955  003254  0E35               	movlw	high __pidataCOMRAM
   956  003256  6EF7               	movwf	tblptrh,c
   957  003258  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   958  00325A  6EF8               	movwf	tblptru,c
   959  00325C  0009               	tblrd		*+	;fetch initializer
   960  00325E  CFF5 F075          	movff	tablat,__pdataCOMRAM
   961                           
   962                           ; Clear objects allocated to BANK0 (63 bytes)
   963  003262  EE00  F080         	lfsr	0,__pbssBANK0
   964  003266  0E3F               	movlw	63
   965  003268                     clear_0:
   966  003268  6AEE               	clrf	postinc0,c
   967  00326A  06E8               	decf	wreg,f,c
   968  00326C  E1FD               	bnz	clear_0
   969                           
   970                           ; Clear objects allocated to COMRAM (25 bytes)
   971  00326E  EE00  F05B         	lfsr	0,__pbssCOMRAM
   972  003272  0E19               	movlw	25
   973  003274                     clear_1:
   974  003274  6AEE               	clrf	postinc0,c
   975  003276  06E8               	decf	wreg,f,c
   976  003278  E1FD               	bnz	clear_1
   977  00327A                     end_of_initialization:
   978                           	callstack 0
   979  00327A                     __end_of__initialization:
   980                           	callstack 0
   981  00327A  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   982  00327C  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   983  00327E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   984  003280  6EF8               	movwf	tblptru,c
   985  003282  0100               	movlb	0
   986  003284  EF09  F01A         	goto	_main	;jump to C main() function
   987                           
   988                           	psect	bssCOMRAM
   989  00005B                     __pbssCOMRAM:
   990                           	callstack 0
   991  00005B                     _Steps:
   992                           	callstack 0
   993  00005B                     	ds	2
   994  00005D                     _Angle_diff:
   995                           	callstack 0
   996  00005D                     	ds	2
   997  00005F                     _Y_diff:
   998                           	callstack 0
   999  00005F                     	ds	2
  1000  000061                     _X_diff:
  1001                           	callstack 0
  1002  000061                     	ds	2
  1003  000063                     _Place_Angle:
  1004                           	callstack 0
  1005  000063                     	ds	2
  1006  000065                     _Pick_Angle:
  1007                           	callstack 0
  1008  000065                     	ds	2
  1009  000067                     _Y_Place:
  1010                           	callstack 0
  1011  000067                     	ds	2
  1012  000069                     _Y_Pick:
  1013                           	callstack 0
  1014  000069                     	ds	2
  1015  00006B                     _X_Place:
  1016                           	callstack 0
  1017  00006B                     	ds	2
  1018  00006D                     _X_Pick:
  1019                           	callstack 0
  1020  00006D                     	ds	2
  1021  00006F                     _Rot_dir:
  1022                           	callstack 0
  1023  00006F                     	ds	1
  1024  000070                     _Y_dir:
  1025                           	callstack 0
  1026  000070                     	ds	1
  1027  000071                     _X_dir:
  1028                           	callstack 0
  1029  000071                     	ds	1
  1030  000072                     _stop:
  1031                           	callstack 0
  1032  000072                     	ds	1
  1033  000073                     _component_present:
  1034                           	callstack 0
  1035  000073                     	ds	1
  1036                           
  1037                           	psect	dataCOMRAM
  1038  000075                     __pdataCOMRAM:
  1039                           	callstack 0
  1040  000075                     _State:
  1041                           	callstack 0
  1042  000075                     	ds	1
  1043                           
  1044                           	psect	bssBANK0
  1045  000080                     __pbssBANK0:
  1046                           	callstack 0
  1047  000080                     _testarray:
  1048                           	callstack 0
  1049  000080                     	ds	30
  1050  00009E                     roundf@F528:
  1051                           	callstack 0
  1052  00009E                     	ds	4
  1053  0000A2                     _angle_diff:
  1054                           	callstack 0
  1055  0000A2                     	ds	2
  1056  0000A4                     _Place_Angle_D:
  1057                           	callstack 0
  1058  0000A4                     	ds	2
  1059  0000A6                     _Y_Place_D:
  1060                           	callstack 0
  1061  0000A6                     	ds	2
  1062  0000A8                     _X_Place_D:
  1063                           	callstack 0
  1064  0000A8                     	ds	2
  1065  0000AA                     _Pick_Angle_D:
  1066                           	callstack 0
  1067  0000AA                     	ds	2
  1068  0000AC                     _Y_Pick_D:
  1069                           	callstack 0
  1070  0000AC                     	ds	2
  1071  0000AE                     _X_Pick_D:
  1072                           	callstack 0
  1073  0000AE                     	ds	2
  1074  0000B0                     _Step_Angle:
  1075                           	callstack 0
  1076  0000B0                     	ds	2
  1077  0000B2                     _Step_Z:
  1078                           	callstack 0
  1079  0000B2                     	ds	2
  1080  0000B4                     _Step_Y:
  1081                           	callstack 0
  1082  0000B4                     	ds	2
  1083  0000B6                     _Step_X:
  1084                           	callstack 0
  1085  0000B6                     	ds	2
  1086  0000B8                     _rotation:
  1087                           	callstack 0
  1088  0000B8                     	ds	2
  1089  0000BA                     _displacement_Y:
  1090                           	callstack 0
  1091  0000BA                     	ds	2
  1092  0000BC                     _displacement_X:
  1093                           	callstack 0
  1094  0000BC                     	ds	2
  1095  0000BE                     _RX_Char:
  1096                           	callstack 0
  1097  0000BE                     	ds	1
  1098                           
  1099                           	psect	dataBANK0
  1100  0000E0                     __pdataBANK0:
  1101                           	callstack 0
  1102  0000E0                     	ds	4
  1103  0000E4                     	ds	4
  1104  0000E8                     add_component@F3142:
  1105                           	callstack 0
  1106  0000E8                     	ds	2
  1107  0000EA                     _lenth_of_array:
  1108                           	callstack 0
  1109  0000EA                     	ds	2
  1110  0000EC                     _new_TMR1L@main$F826:
  1111                           	callstack 0
  1112  0000EC                     	ds	1
  1113  0000ED                     _new_TMR1H@main$F825:
  1114                           	callstack 0
  1115  0000ED                     	ds	1
  1116  0000EE                     	ds	1
  1117  0000EF                     	ds	1
  1118  0000F0                     _input_str:
  1119                           	callstack 0
  1120  0000F0                     	ds	10
  1121  0000FA                     _sequence:
  1122                           	callstack 0
  1123  0000FA                     	ds	4
  1124                           
  1125                           	psect	cstackBANK0
  1126  0000BF                     __pcstackBANK0:
  1127                           	callstack 0
  1128  0000BF                     ??___fltol:
  1129  0000BF                     pick_and_place@i:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x0
  1133  0000BF                     	ds	2
  1134  0000C1                     _pick_and_place$913:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x2
  1138  0000C1                     	ds	2
  1139  0000C3                     ___fltol@sign1:
  1140                           	callstack 0
  1141  0000C3                     pick_and_place@i_914:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x4
  1145  0000C3                     	ds	1
  1146  0000C4                     ___fltol@exp1:
  1147                           	callstack 0
  1148                           
  1149                           ; 1 bytes @ 0x5
  1150  0000C4                     	ds	1
  1151  0000C5                     _pick_and_place$916:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x6
  1155  0000C5                     	ds	2
  1156  0000C7                     pick_and_place@i_917:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x8
  1160  0000C7                     	ds	2
  1161  0000C9                     _pick_and_place$919:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0xA
  1165  0000C9                     	ds	2
  1166  0000CB                     pick_and_place@i_921:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0xC
  1170  0000CB                     	ds	2
  1171  0000CD                     pick_and_place@i_924:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0xE
  1175  0000CD                     	ds	2
  1176  0000CF                     pick_and_place@i_926:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x10
  1180  0000CF                     	ds	2
  1181  0000D1                     _pick_and_place$927:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x12
  1185  0000D1                     	ds	2
  1186  0000D3                     pick_and_place@i_928:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x14
  1190  0000D3                     	ds	2
  1191  0000D5                     _pick_and_place$929:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x16
  1195  0000D5                     	ds	2
  1196  0000D7                     pick_and_place@i_930:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x18
  1200  0000D7                     	ds	2
  1201  0000D9                     _pick_and_place$931:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x1A
  1205  0000D9                     	ds	2
  1206  0000DB                     pick_and_place@i_932:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x1C
  1210  0000DB                     	ds	2
  1211  0000DD                     pick_and_place@i_933:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x1E
  1215  0000DD                     	ds	2
  1216  0000DF                     pick_and_place@Componnt:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x20
  1220  0000DF                     	ds	1
  1221                           
  1222                           	psect	cstackCOMRAM
  1223  000001                     __pcstackCOMRAM:
  1224                           	callstack 0
  1225  000001                     set_new_pos@nTMR1L:
  1226                           	callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x0
  1229  000001                     	ds	1
  1230  000002                     set_new_pos@nTMR1H:
  1231                           	callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x1
  1234  000002                     	ds	1
  1235  000003                     ??_Rx_char_USART:
  1236                           
  1237                           ; 1 bytes @ 0x2
  1238  000003                     	ds	5
  1239  000008                     Rx_char_USART@i:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x7
  1243  000008                     	ds	2
  1244  00000A                     ?_strlen:
  1245                           	callstack 0
  1246  00000A                     ?_isspace:
  1247                           	callstack 0
  1248  00000A                     ?_isdigit:
  1249                           	callstack 0
  1250  00000A                     ?___wmul:
  1251                           	callstack 0
  1252  00000A                     ?___fladd:
  1253                           	callstack 0
  1254  00000A                     ?___flmul:
  1255                           	callstack 0
  1256  00000A                     ?___flneg:
  1257                           	callstack 0
  1258  00000A                     ?___xxtofl:
  1259                           	callstack 0
  1260  00000A                     print_char@chr:
  1261                           	callstack 0
  1262  00000A                     Tweezer@action:
  1263                           	callstack 0
  1264  00000A                     fetch_parameters@Componnt:
  1265                           	callstack 0
  1266  00000A                     print_string@strng:
  1267                           	callstack 0
  1268  00000A                     ms_delay@val:
  1269                           	callstack 0
  1270  00000A                     ___wmul@multiplier:
  1271                           	callstack 0
  1272  00000A                     isdigit@c:
  1273                           	callstack 0
  1274  00000A                     isspace@c:
  1275                           	callstack 0
  1276  00000A                     strlen@s:
  1277                           	callstack 0
  1278  00000A                     ___flneg@f1:
  1279                           	callstack 0
  1280  00000A                     ___fladd@b:
  1281                           	callstack 0
  1282  00000A                     ___flmul@b:
  1283                           	callstack 0
  1284  00000A                     ___xxtofl@val:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x9
  1288  00000A                     	ds	2
  1289  00000C                     ??_isspace:
  1290  00000C                     ??_isdigit:
  1291  00000C                     ??_print_string:
  1292  00000C                     ms_delay@i:
  1293                           	callstack 0
  1294  00000C                     ___wmul@multiplicand:
  1295                           	callstack 0
  1296  00000C                     strlen@a:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0xB
  1300  00000C                     	ds	2
  1301  00000E                     ??___xxtofl:
  1302  00000E                     ?___memrchr:
  1303                           	callstack 0
  1304  00000E                     print_string@i:
  1305                           	callstack 0
  1306  00000E                     ms_delay@j:
  1307                           	callstack 0
  1308  00000E                     ___wmul@product:
  1309                           	callstack 0
  1310  00000E                     memmove@d1:
  1311                           	callstack 0
  1312  00000E                     strncat@d:
  1313                           	callstack 0
  1314  00000E                     ___memrchr@m:
  1315                           	callstack 0
  1316  00000E                     ___fladd@a:
  1317                           	callstack 0
  1318  00000E                     ___flmul@a:
  1319                           	callstack 0
  1320                           
  1321                           ; 4 bytes @ 0xD
  1322  00000E                     	ds	2
  1323  000010                     ??_change_sequence:
  1324  000010                     ??_Z_axis:
  1325  000010                     ??_check_component:
  1326  000010                     X_axis@direction:
  1327                           	callstack 0
  1328  000010                     Y_axis@direction:
  1329                           	callstack 0
  1330  000010                     Twister@direction:
  1331                           	callstack 0
  1332  000010                     _isspace$1420:
  1333                           	callstack 0
  1334  000010                     memmove@s1:
  1335                           	callstack 0
  1336  000010                     strncat@s:
  1337                           	callstack 0
  1338  000010                     ___memrchr@c:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0xF
  1342  000010                     	ds	1
  1343  000011                     ?_atoi:
  1344                           	callstack 0
  1345  000011                     atoi@s:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x10
  1349  000011                     	ds	1
  1350  000012                     ??___fladd:
  1351  000012                     ??___flmul:
  1352  000012                     Z_axis@direction:
  1353                           	callstack 0
  1354  000012                     check_component@Compnt:
  1355                           	callstack 0
  1356  000012                     ___xxtofl@sign:
  1357                           	callstack 0
  1358  000012                     memmove@n:
  1359                           	callstack 0
  1360  000012                     strncat@n:
  1361                           	callstack 0
  1362  000012                     ___memrchr@n:
  1363                           	callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x11
  1366  000012                     	ds	1
  1367  000013                     ??_return_to_initial:
  1368  000013                     ??_atoi:
  1369  000013                     ___xxtofl@exp:
  1370                           	callstack 0
  1371  000013                     change_sequence@i:
  1372                           	callstack 0
  1373  000013                     check_component@j:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x12
  1377  000013                     	ds	1
  1378  000014                     ??_memmove:
  1379  000014                     ??___memrchr:
  1380  000014                     return_to_initial@i:
  1381                           	callstack 0
  1382  000014                     ___xxtofl@arg:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x13
  1386  000014                     	ds	2
  1387  000016                     ___fladd@signs:
  1388                           	callstack 0
  1389  000016                     ___flmul@sign:
  1390                           	callstack 0
  1391  000016                     return_to_initial@i_936:
  1392                           	callstack 0
  1393  000016                     memmove@d:
  1394                           	callstack 0
  1395  000016                     ___memrchr@s:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x15
  1399  000016                     	ds	1
  1400  000017                     ___fladd@aexp:
  1401                           	callstack 0
  1402  000017                     atoi@neg:
  1403                           	callstack 0
  1404  000017                     ___flmul@grs:
  1405                           	callstack 0
  1406                           
  1407                           ; 4 bytes @ 0x16
  1408  000017                     	ds	1
  1409  000018                     ?_strrchr:
  1410                           	callstack 0
  1411  000018                     ?___fldiv:
  1412                           	callstack 0
  1413  000018                     ___fladd@bexp:
  1414                           	callstack 0
  1415  000018                     return_to_initial@i_937:
  1416                           	callstack 0
  1417  000018                     memmove@s:
  1418                           	callstack 0
  1419  000018                     strrchr@s:
  1420                           	callstack 0
  1421  000018                     ___fldiv@b:
  1422                           	callstack 0
  1423                           
  1424                           ; 4 bytes @ 0x17
  1425  000018                     	ds	1
  1426  000019                     ___fladd@grs:
  1427                           	callstack 0
  1428  000019                     _atoi$1402:
  1429                           	callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x18
  1432  000019                     	ds	1
  1433  00001A                     ?___flsub:
  1434                           	callstack 0
  1435  00001A                     return_to_initial@i_938:
  1436                           	callstack 0
  1437  00001A                     strrchr@c:
  1438                           	callstack 0
  1439  00001A                     ___flsub@b:
  1440                           	callstack 0
  1441                           
  1442                           ; 4 bytes @ 0x19
  1443  00001A                     	ds	1
  1444  00001B                     ___flmul@aexp:
  1445                           	callstack 0
  1446  00001B                     _atoi$1404:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x1A
  1450  00001B                     	ds	1
  1451  00001C                     ___flmul@bexp:
  1452                           	callstack 0
  1453  00001C                     remove_component@ptr:
  1454                           	callstack 0
  1455  00001C                     ___fldiv@a:
  1456                           	callstack 0
  1457                           
  1458                           ; 4 bytes @ 0x1B
  1459  00001C                     	ds	1
  1460  00001D                     _atoi$1403:
  1461                           	callstack 0
  1462  00001D                     ___flmul@prod:
  1463                           	callstack 0
  1464                           
  1465                           ; 4 bytes @ 0x1C
  1466  00001D                     	ds	1
  1467  00001E                     remove_component@rm_comp:
  1468                           	callstack 0
  1469  00001E                     atoi@n:
  1470                           	callstack 0
  1471  00001E                     ___flsub@a:
  1472                           	callstack 0
  1473                           
  1474                           ; 4 bytes @ 0x1D
  1475  00001E                     	ds	1
  1476  00001F                     remove_component@indxToDel:
  1477                           	callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x1E
  1480  00001F                     	ds	1
  1481  000020                     ??___fldiv:
  1482  000020                     add_component@add_componnt:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x1F
  1486  000020                     	ds	1
  1487  000021                     ___flmul@temp:
  1488                           	callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x20
  1491  000021                     	ds	1
  1492  000022                     
  1493                           ; 1 bytes @ 0x21
  1494  000022                     	ds	2
  1495  000024                     ___fldiv@rem:
  1496                           	callstack 0
  1497                           
  1498                           ; 4 bytes @ 0x23
  1499  000024                     	ds	4
  1500  000028                     ___fldiv@sign:
  1501                           	callstack 0
  1502                           
  1503                           ; 1 bytes @ 0x27
  1504  000028                     	ds	1
  1505  000029                     ___fldiv@new_exp:
  1506                           	callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x28
  1509  000029                     	ds	2
  1510  00002B                     ___fldiv@grs:
  1511                           	callstack 0
  1512                           
  1513                           ; 4 bytes @ 0x2A
  1514  00002B                     	ds	4
  1515  00002F                     ___fldiv@bexp:
  1516                           	callstack 0
  1517                           
  1518                           ; 1 bytes @ 0x2E
  1519  00002F                     	ds	1
  1520  000030                     ___fldiv@aexp:
  1521                           	callstack 0
  1522                           
  1523                           ; 1 bytes @ 0x2F
  1524  000030                     	ds	1
  1525  000031                     ___flge@ff1:
  1526                           	callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x30
  1529  000031                     	ds	4
  1530  000035                     ___flge@ff2:
  1531                           	callstack 0
  1532                           
  1533                           ; 4 bytes @ 0x34
  1534  000035                     	ds	4
  1535  000039                     ??___flge:
  1536                           
  1537                           ; 1 bytes @ 0x38
  1538  000039                     	ds	4
  1539  00003D                     ??_pick_and_place:
  1540  00003D                     ?_roundf:
  1541                           	callstack 0
  1542  00003D                     roundf@x:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x3C
  1546  00003D                     	ds	2
  1547  00003F                     ??_start_up_menu:
  1548                           
  1549                           ; 1 bytes @ 0x3E
  1550  00003F                     	ds	2
  1551  000041                     ??_roundf:
  1552  000041                     start_up_menu@i:
  1553                           	callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x40
  1556  000041                     	ds	4
  1557  000045                     _roundf$1681:
  1558                           	callstack 0
  1559                           
  1560                           ; 4 bytes @ 0x44
  1561  000045                     	ds	4
  1562  000049                     roundf@e:
  1563                           	callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x48
  1566  000049                     	ds	2
  1567  00004B                     _roundf$1680:
  1568                           	callstack 0
  1569                           
  1570                           ; 4 bytes @ 0x4A
  1571  00004B                     	ds	4
  1572  00004F                     roundf@u:
  1573                           	callstack 0
  1574                           
  1575                           ; 4 bytes @ 0x4E
  1576  00004F                     	ds	4
  1577  000053                     roundf@y:
  1578                           	callstack 0
  1579                           
  1580                           ; 4 bytes @ 0x52
  1581  000053                     	ds	4
  1582  000057                     ?___fltol:
  1583                           	callstack 0
  1584  000057                     ___fltol@f1:
  1585                           	callstack 0
  1586                           
  1587                           ; 4 bytes @ 0x56
  1588  000057                     	ds	4
  1589  00005B                     
  1590                           ; 1 bytes @ 0x5A
  1591 ;;
  1592 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1593 ;;
  1594 ;; *************** function _main *****************
  1595 ;; Defined at:
  1596 ;;		line 197 in file "main.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1610 ;;      Params:         0       0       0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels required when called: 6
  1616 ;; This function calls:
  1617 ;;		_init_PORTS
  1618 ;;		_init_Timers
  1619 ;;		_init_USART
  1620 ;;		_init_interrupts
  1621 ;;		_start_up_menu
  1622 ;; This function is called by:
  1623 ;;		Startup code after reset
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text0
  1628  003412                     __ptext0:
  1629                           	callstack 0
  1630  003412                     _main:
  1631                           	callstack 25
  1632  003412  FFFF               	dw	65535	; assembler added errata NOP
  1633                           
  1634                           ;main.c: 200:     init_PORTS();
  1635  003414  EC49  F01A         	call	_init_PORTS	;wreg free
  1636  003418                     
  1637                           ;main.c: 201:     init_USART();
  1638  003418  ECCC  F019         	call	_init_USART	;wreg free
  1639  00341C                     
  1640                           ;main.c: 202:     init_interrupts();
  1641  00341C  EC6D  F01A         	call	_init_interrupts	;wreg free
  1642  003420                     
  1643                           ;main.c: 204:     init_Timers();
  1644  003420  EC34  F01A         	call	_init_Timers	;wreg free
  1645  003424                     
  1646                           ;main.c: 206:     (INTCONbits.GIE = 1);
  1647  003424  8EF2               	bsf	242,7,c	;volatile
  1648  003426                     
  1649                           ;main.c: 207:     T0CONbits.TMR0ON = 1;
  1650  003426  8ED5               	bsf	213,7,c	;volatile
  1651  003428                     
  1652                           ;main.c: 208:  T1CONbits.TMR1ON = 1;
  1653  003428  80CD               	bsf	205,0,c	;volatile
  1654  00342A                     
  1655                           ;main.c: 209:  LATCbits.LC2 = 1;
  1656  00342A  848B               	bsf	139,2,c	;volatile
  1657  00342C                     l5287:
  1658  00342C  FFFF               	dw	65535	; assembler added errata NOP
  1659                           
  1660                           ;main.c: 212:         New_char_RX=0;
  1661  00342E  0E00               	movlw	0
  1662  003430  6E74               	movwf	_New_char_RX^0,c
  1663  003432                     
  1664                           ;main.c: 213:         start_up_menu();
  1665  003432  ECCA  F010         	call	_start_up_menu	;wreg free
  1666  003436  EF16  F01A         	goto	l5287
  1667  00343A  EFE0  F000         	goto	start
  1668  00343E                     __end_of_main:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _start_up_menu *****************
  1672 ;; Defined at:
  1673 ;;		line 221 in file "main.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  i               2   64[COMRAM] int 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1687 ;;      Params:         0       0       0       0       0       0       0
  1688 ;;      Locals:         2       0       0       0       0       0       0
  1689 ;;      Temps:          2       0       0       0       0       0       0
  1690 ;;      Totals:         4       0       0       0       0       0       0
  1691 ;;Total ram usage:        4 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 5
  1694 ;; This function calls:
  1695 ;;		_add_component
  1696 ;;		_change_sequence
  1697 ;;		_pick_and_place
  1698 ;;		_print_string
  1699 ;;		_remove_component
  1700 ;;		_return_to_initial
  1701 ;;		_strlen
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text1
  1708  002194                     __ptext1:
  1709                           	callstack 0
  1710  002194                     _start_up_menu:
  1711                           	callstack 0
  1712  002194  FFFF               	dw	65535	; assembler added errata NOP
  1713  002196                     
  1714                           ;main.c: 223:     print_string("\n\n1. Start Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component");
  1715  002196  0E4F               	movlw	low STR_1
  1716  002198  6E0A               	movwf	print_string@strng^0,c
  1717  00219A  0E7D               	movlw	high STR_1
  1718  00219C  6E0B               	movwf	(print_string@strng+1)^0,c
  1719  00219E  EC60  F017         	call	_print_string	;wreg free
  1720  0021A2                     l5229:
  1721  0021A2  FFFF               	dw	65535	; assembler added errata NOP
  1722                           
  1723                           ;main.c: 226:         if(New_char_RX){
  1724  0021A4  5074               	movf	_New_char_RX^0,w,c
  1725  0021A6  B4D8               	btfsc	status,2,c
  1726  0021A8  EFD8  F010         	goto	u6501
  1727  0021AC  EFDB  F010         	goto	u6500
  1728  0021B0                     u6501:
  1729  0021B0  FFFF               	dw	65535	; assembler added errata NOP
  1730  0021B2  EFD1  F010         	goto	l5229
  1731  0021B6                     u6500:
  1732  0021B6  FFFF               	dw	65535	; assembler added errata NOP
  1733  0021B8                     
  1734                           ;main.c: 227:             New_char_RX=0;
  1735  0021B8  0E00               	movlw	0
  1736  0021BA  6E74               	movwf	_New_char_RX^0,c
  1737                           
  1738                           ;main.c: 228:             switch(State){
  1739  0021BC  EF56  F011         	goto	l5265
  1740  0021C0                     l5233:
  1741  0021C0  FFFF               	dw	65535	; assembler added errata NOP
  1742                           
  1743                           ;main.c: 230:                     print_string("\nStarting sequence:");
  1744  0021C2  0E98               	movlw	low STR_2
  1745  0021C4  6E0A               	movwf	print_string@strng^0,c
  1746  0021C6  0E7F               	movlw	high STR_2
  1747  0021C8  6E0B               	movwf	(print_string@strng+1)^0,c
  1748  0021CA  EC60  F017         	call	_print_string	;wreg free
  1749                           
  1750                           ;main.c: 231:                     print_string(sequence);
  1751  0021CE  0EFA               	movlw	low _sequence
  1752  0021D0  6E0A               	movwf	print_string@strng^0,c
  1753  0021D2  0E00               	movlw	high _sequence
  1754  0021D4  6E0B               	movwf	(print_string@strng+1)^0,c
  1755  0021D6  EC60  F017         	call	_print_string	;wreg free
  1756                           
  1757                           ;main.c: 232:                     print_string("\nEnter 'Q' to exit to MAIN MENU");
  1758  0021DA  0E82               	movlw	low STR_3
  1759  0021DC  6E0A               	movwf	print_string@strng^0,c
  1760  0021DE  0E7E               	movlw	high STR_3
  1761  0021E0  6E0B               	movwf	(print_string@strng+1)^0,c
  1762  0021E2  EC60  F017         	call	_print_string	;wreg free
  1763  0021E6                     
  1764                           ;main.c: 233:                     return_to_initial();
  1765  0021E6  ECB4  F012         	call	_return_to_initial	;wreg free
  1766  0021EA                     
  1767                           ;main.c: 234:                         X_diff=0;
  1768  0021EA  0E00               	movlw	0
  1769  0021EC  6E62               	movwf	(_X_diff+1)^0,c
  1770  0021EE  0E00               	movlw	0
  1771  0021F0  6E61               	movwf	_X_diff^0,c
  1772  0021F2                     
  1773                           ;main.c: 235:                         Y_diff=0;
  1774  0021F2  0E00               	movlw	0
  1775  0021F4  6E60               	movwf	(_Y_diff+1)^0,c
  1776  0021F6  0E00               	movlw	0
  1777  0021F8  6E5F               	movwf	_Y_diff^0,c
  1778  0021FA                     
  1779                           ;main.c: 236:                         Angle_diff=0;
  1780  0021FA  0E00               	movlw	0
  1781  0021FC  6E5E               	movwf	(_Angle_diff+1)^0,c
  1782  0021FE  0E00               	movlw	0
  1783  002200  6E5D               	movwf	_Angle_diff^0,c
  1784                           
  1785                           ;main.c: 238:                         while(!stop){
  1786  002202  EF33  F011         	goto	l5253
  1787  002206                     l5243:
  1788  002206  FFFF               	dw	65535	; assembler added errata NOP
  1789                           
  1790                           ;main.c: 239:                         for(int i=0; i<strlen(sequence) && !stop;i++){
  1791  002208  0E00               	movlw	0
  1792  00220A  6E42               	movwf	(start_up_menu@i+1)^0,c
  1793  00220C  0E00               	movlw	0
  1794  00220E  6E41               	movwf	start_up_menu@i^0,c
  1795  002210  EF16  F011         	goto	l5249
  1796  002214                     l5245:
  1797  002214  FFFF               	dw	65535	; assembler added errata NOP
  1798                           
  1799                           ;main.c: 240:                             pick_and_place(sequence[i]);
  1800  002216  0EFA               	movlw	low _sequence
  1801  002218  2441               	addwf	start_up_menu@i^0,w,c
  1802  00221A  6ED9               	movwf	fsr2l,c
  1803  00221C  0E00               	movlw	high _sequence
  1804  00221E  2042               	addwfc	(start_up_menu@i+1)^0,w,c
  1805  002220  6EDA               	movwf	fsr2h,c
  1806  002222  50DF               	movf	indf2,w,c
  1807  002224  ECE2  F000         	call	_pick_and_place
  1808  002228                     
  1809                           ;main.c: 241:                         }
  1810  002228  4A41               	infsnz	start_up_menu@i^0,f,c
  1811  00222A  2A42               	incf	(start_up_menu@i+1)^0,f,c
  1812  00222C                     l5249:
  1813  00222C  FFFF               	dw	65535	; assembler added errata NOP
  1814  00222E  0EFA               	movlw	low _sequence
  1815  002230  6E0A               	movwf	strlen@s^0,c
  1816  002232  0E00               	movlw	high _sequence
  1817  002234  6E0B               	movwf	(strlen@s+1)^0,c
  1818  002236  EC69  F019         	call	_strlen	;wreg free
  1819  00223A  500A               	movf	?_strlen^0,w,c
  1820  00223C  5C41               	subwf	start_up_menu@i^0,w,c
  1821  00223E  500B               	movf	(?_strlen+1)^0,w,c
  1822  002240  5842               	subwfb	(start_up_menu@i+1)^0,w,c
  1823  002242  B0D8               	btfsc	status,0,c
  1824  002244  EF26  F011         	goto	u6511
  1825  002248  EF29  F011         	goto	u6510
  1826  00224C                     u6511:
  1827  00224C  FFFF               	dw	65535	; assembler added errata NOP
  1828  00224E  EF33  F011         	goto	l5253
  1829  002252                     u6510:
  1830  002252  FFFF               	dw	65535	; assembler added errata NOP
  1831  002254  5072               	movf	_stop^0,w,c
  1832  002256  B4D8               	btfsc	status,2,c
  1833  002258  EF30  F011         	goto	u6521
  1834  00225C  EF33  F011         	goto	u6520
  1835  002260                     u6521:
  1836  002260  FFFF               	dw	65535	; assembler added errata NOP
  1837  002262  EF0A  F011         	goto	l5245
  1838  002266                     u6520:
  1839  002266                     l5253:
  1840  002266  FFFF               	dw	65535	; assembler added errata NOP
  1841                           
  1842                           ;main.c: 238:                         while(!stop){
  1843  002268  5072               	movf	_stop^0,w,c
  1844  00226A  B4D8               	btfsc	status,2,c
  1845  00226C  EF3A  F011         	goto	u6531
  1846  002270  EF3D  F011         	goto	u6530
  1847  002274                     u6531:
  1848  002274  FFFF               	dw	65535	; assembler added errata NOP
  1849  002276  EF03  F011         	goto	l5243
  1850  00227A                     u6530:
  1851  00227A  FFFF               	dw	65535	; assembler added errata NOP
  1852  00227C  EF79  F011         	goto	l273
  1853  002280                     l5255:
  1854  002280  FFFF               	dw	65535	; assembler added errata NOP
  1855                           
  1856                           ;main.c: 251:                     change_sequence();
  1857  002282  ECB0  F017         	call	_change_sequence	;wreg free
  1858                           
  1859                           ;main.c: 253:                     break;
  1860  002286  EF79  F011         	goto	l273
  1861  00228A                     l5257:
  1862  00228A  FFFF               	dw	65535	; assembler added errata NOP
  1863                           
  1864                           ;main.c: 256:                     add_component();
  1865  00228C  ECEF  F00D         	call	_add_component	;wreg free
  1866                           
  1867                           ;main.c: 258:                     break;
  1868  002290  EF79  F011         	goto	l273
  1869  002294                     l5259:
  1870  002294  FFFF               	dw	65535	; assembler added errata NOP
  1871                           
  1872                           ;main.c: 261:                     remove_component();
  1873  002296  EC73  F014         	call	_remove_component	;wreg free
  1874                           
  1875                           ;main.c: 263:                     break;
  1876  00229A  EF79  F011         	goto	l273
  1877  00229E                     l5261:
  1878  00229E  FFFF               	dw	65535	; assembler added errata NOP
  1879                           
  1880                           ;main.c: 266:                     New_char_RX=0;
  1881  0022A0  0E00               	movlw	0
  1882  0022A2  6E74               	movwf	_New_char_RX^0,c
  1883                           
  1884                           ;main.c: 267:                     stop=0;
  1885  0022A4  0E00               	movlw	0
  1886  0022A6  6E72               	movwf	_stop^0,c
  1887                           
  1888                           ;main.c: 268:                     break;
  1889  0022A8  EF79  F011         	goto	l273
  1890  0022AC                     l5265:
  1891  0022AC  FFFF               	dw	65535	; assembler added errata NOP
  1892  0022AE  5075               	movf	_State^0,w,c
  1893  0022B0  6E3F               	movwf	??_start_up_menu^0,c
  1894  0022B2  6A40               	clrf	(??_start_up_menu+1)^0,c
  1895                           
  1896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1897                           ; Switch size 1, requested type "simple"
  1898                           ; Number of cases is 1, Range of values is 0 to 0
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; simple_byte            4     3 (average)
  1902                           ;	Chosen strategy is simple_byte
  1903  0022B4  5040               	movf	(??_start_up_menu+1)^0,w,c
  1904  0022B6  0A00               	xorlw	0	; case 0
  1905  0022B8  B4D8               	btfsc	status,2,c
  1906  0022BA  EF61  F011         	goto	l5355
  1907  0022BE  EF79  F011         	goto	l273
  1908  0022C2                     l5355:
  1909  0022C2  FFFF               	dw	65535	; assembler added errata NOP
  1910                           
  1911                           ; Switch size 1, requested type "simple"
  1912                           ; Number of cases is 5, Range of values is 49 to 81
  1913                           ; switch strategies available:
  1914                           ; Name         Instructions Cycles
  1915                           ; simple_byte           16     9 (average)
  1916                           ;	Chosen strategy is simple_byte
  1917  0022C4  503F               	movf	??_start_up_menu^0,w,c
  1918  0022C6  0A31               	xorlw	49	; case 49
  1919  0022C8  B4D8               	btfsc	status,2,c
  1920  0022CA  EFE0  F010         	goto	l5233
  1921  0022CE  0A03               	xorlw	3	; case 50
  1922  0022D0  B4D8               	btfsc	status,2,c
  1923  0022D2  EF40  F011         	goto	l5255
  1924  0022D6  0A01               	xorlw	1	; case 51
  1925  0022D8  B4D8               	btfsc	status,2,c
  1926  0022DA  EF45  F011         	goto	l5257
  1927  0022DE  0A07               	xorlw	7	; case 52
  1928  0022E0  B4D8               	btfsc	status,2,c
  1929  0022E2  EF4A  F011         	goto	l5259
  1930  0022E6  0A65               	xorlw	101	; case 81
  1931  0022E8  B4D8               	btfsc	status,2,c
  1932  0022EA  EF4F  F011         	goto	l5261
  1933  0022EE  EF79  F011         	goto	l273
  1934  0022F2                     l273:
  1935  0022F2  FFFF               	dw	65535	; assembler added errata NOP
  1936  0022F4  0012               	return		;funcret
  1937  0022F6  FFFF               	dw	65535	; errata NOP
  1938  0022F8                     __end_of_start_up_menu:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _return_to_initial *****************
  1942 ;; Defined at:
  1943 ;;		line 680 in file "main.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  i               2   25[COMRAM] int 
  1948 ;;  i               2   23[COMRAM] int 
  1949 ;;  i               2   21[COMRAM] int 
  1950 ;;  i               2   19[COMRAM] int 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1960 ;;      Params:         0       0       0       0       0       0       0
  1961 ;;      Locals:         8       0       0       0       0       0       0
  1962 ;;      Temps:          1       0       0       0       0       0       0
  1963 ;;      Totals:         9       0       0       0       0       0       0
  1964 ;;Total ram usage:        9 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 4
  1967 ;; This function calls:
  1968 ;;		_Twister
  1969 ;;		_X_axis
  1970 ;;		_Y_axis
  1971 ;;		_Z_axis
  1972 ;; This function is called by:
  1973 ;;		_start_up_menu
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text2
  1978  002568                     __ptext2:
  1979                           	callstack 0
  1980  002568                     _return_to_initial:
  1981                           	callstack 0
  1982  002568  FFFF               	dw	65535	; assembler added errata NOP
  1983  00256A                     
  1984                           ;main.c: 682:     New_char_RX=0;
  1985  00256A  0E00               	movlw	0
  1986  00256C  6E74               	movwf	_New_char_RX^0,c
  1987                           
  1988                           ;main.c: 683:     stop=0;
  1989  00256E  0E00               	movlw	0
  1990  002570  6E72               	movwf	_stop^0,c
  1991  002572                     
  1992                           ;main.c: 684:     Steps=Step_X;
  1993  002572  C0B6  F05B         	movff	_Step_X,_Steps
  1994  002576  C0B7  F05C         	movff	_Step_X+1,_Steps+1
  1995                           
  1996                           ;main.c: 685:     for(int i = 0; i<Steps; i++){X_axis(0);}
  1997  00257A  0E00               	movlw	0
  1998  00257C  6E15               	movwf	(return_to_initial@i+1)^0,c
  1999  00257E  0E00               	movlw	0
  2000  002580  6E14               	movwf	return_to_initial@i^0,c
  2001  002582  EFC9  F012         	goto	l4861
  2002  002586                     l4857:
  2003  002586  FFFF               	dw	65535	; assembler added errata NOP
  2004  002588  0E00               	movlw	0
  2005  00258A  EC7D  F015         	call	_X_axis
  2006  00258E  4A14               	infsnz	return_to_initial@i^0,f,c
  2007  002590  2A15               	incf	(return_to_initial@i+1)^0,f,c
  2008  002592                     l4861:
  2009  002592  FFFF               	dw	65535	; assembler added errata NOP
  2010  002594  505B               	movf	_Steps^0,w,c
  2011  002596  5C14               	subwf	return_to_initial@i^0,w,c
  2012  002598  5015               	movf	(return_to_initial@i+1)^0,w,c
  2013  00259A  0A80               	xorlw	128
  2014  00259C  6E13               	movwf	??_return_to_initial^0,c
  2015  00259E  505C               	movf	(_Steps+1)^0,w,c
  2016  0025A0  0A80               	xorlw	128
  2017  0025A2  5813               	subwfb	??_return_to_initial^0,w,c
  2018  0025A4  A0D8               	btfss	status,0,c
  2019  0025A6  EFD7  F012         	goto	u5841
  2020  0025AA  EFDA  F012         	goto	u5840
  2021  0025AE                     u5841:
  2022  0025AE  FFFF               	dw	65535	; assembler added errata NOP
  2023  0025B0  EFC3  F012         	goto	l4857
  2024  0025B4                     u5840:
  2025  0025B4  FFFF               	dw	65535	; assembler added errata NOP
  2026  0025B6                     
  2027                           ;main.c: 686:     Steps=Step_Y;
  2028  0025B6  C0B4  F05B         	movff	_Step_Y,_Steps
  2029  0025BA  C0B5  F05C         	movff	_Step_Y+1,_Steps+1
  2030  0025BE                     
  2031                           ;main.c: 687:     for(int i = 0; i<Steps; i++){Y_axis(0);}
  2032  0025BE  0E00               	movlw	0
  2033  0025C0  6E17               	movwf	(return_to_initial@i_936+1)^0,c
  2034  0025C2  0E00               	movlw	0
  2035  0025C4  6E16               	movwf	return_to_initial@i_936^0,c
  2036  0025C6  EFEB  F012         	goto	l4869
  2037  0025CA                     l4865:
  2038  0025CA  FFFF               	dw	65535	; assembler added errata NOP
  2039  0025CC  0E00               	movlw	0
  2040  0025CE  ECF8  F014         	call	_Y_axis
  2041  0025D2  4A16               	infsnz	return_to_initial@i_936^0,f,c
  2042  0025D4  2A17               	incf	(return_to_initial@i_936+1)^0,f,c
  2043  0025D6                     l4869:
  2044  0025D6  FFFF               	dw	65535	; assembler added errata NOP
  2045  0025D8  505B               	movf	_Steps^0,w,c
  2046  0025DA  5C16               	subwf	return_to_initial@i_936^0,w,c
  2047  0025DC  5017               	movf	(return_to_initial@i_936+1)^0,w,c
  2048  0025DE  0A80               	xorlw	128
  2049  0025E0  6E13               	movwf	??_return_to_initial^0,c
  2050  0025E2  505C               	movf	(_Steps+1)^0,w,c
  2051  0025E4  0A80               	xorlw	128
  2052  0025E6  5813               	subwfb	??_return_to_initial^0,w,c
  2053  0025E8  A0D8               	btfss	status,0,c
  2054  0025EA  EFF9  F012         	goto	u5851
  2055  0025EE  EFFC  F012         	goto	u5850
  2056  0025F2                     u5851:
  2057  0025F2  FFFF               	dw	65535	; assembler added errata NOP
  2058  0025F4  EFE5  F012         	goto	l4865
  2059  0025F8                     u5850:
  2060  0025F8  FFFF               	dw	65535	; assembler added errata NOP
  2061  0025FA                     
  2062                           ;main.c: 688:     Steps=Step_Angle;
  2063  0025FA  C0B0  F05B         	movff	_Step_Angle,_Steps
  2064  0025FE  C0B1  F05C         	movff	_Step_Angle+1,_Steps+1
  2065  002602                     
  2066                           ;main.c: 689:     for(int i = 0; i<Steps; i++){Twister(0);}
  2067  002602  0E00               	movlw	0
  2068  002604  6E19               	movwf	(return_to_initial@i_937+1)^0,c
  2069  002606  0E00               	movlw	0
  2070  002608  6E18               	movwf	return_to_initial@i_937^0,c
  2071  00260A  EF0D  F013         	goto	l4877
  2072  00260E                     l4873:
  2073  00260E  FFFF               	dw	65535	; assembler added errata NOP
  2074  002610  0E00               	movlw	0
  2075  002612  EC7F  F016         	call	_Twister
  2076  002616  4A18               	infsnz	return_to_initial@i_937^0,f,c
  2077  002618  2A19               	incf	(return_to_initial@i_937+1)^0,f,c
  2078  00261A                     l4877:
  2079  00261A  FFFF               	dw	65535	; assembler added errata NOP
  2080  00261C  505B               	movf	_Steps^0,w,c
  2081  00261E  5C18               	subwf	return_to_initial@i_937^0,w,c
  2082  002620  5019               	movf	(return_to_initial@i_937+1)^0,w,c
  2083  002622  0A80               	xorlw	128
  2084  002624  6E13               	movwf	??_return_to_initial^0,c
  2085  002626  505C               	movf	(_Steps+1)^0,w,c
  2086  002628  0A80               	xorlw	128
  2087  00262A  5813               	subwfb	??_return_to_initial^0,w,c
  2088  00262C  A0D8               	btfss	status,0,c
  2089  00262E  EF1B  F013         	goto	u5861
  2090  002632  EF1E  F013         	goto	u5860
  2091  002636                     u5861:
  2092  002636  FFFF               	dw	65535	; assembler added errata NOP
  2093  002638  EF07  F013         	goto	l4873
  2094  00263C                     u5860:
  2095  00263C  FFFF               	dw	65535	; assembler added errata NOP
  2096  00263E                     
  2097                           ;main.c: 690:     Steps=Step_Z;
  2098  00263E  C0B2  F05B         	movff	_Step_Z,_Steps
  2099  002642  C0B3  F05C         	movff	_Step_Z+1,_Steps+1
  2100  002646                     
  2101                           ;main.c: 691:     for(int i=0; i<Steps && !stop; i++){Z_axis(0);}
  2102  002646  0E00               	movlw	0
  2103  002648  6E1B               	movwf	(return_to_initial@i_938+1)^0,c
  2104  00264A  0E00               	movlw	0
  2105  00264C  6E1A               	movwf	return_to_initial@i_938^0,c
  2106  00264E  EF2F  F013         	goto	l4885
  2107  002652                     l4881:
  2108  002652  FFFF               	dw	65535	; assembler added errata NOP
  2109  002654  0E00               	movlw	0
  2110  002656  ECE1  F013         	call	_Z_axis
  2111  00265A  4A1A               	infsnz	return_to_initial@i_938^0,f,c
  2112  00265C  2A1B               	incf	(return_to_initial@i_938+1)^0,f,c
  2113  00265E                     l4885:
  2114  00265E  FFFF               	dw	65535	; assembler added errata NOP
  2115  002660  505B               	movf	_Steps^0,w,c
  2116  002662  5C1A               	subwf	return_to_initial@i_938^0,w,c
  2117  002664  501B               	movf	(return_to_initial@i_938+1)^0,w,c
  2118  002666  0A80               	xorlw	128
  2119  002668  6E13               	movwf	??_return_to_initial^0,c
  2120  00266A  505C               	movf	(_Steps+1)^0,w,c
  2121  00266C  0A80               	xorlw	128
  2122  00266E  5813               	subwfb	??_return_to_initial^0,w,c
  2123  002670  B0D8               	btfsc	status,0,c
  2124  002672  EF3D  F013         	goto	u5871
  2125  002676  EF40  F013         	goto	u5870
  2126  00267A                     u5871:
  2127  00267A  FFFF               	dw	65535	; assembler added errata NOP
  2128  00267C  EF4A  F013         	goto	l484
  2129  002680                     u5870:
  2130  002680  FFFF               	dw	65535	; assembler added errata NOP
  2131  002682  5072               	movf	_stop^0,w,c
  2132  002684  B4D8               	btfsc	status,2,c
  2133  002686  EF47  F013         	goto	u5881
  2134  00268A  EF4A  F013         	goto	u5880
  2135  00268E                     u5881:
  2136  00268E  FFFF               	dw	65535	; assembler added errata NOP
  2137  002690  EF29  F013         	goto	l4881
  2138  002694                     u5880:
  2139  002694                     l484:
  2140  002694  FFFF               	dw	65535	; assembler added errata NOP
  2141  002696  0012               	return		;funcret
  2142  002698  FFFF               	dw	65535	; errata NOP
  2143  00269A                     __end_of_return_to_initial:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function _remove_component *****************
  2147 ;; Defined at:
  2148 ;;		line 364 in file "main.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  indxToDel       2   30[COMRAM] int 
  2153 ;;  ptr             2   27[COMRAM] PTR unsigned char 
  2154 ;;		 -> sequence(4), NULL(0), 
  2155 ;;  rm_comp         1   29[COMRAM] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2165 ;;      Params:         0       0       0       0       0       0       0
  2166 ;;      Locals:         5       0       0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0
  2168 ;;      Totals:         5       0       0       0       0       0       0
  2169 ;;Total ram usage:        5 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 4
  2172 ;; This function calls:
  2173 ;;		_memmove
  2174 ;;		_print_string
  2175 ;;		_strlen
  2176 ;;		_strrchr
  2177 ;; This function is called by:
  2178 ;;		_start_up_menu
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text3
  2183  0028E6                     __ptext3:
  2184                           	callstack 0
  2185  0028E6                     _remove_component:
  2186                           	callstack 0
  2187  0028E6  FFFF               	dw	65535	; assembler added errata NOP
  2188  0028E8                     
  2189                           ;main.c: 365:     print_string("\nWhich component would you like to remove from the  seq
      +                          uence?\n");
  2190  0028E8  0EE7               	movlw	low STR_15
  2191  0028EA  6E0A               	movwf	print_string@strng^0,c
  2192  0028EC  0E7D               	movlw	high STR_15
  2193  0028EE  6E0B               	movwf	(print_string@strng+1)^0,c
  2194  0028F0  EC60  F017         	call	_print_string	;wreg free
  2195                           
  2196                           ;main.c: 366:     print_string(sequence);
  2197  0028F4  0EFA               	movlw	low _sequence
  2198  0028F6  6E0A               	movwf	print_string@strng^0,c
  2199  0028F8  0E00               	movlw	high _sequence
  2200  0028FA  6E0B               	movwf	(print_string@strng+1)^0,c
  2201  0028FC  EC60  F017         	call	_print_string	;wreg free
  2202  002900                     l5135:
  2203  002900  FFFF               	dw	65535	; assembler added errata NOP
  2204                           
  2205                           ;main.c: 368:         if(New_char_RX){
  2206  002902  5074               	movf	_New_char_RX^0,w,c
  2207  002904  B4D8               	btfsc	status,2,c
  2208  002906  EF87  F014         	goto	u6391
  2209  00290A  EF8A  F014         	goto	u6390
  2210  00290E                     u6391:
  2211  00290E  FFFF               	dw	65535	; assembler added errata NOP
  2212  002910  EF80  F014         	goto	l5135
  2213  002914                     u6390:
  2214  002914  FFFF               	dw	65535	; assembler added errata NOP
  2215  002916                     
  2216                           ;main.c: 369:             New_char_RX=0;
  2217  002916  0E00               	movlw	0
  2218  002918  6E74               	movwf	_New_char_RX^0,c
  2219  00291A                     
  2220                           ;main.c: 370:             char rm_comp = input_str[0];
  2221  00291A  C0F0  F01E         	movff	_input_str,remove_component@rm_comp	;volatile
  2222  00291E                     
  2223                           ;main.c: 371:             char *ptr;;main.c: 372:             int indxToDel;;main.c: 373
      +                          :             ptr=strrchr(sequence,rm_comp);
  2224  00291E  0EFA               	movlw	low _sequence
  2225  002920  6E18               	movwf	strrchr@s^0,c
  2226  002922  0E00               	movlw	high _sequence
  2227  002924  6E19               	movwf	(strrchr@s+1)^0,c
  2228  002926  C01E  F01A         	movff	remove_component@rm_comp,strrchr@c
  2229  00292A  6A1B               	clrf	(strrchr@c+1)^0,c
  2230  00292C  ECEC  F019         	call	_strrchr	;wreg free
  2231  002930  C018  F01C         	movff	?_strrchr,remove_component@ptr
  2232  002934  C019  F01D         	movff	?_strrchr+1,remove_component@ptr+1
  2233  002938                     
  2234                           ;main.c: 375:             if (rm_comp=='Q'){
  2235  002938  0E51               	movlw	81
  2236  00293A  181E               	xorwf	remove_component@rm_comp^0,w,c
  2237  00293C  A4D8               	btfss	status,2,c
  2238  00293E  EFA3  F014         	goto	u6401
  2239  002942  EFA6  F014         	goto	u6400
  2240  002946                     u6401:
  2241  002946  FFFF               	dw	65535	; assembler added errata NOP
  2242  002948  EFA9  F014         	goto	l5149
  2243  00294C                     u6400:
  2244  00294C  FFFF               	dw	65535	; assembler added errata NOP
  2245  00294E  EFF3  F014         	goto	l5165
  2246  002952                     l5149:
  2247  002952  FFFF               	dw	65535	; assembler added errata NOP
  2248  002954  501C               	movf	remove_component@ptr^0,w,c
  2249  002956  101D               	iorwf	(remove_component@ptr+1)^0,w,c
  2250  002958  B4D8               	btfsc	status,2,c
  2251  00295A  EFB1  F014         	goto	u6411
  2252  00295E  EFB4  F014         	goto	u6410
  2253  002962                     u6411:
  2254  002962  FFFF               	dw	65535	; assembler added errata NOP
  2255  002964  EFDF  F014         	goto	l5161
  2256  002968                     u6410:
  2257  002968  FFFF               	dw	65535	; assembler added errata NOP
  2258  00296A                     
  2259                           ;main.c: 379:                 indxToDel = ptr - sequence;
  2260  00296A  0EFA               	movlw	low _sequence
  2261  00296C  5C1C               	subwf	remove_component@ptr^0,w,c
  2262  00296E  6E1F               	movwf	remove_component@indxToDel^0,c
  2263  002970  0E00               	movlw	high _sequence
  2264  002972  581D               	subwfb	(remove_component@ptr+1)^0,w,c
  2265  002974  6E20               	movwf	(remove_component@indxToDel+1)^0,c
  2266  002976                     
  2267                           ;main.c: 380:                 memmove(&sequence[indxToDel], &sequence[indxToDel + 1], st
      +                          rlen(sequence) - indxToDel);
  2268  002976  0EFA               	movlw	low _sequence
  2269  002978  241F               	addwf	remove_component@indxToDel^0,w,c
  2270  00297A  6E0E               	movwf	memmove@d1^0,c
  2271  00297C  0E00               	movlw	high _sequence
  2272  00297E  2020               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2273  002980  6E0F               	movwf	(memmove@d1+1)^0,c
  2274  002982  0EFB               	movlw	low (_sequence+1)
  2275  002984  241F               	addwf	remove_component@indxToDel^0,w,c
  2276  002986  6E10               	movwf	memmove@s1^0,c
  2277  002988  0E00               	movlw	high (_sequence+1)
  2278  00298A  2020               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2279  00298C  6E11               	movwf	(memmove@s1+1)^0,c
  2280  00298E  0EFA               	movlw	low _sequence
  2281  002990  6E0A               	movwf	strlen@s^0,c
  2282  002992  0E00               	movlw	high _sequence
  2283  002994  6E0B               	movwf	(strlen@s+1)^0,c
  2284  002996  EC69  F019         	call	_strlen	;wreg free
  2285  00299A  501F               	movf	remove_component@indxToDel^0,w,c
  2286  00299C  5C0A               	subwf	?_strlen^0,w,c
  2287  00299E  6E12               	movwf	memmove@n^0,c
  2288  0029A0  5020               	movf	(remove_component@indxToDel+1)^0,w,c
  2289  0029A2  580B               	subwfb	(?_strlen+1)^0,w,c
  2290  0029A4  6E13               	movwf	(memmove@n+1)^0,c
  2291  0029A6  EC02  F016         	call	_memmove	;wreg free
  2292  0029AA                     
  2293                           ;main.c: 381:                 print_string("\ncomponent removed");
  2294  0029AA  0ED4               	movlw	low STR_16
  2295  0029AC  6E0A               	movwf	print_string@strng^0,c
  2296  0029AE  0E7F               	movlw	high STR_16
  2297  0029B0  6E0B               	movwf	(print_string@strng+1)^0,c
  2298  0029B2  EC60  F017         	call	_print_string	;wreg free
  2299  0029B6                     
  2300                           ;main.c: 382:                 stop=0;
  2301  0029B6  0E00               	movlw	0
  2302  0029B8  6E72               	movwf	_stop^0,c
  2303                           
  2304                           ;main.c: 383:                 break;
  2305  0029BA  EFF3  F014         	goto	l5165
  2306  0029BE                     l5161:
  2307  0029BE  FFFF               	dw	65535	; assembler added errata NOP
  2308                           
  2309                           ;main.c: 387:                 print_string("\ncomponent is not in the sequence. Try sele
      +                          cting another component: \n");
  2310  0029C0  0EA1               	movlw	low STR_17
  2311  0029C2  6E0A               	movwf	print_string@strng^0,c
  2312  0029C4  0E7D               	movlw	high STR_17
  2313  0029C6  6E0B               	movwf	(print_string@strng+1)^0,c
  2314  0029C8  EC60  F017         	call	_print_string	;wreg free
  2315  0029CC                     l5163:
  2316  0029CC  FFFF               	dw	65535	; assembler added errata NOP
  2317  0029CE  5074               	movf	_New_char_RX^0,w,c
  2318  0029D0  B4D8               	btfsc	status,2,c
  2319  0029D2  EFED  F014         	goto	u6421
  2320  0029D6  EFF0  F014         	goto	u6420
  2321  0029DA                     u6421:
  2322  0029DA  FFFF               	dw	65535	; assembler added errata NOP
  2323  0029DC  EFE6  F014         	goto	l5163
  2324  0029E0                     u6420:
  2325  0029E0  FFFF               	dw	65535	; assembler added errata NOP
  2326  0029E2  EF80  F014         	goto	l5135
  2327  0029E6                     l5165:
  2328  0029E6  FFFF               	dw	65535	; assembler added errata NOP
  2329                           
  2330                           ;main.c: 392:     New_char_RX=0;
  2331  0029E8  0E00               	movlw	0
  2332  0029EA  6E74               	movwf	_New_char_RX^0,c
  2333  0029EC  0012               	return		;funcret
  2334  0029EE  FFFF               	dw	65535	; errata NOP
  2335  0029F0                     __end_of_remove_component:
  2336                           	callstack 0
  2337                           
  2338 ;; *************** function _strrchr *****************
  2339 ;; Defined at:
  2340 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2343 ;;		 -> sequence(4), 
  2344 ;;  c               2   25[COMRAM] int 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  2   23[COMRAM] PTR unsigned char 
  2349 ;; Registers used:
  2350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2356 ;;      Params:         4       0       0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0
  2359 ;;      Totals:         4       0       0       0       0       0       0
  2360 ;;Total ram usage:        4 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 3
  2363 ;; This function calls:
  2364 ;;		___memrchr
  2365 ;;		_strlen
  2366 ;; This function is called by:
  2367 ;;		_remove_component
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text4
  2372  0033D8                     __ptext4:
  2373                           	callstack 0
  2374  0033D8                     _strrchr:
  2375                           	callstack 0
  2376  0033D8  FFFF               	dw	65535	; assembler added errata NOP
  2377  0033DA  C018  F00E         	movff	strrchr@s,___memrchr@m
  2378  0033DE  C019  F00F         	movff	strrchr@s+1,___memrchr@m+1
  2379  0033E2  C01A  F010         	movff	strrchr@c,___memrchr@c
  2380  0033E6  C01B  F011         	movff	strrchr@c+1,___memrchr@c+1
  2381  0033EA  C018  F00A         	movff	strrchr@s,strlen@s
  2382  0033EE  C019  F00B         	movff	strrchr@s+1,strlen@s+1
  2383  0033F2  EC69  F019         	call	_strlen	;wreg free
  2384  0033F6  0E01               	movlw	1
  2385  0033F8  240A               	addwf	?_strlen^0,w,c
  2386  0033FA  6E12               	movwf	___memrchr@n^0,c
  2387  0033FC  0E00               	movlw	0
  2388  0033FE  200B               	addwfc	(?_strlen+1)^0,w,c
  2389  003400  6E13               	movwf	(___memrchr@n+1)^0,c
  2390  003402  EC3F  F018         	call	___memrchr	;wreg free
  2391  003406  C00E  F018         	movff	?___memrchr,?_strrchr
  2392  00340A  C00F  F019         	movff	?___memrchr+1,?_strrchr+1
  2393  00340E  0012               	return		;funcret
  2394  003410  FFFF               	dw	65535	; errata NOP
  2395  003412                     __end_of_strrchr:
  2396                           	callstack 0
  2397                           
  2398 ;; *************** function ___memrchr *****************
  2399 ;; Defined at:
  2400 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  m               2   13[COMRAM] PTR const void 
  2403 ;;		 -> sequence(4), 
  2404 ;;  c               2   15[COMRAM] int 
  2405 ;;  n               2   17[COMRAM] unsigned int 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2408 ;;		 -> sequence(4), 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2   13[COMRAM] PTR void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2418 ;;      Params:         6       0       0       0       0       0       0
  2419 ;;      Locals:         2       0       0       0       0       0       0
  2420 ;;      Temps:          2       0       0       0       0       0       0
  2421 ;;      Totals:        10       0       0       0       0       0       0
  2422 ;;Total ram usage:       10 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 2
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_strrchr
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text5
  2433  00307E                     __ptext5:
  2434                           	callstack 0
  2435  00307E                     ___memrchr:
  2436                           	callstack 0
  2437  00307E  FFFF               	dw	65535	; assembler added errata NOP
  2438  003080  C00E  F016         	movff	___memrchr@m,___memrchr@s
  2439  003084  C00F  F017         	movff	___memrchr@m+1,___memrchr@s+1
  2440  003088  C010  F010         	movff	___memrchr@c,___memrchr@c
  2441  00308C  6A11               	clrf	(___memrchr@c+1)^0,c
  2442  00308E  EF69  F018         	goto	l3103
  2443  003092                     l3097:
  2444  003092  FFFF               	dw	65535	; assembler added errata NOP
  2445  003094  5012               	movf	___memrchr@n^0,w,c
  2446  003096  2416               	addwf	___memrchr@s^0,w,c
  2447  003098  6ED9               	movwf	fsr2l,c
  2448  00309A  5013               	movf	(___memrchr@n+1)^0,w,c
  2449  00309C  2017               	addwfc	(___memrchr@s+1)^0,w,c
  2450  00309E  6EDA               	movwf	fsr2h,c
  2451  0030A0  50DF               	movf	indf2,w,c
  2452  0030A2  6E14               	movwf	??___memrchr^0,c
  2453  0030A4  6A15               	clrf	(??___memrchr+1)^0,c
  2454  0030A6  5010               	movf	___memrchr@c^0,w,c
  2455  0030A8  1814               	xorwf	??___memrchr^0,w,c
  2456  0030AA  E107               	bnz	u3021
  2457  0030AC  5011               	movf	(___memrchr@c+1)^0,w,c
  2458  0030AE  1815               	xorwf	(??___memrchr+1)^0,w,c
  2459  0030B0  A4D8               	btfss	status,2,c
  2460  0030B2  EF5D  F018         	goto	u3021
  2461  0030B6  EF60  F018         	goto	u3020
  2462  0030BA                     u3021:
  2463  0030BA  FFFF               	dw	65535	; assembler added errata NOP
  2464  0030BC  EF69  F018         	goto	l3103
  2465  0030C0                     u3020:
  2466  0030C0  FFFF               	dw	65535	; assembler added errata NOP
  2467  0030C2  5012               	movf	___memrchr@n^0,w,c
  2468  0030C4  2416               	addwf	___memrchr@s^0,w,c
  2469  0030C6  6E0E               	movwf	?___memrchr^0,c
  2470  0030C8  5013               	movf	(___memrchr@n+1)^0,w,c
  2471  0030CA  2017               	addwfc	(___memrchr@s+1)^0,w,c
  2472  0030CC  6E0F               	movwf	(?___memrchr+1)^0,c
  2473  0030CE  EF7D  F018         	goto	l1284
  2474  0030D2                     l3103:
  2475  0030D2  FFFF               	dw	65535	; assembler added errata NOP
  2476  0030D4  0612               	decf	___memrchr@n^0,f,c
  2477  0030D6  A0D8               	btfss	status,0,c
  2478  0030D8  0613               	decf	(___memrchr@n+1)^0,f,c
  2479  0030DA  2812               	incf	___memrchr@n^0,w,c
  2480  0030DC  E106               	bnz	u3031
  2481  0030DE  2813               	incf	(___memrchr@n+1)^0,w,c
  2482  0030E0  A4D8               	btfss	status,2,c
  2483  0030E2  EF75  F018         	goto	u3031
  2484  0030E6  EF78  F018         	goto	u3030
  2485  0030EA                     u3031:
  2486  0030EA  FFFF               	dw	65535	; assembler added errata NOP
  2487  0030EC  EF49  F018         	goto	l3097
  2488  0030F0                     u3030:
  2489  0030F0  FFFF               	dw	65535	; assembler added errata NOP
  2490  0030F2  0E00               	movlw	0
  2491  0030F4  6E0E               	movwf	?___memrchr^0,c
  2492  0030F6  0E00               	movlw	0
  2493  0030F8  6E0F               	movwf	(?___memrchr+1)^0,c
  2494  0030FA                     l1284:
  2495  0030FA  FFFF               	dw	65535	; assembler added errata NOP
  2496  0030FC  0012               	return		;funcret
  2497  0030FE  FFFF               	dw	65535	; errata NOP
  2498  003100                     __end_of___memrchr:
  2499                           	callstack 0
  2500                           
  2501 ;; *************** function _memmove *****************
  2502 ;; Defined at:
  2503 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  d1              2   13[COMRAM] PTR void 
  2506 ;;		 -> sequence(4), 
  2507 ;;  s1              2   15[COMRAM] PTR const void 
  2508 ;;		 -> sequence(4), 
  2509 ;;  n               2   17[COMRAM] unsigned int 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2512 ;;		 -> sequence(4), 
  2513 ;;  d               2   21[COMRAM] PTR unsigned char 
  2514 ;;		 -> sequence(4), 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  2   13[COMRAM] PTR void 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2524 ;;      Params:         6       0       0       0       0       0       0
  2525 ;;      Locals:         4       0       0       0       0       0       0
  2526 ;;      Temps:          2       0       0       0       0       0       0
  2527 ;;      Totals:        12       0       0       0       0       0       0
  2528 ;;Total ram usage:       12 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 2
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_remove_component
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text6
  2539  002C04                     __ptext6:
  2540                           	callstack 0
  2541  002C04                     _memmove:
  2542                           	callstack 0
  2543  002C04  FFFF               	dw	65535	; assembler added errata NOP
  2544  002C06  C010  F018         	movff	memmove@s1,memmove@s
  2545  002C0A  C011  F019         	movff	memmove@s1+1,memmove@s+1
  2546  002C0E  C00E  F016         	movff	memmove@d1,memmove@d
  2547  002C12  C00F  F017         	movff	memmove@d1+1,memmove@d+1
  2548  002C16  5016               	movf	memmove@d^0,w,c
  2549  002C18  5C18               	subwf	memmove@s^0,w,c
  2550  002C1A  5017               	movf	(memmove@d+1)^0,w,c
  2551  002C1C  5819               	subwfb	(memmove@s+1)^0,w,c
  2552  002C1E  B0D8               	btfsc	status,0,c
  2553  002C20  EF14  F016         	goto	u3131
  2554  002C24  EF17  F016         	goto	u3130
  2555  002C28                     u3131:
  2556  002C28  FFFF               	dw	65535	; assembler added errata NOP
  2557  002C2A  EF54  F016         	goto	l3187
  2558  002C2E                     u3130:
  2559  002C2E  FFFF               	dw	65535	; assembler added errata NOP
  2560  002C30  5012               	movf	memmove@n^0,w,c
  2561  002C32  2418               	addwf	memmove@s^0,w,c
  2562  002C34  6E14               	movwf	??_memmove^0,c
  2563  002C36  5013               	movf	(memmove@n+1)^0,w,c
  2564  002C38  2019               	addwfc	(memmove@s+1)^0,w,c
  2565  002C3A  6E15               	movwf	(??_memmove+1)^0,c
  2566  002C3C  5014               	movf	??_memmove^0,w,c
  2567  002C3E  5C16               	subwf	memmove@d^0,w,c
  2568  002C40  5015               	movf	(??_memmove+1)^0,w,c
  2569  002C42  5817               	subwfb	(memmove@d+1)^0,w,c
  2570  002C44  B0D8               	btfsc	status,0,c
  2571  002C46  EF27  F016         	goto	u3141
  2572  002C4A  EF2A  F016         	goto	u3140
  2573  002C4E                     u3141:
  2574  002C4E  FFFF               	dw	65535	; assembler added errata NOP
  2575  002C50  EF54  F016         	goto	l3187
  2576  002C54                     u3140:
  2577  002C54  FFFF               	dw	65535	; assembler added errata NOP
  2578  002C56  5012               	movf	memmove@n^0,w,c
  2579  002C58  2618               	addwf	memmove@s^0,f,c
  2580  002C5A  5013               	movf	(memmove@n+1)^0,w,c
  2581  002C5C  2219               	addwfc	(memmove@s+1)^0,f,c
  2582  002C5E  5012               	movf	memmove@n^0,w,c
  2583  002C60  2616               	addwf	memmove@d^0,f,c
  2584  002C62  5013               	movf	(memmove@n+1)^0,w,c
  2585  002C64  2217               	addwfc	(memmove@d+1)^0,f,c
  2586  002C66                     l3183:
  2587  002C66  FFFF               	dw	65535	; assembler added errata NOP
  2588  002C68  0618               	decf	memmove@s^0,f,c
  2589  002C6A  A0D8               	btfss	status,0,c
  2590  002C6C  0619               	decf	(memmove@s+1)^0,f,c
  2591  002C6E  C018  FFD9         	movff	memmove@s,fsr2l
  2592  002C72  C019  FFDA         	movff	memmove@s+1,fsr2h
  2593  002C76  0616               	decf	memmove@d^0,f,c
  2594  002C78  A0D8               	btfss	status,0,c
  2595  002C7A  0617               	decf	(memmove@d+1)^0,f,c
  2596  002C7C  C016  FFE1         	movff	memmove@d,fsr1l
  2597  002C80  C017  FFE2         	movff	memmove@d+1,fsr1h
  2598  002C84  CFDF FFE7          	movff	indf2,indf1
  2599  002C88  0612               	decf	memmove@n^0,f,c
  2600  002C8A  A0D8               	btfss	status,0,c
  2601  002C8C  0613               	decf	(memmove@n+1)^0,f,c
  2602  002C8E  5012               	movf	memmove@n^0,w,c
  2603  002C90  1013               	iorwf	(memmove@n+1)^0,w,c
  2604  002C92  A4D8               	btfss	status,2,c
  2605  002C94  EF4E  F016         	goto	u3151
  2606  002C98  EF51  F016         	goto	u3150
  2607  002C9C                     u3151:
  2608  002C9C  FFFF               	dw	65535	; assembler added errata NOP
  2609  002C9E  EF33  F016         	goto	l3183
  2610  002CA2                     u3150:
  2611  002CA2  FFFF               	dw	65535	; assembler added errata NOP
  2612  002CA4  EF7C  F016         	goto	l1240
  2613  002CA8                     l3187:
  2614  002CA8  FFFF               	dw	65535	; assembler added errata NOP
  2615  002CAA  5012               	movf	memmove@n^0,w,c
  2616  002CAC  1013               	iorwf	(memmove@n+1)^0,w,c
  2617  002CAE  B4D8               	btfsc	status,2,c
  2618  002CB0  EF5C  F016         	goto	u3161
  2619  002CB4  EF5F  F016         	goto	u3160
  2620  002CB8                     u3161:
  2621  002CB8  FFFF               	dw	65535	; assembler added errata NOP
  2622  002CBA  EF7C  F016         	goto	l1240
  2623  002CBE                     u3160:
  2624  002CBE  FFFF               	dw	65535	; assembler added errata NOP
  2625  002CC0                     l3189:
  2626  002CC0  FFFF               	dw	65535	; assembler added errata NOP
  2627  002CC2  C018  FFD9         	movff	memmove@s,fsr2l
  2628  002CC6  C019  FFDA         	movff	memmove@s+1,fsr2h
  2629  002CCA  C016  FFE1         	movff	memmove@d,fsr1l
  2630  002CCE  C017  FFE2         	movff	memmove@d+1,fsr1h
  2631  002CD2  CFDF FFE7          	movff	indf2,indf1
  2632  002CD6  4A18               	infsnz	memmove@s^0,f,c
  2633  002CD8  2A19               	incf	(memmove@s+1)^0,f,c
  2634  002CDA  4A16               	infsnz	memmove@d^0,f,c
  2635  002CDC  2A17               	incf	(memmove@d+1)^0,f,c
  2636  002CDE  0612               	decf	memmove@n^0,f,c
  2637  002CE0  A0D8               	btfss	status,0,c
  2638  002CE2  0613               	decf	(memmove@n+1)^0,f,c
  2639  002CE4  5012               	movf	memmove@n^0,w,c
  2640  002CE6  1013               	iorwf	(memmove@n+1)^0,w,c
  2641  002CE8  A4D8               	btfss	status,2,c
  2642  002CEA  EF79  F016         	goto	u3171
  2643  002CEE  EF7C  F016         	goto	u3170
  2644  002CF2                     u3171:
  2645  002CF2  FFFF               	dw	65535	; assembler added errata NOP
  2646  002CF4  EF60  F016         	goto	l3189
  2647  002CF8                     u3170:
  2648  002CF8                     l1240:
  2649  002CF8  FFFF               	dw	65535	; assembler added errata NOP
  2650  002CFA  0012               	return		;funcret
  2651  002CFC  FFFF               	dw	65535	; errata NOP
  2652  002CFE                     __end_of_memmove:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function _pick_and_place *****************
  2656 ;; Defined at:
  2657 ;;		line 633 in file "main.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  Componnt        1    wreg     unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  Componnt        1   32[BANK0 ] unsigned char 
  2662 ;;  i               2   30[BANK0 ] int 
  2663 ;;  i               2   28[BANK0 ] int 
  2664 ;;  i               2   24[BANK0 ] int 
  2665 ;;  i               2   20[BANK0 ] int 
  2666 ;;  i               2   16[BANK0 ] int 
  2667 ;;  i               2   14[BANK0 ] int 
  2668 ;;  i               2   12[BANK0 ] int 
  2669 ;;  i               2    8[BANK0 ] int 
  2670 ;;  i               2    4[BANK0 ] int 
  2671 ;;  i               2    0[BANK0 ] int 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  2  111[None  ] int 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2681 ;;      Params:         0       0       0       0       0       0       0
  2682 ;;      Locals:         0      33       0       0       0       0       0
  2683 ;;      Temps:          2       0       0       0       0       0       0
  2684 ;;      Totals:         2      33       0       0       0       0       0
  2685 ;;Total ram usage:       35 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 4
  2688 ;; This function calls:
  2689 ;;		_Tweezer
  2690 ;;		_Twister
  2691 ;;		_X_axis
  2692 ;;		_Y_axis
  2693 ;;		_Z_axis
  2694 ;;		___fldiv
  2695 ;;		___flge
  2696 ;;		___xxtofl
  2697 ;;		_check_component
  2698 ;;		_fetch_parameters
  2699 ;;		_print_char
  2700 ;;		_print_string
  2701 ;; This function is called by:
  2702 ;;		_start_up_menu
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text7
  2707  0001C4                     __ptext7:
  2708                           	callstack 0
  2709  0001C4                     _pick_and_place:
  2710                           	callstack 0
  2711  0001C4  FFFF               	dw	65535	; assembler added errata NOP
  2712                           
  2713                           ;incstack = 0
  2714                           ;pick_and_place@Componnt stored from wreg
  2715  0001C6  0100               	movlb	0	; () banked
  2716  0001C8  6FDF               	movwf	pick_and_place@Componnt& (0+255),b
  2717  0001CA                     
  2718                           ;main.c: 633: int pick_and_place(char Componnt);main.c: 634: {;main.c: 637:     fetch_pa
      +                          rameters(Componnt);
  2719  0001CA  0100               	movlb	0	; () banked
  2720  0001CC  51DF               	movf	pick_and_place@Componnt& (0+255),w,b
  2721  0001CE  EC7C  F011         	call	_fetch_parameters
  2722  0001D2                     
  2723                           ;main.c: 639:     if(!stop){
  2724  0001D2  5072               	movf	_stop^0,w,c
  2725  0001D4  A4D8               	btfss	status,2,c
  2726  0001D6  EFEF  F000         	goto	u5891
  2727  0001DA  EFF2  F000         	goto	u5890
  2728  0001DE                     u5891:
  2729  0001DE  FFFF               	dw	65535	; assembler added errata NOP
  2730  0001E0  EFFD  F000         	goto	l4897
  2731  0001E4                     u5890:
  2732  0001E4  FFFF               	dw	65535	; assembler added errata NOP
  2733  0001E6                     
  2734                           ;main.c: 640:         print_string("\nPicking component:");
  2735  0001E6  0EC0               	movlw	low STR_20
  2736  0001E8  6E0A               	movwf	print_string@strng^0,c
  2737  0001EA  0E7F               	movlw	high STR_20
  2738  0001EC  6E0B               	movwf	(print_string@strng+1)^0,c
  2739  0001EE  EC60  F017         	call	_print_string	;wreg free
  2740  0001F2                     
  2741                           ;main.c: 641:         print_char(Componnt);
  2742  0001F2  0100               	movlb	0	; () banked
  2743  0001F4  51DF               	movf	pick_and_place@Componnt& (0+255),w,b
  2744  0001F6  EC5D  F01A         	call	_print_char
  2745  0001FA                     l4897:
  2746  0001FA  FFFF               	dw	65535	; assembler added errata NOP
  2747                           
  2748                           ;main.c: 643:         X_dir=((X_diff<X_Pick)? 1:0);
  2749  0001FC  506D               	movf	_X_Pick^0,w,c
  2750  0001FE  5C61               	subwf	_X_diff^0,w,c
  2751  000200  5062               	movf	(_X_diff+1)^0,w,c
  2752  000202  0A80               	xorlw	128
  2753  000204  6E3D               	movwf	??_pick_and_place^0,c
  2754  000206  506E               	movf	(_X_Pick+1)^0,w,c
  2755  000208  0A80               	xorlw	128
  2756  00020A  583D               	subwfb	??_pick_and_place^0,w,c
  2757  00020C  A0D8               	btfss	status,0,c
  2758  00020E  EF0B  F001         	goto	u5901
  2759  000212  EF0F  F001         	goto	u5900
  2760  000216                     u5901:
  2761  000216  FFFF               	dw	65535	; assembler added errata NOP
  2762  000218  0E01               	movlw	1
  2763  00021A  EF11  F001         	goto	u5910
  2764  00021E                     u5900:
  2765  00021E  FFFF               	dw	65535	; assembler added errata NOP
  2766  000220  0E00               	movlw	0
  2767  000222                     u5910:
  2768  000222  FFFF               	dw	65535	; assembler added errata NOP
  2769  000224  6E71               	movwf	_X_dir^0,c
  2770  000226                     
  2771                           ;main.c: 644:         Y_dir=((Y_diff<Y_Pick)? 1:0);
  2772  000226  5069               	movf	_Y_Pick^0,w,c
  2773  000228  5C5F               	subwf	_Y_diff^0,w,c
  2774  00022A  5060               	movf	(_Y_diff+1)^0,w,c
  2775  00022C  0A80               	xorlw	128
  2776  00022E  6E3D               	movwf	??_pick_and_place^0,c
  2777  000230  506A               	movf	(_Y_Pick+1)^0,w,c
  2778  000232  0A80               	xorlw	128
  2779  000234  583D               	subwfb	??_pick_and_place^0,w,c
  2780  000236  A0D8               	btfss	status,0,c
  2781  000238  EF20  F001         	goto	u5921
  2782  00023C  EF24  F001         	goto	u5920
  2783  000240                     u5921:
  2784  000240  FFFF               	dw	65535	; assembler added errata NOP
  2785  000242  0E01               	movlw	1
  2786  000244  EF26  F001         	goto	u5930
  2787  000248                     u5920:
  2788  000248  FFFF               	dw	65535	; assembler added errata NOP
  2789  00024A  0E00               	movlw	0
  2790  00024C                     u5930:
  2791  00024C  FFFF               	dw	65535	; assembler added errata NOP
  2792  00024E  6E70               	movwf	_Y_dir^0,c
  2793  000250                     
  2794                           ;main.c: 645:         Rot_dir=((Angle_diff<Pick_Angle)? 1:0);
  2795  000250  5065               	movf	_Pick_Angle^0,w,c
  2796  000252  5C5D               	subwf	_Angle_diff^0,w,c
  2797  000254  505E               	movf	(_Angle_diff+1)^0,w,c
  2798  000256  0A80               	xorlw	128
  2799  000258  6E3D               	movwf	??_pick_and_place^0,c
  2800  00025A  5066               	movf	(_Pick_Angle+1)^0,w,c
  2801  00025C  0A80               	xorlw	128
  2802  00025E  583D               	subwfb	??_pick_and_place^0,w,c
  2803  000260  A0D8               	btfss	status,0,c
  2804  000262  EF35  F001         	goto	u5941
  2805  000266  EF39  F001         	goto	u5940
  2806  00026A                     u5941:
  2807  00026A  FFFF               	dw	65535	; assembler added errata NOP
  2808  00026C  0E01               	movlw	1
  2809  00026E  EF3B  F001         	goto	u5950
  2810  000272                     u5940:
  2811  000272  FFFF               	dw	65535	; assembler added errata NOP
  2812  000274  0E00               	movlw	0
  2813  000276                     u5950:
  2814  000276  FFFF               	dw	65535	; assembler added errata NOP
  2815  000278  6E6F               	movwf	_Rot_dir^0,c
  2816  00027A                     
  2817                           ;main.c: 647:         for(int i = 0; (i<(((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_Pi
      +                          ck-X_diff)))) && !stop; i++){X_axis(X_dir);}
  2818  00027A  0E00               	movlw	0
  2819  00027C  0100               	movlb	0	; () banked
  2820  00027E  6FC0               	movwf	(pick_and_place@i+1)& (0+255),b
  2821  000280  0E00               	movlw	0
  2822  000282  6FBF               	movwf	pick_and_place@i& (0+255),b
  2823  000284  EF4B  F001         	goto	l4909
  2824  000288                     l4905:
  2825  000288  FFFF               	dw	65535	; assembler added errata NOP
  2826                           
  2827                           ; BSR set to: 0
  2828  00028A  5071               	movf	_X_dir^0,w,c
  2829  00028C  EC7D  F015         	call	_X_axis
  2830  000290  0100               	movlb	0	; () banked
  2831  000292  4BBF               	infsnz	pick_and_place@i& (0+255),f,b
  2832  000294  2BC0               	incf	(pick_and_place@i+1)& (0+255),f,b
  2833  000296                     l4909:
  2834  000296  FFFF               	dw	65535	; assembler added errata NOP
  2835                           
  2836                           ; BSR set to: 0
  2837  000298  5061               	movf	_X_diff^0,w,c
  2838  00029A  5C6D               	subwf	_X_Pick^0,w,c
  2839  00029C  6E3D               	movwf	??_pick_and_place^0,c
  2840  00029E  5062               	movf	(_X_diff+1)^0,w,c
  2841  0002A0  586E               	subwfb	(_X_Pick+1)^0,w,c
  2842  0002A2  6E3E               	movwf	(??_pick_and_place+1)^0,c
  2843  0002A4  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  2844  0002A6  EF60  F001         	goto	u5960
  2845  0002AA  503E               	movf	(??_pick_and_place+1)^0,w,c
  2846  0002AC  E106               	bnz	u5961
  2847  0002AE  043D               	decf	??_pick_and_place^0,w,c
  2848  0002B0  B0D8               	btfsc	status,0,c
  2849  0002B2  EF5D  F001         	goto	u5961
  2850  0002B6  EF60  F001         	goto	u5960
  2851  0002BA                     u5961:
  2852  0002BA  FFFF               	dw	65535	; assembler added errata NOP
  2853  0002BC  EF71  F001         	goto	l4913
  2854  0002C0                     u5960:
  2855  0002C0  FFFF               	dw	65535	; assembler added errata NOP
  2856  0002C2                     
  2857                           ; BSR set to: 0
  2858  0002C2  5061               	movf	_X_diff^0,w,c
  2859  0002C4  5C6D               	subwf	_X_Pick^0,w,c
  2860  0002C6  6E3D               	movwf	??_pick_and_place^0,c
  2861  0002C8  5062               	movf	(_X_diff+1)^0,w,c
  2862  0002CA  586E               	subwfb	(_X_Pick+1)^0,w,c
  2863  0002CC  6E3E               	movwf	(??_pick_and_place+1)^0,c
  2864  0002CE  1E3D               	comf	??_pick_and_place^0,f,c
  2865  0002D0  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  2866  0002D2  4A3D               	infsnz	??_pick_and_place^0,f,c
  2867  0002D4  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  2868  0002D6  C03D  F0C1         	movff	??_pick_and_place,_pick_and_place$913
  2869  0002DA  C03E  F0C2         	movff	??_pick_and_place+1,_pick_and_place$913+1
  2870  0002DE  EF78  F001         	goto	l399
  2871  0002E2                     l4913:
  2872  0002E2  FFFF               	dw	65535	; assembler added errata NOP
  2873                           
  2874                           ; BSR set to: 0
  2875  0002E4  5061               	movf	_X_diff^0,w,c
  2876  0002E6  5C6D               	subwf	_X_Pick^0,w,c
  2877  0002E8  6FC1               	movwf	_pick_and_place$913& (0+255),b
  2878  0002EA  5062               	movf	(_X_diff+1)^0,w,c
  2879  0002EC  586E               	subwfb	(_X_Pick+1)^0,w,c
  2880  0002EE  6FC2               	movwf	(_pick_and_place$913+1)& (0+255),b
  2881  0002F0                     l399:
  2882  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  2883                           
  2884                           ; BSR set to: 0
  2885  0002F2  51C1               	movf	_pick_and_place$913& (0+255),w,b
  2886  0002F4  5DBF               	subwf	pick_and_place@i& (0+255),w,b
  2887  0002F6  51C0               	movf	(pick_and_place@i+1)& (0+255),w,b
  2888  0002F8  0A80               	xorlw	128
  2889  0002FA  6E3D               	movwf	??_pick_and_place^0,c
  2890  0002FC  51C2               	movf	(_pick_and_place$913+1)& (0+255),w,b
  2891  0002FE  0A80               	xorlw	128
  2892  000300  583D               	subwfb	??_pick_and_place^0,w,c
  2893  000302  B0D8               	btfsc	status,0,c
  2894  000304  EF86  F001         	goto	u5971
  2895  000308  EF89  F001         	goto	u5970
  2896  00030C                     u5971:
  2897  00030C  FFFF               	dw	65535	; assembler added errata NOP
  2898  00030E  EF93  F001         	goto	l4917
  2899  000312                     u5970:
  2900  000312  FFFF               	dw	65535	; assembler added errata NOP
  2901  000314                     
  2902                           ; BSR set to: 0
  2903  000314  5072               	movf	_stop^0,w,c
  2904  000316  B4D8               	btfsc	status,2,c
  2905  000318  EF90  F001         	goto	u5981
  2906  00031C  EF93  F001         	goto	u5980
  2907  000320                     u5981:
  2908  000320  FFFF               	dw	65535	; assembler added errata NOP
  2909  000322  EF44  F001         	goto	l4905
  2910  000326                     u5980:
  2911  000326                     l4917:
  2912  000326  FFFF               	dw	65535	; assembler added errata NOP
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;main.c: 649:         for(int i = 0; (i<(((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_Pi
      +                          ck-Y_diff)))) && !stop; i++){Y_axis(Y_dir);}
  2916  000328  0E00               	movlw	0
  2917  00032A  6FC4               	movwf	(pick_and_place@i_914+1)& (0+255),b
  2918  00032C  0E00               	movlw	0
  2919  00032E  6FC3               	movwf	pick_and_place@i_914& (0+255),b
  2920  000330  EFA1  F001         	goto	l4923
  2921  000334                     l4919:
  2922  000334  FFFF               	dw	65535	; assembler added errata NOP
  2923                           
  2924                           ; BSR set to: 0
  2925  000336  5070               	movf	_Y_dir^0,w,c
  2926  000338  ECF8  F014         	call	_Y_axis
  2927  00033C  0100               	movlb	0	; () banked
  2928  00033E  4BC3               	infsnz	pick_and_place@i_914& (0+255),f,b
  2929  000340  2BC4               	incf	(pick_and_place@i_914+1)& (0+255),f,b
  2930  000342                     l4923:
  2931  000342  FFFF               	dw	65535	; assembler added errata NOP
  2932                           
  2933                           ; BSR set to: 0
  2934  000344  505F               	movf	_Y_diff^0,w,c
  2935  000346  5C69               	subwf	_Y_Pick^0,w,c
  2936  000348  6E3D               	movwf	??_pick_and_place^0,c
  2937  00034A  5060               	movf	(_Y_diff+1)^0,w,c
  2938  00034C  586A               	subwfb	(_Y_Pick+1)^0,w,c
  2939  00034E  6E3E               	movwf	(??_pick_and_place+1)^0,c
  2940  000350  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  2941  000352  EFB6  F001         	goto	u5990
  2942  000356  503E               	movf	(??_pick_and_place+1)^0,w,c
  2943  000358  E106               	bnz	u5991
  2944  00035A  043D               	decf	??_pick_and_place^0,w,c
  2945  00035C  B0D8               	btfsc	status,0,c
  2946  00035E  EFB3  F001         	goto	u5991
  2947  000362  EFB6  F001         	goto	u5990
  2948  000366                     u5991:
  2949  000366  FFFF               	dw	65535	; assembler added errata NOP
  2950  000368  EFC7  F001         	goto	l4927
  2951  00036C                     u5990:
  2952  00036C  FFFF               	dw	65535	; assembler added errata NOP
  2953  00036E                     
  2954                           ; BSR set to: 0
  2955  00036E  505F               	movf	_Y_diff^0,w,c
  2956  000370  5C69               	subwf	_Y_Pick^0,w,c
  2957  000372  6E3D               	movwf	??_pick_and_place^0,c
  2958  000374  5060               	movf	(_Y_diff+1)^0,w,c
  2959  000376  586A               	subwfb	(_Y_Pick+1)^0,w,c
  2960  000378  6E3E               	movwf	(??_pick_and_place+1)^0,c
  2961  00037A  1E3D               	comf	??_pick_and_place^0,f,c
  2962  00037C  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  2963  00037E  4A3D               	infsnz	??_pick_and_place^0,f,c
  2964  000380  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  2965  000382  C03D  F0C5         	movff	??_pick_and_place,_pick_and_place$916
  2966  000386  C03E  F0C6         	movff	??_pick_and_place+1,_pick_and_place$916+1
  2967  00038A  EFCE  F001         	goto	l408
  2968  00038E                     l4927:
  2969  00038E  FFFF               	dw	65535	; assembler added errata NOP
  2970                           
  2971                           ; BSR set to: 0
  2972  000390  505F               	movf	_Y_diff^0,w,c
  2973  000392  5C69               	subwf	_Y_Pick^0,w,c
  2974  000394  6FC5               	movwf	_pick_and_place$916& (0+255),b
  2975  000396  5060               	movf	(_Y_diff+1)^0,w,c
  2976  000398  586A               	subwfb	(_Y_Pick+1)^0,w,c
  2977  00039A  6FC6               	movwf	(_pick_and_place$916+1)& (0+255),b
  2978  00039C                     l408:
  2979  00039C  FFFF               	dw	65535	; assembler added errata NOP
  2980                           
  2981                           ; BSR set to: 0
  2982  00039E  51C5               	movf	_pick_and_place$916& (0+255),w,b
  2983  0003A0  5DC3               	subwf	pick_and_place@i_914& (0+255),w,b
  2984  0003A2  51C4               	movf	(pick_and_place@i_914+1)& (0+255),w,b
  2985  0003A4  0A80               	xorlw	128
  2986  0003A6  6E3D               	movwf	??_pick_and_place^0,c
  2987  0003A8  51C6               	movf	(_pick_and_place$916+1)& (0+255),w,b
  2988  0003AA  0A80               	xorlw	128
  2989  0003AC  583D               	subwfb	??_pick_and_place^0,w,c
  2990  0003AE  B0D8               	btfsc	status,0,c
  2991  0003B0  EFDC  F001         	goto	u6001
  2992  0003B4  EFDF  F001         	goto	u6000
  2993  0003B8                     u6001:
  2994  0003B8  FFFF               	dw	65535	; assembler added errata NOP
  2995  0003BA  EFE9  F001         	goto	l4931
  2996  0003BE                     u6000:
  2997  0003BE  FFFF               	dw	65535	; assembler added errata NOP
  2998  0003C0                     
  2999                           ; BSR set to: 0
  3000  0003C0  5072               	movf	_stop^0,w,c
  3001  0003C2  B4D8               	btfsc	status,2,c
  3002  0003C4  EFE6  F001         	goto	u6011
  3003  0003C8  EFE9  F001         	goto	u6010
  3004  0003CC                     u6011:
  3005  0003CC  FFFF               	dw	65535	; assembler added errata NOP
  3006  0003CE  EF9A  F001         	goto	l4919
  3007  0003D2                     u6010:
  3008  0003D2                     l4931:
  3009  0003D2  FFFF               	dw	65535	; assembler added errata NOP
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;main.c: 651:         for(int i = 0; (i<(((Angle_diff-Pick_Angle) > 0 ? (Angle_diff-Pick
      +                          _Angle) : -(Angle_diff-Pick_Angle))/3.6)) && !stop; i++){Twister(Rot_dir);}
  3013  0003D4  0E00               	movlw	0
  3014  0003D6  6FC8               	movwf	(pick_and_place@i_917+1)& (0+255),b
  3015  0003D8  0E00               	movlw	0
  3016  0003DA  6FC7               	movwf	pick_and_place@i_917& (0+255),b
  3017  0003DC  EFF7  F001         	goto	l4937
  3018  0003E0                     l4933:
  3019  0003E0  FFFF               	dw	65535	; assembler added errata NOP
  3020  0003E2  506F               	movf	_Rot_dir^0,w,c
  3021  0003E4  EC7F  F016         	call	_Twister
  3022  0003E8  0100               	movlb	0	; () banked
  3023  0003EA  4BC7               	infsnz	pick_and_place@i_917& (0+255),f,b
  3024  0003EC  2BC8               	incf	(pick_and_place@i_917+1)& (0+255),f,b
  3025  0003EE                     l4937:
  3026  0003EE  FFFF               	dw	65535	; assembler added errata NOP
  3027                           
  3028                           ; BSR set to: 0
  3029  0003F0  5065               	movf	_Pick_Angle^0,w,c
  3030  0003F2  5C5D               	subwf	_Angle_diff^0,w,c
  3031  0003F4  6E3D               	movwf	??_pick_and_place^0,c
  3032  0003F6  5066               	movf	(_Pick_Angle+1)^0,w,c
  3033  0003F8  585E               	subwfb	(_Angle_diff+1)^0,w,c
  3034  0003FA  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3035  0003FC  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3036  0003FE  EF0C  F002         	goto	u6020
  3037  000402  503E               	movf	(??_pick_and_place+1)^0,w,c
  3038  000404  E106               	bnz	u6021
  3039  000406  043D               	decf	??_pick_and_place^0,w,c
  3040  000408  B0D8               	btfsc	status,0,c
  3041  00040A  EF09  F002         	goto	u6021
  3042  00040E  EF0C  F002         	goto	u6020
  3043  000412                     u6021:
  3044  000412  FFFF               	dw	65535	; assembler added errata NOP
  3045  000414  EF1D  F002         	goto	l4941
  3046  000418                     u6020:
  3047  000418  FFFF               	dw	65535	; assembler added errata NOP
  3048  00041A                     
  3049                           ; BSR set to: 0
  3050  00041A  5065               	movf	_Pick_Angle^0,w,c
  3051  00041C  5C5D               	subwf	_Angle_diff^0,w,c
  3052  00041E  6E3D               	movwf	??_pick_and_place^0,c
  3053  000420  5066               	movf	(_Pick_Angle+1)^0,w,c
  3054  000422  585E               	subwfb	(_Angle_diff+1)^0,w,c
  3055  000424  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3056  000426  1E3D               	comf	??_pick_and_place^0,f,c
  3057  000428  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3058  00042A  4A3D               	infsnz	??_pick_and_place^0,f,c
  3059  00042C  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3060  00042E  C03D  F0C9         	movff	??_pick_and_place,_pick_and_place$919
  3061  000432  C03E  F0CA         	movff	??_pick_and_place+1,_pick_and_place$919+1
  3062  000436  EF24  F002         	goto	l4943
  3063  00043A                     l4941:
  3064  00043A  FFFF               	dw	65535	; assembler added errata NOP
  3065                           
  3066                           ; BSR set to: 0
  3067  00043C  5065               	movf	_Pick_Angle^0,w,c
  3068  00043E  5C5D               	subwf	_Angle_diff^0,w,c
  3069  000440  6FC9               	movwf	_pick_and_place$919& (0+255),b
  3070  000442  5066               	movf	(_Pick_Angle+1)^0,w,c
  3071  000444  585E               	subwfb	(_Angle_diff+1)^0,w,c
  3072  000446  6FCA               	movwf	(_pick_and_place$919+1)& (0+255),b
  3073  000448                     l4943:
  3074  000448  FFFF               	dw	65535	; assembler added errata NOP
  3075                           
  3076                           ; BSR set to: 0
  3077  00044A  C0C7  F00A         	movff	pick_and_place@i_917,___xxtofl@val
  3078  00044E  C0C8  F00B         	movff	pick_and_place@i_917+1,___xxtofl@val+1
  3079  000452  0E00               	movlw	0
  3080  000454  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3081  000456  0EFF               	movlw	-1
  3082  000458  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3083  00045A  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3084  00045C  0E01               	movlw	1
  3085  00045E  ECEF  F00E         	call	___xxtofl
  3086  000462  C00A  F031         	movff	?___xxtofl,___flge@ff1
  3087  000466  C00B  F032         	movff	?___xxtofl+1,___flge@ff1+1
  3088  00046A  C00C  F033         	movff	?___xxtofl+2,___flge@ff1+2
  3089  00046E  C00D  F034         	movff	?___xxtofl+3,___flge@ff1+3
  3090  000472  0E66               	movlw	102
  3091  000474  6E1C               	movwf	___fldiv@a^0,c
  3092  000476  0E66               	movlw	102
  3093  000478  6E1D               	movwf	(___fldiv@a+1)^0,c
  3094  00047A  0E66               	movlw	102
  3095  00047C  6E1E               	movwf	(___fldiv@a+2)^0,c
  3096  00047E  0E40               	movlw	64
  3097  000480  6E1F               	movwf	(___fldiv@a+3)^0,c
  3098  000482  C0C9  F00A         	movff	_pick_and_place$919,___xxtofl@val
  3099  000486  C0CA  F00B         	movff	_pick_and_place$919+1,___xxtofl@val+1
  3100  00048A  0E00               	movlw	0
  3101  00048C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3102  00048E  0EFF               	movlw	-1
  3103  000490  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3104  000492  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3105  000494  0E01               	movlw	1
  3106  000496  ECEF  F00E         	call	___xxtofl
  3107  00049A  C00A  F018         	movff	?___xxtofl,___fldiv@b
  3108  00049E  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
  3109  0004A2  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
  3110  0004A6  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
  3111  0004AA  ECE3  F009         	call	___fldiv	;wreg free
  3112  0004AE  C018  F035         	movff	?___fldiv,___flge@ff2
  3113  0004B2  C019  F036         	movff	?___fldiv+1,___flge@ff2+1
  3114  0004B6  C01A  F037         	movff	?___fldiv+2,___flge@ff2+2
  3115  0004BA  C01B  F038         	movff	?___fldiv+3,___flge@ff2+3
  3116  0004BE  EC4D  F013         	call	___flge	;wreg free
  3117  0004C2  B0D8               	btfsc	status,0,c
  3118  0004C4  EF66  F002         	goto	u6031
  3119  0004C8  EF69  F002         	goto	u6030
  3120  0004CC                     u6031:
  3121  0004CC  FFFF               	dw	65535	; assembler added errata NOP
  3122  0004CE  EF73  F002         	goto	l4947
  3123  0004D2                     u6030:
  3124  0004D2  FFFF               	dw	65535	; assembler added errata NOP
  3125  0004D4  5072               	movf	_stop^0,w,c
  3126  0004D6  B4D8               	btfsc	status,2,c
  3127  0004D8  EF70  F002         	goto	u6041
  3128  0004DC  EF73  F002         	goto	u6040
  3129  0004E0                     u6041:
  3130  0004E0  FFFF               	dw	65535	; assembler added errata NOP
  3131  0004E2  EFF0  F001         	goto	l4933
  3132  0004E6                     u6040:
  3133  0004E6                     l4947:
  3134  0004E6  FFFF               	dw	65535	; assembler added errata NOP
  3135                           
  3136                           ;main.c: 652:         Tweezer(1);
  3137  0004E8  0E01               	movlw	1
  3138  0004EA  EC80  F018         	call	_Tweezer
  3139  0004EE                     
  3140                           ;main.c: 653:         for(int i=0; i<3 && !stop; i++){Z_axis(1);}
  3141  0004EE  0E00               	movlw	0
  3142  0004F0  0100               	movlb	0	; () banked
  3143  0004F2  6FCC               	movwf	(pick_and_place@i_921+1)& (0+255),b
  3144  0004F4  0E00               	movlw	0
  3145  0004F6  6FCB               	movwf	pick_and_place@i_921& (0+255),b
  3146  0004F8  EF85  F002         	goto	l4955
  3147  0004FC                     l4951:
  3148  0004FC  FFFF               	dw	65535	; assembler added errata NOP
  3149                           
  3150                           ; BSR set to: 0
  3151  0004FE  0E01               	movlw	1
  3152  000500  ECE1  F013         	call	_Z_axis
  3153  000504  0100               	movlb	0	; () banked
  3154  000506  4BCB               	infsnz	pick_and_place@i_921& (0+255),f,b
  3155  000508  2BCC               	incf	(pick_and_place@i_921+1)& (0+255),f,b
  3156  00050A                     l4955:
  3157  00050A  FFFF               	dw	65535	; assembler added errata NOP
  3158                           
  3159                           ; BSR set to: 0
  3160  00050C  BFCC               	btfsc	(pick_and_place@i_921+1)& (0+255),7,b
  3161  00050E  EF95  F002         	goto	u6050
  3162  000512  51CC               	movf	(pick_and_place@i_921+1)& (0+255),w,b
  3163  000514  E107               	bnz	u6051
  3164  000516  0E03               	movlw	3
  3165  000518  5DCB               	subwf	pick_and_place@i_921& (0+255),w,b
  3166  00051A  B0D8               	btfsc	status,0,c
  3167  00051C  EF92  F002         	goto	u6051
  3168  000520  EF95  F002         	goto	u6050
  3169  000524                     u6051:
  3170  000524  FFFF               	dw	65535	; assembler added errata NOP
  3171  000526  EF9F  F002         	goto	l4959
  3172  00052A                     u6050:
  3173  00052A  FFFF               	dw	65535	; assembler added errata NOP
  3174  00052C                     
  3175                           ; BSR set to: 0
  3176  00052C  5072               	movf	_stop^0,w,c
  3177  00052E  B4D8               	btfsc	status,2,c
  3178  000530  EF9C  F002         	goto	u6061
  3179  000534  EF9F  F002         	goto	u6060
  3180  000538                     u6061:
  3181  000538  FFFF               	dw	65535	; assembler added errata NOP
  3182  00053A  EF7E  F002         	goto	l4951
  3183  00053E                     u6060:
  3184  00053E                     l4959:
  3185  00053E  FFFF               	dw	65535	; assembler added errata NOP
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;main.c: 654:         check_component(Componnt);
  3189  000540  51DF               	movf	pick_and_place@Componnt& (0+255),w,b
  3190  000542  ECF4  F016         	call	_check_component
  3191  000546                     
  3192                           ;main.c: 655:         Tweezer(0);
  3193  000546  0E00               	movlw	0
  3194  000548  EC80  F018         	call	_Tweezer
  3195  00054C                     
  3196                           ;main.c: 656:         for(int i=0; i<3 && !stop; i++){Z_axis(0);}
  3197  00054C  0E00               	movlw	0
  3198  00054E  0100               	movlb	0	; () banked
  3199  000550  6FCE               	movwf	(pick_and_place@i_924+1)& (0+255),b
  3200  000552  0E00               	movlw	0
  3201  000554  6FCD               	movwf	pick_and_place@i_924& (0+255),b
  3202  000556  EFB4  F002         	goto	l4969
  3203  00055A                     l4965:
  3204  00055A  FFFF               	dw	65535	; assembler added errata NOP
  3205                           
  3206                           ; BSR set to: 0
  3207  00055C  0E00               	movlw	0
  3208  00055E  ECE1  F013         	call	_Z_axis
  3209  000562  0100               	movlb	0	; () banked
  3210  000564  4BCD               	infsnz	pick_and_place@i_924& (0+255),f,b
  3211  000566  2BCE               	incf	(pick_and_place@i_924+1)& (0+255),f,b
  3212  000568                     l4969:
  3213  000568  FFFF               	dw	65535	; assembler added errata NOP
  3214                           
  3215                           ; BSR set to: 0
  3216  00056A  BFCE               	btfsc	(pick_and_place@i_924+1)& (0+255),7,b
  3217  00056C  EFC4  F002         	goto	u6070
  3218  000570  51CE               	movf	(pick_and_place@i_924+1)& (0+255),w,b
  3219  000572  E107               	bnz	u6071
  3220  000574  0E03               	movlw	3
  3221  000576  5DCD               	subwf	pick_and_place@i_924& (0+255),w,b
  3222  000578  B0D8               	btfsc	status,0,c
  3223  00057A  EFC1  F002         	goto	u6071
  3224  00057E  EFC4  F002         	goto	u6070
  3225  000582                     u6071:
  3226  000582  FFFF               	dw	65535	; assembler added errata NOP
  3227  000584  EFCE  F002         	goto	l4973
  3228  000588                     u6070:
  3229  000588  FFFF               	dw	65535	; assembler added errata NOP
  3230  00058A                     
  3231                           ; BSR set to: 0
  3232  00058A  5072               	movf	_stop^0,w,c
  3233  00058C  B4D8               	btfsc	status,2,c
  3234  00058E  EFCB  F002         	goto	u6081
  3235  000592  EFCE  F002         	goto	u6080
  3236  000596                     u6081:
  3237  000596  FFFF               	dw	65535	; assembler added errata NOP
  3238  000598  EFAD  F002         	goto	l4965
  3239  00059C                     u6080:
  3240  00059C                     l4973:
  3241  00059C  FFFF               	dw	65535	; assembler added errata NOP
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;main.c: 660:         X_dir=((X_Pick<X_Place)? 1:0);
  3245  00059E  506B               	movf	_X_Place^0,w,c
  3246  0005A0  5C6D               	subwf	_X_Pick^0,w,c
  3247  0005A2  506E               	movf	(_X_Pick+1)^0,w,c
  3248  0005A4  0A80               	xorlw	128
  3249  0005A6  6E3D               	movwf	??_pick_and_place^0,c
  3250  0005A8  506C               	movf	(_X_Place+1)^0,w,c
  3251  0005AA  0A80               	xorlw	128
  3252  0005AC  583D               	subwfb	??_pick_and_place^0,w,c
  3253  0005AE  A0D8               	btfss	status,0,c
  3254  0005B0  EFDC  F002         	goto	u6091
  3255  0005B4  EFE0  F002         	goto	u6090
  3256  0005B8                     u6091:
  3257  0005B8  FFFF               	dw	65535	; assembler added errata NOP
  3258  0005BA  0E01               	movlw	1
  3259  0005BC  EFE2  F002         	goto	u6100
  3260  0005C0                     u6090:
  3261  0005C0  FFFF               	dw	65535	; assembler added errata NOP
  3262  0005C2  0E00               	movlw	0
  3263  0005C4                     u6100:
  3264  0005C4  FFFF               	dw	65535	; assembler added errata NOP
  3265  0005C6  6E71               	movwf	_X_dir^0,c
  3266                           
  3267                           ;main.c: 661:         Y_dir=((Y_Pick<Y_Place)? 1:0);
  3268  0005C8  5067               	movf	_Y_Place^0,w,c
  3269  0005CA  5C69               	subwf	_Y_Pick^0,w,c
  3270  0005CC  506A               	movf	(_Y_Pick+1)^0,w,c
  3271  0005CE  0A80               	xorlw	128
  3272  0005D0  6E3D               	movwf	??_pick_and_place^0,c
  3273  0005D2  5068               	movf	(_Y_Place+1)^0,w,c
  3274  0005D4  0A80               	xorlw	128
  3275  0005D6  583D               	subwfb	??_pick_and_place^0,w,c
  3276  0005D8  A0D8               	btfss	status,0,c
  3277  0005DA  EFF1  F002         	goto	u6111
  3278  0005DE  EFF5  F002         	goto	u6110
  3279  0005E2                     u6111:
  3280  0005E2  FFFF               	dw	65535	; assembler added errata NOP
  3281  0005E4  0E01               	movlw	1
  3282  0005E6  EFF7  F002         	goto	u6120
  3283  0005EA                     u6110:
  3284  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  3285  0005EC  0E00               	movlw	0
  3286  0005EE                     u6120:
  3287  0005EE  FFFF               	dw	65535	; assembler added errata NOP
  3288  0005F0  6E70               	movwf	_Y_dir^0,c
  3289                           
  3290                           ;main.c: 662:         Rot_dir=((Pick_Angle<Place_Angle)? 1:0);
  3291  0005F2  5063               	movf	_Place_Angle^0,w,c
  3292  0005F4  5C65               	subwf	_Pick_Angle^0,w,c
  3293  0005F6  5066               	movf	(_Pick_Angle+1)^0,w,c
  3294  0005F8  0A80               	xorlw	128
  3295  0005FA  6E3D               	movwf	??_pick_and_place^0,c
  3296  0005FC  5064               	movf	(_Place_Angle+1)^0,w,c
  3297  0005FE  0A80               	xorlw	128
  3298  000600  583D               	subwfb	??_pick_and_place^0,w,c
  3299  000602  A0D8               	btfss	status,0,c
  3300  000604  EF06  F003         	goto	u6131
  3301  000608  EF0A  F003         	goto	u6130
  3302  00060C                     u6131:
  3303  00060C  FFFF               	dw	65535	; assembler added errata NOP
  3304  00060E  0E01               	movlw	1
  3305  000610  EF0C  F003         	goto	u6140
  3306  000614                     u6130:
  3307  000614  FFFF               	dw	65535	; assembler added errata NOP
  3308  000616  0E00               	movlw	0
  3309  000618                     u6140:
  3310  000618  FFFF               	dw	65535	; assembler added errata NOP
  3311  00061A  6E6F               	movwf	_Rot_dir^0,c
  3312  00061C                     
  3313                           ; BSR set to: 0
  3314                           ;main.c: 663:    if(!stop){
  3315  00061C  5072               	movf	_stop^0,w,c
  3316  00061E  A4D8               	btfss	status,2,c
  3317  000620  EF14  F003         	goto	u6151
  3318  000624  EF17  F003         	goto	u6150
  3319  000628                     u6151:
  3320  000628  FFFF               	dw	65535	; assembler added errata NOP
  3321  00062A  EF22  F003         	goto	l4981
  3322  00062E                     u6150:
  3323  00062E  FFFF               	dw	65535	; assembler added errata NOP
  3324  000630                     
  3325                           ; BSR set to: 0
  3326                           ;main.c: 664:         print_string("\nPlacing component:");
  3327  000630  0EAC               	movlw	low STR_21
  3328  000632  6E0A               	movwf	print_string@strng^0,c
  3329  000634  0E7F               	movlw	high STR_21
  3330  000636  6E0B               	movwf	(print_string@strng+1)^0,c
  3331  000638  EC60  F017         	call	_print_string	;wreg free
  3332  00063C                     
  3333                           ;main.c: 665:         print_char(Componnt);
  3334  00063C  0100               	movlb	0	; () banked
  3335  00063E  51DF               	movf	pick_and_place@Componnt& (0+255),w,b
  3336  000640  EC5D  F01A         	call	_print_char
  3337  000644                     l4981:
  3338  000644  FFFF               	dw	65535	; assembler added errata NOP
  3339                           
  3340                           ;main.c: 667:         for(int i = 0; (i<(((X_Place-X_Pick) > 0 ? (X_Place-X_Pick) : -(X_
      +                          Place-X_Pick)))) && !stop; i++){X_axis(X_dir);}
  3341  000646  0E00               	movlw	0
  3342  000648  0100               	movlb	0	; () banked
  3343  00064A  6FD0               	movwf	(pick_and_place@i_926+1)& (0+255),b
  3344  00064C  0E00               	movlw	0
  3345  00064E  6FCF               	movwf	pick_and_place@i_926& (0+255),b
  3346  000650  EF31  F003         	goto	l4987
  3347  000654                     l4983:
  3348  000654  FFFF               	dw	65535	; assembler added errata NOP
  3349                           
  3350                           ; BSR set to: 0
  3351  000656  5071               	movf	_X_dir^0,w,c
  3352  000658  EC7D  F015         	call	_X_axis
  3353  00065C  0100               	movlb	0	; () banked
  3354  00065E  4BCF               	infsnz	pick_and_place@i_926& (0+255),f,b
  3355  000660  2BD0               	incf	(pick_and_place@i_926+1)& (0+255),f,b
  3356  000662                     l4987:
  3357  000662  FFFF               	dw	65535	; assembler added errata NOP
  3358                           
  3359                           ; BSR set to: 0
  3360  000664  506D               	movf	_X_Pick^0,w,c
  3361  000666  5C6B               	subwf	_X_Place^0,w,c
  3362  000668  6E3D               	movwf	??_pick_and_place^0,c
  3363  00066A  506E               	movf	(_X_Pick+1)^0,w,c
  3364  00066C  586C               	subwfb	(_X_Place+1)^0,w,c
  3365  00066E  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3366  000670  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3367  000672  EF46  F003         	goto	u6160
  3368  000676  503E               	movf	(??_pick_and_place+1)^0,w,c
  3369  000678  E106               	bnz	u6161
  3370  00067A  043D               	decf	??_pick_and_place^0,w,c
  3371  00067C  B0D8               	btfsc	status,0,c
  3372  00067E  EF43  F003         	goto	u6161
  3373  000682  EF46  F003         	goto	u6160
  3374  000686                     u6161:
  3375  000686  FFFF               	dw	65535	; assembler added errata NOP
  3376  000688  EF57  F003         	goto	l4991
  3377  00068C                     u6160:
  3378  00068C  FFFF               	dw	65535	; assembler added errata NOP
  3379  00068E                     
  3380                           ; BSR set to: 0
  3381  00068E  506D               	movf	_X_Pick^0,w,c
  3382  000690  5C6B               	subwf	_X_Place^0,w,c
  3383  000692  6E3D               	movwf	??_pick_and_place^0,c
  3384  000694  506E               	movf	(_X_Pick+1)^0,w,c
  3385  000696  586C               	subwfb	(_X_Place+1)^0,w,c
  3386  000698  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3387  00069A  1E3D               	comf	??_pick_and_place^0,f,c
  3388  00069C  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3389  00069E  4A3D               	infsnz	??_pick_and_place^0,f,c
  3390  0006A0  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3391  0006A2  C03D  F0D1         	movff	??_pick_and_place,_pick_and_place$927
  3392  0006A6  C03E  F0D2         	movff	??_pick_and_place+1,_pick_and_place$927+1
  3393  0006AA  EF5E  F003         	goto	l437
  3394  0006AE                     l4991:
  3395  0006AE  FFFF               	dw	65535	; assembler added errata NOP
  3396                           
  3397                           ; BSR set to: 0
  3398  0006B0  506D               	movf	_X_Pick^0,w,c
  3399  0006B2  5C6B               	subwf	_X_Place^0,w,c
  3400  0006B4  6FD1               	movwf	_pick_and_place$927& (0+255),b
  3401  0006B6  506E               	movf	(_X_Pick+1)^0,w,c
  3402  0006B8  586C               	subwfb	(_X_Place+1)^0,w,c
  3403  0006BA  6FD2               	movwf	(_pick_and_place$927+1)& (0+255),b
  3404  0006BC                     l437:
  3405  0006BC  FFFF               	dw	65535	; assembler added errata NOP
  3406                           
  3407                           ; BSR set to: 0
  3408  0006BE  51D1               	movf	_pick_and_place$927& (0+255),w,b
  3409  0006C0  5DCF               	subwf	pick_and_place@i_926& (0+255),w,b
  3410  0006C2  51D0               	movf	(pick_and_place@i_926+1)& (0+255),w,b
  3411  0006C4  0A80               	xorlw	128
  3412  0006C6  6E3D               	movwf	??_pick_and_place^0,c
  3413  0006C8  51D2               	movf	(_pick_and_place$927+1)& (0+255),w,b
  3414  0006CA  0A80               	xorlw	128
  3415  0006CC  583D               	subwfb	??_pick_and_place^0,w,c
  3416  0006CE  B0D8               	btfsc	status,0,c
  3417  0006D0  EF6C  F003         	goto	u6171
  3418  0006D4  EF6F  F003         	goto	u6170
  3419  0006D8                     u6171:
  3420  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  3421  0006DA  EF79  F003         	goto	l4995
  3422  0006DE                     u6170:
  3423  0006DE  FFFF               	dw	65535	; assembler added errata NOP
  3424  0006E0                     
  3425                           ; BSR set to: 0
  3426  0006E0  5072               	movf	_stop^0,w,c
  3427  0006E2  B4D8               	btfsc	status,2,c
  3428  0006E4  EF76  F003         	goto	u6181
  3429  0006E8  EF79  F003         	goto	u6180
  3430  0006EC                     u6181:
  3431  0006EC  FFFF               	dw	65535	; assembler added errata NOP
  3432  0006EE  EF2A  F003         	goto	l4983
  3433  0006F2                     u6180:
  3434  0006F2                     l4995:
  3435  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;main.c: 668:         for(int i = 0; (i<(((Y_Place-Y_Pick) > 0 ? (Y_Place-Y_Pick) : -(Y_
      +                          Place-Y_Pick)))) && !stop; i++){Y_axis(Y_dir);}
  3439  0006F4  0E00               	movlw	0
  3440  0006F6  6FD4               	movwf	(pick_and_place@i_928+1)& (0+255),b
  3441  0006F8  0E00               	movlw	0
  3442  0006FA  6FD3               	movwf	pick_and_place@i_928& (0+255),b
  3443  0006FC  EF87  F003         	goto	l5001
  3444  000700                     l4997:
  3445  000700  FFFF               	dw	65535	; assembler added errata NOP
  3446                           
  3447                           ; BSR set to: 0
  3448  000702  5070               	movf	_Y_dir^0,w,c
  3449  000704  ECF8  F014         	call	_Y_axis
  3450  000708  0100               	movlb	0	; () banked
  3451  00070A  4BD3               	infsnz	pick_and_place@i_928& (0+255),f,b
  3452  00070C  2BD4               	incf	(pick_and_place@i_928+1)& (0+255),f,b
  3453  00070E                     l5001:
  3454  00070E  FFFF               	dw	65535	; assembler added errata NOP
  3455                           
  3456                           ; BSR set to: 0
  3457  000710  5069               	movf	_Y_Pick^0,w,c
  3458  000712  5C67               	subwf	_Y_Place^0,w,c
  3459  000714  6E3D               	movwf	??_pick_and_place^0,c
  3460  000716  506A               	movf	(_Y_Pick+1)^0,w,c
  3461  000718  5868               	subwfb	(_Y_Place+1)^0,w,c
  3462  00071A  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3463  00071C  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3464  00071E  EF9C  F003         	goto	u6190
  3465  000722  503E               	movf	(??_pick_and_place+1)^0,w,c
  3466  000724  E106               	bnz	u6191
  3467  000726  043D               	decf	??_pick_and_place^0,w,c
  3468  000728  B0D8               	btfsc	status,0,c
  3469  00072A  EF99  F003         	goto	u6191
  3470  00072E  EF9C  F003         	goto	u6190
  3471  000732                     u6191:
  3472  000732  FFFF               	dw	65535	; assembler added errata NOP
  3473  000734  EFAD  F003         	goto	l5005
  3474  000738                     u6190:
  3475  000738  FFFF               	dw	65535	; assembler added errata NOP
  3476  00073A                     
  3477                           ; BSR set to: 0
  3478  00073A  5069               	movf	_Y_Pick^0,w,c
  3479  00073C  5C67               	subwf	_Y_Place^0,w,c
  3480  00073E  6E3D               	movwf	??_pick_and_place^0,c
  3481  000740  506A               	movf	(_Y_Pick+1)^0,w,c
  3482  000742  5868               	subwfb	(_Y_Place+1)^0,w,c
  3483  000744  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3484  000746  1E3D               	comf	??_pick_and_place^0,f,c
  3485  000748  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3486  00074A  4A3D               	infsnz	??_pick_and_place^0,f,c
  3487  00074C  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3488  00074E  C03D  F0D5         	movff	??_pick_and_place,_pick_and_place$929
  3489  000752  C03E  F0D6         	movff	??_pick_and_place+1,_pick_and_place$929+1
  3490  000756  EFB4  F003         	goto	l446
  3491  00075A                     l5005:
  3492  00075A  FFFF               	dw	65535	; assembler added errata NOP
  3493                           
  3494                           ; BSR set to: 0
  3495  00075C  5069               	movf	_Y_Pick^0,w,c
  3496  00075E  5C67               	subwf	_Y_Place^0,w,c
  3497  000760  6FD5               	movwf	_pick_and_place$929& (0+255),b
  3498  000762  506A               	movf	(_Y_Pick+1)^0,w,c
  3499  000764  5868               	subwfb	(_Y_Place+1)^0,w,c
  3500  000766  6FD6               	movwf	(_pick_and_place$929+1)& (0+255),b
  3501  000768                     l446:
  3502  000768  FFFF               	dw	65535	; assembler added errata NOP
  3503                           
  3504                           ; BSR set to: 0
  3505  00076A  51D5               	movf	_pick_and_place$929& (0+255),w,b
  3506  00076C  5DD3               	subwf	pick_and_place@i_928& (0+255),w,b
  3507  00076E  51D4               	movf	(pick_and_place@i_928+1)& (0+255),w,b
  3508  000770  0A80               	xorlw	128
  3509  000772  6E3D               	movwf	??_pick_and_place^0,c
  3510  000774  51D6               	movf	(_pick_and_place$929+1)& (0+255),w,b
  3511  000776  0A80               	xorlw	128
  3512  000778  583D               	subwfb	??_pick_and_place^0,w,c
  3513  00077A  B0D8               	btfsc	status,0,c
  3514  00077C  EFC2  F003         	goto	u6201
  3515  000780  EFC5  F003         	goto	u6200
  3516  000784                     u6201:
  3517  000784  FFFF               	dw	65535	; assembler added errata NOP
  3518  000786  EFCF  F003         	goto	l5009
  3519  00078A                     u6200:
  3520  00078A  FFFF               	dw	65535	; assembler added errata NOP
  3521  00078C                     
  3522                           ; BSR set to: 0
  3523  00078C  5072               	movf	_stop^0,w,c
  3524  00078E  B4D8               	btfsc	status,2,c
  3525  000790  EFCC  F003         	goto	u6211
  3526  000794  EFCF  F003         	goto	u6210
  3527  000798                     u6211:
  3528  000798  FFFF               	dw	65535	; assembler added errata NOP
  3529  00079A  EF80  F003         	goto	l4997
  3530  00079E                     u6210:
  3531  00079E                     l5009:
  3532  00079E  FFFF               	dw	65535	; assembler added errata NOP
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;main.c: 669:         for(int i = 0; (i<(((Pick_Angle-Place_Angle) > 0 ? (Pick_Angle-Pla
      +                          ce_Angle) : -(Pick_Angle-Place_Angle))/3.6)) && !stop; i++){Twister(Rot_dir);}
  3536  0007A0  0E00               	movlw	0
  3537  0007A2  6FD8               	movwf	(pick_and_place@i_930+1)& (0+255),b
  3538  0007A4  0E00               	movlw	0
  3539  0007A6  6FD7               	movwf	pick_and_place@i_930& (0+255),b
  3540  0007A8  EFDD  F003         	goto	l5015
  3541  0007AC                     l5011:
  3542  0007AC  FFFF               	dw	65535	; assembler added errata NOP
  3543  0007AE  506F               	movf	_Rot_dir^0,w,c
  3544  0007B0  EC7F  F016         	call	_Twister
  3545  0007B4  0100               	movlb	0	; () banked
  3546  0007B6  4BD7               	infsnz	pick_and_place@i_930& (0+255),f,b
  3547  0007B8  2BD8               	incf	(pick_and_place@i_930+1)& (0+255),f,b
  3548  0007BA                     l5015:
  3549  0007BA  FFFF               	dw	65535	; assembler added errata NOP
  3550                           
  3551                           ; BSR set to: 0
  3552  0007BC  5063               	movf	_Place_Angle^0,w,c
  3553  0007BE  5C65               	subwf	_Pick_Angle^0,w,c
  3554  0007C0  6E3D               	movwf	??_pick_and_place^0,c
  3555  0007C2  5064               	movf	(_Place_Angle+1)^0,w,c
  3556  0007C4  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3557  0007C6  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3558  0007C8  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3559  0007CA  EFF2  F003         	goto	u6220
  3560  0007CE  503E               	movf	(??_pick_and_place+1)^0,w,c
  3561  0007D0  E106               	bnz	u6221
  3562  0007D2  043D               	decf	??_pick_and_place^0,w,c
  3563  0007D4  B0D8               	btfsc	status,0,c
  3564  0007D6  EFEF  F003         	goto	u6221
  3565  0007DA  EFF2  F003         	goto	u6220
  3566  0007DE                     u6221:
  3567  0007DE  FFFF               	dw	65535	; assembler added errata NOP
  3568  0007E0  EF03  F004         	goto	l5019
  3569  0007E4                     u6220:
  3570  0007E4  FFFF               	dw	65535	; assembler added errata NOP
  3571  0007E6                     
  3572                           ; BSR set to: 0
  3573  0007E6  5063               	movf	_Place_Angle^0,w,c
  3574  0007E8  5C65               	subwf	_Pick_Angle^0,w,c
  3575  0007EA  6E3D               	movwf	??_pick_and_place^0,c
  3576  0007EC  5064               	movf	(_Place_Angle+1)^0,w,c
  3577  0007EE  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3578  0007F0  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3579  0007F2  1E3D               	comf	??_pick_and_place^0,f,c
  3580  0007F4  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3581  0007F6  4A3D               	infsnz	??_pick_and_place^0,f,c
  3582  0007F8  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3583  0007FA  C03D  F0D9         	movff	??_pick_and_place,_pick_and_place$931
  3584  0007FE  C03E  F0DA         	movff	??_pick_and_place+1,_pick_and_place$931+1
  3585  000802  EF0A  F004         	goto	l5021
  3586  000806                     l5019:
  3587  000806  FFFF               	dw	65535	; assembler added errata NOP
  3588                           
  3589                           ; BSR set to: 0
  3590  000808  5063               	movf	_Place_Angle^0,w,c
  3591  00080A  5C65               	subwf	_Pick_Angle^0,w,c
  3592  00080C  6FD9               	movwf	_pick_and_place$931& (0+255),b
  3593  00080E  5064               	movf	(_Place_Angle+1)^0,w,c
  3594  000810  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3595  000812  6FDA               	movwf	(_pick_and_place$931+1)& (0+255),b
  3596  000814                     l5021:
  3597  000814  FFFF               	dw	65535	; assembler added errata NOP
  3598                           
  3599                           ; BSR set to: 0
  3600  000816  C0D7  F00A         	movff	pick_and_place@i_930,___xxtofl@val
  3601  00081A  C0D8  F00B         	movff	pick_and_place@i_930+1,___xxtofl@val+1
  3602  00081E  0E00               	movlw	0
  3603  000820  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3604  000822  0EFF               	movlw	-1
  3605  000824  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3606  000826  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3607  000828  0E01               	movlw	1
  3608  00082A  ECEF  F00E         	call	___xxtofl
  3609  00082E  C00A  F031         	movff	?___xxtofl,___flge@ff1
  3610  000832  C00B  F032         	movff	?___xxtofl+1,___flge@ff1+1
  3611  000836  C00C  F033         	movff	?___xxtofl+2,___flge@ff1+2
  3612  00083A  C00D  F034         	movff	?___xxtofl+3,___flge@ff1+3
  3613  00083E  0E66               	movlw	102
  3614  000840  6E1C               	movwf	___fldiv@a^0,c
  3615  000842  0E66               	movlw	102
  3616  000844  6E1D               	movwf	(___fldiv@a+1)^0,c
  3617  000846  0E66               	movlw	102
  3618  000848  6E1E               	movwf	(___fldiv@a+2)^0,c
  3619  00084A  0E40               	movlw	64
  3620  00084C  6E1F               	movwf	(___fldiv@a+3)^0,c
  3621  00084E  C0D9  F00A         	movff	_pick_and_place$931,___xxtofl@val
  3622  000852  C0DA  F00B         	movff	_pick_and_place$931+1,___xxtofl@val+1
  3623  000856  0E00               	movlw	0
  3624  000858  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3625  00085A  0EFF               	movlw	-1
  3626  00085C  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3627  00085E  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3628  000860  0E01               	movlw	1
  3629  000862  ECEF  F00E         	call	___xxtofl
  3630  000866  C00A  F018         	movff	?___xxtofl,___fldiv@b
  3631  00086A  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
  3632  00086E  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
  3633  000872  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
  3634  000876  ECE3  F009         	call	___fldiv	;wreg free
  3635  00087A  C018  F035         	movff	?___fldiv,___flge@ff2
  3636  00087E  C019  F036         	movff	?___fldiv+1,___flge@ff2+1
  3637  000882  C01A  F037         	movff	?___fldiv+2,___flge@ff2+2
  3638  000886  C01B  F038         	movff	?___fldiv+3,___flge@ff2+3
  3639  00088A  EC4D  F013         	call	___flge	;wreg free
  3640  00088E  B0D8               	btfsc	status,0,c
  3641  000890  EF4C  F004         	goto	u6231
  3642  000894  EF4F  F004         	goto	u6230
  3643  000898                     u6231:
  3644  000898  FFFF               	dw	65535	; assembler added errata NOP
  3645  00089A  EF59  F004         	goto	l5025
  3646  00089E                     u6230:
  3647  00089E  FFFF               	dw	65535	; assembler added errata NOP
  3648  0008A0  5072               	movf	_stop^0,w,c
  3649  0008A2  B4D8               	btfsc	status,2,c
  3650  0008A4  EF56  F004         	goto	u6241
  3651  0008A8  EF59  F004         	goto	u6240
  3652  0008AC                     u6241:
  3653  0008AC  FFFF               	dw	65535	; assembler added errata NOP
  3654  0008AE  EFD6  F003         	goto	l5011
  3655  0008B2                     u6240:
  3656  0008B2                     l5025:
  3657  0008B2  FFFF               	dw	65535	; assembler added errata NOP
  3658                           
  3659                           ;main.c: 670:         for(int i=0; i<3 && !stop; i++){Z_axis(1);}
  3660  0008B4  0E00               	movlw	0
  3661  0008B6  0100               	movlb	0	; () banked
  3662  0008B8  6FDC               	movwf	(pick_and_place@i_932+1)& (0+255),b
  3663  0008BA  0E00               	movlw	0
  3664  0008BC  6FDB               	movwf	pick_and_place@i_932& (0+255),b
  3665  0008BE  EF68  F004         	goto	l5031
  3666  0008C2                     l5027:
  3667  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  3668                           
  3669                           ; BSR set to: 0
  3670  0008C4  0E01               	movlw	1
  3671  0008C6  ECE1  F013         	call	_Z_axis
  3672  0008CA  0100               	movlb	0	; () banked
  3673  0008CC  4BDB               	infsnz	pick_and_place@i_932& (0+255),f,b
  3674  0008CE  2BDC               	incf	(pick_and_place@i_932+1)& (0+255),f,b
  3675  0008D0                     l5031:
  3676  0008D0  FFFF               	dw	65535	; assembler added errata NOP
  3677                           
  3678                           ; BSR set to: 0
  3679  0008D2  BFDC               	btfsc	(pick_and_place@i_932+1)& (0+255),7,b
  3680  0008D4  EF78  F004         	goto	u6250
  3681  0008D8  51DC               	movf	(pick_and_place@i_932+1)& (0+255),w,b
  3682  0008DA  E107               	bnz	u6251
  3683  0008DC  0E03               	movlw	3
  3684  0008DE  5DDB               	subwf	pick_and_place@i_932& (0+255),w,b
  3685  0008E0  B0D8               	btfsc	status,0,c
  3686  0008E2  EF75  F004         	goto	u6251
  3687  0008E6  EF78  F004         	goto	u6250
  3688  0008EA                     u6251:
  3689  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  3690  0008EC  EF82  F004         	goto	l5035
  3691  0008F0                     u6250:
  3692  0008F0  FFFF               	dw	65535	; assembler added errata NOP
  3693  0008F2                     
  3694                           ; BSR set to: 0
  3695  0008F2  5072               	movf	_stop^0,w,c
  3696  0008F4  B4D8               	btfsc	status,2,c
  3697  0008F6  EF7F  F004         	goto	u6261
  3698  0008FA  EF82  F004         	goto	u6260
  3699  0008FE                     u6261:
  3700  0008FE  FFFF               	dw	65535	; assembler added errata NOP
  3701  000900  EF61  F004         	goto	l5027
  3702  000904                     u6260:
  3703  000904                     l5035:
  3704  000904  FFFF               	dw	65535	; assembler added errata NOP
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;main.c: 671:         Tweezer(1);
  3708  000906  0E01               	movlw	1
  3709  000908  EC80  F018         	call	_Tweezer
  3710  00090C                     
  3711                           ;main.c: 672:         for(int i=0; i<3 && !stop; i++){Z_axis(0);}
  3712  00090C  0E00               	movlw	0
  3713  00090E  0100               	movlb	0	; () banked
  3714  000910  6FDE               	movwf	(pick_and_place@i_933+1)& (0+255),b
  3715  000912  0E00               	movlw	0
  3716  000914  6FDD               	movwf	pick_and_place@i_933& (0+255),b
  3717  000916  EF94  F004         	goto	l5043
  3718  00091A                     l5039:
  3719  00091A  FFFF               	dw	65535	; assembler added errata NOP
  3720                           
  3721                           ; BSR set to: 0
  3722  00091C  0E00               	movlw	0
  3723  00091E  ECE1  F013         	call	_Z_axis
  3724  000922  0100               	movlb	0	; () banked
  3725  000924  4BDD               	infsnz	pick_and_place@i_933& (0+255),f,b
  3726  000926  2BDE               	incf	(pick_and_place@i_933+1)& (0+255),f,b
  3727  000928                     l5043:
  3728  000928  FFFF               	dw	65535	; assembler added errata NOP
  3729                           
  3730                           ; BSR set to: 0
  3731  00092A  BFDE               	btfsc	(pick_and_place@i_933+1)& (0+255),7,b
  3732  00092C  EFA4  F004         	goto	u6270
  3733  000930  51DE               	movf	(pick_and_place@i_933+1)& (0+255),w,b
  3734  000932  E107               	bnz	u6271
  3735  000934  0E03               	movlw	3
  3736  000936  5DDD               	subwf	pick_and_place@i_933& (0+255),w,b
  3737  000938  B0D8               	btfsc	status,0,c
  3738  00093A  EFA1  F004         	goto	u6271
  3739  00093E  EFA4  F004         	goto	u6270
  3740  000942                     u6271:
  3741  000942  FFFF               	dw	65535	; assembler added errata NOP
  3742  000944  EFAE  F004         	goto	l466
  3743  000948                     u6270:
  3744  000948  FFFF               	dw	65535	; assembler added errata NOP
  3745  00094A                     
  3746                           ; BSR set to: 0
  3747  00094A  5072               	movf	_stop^0,w,c
  3748  00094C  B4D8               	btfsc	status,2,c
  3749  00094E  EFAB  F004         	goto	u6281
  3750  000952  EFAE  F004         	goto	u6280
  3751  000956                     u6281:
  3752  000956  FFFF               	dw	65535	; assembler added errata NOP
  3753  000958  EF8D  F004         	goto	l5039
  3754  00095C                     u6280:
  3755  00095C                     l466:
  3756  00095C  FFFF               	dw	65535	; assembler added errata NOP
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;main.c: 673:         Angle_diff= Place_Angle;
  3760  00095E  C063  F05D         	movff	_Place_Angle,_Angle_diff
  3761  000962  C064  F05E         	movff	_Place_Angle+1,_Angle_diff+1
  3762                           
  3763                           ;main.c: 674:         X_diff = X_Place;
  3764  000966  C06B  F061         	movff	_X_Place,_X_diff
  3765  00096A  C06C  F062         	movff	_X_Place+1,_X_diff+1
  3766                           
  3767                           ;main.c: 675:         Y_diff = Y_Place;
  3768  00096E  C067  F05F         	movff	_Y_Place,_Y_diff
  3769  000972  C068  F060         	movff	_Y_Place+1,_Y_diff+1
  3770  000976                     
  3771                           ; BSR set to: 0
  3772  000976  0012               	return		;funcret
  3773  000978  FFFF               	dw	65535	; errata NOP
  3774  00097A                     __end_of_pick_and_place:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _fetch_parameters *****************
  3778 ;; Defined at:
  3779 ;;		line 563 in file "main.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  Componnt        1    wreg     unsigned char 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  Componnt        1    9[COMRAM] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  2  369[None  ] int 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3793 ;;      Params:         0       0       0       0       0       0       0
  3794 ;;      Locals:         1       0       0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0
  3796 ;;      Totals:         1       0       0       0       0       0       0
  3797 ;;Total ram usage:        1 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 2
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_pick_and_place
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text8
  3808  0022F8                     __ptext8:
  3809                           	callstack 0
  3810  0022F8                     _fetch_parameters:
  3811                           	callstack 0
  3812  0022F8  FFFF               	dw	65535	; assembler added errata NOP
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;incstack = 0
  3816                           ;fetch_parameters@Componnt stored from wreg
  3817  0022FA  6E0A               	movwf	fetch_parameters@Componnt^0,c
  3818  0022FC                     
  3819                           ;main.c: 564:     if(Componnt=='A')
  3820  0022FC  0E41               	movlw	65
  3821  0022FE  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  3822  002300  A4D8               	btfss	status,2,c
  3823  002302  EF85  F011         	goto	u5281
  3824  002306  EF88  F011         	goto	u5280
  3825  00230A                     u5281:
  3826  00230A  FFFF               	dw	65535	; assembler added errata NOP
  3827  00230C  EFA3  F011         	goto	l4571
  3828  002310                     u5280:
  3829  002310  FFFF               	dw	65535	; assembler added errata NOP
  3830  002312                     
  3831                           ;main.c: 565:         {;main.c: 566:             X_Pick=3;
  3832  002312  0E00               	movlw	0
  3833  002314  6E6E               	movwf	(_X_Pick+1)^0,c
  3834  002316  0E03               	movlw	3
  3835  002318  6E6D               	movwf	_X_Pick^0,c
  3836                           
  3837                           ;main.c: 567:             Y_Pick=4;
  3838  00231A  0E00               	movlw	0
  3839  00231C  6E6A               	movwf	(_Y_Pick+1)^0,c
  3840  00231E  0E04               	movlw	4
  3841  002320  6E69               	movwf	_Y_Pick^0,c
  3842                           
  3843                           ;main.c: 568:             Pick_Angle=0;
  3844  002322  0E00               	movlw	0
  3845  002324  6E66               	movwf	(_Pick_Angle+1)^0,c
  3846  002326  0E00               	movlw	0
  3847  002328  6E65               	movwf	_Pick_Angle^0,c
  3848                           
  3849                           ;main.c: 570:             X_Place=17;
  3850  00232A  0E00               	movlw	0
  3851  00232C  6E6C               	movwf	(_X_Place+1)^0,c
  3852  00232E  0E11               	movlw	17
  3853  002330  6E6B               	movwf	_X_Place^0,c
  3854                           
  3855                           ;main.c: 571:             Y_Place=5;
  3856  002332  0E00               	movlw	0
  3857  002334  6E68               	movwf	(_Y_Place+1)^0,c
  3858  002336  0E05               	movlw	5
  3859  002338  6E67               	movwf	_Y_Place^0,c
  3860                           
  3861                           ;main.c: 572:             Place_Angle=270;
  3862  00233A  0E01               	movlw	1
  3863  00233C  6E64               	movwf	(_Place_Angle+1)^0,c
  3864  00233E  0E0E               	movlw	14
  3865  002340  6E63               	movwf	_Place_Angle^0,c
  3866                           
  3867                           ;main.c: 573:         }
  3868  002342  EF15  F012         	goto	l377
  3869  002346                     l4571:
  3870  002346  FFFF               	dw	65535	; assembler added errata NOP
  3871  002348  0E42               	movlw	66
  3872  00234A  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  3873  00234C  A4D8               	btfss	status,2,c
  3874  00234E  EFAB  F011         	goto	u5291
  3875  002352  EFAE  F011         	goto	u5290
  3876  002356                     u5291:
  3877  002356  FFFF               	dw	65535	; assembler added errata NOP
  3878  002358  EFC9  F011         	goto	l4575
  3879  00235C                     u5290:
  3880  00235C  FFFF               	dw	65535	; assembler added errata NOP
  3881  00235E                     
  3882                           ;main.c: 575:             X_Pick=3;
  3883  00235E  0E00               	movlw	0
  3884  002360  6E6E               	movwf	(_X_Pick+1)^0,c
  3885  002362  0E03               	movlw	3
  3886  002364  6E6D               	movwf	_X_Pick^0,c
  3887                           
  3888                           ;main.c: 576:             Y_Pick=10;
  3889  002366  0E00               	movlw	0
  3890  002368  6E6A               	movwf	(_Y_Pick+1)^0,c
  3891  00236A  0E0A               	movlw	10
  3892  00236C  6E69               	movwf	_Y_Pick^0,c
  3893                           
  3894                           ;main.c: 577:             Pick_Angle=90;
  3895  00236E  0E00               	movlw	0
  3896  002370  6E66               	movwf	(_Pick_Angle+1)^0,c
  3897  002372  0E5A               	movlw	90
  3898  002374  6E65               	movwf	_Pick_Angle^0,c
  3899                           
  3900                           ;main.c: 579:             X_Place=10;
  3901  002376  0E00               	movlw	0
  3902  002378  6E6C               	movwf	(_X_Place+1)^0,c
  3903  00237A  0E0A               	movlw	10
  3904  00237C  6E6B               	movwf	_X_Place^0,c
  3905                           
  3906                           ;main.c: 580:              Y_Place=5;
  3907  00237E  0E00               	movlw	0
  3908  002380  6E68               	movwf	(_Y_Place+1)^0,c
  3909  002382  0E05               	movlw	5
  3910  002384  6E67               	movwf	_Y_Place^0,c
  3911                           
  3912                           ;main.c: 581:             Place_Angle=180;
  3913  002386  0E00               	movlw	0
  3914  002388  6E64               	movwf	(_Place_Angle+1)^0,c
  3915  00238A  0EB4               	movlw	180
  3916  00238C  6E63               	movwf	_Place_Angle^0,c
  3917                           
  3918                           ;main.c: 582:         }
  3919  00238E  EF15  F012         	goto	l377
  3920  002392                     l4575:
  3921  002392  FFFF               	dw	65535	; assembler added errata NOP
  3922  002394  0E43               	movlw	67
  3923  002396  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  3924  002398  A4D8               	btfss	status,2,c
  3925  00239A  EFD1  F011         	goto	u5301
  3926  00239E  EFD4  F011         	goto	u5300
  3927  0023A2                     u5301:
  3928  0023A2  FFFF               	dw	65535	; assembler added errata NOP
  3929  0023A4  EFEF  F011         	goto	l4579
  3930  0023A8                     u5300:
  3931  0023A8  FFFF               	dw	65535	; assembler added errata NOP
  3932  0023AA                     
  3933                           ;main.c: 584:             X_Pick=3;
  3934  0023AA  0E00               	movlw	0
  3935  0023AC  6E6E               	movwf	(_X_Pick+1)^0,c
  3936  0023AE  0E03               	movlw	3
  3937  0023B0  6E6D               	movwf	_X_Pick^0,c
  3938                           
  3939                           ;main.c: 585:             Y_Pick=15;
  3940  0023B2  0E00               	movlw	0
  3941  0023B4  6E6A               	movwf	(_Y_Pick+1)^0,c
  3942  0023B6  0E0F               	movlw	15
  3943  0023B8  6E69               	movwf	_Y_Pick^0,c
  3944                           
  3945                           ;main.c: 586:             Pick_Angle=90;
  3946  0023BA  0E00               	movlw	0
  3947  0023BC  6E66               	movwf	(_Pick_Angle+1)^0,c
  3948  0023BE  0E5A               	movlw	90
  3949  0023C0  6E65               	movwf	_Pick_Angle^0,c
  3950                           
  3951                           ;main.c: 588:             X_Place=16;
  3952  0023C2  0E00               	movlw	0
  3953  0023C4  6E6C               	movwf	(_X_Place+1)^0,c
  3954  0023C6  0E10               	movlw	16
  3955  0023C8  6E6B               	movwf	_X_Place^0,c
  3956                           
  3957                           ;main.c: 589:             Y_Place=14;
  3958  0023CA  0E00               	movlw	0
  3959  0023CC  6E68               	movwf	(_Y_Place+1)^0,c
  3960  0023CE  0E0E               	movlw	14
  3961  0023D0  6E67               	movwf	_Y_Place^0,c
  3962                           
  3963                           ;main.c: 590:             Place_Angle=270;
  3964  0023D2  0E01               	movlw	1
  3965  0023D4  6E64               	movwf	(_Place_Angle+1)^0,c
  3966  0023D6  0E0E               	movlw	14
  3967  0023D8  6E63               	movwf	_Place_Angle^0,c
  3968                           
  3969                           ;main.c: 591:         }
  3970  0023DA  EF15  F012         	goto	l377
  3971  0023DE                     l4579:
  3972  0023DE  FFFF               	dw	65535	; assembler added errata NOP
  3973  0023E0  0E44               	movlw	68
  3974  0023E2  180A               	xorwf	fetch_parameters@Componnt^0,w,c
  3975  0023E4  A4D8               	btfss	status,2,c
  3976  0023E6  EFF7  F011         	goto	u5311
  3977  0023EA  EFFA  F011         	goto	u5310
  3978  0023EE                     u5311:
  3979  0023EE  FFFF               	dw	65535	; assembler added errata NOP
  3980  0023F0  EF15  F012         	goto	l373
  3981  0023F4                     u5310:
  3982  0023F4  FFFF               	dw	65535	; assembler added errata NOP
  3983  0023F6                     
  3984                           ;main.c: 593:             X_Pick=X_Pick_D;
  3985  0023F6  C0AE  F06D         	movff	_X_Pick_D,_X_Pick
  3986  0023FA  C0AF  F06E         	movff	_X_Pick_D+1,_X_Pick+1
  3987                           
  3988                           ;main.c: 594:             Y_Pick=Y_Pick_D;
  3989  0023FE  C0AC  F069         	movff	_Y_Pick_D,_Y_Pick
  3990  002402  C0AD  F06A         	movff	_Y_Pick_D+1,_Y_Pick+1
  3991                           
  3992                           ;main.c: 595:             Pick_Angle=Pick_Angle_D;
  3993  002406  C0AA  F065         	movff	_Pick_Angle_D,_Pick_Angle
  3994  00240A  C0AB  F066         	movff	_Pick_Angle_D+1,_Pick_Angle+1
  3995                           
  3996                           ;main.c: 597:             X_Place=X_Place_D;
  3997  00240E  C0A8  F06B         	movff	_X_Place_D,_X_Place
  3998  002412  C0A9  F06C         	movff	_X_Place_D+1,_X_Place+1
  3999                           
  4000                           ;main.c: 598:             Y_Place=Y_Place_D;
  4001  002416  C0A6  F067         	movff	_Y_Place_D,_Y_Place
  4002  00241A  C0A7  F068         	movff	_Y_Place_D+1,_Y_Place+1
  4003                           
  4004                           ;main.c: 599:             Place_Angle=Place_Angle_D;
  4005  00241E  C0A4  F063         	movff	_Place_Angle_D,_Place_Angle
  4006  002422  C0A5  F064         	movff	_Place_Angle_D+1,_Place_Angle+1
  4007  002426  EF15  F012         	goto	l377
  4008  00242A                     l373:
  4009  00242A                     l377:
  4010  00242A  FFFF               	dw	65535	; assembler added errata NOP
  4011  00242C  0012               	return		;funcret
  4012  00242E  FFFF               	dw	65535	; errata NOP
  4013  002430                     __end_of_fetch_parameters:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _check_component *****************
  4017 ;; Defined at:
  4018 ;;		line 604 in file "main.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  Compnt          1    wreg     unsigned char 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  Compnt          1   17[COMRAM] unsigned char 
  4023 ;;  j               2   18[COMRAM] int 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4033 ;;      Params:         0       0       0       0       0       0       0
  4034 ;;      Locals:         3       0       0       0       0       0       0
  4035 ;;      Temps:          2       0       0       0       0       0       0
  4036 ;;      Totals:         5       0       0       0       0       0       0
  4037 ;;Total ram usage:        5 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 3
  4040 ;; This function calls:
  4041 ;;		_print_char
  4042 ;;		_print_string
  4043 ;; This function is called by:
  4044 ;;		_pick_and_place
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text9
  4049  002DE8                     __ptext9:
  4050                           	callstack 0
  4051  002DE8                     _check_component:
  4052                           	callstack 0
  4053  002DE8  FFFF               	dw	65535	; assembler added errata NOP
  4054                           
  4055                           ;incstack = 0
  4056                           ;check_component@Compnt stored from wreg
  4057  002DEA  6E12               	movwf	check_component@Compnt^0,c
  4058  002DEC                     
  4059                           ;main.c: 615:     int j = 0;
  4060  002DEC  0E00               	movlw	0
  4061  002DEE  6E14               	movwf	(check_component@j+1)^0,c
  4062  002DF0  0E00               	movlw	0
  4063  002DF2  6E13               	movwf	check_component@j^0,c
  4064                           
  4065                           ;main.c: 616:     while(!stop){
  4066  002DF4  EF53  F017         	goto	l4611
  4067  002DF8                     l4585:
  4068  002DF8  FFFF               	dw	65535	; assembler added errata NOP
  4069                           
  4070                           ;main.c: 617:             if(component_present){
  4071  002DFA  5073               	movf	_component_present^0,w,c
  4072  002DFC  B4D8               	btfsc	status,2,c
  4073  002DFE  EF03  F017         	goto	u5321
  4074  002E02  EF06  F017         	goto	u5320
  4075  002E06                     u5321:
  4076  002E06  FFFF               	dw	65535	; assembler added errata NOP
  4077  002E08  EF0C  F017         	goto	l4591
  4078  002E0C                     u5320:
  4079  002E0C  FFFF               	dw	65535	; assembler added errata NOP
  4080  002E0E                     l4587:
  4081  002E0E  FFFF               	dw	65535	; assembler added errata NOP
  4082                           
  4083                           ;main.c: 618:                 component_present=0;
  4084  002E10  0E00               	movlw	0
  4085  002E12  6E73               	movwf	_component_present^0,c
  4086                           
  4087                           ;main.c: 619:                 break;
  4088  002E14  EF5D  F017         	goto	l388
  4089  002E18                     l4591:
  4090  002E18  FFFF               	dw	65535	; assembler added errata NOP
  4091  002E1A  BE14               	btfsc	(check_component@j+1)^0,7,c
  4092  002E1C  EF19  F017         	goto	u5331
  4093  002E20  5014               	movf	(check_component@j+1)^0,w,c
  4094  002E22  E10A               	bnz	u5330
  4095  002E24  0E02               	movlw	2
  4096  002E26  5C13               	subwf	check_component@j^0,w,c
  4097  002E28  A0D8               	btfss	status,0,c
  4098  002E2A  EF19  F017         	goto	u5331
  4099  002E2E  EF1C  F017         	goto	u5330
  4100  002E32                     u5331:
  4101  002E32  FFFF               	dw	65535	; assembler added errata NOP
  4102  002E34  EF38  F017         	goto	l4605
  4103  002E38                     u5330:
  4104  002E38  FFFF               	dw	65535	; assembler added errata NOP
  4105  002E3A  5073               	movf	_component_present^0,w,c
  4106  002E3C  A4D8               	btfss	status,2,c
  4107  002E3E  EF23  F017         	goto	u5341
  4108  002E42  EF26  F017         	goto	u5340
  4109  002E46                     u5341:
  4110  002E46  FFFF               	dw	65535	; assembler added errata NOP
  4111  002E48  EF38  F017         	goto	l4605
  4112  002E4C                     u5340:
  4113  002E4C  FFFF               	dw	65535	; assembler added errata NOP
  4114  002E4E                     
  4115                           ;main.c: 622:                 print_string("Component ");
  4116  002E4E  0EE7               	movlw	low STR_18
  4117  002E50  6E0A               	movwf	print_string@strng^0,c
  4118  002E52  0E7F               	movlw	high STR_18
  4119  002E54  6E0B               	movwf	(print_string@strng+1)^0,c
  4120  002E56  EC60  F017         	call	_print_string	;wreg free
  4121  002E5A                     
  4122                           ;main.c: 623:                 print_char(Compnt);
  4123  002E5A  5012               	movf	check_component@Compnt^0,w,c
  4124  002E5C  EC5D  F01A         	call	_print_char
  4125  002E60                     
  4126                           ;main.c: 624:                 print_string(" missing!");
  4127  002E60  0EF2               	movlw	low STR_19
  4128  002E62  6E0A               	movwf	print_string@strng^0,c
  4129  002E64  0E7F               	movlw	high STR_19
  4130  002E66  6E0B               	movwf	(print_string@strng+1)^0,c
  4131  002E68  EC60  F017         	call	_print_string	;wreg free
  4132  002E6C  EF07  F017         	goto	l4587
  4133  002E70                     l4605:
  4134  002E70  FFFF               	dw	65535	; assembler added errata NOP
  4135  002E72  5073               	movf	_component_present^0,w,c
  4136  002E74  A4D8               	btfss	status,2,c
  4137  002E76  EF3F  F017         	goto	u5351
  4138  002E7A  EF42  F017         	goto	u5350
  4139  002E7E                     u5351:
  4140  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  4141  002E80  EF53  F017         	goto	l384
  4142  002E84                     u5350:
  4143  002E84  FFFF               	dw	65535	; assembler added errata NOP
  4144  002E86                     
  4145                           ;main.c: 629:                 _delay((unsigned long)((100)*(200000000/4000.0)));
  4146  002E86  0E14               	movlw	20
  4147  002E88  6E11               	movwf	(??_check_component+1)^0,c
  4148  002E8A  0E0A               	movlw	10
  4149  002E8C  6E10               	movwf	??_check_component^0,c
  4150  002E8E  0E40               	movlw	64
  4151  002E90                     u6567:
  4152  002E90  FFFF               	dw	65535	; errata NOP
  4153  002E92  2EE8               	decfsz	wreg,f,c
  4154  002E94  D7FD               	bra	u6567
  4155  002E96  2E10               	decfsz	??_check_component^0,f,c
  4156  002E98  D7FB               	bra	u6567
  4157  002E9A  2E11               	decfsz	(??_check_component+1)^0,f,c
  4158  002E9C  D7F9               	bra	u6567
  4159  002E9E                     
  4160                           ;main.c: 630:                 j++;}
  4161  002E9E  4A13               	infsnz	check_component@j^0,f,c
  4162  002EA0  2A14               	incf	(check_component@j+1)^0,f,c
  4163  002EA2  EF53  F017         	goto	l4611
  4164  002EA6                     l384:
  4165  002EA6                     l4611:
  4166  002EA6  FFFF               	dw	65535	; assembler added errata NOP
  4167                           
  4168                           ;main.c: 616:     while(!stop){
  4169  002EA8  5072               	movf	_stop^0,w,c
  4170  002EAA  B4D8               	btfsc	status,2,c
  4171  002EAC  EF5A  F017         	goto	u5361
  4172  002EB0  EF5D  F017         	goto	u5360
  4173  002EB4                     u5361:
  4174  002EB4  FFFF               	dw	65535	; assembler added errata NOP
  4175  002EB6  EFFC  F016         	goto	l4585
  4176  002EBA                     u5360:
  4177  002EBA                     l388:
  4178  002EBA  FFFF               	dw	65535	; assembler added errata NOP
  4179  002EBC  0012               	return		;funcret
  4180  002EBE  FFFF               	dw	65535	; errata NOP
  4181  002EC0                     __end_of_check_component:
  4182                           	callstack 0
  4183                           
  4184 ;; *************** function _print_char *****************
  4185 ;; Defined at:
  4186 ;;		line 52 in file "serial_rs232.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  chr             1    wreg     unsigned char 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  chr             1    9[COMRAM] unsigned char 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4200 ;;      Params:         0       0       0       0       0       0       0
  4201 ;;      Locals:         1       0       0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0
  4203 ;;      Totals:         1       0       0       0       0       0       0
  4204 ;;Total ram usage:        1 bytes
  4205 ;; Hardware stack levels used: 1
  4206 ;; Hardware stack levels required when called: 2
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_check_component
  4211 ;;		_pick_and_place
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text10
  4216  0034BA                     __ptext10:
  4217                           	callstack 0
  4218  0034BA                     _print_char:
  4219                           	callstack 0
  4220  0034BA  FFFF               	dw	65535	; assembler added errata NOP
  4221                           
  4222                           ;incstack = 0
  4223                           ;print_char@chr stored from wreg
  4224  0034BC  6E0A               	movwf	print_char@chr^0,c
  4225  0034BE                     
  4226                           ;serial_rs232.c: 53:     TXREG=chr;
  4227  0034BE  C00A  FFAD         	movff	print_char@chr,4013	;volatile
  4228  0034C2                     l84:
  4229  0034C2  FFFF               	dw	65535	; assembler added errata NOP
  4230  0034C4  A2AC               	btfss	172,1,c	;volatile
  4231  0034C6  EF67  F01A         	goto	u5051
  4232  0034CA  EF6A  F01A         	goto	u5050
  4233  0034CE                     u5051:
  4234  0034CE  FFFF               	dw	65535	; assembler added errata NOP
  4235  0034D0  EF61  F01A         	goto	l84
  4236  0034D4                     u5050:
  4237  0034D4  FFFF               	dw	65535	; assembler added errata NOP
  4238  0034D6  0012               	return		;funcret
  4239  0034D8  FFFF               	dw	65535	; errata NOP
  4240  0034DA                     __end_of_print_char:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function ___xxtofl *****************
  4244 ;; Defined at:
  4245 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  sign            1    wreg     unsigned char 
  4248 ;;  val             4    9[COMRAM] long 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  sign            1   17[COMRAM] unsigned char 
  4251 ;;  arg             4   19[COMRAM] unsigned long 
  4252 ;;  exp             1   18[COMRAM] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  4    9[COMRAM] unsigned char 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4262 ;;      Params:         4       0       0       0       0       0       0
  4263 ;;      Locals:         6       0       0       0       0       0       0
  4264 ;;      Temps:          4       0       0       0       0       0       0
  4265 ;;      Totals:        14       0       0       0       0       0       0
  4266 ;;Total ram usage:       14 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 2
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_pick_and_place
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text11
  4277  001DDE                     __ptext11:
  4278                           	callstack 0
  4279  001DDE                     ___xxtofl:
  4280                           	callstack 0
  4281  001DDE  FFFF               	dw	65535	; assembler added errata NOP
  4282                           
  4283                           ;incstack = 0
  4284                           ;___xxtofl@sign stored from wreg
  4285  001DE0  6E12               	movwf	___xxtofl@sign^0,c
  4286  001DE2  5012               	movf	___xxtofl@sign^0,w,c
  4287  001DE4  B4D8               	btfsc	status,2,c
  4288  001DE6  EFF7  F00E         	goto	u5651
  4289  001DEA  EFFA  F00E         	goto	u5650
  4290  001DEE                     u5651:
  4291  001DEE  FFFF               	dw	65535	; assembler added errata NOP
  4292  001DF0  EF1F  F00F         	goto	l1169
  4293  001DF4                     u5650:
  4294  001DF4  FFFF               	dw	65535	; assembler added errata NOP
  4295  001DF6  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  4296  001DF8  EF03  F00F         	goto	u5660
  4297  001DFC  EF00  F00F         	goto	u5661
  4298  001E00                     u5661:
  4299  001E00  FFFF               	dw	65535	; assembler added errata NOP
  4300  001E02  EF1F  F00F         	goto	l1169
  4301  001E06                     u5660:
  4302  001E06  FFFF               	dw	65535	; assembler added errata NOP
  4303  001E08  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
  4304  001E0C  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
  4305  001E10  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
  4306  001E14  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
  4307  001E18  1E0E               	comf	??___xxtofl^0,f,c
  4308  001E1A  1E0F               	comf	(??___xxtofl+1)^0,f,c
  4309  001E1C  1E10               	comf	(??___xxtofl+2)^0,f,c
  4310  001E1E  1E11               	comf	(??___xxtofl+3)^0,f,c
  4311  001E20  2A0E               	incf	??___xxtofl^0,f,c
  4312  001E22  0E00               	movlw	0
  4313  001E24  220F               	addwfc	(??___xxtofl+1)^0,f,c
  4314  001E26  2210               	addwfc	(??___xxtofl+2)^0,f,c
  4315  001E28  2211               	addwfc	(??___xxtofl+3)^0,f,c
  4316  001E2A  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
  4317  001E2E  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
  4318  001E32  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
  4319  001E36  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
  4320  001E3A  EF28  F00F         	goto	l4779
  4321  001E3E                     l1169:
  4322  001E3E  FFFF               	dw	65535	; assembler added errata NOP
  4323  001E40  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
  4324  001E44  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4325  001E48  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4326  001E4C  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4327  001E50                     l4779:
  4328  001E50  FFFF               	dw	65535	; assembler added errata NOP
  4329  001E52  500A               	movf	___xxtofl@val^0,w,c
  4330  001E54  100B               	iorwf	(___xxtofl@val+1)^0,w,c
  4331  001E56  100C               	iorwf	(___xxtofl@val+2)^0,w,c
  4332  001E58  100D               	iorwf	(___xxtofl@val+3)^0,w,c
  4333  001E5A  A4D8               	btfss	status,2,c
  4334  001E5C  EF32  F00F         	goto	u5671
  4335  001E60  EF35  F00F         	goto	u5670
  4336  001E64                     u5671:
  4337  001E64  FFFF               	dw	65535	; assembler added errata NOP
  4338  001E66  EF40  F00F         	goto	l4785
  4339  001E6A                     u5670:
  4340  001E6A  FFFF               	dw	65535	; assembler added errata NOP
  4341  001E6C  0E00               	movlw	0
  4342  001E6E  6E0A               	movwf	?___xxtofl^0,c
  4343  001E70  0E00               	movlw	0
  4344  001E72  6E0B               	movwf	(?___xxtofl+1)^0,c
  4345  001E74  0E00               	movlw	0
  4346  001E76  6E0C               	movwf	(?___xxtofl+2)^0,c
  4347  001E78  0E00               	movlw	0
  4348  001E7A  6E0D               	movwf	(?___xxtofl+3)^0,c
  4349  001E7C  EFE8  F00F         	goto	l1172
  4350  001E80                     l4785:
  4351  001E80  FFFF               	dw	65535	; assembler added errata NOP
  4352  001E82  0E96               	movlw	150
  4353  001E84  6E13               	movwf	___xxtofl@exp^0,c
  4354  001E86  EF4C  F00F         	goto	l4789
  4355  001E8A                     l4787:
  4356  001E8A  FFFF               	dw	65535	; assembler added errata NOP
  4357  001E8C  2A13               	incf	___xxtofl@exp^0,f,c
  4358  001E8E  90D8               	bcf	status,0,c
  4359  001E90  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  4360  001E92  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  4361  001E94  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  4362  001E96  3214               	rrcf	___xxtofl@arg^0,f,c
  4363  001E98                     l4789:
  4364  001E98  FFFF               	dw	65535	; assembler added errata NOP
  4365  001E9A  0E00               	movlw	0
  4366  001E9C  1414               	andwf	___xxtofl@arg^0,w,c
  4367  001E9E  6E0E               	movwf	??___xxtofl^0,c
  4368  001EA0  0E00               	movlw	0
  4369  001EA2  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  4370  001EA4  6E0F               	movwf	(??___xxtofl+1)^0,c
  4371  001EA6  0E00               	movlw	0
  4372  001EA8  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  4373  001EAA  6E10               	movwf	(??___xxtofl+2)^0,c
  4374  001EAC  0EFE               	movlw	254
  4375  001EAE  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  4376  001EB0  6E11               	movwf	(??___xxtofl+3)^0,c
  4377  001EB2  500E               	movf	??___xxtofl^0,w,c
  4378  001EB4  100F               	iorwf	(??___xxtofl+1)^0,w,c
  4379  001EB6  1010               	iorwf	(??___xxtofl+2)^0,w,c
  4380  001EB8  1011               	iorwf	(??___xxtofl+3)^0,w,c
  4381  001EBA  A4D8               	btfss	status,2,c
  4382  001EBC  EF62  F00F         	goto	u5681
  4383  001EC0  EF65  F00F         	goto	u5680
  4384  001EC4                     u5681:
  4385  001EC4  FFFF               	dw	65535	; assembler added errata NOP
  4386  001EC6  EF45  F00F         	goto	l4787
  4387  001ECA                     u5680:
  4388  001ECA  FFFF               	dw	65535	; assembler added errata NOP
  4389  001ECC  EF75  F00F         	goto	l1176
  4390  001ED0                     l4791:
  4391  001ED0  FFFF               	dw	65535	; assembler added errata NOP
  4392  001ED2  2A13               	incf	___xxtofl@exp^0,f,c
  4393  001ED4  0E01               	movlw	1
  4394  001ED6  2614               	addwf	___xxtofl@arg^0,f,c
  4395  001ED8  0E00               	movlw	0
  4396  001EDA  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
  4397  001EDC  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
  4398  001EDE  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
  4399  001EE0  90D8               	bcf	status,0,c
  4400  001EE2  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  4401  001EE4  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  4402  001EE6  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  4403  001EE8  3214               	rrcf	___xxtofl@arg^0,f,c
  4404  001EEA                     l1176:
  4405  001EEA  FFFF               	dw	65535	; assembler added errata NOP
  4406  001EEC  0E00               	movlw	0
  4407  001EEE  1414               	andwf	___xxtofl@arg^0,w,c
  4408  001EF0  6E0E               	movwf	??___xxtofl^0,c
  4409  001EF2  0E00               	movlw	0
  4410  001EF4  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  4411  001EF6  6E0F               	movwf	(??___xxtofl+1)^0,c
  4412  001EF8  0E00               	movlw	0
  4413  001EFA  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  4414  001EFC  6E10               	movwf	(??___xxtofl+2)^0,c
  4415  001EFE  0EFF               	movlw	255
  4416  001F00  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  4417  001F02  6E11               	movwf	(??___xxtofl+3)^0,c
  4418  001F04  500E               	movf	??___xxtofl^0,w,c
  4419  001F06  100F               	iorwf	(??___xxtofl+1)^0,w,c
  4420  001F08  1010               	iorwf	(??___xxtofl+2)^0,w,c
  4421  001F0A  1011               	iorwf	(??___xxtofl+3)^0,w,c
  4422  001F0C  A4D8               	btfss	status,2,c
  4423  001F0E  EF8B  F00F         	goto	u5691
  4424  001F12  EF8E  F00F         	goto	u5690
  4425  001F16                     u5691:
  4426  001F16  FFFF               	dw	65535	; assembler added errata NOP
  4427  001F18  EF68  F00F         	goto	l4791
  4428  001F1C                     u5690:
  4429  001F1C  FFFF               	dw	65535	; assembler added errata NOP
  4430  001F1E  EF98  F00F         	goto	l4799
  4431  001F22                     l4797:
  4432  001F22  FFFF               	dw	65535	; assembler added errata NOP
  4433  001F24  0613               	decf	___xxtofl@exp^0,f,c
  4434  001F26  90D8               	bcf	status,0,c
  4435  001F28  3614               	rlcf	___xxtofl@arg^0,f,c
  4436  001F2A  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
  4437  001F2C  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
  4438  001F2E  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
  4439  001F30                     l4799:
  4440  001F30  FFFF               	dw	65535	; assembler added errata NOP
  4441  001F32  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
  4442  001F34  EF9E  F00F         	goto	u5701
  4443  001F38  EFA1  F00F         	goto	u5700
  4444  001F3C                     u5701:
  4445  001F3C  FFFF               	dw	65535	; assembler added errata NOP
  4446  001F3E  EFAB  F00F         	goto	l1183
  4447  001F42                     u5700:
  4448  001F42  FFFF               	dw	65535	; assembler added errata NOP
  4449  001F44  0E02               	movlw	2
  4450  001F46  6013               	cpfslt	___xxtofl@exp^0,c
  4451  001F48  EFA8  F00F         	goto	u5711
  4452  001F4C  EFAB  F00F         	goto	u5710
  4453  001F50                     u5711:
  4454  001F50  FFFF               	dw	65535	; assembler added errata NOP
  4455  001F52  EF91  F00F         	goto	l4797
  4456  001F56                     u5710:
  4457  001F56                     l1183:
  4458  001F56  FFFF               	dw	65535	; assembler added errata NOP
  4459  001F58  B013               	btfsc	___xxtofl@exp^0,0,c
  4460  001F5A  EFB1  F00F         	goto	u5721
  4461  001F5E  EFB4  F00F         	goto	u5720
  4462  001F62                     u5721:
  4463  001F62  FFFF               	dw	65535	; assembler added errata NOP
  4464  001F64  EFB6  F00F         	goto	l4805
  4465  001F68                     u5720:
  4466  001F68  FFFF               	dw	65535	; assembler added errata NOP
  4467  001F6A  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
  4468  001F6C                     l4805:
  4469  001F6C  FFFF               	dw	65535	; assembler added errata NOP
  4470  001F6E  90D8               	bcf	status,0,c
  4471  001F70  3213               	rrcf	___xxtofl@exp^0,f,c
  4472  001F72  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
  4473  001F76  6A0F               	clrf	(??___xxtofl+1)^0,c
  4474  001F78  6A10               	clrf	(??___xxtofl+2)^0,c
  4475  001F7A  6A11               	clrf	(??___xxtofl+3)^0,c
  4476  001F7C  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
  4477  001F80  6A10               	clrf	(??___xxtofl+2)^0,c
  4478  001F82  6A0F               	clrf	(??___xxtofl+1)^0,c
  4479  001F84  6A0E               	clrf	??___xxtofl^0,c
  4480  001F86  500E               	movf	??___xxtofl^0,w,c
  4481  001F88  1214               	iorwf	___xxtofl@arg^0,f,c
  4482  001F8A  500F               	movf	(??___xxtofl+1)^0,w,c
  4483  001F8C  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
  4484  001F8E  5010               	movf	(??___xxtofl+2)^0,w,c
  4485  001F90  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
  4486  001F92  5011               	movf	(??___xxtofl+3)^0,w,c
  4487  001F94  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
  4488  001F96  5012               	movf	___xxtofl@sign^0,w,c
  4489  001F98  B4D8               	btfsc	status,2,c
  4490  001F9A  EFD1  F00F         	goto	u5731
  4491  001F9E  EFD4  F00F         	goto	u5730
  4492  001FA2                     u5731:
  4493  001FA2  FFFF               	dw	65535	; assembler added errata NOP
  4494  001FA4  EFDF  F00F         	goto	l4815
  4495  001FA8                     u5730:
  4496  001FA8  FFFF               	dw	65535	; assembler added errata NOP
  4497  001FAA  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  4498  001FAC  EFDD  F00F         	goto	u5740
  4499  001FB0  EFDA  F00F         	goto	u5741
  4500  001FB4                     u5741:
  4501  001FB4  FFFF               	dw	65535	; assembler added errata NOP
  4502  001FB6  EFDF  F00F         	goto	l4815
  4503  001FBA                     u5740:
  4504  001FBA  FFFF               	dw	65535	; assembler added errata NOP
  4505  001FBC  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
  4506  001FBE                     l4815:
  4507  001FBE  FFFF               	dw	65535	; assembler added errata NOP
  4508  001FC0  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
  4509  001FC4  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
  4510  001FC8  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
  4511  001FCC  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
  4512  001FD0                     l1172:
  4513  001FD0  FFFF               	dw	65535	; assembler added errata NOP
  4514  001FD2  0012               	return		;funcret
  4515  001FD4  FFFF               	dw	65535	; errata NOP
  4516  001FD6                     __end_of___xxtofl:
  4517                           	callstack 0
  4518                           
  4519 ;; *************** function ___fldiv *****************
  4520 ;; Defined at:
  4521 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  b               4   23[COMRAM] unsigned char 
  4524 ;;  a               4   27[COMRAM] unsigned char 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  grs             4   42[COMRAM] unsigned long 
  4527 ;;  rem             4   35[COMRAM] unsigned long 
  4528 ;;  new_exp         2   40[COMRAM] short 
  4529 ;;  aexp            1   47[COMRAM] unsigned char 
  4530 ;;  bexp            1   46[COMRAM] unsigned char 
  4531 ;;  sign            1   39[COMRAM] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  4   23[COMRAM] unsigned char 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4541 ;;      Params:         8       0       0       0       0       0       0
  4542 ;;      Locals:        13       0       0       0       0       0       0
  4543 ;;      Temps:          4       0       0       0       0       0       0
  4544 ;;      Totals:        25       0       0       0       0       0       0
  4545 ;;Total ram usage:       25 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 2
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_pick_and_place
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text12
  4556  0013C6                     __ptext12:
  4557                           	callstack 0
  4558  0013C6                     ___fldiv:
  4559                           	callstack 0
  4560  0013C6  FFFF               	dw	65535	; assembler added errata NOP
  4561  0013C8  501B               	movf	(___fldiv@b+3)^0,w,c
  4562  0013CA  0B80               	andlw	128
  4563  0013CC  6E28               	movwf	___fldiv@sign^0,c
  4564  0013CE  501B               	movf	(___fldiv@b+3)^0,w,c
  4565  0013D0  241B               	addwf	(___fldiv@b+3)^0,w,c
  4566  0013D2  6E2F               	movwf	___fldiv@bexp^0,c
  4567  0013D4  AE1A               	btfss	(___fldiv@b+2)^0,7,c
  4568  0013D6  EFEF  F009         	goto	u5371
  4569  0013DA  EFF2  F009         	goto	u5370
  4570  0013DE                     u5371:
  4571  0013DE  FFFF               	dw	65535	; assembler added errata NOP
  4572  0013E0  EFF4  F009         	goto	l4619
  4573  0013E4                     u5370:
  4574  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  4575  0013E6  802F               	bsf	___fldiv@bexp^0,0,c
  4576  0013E8                     l4619:
  4577  0013E8  FFFF               	dw	65535	; assembler added errata NOP
  4578  0013EA  502F               	movf	___fldiv@bexp^0,w,c
  4579  0013EC  B4D8               	btfsc	status,2,c
  4580  0013EE  EFFB  F009         	goto	u5381
  4581  0013F2  EFFE  F009         	goto	u5380
  4582  0013F6                     u5381:
  4583  0013F6  FFFF               	dw	65535	; assembler added errata NOP
  4584  0013F8  EF17  F00A         	goto	l4629
  4585  0013FC                     u5380:
  4586  0013FC  FFFF               	dw	65535	; assembler added errata NOP
  4587  0013FE  282F               	incf	___fldiv@bexp^0,w,c
  4588  001400  A4D8               	btfss	status,2,c
  4589  001402  EF05  F00A         	goto	u5391
  4590  001406  EF08  F00A         	goto	u5390
  4591  00140A                     u5391:
  4592  00140A  FFFF               	dw	65535	; assembler added errata NOP
  4593  00140C  EF11  F00A         	goto	l4625
  4594  001410                     u5390:
  4595  001410  FFFF               	dw	65535	; assembler added errata NOP
  4596  001412  0E00               	movlw	0
  4597  001414  6E18               	movwf	___fldiv@b^0,c
  4598  001416  0E00               	movlw	0
  4599  001418  6E19               	movwf	(___fldiv@b+1)^0,c
  4600  00141A  0E00               	movlw	0
  4601  00141C  6E1A               	movwf	(___fldiv@b+2)^0,c
  4602  00141E  0E00               	movlw	0
  4603  001420  6E1B               	movwf	(___fldiv@b+3)^0,c
  4604  001422                     l4625:
  4605  001422  FFFF               	dw	65535	; assembler added errata NOP
  4606  001424  8E1A               	bsf	(___fldiv@b+2)^0,7,c
  4607  001426  0E00               	movlw	0
  4608  001428  6E1B               	movwf	(___fldiv@b+3)^0,c
  4609  00142A  EF20  F00A         	goto	l4631
  4610  00142E                     l4629:
  4611  00142E  FFFF               	dw	65535	; assembler added errata NOP
  4612  001430  0E00               	movlw	0
  4613  001432  6E18               	movwf	___fldiv@b^0,c
  4614  001434  0E00               	movlw	0
  4615  001436  6E19               	movwf	(___fldiv@b+1)^0,c
  4616  001438  0E00               	movlw	0
  4617  00143A  6E1A               	movwf	(___fldiv@b+2)^0,c
  4618  00143C  0E00               	movlw	0
  4619  00143E  6E1B               	movwf	(___fldiv@b+3)^0,c
  4620  001440                     l4631:
  4621  001440  FFFF               	dw	65535	; assembler added errata NOP
  4622  001442  501F               	movf	(___fldiv@a+3)^0,w,c
  4623  001444  0B80               	andlw	128
  4624  001446  1A28               	xorwf	___fldiv@sign^0,f,c
  4625  001448  501F               	movf	(___fldiv@a+3)^0,w,c
  4626  00144A  241F               	addwf	(___fldiv@a+3)^0,w,c
  4627  00144C  6E30               	movwf	___fldiv@aexp^0,c
  4628  00144E  AE1E               	btfss	(___fldiv@a+2)^0,7,c
  4629  001450  EF2C  F00A         	goto	u5401
  4630  001454  EF2F  F00A         	goto	u5400
  4631  001458                     u5401:
  4632  001458  FFFF               	dw	65535	; assembler added errata NOP
  4633  00145A  EF31  F00A         	goto	l4639
  4634  00145E                     u5400:
  4635  00145E  FFFF               	dw	65535	; assembler added errata NOP
  4636  001460  8030               	bsf	___fldiv@aexp^0,0,c
  4637  001462                     l4639:
  4638  001462  FFFF               	dw	65535	; assembler added errata NOP
  4639  001464  5030               	movf	___fldiv@aexp^0,w,c
  4640  001466  B4D8               	btfsc	status,2,c
  4641  001468  EF38  F00A         	goto	u5411
  4642  00146C  EF3B  F00A         	goto	u5410
  4643  001470                     u5411:
  4644  001470  FFFF               	dw	65535	; assembler added errata NOP
  4645  001472  EF54  F00A         	goto	l4649
  4646  001476                     u5410:
  4647  001476  FFFF               	dw	65535	; assembler added errata NOP
  4648  001478  2830               	incf	___fldiv@aexp^0,w,c
  4649  00147A  A4D8               	btfss	status,2,c
  4650  00147C  EF42  F00A         	goto	u5421
  4651  001480  EF45  F00A         	goto	u5420
  4652  001484                     u5421:
  4653  001484  FFFF               	dw	65535	; assembler added errata NOP
  4654  001486  EF4E  F00A         	goto	l4645
  4655  00148A                     u5420:
  4656  00148A  FFFF               	dw	65535	; assembler added errata NOP
  4657  00148C  0E00               	movlw	0
  4658  00148E  6E1C               	movwf	___fldiv@a^0,c
  4659  001490  0E00               	movlw	0
  4660  001492  6E1D               	movwf	(___fldiv@a+1)^0,c
  4661  001494  0E00               	movlw	0
  4662  001496  6E1E               	movwf	(___fldiv@a+2)^0,c
  4663  001498  0E00               	movlw	0
  4664  00149A  6E1F               	movwf	(___fldiv@a+3)^0,c
  4665  00149C                     l4645:
  4666  00149C  FFFF               	dw	65535	; assembler added errata NOP
  4667  00149E  8E1E               	bsf	(___fldiv@a+2)^0,7,c
  4668  0014A0  0E00               	movlw	0
  4669  0014A2  6E1F               	movwf	(___fldiv@a+3)^0,c
  4670  0014A4  EF5D  F00A         	goto	l4651
  4671  0014A8                     l4649:
  4672  0014A8  FFFF               	dw	65535	; assembler added errata NOP
  4673  0014AA  0E00               	movlw	0
  4674  0014AC  6E1C               	movwf	___fldiv@a^0,c
  4675  0014AE  0E00               	movlw	0
  4676  0014B0  6E1D               	movwf	(___fldiv@a+1)^0,c
  4677  0014B2  0E00               	movlw	0
  4678  0014B4  6E1E               	movwf	(___fldiv@a+2)^0,c
  4679  0014B6  0E00               	movlw	0
  4680  0014B8  6E1F               	movwf	(___fldiv@a+3)^0,c
  4681  0014BA                     l4651:
  4682  0014BA  FFFF               	dw	65535	; assembler added errata NOP
  4683  0014BC  501C               	movf	___fldiv@a^0,w,c
  4684  0014BE  101D               	iorwf	(___fldiv@a+1)^0,w,c
  4685  0014C0  101E               	iorwf	(___fldiv@a+2)^0,w,c
  4686  0014C2  101F               	iorwf	(___fldiv@a+3)^0,w,c
  4687  0014C4  A4D8               	btfss	status,2,c
  4688  0014C6  EF67  F00A         	goto	u5431
  4689  0014CA  EF6A  F00A         	goto	u5430
  4690  0014CE                     u5431:
  4691  0014CE  FFFF               	dw	65535	; assembler added errata NOP
  4692  0014D0  EF84  F00A         	goto	l4663
  4693  0014D4                     u5430:
  4694  0014D4  FFFF               	dw	65535	; assembler added errata NOP
  4695  0014D6  0E00               	movlw	0
  4696  0014D8  6E18               	movwf	___fldiv@b^0,c
  4697  0014DA  0E00               	movlw	0
  4698  0014DC  6E19               	movwf	(___fldiv@b+1)^0,c
  4699  0014DE  0E00               	movlw	0
  4700  0014E0  6E1A               	movwf	(___fldiv@b+2)^0,c
  4701  0014E2  0E00               	movlw	0
  4702  0014E4  6E1B               	movwf	(___fldiv@b+3)^0,c
  4703  0014E6  0E80               	movlw	128
  4704  0014E8  121A               	iorwf	(___fldiv@b+2)^0,f,c
  4705  0014EA  0E7F               	movlw	127
  4706  0014EC  121B               	iorwf	(___fldiv@b+3)^0,f,c
  4707  0014EE                     l4657:
  4708  0014EE  FFFF               	dw	65535	; assembler added errata NOP
  4709  0014F0  5028               	movf	___fldiv@sign^0,w,c
  4710  0014F2  121B               	iorwf	(___fldiv@b+3)^0,f,c
  4711  0014F4  C018  F018         	movff	___fldiv@b,?___fldiv
  4712  0014F8  C019  F019         	movff	___fldiv@b+1,?___fldiv+1
  4713  0014FC  C01A  F01A         	movff	___fldiv@b+2,?___fldiv+2
  4714  001500  C01B  F01B         	movff	___fldiv@b+3,?___fldiv+3
  4715  001504  EFF9  F00B         	goto	l1096
  4716  001508                     l4663:
  4717  001508  FFFF               	dw	65535	; assembler added errata NOP
  4718  00150A  502F               	movf	___fldiv@bexp^0,w,c
  4719  00150C  A4D8               	btfss	status,2,c
  4720  00150E  EF8B  F00A         	goto	u5441
  4721  001512  EF8E  F00A         	goto	u5440
  4722  001516                     u5441:
  4723  001516  FFFF               	dw	65535	; assembler added errata NOP
  4724  001518  EF99  F00A         	goto	l4671
  4725  00151C                     u5440:
  4726  00151C  FFFF               	dw	65535	; assembler added errata NOP
  4727  00151E  0E00               	movlw	0
  4728  001520  6E18               	movwf	?___fldiv^0,c
  4729  001522  0E00               	movlw	0
  4730  001524  6E19               	movwf	(?___fldiv+1)^0,c
  4731  001526  0E00               	movlw	0
  4732  001528  6E1A               	movwf	(?___fldiv+2)^0,c
  4733  00152A  0E00               	movlw	0
  4734  00152C  6E1B               	movwf	(?___fldiv+3)^0,c
  4735  00152E  EFF9  F00B         	goto	l1096
  4736  001532                     l4671:
  4737  001532  FFFF               	dw	65535	; assembler added errata NOP
  4738  001534  5030               	movf	___fldiv@aexp^0,w,c
  4739  001536  C02F  F020         	movff	___fldiv@bexp,??___fldiv
  4740  00153A  6A21               	clrf	(??___fldiv+1)^0,c
  4741  00153C  5E20               	subwf	??___fldiv^0,f,c
  4742  00153E  0E00               	movlw	0
  4743  001540  5A21               	subwfb	(??___fldiv+1)^0,f,c
  4744  001542  0E7F               	movlw	127
  4745  001544  2420               	addwf	??___fldiv^0,w,c
  4746  001546  6E29               	movwf	___fldiv@new_exp^0,c
  4747  001548  0E00               	movlw	0
  4748  00154A  2021               	addwfc	(??___fldiv+1)^0,w,c
  4749  00154C  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  4750  00154E  C018  F024         	movff	___fldiv@b,___fldiv@rem
  4751  001552  C019  F025         	movff	___fldiv@b+1,___fldiv@rem+1
  4752  001556  C01A  F026         	movff	___fldiv@b+2,___fldiv@rem+2
  4753  00155A  C01B  F027         	movff	___fldiv@b+3,___fldiv@rem+3
  4754  00155E  0E00               	movlw	0
  4755  001560  6E18               	movwf	___fldiv@b^0,c
  4756  001562  0E00               	movlw	0
  4757  001564  6E19               	movwf	(___fldiv@b+1)^0,c
  4758  001566  0E00               	movlw	0
  4759  001568  6E1A               	movwf	(___fldiv@b+2)^0,c
  4760  00156A  0E00               	movlw	0
  4761  00156C  6E1B               	movwf	(___fldiv@b+3)^0,c
  4762  00156E  0E00               	movlw	0
  4763  001570  6E2B               	movwf	___fldiv@grs^0,c
  4764  001572  0E00               	movlw	0
  4765  001574  6E2C               	movwf	(___fldiv@grs+1)^0,c
  4766  001576  0E00               	movlw	0
  4767  001578  6E2D               	movwf	(___fldiv@grs+2)^0,c
  4768  00157A  0E00               	movlw	0
  4769  00157C  6E2E               	movwf	(___fldiv@grs+3)^0,c
  4770  00157E  0E00               	movlw	0
  4771  001580  6E30               	movwf	___fldiv@aexp^0,c
  4772  001582  EF05  F00B         	goto	l1098
  4773  001586                     l4681:
  4774  001586  FFFF               	dw	65535	; assembler added errata NOP
  4775  001588  5030               	movf	___fldiv@aexp^0,w,c
  4776  00158A  B4D8               	btfsc	status,2,c
  4777  00158C  EFCA  F00A         	goto	u5451
  4778  001590  EFCD  F00A         	goto	u5450
  4779  001594                     u5451:
  4780  001594  FFFF               	dw	65535	; assembler added errata NOP
  4781  001596  EFE8  F00A         	goto	l4689
  4782  00159A                     u5450:
  4783  00159A  FFFF               	dw	65535	; assembler added errata NOP
  4784  00159C  90D8               	bcf	status,0,c
  4785  00159E  3624               	rlcf	___fldiv@rem^0,f,c
  4786  0015A0  3625               	rlcf	(___fldiv@rem+1)^0,f,c
  4787  0015A2  3626               	rlcf	(___fldiv@rem+2)^0,f,c
  4788  0015A4  3627               	rlcf	(___fldiv@rem+3)^0,f,c
  4789  0015A6  90D8               	bcf	status,0,c
  4790  0015A8  3618               	rlcf	___fldiv@b^0,f,c
  4791  0015AA  3619               	rlcf	(___fldiv@b+1)^0,f,c
  4792  0015AC  361A               	rlcf	(___fldiv@b+2)^0,f,c
  4793  0015AE  361B               	rlcf	(___fldiv@b+3)^0,f,c
  4794  0015B0  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  4795  0015B2  EFDD  F00A         	goto	u5461
  4796  0015B6  EFE0  F00A         	goto	u5460
  4797  0015BA                     u5461:
  4798  0015BA  FFFF               	dw	65535	; assembler added errata NOP
  4799  0015BC  EFE2  F00A         	goto	l1101
  4800  0015C0                     u5460:
  4801  0015C0  FFFF               	dw	65535	; assembler added errata NOP
  4802  0015C2  8018               	bsf	___fldiv@b^0,0,c
  4803  0015C4                     l1101:
  4804  0015C4  FFFF               	dw	65535	; assembler added errata NOP
  4805  0015C6  90D8               	bcf	status,0,c
  4806  0015C8  362B               	rlcf	___fldiv@grs^0,f,c
  4807  0015CA  362C               	rlcf	(___fldiv@grs+1)^0,f,c
  4808  0015CC  362D               	rlcf	(___fldiv@grs+2)^0,f,c
  4809  0015CE  362E               	rlcf	(___fldiv@grs+3)^0,f,c
  4810  0015D0                     l4689:
  4811  0015D0  FFFF               	dw	65535	; assembler added errata NOP
  4812  0015D2  501C               	movf	___fldiv@a^0,w,c
  4813  0015D4  5C24               	subwf	___fldiv@rem^0,w,c
  4814  0015D6  501D               	movf	(___fldiv@a+1)^0,w,c
  4815  0015D8  5825               	subwfb	(___fldiv@rem+1)^0,w,c
  4816  0015DA  501E               	movf	(___fldiv@a+2)^0,w,c
  4817  0015DC  5826               	subwfb	(___fldiv@rem+2)^0,w,c
  4818  0015DE  501F               	movf	(___fldiv@a+3)^0,w,c
  4819  0015E0  5827               	subwfb	(___fldiv@rem+3)^0,w,c
  4820  0015E2  A0D8               	btfss	status,0,c
  4821  0015E4  EFF6  F00A         	goto	u5471
  4822  0015E8  EFF9  F00A         	goto	u5470
  4823  0015EC                     u5471:
  4824  0015EC  FFFF               	dw	65535	; assembler added errata NOP
  4825  0015EE  EF03  F00B         	goto	l4695
  4826  0015F2                     u5470:
  4827  0015F2  FFFF               	dw	65535	; assembler added errata NOP
  4828  0015F4  8C2E               	bsf	(___fldiv@grs+3)^0,6,c
  4829  0015F6  501C               	movf	___fldiv@a^0,w,c
  4830  0015F8  5E24               	subwf	___fldiv@rem^0,f,c
  4831  0015FA  501D               	movf	(___fldiv@a+1)^0,w,c
  4832  0015FC  5A25               	subwfb	(___fldiv@rem+1)^0,f,c
  4833  0015FE  501E               	movf	(___fldiv@a+2)^0,w,c
  4834  001600  5A26               	subwfb	(___fldiv@rem+2)^0,f,c
  4835  001602  501F               	movf	(___fldiv@a+3)^0,w,c
  4836  001604  5A27               	subwfb	(___fldiv@rem+3)^0,f,c
  4837  001606                     l4695:
  4838  001606  FFFF               	dw	65535	; assembler added errata NOP
  4839  001608  2A30               	incf	___fldiv@aexp^0,f,c
  4840  00160A                     l1098:
  4841  00160A  FFFF               	dw	65535	; assembler added errata NOP
  4842  00160C  0E19               	movlw	25
  4843  00160E  6430               	cpfsgt	___fldiv@aexp^0,c
  4844  001610  EF0C  F00B         	goto	u5481
  4845  001614  EF0F  F00B         	goto	u5480
  4846  001618                     u5481:
  4847  001618  FFFF               	dw	65535	; assembler added errata NOP
  4848  00161A  EFC3  F00A         	goto	l4681
  4849  00161E                     u5480:
  4850  00161E  FFFF               	dw	65535	; assembler added errata NOP
  4851  001620  5024               	movf	___fldiv@rem^0,w,c
  4852  001622  1025               	iorwf	(___fldiv@rem+1)^0,w,c
  4853  001624  1026               	iorwf	(___fldiv@rem+2)^0,w,c
  4854  001626  1027               	iorwf	(___fldiv@rem+3)^0,w,c
  4855  001628  B4D8               	btfsc	status,2,c
  4856  00162A  EF19  F00B         	goto	u5491
  4857  00162E  EF1C  F00B         	goto	u5490
  4858  001632                     u5491:
  4859  001632  FFFF               	dw	65535	; assembler added errata NOP
  4860  001634  EF39  F00B         	goto	l4707
  4861  001638                     u5490:
  4862  001638  FFFF               	dw	65535	; assembler added errata NOP
  4863  00163A  802B               	bsf	___fldiv@grs^0,0,c
  4864  00163C  EF39  F00B         	goto	l4707
  4865  001640                     l4701:
  4866  001640  FFFF               	dw	65535	; assembler added errata NOP
  4867  001642  90D8               	bcf	status,0,c
  4868  001644  3618               	rlcf	___fldiv@b^0,f,c
  4869  001646  3619               	rlcf	(___fldiv@b+1)^0,f,c
  4870  001648  361A               	rlcf	(___fldiv@b+2)^0,f,c
  4871  00164A  361B               	rlcf	(___fldiv@b+3)^0,f,c
  4872  00164C  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  4873  00164E  EF2B  F00B         	goto	u5501
  4874  001652  EF2E  F00B         	goto	u5500
  4875  001656                     u5501:
  4876  001656  FFFF               	dw	65535	; assembler added errata NOP
  4877  001658  EF30  F00B         	goto	l1107
  4878  00165C                     u5500:
  4879  00165C  FFFF               	dw	65535	; assembler added errata NOP
  4880  00165E  8018               	bsf	___fldiv@b^0,0,c
  4881  001660                     l1107:
  4882  001660  FFFF               	dw	65535	; assembler added errata NOP
  4883  001662  90D8               	bcf	status,0,c
  4884  001664  362B               	rlcf	___fldiv@grs^0,f,c
  4885  001666  362C               	rlcf	(___fldiv@grs+1)^0,f,c
  4886  001668  362D               	rlcf	(___fldiv@grs+2)^0,f,c
  4887  00166A  362E               	rlcf	(___fldiv@grs+3)^0,f,c
  4888  00166C  0629               	decf	___fldiv@new_exp^0,f,c
  4889  00166E  A0D8               	btfss	status,0,c
  4890  001670  062A               	decf	(___fldiv@new_exp+1)^0,f,c
  4891  001672                     l4707:
  4892  001672  FFFF               	dw	65535	; assembler added errata NOP
  4893  001674  AE1A               	btfss	(___fldiv@b+2)^0,7,c
  4894  001676  EF3F  F00B         	goto	u5511
  4895  00167A  EF42  F00B         	goto	u5510
  4896  00167E                     u5511:
  4897  00167E  FFFF               	dw	65535	; assembler added errata NOP
  4898  001680  EF20  F00B         	goto	l4701
  4899  001684                     u5510:
  4900  001684  FFFF               	dw	65535	; assembler added errata NOP
  4901  001686  0E00               	movlw	0
  4902  001688  6E30               	movwf	___fldiv@aexp^0,c
  4903  00168A  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  4904  00168C  EF4A  F00B         	goto	u5521
  4905  001690  EF4D  F00B         	goto	u5520
  4906  001694                     u5521:
  4907  001694  FFFF               	dw	65535	; assembler added errata NOP
  4908  001696  EF78  F00B         	goto	l1109
  4909  00169A                     u5520:
  4910  00169A  FFFF               	dw	65535	; assembler added errata NOP
  4911  00169C  0EFF               	movlw	255
  4912  00169E  142B               	andwf	___fldiv@grs^0,w,c
  4913  0016A0  6E20               	movwf	??___fldiv^0,c
  4914  0016A2  0EFF               	movlw	255
  4915  0016A4  142C               	andwf	(___fldiv@grs+1)^0,w,c
  4916  0016A6  6E21               	movwf	(??___fldiv+1)^0,c
  4917  0016A8  0EFF               	movlw	255
  4918  0016AA  142D               	andwf	(___fldiv@grs+2)^0,w,c
  4919  0016AC  6E22               	movwf	(??___fldiv+2)^0,c
  4920  0016AE  0E7F               	movlw	127
  4921  0016B0  142E               	andwf	(___fldiv@grs+3)^0,w,c
  4922  0016B2  6E23               	movwf	(??___fldiv+3)^0,c
  4923  0016B4  5020               	movf	??___fldiv^0,w,c
  4924  0016B6  1021               	iorwf	(??___fldiv+1)^0,w,c
  4925  0016B8  1022               	iorwf	(??___fldiv+2)^0,w,c
  4926  0016BA  1023               	iorwf	(??___fldiv+3)^0,w,c
  4927  0016BC  B4D8               	btfsc	status,2,c
  4928  0016BE  EF63  F00B         	goto	u5531
  4929  0016C2  EF66  F00B         	goto	u5530
  4930  0016C6                     u5531:
  4931  0016C6  FFFF               	dw	65535	; assembler added errata NOP
  4932  0016C8  EF6C  F00B         	goto	l1110
  4933  0016CC                     u5530:
  4934  0016CC  FFFF               	dw	65535	; assembler added errata NOP
  4935  0016CE                     l4715:
  4936  0016CE  FFFF               	dw	65535	; assembler added errata NOP
  4937  0016D0  0E01               	movlw	1
  4938  0016D2  6E30               	movwf	___fldiv@aexp^0,c
  4939  0016D4  EF78  F00B         	goto	l1109
  4940  0016D8                     l1110:
  4941  0016D8  FFFF               	dw	65535	; assembler added errata NOP
  4942  0016DA  A018               	btfss	___fldiv@b^0,0,c
  4943  0016DC  EF72  F00B         	goto	u5541
  4944  0016E0  EF75  F00B         	goto	u5540
  4945  0016E4                     u5541:
  4946  0016E4  FFFF               	dw	65535	; assembler added errata NOP
  4947  0016E6  EF78  F00B         	goto	l1109
  4948  0016EA                     u5540:
  4949  0016EA  FFFF               	dw	65535	; assembler added errata NOP
  4950  0016EC  EF67  F00B         	goto	l4715
  4951  0016F0                     l1109:
  4952  0016F0  FFFF               	dw	65535	; assembler added errata NOP
  4953  0016F2  5030               	movf	___fldiv@aexp^0,w,c
  4954  0016F4  B4D8               	btfsc	status,2,c
  4955  0016F6  EF7F  F00B         	goto	u5551
  4956  0016FA  EF82  F00B         	goto	u5550
  4957  0016FE                     u5551:
  4958  0016FE  FFFF               	dw	65535	; assembler added errata NOP
  4959  001700  EFA9  F00B         	goto	l4727
  4960  001704                     u5550:
  4961  001704  FFFF               	dw	65535	; assembler added errata NOP
  4962  001706  0E01               	movlw	1
  4963  001708  2618               	addwf	___fldiv@b^0,f,c
  4964  00170A  0E00               	movlw	0
  4965  00170C  2219               	addwfc	(___fldiv@b+1)^0,f,c
  4966  00170E  221A               	addwfc	(___fldiv@b+2)^0,f,c
  4967  001710  221B               	addwfc	(___fldiv@b+3)^0,f,c
  4968  001712  A01B               	btfss	(___fldiv@b+3)^0,0,c
  4969  001714  EF8E  F00B         	goto	u5561
  4970  001718  EF91  F00B         	goto	u5560
  4971  00171C                     u5561:
  4972  00171C  FFFF               	dw	65535	; assembler added errata NOP
  4973  00171E  EFA9  F00B         	goto	l4727
  4974  001722                     u5560:
  4975  001722  FFFF               	dw	65535	; assembler added errata NOP
  4976  001724  C018  F020         	movff	___fldiv@b,??___fldiv
  4977  001728  C019  F021         	movff	___fldiv@b+1,??___fldiv+1
  4978  00172C  C01A  F022         	movff	___fldiv@b+2,??___fldiv+2
  4979  001730  C01B  F023         	movff	___fldiv@b+3,??___fldiv+3
  4980  001734  3423               	rlcf	(??___fldiv+3)^0,w,c
  4981  001736  3223               	rrcf	(??___fldiv+3)^0,f,c
  4982  001738  3222               	rrcf	(??___fldiv+2)^0,f,c
  4983  00173A  3221               	rrcf	(??___fldiv+1)^0,f,c
  4984  00173C  3220               	rrcf	??___fldiv^0,f,c
  4985  00173E  C020  F018         	movff	??___fldiv,___fldiv@b
  4986  001742  C021  F019         	movff	??___fldiv+1,___fldiv@b+1
  4987  001746  C022  F01A         	movff	??___fldiv+2,___fldiv@b+2
  4988  00174A  C023  F01B         	movff	??___fldiv+3,___fldiv@b+3
  4989  00174E  4A29               	infsnz	___fldiv@new_exp^0,f,c
  4990  001750  2A2A               	incf	(___fldiv@new_exp+1)^0,f,c
  4991  001752                     l4727:
  4992  001752  FFFF               	dw	65535	; assembler added errata NOP
  4993  001754  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4994  001756  EFB5  F00B         	goto	u5571
  4995  00175A  502A               	movf	(___fldiv@new_exp+1)^0,w,c
  4996  00175C  E109               	bnz	u5570
  4997  00175E  2829               	incf	___fldiv@new_exp^0,w,c
  4998  001760  A0D8               	btfss	status,0,c
  4999  001762  EFB5  F00B         	goto	u5571
  5000  001766  EFB8  F00B         	goto	u5570
  5001  00176A                     u5571:
  5002  00176A  FFFF               	dw	65535	; assembler added errata NOP
  5003  00176C  EFC4  F00B         	goto	l4731
  5004  001770                     u5570:
  5005  001770  FFFF               	dw	65535	; assembler added errata NOP
  5006  001772  0E00               	movlw	0
  5007  001774  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  5008  001776  6829               	setf	___fldiv@new_exp^0,c
  5009  001778  0E00               	movlw	0
  5010  00177A  6E18               	movwf	___fldiv@b^0,c
  5011  00177C  0E00               	movlw	0
  5012  00177E  6E19               	movwf	(___fldiv@b+1)^0,c
  5013  001780  0E00               	movlw	0
  5014  001782  6E1A               	movwf	(___fldiv@b+2)^0,c
  5015  001784  0E00               	movlw	0
  5016  001786  6E1B               	movwf	(___fldiv@b+3)^0,c
  5017  001788                     l4731:
  5018  001788  FFFF               	dw	65535	; assembler added errata NOP
  5019  00178A  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5020  00178C  EFD3  F00B         	goto	u5580
  5021  001790  502A               	movf	(___fldiv@new_exp+1)^0,w,c
  5022  001792  E106               	bnz	u5581
  5023  001794  0429               	decf	___fldiv@new_exp^0,w,c
  5024  001796  B0D8               	btfsc	status,0,c
  5025  001798  EFD0  F00B         	goto	u5581
  5026  00179C  EFD3  F00B         	goto	u5580
  5027  0017A0                     u5581:
  5028  0017A0  FFFF               	dw	65535	; assembler added errata NOP
  5029  0017A2  EFE2  F00B         	goto	l4735
  5030  0017A6                     u5580:
  5031  0017A6  FFFF               	dw	65535	; assembler added errata NOP
  5032  0017A8  0E00               	movlw	0
  5033  0017AA  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  5034  0017AC  0E00               	movlw	0
  5035  0017AE  6E29               	movwf	___fldiv@new_exp^0,c
  5036  0017B0  0E00               	movlw	0
  5037  0017B2  6E18               	movwf	___fldiv@b^0,c
  5038  0017B4  0E00               	movlw	0
  5039  0017B6  6E19               	movwf	(___fldiv@b+1)^0,c
  5040  0017B8  0E00               	movlw	0
  5041  0017BA  6E1A               	movwf	(___fldiv@b+2)^0,c
  5042  0017BC  0E00               	movlw	0
  5043  0017BE  6E1B               	movwf	(___fldiv@b+3)^0,c
  5044  0017C0  0E00               	movlw	0
  5045  0017C2  6E28               	movwf	___fldiv@sign^0,c
  5046  0017C4                     l4735:
  5047  0017C4  FFFF               	dw	65535	; assembler added errata NOP
  5048  0017C6  C029  F02F         	movff	___fldiv@new_exp,___fldiv@bexp
  5049  0017CA  A02F               	btfss	___fldiv@bexp^0,0,c
  5050  0017CC  EFEA  F00B         	goto	u5591
  5051  0017D0  EFED  F00B         	goto	u5590
  5052  0017D4                     u5591:
  5053  0017D4  FFFF               	dw	65535	; assembler added errata NOP
  5054  0017D6  EFF1  F00B         	goto	l4741
  5055  0017DA                     u5590:
  5056  0017DA  FFFF               	dw	65535	; assembler added errata NOP
  5057  0017DC  8E1A               	bsf	(___fldiv@b+2)^0,7,c
  5058  0017DE  EFF3  F00B         	goto	l4743
  5059  0017E2                     l4741:
  5060  0017E2  FFFF               	dw	65535	; assembler added errata NOP
  5061  0017E4  9E1A               	bcf	(___fldiv@b+2)^0,7,c
  5062  0017E6                     l4743:
  5063  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  5064  0017E8  90D8               	bcf	status,0,c
  5065  0017EA  302F               	rrcf	___fldiv@bexp^0,w,c
  5066  0017EC  6E1B               	movwf	(___fldiv@b+3)^0,c
  5067  0017EE  EF77  F00A         	goto	l4657
  5068  0017F2                     l1096:
  5069  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  5070  0017F4  0012               	return		;funcret
  5071  0017F6  FFFF               	dw	65535	; errata NOP
  5072  0017F8                     __end_of___fldiv:
  5073                           	callstack 0
  5074                           
  5075 ;; *************** function _Z_axis *****************
  5076 ;; Defined at:
  5077 ;;		line 458 in file "main.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  direction       1    wreg     unsigned char 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  direction       1   17[COMRAM] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      void 
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5091 ;;      Params:         0       0       0       0       0       0       0
  5092 ;;      Locals:         1       0       0       0       0       0       0
  5093 ;;      Temps:          2       0       0       0       0       0       0
  5094 ;;      Totals:         3       0       0       0       0       0       0
  5095 ;;Total ram usage:        3 bytes
  5096 ;; Hardware stack levels used: 1
  5097 ;; Hardware stack levels required when called: 3
  5098 ;; This function calls:
  5099 ;;		_ms_delay
  5100 ;; This function is called by:
  5101 ;;		_pick_and_place
  5102 ;;		_return_to_initial
  5103 ;;		_Z_axis_and_Tweezer
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text13
  5108  0027C2                     __ptext13:
  5109                           	callstack 0
  5110  0027C2                     _Z_axis:
  5111                           	callstack 0
  5112  0027C2  FFFF               	dw	65535	; assembler added errata NOP
  5113                           
  5114                           ;incstack = 0
  5115                           ;Z_axis@direction stored from wreg
  5116  0027C4  6E12               	movwf	Z_axis@direction^0,c
  5117  0027C6                     
  5118                           ;main.c: 459:         _delay((unsigned long)((20)*(200000000/4000.0)));
  5119  0027C6  0E04               	movlw	4
  5120  0027C8  6E11               	movwf	(??_Z_axis+1)^0,c
  5121  0027CA  0ECF               	movlw	207
  5122  0027CC  6E10               	movwf	??_Z_axis^0,c
  5123  0027CE  0EA5               	movlw	165
  5124  0027D0                     u6577:
  5125  0027D0  FFFF               	dw	65535	; errata NOP
  5126  0027D2  2EE8               	decfsz	wreg,f,c
  5127  0027D4  D7FD               	bra	u6577
  5128  0027D6  2E10               	decfsz	??_Z_axis^0,f,c
  5129  0027D8  D7FB               	bra	u6577
  5130  0027DA  2E11               	decfsz	(??_Z_axis+1)^0,f,c
  5131  0027DC  D7F9               	bra	u6577
  5132  0027DE  D000               	nop2	
  5133  0027E0                     
  5134                           ;main.c: 460:         if (direction == 0 && !stop){
  5135  0027E0  5012               	movf	Z_axis@direction^0,w,c
  5136  0027E2  A4D8               	btfss	status,2,c
  5137  0027E4  EFF6  F013         	goto	u5161
  5138  0027E8  EFF9  F013         	goto	u5160
  5139  0027EC                     u5161:
  5140  0027EC  FFFF               	dw	65535	; assembler added errata NOP
  5141  0027EE  EF30  F014         	goto	l4497
  5142  0027F2                     u5160:
  5143  0027F2  FFFF               	dw	65535	; assembler added errata NOP
  5144  0027F4  5072               	movf	_stop^0,w,c
  5145  0027F6  A4D8               	btfss	status,2,c
  5146  0027F8  EF00  F014         	goto	u5171
  5147  0027FC  EF03  F014         	goto	u5170
  5148  002800                     u5171:
  5149  002800  FFFF               	dw	65535	; assembler added errata NOP
  5150  002802  EF30  F014         	goto	l4497
  5151  002806                     u5170:
  5152  002806  FFFF               	dw	65535	; assembler added errata NOP
  5153  002808                     
  5154                           ;main.c: 461:             PORTD = 0b00000011;
  5155  002808  0E03               	movlw	3
  5156  00280A  6E83               	movwf	131,c	;volatile
  5157  00280C                     
  5158                           ;main.c: 462:             ms_delay(10);
  5159  00280C  0E00               	movlw	0
  5160  00280E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5161  002810  0E0A               	movlw	10
  5162  002812  6E0A               	movwf	ms_delay@val^0,c
  5163  002814  ECEA  F018         	call	_ms_delay	;wreg free
  5164  002818                     
  5165                           ;main.c: 463:             PORTD = 0b00000110;
  5166  002818  0E06               	movlw	6
  5167  00281A  6E83               	movwf	131,c	;volatile
  5168                           
  5169                           ;main.c: 464:             ms_delay(10);
  5170  00281C  0E00               	movlw	0
  5171  00281E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5172  002820  0E0A               	movlw	10
  5173  002822  6E0A               	movwf	ms_delay@val^0,c
  5174  002824  ECEA  F018         	call	_ms_delay	;wreg free
  5175  002828                     
  5176                           ;main.c: 465:             PORTD = 0b00001100;
  5177  002828  0E0C               	movlw	12
  5178  00282A  6E83               	movwf	131,c	;volatile
  5179  00282C                     
  5180                           ;main.c: 466:             ms_delay(10);
  5181  00282C  0E00               	movlw	0
  5182  00282E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5183  002830  0E0A               	movlw	10
  5184  002832  6E0A               	movwf	ms_delay@val^0,c
  5185  002834  ECEA  F018         	call	_ms_delay	;wreg free
  5186                           
  5187                           ;main.c: 467:             PORTD = 0b00001001;
  5188  002838  0E09               	movlw	9
  5189  00283A  6E83               	movwf	131,c	;volatile
  5190  00283C                     
  5191                           ;main.c: 468:             ms_delay(10);
  5192  00283C  0E00               	movlw	0
  5193  00283E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5194  002840  0E0A               	movlw	10
  5195  002842  6E0A               	movwf	ms_delay@val^0,c
  5196  002844  ECEA  F018         	call	_ms_delay	;wreg free
  5197  002848                     
  5198                           ;main.c: 469:             PORTD = 0b00000011;
  5199  002848  0E03               	movlw	3
  5200  00284A  6E83               	movwf	131,c	;volatile
  5201                           
  5202                           ;main.c: 470:             ms_delay(10);
  5203  00284C  0E00               	movlw	0
  5204  00284E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5205  002850  0E0A               	movlw	10
  5206  002852  6E0A               	movwf	ms_delay@val^0,c
  5207  002854  ECEA  F018         	call	_ms_delay	;wreg free
  5208  002858                     
  5209                           ;main.c: 471:             Step_Z--;
  5210  002858  0100               	movlb	0	; () banked
  5211  00285A  07B2               	decf	_Step_Z& (0+255),f,b
  5212  00285C  A0D8               	btfss	status,0,c
  5213  00285E  07B3               	decf	(_Step_Z+1)& (0+255),f,b
  5214  002860                     l4497:
  5215  002860  FFFF               	dw	65535	; assembler added errata NOP
  5216                           
  5217                           ;main.c: 473:         if (direction == 1 && !stop){
  5218  002862  0412               	decf	Z_axis@direction^0,w,c
  5219  002864  A4D8               	btfss	status,2,c
  5220  002866  EF37  F014         	goto	u5181
  5221  00286A  EF3A  F014         	goto	u5180
  5222  00286E                     u5181:
  5223  00286E  FFFF               	dw	65535	; assembler added errata NOP
  5224  002870  EF70  F014         	goto	l346
  5225  002874                     u5180:
  5226  002874  FFFF               	dw	65535	; assembler added errata NOP
  5227  002876  5072               	movf	_stop^0,w,c
  5228  002878  A4D8               	btfss	status,2,c
  5229  00287A  EF41  F014         	goto	u5191
  5230  00287E  EF44  F014         	goto	u5190
  5231  002882                     u5191:
  5232  002882  FFFF               	dw	65535	; assembler added errata NOP
  5233  002884  EF70  F014         	goto	l346
  5234  002888                     u5190:
  5235  002888  FFFF               	dw	65535	; assembler added errata NOP
  5236  00288A                     
  5237                           ;main.c: 474:             PORTD = 0b00001001;
  5238  00288A  0E09               	movlw	9
  5239  00288C  6E83               	movwf	131,c	;volatile
  5240  00288E                     
  5241                           ;main.c: 475:             ms_delay(10);
  5242  00288E  0E00               	movlw	0
  5243  002890  6E0B               	movwf	(ms_delay@val+1)^0,c
  5244  002892  0E0A               	movlw	10
  5245  002894  6E0A               	movwf	ms_delay@val^0,c
  5246  002896  ECEA  F018         	call	_ms_delay	;wreg free
  5247  00289A                     
  5248                           ;main.c: 476:             PORTD = 0b00001100;
  5249  00289A  0E0C               	movlw	12
  5250  00289C  6E83               	movwf	131,c	;volatile
  5251                           
  5252                           ;main.c: 477:             ms_delay(10);
  5253  00289E  0E00               	movlw	0
  5254  0028A0  6E0B               	movwf	(ms_delay@val+1)^0,c
  5255  0028A2  0E0A               	movlw	10
  5256  0028A4  6E0A               	movwf	ms_delay@val^0,c
  5257  0028A6  ECEA  F018         	call	_ms_delay	;wreg free
  5258  0028AA                     
  5259                           ;main.c: 478:             PORTD = 0b00000110;
  5260  0028AA  0E06               	movlw	6
  5261  0028AC  6E83               	movwf	131,c	;volatile
  5262  0028AE                     
  5263                           ;main.c: 479:             ms_delay(10);
  5264  0028AE  0E00               	movlw	0
  5265  0028B0  6E0B               	movwf	(ms_delay@val+1)^0,c
  5266  0028B2  0E0A               	movlw	10
  5267  0028B4  6E0A               	movwf	ms_delay@val^0,c
  5268  0028B6  ECEA  F018         	call	_ms_delay	;wreg free
  5269                           
  5270                           ;main.c: 480:             PORTD = 0b00000011;
  5271  0028BA  0E03               	movlw	3
  5272  0028BC  6E83               	movwf	131,c	;volatile
  5273  0028BE                     
  5274                           ;main.c: 481:             ms_delay(10);
  5275  0028BE  0E00               	movlw	0
  5276  0028C0  6E0B               	movwf	(ms_delay@val+1)^0,c
  5277  0028C2  0E0A               	movlw	10
  5278  0028C4  6E0A               	movwf	ms_delay@val^0,c
  5279  0028C6  ECEA  F018         	call	_ms_delay	;wreg free
  5280  0028CA                     
  5281                           ;main.c: 482:             PORTD = 0b00001001;
  5282  0028CA  0E09               	movlw	9
  5283  0028CC  6E83               	movwf	131,c	;volatile
  5284                           
  5285                           ;main.c: 483:             ms_delay(10);
  5286  0028CE  0E00               	movlw	0
  5287  0028D0  6E0B               	movwf	(ms_delay@val+1)^0,c
  5288  0028D2  0E0A               	movlw	10
  5289  0028D4  6E0A               	movwf	ms_delay@val^0,c
  5290  0028D6  ECEA  F018         	call	_ms_delay	;wreg free
  5291  0028DA                     
  5292                           ;main.c: 484:             Step_Z++;
  5293  0028DA  0100               	movlb	0	; () banked
  5294  0028DC  4BB2               	infsnz	_Step_Z& (0+255),f,b
  5295  0028DE  2BB3               	incf	(_Step_Z+1)& (0+255),f,b
  5296  0028E0                     l346:
  5297  0028E0  FFFF               	dw	65535	; assembler added errata NOP
  5298  0028E2  0012               	return		;funcret
  5299  0028E4  FFFF               	dw	65535	; errata NOP
  5300  0028E6                     __end_of_Z_axis:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function _Y_axis *****************
  5304 ;; Defined at:
  5305 ;;		line 429 in file "main.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  direction       1    wreg     unsigned char 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  direction       1   15[COMRAM] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5319 ;;      Params:         0       0       0       0       0       0       0
  5320 ;;      Locals:         1       0       0       0       0       0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0
  5322 ;;      Totals:         1       0       0       0       0       0       0
  5323 ;;Total ram usage:        1 bytes
  5324 ;; Hardware stack levels used: 1
  5325 ;; Hardware stack levels required when called: 3
  5326 ;; This function calls:
  5327 ;;		_ms_delay
  5328 ;; This function is called by:
  5329 ;;		_pick_and_place
  5330 ;;		_return_to_initial
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text14
  5335  0029F0                     __ptext14:
  5336                           	callstack 0
  5337  0029F0                     _Y_axis:
  5338                           	callstack 0
  5339  0029F0  FFFF               	dw	65535	; assembler added errata NOP
  5340                           
  5341                           ;incstack = 0
  5342                           ;Y_axis@direction stored from wreg
  5343  0029F2  6E10               	movwf	Y_axis@direction^0,c
  5344  0029F4                     
  5345                           ;main.c: 430:         if (direction == 0 && !stop){
  5346  0029F4  5010               	movf	Y_axis@direction^0,w,c
  5347  0029F6  A4D8               	btfss	status,2,c
  5348  0029F8  EF00  F015         	goto	u5121
  5349  0029FC  EF03  F015         	goto	u5120
  5350  002A00                     u5121:
  5351  002A00  FFFF               	dw	65535	; assembler added errata NOP
  5352  002A02  EF3A  F015         	goto	l4455
  5353  002A06                     u5120:
  5354  002A06  FFFF               	dw	65535	; assembler added errata NOP
  5355  002A08  5072               	movf	_stop^0,w,c
  5356  002A0A  A4D8               	btfss	status,2,c
  5357  002A0C  EF0A  F015         	goto	u5131
  5358  002A10  EF0D  F015         	goto	u5130
  5359  002A14                     u5131:
  5360  002A14  FFFF               	dw	65535	; assembler added errata NOP
  5361  002A16  EF3A  F015         	goto	l4455
  5362  002A1A                     u5130:
  5363  002A1A  FFFF               	dw	65535	; assembler added errata NOP
  5364  002A1C                     
  5365                           ;main.c: 431:             PORTB = 0b00110000;
  5366  002A1C  0E30               	movlw	48
  5367  002A1E  6E81               	movwf	129,c	;volatile
  5368  002A20                     
  5369                           ;main.c: 432:             ms_delay(1);
  5370  002A20  0E00               	movlw	0
  5371  002A22  6E0B               	movwf	(ms_delay@val+1)^0,c
  5372  002A24  0E01               	movlw	1
  5373  002A26  6E0A               	movwf	ms_delay@val^0,c
  5374  002A28  ECEA  F018         	call	_ms_delay	;wreg free
  5375  002A2C                     
  5376                           ;main.c: 433:             PORTB = 0b01100000;
  5377  002A2C  0E60               	movlw	96
  5378  002A2E  6E81               	movwf	129,c	;volatile
  5379                           
  5380                           ;main.c: 434:             ms_delay(1);
  5381  002A30  0E00               	movlw	0
  5382  002A32  6E0B               	movwf	(ms_delay@val+1)^0,c
  5383  002A34  0E01               	movlw	1
  5384  002A36  6E0A               	movwf	ms_delay@val^0,c
  5385  002A38  ECEA  F018         	call	_ms_delay	;wreg free
  5386  002A3C                     
  5387                           ;main.c: 435:             PORTB = 0b11000000;
  5388  002A3C  0EC0               	movlw	192
  5389  002A3E  6E81               	movwf	129,c	;volatile
  5390  002A40                     
  5391                           ;main.c: 436:             ms_delay(1);
  5392  002A40  0E00               	movlw	0
  5393  002A42  6E0B               	movwf	(ms_delay@val+1)^0,c
  5394  002A44  0E01               	movlw	1
  5395  002A46  6E0A               	movwf	ms_delay@val^0,c
  5396  002A48  ECEA  F018         	call	_ms_delay	;wreg free
  5397                           
  5398                           ;main.c: 437:             PORTB = 0b10010000;
  5399  002A4C  0E90               	movlw	144
  5400  002A4E  6E81               	movwf	129,c	;volatile
  5401  002A50                     
  5402                           ;main.c: 438:             ms_delay(1);
  5403  002A50  0E00               	movlw	0
  5404  002A52  6E0B               	movwf	(ms_delay@val+1)^0,c
  5405  002A54  0E01               	movlw	1
  5406  002A56  6E0A               	movwf	ms_delay@val^0,c
  5407  002A58  ECEA  F018         	call	_ms_delay	;wreg free
  5408  002A5C                     
  5409                           ;main.c: 439:             PORTB = 0b00110000;
  5410  002A5C  0E30               	movlw	48
  5411  002A5E  6E81               	movwf	129,c	;volatile
  5412                           
  5413                           ;main.c: 440:             ms_delay(1);
  5414  002A60  0E00               	movlw	0
  5415  002A62  6E0B               	movwf	(ms_delay@val+1)^0,c
  5416  002A64  0E01               	movlw	1
  5417  002A66  6E0A               	movwf	ms_delay@val^0,c
  5418  002A68  ECEA  F018         	call	_ms_delay	;wreg free
  5419  002A6C                     
  5420                           ;main.c: 441:             Step_Y--;
  5421  002A6C  0100               	movlb	0	; () banked
  5422  002A6E  07B4               	decf	_Step_Y& (0+255),f,b
  5423  002A70  A0D8               	btfss	status,0,c
  5424  002A72  07B5               	decf	(_Step_Y+1)& (0+255),f,b
  5425  002A74                     l4455:
  5426  002A74  FFFF               	dw	65535	; assembler added errata NOP
  5427                           
  5428                           ;main.c: 443:         if (direction == 1 && !stop){
  5429  002A76  0410               	decf	Y_axis@direction^0,w,c
  5430  002A78  A4D8               	btfss	status,2,c
  5431  002A7A  EF41  F015         	goto	u5141
  5432  002A7E  EF44  F015         	goto	u5140
  5433  002A82                     u5141:
  5434  002A82  FFFF               	dw	65535	; assembler added errata NOP
  5435  002A84  EF7A  F015         	goto	l341
  5436  002A88                     u5140:
  5437  002A88  FFFF               	dw	65535	; assembler added errata NOP
  5438  002A8A  5072               	movf	_stop^0,w,c
  5439  002A8C  A4D8               	btfss	status,2,c
  5440  002A8E  EF4B  F015         	goto	u5151
  5441  002A92  EF4E  F015         	goto	u5150
  5442  002A96                     u5151:
  5443  002A96  FFFF               	dw	65535	; assembler added errata NOP
  5444  002A98  EF7A  F015         	goto	l341
  5445  002A9C                     u5150:
  5446  002A9C  FFFF               	dw	65535	; assembler added errata NOP
  5447  002A9E                     
  5448                           ;main.c: 444:             PORTB = 0b10010000;
  5449  002A9E  0E90               	movlw	144
  5450  002AA0  6E81               	movwf	129,c	;volatile
  5451  002AA2                     
  5452                           ;main.c: 445:             ms_delay(1);
  5453  002AA2  0E00               	movlw	0
  5454  002AA4  6E0B               	movwf	(ms_delay@val+1)^0,c
  5455  002AA6  0E01               	movlw	1
  5456  002AA8  6E0A               	movwf	ms_delay@val^0,c
  5457  002AAA  ECEA  F018         	call	_ms_delay	;wreg free
  5458  002AAE                     
  5459                           ;main.c: 446:             PORTB = 0b11000000;
  5460  002AAE  0EC0               	movlw	192
  5461  002AB0  6E81               	movwf	129,c	;volatile
  5462                           
  5463                           ;main.c: 447:             ms_delay(1);
  5464  002AB2  0E00               	movlw	0
  5465  002AB4  6E0B               	movwf	(ms_delay@val+1)^0,c
  5466  002AB6  0E01               	movlw	1
  5467  002AB8  6E0A               	movwf	ms_delay@val^0,c
  5468  002ABA  ECEA  F018         	call	_ms_delay	;wreg free
  5469  002ABE                     
  5470                           ;main.c: 448:             PORTB = 0b01100000;
  5471  002ABE  0E60               	movlw	96
  5472  002AC0  6E81               	movwf	129,c	;volatile
  5473  002AC2                     
  5474                           ;main.c: 449:             ms_delay(1);
  5475  002AC2  0E00               	movlw	0
  5476  002AC4  6E0B               	movwf	(ms_delay@val+1)^0,c
  5477  002AC6  0E01               	movlw	1
  5478  002AC8  6E0A               	movwf	ms_delay@val^0,c
  5479  002ACA  ECEA  F018         	call	_ms_delay	;wreg free
  5480                           
  5481                           ;main.c: 450:             PORTB = 0b00110000;
  5482  002ACE  0E30               	movlw	48
  5483  002AD0  6E81               	movwf	129,c	;volatile
  5484  002AD2                     
  5485                           ;main.c: 451:             ms_delay(1);
  5486  002AD2  0E00               	movlw	0
  5487  002AD4  6E0B               	movwf	(ms_delay@val+1)^0,c
  5488  002AD6  0E01               	movlw	1
  5489  002AD8  6E0A               	movwf	ms_delay@val^0,c
  5490  002ADA  ECEA  F018         	call	_ms_delay	;wreg free
  5491  002ADE                     
  5492                           ;main.c: 452:             PORTB = 0b10010000;
  5493  002ADE  0E90               	movlw	144
  5494  002AE0  6E81               	movwf	129,c	;volatile
  5495                           
  5496                           ;main.c: 453:             ms_delay(1);
  5497  002AE2  0E00               	movlw	0
  5498  002AE4  6E0B               	movwf	(ms_delay@val+1)^0,c
  5499  002AE6  0E01               	movlw	1
  5500  002AE8  6E0A               	movwf	ms_delay@val^0,c
  5501  002AEA  ECEA  F018         	call	_ms_delay	;wreg free
  5502  002AEE                     
  5503                           ;main.c: 454:             Step_Y++;
  5504  002AEE  0100               	movlb	0	; () banked
  5505  002AF0  4BB4               	infsnz	_Step_Y& (0+255),f,b
  5506  002AF2  2BB5               	incf	(_Step_Y+1)& (0+255),f,b
  5507  002AF4                     l341:
  5508  002AF4  FFFF               	dw	65535	; assembler added errata NOP
  5509  002AF6  0012               	return		;funcret
  5510  002AF8  FFFF               	dw	65535	; errata NOP
  5511  002AFA                     __end_of_Y_axis:
  5512                           	callstack 0
  5513                           
  5514 ;; *************** function _X_axis *****************
  5515 ;; Defined at:
  5516 ;;		line 399 in file "main.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;  direction       1    wreg     unsigned char 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  direction       1   15[COMRAM] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5530 ;;      Params:         0       0       0       0       0       0       0
  5531 ;;      Locals:         1       0       0       0       0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0
  5533 ;;      Totals:         1       0       0       0       0       0       0
  5534 ;;Total ram usage:        1 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; Hardware stack levels required when called: 3
  5537 ;; This function calls:
  5538 ;;		_ms_delay
  5539 ;; This function is called by:
  5540 ;;		_pick_and_place
  5541 ;;		_return_to_initial
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text15
  5546  002AFA                     __ptext15:
  5547                           	callstack 0
  5548  002AFA                     _X_axis:
  5549                           	callstack 0
  5550  002AFA  FFFF               	dw	65535	; assembler added errata NOP
  5551                           
  5552                           ;incstack = 0
  5553                           ;X_axis@direction stored from wreg
  5554  002AFC  6E10               	movwf	X_axis@direction^0,c
  5555  002AFE                     
  5556                           ;main.c: 400:         if (direction == 0 && !stop){
  5557  002AFE  5010               	movf	X_axis@direction^0,w,c
  5558  002B00  A4D8               	btfss	status,2,c
  5559  002B02  EF85  F015         	goto	u5081
  5560  002B06  EF88  F015         	goto	u5080
  5561  002B0A                     u5081:
  5562  002B0A  FFFF               	dw	65535	; assembler added errata NOP
  5563  002B0C  EFBF  F015         	goto	l4415
  5564  002B10                     u5080:
  5565  002B10  FFFF               	dw	65535	; assembler added errata NOP
  5566  002B12  5072               	movf	_stop^0,w,c
  5567  002B14  A4D8               	btfss	status,2,c
  5568  002B16  EF8F  F015         	goto	u5091
  5569  002B1A  EF92  F015         	goto	u5090
  5570  002B1E                     u5091:
  5571  002B1E  FFFF               	dw	65535	; assembler added errata NOP
  5572  002B20  EFBF  F015         	goto	l4415
  5573  002B24                     u5090:
  5574  002B24  FFFF               	dw	65535	; assembler added errata NOP
  5575  002B26                     
  5576                           ;main.c: 401:             PORTA = 0b00000011;
  5577  002B26  0E03               	movlw	3
  5578  002B28  6E80               	movwf	128,c	;volatile
  5579  002B2A                     
  5580                           ;main.c: 402:             ms_delay(1);
  5581  002B2A  0E00               	movlw	0
  5582  002B2C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5583  002B2E  0E01               	movlw	1
  5584  002B30  6E0A               	movwf	ms_delay@val^0,c
  5585  002B32  ECEA  F018         	call	_ms_delay	;wreg free
  5586  002B36                     
  5587                           ;main.c: 403:             PORTA = 0b00000110;
  5588  002B36  0E06               	movlw	6
  5589  002B38  6E80               	movwf	128,c	;volatile
  5590                           
  5591                           ;main.c: 404:             ms_delay(1);
  5592  002B3A  0E00               	movlw	0
  5593  002B3C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5594  002B3E  0E01               	movlw	1
  5595  002B40  6E0A               	movwf	ms_delay@val^0,c
  5596  002B42  ECEA  F018         	call	_ms_delay	;wreg free
  5597  002B46                     
  5598                           ;main.c: 405:             PORTA = 0b00001100;
  5599  002B46  0E0C               	movlw	12
  5600  002B48  6E80               	movwf	128,c	;volatile
  5601  002B4A                     
  5602                           ;main.c: 406:             ms_delay(1);
  5603  002B4A  0E00               	movlw	0
  5604  002B4C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5605  002B4E  0E01               	movlw	1
  5606  002B50  6E0A               	movwf	ms_delay@val^0,c
  5607  002B52  ECEA  F018         	call	_ms_delay	;wreg free
  5608                           
  5609                           ;main.c: 407:             PORTA = 0b00001001;
  5610  002B56  0E09               	movlw	9
  5611  002B58  6E80               	movwf	128,c	;volatile
  5612  002B5A                     
  5613                           ;main.c: 408:             ms_delay(1);
  5614  002B5A  0E00               	movlw	0
  5615  002B5C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5616  002B5E  0E01               	movlw	1
  5617  002B60  6E0A               	movwf	ms_delay@val^0,c
  5618  002B62  ECEA  F018         	call	_ms_delay	;wreg free
  5619  002B66                     
  5620                           ;main.c: 409:             PORTA = 0b00000011;
  5621  002B66  0E03               	movlw	3
  5622  002B68  6E80               	movwf	128,c	;volatile
  5623                           
  5624                           ;main.c: 410:             ms_delay(1);
  5625  002B6A  0E00               	movlw	0
  5626  002B6C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5627  002B6E  0E01               	movlw	1
  5628  002B70  6E0A               	movwf	ms_delay@val^0,c
  5629  002B72  ECEA  F018         	call	_ms_delay	;wreg free
  5630  002B76                     
  5631                           ;main.c: 411:             Step_X--;
  5632  002B76  0100               	movlb	0	; () banked
  5633  002B78  07B6               	decf	_Step_X& (0+255),f,b
  5634  002B7A  A0D8               	btfss	status,0,c
  5635  002B7C  07B7               	decf	(_Step_X+1)& (0+255),f,b
  5636  002B7E                     l4415:
  5637  002B7E  FFFF               	dw	65535	; assembler added errata NOP
  5638                           
  5639                           ;main.c: 413:         if (direction == 1 && !stop){
  5640  002B80  0410               	decf	X_axis@direction^0,w,c
  5641  002B82  A4D8               	btfss	status,2,c
  5642  002B84  EFC6  F015         	goto	u5101
  5643  002B88  EFC9  F015         	goto	u5100
  5644  002B8C                     u5101:
  5645  002B8C  FFFF               	dw	65535	; assembler added errata NOP
  5646  002B8E  EFFF  F015         	goto	l336
  5647  002B92                     u5100:
  5648  002B92  FFFF               	dw	65535	; assembler added errata NOP
  5649  002B94  5072               	movf	_stop^0,w,c
  5650  002B96  A4D8               	btfss	status,2,c
  5651  002B98  EFD0  F015         	goto	u5111
  5652  002B9C  EFD3  F015         	goto	u5110
  5653  002BA0                     u5111:
  5654  002BA0  FFFF               	dw	65535	; assembler added errata NOP
  5655  002BA2  EFFF  F015         	goto	l336
  5656  002BA6                     u5110:
  5657  002BA6  FFFF               	dw	65535	; assembler added errata NOP
  5658  002BA8                     
  5659                           ;main.c: 414:             PORTA = 0b00001001;
  5660  002BA8  0E09               	movlw	9
  5661  002BAA  6E80               	movwf	128,c	;volatile
  5662  002BAC                     
  5663                           ;main.c: 415:             ms_delay(1);
  5664  002BAC  0E00               	movlw	0
  5665  002BAE  6E0B               	movwf	(ms_delay@val+1)^0,c
  5666  002BB0  0E01               	movlw	1
  5667  002BB2  6E0A               	movwf	ms_delay@val^0,c
  5668  002BB4  ECEA  F018         	call	_ms_delay	;wreg free
  5669  002BB8                     
  5670                           ;main.c: 416:             PORTA = 0b00001100;
  5671  002BB8  0E0C               	movlw	12
  5672  002BBA  6E80               	movwf	128,c	;volatile
  5673                           
  5674                           ;main.c: 417:             ms_delay(1);
  5675  002BBC  0E00               	movlw	0
  5676  002BBE  6E0B               	movwf	(ms_delay@val+1)^0,c
  5677  002BC0  0E01               	movlw	1
  5678  002BC2  6E0A               	movwf	ms_delay@val^0,c
  5679  002BC4  ECEA  F018         	call	_ms_delay	;wreg free
  5680  002BC8                     
  5681                           ;main.c: 418:             PORTA = 0b00000110;
  5682  002BC8  0E06               	movlw	6
  5683  002BCA  6E80               	movwf	128,c	;volatile
  5684  002BCC                     
  5685                           ;main.c: 419:             ms_delay(1);
  5686  002BCC  0E00               	movlw	0
  5687  002BCE  6E0B               	movwf	(ms_delay@val+1)^0,c
  5688  002BD0  0E01               	movlw	1
  5689  002BD2  6E0A               	movwf	ms_delay@val^0,c
  5690  002BD4  ECEA  F018         	call	_ms_delay	;wreg free
  5691                           
  5692                           ;main.c: 420:             PORTA = 0b00000011;
  5693  002BD8  0E03               	movlw	3
  5694  002BDA  6E80               	movwf	128,c	;volatile
  5695  002BDC                     
  5696                           ;main.c: 421:             ms_delay(1);
  5697  002BDC  0E00               	movlw	0
  5698  002BDE  6E0B               	movwf	(ms_delay@val+1)^0,c
  5699  002BE0  0E01               	movlw	1
  5700  002BE2  6E0A               	movwf	ms_delay@val^0,c
  5701  002BE4  ECEA  F018         	call	_ms_delay	;wreg free
  5702  002BE8                     
  5703                           ;main.c: 422:             PORTA = 0b00001001;
  5704  002BE8  0E09               	movlw	9
  5705  002BEA  6E80               	movwf	128,c	;volatile
  5706                           
  5707                           ;main.c: 423:             ms_delay(1);
  5708  002BEC  0E00               	movlw	0
  5709  002BEE  6E0B               	movwf	(ms_delay@val+1)^0,c
  5710  002BF0  0E01               	movlw	1
  5711  002BF2  6E0A               	movwf	ms_delay@val^0,c
  5712  002BF4  ECEA  F018         	call	_ms_delay	;wreg free
  5713  002BF8                     
  5714                           ;main.c: 424:             Step_X++;
  5715  002BF8  0100               	movlb	0	; () banked
  5716  002BFA  4BB6               	infsnz	_Step_X& (0+255),f,b
  5717  002BFC  2BB7               	incf	(_Step_X+1)& (0+255),f,b
  5718  002BFE                     l336:
  5719  002BFE  FFFF               	dw	65535	; assembler added errata NOP
  5720  002C00  0012               	return		;funcret
  5721  002C02  FFFF               	dw	65535	; errata NOP
  5722  002C04                     __end_of_X_axis:
  5723                           	callstack 0
  5724                           
  5725 ;; *************** function _Twister *****************
  5726 ;; Defined at:
  5727 ;;		line 488 in file "main.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  direction       1    wreg     unsigned char 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  direction       1   15[COMRAM] unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5741 ;;      Params:         0       0       0       0       0       0       0
  5742 ;;      Locals:         1       0       0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0
  5744 ;;      Totals:         1       0       0       0       0       0       0
  5745 ;;Total ram usage:        1 bytes
  5746 ;; Hardware stack levels used: 1
  5747 ;; Hardware stack levels required when called: 3
  5748 ;; This function calls:
  5749 ;;		_ms_delay
  5750 ;; This function is called by:
  5751 ;;		_pick_and_place
  5752 ;;		_return_to_initial
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text16
  5757  002CFE                     __ptext16:
  5758                           	callstack 0
  5759  002CFE                     _Twister:
  5760                           	callstack 0
  5761  002CFE  FFFF               	dw	65535	; assembler added errata NOP
  5762                           
  5763                           ;incstack = 0
  5764                           ;Twister@direction stored from wreg
  5765  002D00  6E10               	movwf	Twister@direction^0,c
  5766  002D02                     
  5767                           ;main.c: 489:         if (direction == 0 && !stop){
  5768  002D02  5010               	movf	Twister@direction^0,w,c
  5769  002D04  A4D8               	btfss	status,2,c
  5770  002D06  EF87  F016         	goto	u5201
  5771  002D0A  EF8A  F016         	goto	u5200
  5772  002D0E                     u5201:
  5773  002D0E  FFFF               	dw	65535	; assembler added errata NOP
  5774  002D10  EFB9  F016         	goto	l4535
  5775  002D14                     u5200:
  5776  002D14  FFFF               	dw	65535	; assembler added errata NOP
  5777  002D16  5072               	movf	_stop^0,w,c
  5778  002D18  A4D8               	btfss	status,2,c
  5779  002D1A  EF91  F016         	goto	u5211
  5780  002D1E  EF94  F016         	goto	u5210
  5781  002D22                     u5211:
  5782  002D22  FFFF               	dw	65535	; assembler added errata NOP
  5783  002D24  EFB9  F016         	goto	l4535
  5784  002D28                     u5210:
  5785  002D28  FFFF               	dw	65535	; assembler added errata NOP
  5786  002D2A                     
  5787                           ;main.c: 490:             PORTD = 0b00110000;
  5788  002D2A  0E30               	movlw	48
  5789  002D2C  6E83               	movwf	131,c	;volatile
  5790  002D2E                     
  5791                           ;main.c: 491:             ms_delay(1);
  5792  002D2E  0E00               	movlw	0
  5793  002D30  6E0B               	movwf	(ms_delay@val+1)^0,c
  5794  002D32  0E01               	movlw	1
  5795  002D34  6E0A               	movwf	ms_delay@val^0,c
  5796  002D36  ECEA  F018         	call	_ms_delay	;wreg free
  5797  002D3A                     
  5798                           ;main.c: 492:             PORTD = 0b11000000;
  5799  002D3A  0EC0               	movlw	192
  5800  002D3C  6E83               	movwf	131,c	;volatile
  5801                           
  5802                           ;main.c: 493:             ms_delay(1);
  5803  002D3E  0E00               	movlw	0
  5804  002D40  6E0B               	movwf	(ms_delay@val+1)^0,c
  5805  002D42  0E01               	movlw	1
  5806  002D44  6E0A               	movwf	ms_delay@val^0,c
  5807  002D46  ECEA  F018         	call	_ms_delay	;wreg free
  5808  002D4A                     
  5809                           ;main.c: 494:             PORTD = 0b10010000;
  5810  002D4A  0E90               	movlw	144
  5811  002D4C  6E83               	movwf	131,c	;volatile
  5812  002D4E                     
  5813                           ;main.c: 495:             ms_delay(1);
  5814  002D4E  0E00               	movlw	0
  5815  002D50  6E0B               	movwf	(ms_delay@val+1)^0,c
  5816  002D52  0E01               	movlw	1
  5817  002D54  6E0A               	movwf	ms_delay@val^0,c
  5818  002D56  ECEA  F018         	call	_ms_delay	;wreg free
  5819                           
  5820                           ;main.c: 496:             PORTD = 0b00110000;
  5821  002D5A  0E30               	movlw	48
  5822  002D5C  6E83               	movwf	131,c	;volatile
  5823  002D5E                     
  5824                           ;main.c: 497:             ms_delay(1);
  5825  002D5E  0E00               	movlw	0
  5826  002D60  6E0B               	movwf	(ms_delay@val+1)^0,c
  5827  002D62  0E01               	movlw	1
  5828  002D64  6E0A               	movwf	ms_delay@val^0,c
  5829  002D66  ECEA  F018         	call	_ms_delay	;wreg free
  5830  002D6A                     
  5831                           ;main.c: 498:             Step_Angle--;
  5832  002D6A  0100               	movlb	0	; () banked
  5833  002D6C  07B0               	decf	_Step_Angle& (0+255),f,b
  5834  002D6E  A0D8               	btfss	status,0,c
  5835  002D70  07B1               	decf	(_Step_Angle+1)& (0+255),f,b
  5836  002D72                     l4535:
  5837  002D72  FFFF               	dw	65535	; assembler added errata NOP
  5838                           
  5839                           ;main.c: 500:         if (direction == 1 && !stop){
  5840  002D74  0410               	decf	Twister@direction^0,w,c
  5841  002D76  A4D8               	btfss	status,2,c
  5842  002D78  EFC0  F016         	goto	u5221
  5843  002D7C  EFC3  F016         	goto	u5220
  5844  002D80                     u5221:
  5845  002D80  FFFF               	dw	65535	; assembler added errata NOP
  5846  002D82  EFF1  F016         	goto	l351
  5847  002D86                     u5220:
  5848  002D86  FFFF               	dw	65535	; assembler added errata NOP
  5849  002D88  5072               	movf	_stop^0,w,c
  5850  002D8A  A4D8               	btfss	status,2,c
  5851  002D8C  EFCA  F016         	goto	u5231
  5852  002D90  EFCD  F016         	goto	u5230
  5853  002D94                     u5231:
  5854  002D94  FFFF               	dw	65535	; assembler added errata NOP
  5855  002D96  EFF1  F016         	goto	l351
  5856  002D9A                     u5230:
  5857  002D9A  FFFF               	dw	65535	; assembler added errata NOP
  5858  002D9C                     
  5859                           ;main.c: 501:             PORTD = 0b10010000;
  5860  002D9C  0E90               	movlw	144
  5861  002D9E  6E83               	movwf	131,c	;volatile
  5862  002DA0                     
  5863                           ;main.c: 502:             ms_delay(1);
  5864  002DA0  0E00               	movlw	0
  5865  002DA2  6E0B               	movwf	(ms_delay@val+1)^0,c
  5866  002DA4  0E01               	movlw	1
  5867  002DA6  6E0A               	movwf	ms_delay@val^0,c
  5868  002DA8  ECEA  F018         	call	_ms_delay	;wreg free
  5869  002DAC                     
  5870                           ;main.c: 503:             PORTD = 0b01100000;
  5871  002DAC  0E60               	movlw	96
  5872  002DAE  6E83               	movwf	131,c	;volatile
  5873                           
  5874                           ;main.c: 504:             ms_delay(1);
  5875  002DB0  0E00               	movlw	0
  5876  002DB2  6E0B               	movwf	(ms_delay@val+1)^0,c
  5877  002DB4  0E01               	movlw	1
  5878  002DB6  6E0A               	movwf	ms_delay@val^0,c
  5879  002DB8  ECEA  F018         	call	_ms_delay	;wreg free
  5880  002DBC                     
  5881                           ;main.c: 505:             PORTD = 0b00110000;
  5882  002DBC  0E30               	movlw	48
  5883  002DBE  6E83               	movwf	131,c	;volatile
  5884  002DC0                     
  5885                           ;main.c: 506:             ms_delay(1);
  5886  002DC0  0E00               	movlw	0
  5887  002DC2  6E0B               	movwf	(ms_delay@val+1)^0,c
  5888  002DC4  0E01               	movlw	1
  5889  002DC6  6E0A               	movwf	ms_delay@val^0,c
  5890  002DC8  ECEA  F018         	call	_ms_delay	;wreg free
  5891                           
  5892                           ;main.c: 507:             PORTD = 0b10010000;
  5893  002DCC  0E90               	movlw	144
  5894  002DCE  6E83               	movwf	131,c	;volatile
  5895  002DD0                     
  5896                           ;main.c: 508:             ms_delay(1);
  5897  002DD0  0E00               	movlw	0
  5898  002DD2  6E0B               	movwf	(ms_delay@val+1)^0,c
  5899  002DD4  0E01               	movlw	1
  5900  002DD6  6E0A               	movwf	ms_delay@val^0,c
  5901  002DD8  ECEA  F018         	call	_ms_delay	;wreg free
  5902  002DDC                     
  5903                           ;main.c: 509:             Step_Angle++;
  5904  002DDC  0100               	movlb	0	; () banked
  5905  002DDE  4BB0               	infsnz	_Step_Angle& (0+255),f,b
  5906  002DE0  2BB1               	incf	(_Step_Angle+1)& (0+255),f,b
  5907  002DE2                     l351:
  5908  002DE2  FFFF               	dw	65535	; assembler added errata NOP
  5909  002DE4  0012               	return		;funcret
  5910  002DE6  FFFF               	dw	65535	; errata NOP
  5911  002DE8                     __end_of_Twister:
  5912                           	callstack 0
  5913                           
  5914 ;; *************** function _ms_delay *****************
  5915 ;; Defined at:
  5916 ;;		line 557 in file "main.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  val             2    9[COMRAM] unsigned int 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  j               2   13[COMRAM] unsigned int 
  5921 ;;  i               2   11[COMRAM] unsigned int 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      void 
  5924 ;; Registers used:
  5925 ;;		wreg, status,2, status,0
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5931 ;;      Params:         2       0       0       0       0       0       0
  5932 ;;      Locals:         4       0       0       0       0       0       0
  5933 ;;      Temps:          0       0       0       0       0       0       0
  5934 ;;      Totals:         6       0       0       0       0       0       0
  5935 ;;Total ram usage:        6 bytes
  5936 ;; Hardware stack levels used: 1
  5937 ;; Hardware stack levels required when called: 2
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_X_axis
  5942 ;;		_Y_axis
  5943 ;;		_Z_axis
  5944 ;;		_Twister
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text17
  5949  0031D4                     __ptext17:
  5950                           	callstack 0
  5951  0031D4                     _ms_delay:
  5952                           	callstack 0
  5953  0031D4  FFFF               	dw	65535	; assembler added errata NOP
  5954  0031D6                     
  5955                           ;main.c: 557: void ms_delay(unsigned int val);main.c: 558: {;main.c: 559:      unsigned 
      +                          int i,j;;main.c: 560:         for(i=0;i<val;i++);
  5956  0031D6  0E00               	movlw	0
  5957  0031D8  6E0D               	movwf	(ms_delay@i+1)^0,c
  5958  0031DA  0E00               	movlw	0
  5959  0031DC  6E0C               	movwf	ms_delay@i^0,c
  5960  0031DE  EFF4  F018         	goto	l4383
  5961  0031E2                     l4381:
  5962  0031E2  FFFF               	dw	65535	; assembler added errata NOP
  5963  0031E4  4A0C               	infsnz	ms_delay@i^0,f,c
  5964  0031E6  2A0D               	incf	(ms_delay@i+1)^0,f,c
  5965  0031E8                     l4383:
  5966  0031E8  FFFF               	dw	65535	; assembler added errata NOP
  5967  0031EA  500A               	movf	ms_delay@val^0,w,c
  5968  0031EC  5C0C               	subwf	ms_delay@i^0,w,c
  5969  0031EE  500B               	movf	(ms_delay@val+1)^0,w,c
  5970  0031F0  580D               	subwfb	(ms_delay@i+1)^0,w,c
  5971  0031F2  A0D8               	btfss	status,0,c
  5972  0031F4  EFFE  F018         	goto	u5061
  5973  0031F8  EF01  F019         	goto	u5060
  5974  0031FC                     u5061:
  5975  0031FC  FFFF               	dw	65535	; assembler added errata NOP
  5976  0031FE  EFF1  F018         	goto	l4381
  5977  003202                     u5060:
  5978  003202  FFFF               	dw	65535	; assembler added errata NOP
  5979  003204                     
  5980                           ;main.c: 561:         for(j=0;j<1650;j++);
  5981  003204  0E00               	movlw	0
  5982  003206  6E0F               	movwf	(ms_delay@j+1)^0,c
  5983  003208  0E00               	movlw	0
  5984  00320A  6E0E               	movwf	ms_delay@j^0,c
  5985  00320C                     l4391:
  5986  00320C  FFFF               	dw	65535	; assembler added errata NOP
  5987  00320E  4A0E               	infsnz	ms_delay@j^0,f,c
  5988  003210  2A0F               	incf	(ms_delay@j+1)^0,f,c
  5989  003212  0E72               	movlw	114
  5990  003214  5C0E               	subwf	ms_delay@j^0,w,c
  5991  003216  0E06               	movlw	6
  5992  003218  580F               	subwfb	(ms_delay@j+1)^0,w,c
  5993  00321A  A0D8               	btfss	status,0,c
  5994  00321C  EF12  F019         	goto	u5071
  5995  003220  EF15  F019         	goto	u5070
  5996  003224                     u5071:
  5997  003224  FFFF               	dw	65535	; assembler added errata NOP
  5998  003226  EF06  F019         	goto	l4391
  5999  00322A                     u5070:
  6000  00322A  FFFF               	dw	65535	; assembler added errata NOP
  6001  00322C  0012               	return		;funcret
  6002  00322E  FFFF               	dw	65535	; errata NOP
  6003  003230                     __end_of_ms_delay:
  6004                           	callstack 0
  6005                           
  6006 ;; *************** function _Tweezer *****************
  6007 ;; Defined at:
  6008 ;;		line 543 in file "main.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  action          1    wreg     unsigned char 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  action          1    9[COMRAM] unsigned char 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  1    wreg      void 
  6015 ;; Registers used:
  6016 ;;		wreg, status,2, status,0
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6022 ;;      Params:         0       0       0       0       0       0       0
  6023 ;;      Locals:         1       0       0       0       0       0       0
  6024 ;;      Temps:          0       0       0       0       0       0       0
  6025 ;;      Totals:         1       0       0       0       0       0       0
  6026 ;;Total ram usage:        1 bytes
  6027 ;; Hardware stack levels used: 1
  6028 ;; Hardware stack levels required when called: 2
  6029 ;; This function calls:
  6030 ;;		Nothing
  6031 ;; This function is called by:
  6032 ;;		_pick_and_place
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           	psect	text18
  6037  003100                     __ptext18:
  6038                           	callstack 0
  6039  003100                     _Tweezer:
  6040                           	callstack 0
  6041  003100  FFFF               	dw	65535	; assembler added errata NOP
  6042                           
  6043                           ;incstack = 0
  6044                           ;Tweezer@action stored from wreg
  6045  003102  6E0A               	movwf	Tweezer@action^0,c
  6046  003104                     
  6047                           ;main.c: 544:         if(action==1 && !stop){
  6048  003104  040A               	decf	Tweezer@action^0,w,c
  6049  003106  A4D8               	btfss	status,2,c
  6050  003108  EF88  F018         	goto	u5241
  6051  00310C  EF8B  F018         	goto	u5240
  6052  003110                     u5241:
  6053  003110  FFFF               	dw	65535	; assembler added errata NOP
  6054  003112  EF9B  F018         	goto	l357
  6055  003116                     u5240:
  6056  003116  FFFF               	dw	65535	; assembler added errata NOP
  6057  003118  5072               	movf	_stop^0,w,c
  6058  00311A  A4D8               	btfss	status,2,c
  6059  00311C  EF92  F018         	goto	u5251
  6060  003120  EF95  F018         	goto	u5250
  6061  003124                     u5251:
  6062  003124  FFFF               	dw	65535	; assembler added errata NOP
  6063  003126  EF9B  F018         	goto	l357
  6064  00312A                     u5250:
  6065  00312A  FFFF               	dw	65535	; assembler added errata NOP
  6066  00312C                     
  6067                           ;main.c: 545:             new_TMR1H = 0xF9;
  6068  00312C  0EF9               	movlw	249
  6069  00312E  0100               	movlb	0	; () banked
  6070  003130  6FED               	movwf	_new_TMR1H@main$F825& (0+255),b
  6071                           
  6072                           ;main.c: 546:             new_TMR1L = 0x53;
  6073  003132  0E53               	movlw	83
  6074  003134  6FEC               	movwf	_new_TMR1L@main$F826& (0+255),b
  6075  003136                     l357:
  6076  003136  FFFF               	dw	65535	; assembler added errata NOP
  6077                           
  6078                           ;main.c: 549:         if(action == 0 && !stop){
  6079  003138  500A               	movf	Tweezer@action^0,w,c
  6080  00313A  A4D8               	btfss	status,2,c
  6081  00313C  EFA2  F018         	goto	u5261
  6082  003140  EFA5  F018         	goto	u5260
  6083  003144                     u5261:
  6084  003144  FFFF               	dw	65535	; assembler added errata NOP
  6085  003146  EFB5  F018         	goto	l4563
  6086  00314A                     u5260:
  6087  00314A  FFFF               	dw	65535	; assembler added errata NOP
  6088  00314C  5072               	movf	_stop^0,w,c
  6089  00314E  A4D8               	btfss	status,2,c
  6090  003150  EFAC  F018         	goto	u5271
  6091  003154  EFAF  F018         	goto	u5270
  6092  003158                     u5271:
  6093  003158  FFFF               	dw	65535	; assembler added errata NOP
  6094  00315A  EFB5  F018         	goto	l4563
  6095  00315E                     u5270:
  6096  00315E  FFFF               	dw	65535	; assembler added errata NOP
  6097  003160                     
  6098                           ;main.c: 550:             new_TMR1H= 0xFA;
  6099  003160  0EFA               	movlw	250
  6100  003162  0100               	movlb	0	; () banked
  6101  003164  6FED               	movwf	_new_TMR1H@main$F825& (0+255),b
  6102                           
  6103                           ;main.c: 551:             new_TMR1L= 0x60;
  6104  003166  0E60               	movlw	96
  6105  003168  6FEC               	movwf	_new_TMR1L@main$F826& (0+255),b
  6106  00316A                     l4563:
  6107  00316A  FFFF               	dw	65535	; assembler added errata NOP
  6108                           
  6109                           ;main.c: 553:         LATCbits.LC2=1;
  6110  00316C  848B               	bsf	139,2,c	;volatile
  6111  00316E                     
  6112                           ;main.c: 554:         T1CONbits.TMR1ON=1;
  6113  00316E  80CD               	bsf	205,0,c	;volatile
  6114  003170  0012               	return		;funcret
  6115  003172  FFFF               	dw	65535	; errata NOP
  6116  003174                     __end_of_Tweezer:
  6117                           	callstack 0
  6118                           
  6119 ;; *************** function _change_sequence *****************
  6120 ;; Defined at:
  6121 ;;		line 275 in file "main.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;		None
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  i               2   18[COMRAM] int 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6135 ;;      Params:         0       0       0       0       0       0       0
  6136 ;;      Locals:         2       0       0       0       0       0       0
  6137 ;;      Temps:          3       0       0       0       0       0       0
  6138 ;;      Totals:         5       0       0       0       0       0       0
  6139 ;;Total ram usage:        5 bytes
  6140 ;; Hardware stack levels used: 1
  6141 ;; Hardware stack levels required when called: 3
  6142 ;; This function calls:
  6143 ;;		_print_string
  6144 ;; This function is called by:
  6145 ;;		_start_up_menu
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text19
  6150  002F60                     __ptext19:
  6151                           	callstack 0
  6152  002F60                     _change_sequence:
  6153                           	callstack 0
  6154  002F60  FFFF               	dw	65535	; assembler added errata NOP
  6155  002F62                     
  6156                           ;main.c: 276:     print_string("\nThe current sequence is: ");
  6157  002F62  0E4F               	movlw	low STR_4
  6158  002F64  6E0A               	movwf	print_string@strng^0,c
  6159  002F66  0E7F               	movlw	high STR_4
  6160  002F68  6E0B               	movwf	(print_string@strng+1)^0,c
  6161  002F6A  EC60  F017         	call	_print_string	;wreg free
  6162                           
  6163                           ;main.c: 277:     print_string(sequence);
  6164  002F6E  0EFA               	movlw	low _sequence
  6165  002F70  6E0A               	movwf	print_string@strng^0,c
  6166  002F72  0E00               	movlw	high _sequence
  6167  002F74  6E0B               	movwf	(print_string@strng+1)^0,c
  6168  002F76  EC60  F017         	call	_print_string	;wreg free
  6169                           
  6170                           ;main.c: 278:     print_string("\nPlease give the new sequence as input\r");
  6171  002F7A  0E5A               	movlw	low STR_5
  6172  002F7C  6E0A               	movwf	print_string@strng^0,c
  6173  002F7E  0E7E               	movlw	high STR_5
  6174  002F80  6E0B               	movwf	(print_string@strng+1)^0,c
  6175  002F82  EC60  F017         	call	_print_string	;wreg free
  6176  002F86                     
  6177                           ;main.c: 279:     int i = 0;
  6178  002F86  0E00               	movlw	0
  6179  002F88  6E14               	movwf	(change_sequence@i+1)^0,c
  6180  002F8A  0E00               	movlw	0
  6181  002F8C  6E13               	movwf	change_sequence@i^0,c
  6182  002F8E                     l5051:
  6183  002F8E  FFFF               	dw	65535	; assembler added errata NOP
  6184                           
  6185                           ;main.c: 281:         if(New_char_RX){
  6186  002F90  5074               	movf	_New_char_RX^0,w,c
  6187  002F92  B4D8               	btfsc	status,2,c
  6188  002F94  EFCE  F017         	goto	u6291
  6189  002F98  EFD1  F017         	goto	u6290
  6190  002F9C                     u6291:
  6191  002F9C  FFFF               	dw	65535	; assembler added errata NOP
  6192  002F9E  EFC7  F017         	goto	l5051
  6193  002FA2                     u6290:
  6194  002FA2  FFFF               	dw	65535	; assembler added errata NOP
  6195  002FA4                     l5053:
  6196  002FA4  FFFF               	dw	65535	; assembler added errata NOP
  6197                           
  6198                           ;main.c: 283:                 sequence[i]=input_str[i];
  6199  002FA6  0EF0               	movlw	low _input_str
  6200  002FA8  2413               	addwf	change_sequence@i^0,w,c
  6201  002FAA  6ED9               	movwf	fsr2l,c
  6202  002FAC  0E00               	movlw	high _input_str
  6203  002FAE  2014               	addwfc	(change_sequence@i+1)^0,w,c
  6204  002FB0  6EDA               	movwf	fsr2h,c
  6205  002FB2  0EFA               	movlw	low _sequence
  6206  002FB4  2413               	addwf	change_sequence@i^0,w,c
  6207  002FB6  6EE1               	movwf	fsr1l,c
  6208  002FB8  0E00               	movlw	high _sequence
  6209  002FBA  2014               	addwfc	(change_sequence@i+1)^0,w,c
  6210  002FBC  6EE2               	movwf	fsr1h,c
  6211  002FBE  CFDF FFE7          	movff	indf2,indf1
  6212  002FC2                     
  6213                           ;main.c: 284:             }while(input_str[i++]!='\n');
  6214  002FC2  5013               	movf	change_sequence@i^0,w,c
  6215  002FC4  6E10               	movwf	??_change_sequence^0,c
  6216  002FC6  5014               	movf	(change_sequence@i+1)^0,w,c
  6217  002FC8  6E11               	movwf	(??_change_sequence+1)^0,c
  6218  002FCA  4A13               	infsnz	change_sequence@i^0,f,c
  6219  002FCC  2A14               	incf	(change_sequence@i+1)^0,f,c
  6220  002FCE  0EF0               	movlw	low _input_str
  6221  002FD0  2410               	addwf	??_change_sequence^0,w,c
  6222  002FD2  6ED9               	movwf	fsr2l,c
  6223  002FD4  0E00               	movlw	high _input_str
  6224  002FD6  2011               	addwfc	(??_change_sequence+1)^0,w,c
  6225  002FD8  6EDA               	movwf	fsr2h,c
  6226  002FDA  0E0A               	movlw	10
  6227  002FDC  18DE               	xorwf	postinc2,w,c
  6228  002FDE  A4D8               	btfss	status,2,c
  6229  002FE0  EFF4  F017         	goto	u6301
  6230  002FE4  EFF7  F017         	goto	u6300
  6231  002FE8                     u6301:
  6232  002FE8  FFFF               	dw	65535	; assembler added errata NOP
  6233  002FEA  EFD2  F017         	goto	l5053
  6234  002FEE                     u6300:
  6235  002FEE  FFFF               	dw	65535	; assembler added errata NOP
  6236  002FF0                     
  6237                           ;main.c: 285:             New_char_RX=0;
  6238  002FF0  0E00               	movlw	0
  6239  002FF2  6E74               	movwf	_New_char_RX^0,c
  6240  002FF4  0012               	return		;funcret
  6241  002FF6  FFFF               	dw	65535	; errata NOP
  6242  002FF8                     __end_of_change_sequence:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function _add_component *****************
  6246 ;; Defined at:
  6247 ;;		line 291 in file "main.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;		None
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  add_componnt    2   31[COMRAM] unsigned char [2]
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6261 ;;      Params:         0       0       0       0       0       0       0
  6262 ;;      Locals:         2       0       0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0
  6264 ;;      Totals:         2       0       0       0       0       0       0
  6265 ;;Total ram usage:        2 bytes
  6266 ;; Hardware stack levels used: 1
  6267 ;; Hardware stack levels required when called: 4
  6268 ;; This function calls:
  6269 ;;		_atoi
  6270 ;;		_print_string
  6271 ;;		_strncat
  6272 ;; This function is called by:
  6273 ;;		_start_up_menu
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text20
  6278  001BDE                     __ptext20:
  6279                           	callstack 0
  6280  001BDE                     _add_component:
  6281                           	callstack 0
  6282  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  6283  001BE0                     
  6284                           ;main.c: 292:     char add_componnt[]=" ";
  6285  001BE0  C0E8  F020         	movff	add_component@F3142,add_component@add_componnt
  6286  001BE4  C0E9  F021         	movff	add_component@F3142+1,add_component@add_componnt+1
  6287  001BE8                     
  6288                           ;main.c: 293:     print_string("\nThe Current sequence is:");
  6289  001BE8  0E6A               	movlw	low STR_6
  6290  001BEA  6E0A               	movwf	print_string@strng^0,c
  6291  001BEC  0E7F               	movlw	high STR_6
  6292  001BEE  6E0B               	movwf	(print_string@strng+1)^0,c
  6293  001BF0  EC60  F017         	call	_print_string	;wreg free
  6294                           
  6295                           ;main.c: 294:     print_string(sequence);
  6296  001BF4  0EFA               	movlw	low _sequence
  6297  001BF6  6E0A               	movwf	print_string@strng^0,c
  6298  001BF8  0E00               	movlw	high _sequence
  6299  001BFA  6E0B               	movwf	(print_string@strng+1)^0,c
  6300  001BFC  EC60  F017         	call	_print_string	;wreg free
  6301                           
  6302                           ;main.c: 295:     print_string("\nEnter the component you want to add: A, B, C or D?");
  6303  001C00  0E26               	movlw	low STR_7
  6304  001C02  6E0A               	movwf	print_string@strng^0,c
  6305  001C04  0E7E               	movlw	high STR_7
  6306  001C06  6E0B               	movwf	(print_string@strng+1)^0,c
  6307  001C08  EC60  F017         	call	_print_string	;wreg free
  6308  001C0C                     l5063:
  6309  001C0C  FFFF               	dw	65535	; assembler added errata NOP
  6310                           
  6311                           ;main.c: 297:         if(New_char_RX){
  6312  001C0E  5074               	movf	_New_char_RX^0,w,c
  6313  001C10  B4D8               	btfsc	status,2,c
  6314  001C12  EF0D  F00E         	goto	u6311
  6315  001C16  EF10  F00E         	goto	u6310
  6316  001C1A                     u6311:
  6317  001C1A  FFFF               	dw	65535	; assembler added errata NOP
  6318  001C1C  EF06  F00E         	goto	l5063
  6319  001C20                     u6310:
  6320  001C20  FFFF               	dw	65535	; assembler added errata NOP
  6321  001C22                     
  6322                           ;main.c: 298:             add_componnt[0]=input_str[0];
  6323  001C22  C0F0  F020         	movff	_input_str,add_component@add_componnt	;volatile
  6324  001C26                     
  6325                           ;main.c: 299:             if(add_componnt[0]=='D'){
  6326  001C26  0E44               	movlw	68
  6327  001C28  1820               	xorwf	add_component@add_componnt^0,w,c
  6328  001C2A  A4D8               	btfss	status,2,c
  6329  001C2C  EF1A  F00E         	goto	u6321
  6330  001C30  EF1D  F00E         	goto	u6320
  6331  001C34                     u6321:
  6332  001C34  FFFF               	dw	65535	; assembler added errata NOP
  6333  001C36  EFCC  F00E         	goto	l5117
  6334  001C3A                     u6320:
  6335  001C3A  FFFF               	dw	65535	; assembler added errata NOP
  6336  001C3C                     
  6337                           ;main.c: 300:                 New_char_RX=0;
  6338  001C3C  0E00               	movlw	0
  6339  001C3E  6E74               	movwf	_New_char_RX^0,c
  6340  001C40                     
  6341                           ;main.c: 301:                 print_string("\nEnter the pick position X:");
  6342  001C40  0E17               	movlw	low STR_8
  6343  001C42  6E0A               	movwf	print_string@strng^0,c
  6344  001C44  0E7F               	movlw	high STR_8
  6345  001C46  6E0B               	movwf	(print_string@strng+1)^0,c
  6346  001C48  EC60  F017         	call	_print_string	;wreg free
  6347  001C4C                     l5073:
  6348  001C4C  FFFF               	dw	65535	; assembler added errata NOP
  6349                           
  6350                           ;main.c: 303:                     if(New_char_RX){
  6351  001C4E  5074               	movf	_New_char_RX^0,w,c
  6352  001C50  B4D8               	btfsc	status,2,c
  6353  001C52  EF2D  F00E         	goto	u6331
  6354  001C56  EF30  F00E         	goto	u6330
  6355  001C5A                     u6331:
  6356  001C5A  FFFF               	dw	65535	; assembler added errata NOP
  6357  001C5C  EF26  F00E         	goto	l5073
  6358  001C60                     u6330:
  6359  001C60  FFFF               	dw	65535	; assembler added errata NOP
  6360  001C62                     
  6361                           ;main.c: 304:                         X_Pick_D=atoi(input_str);
  6362  001C62  0EF0               	movlw	low _input_str
  6363  001C64  6E11               	movwf	atoi@s^0,c
  6364  001C66  0E00               	movlw	high _input_str
  6365  001C68  6E12               	movwf	(atoi@s+1)^0,c
  6366  001C6A  ECEB  F00F         	call	_atoi	;wreg free
  6367  001C6E  C011  F0AE         	movff	?_atoi,_X_Pick_D
  6368  001C72  C012  F0AF         	movff	?_atoi+1,_X_Pick_D+1
  6369  001C76                     
  6370                           ;main.c: 305:                         New_char_RX=0;
  6371  001C76  0E00               	movlw	0
  6372  001C78  6E74               	movwf	_New_char_RX^0,c
  6373  001C7A                     
  6374                           ;main.c: 309:                 print_string("\nEnter the pick position Y:");
  6375  001C7A  0E33               	movlw	low STR_9
  6376  001C7C  6E0A               	movwf	print_string@strng^0,c
  6377  001C7E  0E7F               	movlw	high STR_9
  6378  001C80  6E0B               	movwf	(print_string@strng+1)^0,c
  6379  001C82  EC60  F017         	call	_print_string	;wreg free
  6380  001C86                     l5081:
  6381  001C86  FFFF               	dw	65535	; assembler added errata NOP
  6382                           
  6383                           ;main.c: 311:                     if(New_char_RX){
  6384  001C88  5074               	movf	_New_char_RX^0,w,c
  6385  001C8A  B4D8               	btfsc	status,2,c
  6386  001C8C  EF4A  F00E         	goto	u6341
  6387  001C90  EF4D  F00E         	goto	u6340
  6388  001C94                     u6341:
  6389  001C94  FFFF               	dw	65535	; assembler added errata NOP
  6390  001C96  EF43  F00E         	goto	l5081
  6391  001C9A                     u6340:
  6392  001C9A  FFFF               	dw	65535	; assembler added errata NOP
  6393  001C9C                     
  6394                           ;main.c: 312:                         Y_Pick_D=(atoi(input_str));
  6395  001C9C  0EF0               	movlw	low _input_str
  6396  001C9E  6E11               	movwf	atoi@s^0,c
  6397  001CA0  0E00               	movlw	high _input_str
  6398  001CA2  6E12               	movwf	(atoi@s+1)^0,c
  6399  001CA4  ECEB  F00F         	call	_atoi	;wreg free
  6400  001CA8  C011  F0AC         	movff	?_atoi,_Y_Pick_D
  6401  001CAC  C012  F0AD         	movff	?_atoi+1,_Y_Pick_D+1
  6402  001CB0                     
  6403                           ;main.c: 313:                         New_char_RX=0;
  6404  001CB0  0E00               	movlw	0
  6405  001CB2  6E74               	movwf	_New_char_RX^0,c
  6406  001CB4                     
  6407                           ;main.c: 317:                 print_string("\nEnter the pick orientation:");
  6408  001CB4  0EFA               	movlw	low STR_10
  6409  001CB6  6E0A               	movwf	print_string@strng^0,c
  6410  001CB8  0E7E               	movlw	high STR_10
  6411  001CBA  6E0B               	movwf	(print_string@strng+1)^0,c
  6412  001CBC  EC60  F017         	call	_print_string	;wreg free
  6413  001CC0                     l5089:
  6414  001CC0  FFFF               	dw	65535	; assembler added errata NOP
  6415                           
  6416                           ;main.c: 319:                     if(New_char_RX){
  6417  001CC2  5074               	movf	_New_char_RX^0,w,c
  6418  001CC4  B4D8               	btfsc	status,2,c
  6419  001CC6  EF67  F00E         	goto	u6351
  6420  001CCA  EF6A  F00E         	goto	u6350
  6421  001CCE                     u6351:
  6422  001CCE  FFFF               	dw	65535	; assembler added errata NOP
  6423  001CD0  EF60  F00E         	goto	l5089
  6424  001CD4                     u6350:
  6425  001CD4  FFFF               	dw	65535	; assembler added errata NOP
  6426  001CD6                     
  6427                           ;main.c: 320:                         Pick_Angle_D=(atoi(input_str));
  6428  001CD6  0EF0               	movlw	low _input_str
  6429  001CD8  6E11               	movwf	atoi@s^0,c
  6430  001CDA  0E00               	movlw	high _input_str
  6431  001CDC  6E12               	movwf	(atoi@s+1)^0,c
  6432  001CDE  ECEB  F00F         	call	_atoi	;wreg free
  6433  001CE2  C011  F0AA         	movff	?_atoi,_Pick_Angle_D
  6434  001CE6  C012  F0AB         	movff	?_atoi+1,_Pick_Angle_D+1
  6435  001CEA                     
  6436                           ;main.c: 321:                         New_char_RX=0;
  6437  001CEA  0E00               	movlw	0
  6438  001CEC  6E74               	movwf	_New_char_RX^0,c
  6439  001CEE                     
  6440                           ;main.c: 325:                 print_string("\nEnter the place position X:");
  6441  001CEE  0EC0               	movlw	low STR_11
  6442  001CF0  6E0A               	movwf	print_string@strng^0,c
  6443  001CF2  0E7E               	movlw	high STR_11
  6444  001CF4  6E0B               	movwf	(print_string@strng+1)^0,c
  6445  001CF6  EC60  F017         	call	_print_string	;wreg free
  6446  001CFA                     l5097:
  6447  001CFA  FFFF               	dw	65535	; assembler added errata NOP
  6448                           
  6449                           ;main.c: 327:                     if(New_char_RX){
  6450  001CFC  5074               	movf	_New_char_RX^0,w,c
  6451  001CFE  B4D8               	btfsc	status,2,c
  6452  001D00  EF84  F00E         	goto	u6361
  6453  001D04  EF87  F00E         	goto	u6360
  6454  001D08                     u6361:
  6455  001D08  FFFF               	dw	65535	; assembler added errata NOP
  6456  001D0A  EF7D  F00E         	goto	l5097
  6457  001D0E                     u6360:
  6458  001D0E  FFFF               	dw	65535	; assembler added errata NOP
  6459  001D10                     
  6460                           ;main.c: 328:                         X_Place_D=(atoi(input_str));
  6461  001D10  0EF0               	movlw	low _input_str
  6462  001D12  6E11               	movwf	atoi@s^0,c
  6463  001D14  0E00               	movlw	high _input_str
  6464  001D16  6E12               	movwf	(atoi@s+1)^0,c
  6465  001D18  ECEB  F00F         	call	_atoi	;wreg free
  6466  001D1C  C011  F0A8         	movff	?_atoi,_X_Place_D
  6467  001D20  C012  F0A9         	movff	?_atoi+1,_X_Place_D+1
  6468  001D24                     
  6469                           ;main.c: 329:                         New_char_RX=0;
  6470  001D24  0E00               	movlw	0
  6471  001D26  6E74               	movwf	_New_char_RX^0,c
  6472  001D28                     
  6473                           ;main.c: 333:                 print_string("\nEnter the place position Y:");
  6474  001D28  0EDD               	movlw	low STR_12
  6475  001D2A  6E0A               	movwf	print_string@strng^0,c
  6476  001D2C  0E7E               	movlw	high STR_12
  6477  001D2E  6E0B               	movwf	(print_string@strng+1)^0,c
  6478  001D30  EC60  F017         	call	_print_string	;wreg free
  6479  001D34                     l5105:
  6480  001D34  FFFF               	dw	65535	; assembler added errata NOP
  6481                           
  6482                           ;main.c: 335:                     if(New_char_RX){
  6483  001D36  5074               	movf	_New_char_RX^0,w,c
  6484  001D38  B4D8               	btfsc	status,2,c
  6485  001D3A  EFA1  F00E         	goto	u6371
  6486  001D3E  EFA4  F00E         	goto	u6370
  6487  001D42                     u6371:
  6488  001D42  FFFF               	dw	65535	; assembler added errata NOP
  6489  001D44  EF9A  F00E         	goto	l5105
  6490  001D48                     u6370:
  6491  001D48  FFFF               	dw	65535	; assembler added errata NOP
  6492  001D4A                     
  6493                           ;main.c: 336:                         Y_Place_D=(atoi(input_str));
  6494  001D4A  0EF0               	movlw	low _input_str
  6495  001D4C  6E11               	movwf	atoi@s^0,c
  6496  001D4E  0E00               	movlw	high _input_str
  6497  001D50  6E12               	movwf	(atoi@s+1)^0,c
  6498  001D52  ECEB  F00F         	call	_atoi	;wreg free
  6499  001D56  C011  F0A6         	movff	?_atoi,_Y_Place_D
  6500  001D5A  C012  F0A7         	movff	?_atoi+1,_Y_Place_D+1
  6501  001D5E                     
  6502                           ;main.c: 337:                         New_char_RX=0;
  6503  001D5E  0E00               	movlw	0
  6504  001D60  6E74               	movwf	_New_char_RX^0,c
  6505  001D62                     
  6506                           ;main.c: 341:                 print_string("\nEnter the place orientation:");
  6507  001D62  0EA2               	movlw	low STR_13
  6508  001D64  6E0A               	movwf	print_string@strng^0,c
  6509  001D66  0E7E               	movlw	high STR_13
  6510  001D68  6E0B               	movwf	(print_string@strng+1)^0,c
  6511  001D6A  EC60  F017         	call	_print_string	;wreg free
  6512  001D6E                     l5113:
  6513  001D6E  FFFF               	dw	65535	; assembler added errata NOP
  6514                           
  6515                           ;main.c: 343:                         if(New_char_RX){
  6516  001D70  5074               	movf	_New_char_RX^0,w,c
  6517  001D72  B4D8               	btfsc	status,2,c
  6518  001D74  EFBE  F00E         	goto	u6381
  6519  001D78  EFC1  F00E         	goto	u6380
  6520  001D7C                     u6381:
  6521  001D7C  FFFF               	dw	65535	; assembler added errata NOP
  6522  001D7E  EFB7  F00E         	goto	l5113
  6523  001D82                     u6380:
  6524  001D82  FFFF               	dw	65535	; assembler added errata NOP
  6525  001D84                     
  6526                           ;main.c: 344:                         Place_Angle_D=(atoi(input_str));
  6527  001D84  0EF0               	movlw	low _input_str
  6528  001D86  6E11               	movwf	atoi@s^0,c
  6529  001D88  0E00               	movlw	high _input_str
  6530  001D8A  6E12               	movwf	(atoi@s+1)^0,c
  6531  001D8C  ECEB  F00F         	call	_atoi	;wreg free
  6532  001D90  C011  F0A4         	movff	?_atoi,_Place_Angle_D
  6533  001D94  C012  F0A5         	movff	?_atoi+1,_Place_Angle_D+1
  6534  001D98                     l5117:
  6535  001D98  FFFF               	dw	65535	; assembler added errata NOP
  6536                           
  6537                           ;main.c: 345:                         New_char_RX=0;
  6538  001D9A  0E00               	movlw	0
  6539  001D9C  6E74               	movwf	_New_char_RX^0,c
  6540  001D9E                     
  6541                           ;main.c: 357:     State='0';
  6542  001D9E  0E30               	movlw	48
  6543  001DA0  6E75               	movwf	_State^0,c
  6544  001DA2                     
  6545                           ;main.c: 358:     strncat(sequence,add_componnt,1);
  6546  001DA2  0EFA               	movlw	low _sequence
  6547  001DA4  6E0E               	movwf	strncat@d^0,c
  6548  001DA6  0E00               	movlw	high _sequence
  6549  001DA8  6E0F               	movwf	(strncat@d+1)^0,c
  6550  001DAA  0E20               	movlw	low add_component@add_componnt
  6551  001DAC  6E10               	movwf	strncat@s^0,c
  6552  001DAE  0E00               	movlw	high add_component@add_componnt
  6553  001DB0  6E11               	movwf	(strncat@s+1)^0,c
  6554  001DB2  0E00               	movlw	0
  6555  001DB4  6E13               	movwf	(strncat@n+1)^0,c
  6556  001DB6  0E01               	movlw	1
  6557  001DB8  6E12               	movwf	strncat@n^0,c
  6558  001DBA  ECFC  F017         	call	_strncat	;wreg free
  6559  001DBE                     
  6560                           ;main.c: 359:     print_string("\n\nComponent Added: ");
  6561  001DBE  0E84               	movlw	low STR_14
  6562  001DC0  6E0A               	movwf	print_string@strng^0,c
  6563  001DC2  0E7F               	movlw	high STR_14
  6564  001DC4  6E0B               	movwf	(print_string@strng+1)^0,c
  6565  001DC6  EC60  F017         	call	_print_string	;wreg free
  6566  001DCA                     
  6567                           ;main.c: 360:     print_string(add_componnt);
  6568  001DCA  0E20               	movlw	low add_component@add_componnt
  6569  001DCC  6E0A               	movwf	print_string@strng^0,c
  6570  001DCE  0E00               	movlw	high add_component@add_componnt
  6571  001DD0  6E0B               	movwf	(print_string@strng+1)^0,c
  6572  001DD2  EC60  F017         	call	_print_string	;wreg free
  6573  001DD6                     
  6574                           ;main.c: 361:     New_char_RX=0;
  6575  001DD6  0E00               	movlw	0
  6576  001DD8  6E74               	movwf	_New_char_RX^0,c
  6577  001DDA  0012               	return		;funcret
  6578  001DDC  FFFF               	dw	65535	; errata NOP
  6579  001DDE                     __end_of_add_component:
  6580                           	callstack 0
  6581                           
  6582 ;; *************** function _strncat *****************
  6583 ;; Defined at:
  6584 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strncat.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  d               2   13[COMRAM] PTR unsigned char 
  6587 ;;		 -> sequence(4), 
  6588 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6589 ;;		 -> add_component@add_componnt(2), 
  6590 ;;  n               2   17[COMRAM] unsigned int 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;  a               2    0        PTR unsigned char 
  6593 ;;		 -> sequence(4), 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  2   13[COMRAM] PTR unsigned char 
  6596 ;; Registers used:
  6597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6603 ;;      Params:         6       0       0       0       0       0       0
  6604 ;;      Locals:         0       0       0       0       0       0       0
  6605 ;;      Temps:          0       0       0       0       0       0       0
  6606 ;;      Totals:         6       0       0       0       0       0       0
  6607 ;;Total ram usage:        6 bytes
  6608 ;; Hardware stack levels used: 1
  6609 ;; Hardware stack levels required when called: 3
  6610 ;; This function calls:
  6611 ;;		_strlen
  6612 ;; This function is called by:
  6613 ;;		_add_component
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text21
  6618  002FF8                     __ptext21:
  6619                           	callstack 0
  6620  002FF8                     _strncat:
  6621                           	callstack 0
  6622  002FF8  FFFF               	dw	65535	; assembler added errata NOP
  6623  002FFA  C00E  F00A         	movff	strncat@d,strlen@s
  6624  002FFE  C00F  F00B         	movff	strncat@d+1,strlen@s+1
  6625  003002  EC69  F019         	call	_strlen	;wreg free
  6626  003006  500A               	movf	?_strlen^0,w,c
  6627  003008  260E               	addwf	strncat@d^0,f,c
  6628  00300A  500B               	movf	(?_strlen+1)^0,w,c
  6629  00300C  220F               	addwfc	(strncat@d+1)^0,f,c
  6630  00300E  EF1B  F018         	goto	l3163
  6631  003012                     l3155:
  6632  003012  FFFF               	dw	65535	; assembler added errata NOP
  6633  003014  0612               	decf	strncat@n^0,f,c
  6634  003016  A0D8               	btfss	status,0,c
  6635  003018  0613               	decf	(strncat@n+1)^0,f,c
  6636  00301A  C010  FFD9         	movff	strncat@s,fsr2l
  6637  00301E  C011  FFDA         	movff	strncat@s+1,fsr2h
  6638  003022  C00E  FFE1         	movff	strncat@d,fsr1l
  6639  003026  C00F  FFE2         	movff	strncat@d+1,fsr1h
  6640  00302A  CFDF FFE7          	movff	indf2,indf1
  6641  00302E  4A10               	infsnz	strncat@s^0,f,c
  6642  003030  2A11               	incf	(strncat@s+1)^0,f,c
  6643  003032  4A0E               	infsnz	strncat@d^0,f,c
  6644  003034  2A0F               	incf	(strncat@d+1)^0,f,c
  6645  003036                     l3163:
  6646  003036  FFFF               	dw	65535	; assembler added errata NOP
  6647  003038  5012               	movf	strncat@n^0,w,c
  6648  00303A  1013               	iorwf	(strncat@n+1)^0,w,c
  6649  00303C  B4D8               	btfsc	status,2,c
  6650  00303E  EF23  F018         	goto	u3111
  6651  003042  EF26  F018         	goto	u3110
  6652  003046                     u3111:
  6653  003046  FFFF               	dw	65535	; assembler added errata NOP
  6654  003048  EF34  F018         	goto	l3167
  6655  00304C                     u3110:
  6656  00304C  FFFF               	dw	65535	; assembler added errata NOP
  6657  00304E  C010  FFD9         	movff	strncat@s,fsr2l
  6658  003052  C011  FFDA         	movff	strncat@s+1,fsr2h
  6659  003056  50DF               	movf	indf2,w,c
  6660  003058  A4D8               	btfss	status,2,c
  6661  00305A  EF31  F018         	goto	u3121
  6662  00305E  EF34  F018         	goto	u3120
  6663  003062                     u3121:
  6664  003062  FFFF               	dw	65535	; assembler added errata NOP
  6665  003064  EF09  F018         	goto	l3155
  6666  003068                     u3120:
  6667  003068                     l3167:
  6668  003068  FFFF               	dw	65535	; assembler added errata NOP
  6669  00306A  C00E  FFD9         	movff	strncat@d,fsr2l
  6670  00306E  C00F  FFDA         	movff	strncat@d+1,fsr2h
  6671  003072  0E00               	movlw	0
  6672  003074  6EDF               	movwf	indf2,c
  6673  003076  4A0E               	infsnz	strncat@d^0,f,c
  6674  003078  2A0F               	incf	(strncat@d+1)^0,f,c
  6675  00307A  0012               	return		;funcret
  6676  00307C  FFFF               	dw	65535	; errata NOP
  6677  00307E                     __end_of_strncat:
  6678                           	callstack 0
  6679                           
  6680 ;; *************** function _strlen *****************
  6681 ;; Defined at:
  6682 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6685 ;;		 -> sequence(4), 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  a               2   11[COMRAM] PTR const unsigned char 
  6688 ;;		 -> sequence(4), 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  2    9[COMRAM] unsigned int 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6698 ;;      Params:         2       0       0       0       0       0       0
  6699 ;;      Locals:         2       0       0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0
  6701 ;;      Totals:         4       0       0       0       0       0       0
  6702 ;;Total ram usage:        4 bytes
  6703 ;; Hardware stack levels used: 1
  6704 ;; Hardware stack levels required when called: 2
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_start_up_menu
  6709 ;;		_remove_component
  6710 ;;		_strncat
  6711 ;;		_strrchr
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text22
  6716  0032D2                     __ptext22:
  6717                           	callstack 0
  6718  0032D2                     _strlen:
  6719                           	callstack 0
  6720  0032D2  FFFF               	dw	65535	; assembler added errata NOP
  6721  0032D4  C00A  F00C         	movff	strlen@s,strlen@a
  6722  0032D8  C00B  F00D         	movff	strlen@s+1,strlen@a+1
  6723  0032DC  EF73  F019         	goto	l2847
  6724  0032E0                     l2845:
  6725  0032E0  FFFF               	dw	65535	; assembler added errata NOP
  6726  0032E2  4A0A               	infsnz	strlen@s^0,f,c
  6727  0032E4  2A0B               	incf	(strlen@s+1)^0,f,c
  6728  0032E6                     l2847:
  6729  0032E6  FFFF               	dw	65535	; assembler added errata NOP
  6730  0032E8  C00A  FFD9         	movff	strlen@s,fsr2l
  6731  0032EC  C00B  FFDA         	movff	strlen@s+1,fsr2h
  6732  0032F0  50DF               	movf	indf2,w,c
  6733  0032F2  A4D8               	btfss	status,2,c
  6734  0032F4  EF7E  F019         	goto	u2561
  6735  0032F8  EF81  F019         	goto	u2560
  6736  0032FC                     u2561:
  6737  0032FC  FFFF               	dw	65535	; assembler added errata NOP
  6738  0032FE  EF70  F019         	goto	l2845
  6739  003302                     u2560:
  6740  003302  FFFF               	dw	65535	; assembler added errata NOP
  6741  003304  500C               	movf	strlen@a^0,w,c
  6742  003306  5C0A               	subwf	strlen@s^0,w,c
  6743  003308  6E0A               	movwf	?_strlen^0,c
  6744  00330A  500D               	movf	(strlen@a+1)^0,w,c
  6745  00330C  580B               	subwfb	(strlen@s+1)^0,w,c
  6746  00330E  6E0B               	movwf	(?_strlen+1)^0,c
  6747  003310  0012               	return		;funcret
  6748  003312  FFFF               	dw	65535	; errata NOP
  6749  003314                     __end_of_strlen:
  6750                           	callstack 0
  6751                           
  6752 ;; *************** function _print_string *****************
  6753 ;; Defined at:
  6754 ;;		line 44 in file "serial_rs232.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  strng           2    9[COMRAM] PTR unsigned char 
  6757 ;;		 -> STR_21(20), STR_20(20), STR_19(10), STR_18(11), 
  6758 ;;		 -> STR_17(70), STR_16(19), STR_15(63), STR_14(20), 
  6759 ;;		 -> STR_13(30), STR_12(29), STR_11(29), STR_10(29), 
  6760 ;;		 -> STR_9(28), STR_8(28), STR_7(52), STR_6(26), 
  6761 ;;		 -> add_component@add_componnt(2), STR_5(40), STR_4(27), STR_3(32), 
  6762 ;;		 -> sequence(4), STR_2(20), STR_1(82), 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  i               2   13[COMRAM] int 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      void 
  6767 ;; Registers used:
  6768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6774 ;;      Params:         2       0       0       0       0       0       0
  6775 ;;      Locals:         2       0       0       0       0       0       0
  6776 ;;      Temps:          2       0       0       0       0       0       0
  6777 ;;      Totals:         6       0       0       0       0       0       0
  6778 ;;Total ram usage:        6 bytes
  6779 ;; Hardware stack levels used: 1
  6780 ;; Hardware stack levels required when called: 2
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_start_up_menu
  6785 ;;		_change_sequence
  6786 ;;		_add_component
  6787 ;;		_remove_component
  6788 ;;		_check_component
  6789 ;;		_pick_and_place
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           	psect	text23
  6794  002EC0                     __ptext23:
  6795                           	callstack 0
  6796  002EC0                     _print_string:
  6797                           	callstack 0
  6798  002EC0  FFFF               	dw	65535	; assembler added errata NOP
  6799  002EC2                     
  6800                           ;serial_rs232.c: 44: void print_string(char strng[]);serial_rs232.c: 45: {;serial_rs232.
      +                          c: 46:     for(int i=0; strng[i]!=((void*)0);i++){
  6801  002EC2  0E00               	movlw	0
  6802  002EC4  6E0F               	movwf	(print_string@i+1)^0,c
  6803  002EC6  0E00               	movlw	0
  6804  002EC8  6E0E               	movwf	print_string@i^0,c
  6805  002ECA  EF8C  F017         	goto	l4375
  6806  002ECE                     l4371:
  6807  002ECE  FFFF               	dw	65535	; assembler added errata NOP
  6808                           
  6809                           ;serial_rs232.c: 47:         TXREG=strng[i];
  6810  002ED0  500E               	movf	print_string@i^0,w,c
  6811  002ED2  240A               	addwf	print_string@strng^0,w,c
  6812  002ED4  6E0C               	movwf	??_print_string^0,c
  6813  002ED6  500F               	movf	(print_string@i+1)^0,w,c
  6814  002ED8  200B               	addwfc	(print_string@strng+1)^0,w,c
  6815  002EDA  6E0D               	movwf	(??_print_string+1)^0,c
  6816  002EDC  C00C  FFF6         	movff	??_print_string,tblptrl
  6817  002EE0  C00D  FFF7         	movff	??_print_string+1,tblptrh
  6818  002EE4  6AF8               	clrf	tblptru,c
  6819  002EE6  0E05               	movlw	(high __ramtop+-1)
  6820  002EE8  64F7               	cpfsgt	tblptrh,c
  6821  002EEA  D004               	bra	u5017
  6822  002EEC  0008               	tblrd		*
  6823  002EEE  FFFF               	dw	65535	; errata NOP
  6824  002EF0  50F5               	movf	tablat,w,c
  6825  002EF2  D005               	bra	u5010
  6826  002EF4                     u5017:
  6827  002EF4  CFF6 FFE9          	movff	tblptrl,fsr0l
  6828  002EF8  CFF7 FFEA          	movff	tblptrh,fsr0h
  6829  002EFC  50EF               	movf	indf0,w,c
  6830  002EFE                     u5010:
  6831  002EFE  6EAD               	movwf	173,c	;volatile
  6832  002F00                     l77:
  6833  002F00  FFFF               	dw	65535	; assembler added errata NOP
  6834  002F02  A2AC               	btfss	172,1,c	;volatile
  6835  002F04  EF86  F017         	goto	u5021
  6836  002F08  EF89  F017         	goto	u5020
  6837  002F0C                     u5021:
  6838  002F0C  FFFF               	dw	65535	; assembler added errata NOP
  6839  002F0E  EF80  F017         	goto	l77
  6840  002F12                     u5020:
  6841  002F12  FFFF               	dw	65535	; assembler added errata NOP
  6842  002F14                     
  6843                           ;serial_rs232.c: 49:     }
  6844  002F14  4A0E               	infsnz	print_string@i^0,f,c
  6845  002F16  2A0F               	incf	(print_string@i+1)^0,f,c
  6846  002F18                     l4375:
  6847  002F18  FFFF               	dw	65535	; assembler added errata NOP
  6848  002F1A  500E               	movf	print_string@i^0,w,c
  6849  002F1C  240A               	addwf	print_string@strng^0,w,c
  6850  002F1E  6E0C               	movwf	??_print_string^0,c
  6851  002F20  500F               	movf	(print_string@i+1)^0,w,c
  6852  002F22  200B               	addwfc	(print_string@strng+1)^0,w,c
  6853  002F24  6E0D               	movwf	(??_print_string+1)^0,c
  6854  002F26  C00C  FFF6         	movff	??_print_string,tblptrl
  6855  002F2A  C00D  FFF7         	movff	??_print_string+1,tblptrh
  6856  002F2E  6AF8               	clrf	tblptru,c
  6857  002F30  0E05               	movlw	(high __ramtop+-1)
  6858  002F32  64F7               	cpfsgt	tblptrh,c
  6859  002F34  D004               	bra	u5037
  6860  002F36  0008               	tblrd		*
  6861  002F38  FFFF               	dw	65535	; errata NOP
  6862  002F3A  50F5               	movf	tablat,w,c
  6863  002F3C  D005               	bra	u5030
  6864  002F3E                     u5037:
  6865  002F3E  CFF6 FFE9          	movff	tblptrl,fsr0l
  6866  002F42  CFF7 FFEA          	movff	tblptrh,fsr0h
  6867  002F46  50EF               	movf	indf0,w,c
  6868  002F48                     u5030:
  6869  002F48  0900               	iorlw	0
  6870  002F4A  A4D8               	btfss	status,2,c
  6871  002F4C  EFAA  F017         	goto	u5041
  6872  002F50  EFAD  F017         	goto	u5040
  6873  002F54                     u5041:
  6874  002F54  FFFF               	dw	65535	; assembler added errata NOP
  6875  002F56  EF67  F017         	goto	l4371
  6876  002F5A                     u5040:
  6877  002F5A  FFFF               	dw	65535	; assembler added errata NOP
  6878  002F5C  0012               	return		;funcret
  6879  002F5E  FFFF               	dw	65535	; errata NOP
  6880  002F60                     __end_of_print_string:
  6881                           	callstack 0
  6882                           
  6883 ;; *************** function _atoi *****************
  6884 ;; Defined at:
  6885 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  s               2   16[COMRAM] PTR const unsigned char 
  6888 ;;		 -> input_str(10), 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  n               2   29[COMRAM] int 
  6891 ;;  neg             2   22[COMRAM] int 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  2   16[COMRAM] int 
  6894 ;; Registers used:
  6895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6901 ;;      Params:         2       0       0       0       0       0       0
  6902 ;;      Locals:         9       0       0       0       0       0       0
  6903 ;;      Temps:          4       0       0       0       0       0       0
  6904 ;;      Totals:        15       0       0       0       0       0       0
  6905 ;;Total ram usage:       15 bytes
  6906 ;; Hardware stack levels used: 1
  6907 ;; Hardware stack levels required when called: 3
  6908 ;; This function calls:
  6909 ;;		___wmul
  6910 ;;		_isdigit
  6911 ;;		_isspace
  6912 ;; This function is called by:
  6913 ;;		_add_component
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           	psect	text24
  6918  001FD6                     __ptext24:
  6919                           	callstack 0
  6920  001FD6                     _atoi:
  6921                           	callstack 0
  6922  001FD6  FFFF               	dw	65535	; assembler added errata NOP
  6923  001FD8  0E00               	movlw	0
  6924  001FDA  6E1F               	movwf	(atoi@n+1)^0,c
  6925  001FDC  0E00               	movlw	0
  6926  001FDE  6E1E               	movwf	atoi@n^0,c
  6927  001FE0  0E00               	movlw	0
  6928  001FE2  6E18               	movwf	(atoi@neg+1)^0,c
  6929  001FE4  0E00               	movlw	0
  6930  001FE6  6E17               	movwf	atoi@neg^0,c
  6931  001FE8  EFF9  F00F         	goto	l3113
  6932  001FEC                     l3111:
  6933  001FEC  FFFF               	dw	65535	; assembler added errata NOP
  6934  001FEE  4A11               	infsnz	atoi@s^0,f,c
  6935  001FF0  2A12               	incf	(atoi@s+1)^0,f,c
  6936  001FF2                     l3113:
  6937  001FF2  FFFF               	dw	65535	; assembler added errata NOP
  6938  001FF4  0E01               	movlw	1
  6939  001FF6  6E1D               	movwf	_atoi$1403^0,c
  6940  001FF8  C011  FFD9         	movff	atoi@s,fsr2l
  6941  001FFC  C012  FFDA         	movff	atoi@s+1,fsr2h
  6942  002000  0E20               	movlw	32
  6943  002002  18DE               	xorwf	postinc2,w,c
  6944  002004  B4D8               	btfsc	status,2,c
  6945  002006  EF07  F010         	goto	u3041
  6946  00200A  EF0A  F010         	goto	u3040
  6947  00200E                     u3041:
  6948  00200E  FFFF               	dw	65535	; assembler added errata NOP
  6949  002010  EF29  F010         	goto	l3121
  6950  002014                     u3040:
  6951  002014  FFFF               	dw	65535	; assembler added errata NOP
  6952  002016  0EF7               	movlw	247
  6953  002018  6E13               	movwf	??_atoi^0,c
  6954  00201A  0EFF               	movlw	255
  6955  00201C  6E14               	movwf	(??_atoi+1)^0,c
  6956  00201E  C011  FFD9         	movff	atoi@s,fsr2l
  6957  002022  C012  FFDA         	movff	atoi@s+1,fsr2h
  6958  002026  50DF               	movf	indf2,w,c
  6959  002028  6E15               	movwf	(??_atoi+2)^0,c
  6960  00202A  6A16               	clrf	(??_atoi+3)^0,c
  6961  00202C  5013               	movf	??_atoi^0,w,c
  6962  00202E  2615               	addwf	(??_atoi+2)^0,f,c
  6963  002030  5014               	movf	(??_atoi+1)^0,w,c
  6964  002032  2216               	addwfc	(??_atoi+3)^0,f,c
  6965  002034  5016               	movf	(??_atoi+3)^0,w,c
  6966  002036  E10A               	bnz	u3050
  6967  002038  0E05               	movlw	5
  6968  00203A  5C15               	subwf	(??_atoi+2)^0,w,c
  6969  00203C  A0D8               	btfss	status,0,c
  6970  00203E  EF23  F010         	goto	u3051
  6971  002042  EF26  F010         	goto	u3050
  6972  002046                     u3051:
  6973  002046  FFFF               	dw	65535	; assembler added errata NOP
  6974  002048  EF29  F010         	goto	l3121
  6975  00204C                     u3050:
  6976  00204C  FFFF               	dw	65535	; assembler added errata NOP
  6977  00204E  0E00               	movlw	0
  6978  002050  6E1D               	movwf	_atoi$1403^0,c
  6979  002052                     l3121:
  6980  002052  FFFF               	dw	65535	; assembler added errata NOP
  6981  002054  C01D  F019         	movff	_atoi$1403,_atoi$1402
  6982  002058  6A1A               	clrf	(_atoi$1402+1)^0,c
  6983  00205A  5019               	movf	_atoi$1402^0,w,c
  6984  00205C  101A               	iorwf	(_atoi$1402+1)^0,w,c
  6985  00205E  A4D8               	btfss	status,2,c
  6986  002060  EF34  F010         	goto	u3061
  6987  002064  EF37  F010         	goto	u3060
  6988  002068                     u3061:
  6989  002068  FFFF               	dw	65535	; assembler added errata NOP
  6990  00206A  EFF6  F00F         	goto	l3111
  6991  00206E                     u3060:
  6992  00206E  FFFF               	dw	65535	; assembler added errata NOP
  6993  002070  EF44  F010         	goto	l3131
  6994  002074                     l3127:
  6995  002074  FFFF               	dw	65535	; assembler added errata NOP
  6996  002076  0E00               	movlw	0
  6997  002078  6E18               	movwf	(atoi@neg+1)^0,c
  6998  00207A  0E01               	movlw	1
  6999  00207C  6E17               	movwf	atoi@neg^0,c
  7000  00207E                     l3129:
  7001  00207E  FFFF               	dw	65535	; assembler added errata NOP
  7002  002080  4A11               	infsnz	atoi@s^0,f,c
  7003  002082  2A12               	incf	(atoi@s+1)^0,f,c
  7004  002084  EF7C  F010         	goto	l3137
  7005  002088                     l3131:
  7006  002088  FFFF               	dw	65535	; assembler added errata NOP
  7007  00208A  C011  FFD9         	movff	atoi@s,fsr2l
  7008  00208E  C012  FFDA         	movff	atoi@s+1,fsr2h
  7009  002092  50DF               	movf	indf2,w,c
  7010  002094  6E13               	movwf	??_atoi^0,c
  7011  002096  6A14               	clrf	(??_atoi+1)^0,c
  7012                           
  7013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7014                           ; Switch size 1, requested type "simple"
  7015                           ; Number of cases is 1, Range of values is 0 to 0
  7016                           ; switch strategies available:
  7017                           ; Name         Instructions Cycles
  7018                           ; simple_byte            4     3 (average)
  7019                           ;	Chosen strategy is simple_byte
  7020  002098  5014               	movf	(??_atoi+1)^0,w,c
  7021  00209A  0A00               	xorlw	0	; case 0
  7022  00209C  B4D8               	btfsc	status,2,c
  7023  00209E  EF53  F010         	goto	l5357
  7024  0020A2  EF7C  F010         	goto	l3137
  7025  0020A6                     l5357:
  7026  0020A6  FFFF               	dw	65535	; assembler added errata NOP
  7027                           
  7028                           ; Switch size 1, requested type "simple"
  7029                           ; Number of cases is 2, Range of values is 43 to 45
  7030                           ; switch strategies available:
  7031                           ; Name         Instructions Cycles
  7032                           ; simple_byte            7     4 (average)
  7033                           ;	Chosen strategy is simple_byte
  7034  0020A8  5013               	movf	??_atoi^0,w,c
  7035  0020AA  0A2B               	xorlw	43	; case 43
  7036  0020AC  B4D8               	btfsc	status,2,c
  7037  0020AE  EF3F  F010         	goto	l3129
  7038  0020B2  0A06               	xorlw	6	; case 45
  7039  0020B4  B4D8               	btfsc	status,2,c
  7040  0020B6  EF3A  F010         	goto	l3127
  7041  0020BA  EF7C  F010         	goto	l3137
  7042  0020BE                     l3133:
  7043  0020BE  FFFF               	dw	65535	; assembler added errata NOP
  7044  0020C0  C01E  F00A         	movff	atoi@n,___wmul@multiplier
  7045  0020C4  C01F  F00B         	movff	atoi@n+1,___wmul@multiplier+1
  7046  0020C8  0E00               	movlw	0
  7047  0020CA  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  7048  0020CC  0E0A               	movlw	10
  7049  0020CE  6E0C               	movwf	___wmul@multiplicand^0,c
  7050  0020D0  EC1F  F01A         	call	___wmul	;wreg free
  7051  0020D4  C011  FFD9         	movff	atoi@s,fsr2l
  7052  0020D8  C012  FFDA         	movff	atoi@s+1,fsr2h
  7053  0020DC  50DF               	movf	indf2,w,c
  7054  0020DE  6E13               	movwf	??_atoi^0,c
  7055  0020E0  5013               	movf	??_atoi^0,w,c
  7056  0020E2  5E0A               	subwf	?___wmul^0,f,c
  7057  0020E4  0E00               	movlw	0
  7058  0020E6  5A0B               	subwfb	(?___wmul+1)^0,f,c
  7059  0020E8  0E30               	movlw	48
  7060  0020EA  240A               	addwf	?___wmul^0,w,c
  7061  0020EC  6E1E               	movwf	atoi@n^0,c
  7062  0020EE  0E00               	movlw	0
  7063  0020F0  200B               	addwfc	(?___wmul+1)^0,w,c
  7064  0020F2  6E1F               	movwf	(atoi@n+1)^0,c
  7065  0020F4  EF3F  F010         	goto	l3129
  7066  0020F8                     l3137:
  7067  0020F8  FFFF               	dw	65535	; assembler added errata NOP
  7068  0020FA  0ED0               	movlw	208
  7069  0020FC  6E13               	movwf	??_atoi^0,c
  7070  0020FE  0EFF               	movlw	255
  7071  002100  6E14               	movwf	(??_atoi+1)^0,c
  7072  002102  C011  FFD9         	movff	atoi@s,fsr2l
  7073  002106  C012  FFDA         	movff	atoi@s+1,fsr2h
  7074  00210A  50DF               	movf	indf2,w,c
  7075  00210C  6E15               	movwf	(??_atoi+2)^0,c
  7076  00210E  6A16               	clrf	(??_atoi+3)^0,c
  7077  002110  5013               	movf	??_atoi^0,w,c
  7078  002112  2615               	addwf	(??_atoi+2)^0,f,c
  7079  002114  5014               	movf	(??_atoi+1)^0,w,c
  7080  002116  2216               	addwfc	(??_atoi+3)^0,f,c
  7081  002118  5016               	movf	(??_atoi+3)^0,w,c
  7082  00211A  E10B               	bnz	u3070
  7083  00211C  0E0A               	movlw	10
  7084  00211E  5C15               	subwf	(??_atoi+2)^0,w,c
  7085  002120  A0D8               	btfss	status,0,c
  7086  002122  EF95  F010         	goto	u3071
  7087  002126  EF99  F010         	goto	u3070
  7088  00212A                     u3071:
  7089  00212A  FFFF               	dw	65535	; assembler added errata NOP
  7090  00212C  0E01               	movlw	1
  7091  00212E  EF9B  F010         	goto	u3080
  7092  002132                     u3070:
  7093  002132  FFFF               	dw	65535	; assembler added errata NOP
  7094  002134  0E00               	movlw	0
  7095  002136                     u3080:
  7096  002136  FFFF               	dw	65535	; assembler added errata NOP
  7097  002138  6E1B               	movwf	_atoi$1404^0,c
  7098  00213A  6A1C               	clrf	(_atoi$1404+1)^0,c
  7099  00213C  501B               	movf	_atoi$1404^0,w,c
  7100  00213E  101C               	iorwf	(_atoi$1404+1)^0,w,c
  7101  002140  A4D8               	btfss	status,2,c
  7102  002142  EFA5  F010         	goto	u3091
  7103  002146  EFA8  F010         	goto	u3090
  7104  00214A                     u3091:
  7105  00214A  FFFF               	dw	65535	; assembler added errata NOP
  7106  00214C  EF5F  F010         	goto	l3133
  7107  002150                     u3090:
  7108  002150  FFFF               	dw	65535	; assembler added errata NOP
  7109  002152  5017               	movf	atoi@neg^0,w,c
  7110  002154  1018               	iorwf	(atoi@neg+1)^0,w,c
  7111  002156  A4D8               	btfss	status,2,c
  7112  002158  EFB0  F010         	goto	u3101
  7113  00215C  EFB3  F010         	goto	u3100
  7114  002160                     u3101:
  7115  002160  FFFF               	dw	65535	; assembler added errata NOP
  7116  002162  EFC2  F010         	goto	l1213
  7117  002166                     u3100:
  7118  002166  FFFF               	dw	65535	; assembler added errata NOP
  7119  002168  C01E  F013         	movff	atoi@n,??_atoi
  7120  00216C  C01F  F014         	movff	atoi@n+1,??_atoi+1
  7121  002170  1E13               	comf	??_atoi^0,f,c
  7122  002172  1E14               	comf	(??_atoi+1)^0,f,c
  7123  002174  4A13               	infsnz	??_atoi^0,f,c
  7124  002176  2A14               	incf	(??_atoi+1)^0,f,c
  7125  002178  C013  F011         	movff	??_atoi,?_atoi
  7126  00217C  C014  F012         	movff	??_atoi+1,?_atoi+1
  7127  002180  EFC7  F010         	goto	l1216
  7128  002184                     l1213:
  7129  002184  FFFF               	dw	65535	; assembler added errata NOP
  7130  002186  C01E  F011         	movff	atoi@n,?_atoi
  7131  00218A  C01F  F012         	movff	atoi@n+1,?_atoi+1
  7132  00218E                     l1216:
  7133  00218E  FFFF               	dw	65535	; assembler added errata NOP
  7134  002190  0012               	return		;funcret
  7135  002192  FFFF               	dw	65535	; errata NOP
  7136  002194                     __end_of_atoi:
  7137                           	callstack 0
  7138                           
  7139 ;; *************** function _isspace *****************
  7140 ;; Defined at:
  7141 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  c               2    9[COMRAM] int 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  2    9[COMRAM] int 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2, status,0
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7155 ;;      Params:         2       0       0       0       0       0       0
  7156 ;;      Locals:         1       0       0       0       0       0       0
  7157 ;;      Temps:          4       0       0       0       0       0       0
  7158 ;;      Totals:         7       0       0       0       0       0       0
  7159 ;;Total ram usage:        7 bytes
  7160 ;; Hardware stack levels used: 1
  7161 ;; Hardware stack levels required when called: 2
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_atoi
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text25
  7170  003174                     __ptext25:
  7171                           	callstack 0
  7172  003174                     _isspace:
  7173                           	callstack 25
  7174  003174  FFFF               	dw	65535	; assembler added errata NOP
  7175  003176  0E01               	movlw	1
  7176  003178  6E10               	movwf	_isspace$1420^0,c
  7177  00317A  0E20               	movlw	32
  7178  00317C  180A               	xorwf	isspace@c^0,w,c
  7179  00317E  100B               	iorwf	(isspace@c+1)^0,w,c
  7180  003180  B4D8               	btfsc	status,2,c
  7181  003182  EFC5  F018         	goto	u2981
  7182  003186  EFC8  F018         	goto	u2980
  7183  00318A                     u2981:
  7184  00318A  FFFF               	dw	65535	; assembler added errata NOP
  7185  00318C  EFE4  F018         	goto	l3085
  7186  003190                     u2980:
  7187  003190  FFFF               	dw	65535	; assembler added errata NOP
  7188  003192  0EF7               	movlw	247
  7189  003194  6E0C               	movwf	??_isspace^0,c
  7190  003196  0EFF               	movlw	255
  7191  003198  6E0D               	movwf	(??_isspace+1)^0,c
  7192  00319A  C00A  F00E         	movff	isspace@c,??_isspace+2
  7193  00319E  C00B  F00F         	movff	isspace@c+1,??_isspace+3
  7194  0031A2  500C               	movf	??_isspace^0,w,c
  7195  0031A4  260E               	addwf	(??_isspace+2)^0,f,c
  7196  0031A6  500D               	movf	(??_isspace+1)^0,w,c
  7197  0031A8  220F               	addwfc	(??_isspace+3)^0,f,c
  7198  0031AA  500F               	movf	(??_isspace+3)^0,w,c
  7199  0031AC  E10A               	bnz	u2990
  7200  0031AE  0E05               	movlw	5
  7201  0031B0  5C0E               	subwf	(??_isspace+2)^0,w,c
  7202  0031B2  A0D8               	btfss	status,0,c
  7203  0031B4  EFDE  F018         	goto	u2991
  7204  0031B8  EFE1  F018         	goto	u2990
  7205  0031BC                     u2991:
  7206  0031BC  FFFF               	dw	65535	; assembler added errata NOP
  7207  0031BE  EFE4  F018         	goto	l3085
  7208  0031C2                     u2990:
  7209  0031C2  FFFF               	dw	65535	; assembler added errata NOP
  7210  0031C4  0E00               	movlw	0
  7211  0031C6  6E10               	movwf	_isspace$1420^0,c
  7212  0031C8                     l3085:
  7213  0031C8  FFFF               	dw	65535	; assembler added errata NOP
  7214  0031CA  C010  F00A         	movff	_isspace$1420,?_isspace
  7215  0031CE  6A0B               	clrf	(?_isspace+1)^0,c
  7216  0031D0  0012               	return		;funcret
  7217  0031D2  FFFF               	dw	65535	; errata NOP
  7218  0031D4                     __end_of_isspace:
  7219                           	callstack 0
  7220                           
  7221 ;; *************** function _isdigit *****************
  7222 ;; Defined at:
  7223 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  c               2    9[COMRAM] int 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  2    9[COMRAM] int 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7237 ;;      Params:         2       0       0       0       0       0       0
  7238 ;;      Locals:         0       0       0       0       0       0       0
  7239 ;;      Temps:          4       0       0       0       0       0       0
  7240 ;;      Totals:         6       0       0       0       0       0       0
  7241 ;;Total ram usage:        6 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; Hardware stack levels required when called: 2
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_atoi
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text26
  7252  003314                     __ptext26:
  7253                           	callstack 0
  7254  003314                     _isdigit:
  7255                           	callstack 25
  7256  003314  FFFF               	dw	65535	; assembler added errata NOP
  7257  003316  0ED0               	movlw	208
  7258  003318  6E0C               	movwf	??_isdigit^0,c
  7259  00331A  0EFF               	movlw	255
  7260  00331C  6E0D               	movwf	(??_isdigit+1)^0,c
  7261  00331E  C00A  F00E         	movff	isdigit@c,??_isdigit+2
  7262  003322  C00B  F00F         	movff	isdigit@c+1,??_isdigit+3
  7263  003326  500C               	movf	??_isdigit^0,w,c
  7264  003328  260E               	addwf	(??_isdigit+2)^0,f,c
  7265  00332A  500D               	movf	(??_isdigit+1)^0,w,c
  7266  00332C  220F               	addwfc	(??_isdigit+3)^0,f,c
  7267  00332E  500F               	movf	(??_isdigit+3)^0,w,c
  7268  003330  E10B               	bnz	u3000
  7269  003332  0E0A               	movlw	10
  7270  003334  5C0E               	subwf	(??_isdigit+2)^0,w,c
  7271  003336  A0D8               	btfss	status,0,c
  7272  003338  EFA0  F019         	goto	u3001
  7273  00333C  EFA4  F019         	goto	u3000
  7274  003340                     u3001:
  7275  003340  FFFF               	dw	65535	; assembler added errata NOP
  7276  003342  0E01               	movlw	1
  7277  003344  EFA6  F019         	goto	u3010
  7278  003348                     u3000:
  7279  003348  FFFF               	dw	65535	; assembler added errata NOP
  7280  00334A  0E00               	movlw	0
  7281  00334C                     u3010:
  7282  00334C  FFFF               	dw	65535	; assembler added errata NOP
  7283  00334E  6E0A               	movwf	?_isdigit^0,c
  7284  003350  6A0B               	clrf	(?_isdigit+1)^0,c
  7285  003352  0012               	return		;funcret
  7286  003354  FFFF               	dw	65535	; errata NOP
  7287  003356                     __end_of_isdigit:
  7288                           	callstack 0
  7289                           
  7290 ;; *************** function ___wmul *****************
  7291 ;; Defined at:
  7292 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  multiplier      2    9[COMRAM] unsigned int 
  7295 ;;  multiplicand    2   11[COMRAM] unsigned int 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  product         2   13[COMRAM] unsigned int 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  2    9[COMRAM] unsigned int 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0, prodl, prodh
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7307 ;;      Params:         4       0       0       0       0       0       0
  7308 ;;      Locals:         2       0       0       0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0
  7310 ;;      Totals:         6       0       0       0       0       0       0
  7311 ;;Total ram usage:        6 bytes
  7312 ;; Hardware stack levels used: 1
  7313 ;; Hardware stack levels required when called: 2
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_atoi
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text27
  7322  00343E                     __ptext27:
  7323                           	callstack 0
  7324  00343E                     ___wmul:
  7325                           	callstack 0
  7326  00343E  FFFF               	dw	65535	; assembler added errata NOP
  7327  003440  500A               	movf	___wmul@multiplier^0,w,c
  7328  003442  020C               	mulwf	___wmul@multiplicand^0,c
  7329  003444  CFF3 F00E          	movff	prodl,___wmul@product
  7330  003448  CFF4 F00F          	movff	prodh,___wmul@product+1
  7331  00344C  500A               	movf	___wmul@multiplier^0,w,c
  7332  00344E  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  7333  003450  50F3               	movf	243,w,c
  7334  003452  260F               	addwf	(___wmul@product+1)^0,f,c
  7335  003454  500B               	movf	(___wmul@multiplier+1)^0,w,c
  7336  003456  020C               	mulwf	___wmul@multiplicand^0,c
  7337  003458  50F3               	movf	243,w,c
  7338  00345A  260F               	addwf	(___wmul@product+1)^0,f,c
  7339  00345C  C00E  F00A         	movff	___wmul@product,?___wmul
  7340  003460  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  7341  003464  0012               	return		;funcret
  7342  003466  FFFF               	dw	65535	; errata NOP
  7343  003468                     __end_of___wmul:
  7344                           	callstack 0
  7345                           
  7346 ;; *************** function _init_interrupts *****************
  7347 ;; Defined at:
  7348 ;;		line 71 in file "init_PIC.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;		None
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;		None
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  1    wreg      void 
  7355 ;; Registers used:
  7356 ;;		wreg, status,2
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7362 ;;      Params:         0       0       0       0       0       0       0
  7363 ;;      Locals:         0       0       0       0       0       0       0
  7364 ;;      Temps:          0       0       0       0       0       0       0
  7365 ;;      Totals:         0       0       0       0       0       0       0
  7366 ;;Total ram usage:        0 bytes
  7367 ;; Hardware stack levels used: 1
  7368 ;; Hardware stack levels required when called: 2
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		_main
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text28
  7377  0034DA                     __ptext28:
  7378                           	callstack 0
  7379  0034DA                     _init_interrupts:
  7380                           	callstack 0
  7381  0034DA  FFFF               	dw	65535	; assembler added errata NOP
  7382  0034DC                     
  7383                           ;init_PIC.c: 73:     PIR1bits.RCIF = 0;
  7384  0034DC  9A9E               	bcf	158,5,c	;volatile
  7385                           
  7386                           ;init_PIC.c: 74:  PIE1bits.RCIE = 1;
  7387  0034DE  8A9D               	bsf	157,5,c	;volatile
  7388                           
  7389                           ;init_PIC.c: 75:  INTCONbits.PEIE = 1;
  7390  0034E0  8CF2               	bsf	242,6,c	;volatile
  7391                           
  7392                           ;init_PIC.c: 77:     PIE1bits.TMR1IE = 1;
  7393  0034E2  809D               	bsf	157,0,c	;volatile
  7394                           
  7395                           ;init_PIC.c: 78:     INTCONbits.TMR0IE = 1;
  7396  0034E4  8AF2               	bsf	242,5,c	;volatile
  7397  0034E6                     
  7398                           ;init_PIC.c: 80:     INTCON2=0x00;
  7399  0034E6  0E00               	movlw	0
  7400  0034E8  6EF1               	movwf	241,c	;volatile
  7401                           
  7402                           ;init_PIC.c: 82:     INTCON3=0x00;
  7403  0034EA  0E00               	movlw	0
  7404  0034EC  6EF0               	movwf	240,c	;volatile
  7405  0034EE                     
  7406                           ;init_PIC.c: 83:     INTCONbits.INT0IF=0;
  7407  0034EE  92F2               	bcf	242,1,c	;volatile
  7408  0034F0                     
  7409                           ;init_PIC.c: 84:     INTCONbits.INT0IE=1;
  7410  0034F0  88F2               	bsf	242,4,c	;volatile
  7411  0034F2                     
  7412                           ;init_PIC.c: 85:     INTCON3bits.INT1IF=0;
  7413  0034F2  90F0               	bcf	240,0,c	;volatile
  7414  0034F4                     
  7415                           ;init_PIC.c: 86:     INTCON3bits.INT1IE=1;
  7416  0034F4  86F0               	bsf	240,3,c	;volatile
  7417  0034F6  0012               	return		;funcret
  7418  0034F8  FFFF               	dw	65535	; errata NOP
  7419  0034FA                     __end_of_init_interrupts:
  7420                           	callstack 0
  7421                           
  7422 ;; *************** function _init_USART *****************
  7423 ;; Defined at:
  7424 ;;		line 17 in file "serial_rs232.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      void 
  7431 ;; Registers used:
  7432 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7438 ;;      Params:         0       0       0       0       0       0       0
  7439 ;;      Locals:         0       0       0       0       0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0
  7441 ;;      Totals:         0       0       0       0       0       0       0
  7442 ;;Total ram usage:        0 bytes
  7443 ;; Hardware stack levels used: 1
  7444 ;; Hardware stack levels required when called: 5
  7445 ;; This function calls:
  7446 ;;		___fltol
  7447 ;;		_roundf
  7448 ;; This function is called by:
  7449 ;;		_main
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text29
  7454  003398                     __ptext29:
  7455                           	callstack 0
  7456  003398                     _init_USART:
  7457                           	callstack 0
  7458  003398  FFFF               	dw	65535	; assembler added errata NOP
  7459  00339A                     
  7460                           ;serial_rs232.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  7461  00339A  0E55               	movlw	85
  7462  00339C  6E3D               	movwf	roundf@x^0,c
  7463  00339E  0E55               	movlw	85
  7464  0033A0  6E3E               	movwf	(roundf@x+1)^0,c
  7465  0033A2  0EC8               	movlw	200
  7466  0033A4  6E3F               	movwf	(roundf@x+2)^0,c
  7467  0033A6  0E41               	movlw	65
  7468  0033A8  6E40               	movwf	(roundf@x+3)^0,c
  7469  0033AA  ECFC  F00B         	call	_roundf	;wreg free
  7470  0033AE  C03D  F057         	movff	?_roundf,___fltol@f1
  7471  0033B2  C03E  F058         	movff	?_roundf+1,___fltol@f1+1
  7472  0033B6  C03F  F059         	movff	?_roundf+2,___fltol@f1+2
  7473  0033BA  C040  F05A         	movff	?_roundf+3,___fltol@f1+3
  7474  0033BE  EC18  F012         	call	___fltol	;wreg free
  7475  0033C2  5057               	movf	?___fltol^0,w,c
  7476  0033C4  6EAF               	movwf	175,c	;volatile
  7477  0033C6                     
  7478                           ;serial_rs232.c: 35:  TXSTAbits.TX9=0;
  7479  0033C6  9CAC               	bcf	172,6,c	;volatile
  7480  0033C8                     
  7481                           ;serial_rs232.c: 36:     TXSTAbits.TXEN=1;
  7482  0033C8  8AAC               	bsf	172,5,c	;volatile
  7483  0033CA                     
  7484                           ;serial_rs232.c: 37:     TXSTAbits.SYNC=0;
  7485  0033CA  98AC               	bcf	172,4,c	;volatile
  7486  0033CC                     
  7487                           ;serial_rs232.c: 38:     TXSTAbits.BRGH=1;
  7488  0033CC  84AC               	bsf	172,2,c	;volatile
  7489  0033CE                     
  7490                           ;serial_rs232.c: 39:     RCSTAbits.SPEN=1;
  7491  0033CE  8EAB               	bsf	171,7,c	;volatile
  7492  0033D0                     
  7493                           ;serial_rs232.c: 40:     RCSTAbits.RX9=0;
  7494  0033D0  9CAB               	bcf	171,6,c	;volatile
  7495  0033D2                     
  7496                           ;serial_rs232.c: 41:     RCSTAbits.CREN=1;
  7497  0033D2  88AB               	bsf	171,4,c	;volatile
  7498  0033D4  0012               	return		;funcret
  7499  0033D6  FFFF               	dw	65535	; errata NOP
  7500  0033D8                     __end_of_init_USART:
  7501                           	callstack 0
  7502                           
  7503 ;; *************** function _roundf *****************
  7504 ;; Defined at:
  7505 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  x               4   60[COMRAM] float 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  y               4   82[COMRAM] float 
  7510 ;;  u               4   78[COMRAM] struct .
  7511 ;;  e               2   72[COMRAM] int 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  4   60[COMRAM] float 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7521 ;;      Params:         4       0       0       0       0       0       0
  7522 ;;      Locals:        18       0       0       0       0       0       0
  7523 ;;      Temps:          4       0       0       0       0       0       0
  7524 ;;      Totals:        26       0       0       0       0       0       0
  7525 ;;Total ram usage:       26 bytes
  7526 ;; Hardware stack levels used: 1
  7527 ;; Hardware stack levels required when called: 4
  7528 ;; This function calls:
  7529 ;;		___fladd
  7530 ;;		___flge
  7531 ;;		___flmul
  7532 ;;		___flneg
  7533 ;;		___flsub
  7534 ;; This function is called by:
  7535 ;;		_init_USART
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text30
  7540  0017F8                     __ptext30:
  7541                           	callstack 0
  7542  0017F8                     _roundf:
  7543                           	callstack 0
  7544  0017F8  FFFF               	dw	65535	; assembler added errata NOP
  7545  0017FA  C09E  F04F         	movff	roundf@F528,roundf@u
  7546  0017FE  C09F  F050         	movff	roundf@F528+1,roundf@u+1
  7547  001802  C0A0  F051         	movff	roundf@F528+2,roundf@u+2
  7548  001806  C0A1  F052         	movff	roundf@F528+3,roundf@u+3
  7549  00180A  C03D  F04F         	movff	roundf@x,roundf@u
  7550  00180E  C03E  F050         	movff	roundf@x+1,roundf@u+1
  7551  001812  C03F  F051         	movff	roundf@x+2,roundf@u+2
  7552  001816  C040  F052         	movff	roundf@x+3,roundf@u+3
  7553  00181A  C04F  F041         	movff	roundf@u,??_roundf
  7554  00181E  C050  F042         	movff	roundf@u+1,??_roundf+1
  7555  001822  C051  F043         	movff	roundf@u+2,??_roundf+2
  7556  001826  C052  F044         	movff	roundf@u+3,??_roundf+3
  7557  00182A  0E18               	movlw	24
  7558  00182C  EF1E  F00C         	goto	u5750
  7559  001830                     u5755:
  7560  001830  FFFF               	dw	65535	; assembler added errata NOP
  7561  001832  90D8               	bcf	status,0,c
  7562  001834  3244               	rrcf	(??_roundf+3)^0,f,c
  7563  001836  3243               	rrcf	(??_roundf+2)^0,f,c
  7564  001838  3242               	rrcf	(??_roundf+1)^0,f,c
  7565  00183A  3241               	rrcf	??_roundf^0,f,c
  7566  00183C                     u5750:
  7567  00183C  FFFF               	dw	65535	; assembler added errata NOP
  7568  00183E  2EE8               	decfsz	wreg,f,c
  7569  001840  EF18  F00C         	goto	u5755
  7570  001844  5041               	movf	??_roundf^0,w,c
  7571  001846  6E49               	movwf	roundf@e^0,c
  7572  001848  6A4A               	clrf	(roundf@e+1)^0,c
  7573  00184A  BE4A               	btfsc	(roundf@e+1)^0,7,c
  7574  00184C  EF31  F00C         	goto	u5761
  7575  001850  504A               	movf	(roundf@e+1)^0,w,c
  7576  001852  E10A               	bnz	u5760
  7577  001854  0E96               	movlw	150
  7578  001856  5C49               	subwf	roundf@e^0,w,c
  7579  001858  A0D8               	btfss	status,0,c
  7580  00185A  EF31  F00C         	goto	u5761
  7581  00185E  EF34  F00C         	goto	u5760
  7582  001862                     u5761:
  7583  001862  FFFF               	dw	65535	; assembler added errata NOP
  7584  001864  EF3F  F00C         	goto	l4825
  7585  001868                     u5760:
  7586  001868  FFFF               	dw	65535	; assembler added errata NOP
  7587  00186A  C03D  F03D         	movff	roundf@x,?_roundf
  7588  00186E  C03E  F03E         	movff	roundf@x+1,?_roundf+1
  7589  001872  C03F  F03F         	movff	roundf@x+2,?_roundf+2
  7590  001876  C040  F040         	movff	roundf@x+3,?_roundf+3
  7591  00187A  EFEC  F00D         	goto	l1248
  7592  00187E                     l4825:
  7593  00187E  FFFF               	dw	65535	; assembler added errata NOP
  7594  001880  C04F  F041         	movff	roundf@u,??_roundf
  7595  001884  C050  F042         	movff	roundf@u+1,??_roundf+1
  7596  001888  C051  F043         	movff	roundf@u+2,??_roundf+2
  7597  00188C  C052  F044         	movff	roundf@u+3,??_roundf+3
  7598  001890  0E20               	movlw	32
  7599  001892  EF51  F00C         	goto	u5770
  7600  001896                     u5775:
  7601  001896  FFFF               	dw	65535	; assembler added errata NOP
  7602  001898  90D8               	bcf	status,0,c
  7603  00189A  3244               	rrcf	(??_roundf+3)^0,f,c
  7604  00189C  3243               	rrcf	(??_roundf+2)^0,f,c
  7605  00189E  3242               	rrcf	(??_roundf+1)^0,f,c
  7606  0018A0  3241               	rrcf	??_roundf^0,f,c
  7607  0018A2                     u5770:
  7608  0018A2  FFFF               	dw	65535	; assembler added errata NOP
  7609  0018A4  2EE8               	decfsz	wreg,f,c
  7610  0018A6  EF4B  F00C         	goto	u5775
  7611  0018AA  5041               	movf	??_roundf^0,w,c
  7612  0018AC  1042               	iorwf	(??_roundf+1)^0,w,c
  7613  0018AE  1043               	iorwf	(??_roundf+2)^0,w,c
  7614  0018B0  1044               	iorwf	(??_roundf+3)^0,w,c
  7615  0018B2  B4D8               	btfsc	status,2,c
  7616  0018B4  EF5E  F00C         	goto	u5781
  7617  0018B8  EF61  F00C         	goto	u5780
  7618  0018BC                     u5781:
  7619  0018BC  FFFF               	dw	65535	; assembler added errata NOP
  7620  0018BE  EF74  F00C         	goto	l4829
  7621  0018C2                     u5780:
  7622  0018C2  FFFF               	dw	65535	; assembler added errata NOP
  7623  0018C4  C03D  F00A         	movff	roundf@x,___flneg@f1
  7624  0018C8  C03E  F00B         	movff	roundf@x+1,___flneg@f1+1
  7625  0018CC  C03F  F00C         	movff	roundf@x+2,___flneg@f1+2
  7626  0018D0  C040  F00D         	movff	roundf@x+3,___flneg@f1+3
  7627  0018D4  ECAB  F019         	call	___flneg	;wreg free
  7628  0018D8  C00A  F03D         	movff	?___flneg,roundf@x
  7629  0018DC  C00B  F03E         	movff	?___flneg+1,roundf@x+1
  7630  0018E0  C00C  F03F         	movff	?___flneg+2,roundf@x+2
  7631  0018E4  C00D  F040         	movff	?___flneg+3,roundf@x+3
  7632  0018E8                     l4829:
  7633  0018E8  FFFF               	dw	65535	; assembler added errata NOP
  7634  0018EA  BE4A               	btfsc	(roundf@e+1)^0,7,c
  7635  0018EC  EF84  F00C         	goto	u5790
  7636  0018F0  504A               	movf	(roundf@e+1)^0,w,c
  7637  0018F2  E107               	bnz	u5791
  7638  0018F4  0E7E               	movlw	126
  7639  0018F6  5C49               	subwf	roundf@e^0,w,c
  7640  0018F8  B0D8               	btfsc	status,0,c
  7641  0018FA  EF81  F00C         	goto	u5791
  7642  0018FE  EF84  F00C         	goto	u5790
  7643  001902                     u5791:
  7644  001902  FFFF               	dw	65535	; assembler added errata NOP
  7645  001904  EFA1  F00C         	goto	l4835
  7646  001908                     u5790:
  7647  001908  FFFF               	dw	65535	; assembler added errata NOP
  7648  00190A  C04F  F00A         	movff	roundf@u,___flmul@b
  7649  00190E  C050  F00B         	movff	roundf@u+1,___flmul@b+1
  7650  001912  C051  F00C         	movff	roundf@u+2,___flmul@b+2
  7651  001916  C052  F00D         	movff	roundf@u+3,___flmul@b+3
  7652  00191A  0E00               	movlw	0
  7653  00191C  6E0E               	movwf	___flmul@a^0,c
  7654  00191E  0E00               	movlw	0
  7655  001920  6E0F               	movwf	(___flmul@a+1)^0,c
  7656  001922  0E00               	movlw	0
  7657  001924  6E10               	movwf	(___flmul@a+2)^0,c
  7658  001926  0E00               	movlw	0
  7659  001928  6E11               	movwf	(___flmul@a+3)^0,c
  7660  00192A  EC91  F007         	call	___flmul	;wreg free
  7661  00192E  C00A  F03D         	movff	?___flmul,?_roundf
  7662  001932  C00B  F03E         	movff	?___flmul+1,?_roundf+1
  7663  001936  C00C  F03F         	movff	?___flmul+2,?_roundf+2
  7664  00193A  C00D  F040         	movff	?___flmul+3,?_roundf+3
  7665  00193E  EFEC  F00D         	goto	l1248
  7666  001942                     l4835:
  7667  001942  FFFF               	dw	65535	; assembler added errata NOP
  7668  001944  0E00               	movlw	0
  7669  001946  6E0E               	movwf	___fladd@a^0,c
  7670  001948  0E00               	movlw	0
  7671  00194A  6E0F               	movwf	(___fladd@a+1)^0,c
  7672  00194C  0E00               	movlw	0
  7673  00194E  6E10               	movwf	(___fladd@a+2)^0,c
  7674  001950  0E4B               	movlw	75
  7675  001952  6E11               	movwf	(___fladd@a+3)^0,c
  7676  001954  C03D  F00A         	movff	roundf@x,___fladd@b
  7677  001958  C03E  F00B         	movff	roundf@x+1,___fladd@b+1
  7678  00195C  C03F  F00C         	movff	roundf@x+2,___fladd@b+2
  7679  001960  C040  F00D         	movff	roundf@x+3,___fladd@b+3
  7680  001964  ECBD  F004         	call	___fladd	;wreg free
  7681  001968  C00A  F04B         	movff	?___fladd,_roundf$1680
  7682  00196C  C00B  F04C         	movff	?___fladd+1,_roundf$1680+1
  7683  001970  C00C  F04D         	movff	?___fladd+2,_roundf$1680+2
  7684  001974  C00D  F04E         	movff	?___fladd+3,_roundf$1680+3
  7685  001978  0E00               	movlw	0
  7686  00197A  6E0E               	movwf	___fladd@a^0,c
  7687  00197C  0E00               	movlw	0
  7688  00197E  6E0F               	movwf	(___fladd@a+1)^0,c
  7689  001980  0E00               	movlw	0
  7690  001982  6E10               	movwf	(___fladd@a+2)^0,c
  7691  001984  0ECB               	movlw	203
  7692  001986  6E11               	movwf	(___fladd@a+3)^0,c
  7693  001988  C04B  F00A         	movff	_roundf$1680,___fladd@b
  7694  00198C  C04C  F00B         	movff	_roundf$1680+1,___fladd@b+1
  7695  001990  C04D  F00C         	movff	_roundf$1680+2,___fladd@b+2
  7696  001994  C04E  F00D         	movff	_roundf$1680+3,___fladd@b+3
  7697  001998  ECBD  F004         	call	___fladd	;wreg free
  7698  00199C  C00A  F045         	movff	?___fladd,_roundf$1681
  7699  0019A0  C00B  F046         	movff	?___fladd+1,_roundf$1681+1
  7700  0019A4  C00C  F047         	movff	?___fladd+2,_roundf$1681+2
  7701  0019A8  C00D  F048         	movff	?___fladd+3,_roundf$1681+3
  7702  0019AC  C045  F01A         	movff	_roundf$1681,___flsub@b
  7703  0019B0  C046  F01B         	movff	_roundf$1681+1,___flsub@b+1
  7704  0019B4  C047  F01C         	movff	_roundf$1681+2,___flsub@b+2
  7705  0019B8  C048  F01D         	movff	_roundf$1681+3,___flsub@b+3
  7706  0019BC  C03D  F01E         	movff	roundf@x,___flsub@a
  7707  0019C0  C03E  F01F         	movff	roundf@x+1,___flsub@a+1
  7708  0019C4  C03F  F020         	movff	roundf@x+2,___flsub@a+2
  7709  0019C8  C040  F021         	movff	roundf@x+3,___flsub@a+3
  7710  0019CC  EC44  F019         	call	___flsub	;wreg free
  7711  0019D0  C01A  F053         	movff	?___flsub,roundf@y
  7712  0019D4  C01B  F054         	movff	?___flsub+1,roundf@y+1
  7713  0019D8  C01C  F055         	movff	?___flsub+2,roundf@y+2
  7714  0019DC  C01D  F056         	movff	?___flsub+3,roundf@y+3
  7715  0019E0  0E00               	movlw	0
  7716  0019E2  6E31               	movwf	___flge@ff1^0,c
  7717  0019E4  0E00               	movlw	0
  7718  0019E6  6E32               	movwf	(___flge@ff1+1)^0,c
  7719  0019E8  0E00               	movlw	0
  7720  0019EA  6E33               	movwf	(___flge@ff1+2)^0,c
  7721  0019EC  0E3F               	movlw	63
  7722  0019EE  6E34               	movwf	(___flge@ff1+3)^0,c
  7723  0019F0  C053  F035         	movff	roundf@y,___flge@ff2
  7724  0019F4  C054  F036         	movff	roundf@y+1,___flge@ff2+1
  7725  0019F8  C055  F037         	movff	roundf@y+2,___flge@ff2+2
  7726  0019FC  C056  F038         	movff	roundf@y+3,___flge@ff2+3
  7727  001A00  EC4D  F013         	call	___flge	;wreg free
  7728  001A04  B0D8               	btfsc	status,0,c
  7729  001A06  EF07  F00D         	goto	u5801
  7730  001A0A  EF0A  F00D         	goto	u5800
  7731  001A0E                     u5801:
  7732  001A0E  FFFF               	dw	65535	; assembler added errata NOP
  7733  001A10  EF41  F00D         	goto	l4839
  7734  001A14                     u5800:
  7735  001A14  FFFF               	dw	65535	; assembler added errata NOP
  7736  001A16  C03D  F00E         	movff	roundf@x,___fladd@a
  7737  001A1A  C03E  F00F         	movff	roundf@x+1,___fladd@a+1
  7738  001A1E  C03F  F010         	movff	roundf@x+2,___fladd@a+2
  7739  001A22  C040  F011         	movff	roundf@x+3,___fladd@a+3
  7740  001A26  C053  F00A         	movff	roundf@y,___fladd@b
  7741  001A2A  C054  F00B         	movff	roundf@y+1,___fladd@b+1
  7742  001A2E  C055  F00C         	movff	roundf@y+2,___fladd@b+2
  7743  001A32  C056  F00D         	movff	roundf@y+3,___fladd@b+3
  7744  001A36  ECBD  F004         	call	___fladd	;wreg free
  7745  001A3A  C00A  F04B         	movff	?___fladd,_roundf$1680
  7746  001A3E  C00B  F04C         	movff	?___fladd+1,_roundf$1680+1
  7747  001A42  C00C  F04D         	movff	?___fladd+2,_roundf$1680+2
  7748  001A46  C00D  F04E         	movff	?___fladd+3,_roundf$1680+3
  7749  001A4A  C04B  F00A         	movff	_roundf$1680,___fladd@b
  7750  001A4E  C04C  F00B         	movff	_roundf$1680+1,___fladd@b+1
  7751  001A52  C04D  F00C         	movff	_roundf$1680+2,___fladd@b+2
  7752  001A56  C04E  F00D         	movff	_roundf$1680+3,___fladd@b+3
  7753  001A5A  0E00               	movlw	0
  7754  001A5C  6E0E               	movwf	___fladd@a^0,c
  7755  001A5E  0E00               	movlw	0
  7756  001A60  6E0F               	movwf	(___fladd@a+1)^0,c
  7757  001A62  0E80               	movlw	128
  7758  001A64  6E10               	movwf	(___fladd@a+2)^0,c
  7759  001A66  0EBF               	movlw	191
  7760  001A68  6E11               	movwf	(___fladd@a+3)^0,c
  7761  001A6A  ECBD  F004         	call	___fladd	;wreg free
  7762  001A6E  C00A  F053         	movff	?___fladd,roundf@y
  7763  001A72  C00B  F054         	movff	?___fladd+1,roundf@y+1
  7764  001A76  C00C  F055         	movff	?___fladd+2,roundf@y+2
  7765  001A7A  C00D  F056         	movff	?___fladd+3,roundf@y+3
  7766  001A7E  EFAE  F00D         	goto	l4845
  7767  001A82                     l4839:
  7768  001A82  FFFF               	dw	65535	; assembler added errata NOP
  7769  001A84  0E00               	movlw	0
  7770  001A86  6E31               	movwf	___flge@ff1^0,c
  7771  001A88  0E00               	movlw	0
  7772  001A8A  6E32               	movwf	(___flge@ff1+1)^0,c
  7773  001A8C  0E00               	movlw	0
  7774  001A8E  6E33               	movwf	(___flge@ff1+2)^0,c
  7775  001A90  0EBF               	movlw	191
  7776  001A92  6E34               	movwf	(___flge@ff1+3)^0,c
  7777  001A94  C053  F035         	movff	roundf@y,___flge@ff2
  7778  001A98  C054  F036         	movff	roundf@y+1,___flge@ff2+1
  7779  001A9C  C055  F037         	movff	roundf@y+2,___flge@ff2+2
  7780  001AA0  C056  F038         	movff	roundf@y+3,___flge@ff2+3
  7781  001AA4  EC4D  F013         	call	___flge	;wreg free
  7782  001AA8  A0D8               	btfss	status,0,c
  7783  001AAA  EF59  F00D         	goto	u5811
  7784  001AAE  EF5C  F00D         	goto	u5810
  7785  001AB2                     u5811:
  7786  001AB2  FFFF               	dw	65535	; assembler added errata NOP
  7787  001AB4  EF93  F00D         	goto	l4843
  7788  001AB8                     u5810:
  7789  001AB8  FFFF               	dw	65535	; assembler added errata NOP
  7790  001ABA  C03D  F00E         	movff	roundf@x,___fladd@a
  7791  001ABE  C03E  F00F         	movff	roundf@x+1,___fladd@a+1
  7792  001AC2  C03F  F010         	movff	roundf@x+2,___fladd@a+2
  7793  001AC6  C040  F011         	movff	roundf@x+3,___fladd@a+3
  7794  001ACA  C053  F00A         	movff	roundf@y,___fladd@b
  7795  001ACE  C054  F00B         	movff	roundf@y+1,___fladd@b+1
  7796  001AD2  C055  F00C         	movff	roundf@y+2,___fladd@b+2
  7797  001AD6  C056  F00D         	movff	roundf@y+3,___fladd@b+3
  7798  001ADA  ECBD  F004         	call	___fladd	;wreg free
  7799  001ADE  C00A  F04B         	movff	?___fladd,_roundf$1680
  7800  001AE2  C00B  F04C         	movff	?___fladd+1,_roundf$1680+1
  7801  001AE6  C00C  F04D         	movff	?___fladd+2,_roundf$1680+2
  7802  001AEA  C00D  F04E         	movff	?___fladd+3,_roundf$1680+3
  7803  001AEE  C04B  F00A         	movff	_roundf$1680,___fladd@b
  7804  001AF2  C04C  F00B         	movff	_roundf$1680+1,___fladd@b+1
  7805  001AF6  C04D  F00C         	movff	_roundf$1680+2,___fladd@b+2
  7806  001AFA  C04E  F00D         	movff	_roundf$1680+3,___fladd@b+3
  7807  001AFE  0E00               	movlw	0
  7808  001B00  6E0E               	movwf	___fladd@a^0,c
  7809  001B02  0E00               	movlw	0
  7810  001B04  6E0F               	movwf	(___fladd@a+1)^0,c
  7811  001B06  0E80               	movlw	128
  7812  001B08  6E10               	movwf	(___fladd@a+2)^0,c
  7813  001B0A  0E3F               	movlw	63
  7814  001B0C  6E11               	movwf	(___fladd@a+3)^0,c
  7815  001B0E  ECBD  F004         	call	___fladd	;wreg free
  7816  001B12  C00A  F053         	movff	?___fladd,roundf@y
  7817  001B16  C00B  F054         	movff	?___fladd+1,roundf@y+1
  7818  001B1A  C00C  F055         	movff	?___fladd+2,roundf@y+2
  7819  001B1E  C00D  F056         	movff	?___fladd+3,roundf@y+3
  7820  001B22  EFAE  F00D         	goto	l4845
  7821  001B26                     l4843:
  7822  001B26  FFFF               	dw	65535	; assembler added errata NOP
  7823  001B28  C053  F00A         	movff	roundf@y,___fladd@b
  7824  001B2C  C054  F00B         	movff	roundf@y+1,___fladd@b+1
  7825  001B30  C055  F00C         	movff	roundf@y+2,___fladd@b+2
  7826  001B34  C056  F00D         	movff	roundf@y+3,___fladd@b+3
  7827  001B38  C03D  F00E         	movff	roundf@x,___fladd@a
  7828  001B3C  C03E  F00F         	movff	roundf@x+1,___fladd@a+1
  7829  001B40  C03F  F010         	movff	roundf@x+2,___fladd@a+2
  7830  001B44  C040  F011         	movff	roundf@x+3,___fladd@a+3
  7831  001B48  ECBD  F004         	call	___fladd	;wreg free
  7832  001B4C  C00A  F053         	movff	?___fladd,roundf@y
  7833  001B50  C00B  F054         	movff	?___fladd+1,roundf@y+1
  7834  001B54  C00C  F055         	movff	?___fladd+2,roundf@y+2
  7835  001B58  C00D  F056         	movff	?___fladd+3,roundf@y+3
  7836  001B5C                     l4845:
  7837  001B5C  FFFF               	dw	65535	; assembler added errata NOP
  7838  001B5E  C04F  F041         	movff	roundf@u,??_roundf
  7839  001B62  C050  F042         	movff	roundf@u+1,??_roundf+1
  7840  001B66  C051  F043         	movff	roundf@u+2,??_roundf+2
  7841  001B6A  C052  F044         	movff	roundf@u+3,??_roundf+3
  7842  001B6E  0E20               	movlw	32
  7843  001B70  EFC0  F00D         	goto	u5820
  7844  001B74                     u5825:
  7845  001B74  FFFF               	dw	65535	; assembler added errata NOP
  7846  001B76  90D8               	bcf	status,0,c
  7847  001B78  3244               	rrcf	(??_roundf+3)^0,f,c
  7848  001B7A  3243               	rrcf	(??_roundf+2)^0,f,c
  7849  001B7C  3242               	rrcf	(??_roundf+1)^0,f,c
  7850  001B7E  3241               	rrcf	??_roundf^0,f,c
  7851  001B80                     u5820:
  7852  001B80  FFFF               	dw	65535	; assembler added errata NOP
  7853  001B82  2EE8               	decfsz	wreg,f,c
  7854  001B84  EFBA  F00D         	goto	u5825
  7855  001B88  5041               	movf	??_roundf^0,w,c
  7856  001B8A  1042               	iorwf	(??_roundf+1)^0,w,c
  7857  001B8C  1043               	iorwf	(??_roundf+2)^0,w,c
  7858  001B8E  1044               	iorwf	(??_roundf+3)^0,w,c
  7859  001B90  B4D8               	btfsc	status,2,c
  7860  001B92  EFCD  F00D         	goto	u5831
  7861  001B96  EFD0  F00D         	goto	u5830
  7862  001B9A                     u5831:
  7863  001B9A  FFFF               	dw	65535	; assembler added errata NOP
  7864  001B9C  EFE3  F00D         	goto	l4849
  7865  001BA0                     u5830:
  7866  001BA0  FFFF               	dw	65535	; assembler added errata NOP
  7867  001BA2  C053  F00A         	movff	roundf@y,___flneg@f1
  7868  001BA6  C054  F00B         	movff	roundf@y+1,___flneg@f1+1
  7869  001BAA  C055  F00C         	movff	roundf@y+2,___flneg@f1+2
  7870  001BAE  C056  F00D         	movff	roundf@y+3,___flneg@f1+3
  7871  001BB2  ECAB  F019         	call	___flneg	;wreg free
  7872  001BB6  C00A  F053         	movff	?___flneg,roundf@y
  7873  001BBA  C00B  F054         	movff	?___flneg+1,roundf@y+1
  7874  001BBE  C00C  F055         	movff	?___flneg+2,roundf@y+2
  7875  001BC2  C00D  F056         	movff	?___flneg+3,roundf@y+3
  7876  001BC6                     l4849:
  7877  001BC6  FFFF               	dw	65535	; assembler added errata NOP
  7878  001BC8  C053  F03D         	movff	roundf@y,?_roundf
  7879  001BCC  C054  F03E         	movff	roundf@y+1,?_roundf+1
  7880  001BD0  C055  F03F         	movff	roundf@y+2,?_roundf+2
  7881  001BD4  C056  F040         	movff	roundf@y+3,?_roundf+3
  7882  001BD8                     l1248:
  7883  001BD8  FFFF               	dw	65535	; assembler added errata NOP
  7884  001BDA  0012               	return		;funcret
  7885  001BDC  FFFF               	dw	65535	; errata NOP
  7886  001BDE                     __end_of_roundf:
  7887                           	callstack 0
  7888                           
  7889 ;; *************** function ___flsub *****************
  7890 ;; Defined at:
  7891 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  b               4   25[COMRAM] float 
  7894 ;;  a               4   29[COMRAM] float 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  4   25[COMRAM] float 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0, cstack
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7906 ;;      Params:         8       0       0       0       0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0
  7909 ;;      Totals:         8       0       0       0       0       0       0
  7910 ;;Total ram usage:        8 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; Hardware stack levels required when called: 3
  7913 ;; This function calls:
  7914 ;;		___fladd
  7915 ;; This function is called by:
  7916 ;;		_roundf
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text31
  7921  003288                     __ptext31:
  7922                           	callstack 0
  7923  003288                     ___flsub:
  7924                           	callstack 0
  7925  003288  FFFF               	dw	65535	; assembler added errata NOP
  7926  00328A  0E00               	movlw	0
  7927  00328C  1A1E               	xorwf	___flsub@a^0,f,c
  7928  00328E  0E00               	movlw	0
  7929  003290  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7930  003292  0E00               	movlw	0
  7931  003294  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7932  003296  0E80               	movlw	128
  7933  003298  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7934  00329A  C01A  F00A         	movff	___flsub@b,___fladd@b
  7935  00329E  C01B  F00B         	movff	___flsub@b+1,___fladd@b+1
  7936  0032A2  C01C  F00C         	movff	___flsub@b+2,___fladd@b+2
  7937  0032A6  C01D  F00D         	movff	___flsub@b+3,___fladd@b+3
  7938  0032AA  C01E  F00E         	movff	___flsub@a,___fladd@a
  7939  0032AE  C01F  F00F         	movff	___flsub@a+1,___fladd@a+1
  7940  0032B2  C020  F010         	movff	___flsub@a+2,___fladd@a+2
  7941  0032B6  C021  F011         	movff	___flsub@a+3,___fladd@a+3
  7942  0032BA  ECBD  F004         	call	___fladd	;wreg free
  7943  0032BE  C00A  F01A         	movff	?___fladd,?___flsub
  7944  0032C2  C00B  F01B         	movff	?___fladd+1,?___flsub+1
  7945  0032C6  C00C  F01C         	movff	?___fladd+2,?___flsub+2
  7946  0032CA  C00D  F01D         	movff	?___fladd+3,?___flsub+3
  7947  0032CE  0012               	return		;funcret
  7948  0032D0  FFFF               	dw	65535	; errata NOP
  7949  0032D2                     __end_of___flsub:
  7950                           	callstack 0
  7951                           
  7952 ;; *************** function ___fladd *****************
  7953 ;; Defined at:
  7954 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  b               4    9[COMRAM] float 
  7957 ;;  a               4   13[COMRAM] float 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  grs             1   24[COMRAM] unsigned char 
  7960 ;;  bexp            1   23[COMRAM] unsigned char 
  7961 ;;  aexp            1   22[COMRAM] unsigned char 
  7962 ;;  signs           1   21[COMRAM] unsigned char 
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  4    9[COMRAM] unsigned char 
  7965 ;; Registers used:
  7966 ;;		wreg, status,2, status,0
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7972 ;;      Params:         8       0       0       0       0       0       0
  7973 ;;      Locals:         4       0       0       0       0       0       0
  7974 ;;      Temps:          4       0       0       0       0       0       0
  7975 ;;      Totals:        16       0       0       0       0       0       0
  7976 ;;Total ram usage:       16 bytes
  7977 ;; Hardware stack levels used: 1
  7978 ;; Hardware stack levels required when called: 2
  7979 ;; This function calls:
  7980 ;;		Nothing
  7981 ;; This function is called by:
  7982 ;;		___flsub
  7983 ;;		_roundf
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text32
  7988  00097A                     __ptext32:
  7989                           	callstack 0
  7990  00097A                     ___fladd:
  7991                           	callstack 0
  7992  00097A  FFFF               	dw	65535	; assembler added errata NOP
  7993  00097C  500D               	movf	(___fladd@b+3)^0,w,c
  7994  00097E  0B80               	andlw	128
  7995  000980  6E16               	movwf	___fladd@signs^0,c
  7996  000982  500D               	movf	(___fladd@b+3)^0,w,c
  7997  000984  240D               	addwf	(___fladd@b+3)^0,w,c
  7998  000986  6E18               	movwf	___fladd@bexp^0,c
  7999  000988  AE0C               	btfss	(___fladd@b+2)^0,7,c
  8000  00098A  EFC9  F004         	goto	u2591
  8001  00098E  EFCC  F004         	goto	u2590
  8002  000992                     u2591:
  8003  000992  FFFF               	dw	65535	; assembler added errata NOP
  8004  000994  EFCE  F004         	goto	l2881
  8005  000998                     u2590:
  8006  000998  FFFF               	dw	65535	; assembler added errata NOP
  8007  00099A  8018               	bsf	___fladd@bexp^0,0,c
  8008  00099C                     l2881:
  8009  00099C  FFFF               	dw	65535	; assembler added errata NOP
  8010  00099E  5018               	movf	___fladd@bexp^0,w,c
  8011  0009A0  B4D8               	btfsc	status,2,c
  8012  0009A2  EFD5  F004         	goto	u2601
  8013  0009A6  EFD8  F004         	goto	u2600
  8014  0009AA                     u2601:
  8015  0009AA  FFFF               	dw	65535	; assembler added errata NOP
  8016  0009AC  EFF1  F004         	goto	l2891
  8017  0009B0                     u2600:
  8018  0009B0  FFFF               	dw	65535	; assembler added errata NOP
  8019  0009B2  2818               	incf	___fladd@bexp^0,w,c
  8020  0009B4  A4D8               	btfss	status,2,c
  8021  0009B6  EFDF  F004         	goto	u2611
  8022  0009BA  EFE2  F004         	goto	u2610
  8023  0009BE                     u2611:
  8024  0009BE  FFFF               	dw	65535	; assembler added errata NOP
  8025  0009C0  EFEB  F004         	goto	l2887
  8026  0009C4                     u2610:
  8027  0009C4  FFFF               	dw	65535	; assembler added errata NOP
  8028  0009C6  0E00               	movlw	0
  8029  0009C8  6E0A               	movwf	___fladd@b^0,c
  8030  0009CA  0E00               	movlw	0
  8031  0009CC  6E0B               	movwf	(___fladd@b+1)^0,c
  8032  0009CE  0E00               	movlw	0
  8033  0009D0  6E0C               	movwf	(___fladd@b+2)^0,c
  8034  0009D2  0E00               	movlw	0
  8035  0009D4  6E0D               	movwf	(___fladd@b+3)^0,c
  8036  0009D6                     l2887:
  8037  0009D6  FFFF               	dw	65535	; assembler added errata NOP
  8038  0009D8  8E0C               	bsf	(___fladd@b+2)^0,7,c
  8039  0009DA  0E00               	movlw	0
  8040  0009DC  6E0D               	movwf	(___fladd@b+3)^0,c
  8041  0009DE  EFFA  F004         	goto	l2893
  8042  0009E2                     l2891:
  8043  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  8044  0009E4  0E00               	movlw	0
  8045  0009E6  6E0A               	movwf	___fladd@b^0,c
  8046  0009E8  0E00               	movlw	0
  8047  0009EA  6E0B               	movwf	(___fladd@b+1)^0,c
  8048  0009EC  0E00               	movlw	0
  8049  0009EE  6E0C               	movwf	(___fladd@b+2)^0,c
  8050  0009F0  0E00               	movlw	0
  8051  0009F2  6E0D               	movwf	(___fladd@b+3)^0,c
  8052  0009F4                     l2893:
  8053  0009F4  FFFF               	dw	65535	; assembler added errata NOP
  8054  0009F6  5011               	movf	(___fladd@a+3)^0,w,c
  8055  0009F8  0B80               	andlw	128
  8056  0009FA  6E17               	movwf	___fladd@aexp^0,c
  8057  0009FC  5016               	movf	___fladd@signs^0,w,c
  8058  0009FE  1817               	xorwf	___fladd@aexp^0,w,c
  8059  000A00  B4D8               	btfsc	status,2,c
  8060  000A02  EF05  F005         	goto	u2621
  8061  000A06  EF08  F005         	goto	u2620
  8062  000A0A                     u2621:
  8063  000A0A  FFFF               	dw	65535	; assembler added errata NOP
  8064  000A0C  EF0A  F005         	goto	l2899
  8065  000A10                     u2620:
  8066  000A10  FFFF               	dw	65535	; assembler added errata NOP
  8067  000A12  8C16               	bsf	___fladd@signs^0,6,c
  8068  000A14                     l2899:
  8069  000A14  FFFF               	dw	65535	; assembler added errata NOP
  8070  000A16  5011               	movf	(___fladd@a+3)^0,w,c
  8071  000A18  2411               	addwf	(___fladd@a+3)^0,w,c
  8072  000A1A  6E17               	movwf	___fladd@aexp^0,c
  8073  000A1C  AE10               	btfss	(___fladd@a+2)^0,7,c
  8074  000A1E  EF13  F005         	goto	u2631
  8075  000A22  EF16  F005         	goto	u2630
  8076  000A26                     u2631:
  8077  000A26  FFFF               	dw	65535	; assembler added errata NOP
  8078  000A28  EF18  F005         	goto	l2905
  8079  000A2C                     u2630:
  8080  000A2C  FFFF               	dw	65535	; assembler added errata NOP
  8081  000A2E  8017               	bsf	___fladd@aexp^0,0,c
  8082  000A30                     l2905:
  8083  000A30  FFFF               	dw	65535	; assembler added errata NOP
  8084  000A32  5017               	movf	___fladd@aexp^0,w,c
  8085  000A34  B4D8               	btfsc	status,2,c
  8086  000A36  EF1F  F005         	goto	u2641
  8087  000A3A  EF22  F005         	goto	u2640
  8088  000A3E                     u2641:
  8089  000A3E  FFFF               	dw	65535	; assembler added errata NOP
  8090  000A40  EF3B  F005         	goto	l2915
  8091  000A44                     u2640:
  8092  000A44  FFFF               	dw	65535	; assembler added errata NOP
  8093  000A46  2817               	incf	___fladd@aexp^0,w,c
  8094  000A48  A4D8               	btfss	status,2,c
  8095  000A4A  EF29  F005         	goto	u2651
  8096  000A4E  EF2C  F005         	goto	u2650
  8097  000A52                     u2651:
  8098  000A52  FFFF               	dw	65535	; assembler added errata NOP
  8099  000A54  EF35  F005         	goto	l2911
  8100  000A58                     u2650:
  8101  000A58  FFFF               	dw	65535	; assembler added errata NOP
  8102  000A5A  0E00               	movlw	0
  8103  000A5C  6E0E               	movwf	___fladd@a^0,c
  8104  000A5E  0E00               	movlw	0
  8105  000A60  6E0F               	movwf	(___fladd@a+1)^0,c
  8106  000A62  0E00               	movlw	0
  8107  000A64  6E10               	movwf	(___fladd@a+2)^0,c
  8108  000A66  0E00               	movlw	0
  8109  000A68  6E11               	movwf	(___fladd@a+3)^0,c
  8110  000A6A                     l2911:
  8111  000A6A  FFFF               	dw	65535	; assembler added errata NOP
  8112  000A6C  8E10               	bsf	(___fladd@a+2)^0,7,c
  8113  000A6E  0E00               	movlw	0
  8114  000A70  6E11               	movwf	(___fladd@a+3)^0,c
  8115  000A72  EF44  F005         	goto	l2917
  8116  000A76                     l2915:
  8117  000A76  FFFF               	dw	65535	; assembler added errata NOP
  8118  000A78  0E00               	movlw	0
  8119  000A7A  6E0E               	movwf	___fladd@a^0,c
  8120  000A7C  0E00               	movlw	0
  8121  000A7E  6E0F               	movwf	(___fladd@a+1)^0,c
  8122  000A80  0E00               	movlw	0
  8123  000A82  6E10               	movwf	(___fladd@a+2)^0,c
  8124  000A84  0E00               	movlw	0
  8125  000A86  6E11               	movwf	(___fladd@a+3)^0,c
  8126  000A88                     l2917:
  8127  000A88  FFFF               	dw	65535	; assembler added errata NOP
  8128  000A8A  5018               	movf	___fladd@bexp^0,w,c
  8129  000A8C  5C17               	subwf	___fladd@aexp^0,w,c
  8130  000A8E  B0D8               	btfsc	status,0,c
  8131  000A90  EF4C  F005         	goto	u2661
  8132  000A94  EF4F  F005         	goto	u2660
  8133  000A98                     u2661:
  8134  000A98  FFFF               	dw	65535	; assembler added errata NOP
  8135  000A9A  EF7A  F005         	goto	l2953
  8136  000A9E                     u2660:
  8137  000A9E  FFFF               	dw	65535	; assembler added errata NOP
  8138  000AA0  AC16               	btfss	___fladd@signs^0,6,c
  8139  000AA2  EF55  F005         	goto	u2671
  8140  000AA6  EF58  F005         	goto	u2670
  8141  000AAA                     u2671:
  8142  000AAA  FFFF               	dw	65535	; assembler added errata NOP
  8143  000AAC  EF5B  F005         	goto	l2923
  8144  000AB0                     u2670:
  8145  000AB0  FFFF               	dw	65535	; assembler added errata NOP
  8146  000AB2  0E80               	movlw	128
  8147  000AB4  1A16               	xorwf	___fladd@signs^0,f,c
  8148  000AB6                     l2923:
  8149  000AB6  FFFF               	dw	65535	; assembler added errata NOP
  8150  000AB8  C018  F019         	movff	___fladd@bexp,___fladd@grs
  8151  000ABC  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  8152  000AC0  C019  F017         	movff	___fladd@grs,___fladd@aexp
  8153  000AC4  C00A  F019         	movff	___fladd@b,___fladd@grs
  8154  000AC8  C00E  F00A         	movff	___fladd@a,___fladd@b
  8155  000ACC  C019  F00E         	movff	___fladd@grs,___fladd@a
  8156  000AD0  C00B  F019         	movff	___fladd@b+1,___fladd@grs
  8157  000AD4  C00F  F00B         	movff	___fladd@a+1,___fladd@b+1
  8158  000AD8  C019  F00F         	movff	___fladd@grs,___fladd@a+1
  8159  000ADC  C00C  F019         	movff	___fladd@b+2,___fladd@grs
  8160  000AE0  C010  F00C         	movff	___fladd@a+2,___fladd@b+2
  8161  000AE4  C019  F010         	movff	___fladd@grs,___fladd@a+2
  8162  000AE8  C00D  F019         	movff	___fladd@b+3,___fladd@grs
  8163  000AEC  C011  F00D         	movff	___fladd@a+3,___fladd@b+3
  8164  000AF0  C019  F011         	movff	___fladd@grs,___fladd@a+3
  8165  000AF4                     l2953:
  8166  000AF4  FFFF               	dw	65535	; assembler added errata NOP
  8167  000AF6  0E00               	movlw	0
  8168  000AF8  6E19               	movwf	___fladd@grs^0,c
  8169  000AFA  5018               	movf	___fladd@bexp^0,w,c
  8170  000AFC  C017  F012         	movff	___fladd@aexp,??___fladd
  8171  000B00  6A13               	clrf	(??___fladd+1)^0,c
  8172  000B02  5E12               	subwf	??___fladd^0,f,c
  8173  000B04  0E00               	movlw	0
  8174  000B06  5A13               	subwfb	(??___fladd+1)^0,f,c
  8175  000B08  BE13               	btfsc	(??___fladd+1)^0,7,c
  8176  000B0A  EF90  F005         	goto	u2681
  8177  000B0E  5013               	movf	(??___fladd+1)^0,w,c
  8178  000B10  E10A               	bnz	u2680
  8179  000B12  0E1A               	movlw	26
  8180  000B14  5C12               	subwf	??___fladd^0,w,c
  8181  000B16  A0D8               	btfss	status,0,c
  8182  000B18  EF90  F005         	goto	u2681
  8183  000B1C  EF93  F005         	goto	u2680
  8184  000B20                     u2681:
  8185  000B20  FFFF               	dw	65535	; assembler added errata NOP
  8186  000B22  EFD6  F005         	goto	l1043
  8187  000B26                     u2680:
  8188  000B26  FFFF               	dw	65535	; assembler added errata NOP
  8189  000B28  500A               	movf	___fladd@b^0,w,c
  8190  000B2A  100B               	iorwf	(___fladd@b+1)^0,w,c
  8191  000B2C  100C               	iorwf	(___fladd@b+2)^0,w,c
  8192  000B2E  100D               	iorwf	(___fladd@b+3)^0,w,c
  8193  000B30  A4D8               	btfss	status,2,c
  8194  000B32  EF9D  F005         	goto	u2691
  8195  000B36  EFA1  F005         	goto	u2690
  8196  000B3A                     u2691:
  8197  000B3A  FFFF               	dw	65535	; assembler added errata NOP
  8198  000B3C  0E01               	movlw	1
  8199  000B3E  EFA3  F005         	goto	u2700
  8200  000B42                     u2690:
  8201  000B42  FFFF               	dw	65535	; assembler added errata NOP
  8202  000B44  0E00               	movlw	0
  8203  000B46                     u2700:
  8204  000B46  FFFF               	dw	65535	; assembler added errata NOP
  8205  000B48  6E19               	movwf	___fladd@grs^0,c
  8206  000B4A  0E00               	movlw	0
  8207  000B4C  6E0A               	movwf	___fladd@b^0,c
  8208  000B4E  0E00               	movlw	0
  8209  000B50  6E0B               	movwf	(___fladd@b+1)^0,c
  8210  000B52  0E00               	movlw	0
  8211  000B54  6E0C               	movwf	(___fladd@b+2)^0,c
  8212  000B56  0E00               	movlw	0
  8213  000B58  6E0D               	movwf	(___fladd@b+3)^0,c
  8214  000B5A  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  8215  000B5E  EFE1  F005         	goto	l1042
  8216  000B62                     l1044:
  8217  000B62  FFFF               	dw	65535	; assembler added errata NOP
  8218  000B64  A019               	btfss	___fladd@grs^0,0,c
  8219  000B66  EFB7  F005         	goto	u2711
  8220  000B6A  EFBA  F005         	goto	u2710
  8221  000B6E                     u2711:
  8222  000B6E  FFFF               	dw	65535	; assembler added errata NOP
  8223  000B70  EFC1  F005         	goto	l2965
  8224  000B74                     u2710:
  8225  000B74  FFFF               	dw	65535	; assembler added errata NOP
  8226  000B76  90D8               	bcf	status,0,c
  8227  000B78  3019               	rrcf	___fladd@grs^0,w,c
  8228  000B7A  0901               	iorlw	1
  8229  000B7C  6E19               	movwf	___fladd@grs^0,c
  8230  000B7E  EFC4  F005         	goto	l2967
  8231  000B82                     l2965:
  8232  000B82  FFFF               	dw	65535	; assembler added errata NOP
  8233  000B84  90D8               	bcf	status,0,c
  8234  000B86  3219               	rrcf	___fladd@grs^0,f,c
  8235  000B88                     l2967:
  8236  000B88  FFFF               	dw	65535	; assembler added errata NOP
  8237  000B8A  A00A               	btfss	___fladd@b^0,0,c
  8238  000B8C  EFCA  F005         	goto	u2721
  8239  000B90  EFCD  F005         	goto	u2720
  8240  000B94                     u2721:
  8241  000B94  FFFF               	dw	65535	; assembler added errata NOP
  8242  000B96  EFCF  F005         	goto	l2971
  8243  000B9A                     u2720:
  8244  000B9A  FFFF               	dw	65535	; assembler added errata NOP
  8245  000B9C  8E19               	bsf	___fladd@grs^0,7,c
  8246  000B9E                     l2971:
  8247  000B9E  FFFF               	dw	65535	; assembler added errata NOP
  8248  000BA0  340D               	rlcf	(___fladd@b+3)^0,w,c
  8249  000BA2  320D               	rrcf	(___fladd@b+3)^0,f,c
  8250  000BA4  320C               	rrcf	(___fladd@b+2)^0,f,c
  8251  000BA6  320B               	rrcf	(___fladd@b+1)^0,f,c
  8252  000BA8  320A               	rrcf	___fladd@b^0,f,c
  8253  000BAA  2A18               	incf	___fladd@bexp^0,f,c
  8254  000BAC                     l1043:
  8255  000BAC  FFFF               	dw	65535	; assembler added errata NOP
  8256  000BAE  5017               	movf	___fladd@aexp^0,w,c
  8257  000BB0  5C18               	subwf	___fladd@bexp^0,w,c
  8258  000BB2  A0D8               	btfss	status,0,c
  8259  000BB4  EFDE  F005         	goto	u2731
  8260  000BB8  EFE1  F005         	goto	u2730
  8261  000BBC                     u2731:
  8262  000BBC  FFFF               	dw	65535	; assembler added errata NOP
  8263  000BBE  EFB1  F005         	goto	l1044
  8264  000BC2                     u2730:
  8265  000BC2                     l1042:
  8266  000BC2  FFFF               	dw	65535	; assembler added errata NOP
  8267  000BC4  BC16               	btfsc	___fladd@signs^0,6,c
  8268  000BC6  EFE7  F005         	goto	u2741
  8269  000BCA  EFEA  F005         	goto	u2740
  8270  000BCE                     u2741:
  8271  000BCE  FFFF               	dw	65535	; assembler added errata NOP
  8272  000BD0  EF37  F006         	goto	l2999
  8273  000BD4                     u2740:
  8274  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  8275  000BD6  5018               	movf	___fladd@bexp^0,w,c
  8276  000BD8  A4D8               	btfss	status,2,c
  8277  000BDA  EFF1  F005         	goto	u2751
  8278  000BDE  EFF4  F005         	goto	u2750
  8279  000BE2                     u2751:
  8280  000BE2  FFFF               	dw	65535	; assembler added errata NOP
  8281  000BE4  EFFF  F005         	goto	l2981
  8282  000BE8                     u2750:
  8283  000BE8  FFFF               	dw	65535	; assembler added errata NOP
  8284  000BEA  0E00               	movlw	0
  8285  000BEC  6E0A               	movwf	?___fladd^0,c
  8286  000BEE  0E00               	movlw	0
  8287  000BF0  6E0B               	movwf	(?___fladd+1)^0,c
  8288  000BF2  0E00               	movlw	0
  8289  000BF4  6E0C               	movwf	(?___fladd+2)^0,c
  8290  000BF6  0E00               	movlw	0
  8291  000BF8  6E0D               	movwf	(?___fladd+3)^0,c
  8292  000BFA  EF8E  F007         	goto	l1051
  8293  000BFE                     l2981:
  8294  000BFE  FFFF               	dw	65535	; assembler added errata NOP
  8295  000C00  500E               	movf	___fladd@a^0,w,c
  8296  000C02  260A               	addwf	___fladd@b^0,f,c
  8297  000C04  500F               	movf	(___fladd@a+1)^0,w,c
  8298  000C06  220B               	addwfc	(___fladd@b+1)^0,f,c
  8299  000C08  5010               	movf	(___fladd@a+2)^0,w,c
  8300  000C0A  220C               	addwfc	(___fladd@b+2)^0,f,c
  8301  000C0C  5011               	movf	(___fladd@a+3)^0,w,c
  8302  000C0E  220D               	addwfc	(___fladd@b+3)^0,f,c
  8303  000C10  A00D               	btfss	(___fladd@b+3)^0,0,c
  8304  000C12  EF0D  F006         	goto	u2761
  8305  000C16  EF10  F006         	goto	u2760
  8306  000C1A                     u2761:
  8307  000C1A  FFFF               	dw	65535	; assembler added errata NOP
  8308  000C1C  EFDB  F006         	goto	l3035
  8309  000C20                     u2760:
  8310  000C20  FFFF               	dw	65535	; assembler added errata NOP
  8311  000C22  A019               	btfss	___fladd@grs^0,0,c
  8312  000C24  EF16  F006         	goto	u2771
  8313  000C28  EF19  F006         	goto	u2770
  8314  000C2C                     u2771:
  8315  000C2C  FFFF               	dw	65535	; assembler added errata NOP
  8316  000C2E  EF20  F006         	goto	l2989
  8317  000C32                     u2770:
  8318  000C32  FFFF               	dw	65535	; assembler added errata NOP
  8319  000C34  90D8               	bcf	status,0,c
  8320  000C36  3019               	rrcf	___fladd@grs^0,w,c
  8321  000C38  0901               	iorlw	1
  8322  000C3A  6E19               	movwf	___fladd@grs^0,c
  8323  000C3C  EF23  F006         	goto	l2991
  8324  000C40                     l2989:
  8325  000C40  FFFF               	dw	65535	; assembler added errata NOP
  8326  000C42  90D8               	bcf	status,0,c
  8327  000C44  3219               	rrcf	___fladd@grs^0,f,c
  8328  000C46                     l2991:
  8329  000C46  FFFF               	dw	65535	; assembler added errata NOP
  8330  000C48  A00A               	btfss	___fladd@b^0,0,c
  8331  000C4A  EF29  F006         	goto	u2781
  8332  000C4E  EF2C  F006         	goto	u2780
  8333  000C52                     u2781:
  8334  000C52  FFFF               	dw	65535	; assembler added errata NOP
  8335  000C54  EF2E  F006         	goto	l2995
  8336  000C58                     u2780:
  8337  000C58  FFFF               	dw	65535	; assembler added errata NOP
  8338  000C5A  8E19               	bsf	___fladd@grs^0,7,c
  8339  000C5C                     l2995:
  8340  000C5C  FFFF               	dw	65535	; assembler added errata NOP
  8341  000C5E  340D               	rlcf	(___fladd@b+3)^0,w,c
  8342  000C60  320D               	rrcf	(___fladd@b+3)^0,f,c
  8343  000C62  320C               	rrcf	(___fladd@b+2)^0,f,c
  8344  000C64  320B               	rrcf	(___fladd@b+1)^0,f,c
  8345  000C66  320A               	rrcf	___fladd@b^0,f,c
  8346  000C68  2A18               	incf	___fladd@bexp^0,f,c
  8347  000C6A  EFDB  F006         	goto	l3035
  8348  000C6E                     l2999:
  8349  000C6E  FFFF               	dw	65535	; assembler added errata NOP
  8350  000C70  500E               	movf	___fladd@a^0,w,c
  8351  000C72  5C0A               	subwf	___fladd@b^0,w,c
  8352  000C74  500F               	movf	(___fladd@a+1)^0,w,c
  8353  000C76  580B               	subwfb	(___fladd@b+1)^0,w,c
  8354  000C78  5010               	movf	(___fladd@a+2)^0,w,c
  8355  000C7A  580C               	subwfb	(___fladd@b+2)^0,w,c
  8356  000C7C  500D               	movf	(___fladd@b+3)^0,w,c
  8357  000C7E  0A80               	xorlw	128
  8358  000C80  6E12               	movwf	??___fladd^0,c
  8359  000C82  5011               	movf	(___fladd@a+3)^0,w,c
  8360  000C84  0A80               	xorlw	128
  8361  000C86  5812               	subwfb	??___fladd^0,w,c
  8362  000C88  B0D8               	btfsc	status,0,c
  8363  000C8A  EF49  F006         	goto	u2791
  8364  000C8E  EF4C  F006         	goto	u2790
  8365  000C92                     u2791:
  8366  000C92  FFFF               	dw	65535	; assembler added errata NOP
  8367  000C94  EF7A  F006         	goto	l3009
  8368  000C98                     u2790:
  8369  000C98  FFFF               	dw	65535	; assembler added errata NOP
  8370  000C9A  500A               	movf	___fladd@b^0,w,c
  8371  000C9C  5C0E               	subwf	___fladd@a^0,w,c
  8372  000C9E  6E12               	movwf	??___fladd^0,c
  8373  000CA0  500B               	movf	(___fladd@b+1)^0,w,c
  8374  000CA2  580F               	subwfb	(___fladd@a+1)^0,w,c
  8375  000CA4  6E13               	movwf	(??___fladd+1)^0,c
  8376  000CA6  500C               	movf	(___fladd@b+2)^0,w,c
  8377  000CA8  5810               	subwfb	(___fladd@a+2)^0,w,c
  8378  000CAA  6E14               	movwf	(??___fladd+2)^0,c
  8379  000CAC  500D               	movf	(___fladd@b+3)^0,w,c
  8380  000CAE  5811               	subwfb	(___fladd@a+3)^0,w,c
  8381  000CB0  6E15               	movwf	(??___fladd+3)^0,c
  8382  000CB2  0EFF               	movlw	255
  8383  000CB4  2412               	addwf	??___fladd^0,w,c
  8384  000CB6  6E0A               	movwf	___fladd@b^0,c
  8385  000CB8  0EFF               	movlw	255
  8386  000CBA  2013               	addwfc	(??___fladd+1)^0,w,c
  8387  000CBC  6E0B               	movwf	(___fladd@b+1)^0,c
  8388  000CBE  0EFF               	movlw	255
  8389  000CC0  2014               	addwfc	(??___fladd+2)^0,w,c
  8390  000CC2  6E0C               	movwf	(___fladd@b+2)^0,c
  8391  000CC4  0EFF               	movlw	255
  8392  000CC6  2015               	addwfc	(??___fladd+3)^0,w,c
  8393  000CC8  6E0D               	movwf	(___fladd@b+3)^0,c
  8394  000CCA  0E80               	movlw	128
  8395  000CCC  1A16               	xorwf	___fladd@signs^0,f,c
  8396  000CCE  6C19               	negf	___fladd@grs^0,c
  8397  000CD0  5019               	movf	___fladd@grs^0,w,c
  8398  000CD2  A4D8               	btfss	status,2,c
  8399  000CD4  EF6E  F006         	goto	u2801
  8400  000CD8  EF71  F006         	goto	u2800
  8401  000CDC                     u2801:
  8402  000CDC  FFFF               	dw	65535	; assembler added errata NOP
  8403  000CDE  EF83  F006         	goto	l1059
  8404  000CE2                     u2800:
  8405  000CE2  FFFF               	dw	65535	; assembler added errata NOP
  8406  000CE4  0E01               	movlw	1
  8407  000CE6  260A               	addwf	___fladd@b^0,f,c
  8408  000CE8  0E00               	movlw	0
  8409  000CEA  220B               	addwfc	(___fladd@b+1)^0,f,c
  8410  000CEC  220C               	addwfc	(___fladd@b+2)^0,f,c
  8411  000CEE  220D               	addwfc	(___fladd@b+3)^0,f,c
  8412  000CF0  EF83  F006         	goto	l1059
  8413  000CF4                     l3009:
  8414  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  8415  000CF6  500E               	movf	___fladd@a^0,w,c
  8416  000CF8  5E0A               	subwf	___fladd@b^0,f,c
  8417  000CFA  500F               	movf	(___fladd@a+1)^0,w,c
  8418  000CFC  5A0B               	subwfb	(___fladd@b+1)^0,f,c
  8419  000CFE  5010               	movf	(___fladd@a+2)^0,w,c
  8420  000D00  5A0C               	subwfb	(___fladd@b+2)^0,f,c
  8421  000D02  5011               	movf	(___fladd@a+3)^0,w,c
  8422  000D04  5A0D               	subwfb	(___fladd@b+3)^0,f,c
  8423  000D06                     l1059:
  8424  000D06  FFFF               	dw	65535	; assembler added errata NOP
  8425  000D08  500A               	movf	___fladd@b^0,w,c
  8426  000D0A  100B               	iorwf	(___fladd@b+1)^0,w,c
  8427  000D0C  100C               	iorwf	(___fladd@b+2)^0,w,c
  8428  000D0E  100D               	iorwf	(___fladd@b+3)^0,w,c
  8429  000D10  A4D8               	btfss	status,2,c
  8430  000D12  EF8D  F006         	goto	u2811
  8431  000D16  EF90  F006         	goto	u2810
  8432  000D1A                     u2811:
  8433  000D1A  FFFF               	dw	65535	; assembler added errata NOP
  8434  000D1C  EFD2  F006         	goto	l3033
  8435  000D20                     u2810:
  8436  000D20  FFFF               	dw	65535	; assembler added errata NOP
  8437  000D22  5019               	movf	___fladd@grs^0,w,c
  8438  000D24  A4D8               	btfss	status,2,c
  8439  000D26  EF97  F006         	goto	u2821
  8440  000D2A  EF9A  F006         	goto	u2820
  8441  000D2E                     u2821:
  8442  000D2E  FFFF               	dw	65535	; assembler added errata NOP
  8443  000D30  EFD2  F006         	goto	l3033
  8444  000D34                     u2820:
  8445  000D34  FFFF               	dw	65535	; assembler added errata NOP
  8446  000D36  0E00               	movlw	0
  8447  000D38  6E0A               	movwf	?___fladd^0,c
  8448  000D3A  0E00               	movlw	0
  8449  000D3C  6E0B               	movwf	(?___fladd+1)^0,c
  8450  000D3E  0E00               	movlw	0
  8451  000D40  6E0C               	movwf	(?___fladd+2)^0,c
  8452  000D42  0E00               	movlw	0
  8453  000D44  6E0D               	movwf	(?___fladd+3)^0,c
  8454  000D46  EF8E  F007         	goto	l1051
  8455  000D4A                     l3017:
  8456  000D4A  FFFF               	dw	65535	; assembler added errata NOP
  8457  000D4C  90D8               	bcf	status,0,c
  8458  000D4E  360A               	rlcf	___fladd@b^0,f,c
  8459  000D50  360B               	rlcf	(___fladd@b+1)^0,f,c
  8460  000D52  360C               	rlcf	(___fladd@b+2)^0,f,c
  8461  000D54  360D               	rlcf	(___fladd@b+3)^0,f,c
  8462  000D56  AE19               	btfss	___fladd@grs^0,7,c
  8463  000D58  EFB0  F006         	goto	u2831
  8464  000D5C  EFB3  F006         	goto	u2830
  8465  000D60                     u2831:
  8466  000D60  FFFF               	dw	65535	; assembler added errata NOP
  8467  000D62  EFB5  F006         	goto	l3023
  8468  000D66                     u2830:
  8469  000D66  FFFF               	dw	65535	; assembler added errata NOP
  8470  000D68  800A               	bsf	___fladd@b^0,0,c
  8471  000D6A                     l3023:
  8472  000D6A  FFFF               	dw	65535	; assembler added errata NOP
  8473  000D6C  A019               	btfss	___fladd@grs^0,0,c
  8474  000D6E  EFBB  F006         	goto	u2841
  8475  000D72  EFBE  F006         	goto	u2840
  8476  000D76                     u2841:
  8477  000D76  FFFF               	dw	65535	; assembler added errata NOP
  8478  000D78  EFC3  F006         	goto	l3027
  8479  000D7C                     u2840:
  8480  000D7C  FFFF               	dw	65535	; assembler added errata NOP
  8481  000D7E  80D8               	bsf	status,0,c
  8482  000D80  3619               	rlcf	___fladd@grs^0,f,c
  8483  000D82  EFC6  F006         	goto	l3029
  8484  000D86                     l3027:
  8485  000D86  FFFF               	dw	65535	; assembler added errata NOP
  8486  000D88  90D8               	bcf	status,0,c
  8487  000D8A  3619               	rlcf	___fladd@grs^0,f,c
  8488  000D8C                     l3029:
  8489  000D8C  FFFF               	dw	65535	; assembler added errata NOP
  8490  000D8E  5018               	movf	___fladd@bexp^0,w,c
  8491  000D90  B4D8               	btfsc	status,2,c
  8492  000D92  EFCD  F006         	goto	u2851
  8493  000D96  EFD0  F006         	goto	u2850
  8494  000D9A                     u2851:
  8495  000D9A  FFFF               	dw	65535	; assembler added errata NOP
  8496  000D9C  EFD2  F006         	goto	l3033
  8497  000DA0                     u2850:
  8498  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  8499  000DA2  0618               	decf	___fladd@bexp^0,f,c
  8500  000DA4                     l3033:
  8501  000DA4  FFFF               	dw	65535	; assembler added errata NOP
  8502  000DA6  AE0C               	btfss	(___fladd@b+2)^0,7,c
  8503  000DA8  EFD8  F006         	goto	u2861
  8504  000DAC  EFDB  F006         	goto	u2860
  8505  000DB0                     u2861:
  8506  000DB0  FFFF               	dw	65535	; assembler added errata NOP
  8507  000DB2  EFA5  F006         	goto	l3017
  8508  000DB6                     u2860:
  8509  000DB6                     l3035:
  8510  000DB6  FFFF               	dw	65535	; assembler added errata NOP
  8511  000DB8  0E00               	movlw	0
  8512  000DBA  6E17               	movwf	___fladd@aexp^0,c
  8513  000DBC  AE19               	btfss	___fladd@grs^0,7,c
  8514  000DBE  EFE3  F006         	goto	u2871
  8515  000DC2  EFE6  F006         	goto	u2870
  8516  000DC6                     u2871:
  8517  000DC6  FFFF               	dw	65535	; assembler added errata NOP
  8518  000DC8  EF05  F007         	goto	l1068
  8519  000DCC                     u2870:
  8520  000DCC  FFFF               	dw	65535	; assembler added errata NOP
  8521  000DCE  C019  F012         	movff	___fladd@grs,??___fladd
  8522  000DD2  0E7F               	movlw	127
  8523  000DD4  1612               	andwf	??___fladd^0,f,c
  8524  000DD6  B4D8               	btfsc	status,2,c
  8525  000DD8  EFF0  F006         	goto	u2881
  8526  000DDC  EFF3  F006         	goto	u2880
  8527  000DE0                     u2881:
  8528  000DE0  FFFF               	dw	65535	; assembler added errata NOP
  8529  000DE2  EFF9  F006         	goto	l1069
  8530  000DE6                     u2880:
  8531  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  8532  000DE8                     l3041:
  8533  000DE8  FFFF               	dw	65535	; assembler added errata NOP
  8534  000DEA  0E01               	movlw	1
  8535  000DEC  6E17               	movwf	___fladd@aexp^0,c
  8536  000DEE  EF05  F007         	goto	l1068
  8537  000DF2                     l1069:
  8538  000DF2  FFFF               	dw	65535	; assembler added errata NOP
  8539  000DF4  A00A               	btfss	___fladd@b^0,0,c
  8540  000DF6  EFFF  F006         	goto	u2891
  8541  000DFA  EF02  F007         	goto	u2890
  8542  000DFE                     u2891:
  8543  000DFE  FFFF               	dw	65535	; assembler added errata NOP
  8544  000E00  EF05  F007         	goto	l1068
  8545  000E04                     u2890:
  8546  000E04  FFFF               	dw	65535	; assembler added errata NOP
  8547  000E06  EFF4  F006         	goto	l3041
  8548  000E0A                     l1068:
  8549  000E0A  FFFF               	dw	65535	; assembler added errata NOP
  8550  000E0C  5017               	movf	___fladd@aexp^0,w,c
  8551  000E0E  B4D8               	btfsc	status,2,c
  8552  000E10  EF0C  F007         	goto	u2901
  8553  000E14  EF0F  F007         	goto	u2900
  8554  000E18                     u2901:
  8555  000E18  FFFF               	dw	65535	; assembler added errata NOP
  8556  000E1A  EF3F  F007         	goto	l3053
  8557  000E1E                     u2900:
  8558  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  8559  000E20  0E01               	movlw	1
  8560  000E22  260A               	addwf	___fladd@b^0,f,c
  8561  000E24  0E00               	movlw	0
  8562  000E26  220B               	addwfc	(___fladd@b+1)^0,f,c
  8563  000E28  220C               	addwfc	(___fladd@b+2)^0,f,c
  8564  000E2A  220D               	addwfc	(___fladd@b+3)^0,f,c
  8565  000E2C  A00D               	btfss	(___fladd@b+3)^0,0,c
  8566  000E2E  EF1B  F007         	goto	u2911
  8567  000E32  EF1E  F007         	goto	u2910
  8568  000E36                     u2911:
  8569  000E36  FFFF               	dw	65535	; assembler added errata NOP
  8570  000E38  EF3F  F007         	goto	l3053
  8571  000E3C                     u2910:
  8572  000E3C  FFFF               	dw	65535	; assembler added errata NOP
  8573  000E3E  C00A  F012         	movff	___fladd@b,??___fladd
  8574  000E42  C00B  F013         	movff	___fladd@b+1,??___fladd+1
  8575  000E46  C00C  F014         	movff	___fladd@b+2,??___fladd+2
  8576  000E4A  C00D  F015         	movff	___fladd@b+3,??___fladd+3
  8577  000E4E  3415               	rlcf	(??___fladd+3)^0,w,c
  8578  000E50  3215               	rrcf	(??___fladd+3)^0,f,c
  8579  000E52  3214               	rrcf	(??___fladd+2)^0,f,c
  8580  000E54  3213               	rrcf	(??___fladd+1)^0,f,c
  8581  000E56  3212               	rrcf	??___fladd^0,f,c
  8582  000E58  C012  F00A         	movff	??___fladd,___fladd@b
  8583  000E5C  C013  F00B         	movff	??___fladd+1,___fladd@b+1
  8584  000E60  C014  F00C         	movff	??___fladd+2,___fladd@b+2
  8585  000E64  C015  F00D         	movff	??___fladd+3,___fladd@b+3
  8586  000E68  2818               	incf	___fladd@bexp^0,w,c
  8587  000E6A  B4D8               	btfsc	status,2,c
  8588  000E6C  EF3A  F007         	goto	u2921
  8589  000E70  EF3D  F007         	goto	u2920
  8590  000E74                     u2921:
  8591  000E74  FFFF               	dw	65535	; assembler added errata NOP
  8592  000E76  EF3F  F007         	goto	l3053
  8593  000E7A                     u2920:
  8594  000E7A  FFFF               	dw	65535	; assembler added errata NOP
  8595  000E7C  2A18               	incf	___fladd@bexp^0,f,c
  8596  000E7E                     l3053:
  8597  000E7E  FFFF               	dw	65535	; assembler added errata NOP
  8598  000E80  2818               	incf	___fladd@bexp^0,w,c
  8599  000E82  B4D8               	btfsc	status,2,c
  8600  000E84  EF46  F007         	goto	u2931
  8601  000E88  EF49  F007         	goto	u2930
  8602  000E8C                     u2931:
  8603  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  8604  000E8E  EF53  F007         	goto	l3057
  8605  000E92                     u2930:
  8606  000E92  FFFF               	dw	65535	; assembler added errata NOP
  8607  000E94  5018               	movf	___fladd@bexp^0,w,c
  8608  000E96  A4D8               	btfss	status,2,c
  8609  000E98  EF50  F007         	goto	u2941
  8610  000E9C  EF53  F007         	goto	u2940
  8611  000EA0                     u2941:
  8612  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  8613  000EA2  EF68  F007         	goto	l3061
  8614  000EA6                     u2940:
  8615  000EA6                     l3057:
  8616  000EA6  FFFF               	dw	65535	; assembler added errata NOP
  8617  000EA8  0E00               	movlw	0
  8618  000EAA  6E0A               	movwf	___fladd@b^0,c
  8619  000EAC  0E00               	movlw	0
  8620  000EAE  6E0B               	movwf	(___fladd@b+1)^0,c
  8621  000EB0  0E00               	movlw	0
  8622  000EB2  6E0C               	movwf	(___fladd@b+2)^0,c
  8623  000EB4  0E00               	movlw	0
  8624  000EB6  6E0D               	movwf	(___fladd@b+3)^0,c
  8625  000EB8  5018               	movf	___fladd@bexp^0,w,c
  8626  000EBA  A4D8               	btfss	status,2,c
  8627  000EBC  EF62  F007         	goto	u2951
  8628  000EC0  EF65  F007         	goto	u2950
  8629  000EC4                     u2951:
  8630  000EC4  FFFF               	dw	65535	; assembler added errata NOP
  8631  000EC6  EF68  F007         	goto	l3061
  8632  000ECA                     u2950:
  8633  000ECA  FFFF               	dw	65535	; assembler added errata NOP
  8634  000ECC  0E00               	movlw	0
  8635  000ECE  6E16               	movwf	___fladd@signs^0,c
  8636  000ED0                     l3061:
  8637  000ED0  FFFF               	dw	65535	; assembler added errata NOP
  8638  000ED2  A018               	btfss	___fladd@bexp^0,0,c
  8639  000ED4  EF6E  F007         	goto	u2961
  8640  000ED8  EF71  F007         	goto	u2960
  8641  000EDC                     u2961:
  8642  000EDC  FFFF               	dw	65535	; assembler added errata NOP
  8643  000EDE  EF75  F007         	goto	l3065
  8644  000EE2                     u2960:
  8645  000EE2  FFFF               	dw	65535	; assembler added errata NOP
  8646  000EE4  8E0C               	bsf	(___fladd@b+2)^0,7,c
  8647  000EE6  EF77  F007         	goto	l3067
  8648  000EEA                     l3065:
  8649  000EEA  FFFF               	dw	65535	; assembler added errata NOP
  8650  000EEC  9E0C               	bcf	(___fladd@b+2)^0,7,c
  8651  000EEE                     l3067:
  8652  000EEE  FFFF               	dw	65535	; assembler added errata NOP
  8653  000EF0  90D8               	bcf	status,0,c
  8654  000EF2  3018               	rrcf	___fladd@bexp^0,w,c
  8655  000EF4  6E0D               	movwf	(___fladd@b+3)^0,c
  8656  000EF6  AE16               	btfss	___fladd@signs^0,7,c
  8657  000EF8  EF80  F007         	goto	u2971
  8658  000EFC  EF83  F007         	goto	u2970
  8659  000F00                     u2971:
  8660  000F00  FFFF               	dw	65535	; assembler added errata NOP
  8661  000F02  EF85  F007         	goto	l3073
  8662  000F06                     u2970:
  8663  000F06  FFFF               	dw	65535	; assembler added errata NOP
  8664  000F08  8E0D               	bsf	(___fladd@b+3)^0,7,c
  8665  000F0A                     l3073:
  8666  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  8667  000F0C  C00A  F00A         	movff	___fladd@b,?___fladd
  8668  000F10  C00B  F00B         	movff	___fladd@b+1,?___fladd+1
  8669  000F14  C00C  F00C         	movff	___fladd@b+2,?___fladd+2
  8670  000F18  C00D  F00D         	movff	___fladd@b+3,?___fladd+3
  8671  000F1C                     l1051:
  8672  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  8673  000F1E  0012               	return		;funcret
  8674  000F20  FFFF               	dw	65535	; errata NOP
  8675  000F22                     __end_of___fladd:
  8676                           	callstack 0
  8677                           
  8678 ;; *************** function ___flneg *****************
  8679 ;; Defined at:
  8680 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  f1              4    9[COMRAM] unsigned char 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;		None
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  4    9[COMRAM] unsigned char 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2, status,0
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8694 ;;      Params:         4       0       0       0       0       0       0
  8695 ;;      Locals:         0       0       0       0       0       0       0
  8696 ;;      Temps:          0       0       0       0       0       0       0
  8697 ;;      Totals:         4       0       0       0       0       0       0
  8698 ;;Total ram usage:        4 bytes
  8699 ;; Hardware stack levels used: 1
  8700 ;; Hardware stack levels required when called: 2
  8701 ;; This function calls:
  8702 ;;		Nothing
  8703 ;; This function is called by:
  8704 ;;		_roundf
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           	psect	text33
  8709  003356                     __ptext33:
  8710                           	callstack 0
  8711  003356                     ___flneg:
  8712                           	callstack 0
  8713  003356  FFFF               	dw	65535	; assembler added errata NOP
  8714  003358  500A               	movf	___flneg@f1^0,w,c
  8715  00335A  100B               	iorwf	(___flneg@f1+1)^0,w,c
  8716  00335C  100C               	iorwf	(___flneg@f1+2)^0,w,c
  8717  00335E  100D               	iorwf	(___flneg@f1+3)^0,w,c
  8718  003360  B4D8               	btfsc	status,2,c
  8719  003362  EFB5  F019         	goto	u3941
  8720  003366  EFB8  F019         	goto	u3940
  8721  00336A                     u3941:
  8722  00336A  FFFF               	dw	65535	; assembler added errata NOP
  8723  00336C  EFC1  F019         	goto	l3715
  8724  003370                     u3940:
  8725  003370  FFFF               	dw	65535	; assembler added errata NOP
  8726  003372  0E00               	movlw	0
  8727  003374  1A0A               	xorwf	___flneg@f1^0,f,c
  8728  003376  0E00               	movlw	0
  8729  003378  1A0B               	xorwf	(___flneg@f1+1)^0,f,c
  8730  00337A  0E00               	movlw	0
  8731  00337C  1A0C               	xorwf	(___flneg@f1+2)^0,f,c
  8732  00337E  0E80               	movlw	128
  8733  003380  1A0D               	xorwf	(___flneg@f1+3)^0,f,c
  8734  003382                     l3715:
  8735  003382  FFFF               	dw	65535	; assembler added errata NOP
  8736  003384  C00A  F00A         	movff	___flneg@f1,?___flneg
  8737  003388  C00B  F00B         	movff	___flneg@f1+1,?___flneg+1
  8738  00338C  C00C  F00C         	movff	___flneg@f1+2,?___flneg+2
  8739  003390  C00D  F00D         	movff	___flneg@f1+3,?___flneg+3
  8740  003394  0012               	return		;funcret
  8741  003396  FFFF               	dw	65535	; errata NOP
  8742  003398                     __end_of___flneg:
  8743                           	callstack 0
  8744                           
  8745 ;; *************** function ___flmul *****************
  8746 ;; Defined at:
  8747 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  8748 ;; Parameters:    Size  Location     Type
  8749 ;;  b               4    9[COMRAM] unsigned char 
  8750 ;;  a               4   13[COMRAM] unsigned char 
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;  prod            4   28[COMRAM] struct .
  8753 ;;  grs             4   22[COMRAM] unsigned long 
  8754 ;;  temp            2   32[COMRAM] struct .
  8755 ;;  bexp            1   27[COMRAM] unsigned char 
  8756 ;;  aexp            1   26[COMRAM] unsigned char 
  8757 ;;  sign            1   21[COMRAM] unsigned char 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  4    9[COMRAM] unsigned char 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2, status,0, prodl, prodh
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8767 ;;      Params:         8       0       0       0       0       0       0
  8768 ;;      Locals:        13       0       0       0       0       0       0
  8769 ;;      Temps:          4       0       0       0       0       0       0
  8770 ;;      Totals:        25       0       0       0       0       0       0
  8771 ;;Total ram usage:       25 bytes
  8772 ;; Hardware stack levels used: 1
  8773 ;; Hardware stack levels required when called: 2
  8774 ;; This function calls:
  8775 ;;		Nothing
  8776 ;; This function is called by:
  8777 ;;		_roundf
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text34
  8782  000F22                     __ptext34:
  8783                           	callstack 0
  8784  000F22                     ___flmul:
  8785                           	callstack 0
  8786  000F22  FFFF               	dw	65535	; assembler added errata NOP
  8787  000F24  500D               	movf	(___flmul@b+3)^0,w,c
  8788  000F26  0B80               	andlw	128
  8789  000F28  6E16               	movwf	___flmul@sign^0,c
  8790  000F2A  500D               	movf	(___flmul@b+3)^0,w,c
  8791  000F2C  240D               	addwf	(___flmul@b+3)^0,w,c
  8792  000F2E  6E1C               	movwf	___flmul@bexp^0,c
  8793  000F30  AE0C               	btfss	(___flmul@b+2)^0,7,c
  8794  000F32  EF9D  F007         	goto	u3701
  8795  000F36  EFA0  F007         	goto	u3700
  8796  000F3A                     u3701:
  8797  000F3A  FFFF               	dw	65535	; assembler added errata NOP
  8798  000F3C  EFA2  F007         	goto	l3559
  8799  000F40                     u3700:
  8800  000F40  FFFF               	dw	65535	; assembler added errata NOP
  8801  000F42  801C               	bsf	___flmul@bexp^0,0,c
  8802  000F44                     l3559:
  8803  000F44  FFFF               	dw	65535	; assembler added errata NOP
  8804  000F46  501C               	movf	___flmul@bexp^0,w,c
  8805  000F48  B4D8               	btfsc	status,2,c
  8806  000F4A  EFA9  F007         	goto	u3711
  8807  000F4E  EFAC  F007         	goto	u3710
  8808  000F52                     u3711:
  8809  000F52  FFFF               	dw	65535	; assembler added errata NOP
  8810  000F54  EFC3  F007         	goto	l3567
  8811  000F58                     u3710:
  8812  000F58  FFFF               	dw	65535	; assembler added errata NOP
  8813  000F5A  281C               	incf	___flmul@bexp^0,w,c
  8814  000F5C  A4D8               	btfss	status,2,c
  8815  000F5E  EFB3  F007         	goto	u3721
  8816  000F62  EFB6  F007         	goto	u3720
  8817  000F66                     u3721:
  8818  000F66  FFFF               	dw	65535	; assembler added errata NOP
  8819  000F68  EFBF  F007         	goto	l3565
  8820  000F6C                     u3720:
  8821  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  8822  000F6E  0E00               	movlw	0
  8823  000F70  6E0A               	movwf	___flmul@b^0,c
  8824  000F72  0E00               	movlw	0
  8825  000F74  6E0B               	movwf	(___flmul@b+1)^0,c
  8826  000F76  0E00               	movlw	0
  8827  000F78  6E0C               	movwf	(___flmul@b+2)^0,c
  8828  000F7A  0E00               	movlw	0
  8829  000F7C  6E0D               	movwf	(___flmul@b+3)^0,c
  8830  000F7E                     l3565:
  8831  000F7E  FFFF               	dw	65535	; assembler added errata NOP
  8832  000F80  8E0C               	bsf	(___flmul@b+2)^0,7,c
  8833  000F82  EFCC  F007         	goto	l3569
  8834  000F86                     l3567:
  8835  000F86  FFFF               	dw	65535	; assembler added errata NOP
  8836  000F88  0E00               	movlw	0
  8837  000F8A  6E0A               	movwf	___flmul@b^0,c
  8838  000F8C  0E00               	movlw	0
  8839  000F8E  6E0B               	movwf	(___flmul@b+1)^0,c
  8840  000F90  0E00               	movlw	0
  8841  000F92  6E0C               	movwf	(___flmul@b+2)^0,c
  8842  000F94  0E00               	movlw	0
  8843  000F96  6E0D               	movwf	(___flmul@b+3)^0,c
  8844  000F98                     l3569:
  8845  000F98  FFFF               	dw	65535	; assembler added errata NOP
  8846  000F9A  5011               	movf	(___flmul@a+3)^0,w,c
  8847  000F9C  0B80               	andlw	128
  8848  000F9E  1A16               	xorwf	___flmul@sign^0,f,c
  8849  000FA0  5011               	movf	(___flmul@a+3)^0,w,c
  8850  000FA2  2411               	addwf	(___flmul@a+3)^0,w,c
  8851  000FA4  6E1B               	movwf	___flmul@aexp^0,c
  8852  000FA6  AE10               	btfss	(___flmul@a+2)^0,7,c
  8853  000FA8  EFD8  F007         	goto	u3731
  8854  000FAC  EFDB  F007         	goto	u3730
  8855  000FB0                     u3731:
  8856  000FB0  FFFF               	dw	65535	; assembler added errata NOP
  8857  000FB2  EFDD  F007         	goto	l3577
  8858  000FB6                     u3730:
  8859  000FB6  FFFF               	dw	65535	; assembler added errata NOP
  8860  000FB8  801B               	bsf	___flmul@aexp^0,0,c
  8861  000FBA                     l3577:
  8862  000FBA  FFFF               	dw	65535	; assembler added errata NOP
  8863  000FBC  501B               	movf	___flmul@aexp^0,w,c
  8864  000FBE  B4D8               	btfsc	status,2,c
  8865  000FC0  EFE4  F007         	goto	u3741
  8866  000FC4  EFE7  F007         	goto	u3740
  8867  000FC8                     u3741:
  8868  000FC8  FFFF               	dw	65535	; assembler added errata NOP
  8869  000FCA  EFFE  F007         	goto	l3585
  8870  000FCE                     u3740:
  8871  000FCE  FFFF               	dw	65535	; assembler added errata NOP
  8872  000FD0  281B               	incf	___flmul@aexp^0,w,c
  8873  000FD2  A4D8               	btfss	status,2,c
  8874  000FD4  EFEE  F007         	goto	u3751
  8875  000FD8  EFF1  F007         	goto	u3750
  8876  000FDC                     u3751:
  8877  000FDC  FFFF               	dw	65535	; assembler added errata NOP
  8878  000FDE  EFFA  F007         	goto	l3583
  8879  000FE2                     u3750:
  8880  000FE2  FFFF               	dw	65535	; assembler added errata NOP
  8881  000FE4  0E00               	movlw	0
  8882  000FE6  6E0E               	movwf	___flmul@a^0,c
  8883  000FE8  0E00               	movlw	0
  8884  000FEA  6E0F               	movwf	(___flmul@a+1)^0,c
  8885  000FEC  0E00               	movlw	0
  8886  000FEE  6E10               	movwf	(___flmul@a+2)^0,c
  8887  000FF0  0E00               	movlw	0
  8888  000FF2  6E11               	movwf	(___flmul@a+3)^0,c
  8889  000FF4                     l3583:
  8890  000FF4  FFFF               	dw	65535	; assembler added errata NOP
  8891  000FF6  8E10               	bsf	(___flmul@a+2)^0,7,c
  8892  000FF8  EF07  F008         	goto	l1128
  8893  000FFC                     l3585:
  8894  000FFC  FFFF               	dw	65535	; assembler added errata NOP
  8895  000FFE  0E00               	movlw	0
  8896  001000  6E0E               	movwf	___flmul@a^0,c
  8897  001002  0E00               	movlw	0
  8898  001004  6E0F               	movwf	(___flmul@a+1)^0,c
  8899  001006  0E00               	movlw	0
  8900  001008  6E10               	movwf	(___flmul@a+2)^0,c
  8901  00100A  0E00               	movlw	0
  8902  00100C  6E11               	movwf	(___flmul@a+3)^0,c
  8903  00100E                     l1128:
  8904  00100E  FFFF               	dw	65535	; assembler added errata NOP
  8905  001010  501B               	movf	___flmul@aexp^0,w,c
  8906  001012  B4D8               	btfsc	status,2,c
  8907  001014  EF0E  F008         	goto	u3761
  8908  001018  EF11  F008         	goto	u3760
  8909  00101C                     u3761:
  8910  00101C  FFFF               	dw	65535	; assembler added errata NOP
  8911  00101E  EF1B  F008         	goto	l3589
  8912  001022                     u3760:
  8913  001022  FFFF               	dw	65535	; assembler added errata NOP
  8914  001024  501C               	movf	___flmul@bexp^0,w,c
  8915  001026  A4D8               	btfss	status,2,c
  8916  001028  EF18  F008         	goto	u3771
  8917  00102C  EF1B  F008         	goto	u3770
  8918  001030                     u3771:
  8919  001030  FFFF               	dw	65535	; assembler added errata NOP
  8920  001032  EF26  F008         	goto	l3593
  8921  001036                     u3770:
  8922  001036                     l3589:
  8923  001036  FFFF               	dw	65535	; assembler added errata NOP
  8924  001038  0E00               	movlw	0
  8925  00103A  6E0A               	movwf	?___flmul^0,c
  8926  00103C  0E00               	movlw	0
  8927  00103E  6E0B               	movwf	(?___flmul+1)^0,c
  8928  001040  0E00               	movlw	0
  8929  001042  6E0C               	movwf	(?___flmul+2)^0,c
  8930  001044  0E00               	movlw	0
  8931  001046  6E0D               	movwf	(?___flmul+3)^0,c
  8932  001048  EFE0  F009         	goto	l1132
  8933  00104C                     l3593:
  8934  00104C  FFFF               	dw	65535	; assembler added errata NOP
  8935  00104E  5010               	movf	(___flmul@a+2)^0,w,c
  8936  001050  020A               	mulwf	___flmul@b^0,c
  8937  001052  CFF3 F021          	movff	prodl,___flmul@temp
  8938  001056  CFF4 F022          	movff	prodh,___flmul@temp+1
  8939  00105A  5021               	movf	___flmul@temp^0,w,c
  8940  00105C  6E17               	movwf	___flmul@grs^0,c
  8941  00105E  6A18               	clrf	(___flmul@grs+1)^0,c
  8942  001060  6A19               	clrf	(___flmul@grs+2)^0,c
  8943  001062  6A1A               	clrf	(___flmul@grs+3)^0,c
  8944  001064  5022               	movf	(___flmul@temp+1)^0,w,c
  8945  001066  6E1D               	movwf	___flmul@prod^0,c
  8946  001068  6A1E               	clrf	(___flmul@prod+1)^0,c
  8947  00106A  6A1F               	clrf	(___flmul@prod+2)^0,c
  8948  00106C  6A20               	clrf	(___flmul@prod+3)^0,c
  8949  00106E  500F               	movf	(___flmul@a+1)^0,w,c
  8950  001070  020B               	mulwf	(___flmul@b+1)^0,c
  8951  001072  CFF3 F021          	movff	prodl,___flmul@temp
  8952  001076  CFF4 F022          	movff	prodh,___flmul@temp+1
  8953  00107A  5021               	movf	___flmul@temp^0,w,c
  8954  00107C  2617               	addwf	___flmul@grs^0,f,c
  8955  00107E  0E00               	movlw	0
  8956  001080  2218               	addwfc	(___flmul@grs+1)^0,f,c
  8957  001082  2219               	addwfc	(___flmul@grs+2)^0,f,c
  8958  001084  221A               	addwfc	(___flmul@grs+3)^0,f,c
  8959  001086  5022               	movf	(___flmul@temp+1)^0,w,c
  8960  001088  261D               	addwf	___flmul@prod^0,f,c
  8961  00108A  0E00               	movlw	0
  8962  00108C  221E               	addwfc	(___flmul@prod+1)^0,f,c
  8963  00108E  221F               	addwfc	(___flmul@prod+2)^0,f,c
  8964  001090  2220               	addwfc	(___flmul@prod+3)^0,f,c
  8965  001092  500E               	movf	___flmul@a^0,w,c
  8966  001094  020C               	mulwf	(___flmul@b+2)^0,c
  8967  001096  CFF3 F021          	movff	prodl,___flmul@temp
  8968  00109A  CFF4 F022          	movff	prodh,___flmul@temp+1
  8969  00109E  5021               	movf	___flmul@temp^0,w,c
  8970  0010A0  2617               	addwf	___flmul@grs^0,f,c
  8971  0010A2  0E00               	movlw	0
  8972  0010A4  2218               	addwfc	(___flmul@grs+1)^0,f,c
  8973  0010A6  2219               	addwfc	(___flmul@grs+2)^0,f,c
  8974  0010A8  221A               	addwfc	(___flmul@grs+3)^0,f,c
  8975  0010AA  5022               	movf	(___flmul@temp+1)^0,w,c
  8976  0010AC  261D               	addwf	___flmul@prod^0,f,c
  8977  0010AE  0E00               	movlw	0
  8978  0010B0  221E               	addwfc	(___flmul@prod+1)^0,f,c
  8979  0010B2  221F               	addwfc	(___flmul@prod+2)^0,f,c
  8980  0010B4  2220               	addwfc	(___flmul@prod+3)^0,f,c
  8981  0010B6  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  8982  0010BA  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  8983  0010BE  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  8984  0010C2  6A17               	clrf	___flmul@grs^0,c
  8985  0010C4  500E               	movf	___flmul@a^0,w,c
  8986  0010C6  020B               	mulwf	(___flmul@b+1)^0,c
  8987  0010C8  CFF3 F021          	movff	prodl,___flmul@temp
  8988  0010CC  CFF4 F022          	movff	prodh,___flmul@temp+1
  8989  0010D0  5021               	movf	___flmul@temp^0,w,c
  8990  0010D2  2617               	addwf	___flmul@grs^0,f,c
  8991  0010D4  5022               	movf	(___flmul@temp+1)^0,w,c
  8992  0010D6  2218               	addwfc	(___flmul@grs+1)^0,f,c
  8993  0010D8  0E00               	movlw	0
  8994  0010DA  2219               	addwfc	(___flmul@grs+2)^0,f,c
  8995  0010DC  0E00               	movlw	0
  8996  0010DE  221A               	addwfc	(___flmul@grs+3)^0,f,c
  8997  0010E0  500F               	movf	(___flmul@a+1)^0,w,c
  8998  0010E2  020A               	mulwf	___flmul@b^0,c
  8999  0010E4  CFF3 F021          	movff	prodl,___flmul@temp
  9000  0010E8  CFF4 F022          	movff	prodh,___flmul@temp+1
  9001  0010EC  5021               	movf	___flmul@temp^0,w,c
  9002  0010EE  2617               	addwf	___flmul@grs^0,f,c
  9003  0010F0  5022               	movf	(___flmul@temp+1)^0,w,c
  9004  0010F2  2218               	addwfc	(___flmul@grs+1)^0,f,c
  9005  0010F4  0E00               	movlw	0
  9006  0010F6  2219               	addwfc	(___flmul@grs+2)^0,f,c
  9007  0010F8  0E00               	movlw	0
  9008  0010FA  221A               	addwfc	(___flmul@grs+3)^0,f,c
  9009  0010FC  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  9010  001100  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  9011  001104  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  9012  001108  6A17               	clrf	___flmul@grs^0,c
  9013  00110A  500E               	movf	___flmul@a^0,w,c
  9014  00110C  020A               	mulwf	___flmul@b^0,c
  9015  00110E  CFF3 F021          	movff	prodl,___flmul@temp
  9016  001112  CFF4 F022          	movff	prodh,___flmul@temp+1
  9017  001116  5021               	movf	___flmul@temp^0,w,c
  9018  001118  2617               	addwf	___flmul@grs^0,f,c
  9019  00111A  5022               	movf	(___flmul@temp+1)^0,w,c
  9020  00111C  2218               	addwfc	(___flmul@grs+1)^0,f,c
  9021  00111E  0E00               	movlw	0
  9022  001120  2219               	addwfc	(___flmul@grs+2)^0,f,c
  9023  001122  0E00               	movlw	0
  9024  001124  221A               	addwfc	(___flmul@grs+3)^0,f,c
  9025  001126  5010               	movf	(___flmul@a+2)^0,w,c
  9026  001128  020B               	mulwf	(___flmul@b+1)^0,c
  9027  00112A  CFF3 F021          	movff	prodl,___flmul@temp
  9028  00112E  CFF4 F022          	movff	prodh,___flmul@temp+1
  9029  001132  5021               	movf	___flmul@temp^0,w,c
  9030  001134  261D               	addwf	___flmul@prod^0,f,c
  9031  001136  5022               	movf	(___flmul@temp+1)^0,w,c
  9032  001138  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9033  00113A  0E00               	movlw	0
  9034  00113C  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9035  00113E  0E00               	movlw	0
  9036  001140  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9037  001142  500F               	movf	(___flmul@a+1)^0,w,c
  9038  001144  020C               	mulwf	(___flmul@b+2)^0,c
  9039  001146  CFF3 F021          	movff	prodl,___flmul@temp
  9040  00114A  CFF4 F022          	movff	prodh,___flmul@temp+1
  9041  00114E  5021               	movf	___flmul@temp^0,w,c
  9042  001150  261D               	addwf	___flmul@prod^0,f,c
  9043  001152  5022               	movf	(___flmul@temp+1)^0,w,c
  9044  001154  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9045  001156  0E00               	movlw	0
  9046  001158  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9047  00115A  0E00               	movlw	0
  9048  00115C  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9049  00115E  5010               	movf	(___flmul@a+2)^0,w,c
  9050  001160  020C               	mulwf	(___flmul@b+2)^0,c
  9051  001162  CFF3 F021          	movff	prodl,___flmul@temp
  9052  001166  CFF4 F022          	movff	prodh,___flmul@temp+1
  9053  00116A  5021               	movf	___flmul@temp^0,w,c
  9054  00116C  6E12               	movwf	??___flmul^0,c
  9055  00116E  5022               	movf	(___flmul@temp+1)^0,w,c
  9056  001170  6E13               	movwf	(??___flmul+1)^0,c
  9057  001172  6A14               	clrf	(??___flmul+2)^0,c
  9058  001174  6A15               	clrf	(??___flmul+3)^0,c
  9059  001176  C014  F015         	movff	??___flmul+2,??___flmul+3
  9060  00117A  C013  F014         	movff	??___flmul+1,??___flmul+2
  9061  00117E  C012  F013         	movff	??___flmul,??___flmul+1
  9062  001182  6A12               	clrf	??___flmul^0,c
  9063  001184  5012               	movf	??___flmul^0,w,c
  9064  001186  261D               	addwf	___flmul@prod^0,f,c
  9065  001188  5013               	movf	(??___flmul+1)^0,w,c
  9066  00118A  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9067  00118C  5014               	movf	(??___flmul+2)^0,w,c
  9068  00118E  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9069  001190  5015               	movf	(??___flmul+3)^0,w,c
  9070  001192  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9071  001194  C017  F012         	movff	___flmul@grs,??___flmul
  9072  001198  C018  F013         	movff	___flmul@grs+1,??___flmul+1
  9073  00119C  C019  F014         	movff	___flmul@grs+2,??___flmul+2
  9074  0011A0  C01A  F015         	movff	___flmul@grs+3,??___flmul+3
  9075  0011A4  0E19               	movlw	25
  9076  0011A6  EFDB  F008         	goto	u3780
  9077  0011AA                     u3785:
  9078  0011AA  FFFF               	dw	65535	; assembler added errata NOP
  9079  0011AC  90D8               	bcf	status,0,c
  9080  0011AE  3215               	rrcf	(??___flmul+3)^0,f,c
  9081  0011B0  3214               	rrcf	(??___flmul+2)^0,f,c
  9082  0011B2  3213               	rrcf	(??___flmul+1)^0,f,c
  9083  0011B4  3212               	rrcf	??___flmul^0,f,c
  9084  0011B6                     u3780:
  9085  0011B6  FFFF               	dw	65535	; assembler added errata NOP
  9086  0011B8  2EE8               	decfsz	wreg,f,c
  9087  0011BA  EFD5  F008         	goto	u3785
  9088  0011BE  5012               	movf	??___flmul^0,w,c
  9089  0011C0  261D               	addwf	___flmul@prod^0,f,c
  9090  0011C2  5013               	movf	(??___flmul+1)^0,w,c
  9091  0011C4  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9092  0011C6  5014               	movf	(??___flmul+2)^0,w,c
  9093  0011C8  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9094  0011CA  5015               	movf	(??___flmul+3)^0,w,c
  9095  0011CC  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9096  0011CE  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  9097  0011D2  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  9098  0011D6  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  9099  0011DA  6A17               	clrf	___flmul@grs^0,c
  9100  0011DC  501B               	movf	___flmul@aexp^0,w,c
  9101  0011DE  C01C  F012         	movff	___flmul@bexp,??___flmul
  9102  0011E2  6A13               	clrf	(??___flmul+1)^0,c
  9103  0011E4  2612               	addwf	??___flmul^0,f,c
  9104  0011E6  0E00               	movlw	0
  9105  0011E8  2213               	addwfc	(??___flmul+1)^0,f,c
  9106  0011EA  0E82               	movlw	130
  9107  0011EC  2412               	addwf	??___flmul^0,w,c
  9108  0011EE  6E21               	movwf	___flmul@temp^0,c
  9109  0011F0  0EFF               	movlw	255
  9110  0011F2  2013               	addwfc	(??___flmul+1)^0,w,c
  9111  0011F4  6E22               	movwf	(___flmul@temp+1)^0,c
  9112  0011F6  EF16  F009         	goto	l3641
  9113  0011FA                     l3635:
  9114  0011FA  FFFF               	dw	65535	; assembler added errata NOP
  9115  0011FC  90D8               	bcf	status,0,c
  9116  0011FE  361D               	rlcf	___flmul@prod^0,f,c
  9117  001200  361E               	rlcf	(___flmul@prod+1)^0,f,c
  9118  001202  361F               	rlcf	(___flmul@prod+2)^0,f,c
  9119  001204  3620               	rlcf	(___flmul@prod+3)^0,f,c
  9120  001206  AE1A               	btfss	(___flmul@grs+3)^0,7,c
  9121  001208  EF08  F009         	goto	u3791
  9122  00120C  EF0B  F009         	goto	u3790
  9123  001210                     u3791:
  9124  001210  FFFF               	dw	65535	; assembler added errata NOP
  9125  001212  EF0D  F009         	goto	l1135
  9126  001216                     u3790:
  9127  001216  FFFF               	dw	65535	; assembler added errata NOP
  9128  001218  801D               	bsf	___flmul@prod^0,0,c
  9129  00121A                     l1135:
  9130  00121A  FFFF               	dw	65535	; assembler added errata NOP
  9131  00121C  90D8               	bcf	status,0,c
  9132  00121E  3617               	rlcf	___flmul@grs^0,f,c
  9133  001220  3618               	rlcf	(___flmul@grs+1)^0,f,c
  9134  001222  3619               	rlcf	(___flmul@grs+2)^0,f,c
  9135  001224  361A               	rlcf	(___flmul@grs+3)^0,f,c
  9136  001226  0621               	decf	___flmul@temp^0,f,c
  9137  001228  A0D8               	btfss	status,0,c
  9138  00122A  0622               	decf	(___flmul@temp+1)^0,f,c
  9139  00122C                     l3641:
  9140  00122C  FFFF               	dw	65535	; assembler added errata NOP
  9141  00122E  AE1F               	btfss	(___flmul@prod+2)^0,7,c
  9142  001230  EF1C  F009         	goto	u3801
  9143  001234  EF1F  F009         	goto	u3800
  9144  001238                     u3801:
  9145  001238  FFFF               	dw	65535	; assembler added errata NOP
  9146  00123A  EFFD  F008         	goto	l3635
  9147  00123E                     u3800:
  9148  00123E  FFFF               	dw	65535	; assembler added errata NOP
  9149  001240  0E00               	movlw	0
  9150  001242  6E1B               	movwf	___flmul@aexp^0,c
  9151  001244  AE1A               	btfss	(___flmul@grs+3)^0,7,c
  9152  001246  EF27  F009         	goto	u3811
  9153  00124A  EF2A  F009         	goto	u3810
  9154  00124E                     u3811:
  9155  00124E  FFFF               	dw	65535	; assembler added errata NOP
  9156  001250  EF55  F009         	goto	l1137
  9157  001254                     u3810:
  9158  001254  FFFF               	dw	65535	; assembler added errata NOP
  9159  001256  0EFF               	movlw	255
  9160  001258  1417               	andwf	___flmul@grs^0,w,c
  9161  00125A  6E12               	movwf	??___flmul^0,c
  9162  00125C  0EFF               	movlw	255
  9163  00125E  1418               	andwf	(___flmul@grs+1)^0,w,c
  9164  001260  6E13               	movwf	(??___flmul+1)^0,c
  9165  001262  0EFF               	movlw	255
  9166  001264  1419               	andwf	(___flmul@grs+2)^0,w,c
  9167  001266  6E14               	movwf	(??___flmul+2)^0,c
  9168  001268  0E7F               	movlw	127
  9169  00126A  141A               	andwf	(___flmul@grs+3)^0,w,c
  9170  00126C  6E15               	movwf	(??___flmul+3)^0,c
  9171  00126E  5012               	movf	??___flmul^0,w,c
  9172  001270  1013               	iorwf	(??___flmul+1)^0,w,c
  9173  001272  1014               	iorwf	(??___flmul+2)^0,w,c
  9174  001274  1015               	iorwf	(??___flmul+3)^0,w,c
  9175  001276  B4D8               	btfsc	status,2,c
  9176  001278  EF40  F009         	goto	u3821
  9177  00127C  EF43  F009         	goto	u3820
  9178  001280                     u3821:
  9179  001280  FFFF               	dw	65535	; assembler added errata NOP
  9180  001282  EF49  F009         	goto	l1138
  9181  001286                     u3820:
  9182  001286  FFFF               	dw	65535	; assembler added errata NOP
  9183  001288                     l3649:
  9184  001288  FFFF               	dw	65535	; assembler added errata NOP
  9185  00128A  0E01               	movlw	1
  9186  00128C  6E1B               	movwf	___flmul@aexp^0,c
  9187  00128E  EF55  F009         	goto	l1137
  9188  001292                     l1138:
  9189  001292  FFFF               	dw	65535	; assembler added errata NOP
  9190  001294  A01D               	btfss	___flmul@prod^0,0,c
  9191  001296  EF4F  F009         	goto	u3831
  9192  00129A  EF52  F009         	goto	u3830
  9193  00129E                     u3831:
  9194  00129E  FFFF               	dw	65535	; assembler added errata NOP
  9195  0012A0  EF55  F009         	goto	l1137
  9196  0012A4                     u3830:
  9197  0012A4  FFFF               	dw	65535	; assembler added errata NOP
  9198  0012A6  EF44  F009         	goto	l3649
  9199  0012AA                     l1137:
  9200  0012AA  FFFF               	dw	65535	; assembler added errata NOP
  9201  0012AC  501B               	movf	___flmul@aexp^0,w,c
  9202  0012AE  B4D8               	btfsc	status,2,c
  9203  0012B0  EF5C  F009         	goto	u3841
  9204  0012B4  EF5F  F009         	goto	u3840
  9205  0012B8                     u3841:
  9206  0012B8  FFFF               	dw	65535	; assembler added errata NOP
  9207  0012BA  EF86  F009         	goto	l3661
  9208  0012BE                     u3840:
  9209  0012BE  FFFF               	dw	65535	; assembler added errata NOP
  9210  0012C0  0E01               	movlw	1
  9211  0012C2  261D               	addwf	___flmul@prod^0,f,c
  9212  0012C4  0E00               	movlw	0
  9213  0012C6  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9214  0012C8  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9215  0012CA  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9216  0012CC  A020               	btfss	(___flmul@prod+3)^0,0,c
  9217  0012CE  EF6B  F009         	goto	u3851
  9218  0012D2  EF6E  F009         	goto	u3850
  9219  0012D6                     u3851:
  9220  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  9221  0012D8  EF86  F009         	goto	l3661
  9222  0012DC                     u3850:
  9223  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  9224  0012DE  C01D  F012         	movff	___flmul@prod,??___flmul
  9225  0012E2  C01E  F013         	movff	___flmul@prod+1,??___flmul+1
  9226  0012E6  C01F  F014         	movff	___flmul@prod+2,??___flmul+2
  9227  0012EA  C020  F015         	movff	___flmul@prod+3,??___flmul+3
  9228  0012EE  3415               	rlcf	(??___flmul+3)^0,w,c
  9229  0012F0  3215               	rrcf	(??___flmul+3)^0,f,c
  9230  0012F2  3214               	rrcf	(??___flmul+2)^0,f,c
  9231  0012F4  3213               	rrcf	(??___flmul+1)^0,f,c
  9232  0012F6  3212               	rrcf	??___flmul^0,f,c
  9233  0012F8  C012  F01D         	movff	??___flmul,___flmul@prod
  9234  0012FC  C013  F01E         	movff	??___flmul+1,___flmul@prod+1
  9235  001300  C014  F01F         	movff	??___flmul+2,___flmul@prod+2
  9236  001304  C015  F020         	movff	??___flmul+3,___flmul@prod+3
  9237  001308  4A21               	infsnz	___flmul@temp^0,f,c
  9238  00130A  2A22               	incf	(___flmul@temp+1)^0,f,c
  9239  00130C                     l3661:
  9240  00130C  FFFF               	dw	65535	; assembler added errata NOP
  9241  00130E  BE22               	btfsc	(___flmul@temp+1)^0,7,c
  9242  001310  EF92  F009         	goto	u3861
  9243  001314  5022               	movf	(___flmul@temp+1)^0,w,c
  9244  001316  E109               	bnz	u3860
  9245  001318  2821               	incf	___flmul@temp^0,w,c
  9246  00131A  A0D8               	btfss	status,0,c
  9247  00131C  EF92  F009         	goto	u3861
  9248  001320  EF95  F009         	goto	u3860
  9249  001324                     u3861:
  9250  001324  FFFF               	dw	65535	; assembler added errata NOP
  9251  001326  EFA0  F009         	goto	l3665
  9252  00132A                     u3860:
  9253  00132A  FFFF               	dw	65535	; assembler added errata NOP
  9254  00132C  0E00               	movlw	0
  9255  00132E  6E1D               	movwf	___flmul@prod^0,c
  9256  001330  0E00               	movlw	0
  9257  001332  6E1E               	movwf	(___flmul@prod+1)^0,c
  9258  001334  0E80               	movlw	128
  9259  001336  6E1F               	movwf	(___flmul@prod+2)^0,c
  9260  001338  0E7F               	movlw	127
  9261  00133A  6E20               	movwf	(___flmul@prod+3)^0,c
  9262  00133C  EFD5  F009         	goto	l3677
  9263  001340                     l3665:
  9264  001340  FFFF               	dw	65535	; assembler added errata NOP
  9265  001342  BE22               	btfsc	(___flmul@temp+1)^0,7,c
  9266  001344  EFAF  F009         	goto	u3870
  9267  001348  5022               	movf	(___flmul@temp+1)^0,w,c
  9268  00134A  E106               	bnz	u3871
  9269  00134C  0421               	decf	___flmul@temp^0,w,c
  9270  00134E  B0D8               	btfsc	status,0,c
  9271  001350  EFAC  F009         	goto	u3871
  9272  001354  EFAF  F009         	goto	u3870
  9273  001358                     u3871:
  9274  001358  FFFF               	dw	65535	; assembler added errata NOP
  9275  00135A  EFBC  F009         	goto	l1145
  9276  00135E                     u3870:
  9277  00135E  FFFF               	dw	65535	; assembler added errata NOP
  9278  001360  0E00               	movlw	0
  9279  001362  6E1D               	movwf	___flmul@prod^0,c
  9280  001364  0E00               	movlw	0
  9281  001366  6E1E               	movwf	(___flmul@prod+1)^0,c
  9282  001368  0E00               	movlw	0
  9283  00136A  6E1F               	movwf	(___flmul@prod+2)^0,c
  9284  00136C  0E00               	movlw	0
  9285  00136E  6E20               	movwf	(___flmul@prod+3)^0,c
  9286  001370  0E00               	movlw	0
  9287  001372  6E16               	movwf	___flmul@sign^0,c
  9288  001374  EFD5  F009         	goto	l3677
  9289  001378                     l1145:
  9290  001378  FFFF               	dw	65535	; assembler added errata NOP
  9291  00137A  C021  F01C         	movff	___flmul@temp,___flmul@bexp
  9292  00137E  0EFF               	movlw	255
  9293  001380  161D               	andwf	___flmul@prod^0,f,c
  9294  001382  0EFF               	movlw	255
  9295  001384  161E               	andwf	(___flmul@prod+1)^0,f,c
  9296  001386  0E7F               	movlw	127
  9297  001388  161F               	andwf	(___flmul@prod+2)^0,f,c
  9298  00138A  0E00               	movlw	0
  9299  00138C  1620               	andwf	(___flmul@prod+3)^0,f,c
  9300  00138E  A01C               	btfss	___flmul@bexp^0,0,c
  9301  001390  EFCC  F009         	goto	u3881
  9302  001394  EFCF  F009         	goto	u3880
  9303  001398                     u3881:
  9304  001398  FFFF               	dw	65535	; assembler added errata NOP
  9305  00139A  EFD1  F009         	goto	l3675
  9306  00139E                     u3880:
  9307  00139E  FFFF               	dw	65535	; assembler added errata NOP
  9308  0013A0  8E1F               	bsf	(___flmul@prod+2)^0,7,c
  9309  0013A2                     l3675:
  9310  0013A2  FFFF               	dw	65535	; assembler added errata NOP
  9311  0013A4  90D8               	bcf	status,0,c
  9312  0013A6  301C               	rrcf	___flmul@bexp^0,w,c
  9313  0013A8  6E20               	movwf	(___flmul@prod+3)^0,c
  9314  0013AA                     l3677:
  9315  0013AA  FFFF               	dw	65535	; assembler added errata NOP
  9316  0013AC  5016               	movf	___flmul@sign^0,w,c
  9317  0013AE  1220               	iorwf	(___flmul@prod+3)^0,f,c
  9318  0013B0  C01D  F00A         	movff	___flmul@prod,?___flmul
  9319  0013B4  C01E  F00B         	movff	___flmul@prod+1,?___flmul+1
  9320  0013B8  C01F  F00C         	movff	___flmul@prod+2,?___flmul+2
  9321  0013BC  C020  F00D         	movff	___flmul@prod+3,?___flmul+3
  9322  0013C0                     l1132:
  9323  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  9324  0013C2  0012               	return		;funcret
  9325  0013C4  FFFF               	dw	65535	; errata NOP
  9326  0013C6                     __end_of___flmul:
  9327                           	callstack 0
  9328                           
  9329 ;; *************** function ___flge *****************
  9330 ;; Defined at:
  9331 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  ff1             4   48[COMRAM] unsigned char 
  9334 ;;  ff2             4   52[COMRAM] unsigned char 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;		None
  9337 ;; Return value:  Size  Location     Type
  9338 ;;		None               void
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9346 ;;      Params:         8       0       0       0       0       0       0
  9347 ;;      Locals:         0       0       0       0       0       0       0
  9348 ;;      Temps:          4       0       0       0       0       0       0
  9349 ;;      Totals:        12       0       0       0       0       0       0
  9350 ;;Total ram usage:       12 bytes
  9351 ;; Hardware stack levels used: 1
  9352 ;; Hardware stack levels required when called: 2
  9353 ;; This function calls:
  9354 ;;		Nothing
  9355 ;; This function is called by:
  9356 ;;		_pick_and_place
  9357 ;;		_roundf
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text35
  9362  00269A                     __ptext35:
  9363                           	callstack 0
  9364  00269A                     ___flge:
  9365                           	callstack 0
  9366  00269A  FFFF               	dw	65535	; assembler added errata NOP
  9367  00269C  0E00               	movlw	0
  9368  00269E  1431               	andwf	___flge@ff1^0,w,c
  9369  0026A0  6E39               	movwf	??___flge^0,c
  9370  0026A2  0E00               	movlw	0
  9371  0026A4  1432               	andwf	(___flge@ff1+1)^0,w,c
  9372  0026A6  6E3A               	movwf	(??___flge+1)^0,c
  9373  0026A8  0E80               	movlw	128
  9374  0026AA  1433               	andwf	(___flge@ff1+2)^0,w,c
  9375  0026AC  6E3B               	movwf	(??___flge+2)^0,c
  9376  0026AE  0E7F               	movlw	127
  9377  0026B0  1434               	andwf	(___flge@ff1+3)^0,w,c
  9378  0026B2  6E3C               	movwf	(??___flge+3)^0,c
  9379  0026B4  5039               	movf	??___flge^0,w,c
  9380  0026B6  103A               	iorwf	(??___flge+1)^0,w,c
  9381  0026B8  103B               	iorwf	(??___flge+2)^0,w,c
  9382  0026BA  103C               	iorwf	(??___flge+3)^0,w,c
  9383  0026BC  A4D8               	btfss	status,2,c
  9384  0026BE  EF63  F013         	goto	u5601
  9385  0026C2  EF66  F013         	goto	u5600
  9386  0026C6                     u5601:
  9387  0026C6  FFFF               	dw	65535	; assembler added errata NOP
  9388  0026C8  EF6F  F013         	goto	l4755
  9389  0026CC                     u5600:
  9390  0026CC  FFFF               	dw	65535	; assembler added errata NOP
  9391  0026CE  0E00               	movlw	0
  9392  0026D0  6E31               	movwf	___flge@ff1^0,c
  9393  0026D2  0E00               	movlw	0
  9394  0026D4  6E32               	movwf	(___flge@ff1+1)^0,c
  9395  0026D6  0E00               	movlw	0
  9396  0026D8  6E33               	movwf	(___flge@ff1+2)^0,c
  9397  0026DA  0E00               	movlw	0
  9398  0026DC  6E34               	movwf	(___flge@ff1+3)^0,c
  9399  0026DE                     l4755:
  9400  0026DE  FFFF               	dw	65535	; assembler added errata NOP
  9401  0026E0  0E00               	movlw	0
  9402  0026E2  1435               	andwf	___flge@ff2^0,w,c
  9403  0026E4  6E39               	movwf	??___flge^0,c
  9404  0026E6  0E00               	movlw	0
  9405  0026E8  1436               	andwf	(___flge@ff2+1)^0,w,c
  9406  0026EA  6E3A               	movwf	(??___flge+1)^0,c
  9407  0026EC  0E80               	movlw	128
  9408  0026EE  1437               	andwf	(___flge@ff2+2)^0,w,c
  9409  0026F0  6E3B               	movwf	(??___flge+2)^0,c
  9410  0026F2  0E7F               	movlw	127
  9411  0026F4  1438               	andwf	(___flge@ff2+3)^0,w,c
  9412  0026F6  6E3C               	movwf	(??___flge+3)^0,c
  9413  0026F8  5039               	movf	??___flge^0,w,c
  9414  0026FA  103A               	iorwf	(??___flge+1)^0,w,c
  9415  0026FC  103B               	iorwf	(??___flge+2)^0,w,c
  9416  0026FE  103C               	iorwf	(??___flge+3)^0,w,c
  9417  002700  A4D8               	btfss	status,2,c
  9418  002702  EF85  F013         	goto	u5611
  9419  002706  EF88  F013         	goto	u5610
  9420  00270A                     u5611:
  9421  00270A  FFFF               	dw	65535	; assembler added errata NOP
  9422  00270C  EF91  F013         	goto	l4759
  9423  002710                     u5610:
  9424  002710  FFFF               	dw	65535	; assembler added errata NOP
  9425  002712  0E00               	movlw	0
  9426  002714  6E35               	movwf	___flge@ff2^0,c
  9427  002716  0E00               	movlw	0
  9428  002718  6E36               	movwf	(___flge@ff2+1)^0,c
  9429  00271A  0E00               	movlw	0
  9430  00271C  6E37               	movwf	(___flge@ff2+2)^0,c
  9431  00271E  0E00               	movlw	0
  9432  002720  6E38               	movwf	(___flge@ff2+3)^0,c
  9433  002722                     l4759:
  9434  002722  FFFF               	dw	65535	; assembler added errata NOP
  9435  002724  AE34               	btfss	(___flge@ff1+3)^0,7,c
  9436  002726  EF97  F013         	goto	u5621
  9437  00272A  EF9A  F013         	goto	u5620
  9438  00272E                     u5621:
  9439  00272E  FFFF               	dw	65535	; assembler added errata NOP
  9440  002730  EFA4  F013         	goto	l4763
  9441  002734                     u5620:
  9442  002734  FFFF               	dw	65535	; assembler added errata NOP
  9443  002736  6C31               	negf	___flge@ff1^0,c
  9444  002738  1E32               	comf	(___flge@ff1+1)^0,f,c
  9445  00273A  B0D8               	btfsc	status,0,c
  9446  00273C  2A32               	incf	(___flge@ff1+1)^0,f,c
  9447  00273E  1E33               	comf	(___flge@ff1+2)^0,f,c
  9448  002740  B0D8               	btfsc	status,0,c
  9449  002742  2A33               	incf	(___flge@ff1+2)^0,f,c
  9450  002744  0E80               	movlw	128
  9451  002746  5634               	subfwb	(___flge@ff1+3)^0,f,c
  9452  002748                     l4763:
  9453  002748  FFFF               	dw	65535	; assembler added errata NOP
  9454  00274A  AE38               	btfss	(___flge@ff2+3)^0,7,c
  9455  00274C  EFAA  F013         	goto	u5631
  9456  002750  EFAD  F013         	goto	u5630
  9457  002754                     u5631:
  9458  002754  FFFF               	dw	65535	; assembler added errata NOP
  9459  002756  EFB7  F013         	goto	l779
  9460  00275A                     u5630:
  9461  00275A  FFFF               	dw	65535	; assembler added errata NOP
  9462  00275C  6C35               	negf	___flge@ff2^0,c
  9463  00275E  1E36               	comf	(___flge@ff2+1)^0,f,c
  9464  002760  B0D8               	btfsc	status,0,c
  9465  002762  2A36               	incf	(___flge@ff2+1)^0,f,c
  9466  002764  1E37               	comf	(___flge@ff2+2)^0,f,c
  9467  002766  B0D8               	btfsc	status,0,c
  9468  002768  2A37               	incf	(___flge@ff2+2)^0,f,c
  9469  00276A  0E80               	movlw	128
  9470  00276C  5638               	subfwb	(___flge@ff2+3)^0,f,c
  9471  00276E                     l779:
  9472  00276E  FFFF               	dw	65535	; assembler added errata NOP
  9473  002770  0E00               	movlw	0
  9474  002772  1A31               	xorwf	___flge@ff1^0,f,c
  9475  002774  0E00               	movlw	0
  9476  002776  1A32               	xorwf	(___flge@ff1+1)^0,f,c
  9477  002778  0E00               	movlw	0
  9478  00277A  1A33               	xorwf	(___flge@ff1+2)^0,f,c
  9479  00277C  0E80               	movlw	128
  9480  00277E  1A34               	xorwf	(___flge@ff1+3)^0,f,c
  9481  002780  0E00               	movlw	0
  9482  002782  1A35               	xorwf	___flge@ff2^0,f,c
  9483  002784  0E00               	movlw	0
  9484  002786  1A36               	xorwf	(___flge@ff2+1)^0,f,c
  9485  002788  0E00               	movlw	0
  9486  00278A  1A37               	xorwf	(___flge@ff2+2)^0,f,c
  9487  00278C  0E80               	movlw	128
  9488  00278E  1A38               	xorwf	(___flge@ff2+3)^0,f,c
  9489  002790  5035               	movf	___flge@ff2^0,w,c
  9490  002792  5C31               	subwf	___flge@ff1^0,w,c
  9491  002794  5036               	movf	(___flge@ff2+1)^0,w,c
  9492  002796  5832               	subwfb	(___flge@ff1+1)^0,w,c
  9493  002798  5037               	movf	(___flge@ff2+2)^0,w,c
  9494  00279A  5833               	subwfb	(___flge@ff1+2)^0,w,c
  9495  00279C  5038               	movf	(___flge@ff2+3)^0,w,c
  9496  00279E  5834               	subwfb	(___flge@ff1+3)^0,w,c
  9497  0027A0  B0D8               	btfsc	status,0,c
  9498  0027A2  EFD5  F013         	goto	u5641
  9499  0027A6  EFD8  F013         	goto	u5640
  9500  0027AA                     u5641:
  9501  0027AA  FFFF               	dw	65535	; assembler added errata NOP
  9502  0027AC  EFDC  F013         	goto	l4769
  9503  0027B0                     u5640:
  9504  0027B0  FFFF               	dw	65535	; assembler added errata NOP
  9505  0027B2  90D8               	bcf	status,0,c
  9506  0027B4  EFDE  F013         	goto	l784
  9507  0027B8                     l4769:
  9508  0027B8  FFFF               	dw	65535	; assembler added errata NOP
  9509  0027BA  80D8               	bsf	status,0,c
  9510  0027BC                     l784:
  9511  0027BC  FFFF               	dw	65535	; assembler added errata NOP
  9512  0027BE  0012               	return		;funcret
  9513  0027C0  FFFF               	dw	65535	; errata NOP
  9514  0027C2                     __end_of___flge:
  9515                           	callstack 0
  9516                           
  9517 ;; *************** function ___fltol *****************
  9518 ;; Defined at:
  9519 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;  f1              4   86[COMRAM] unsigned char 
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;  exp1            1    5[BANK0 ] unsigned char 
  9524 ;;  sign1           1    4[BANK0 ] unsigned char 
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  4   86[COMRAM] long 
  9527 ;; Registers used:
  9528 ;;		wreg, status,2, status,0
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9534 ;;      Params:         4       0       0       0       0       0       0
  9535 ;;      Locals:         0       2       0       0       0       0       0
  9536 ;;      Temps:          0       4       0       0       0       0       0
  9537 ;;      Totals:         4       6       0       0       0       0       0
  9538 ;;Total ram usage:       10 bytes
  9539 ;; Hardware stack levels used: 1
  9540 ;; Hardware stack levels required when called: 2
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_init_USART
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           	psect	text36
  9549  002430                     __ptext36:
  9550                           	callstack 0
  9551  002430                     ___fltol:
  9552                           	callstack 0
  9553  002430  FFFF               	dw	65535	; assembler added errata NOP
  9554  002432  3459               	rlcf	(___fltol@f1+2)^0,w,c
  9555  002434  345A               	rlcf	(___fltol@f1+3)^0,w,c
  9556  002436  0100               	movlb	0	; () banked
  9557  002438  6FC4               	movwf	___fltol@exp1& (0+255),b
  9558  00243A  51C4               	movf	___fltol@exp1& (0+255),w,b
  9559  00243C  A4D8               	btfss	status,2,c
  9560  00243E  EF23  F012         	goto	u6431
  9561  002442  EF26  F012         	goto	u6430
  9562  002446                     u6431:
  9563  002446  FFFF               	dw	65535	; assembler added errata NOP
  9564  002448  EF32  F012         	goto	l5173
  9565  00244C                     u6430:
  9566  00244C  FFFF               	dw	65535	; assembler added errata NOP
  9567  00244E                     l5169:
  9568  00244E  FFFF               	dw	65535	; assembler added errata NOP
  9569                           
  9570                           ; BSR set to: 0
  9571  002450  0E00               	movlw	0
  9572  002452  6E57               	movwf	?___fltol^0,c
  9573  002454  0E00               	movlw	0
  9574  002456  6E58               	movwf	(?___fltol+1)^0,c
  9575  002458  0E00               	movlw	0
  9576  00245A  6E59               	movwf	(?___fltol+2)^0,c
  9577  00245C  0E00               	movlw	0
  9578  00245E  6E5A               	movwf	(?___fltol+3)^0,c
  9579  002460  EFB1  F012         	goto	l811
  9580  002464                     l5173:
  9581  002464  FFFF               	dw	65535	; assembler added errata NOP
  9582                           
  9583                           ; BSR set to: 0
  9584  002466  C057  F0BF         	movff	___fltol@f1,??___fltol
  9585  00246A  C058  F0C0         	movff	___fltol@f1+1,??___fltol+1
  9586  00246E  C059  F0C1         	movff	___fltol@f1+2,??___fltol+2
  9587  002472  C05A  F0C2         	movff	___fltol@f1+3,??___fltol+3
  9588  002476  0E20               	movlw	32
  9589  002478  EF44  F012         	goto	u6440
  9590  00247C                     u6445:
  9591  00247C  FFFF               	dw	65535	; assembler added errata NOP
  9592  00247E  90D8               	bcf	status,0,c
  9593  002480  33C2               	rrcf	(??___fltol+3)& (0+255),f,b
  9594  002482  33C1               	rrcf	(??___fltol+2)& (0+255),f,b
  9595  002484  33C0               	rrcf	(??___fltol+1)& (0+255),f,b
  9596  002486  33BF               	rrcf	??___fltol& (0+255),f,b
  9597  002488                     u6440:
  9598  002488  FFFF               	dw	65535	; assembler added errata NOP
  9599  00248A  2EE8               	decfsz	wreg,f,c
  9600  00248C  EF3E  F012         	goto	u6445
  9601  002490  51BF               	movf	??___fltol& (0+255),w,b
  9602  002492  6FC3               	movwf	___fltol@sign1& (0+255),b
  9603  002494                     
  9604                           ; BSR set to: 0
  9605  002494  8E59               	bsf	(___fltol@f1+2)^0,7,c
  9606  002496                     
  9607                           ; BSR set to: 0
  9608  002496  0EFF               	movlw	255
  9609  002498  1657               	andwf	___fltol@f1^0,f,c
  9610  00249A  0EFF               	movlw	255
  9611  00249C  1658               	andwf	(___fltol@f1+1)^0,f,c
  9612  00249E  0EFF               	movlw	255
  9613  0024A0  1659               	andwf	(___fltol@f1+2)^0,f,c
  9614  0024A2  0E00               	movlw	0
  9615  0024A4  165A               	andwf	(___fltol@f1+3)^0,f,c
  9616  0024A6                     
  9617                           ; BSR set to: 0
  9618  0024A6  0E96               	movlw	150
  9619  0024A8  5FC4               	subwf	___fltol@exp1& (0+255),f,b
  9620  0024AA                     
  9621                           ; BSR set to: 0
  9622  0024AA  BFC4               	btfsc	___fltol@exp1& (0+255),7,b
  9623  0024AC  EF5D  F012         	goto	u6450
  9624  0024B0  EF5A  F012         	goto	u6451
  9625  0024B4                     u6451:
  9626  0024B4  FFFF               	dw	65535	; assembler added errata NOP
  9627  0024B6  EF77  F012         	goto	l5193
  9628  0024BA                     u6450:
  9629  0024BA  FFFF               	dw	65535	; assembler added errata NOP
  9630  0024BC                     
  9631                           ; BSR set to: 0
  9632  0024BC  51C4               	movf	___fltol@exp1& (0+255),w,b
  9633  0024BE  0A80               	xorlw	128
  9634  0024C0  0F97               	addlw	151
  9635  0024C2  B0D8               	btfsc	status,0,c
  9636  0024C4  EF66  F012         	goto	u6461
  9637  0024C8  EF69  F012         	goto	u6460
  9638  0024CC                     u6461:
  9639  0024CC  FFFF               	dw	65535	; assembler added errata NOP
  9640  0024CE  EF6C  F012         	goto	l5189
  9641  0024D2                     u6460:
  9642  0024D2  FFFF               	dw	65535	; assembler added errata NOP
  9643  0024D4  EF27  F012         	goto	l5169
  9644  0024D8                     l5189:
  9645  0024D8  FFFF               	dw	65535	; assembler added errata NOP
  9646                           
  9647                           ; BSR set to: 0
  9648  0024DA  90D8               	bcf	status,0,c
  9649  0024DC  325A               	rrcf	(___fltol@f1+3)^0,f,c
  9650  0024DE  3259               	rrcf	(___fltol@f1+2)^0,f,c
  9651  0024E0  3258               	rrcf	(___fltol@f1+1)^0,f,c
  9652  0024E2  3257               	rrcf	___fltol@f1^0,f,c
  9653  0024E4                     
  9654                           ; BSR set to: 0
  9655  0024E4  3FC4               	incfsz	___fltol@exp1& (0+255),f,b
  9656  0024E6  EF6C  F012         	goto	l5189
  9657  0024EA  EF95  F012         	goto	l5203
  9658  0024EE                     l5193:
  9659  0024EE  FFFF               	dw	65535	; assembler added errata NOP
  9660                           
  9661                           ; BSR set to: 0
  9662  0024F0  0E1F               	movlw	31
  9663  0024F2  65C4               	cpfsgt	___fltol@exp1& (0+255),b
  9664  0024F4  EF7E  F012         	goto	u6471
  9665  0024F8  EF81  F012         	goto	u6470
  9666  0024FC                     u6471:
  9667  0024FC  FFFF               	dw	65535	; assembler added errata NOP
  9668  0024FE  EF8B  F012         	goto	l5201
  9669  002502                     u6470:
  9670  002502  FFFF               	dw	65535	; assembler added errata NOP
  9671  002504  EF27  F012         	goto	l5169
  9672  002508                     l5199:
  9673  002508  FFFF               	dw	65535	; assembler added errata NOP
  9674                           
  9675                           ; BSR set to: 0
  9676  00250A  90D8               	bcf	status,0,c
  9677  00250C  3657               	rlcf	___fltol@f1^0,f,c
  9678  00250E  3658               	rlcf	(___fltol@f1+1)^0,f,c
  9679  002510  3659               	rlcf	(___fltol@f1+2)^0,f,c
  9680  002512  365A               	rlcf	(___fltol@f1+3)^0,f,c
  9681  002514  07C4               	decf	___fltol@exp1& (0+255),f,b
  9682  002516                     l5201:
  9683  002516  FFFF               	dw	65535	; assembler added errata NOP
  9684                           
  9685                           ; BSR set to: 0
  9686  002518  51C4               	movf	___fltol@exp1& (0+255),w,b
  9687  00251A  A4D8               	btfss	status,2,c
  9688  00251C  EF92  F012         	goto	u6481
  9689  002520  EF95  F012         	goto	u6480
  9690  002524                     u6481:
  9691  002524  FFFF               	dw	65535	; assembler added errata NOP
  9692  002526  EF84  F012         	goto	l5199
  9693  00252A                     u6480:
  9694  00252A                     l5203:
  9695  00252A  FFFF               	dw	65535	; assembler added errata NOP
  9696                           
  9697                           ; BSR set to: 0
  9698  00252C  51C3               	movf	___fltol@sign1& (0+255),w,b
  9699  00252E  B4D8               	btfsc	status,2,c
  9700  002530  EF9C  F012         	goto	u6491
  9701  002534  EF9F  F012         	goto	u6490
  9702  002538                     u6491:
  9703  002538  FFFF               	dw	65535	; assembler added errata NOP
  9704  00253A  EFA8  F012         	goto	l5207
  9705  00253E                     u6490:
  9706  00253E  FFFF               	dw	65535	; assembler added errata NOP
  9707  002540                     
  9708                           ; BSR set to: 0
  9709  002540  1E5A               	comf	(___fltol@f1+3)^0,f,c
  9710  002542  1E59               	comf	(___fltol@f1+2)^0,f,c
  9711  002544  1E58               	comf	(___fltol@f1+1)^0,f,c
  9712  002546  6C57               	negf	___fltol@f1^0,c
  9713  002548  0E00               	movlw	0
  9714  00254A  2258               	addwfc	(___fltol@f1+1)^0,f,c
  9715  00254C  2259               	addwfc	(___fltol@f1+2)^0,f,c
  9716  00254E  225A               	addwfc	(___fltol@f1+3)^0,f,c
  9717  002550                     l5207:
  9718  002550  FFFF               	dw	65535	; assembler added errata NOP
  9719                           
  9720                           ; BSR set to: 0
  9721  002552  C057  F057         	movff	___fltol@f1,?___fltol
  9722  002556  C058  F058         	movff	___fltol@f1+1,?___fltol+1
  9723  00255A  C059  F059         	movff	___fltol@f1+2,?___fltol+2
  9724  00255E  C05A  F05A         	movff	___fltol@f1+3,?___fltol+3
  9725  002562                     l811:
  9726  002562  FFFF               	dw	65535	; assembler added errata NOP
  9727                           
  9728                           ; BSR set to: 0
  9729  002564  0012               	return		;funcret
  9730  002566  FFFF               	dw	65535	; errata NOP
  9731  002568                     __end_of___fltol:
  9732                           	callstack 0
  9733                           
  9734 ;; *************** function _init_Timers *****************
  9735 ;; Defined at:
  9736 ;;		line 44 in file "init_PIC.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;		None
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;		None
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, status,2
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9750 ;;      Params:         0       0       0       0       0       0       0
  9751 ;;      Locals:         0       0       0       0       0       0       0
  9752 ;;      Temps:          0       0       0       0       0       0       0
  9753 ;;      Totals:         0       0       0       0       0       0       0
  9754 ;;Total ram usage:        0 bytes
  9755 ;; Hardware stack levels used: 1
  9756 ;; Hardware stack levels required when called: 2
  9757 ;; This function calls:
  9758 ;;		Nothing
  9759 ;; This function is called by:
  9760 ;;		_main
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text37
  9765  003468                     __ptext37:
  9766                           	callstack 0
  9767  003468                     _init_Timers:
  9768                           	callstack 0
  9769  003468  FFFF               	dw	65535	; assembler added errata NOP
  9770  00346A                     
  9771                           ;init_PIC.c: 45:     T0CONbits.T08BIT = 0;
  9772  00346A  9CD5               	bcf	213,6,c	;volatile
  9773                           
  9774                           ;init_PIC.c: 46:  T0CONbits.T0CS = 0;
  9775  00346C  9AD5               	bcf	213,5,c	;volatile
  9776                           
  9777                           ;init_PIC.c: 47:  T0CONbits.PSA = 1;
  9778  00346E  86D5               	bsf	213,3,c	;volatile
  9779                           
  9780                           ;init_PIC.c: 48:  T0CONbits.TMR0ON = 0;
  9781  003470  9ED5               	bcf	213,7,c	;volatile
  9782  003472                     
  9783                           ;init_PIC.c: 51:  TMR0H = 0xB2;
  9784  003472  0EB2               	movlw	178
  9785  003474  6ED7               	movwf	215,c	;volatile
  9786                           
  9787                           ;init_PIC.c: 52:  TMR0L = 0x04;
  9788  003476  0E04               	movlw	4
  9789  003478  6ED6               	movwf	214,c	;volatile
  9790  00347A                     
  9791                           ;init_PIC.c: 55:     T1CONbits.RD16 = 1;
  9792  00347A  8ECD               	bsf	205,7,c	;volatile
  9793  00347C                     
  9794                           ;init_PIC.c: 56:  T1CONbits.T1CKPS1 = 0;
  9795  00347C  9ACD               	bcf	205,5,c	;volatile
  9796  00347E                     
  9797                           ;init_PIC.c: 57:  T1CONbits.T1CKPS0 = 0;
  9798  00347E  98CD               	bcf	205,4,c	;volatile
  9799  003480                     
  9800                           ;init_PIC.c: 58:  T1CONbits.T1OSCEN = 0;
  9801  003480  96CD               	bcf	205,3,c	;volatile
  9802  003482                     
  9803                           ;init_PIC.c: 59:  T1CONbits.TMR1CS = 0;
  9804  003482  92CD               	bcf	205,1,c	;volatile
  9805  003484                     
  9806                           ;init_PIC.c: 60:  T1CONbits.TMR1ON = 0;
  9807  003484  90CD               	bcf	205,0,c	;volatile
  9808                           
  9809                           ;init_PIC.c: 63:  TMR1H = 0xFA;
  9810  003486  0EFA               	movlw	250
  9811  003488  6ECF               	movwf	207,c	;volatile
  9812                           
  9813                           ;init_PIC.c: 64:     TMR1L = 0x24;
  9814  00348A  0E24               	movlw	36
  9815  00348C  6ECE               	movwf	206,c	;volatile
  9816  00348E  0012               	return		;funcret
  9817  003490  FFFF               	dw	65535	; errata NOP
  9818  003492                     __end_of_init_Timers:
  9819                           	callstack 0
  9820                           
  9821 ;; *************** function _init_PORTS *****************
  9822 ;; Defined at:
  9823 ;;		line 21 in file "init_PIC.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;		None
  9826 ;; Auto vars:     Size  Location     Type
  9827 ;;		None
  9828 ;; Return value:  Size  Location     Type
  9829 ;;                  1    wreg      void 
  9830 ;; Registers used:
  9831 ;;		wreg, status,2
  9832 ;; Tracked objects:
  9833 ;;		On entry : 0/0
  9834 ;;		On exit  : 0/0
  9835 ;;		Unchanged: 0/0
  9836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9837 ;;      Params:         0       0       0       0       0       0       0
  9838 ;;      Locals:         0       0       0       0       0       0       0
  9839 ;;      Temps:          0       0       0       0       0       0       0
  9840 ;;      Totals:         0       0       0       0       0       0       0
  9841 ;;Total ram usage:        0 bytes
  9842 ;; Hardware stack levels used: 1
  9843 ;; Hardware stack levels required when called: 2
  9844 ;; This function calls:
  9845 ;;		Nothing
  9846 ;; This function is called by:
  9847 ;;		_main
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           	psect	text38
  9852  003492                     __ptext38:
  9853                           	callstack 0
  9854  003492                     _init_PORTS:
  9855                           	callstack 0
  9856  003492  FFFF               	dw	65535	; assembler added errata NOP
  9857  003494                     
  9858                           ;init_PIC.c: 25:     TRISD = 0x00;
  9859  003494  0E00               	movlw	0
  9860  003496  6E95               	movwf	149,c	;volatile
  9861                           
  9862                           ;init_PIC.c: 26:     TRISA = 0x00;
  9863  003498  0E00               	movlw	0
  9864  00349A  6E92               	movwf	146,c	;volatile
  9865                           
  9866                           ;init_PIC.c: 27:     TRISB = 0X03;
  9867  00349C  0E03               	movlw	3
  9868  00349E  6E93               	movwf	147,c	;volatile
  9869                           
  9870                           ;init_PIC.c: 28:     PORTA = 0x00;
  9871  0034A0  0E00               	movlw	0
  9872  0034A2  6E80               	movwf	128,c	;volatile
  9873                           
  9874                           ;init_PIC.c: 29:     PORTD = 0x00;
  9875  0034A4  0E00               	movlw	0
  9876  0034A6  6E83               	movwf	131,c	;volatile
  9877                           
  9878                           ;init_PIC.c: 34:     LATC = 0;
  9879  0034A8  0E00               	movlw	0
  9880  0034AA  6E8B               	movwf	139,c	;volatile
  9881                           
  9882                           ;init_PIC.c: 35:     PORTC = 0;
  9883  0034AC  0E00               	movlw	0
  9884  0034AE  6E82               	movwf	130,c	;volatile
  9885  0034B0                     
  9886                           ;init_PIC.c: 36:     TRISCbits.RC7 = 1;
  9887  0034B0  8E94               	bsf	148,7,c	;volatile
  9888  0034B2                     
  9889                           ;init_PIC.c: 37:     TRISCbits.RC6 = 0;
  9890  0034B2  9C94               	bcf	148,6,c	;volatile
  9891  0034B4                     
  9892                           ;init_PIC.c: 38:     TRISCbits.RC2 = 0;
  9893  0034B4  9494               	bcf	148,2,c	;volatile
  9894  0034B6  0012               	return		;funcret
  9895  0034B8  FFFF               	dw	65535	; errata NOP
  9896  0034BA                     __end_of_init_PORTS:
  9897                           	callstack 0
  9898                           
  9899 ;; *************** function _Rx_char_USART *****************
  9900 ;; Defined at:
  9901 ;;		line 711 in file "main.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;		None
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;  i               2    7[COMRAM] int 
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      void 
  9908 ;; Registers used:
  9909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9915 ;;      Params:         0       0       0       0       0       0       0
  9916 ;;      Locals:         2       0       0       0       0       0       0
  9917 ;;      Temps:          5       0       0       0       0       0       0
  9918 ;;      Totals:         7       0       0       0       0       0       0
  9919 ;;Total ram usage:        7 bytes
  9920 ;; Hardware stack levels used: 1
  9921 ;; Hardware stack levels required when called: 1
  9922 ;; This function calls:
  9923 ;;		_set_new_pos
  9924 ;; This function is called by:
  9925 ;;		Interrupt level 2
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           	psect	intcode
  9930  000008                     __pintcode:
  9931                           	callstack 0
  9932  000008                     _Rx_char_USART:
  9933                           	callstack 0
  9934  000008  FFFF               	dw	65535	; assembler added errata NOP
  9935                           
  9936                           ;incstack = 0
  9937  00000A  8276               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9938  00000C  CFD9 F006          	movff	fsr2l,??_Rx_char_USART+3
  9939  000010  CFDA F007          	movff	fsr2h,??_Rx_char_USART+4
  9940  000014                     
  9941                           ;main.c: 713:     if(PIE1bits.RCIE && PIR1bits.RCIF){
  9942  000014  AA9D               	btfss	157,5,c	;volatile
  9943  000016  EF0F  F000         	goto	i2u486_41
  9944  00001A  EF12  F000         	goto	i2u486_40
  9945  00001E                     i2u486_41:
  9946  00001E  FFFF               	dw	65535	; assembler added errata NOP
  9947  000020  EF73  F000         	goto	i2l4293
  9948  000024                     i2u486_40:
  9949  000024  FFFF               	dw	65535	; assembler added errata NOP
  9950  000026  AA9E               	btfss	158,5,c	;volatile
  9951  000028  EF18  F000         	goto	i2u487_41
  9952  00002C  EF1B  F000         	goto	i2u487_40
  9953  000030                     i2u487_41:
  9954  000030  FFFF               	dw	65535	; assembler added errata NOP
  9955  000032  EF73  F000         	goto	i2l4293
  9956  000036                     i2u487_40:
  9957  000036  FFFF               	dw	65535	; assembler added errata NOP
  9958  000038                     
  9959                           ;main.c: 714:     int i=0;
  9960  000038  0E00               	movlw	0
  9961  00003A  6E09               	movwf	(Rx_char_USART@i+1)^0,c
  9962  00003C  0E00               	movlw	0
  9963  00003E  6E08               	movwf	Rx_char_USART@i^0,c
  9964  000040                     i2l498:
  9965  000040  FFFF               	dw	65535	; assembler added errata NOP
  9966  000042  B2F2               	btfsc	242,1,c	;volatile
  9967  000044  EF26  F000         	goto	i2u488_41
  9968  000048  EF29  F000         	goto	i2u488_40
  9969  00004C                     i2u488_41:
  9970  00004C  FFFF               	dw	65535	; assembler added errata NOP
  9971  00004E  EF32  F000         	goto	i2l4279
  9972  000052                     i2u488_40:
  9973  000052  FFFF               	dw	65535	; assembler added errata NOP
  9974  000054  AA9E               	btfss	3998,5,c	;volatile
  9975  000056  EF2F  F000         	goto	i2u489_41
  9976  00005A  EF32  F000         	goto	i2u489_40
  9977  00005E                     i2u489_41:
  9978  00005E  FFFF               	dw	65535	; assembler added errata NOP
  9979  000060  EF20  F000         	goto	i2l498
  9980  000064                     i2u489_40:
  9981  000064                     i2l4279:
  9982  000064  FFFF               	dw	65535	; assembler added errata NOP
  9983                           
  9984                           ;main.c: 718:         input_str[i]=RCREG;
  9985  000066  0EF0               	movlw	low _input_str
  9986  000068  2408               	addwf	Rx_char_USART@i^0,w,c
  9987  00006A  6ED9               	movwf	fsr2l,c
  9988  00006C  0E00               	movlw	high _input_str
  9989  00006E  2009               	addwfc	(Rx_char_USART@i+1)^0,w,c
  9990  000070  6EDA               	movwf	fsr2h,c
  9991  000072  CFAE FFDF          	movff	4014,indf2	;volatile
  9992  000076                     
  9993                           ;main.c: 719:     }while(INTCONbits.INT0IF==0 && input_str[i++] != '\n');
  9994  000076  B2F2               	btfsc	242,1,c	;volatile
  9995  000078  EF40  F000         	goto	i2u490_41
  9996  00007C  EF43  F000         	goto	i2u490_40
  9997  000080                     i2u490_41:
  9998  000080  FFFF               	dw	65535	; assembler added errata NOP
  9999  000082  EF5A  F000         	goto	i2l505
 10000  000086                     i2u490_40:
 10001  000086  FFFF               	dw	65535	; assembler added errata NOP
 10002  000088  5008               	movf	Rx_char_USART@i^0,w,c
 10003  00008A  6E03               	movwf	??_Rx_char_USART^0,c
 10004  00008C  5009               	movf	(Rx_char_USART@i+1)^0,w,c
 10005  00008E  6E04               	movwf	(??_Rx_char_USART+1)^0,c
 10006  000090  4A08               	infsnz	Rx_char_USART@i^0,f,c
 10007  000092  2A09               	incf	(Rx_char_USART@i+1)^0,f,c
 10008  000094  0EF0               	movlw	low _input_str
 10009  000096  2403               	addwf	??_Rx_char_USART^0,w,c
 10010  000098  6ED9               	movwf	fsr2l,c
 10011  00009A  0E00               	movlw	high _input_str
 10012  00009C  2004               	addwfc	(??_Rx_char_USART+1)^0,w,c
 10013  00009E  6EDA               	movwf	fsr2h,c
 10014  0000A0  0E0A               	movlw	10
 10015  0000A2  18DE               	xorwf	postinc2,w,c
 10016  0000A4  A4D8               	btfss	status,2,c
 10017  0000A6  EF57  F000         	goto	i2u491_41
 10018  0000AA  EF5A  F000         	goto	i2u491_40
 10019  0000AE                     i2u491_41:
 10020  0000AE  FFFF               	dw	65535	; assembler added errata NOP
 10021  0000B0  EF20  F000         	goto	i2l498
 10022  0000B4                     i2u491_40:
 10023  0000B4                     i2l505:
 10024  0000B4  FFFF               	dw	65535	; assembler added errata NOP
 10025                           
 10026                           ;main.c: 721:     PIR1bits.RCIF = 0;
 10027  0000B6  9A9E               	bcf	158,5,c	;volatile
 10028  0000B8                     
 10029                           ;main.c: 722:     New_char_RX = 1;
 10030  0000B8  0E01               	movlw	1
 10031  0000BA  6E74               	movwf	_New_char_RX^0,c
 10032  0000BC                     
 10033                           ;main.c: 723:     State = input_str[0];
 10034  0000BC  C0F0  F075         	movff	_input_str,_State	;volatile
 10035  0000C0                     
 10036                           ;main.c: 724:     if(State=="Q"){
 10037  0000C0  5075               	movf	_State^0,w,c
 10038  0000C2  6E03               	movwf	??_Rx_char_USART^0,c
 10039  0000C4  6A04               	clrf	(??_Rx_char_USART+1)^0,c
 10040  0000C6  0EFC               	movlw	low STR_22
 10041  0000C8  1803               	xorwf	??_Rx_char_USART^0,w,c
 10042  0000CA  E107               	bnz	i2u492_41
 10043  0000CC  0E7F               	movlw	high STR_22
 10044  0000CE  1804               	xorwf	(??_Rx_char_USART+1)^0,w,c
 10045  0000D0  A4D8               	btfss	status,2,c
 10046  0000D2  EF6D  F000         	goto	i2u492_41
 10047  0000D6  EF70  F000         	goto	i2u492_40
 10048  0000DA                     i2u492_41:
 10049  0000DA  FFFF               	dw	65535	; assembler added errata NOP
 10050  0000DC  EF73  F000         	goto	i2l4293
 10051  0000E0                     i2u492_40:
 10052  0000E0  FFFF               	dw	65535	; assembler added errata NOP
 10053  0000E2                     
 10054                           ;main.c: 725:         stop=1;
 10055  0000E2  0E01               	movlw	1
 10056  0000E4  6E72               	movwf	_stop^0,c
 10057  0000E6                     i2l4293:
 10058  0000E6  FFFF               	dw	65535	; assembler added errata NOP
 10059                           
 10060                           ;main.c: 728:     if(INTCONbits.INT0IF==1 && INTCONbits.INT0IE==1){
 10061  0000E8  A2F2               	btfss	242,1,c	;volatile
 10062  0000EA  EF79  F000         	goto	i2u493_41
 10063  0000EE  EF7C  F000         	goto	i2u493_40
 10064  0000F2                     i2u493_41:
 10065  0000F2  FFFF               	dw	65535	; assembler added errata NOP
 10066  0000F4  EF8C  F000         	goto	i2l4301
 10067  0000F8                     i2u493_40:
 10068  0000F8  FFFF               	dw	65535	; assembler added errata NOP
 10069  0000FA  A8F2               	btfss	242,4,c	;volatile
 10070  0000FC  EF82  F000         	goto	i2u494_41
 10071  000100  EF85  F000         	goto	i2u494_40
 10072  000104                     i2u494_41:
 10073  000104  FFFF               	dw	65535	; assembler added errata NOP
 10074  000106  EF8C  F000         	goto	i2l4301
 10075  00010A                     i2u494_40:
 10076  00010A  FFFF               	dw	65535	; assembler added errata NOP
 10077  00010C                     
 10078                           ;main.c: 729:         INTCONbits.INT0IF=0;
 10079  00010C  92F2               	bcf	242,1,c	;volatile
 10080  00010E                     
 10081                           ;main.c: 731:         input_str[0]="Q";
 10082  00010E  0EFC               	movlw	low (low STR_22)
 10083  000110  0100               	movlb	0	; () banked
 10084  000112  6FF0               	movwf	_input_str& (0+255),b	;volatile
 10085                           
 10086                           ;main.c: 732:         stop=1;
 10087  000114  0E01               	movlw	1
 10088  000116  6E72               	movwf	_stop^0,c
 10089  000118                     i2l4301:
 10090  000118  FFFF               	dw	65535	; assembler added errata NOP
 10091                           
 10092                           ;main.c: 734:     if(INTCON3bits.INT1IF==1 && INTCON3bits.INT1IE==1){
 10093  00011A  A0F0               	btfss	240,0,c	;volatile
 10094  00011C  EF92  F000         	goto	i2u495_41
 10095  000120  EF95  F000         	goto	i2u495_40
 10096  000124                     i2u495_41:
 10097  000124  FFFF               	dw	65535	; assembler added errata NOP
 10098  000126  EFA2  F000         	goto	i2l4309
 10099  00012A                     i2u495_40:
 10100  00012A  FFFF               	dw	65535	; assembler added errata NOP
 10101  00012C  A6F0               	btfss	240,3,c	;volatile
 10102  00012E  EF9B  F000         	goto	i2u496_41
 10103  000132  EF9E  F000         	goto	i2u496_40
 10104  000136                     i2u496_41:
 10105  000136  FFFF               	dw	65535	; assembler added errata NOP
 10106  000138  EFA2  F000         	goto	i2l4309
 10107  00013C                     i2u496_40:
 10108  00013C  FFFF               	dw	65535	; assembler added errata NOP
 10109  00013E                     
 10110                           ;main.c: 735:         INTCON3bits.INT1IF=0;
 10111  00013E  90F0               	bcf	240,0,c	;volatile
 10112  000140                     
 10113                           ;main.c: 736:         component_present=1;
 10114  000140  0E01               	movlw	1
 10115  000142  6E73               	movwf	_component_present^0,c
 10116  000144                     i2l4309:
 10117  000144  FFFF               	dw	65535	; assembler added errata NOP
 10118                           
 10119                           ;main.c: 739:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
 10120  000146  AAF2               	btfss	242,5,c	;volatile
 10121  000148  EFA8  F000         	goto	i2u497_41
 10122  00014C  EFAB  F000         	goto	i2u497_40
 10123  000150                     i2u497_41:
 10124  000150  FFFF               	dw	65535	; assembler added errata NOP
 10125  000152  EFC2  F000         	goto	i2l4323
 10126  000156                     i2u497_40:
 10127  000156  FFFF               	dw	65535	; assembler added errata NOP
 10128  000158  A4F2               	btfss	242,2,c	;volatile
 10129  00015A  EFB1  F000         	goto	i2u498_41
 10130  00015E  EFB4  F000         	goto	i2u498_40
 10131  000162                     i2u498_41:
 10132  000162  FFFF               	dw	65535	; assembler added errata NOP
 10133  000164  EFC2  F000         	goto	i2l4323
 10134  000168                     i2u498_40:
 10135  000168  FFFF               	dw	65535	; assembler added errata NOP
 10136  00016A                     
 10137                           ;main.c: 740:         {;main.c: 742:          TMR0H = 0xB2;
 10138  00016A  0EB2               	movlw	178
 10139  00016C  6ED7               	movwf	215,c	;volatile
 10140                           
 10141                           ;main.c: 743:             TMR0L = 0x04;
 10142  00016E  0E04               	movlw	4
 10143  000170  6ED6               	movwf	214,c	;volatile
 10144  000172                     
 10145                           ;main.c: 744:    set_new_pos(new_TMR1H, new_TMR1L);
 10146  000172  C0EC  F001         	movff	_new_TMR1L@main$F826,set_new_pos@nTMR1L
 10147  000176  0100               	movlb	0	; () banked
 10148  000178  51ED               	movf	_new_TMR1H@main$F825& (0+255),w,b
 10149  00017A  EC8C  F01A         	call	_set_new_pos
 10150  00017E                     
 10151                           ;main.c: 745:             T0CONbits.TMR0ON = 1;
 10152  00017E  8ED5               	bsf	213,7,c	;volatile
 10153  000180                     
 10154                           ;main.c: 746:    T1CONbits.TMR1ON = 1;
 10155  000180  80CD               	bsf	205,0,c	;volatile
 10156  000182                     
 10157                           ;main.c: 747:             INTCONbits.TMR0IF = 0;
 10158  000182  94F2               	bcf	242,2,c	;volatile
 10159  000184                     i2l4323:
 10160  000184  FFFF               	dw	65535	; assembler added errata NOP
 10161                           
 10162                           ;main.c: 749:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF)
 10163  000186  A09D               	btfss	157,0,c	;volatile
 10164  000188  EFC8  F000         	goto	i2u499_41
 10165  00018C  EFCB  F000         	goto	i2u499_40
 10166  000190                     i2u499_41:
 10167  000190  FFFF               	dw	65535	; assembler added errata NOP
 10168  000192  EFD8  F000         	goto	i2l511
 10169  000196                     i2u499_40:
 10170  000196  FFFF               	dw	65535	; assembler added errata NOP
 10171  000198  A09E               	btfss	158,0,c	;volatile
 10172  00019A  EFD1  F000         	goto	i2u500_41
 10173  00019E  EFD4  F000         	goto	i2u500_40
 10174  0001A2                     i2u500_41:
 10175  0001A2  FFFF               	dw	65535	; assembler added errata NOP
 10176  0001A4  EFD8  F000         	goto	i2l511
 10177  0001A8                     i2u500_40:
 10178  0001A8  FFFF               	dw	65535	; assembler added errata NOP
 10179  0001AA                     
 10180                           ;main.c: 750:         {;main.c: 751:             LATCbits.LC2 = 0;
 10181  0001AA  948B               	bcf	139,2,c	;volatile
 10182                           
 10183                           ;main.c: 752:             T1CONbits.TMR1ON = 0;
 10184  0001AC  90CD               	bcf	205,0,c	;volatile
 10185                           
 10186                           ;main.c: 753:          PIR1bits.TMR1IF = 0;
 10187  0001AE  909E               	bcf	158,0,c	;volatile
 10188  0001B0                     i2l511:
 10189  0001B0  FFFF               	dw	65535	; assembler added errata NOP
 10190  0001B2  C007  FFDA         	movff	??_Rx_char_USART+4,fsr2h
 10191  0001B6  C006  FFD9         	movff	??_Rx_char_USART+3,fsr2l
 10192  0001BA  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10193  0001BC  0011               	retfie		f
 10194  0001BE  FFFF               	dw	65535	; errata NOP
 10195  0001C0                     __end_of_Rx_char_USART:
 10196                           	callstack 0
 10197                           
 10198 ;; *************** function _set_new_pos *****************
 10199 ;; Defined at:
 10200 ;;		line 513 in file "main.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;  nTMR1H          1    wreg     unsigned char 
 10203 ;;  nTMR1L          1    0[COMRAM] unsigned char 
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;  nTMR1H          1    1[COMRAM] unsigned char 
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  1    wreg      void 
 10208 ;; Registers used:
 10209 ;;		wreg
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10215 ;;      Params:         1       0       0       0       0       0       0
 10216 ;;      Locals:         1       0       0       0       0       0       0
 10217 ;;      Temps:          0       0       0       0       0       0       0
 10218 ;;      Totals:         2       0       0       0       0       0       0
 10219 ;;Total ram usage:        2 bytes
 10220 ;; Hardware stack levels used: 1
 10221 ;; This function calls:
 10222 ;;		Nothing
 10223 ;; This function is called by:
 10224 ;;		_Rx_char_USART
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text40
 10229  003518                     __ptext40:
 10230                           	callstack 0
 10231  003518                     _set_new_pos:
 10232                           	callstack 0
 10233  003518  FFFF               	dw	65535	; assembler added errata NOP
 10234                           
 10235                           ;incstack = 0
 10236                           ;set_new_pos@nTMR1H stored from wreg
 10237  00351A  6E02               	movwf	set_new_pos@nTMR1H^0,c
 10238  00351C                     
 10239                           ;main.c: 513: void set_new_pos(uint8_t nTMR1H, uint8_t nTMR1L);main.c: 514: {;main.c: 51
      +                          5:     TMR1H = nTMR1H;
 10240  00351C  C002  FFCF         	movff	set_new_pos@nTMR1H,4047	;volatile
 10241  003520                     
 10242                           ;main.c: 516:     TMR1L = nTMR1L;
 10243  003520  C001  FFCE         	movff	set_new_pos@nTMR1L,4046	;volatile
 10244  003524                     
 10245                           ;main.c: 536:     LATCbits.LC2 = 1;
 10246  003524  848B               	bsf	139,2,c	;volatile
 10247  003526                     
 10248                           ;main.c: 537:  T1CONbits.TMR1ON = 1;
 10249  003526  80CD               	bsf	205,0,c	;volatile
 10250  003528  0012               	return		;funcret
 10251  00352A  FFFF               	dw	65535	; errata NOP
 10252  00352C                     __end_of_set_new_pos:
 10253                           	callstack 0
 10254                           
 10255                           	psect	rparam
 10256  0000                     
 10257                           	psect	temp
 10258  000076                     btemp:
 10259                           	callstack 0
 10260  000076                     	ds	1
 10261  0000                     int$flags	set	btemp
 10262  0000                     wtemp8	set	btemp+1
 10263  0000                     ttemp5	set	btemp+1
 10264  0000                     ttemp6	set	btemp+4
 10265  0000                     ttemp7	set	btemp+8
 10266                           
 10267                           	psect	idloc
 10268                           
 10269                           ;Config register IDLOC0 @ 0x200000
 10270                           ;	unspecified, using default values
 10271  200000                     	org	2097152
 10272  200000  FF                 	db	255
 10273                           
 10274                           ;Config register IDLOC1 @ 0x200001
 10275                           ;	unspecified, using default values
 10276  200001                     	org	2097153
 10277  200001  FF                 	db	255
 10278                           
 10279                           ;Config register IDLOC2 @ 0x200002
 10280                           ;	unspecified, using default values
 10281  200002                     	org	2097154
 10282  200002  FF                 	db	255
 10283                           
 10284                           ;Config register IDLOC3 @ 0x200003
 10285                           ;	unspecified, using default values
 10286  200003                     	org	2097155
 10287  200003  FF                 	db	255
 10288                           
 10289                           ;Config register IDLOC4 @ 0x200004
 10290                           ;	unspecified, using default values
 10291  200004                     	org	2097156
 10292  200004  FF                 	db	255
 10293                           
 10294                           ;Config register IDLOC5 @ 0x200005
 10295                           ;	unspecified, using default values
 10296  200005                     	org	2097157
 10297  200005  FF                 	db	255
 10298                           
 10299                           ;Config register IDLOC6 @ 0x200006
 10300                           ;	unspecified, using default values
 10301  200006                     	org	2097158
 10302  200006  FF                 	db	255
 10303                           
 10304                           ;Config register IDLOC7 @ 0x200007
 10305                           ;	unspecified, using default values
 10306  200007                     	org	2097159
 10307  200007  FF                 	db	255
 10308                           
 10309                           	psect	config
 10310                           
 10311                           ; Padding undefined space
 10312  300000                     	org	3145728
 10313  300000  FF                 	db	255
 10314                           
 10315                           ;Config register CONFIG1H @ 0x300001
 10316                           ;	Oscillator Selection bits
 10317                           ;	OSC = XT, XT oscillator
 10318                           ;	Oscillator System Clock Switch Enable bit
 10319                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 10320  300001                     	org	3145729
 10321  300001  21                 	db	33
 10322                           
 10323                           ;Config register CONFIG2L @ 0x300002
 10324                           ;	Power-up Timer Enable bit
 10325                           ;	PWRT = OFF, PWRT disabled
 10326                           ;	Brown-out Reset Enable bit
 10327                           ;	BOR = OFF, Brown-out Reset disabled
 10328                           ;	Brown-out Reset Voltage bits
 10329                           ;	BORV = 20, VBOR set to 2.0V
 10330  300002                     	org	3145730
 10331  300002  0D                 	db	13
 10332                           
 10333                           ;Config register CONFIG2H @ 0x300003
 10334                           ;	Watchdog Timer Enable bit
 10335                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10336                           ;	Watchdog Timer Postscale Select bits
 10337                           ;	WDTPS = 128, 1:128
 10338  300003                     	org	3145731
 10339  300003  0E                 	db	14
 10340                           
 10341                           ; Padding undefined space
 10342  300004                     	org	3145732
 10343  300004  FF                 	db	255
 10344                           
 10345                           ;Config register CONFIG3H @ 0x300005
 10346                           ;	CCP2 Mux bit
 10347                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
 10348  300005                     	org	3145733
 10349  300005  00                 	db	0
 10350                           
 10351                           ;Config register CONFIG4L @ 0x300006
 10352                           ;	Stack Full/Underflow Reset Enable bit
 10353                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
 10354                           ;	Low Voltage ICSP Enable bit
 10355                           ;	LVP = OFF, Low Voltage ICSP disabled
 10356                           ;	Background Debugger Enable bit
 10357                           ;	DEBUG = 0x1, unprogrammed default
 10358  300006                     	org	3145734
 10359  300006  80                 	db	128
 10360                           
 10361                           ; Padding undefined space
 10362  300007                     	org	3145735
 10363  300007  FF                 	db	255
 10364                           
 10365                           ;Config register CONFIG5L @ 0x300008
 10366                           ;	Code Protection bit
 10367                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 10368                           ;	Code Protection bit
 10369                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 10370                           ;	Code Protection bit
 10371                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 10372                           ;	Code Protection bit
 10373                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 10374  300008                     	org	3145736
 10375  300008  0F                 	db	15
 10376                           
 10377                           ;Config register CONFIG5H @ 0x300009
 10378                           ;	Boot Block Code Protection bit
 10379                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 10380                           ;	Data EEPROM Code Protection bit
 10381                           ;	CPD = OFF, Data EEPROM not code protected
 10382  300009                     	org	3145737
 10383  300009  C0                 	db	192
 10384                           
 10385                           ;Config register CONFIG6L @ 0x30000A
 10386                           ;	Write Protection bit
 10387                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 10388                           ;	Write Protection bit
 10389                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 10390                           ;	Write Protection bit
 10391                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 10392                           ;	Write Protection bit
 10393                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 10394  30000A                     	org	3145738
 10395  30000A  0F                 	db	15
 10396                           
 10397                           ;Config register CONFIG6H @ 0x30000B
 10398                           ;	Configuration Register Write Protection bit
 10399                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 10400                           ;	Boot Block Write Protection bit
 10401                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 10402                           ;	Data EEPROM Write Protection bit
 10403                           ;	WRTD = OFF, Data EEPROM not write protected
 10404  30000B                     	org	3145739
 10405  30000B  E0                 	db	224
 10406                           
 10407                           ;Config register CONFIG7L @ 0x30000C
 10408                           ;	Table Read Protection bit
 10409                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 10410                           ;	Table Read Protection bit
 10411                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 10412                           ;	Table Read Protection bit
 10413                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 10414                           ;	Table Read Protection bit
 10415                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 10416  30000C                     	org	3145740
 10417  30000C  0F                 	db	15
 10418                           
 10419                           ;Config register CONFIG7H @ 0x30000D
 10420                           ;	Boot Block Table Read Protection bit
 10421                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 10422  30000D                     	org	3145741
 10423  30000D  40                 	db	64
 10424                           tosu	equ	0xFFF
 10425                           tosh	equ	0xFFE
 10426                           tosl	equ	0xFFD
 10427                           stkptr	equ	0xFFC
 10428                           pclatu	equ	0xFFB
 10429                           pclath	equ	0xFFA
 10430                           pcl	equ	0xFF9
 10431                           tblptru	equ	0xFF8
 10432                           tblptrh	equ	0xFF7
 10433                           tblptrl	equ	0xFF6
 10434                           tablat	equ	0xFF5
 10435                           prodh	equ	0xFF4
 10436                           prodl	equ	0xFF3
 10437                           indf0	equ	0xFEF
 10438                           postinc0	equ	0xFEE
 10439                           postdec0	equ	0xFED
 10440                           preinc0	equ	0xFEC
 10441                           plusw0	equ	0xFEB
 10442                           fsr0h	equ	0xFEA
 10443                           fsr0l	equ	0xFE9
 10444                           wreg	equ	0xFE8
 10445                           indf1	equ	0xFE7
 10446                           postinc1	equ	0xFE6
 10447                           postdec1	equ	0xFE5
 10448                           preinc1	equ	0xFE4
 10449                           plusw1	equ	0xFE3
 10450                           fsr1h	equ	0xFE2
 10451                           fsr1l	equ	0xFE1
 10452                           bsr	equ	0xFE0
 10453                           indf2	equ	0xFDF
 10454                           postinc2	equ	0xFDE
 10455                           postdec2	equ	0xFDD
 10456                           preinc2	equ	0xFDC
 10457                           plusw2	equ	0xFDB
 10458                           fsr2h	equ	0xFDA
 10459                           fsr2l	equ	0xFD9
 10460                           status	equ	0xFD8

Data Sizes:
    Strings     687
    Constant    20
    Data        31
    BSS         88
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     90     117
    BANK0           128     33     126
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strncat@s	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    strncat@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strncat@a	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> input_str(BANK0[10]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 82
		 -> STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[10]), STR_18(CODE[11]), 
		 -> STR_17(CODE[70]), STR_16(CODE[19]), STR_15(CODE[63]), STR_14(CODE[20]), 
		 -> STR_13(CODE[30]), STR_12(CODE[29]), STR_11(CODE[29]), STR_10(CODE[29]), 
		 -> STR_9(CODE[28]), STR_8(CODE[28]), STR_7(CODE[52]), STR_6(CODE[26]), 
		 -> add_component@add_componnt(COMRAM[2]), STR_5(CODE[40]), STR_4(CODE[27]), STR_3(CODE[32]), 
		 -> sequence(BANK0[4]), STR_2(CODE[20]), STR_1(CODE[82]), 


Critical Paths under _main in COMRAM

    _start_up_menu->_pick_and_place
    _return_to_initial->_Z_axis
    _remove_component->_strrchr
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _pick_and_place->___flge
    _check_component->_print_string
    ___fldiv->___xxtofl
    _Z_axis->_ms_delay
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _change_sequence->_print_string
    _add_component->_atoi
    _strncat->_strlen
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    _Rx_char_USART->_set_new_pos

Critical Paths under _main in BANK0

    _start_up_menu->_pick_and_place
    _init_USART->___fltol

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   65325
                         _init_PORTS
                        _init_Timers
                         _init_USART
                    _init_interrupts
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                        4     4      0   54092
                                             62 COMRAM     4     4      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
                  _return_to_initial
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _return_to_initial                                    9     9      0   14620
                                             18 COMRAM     9     9      0
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
 ---------------------------------------------------------------------------------
 (2) _remove_component                                     5     5      0    4700
                                             27 COMRAM     5     5      0
                            _memmove
                       _print_string
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4    1018
                                             23 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     406
                                             13 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     592
                                             13 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _pick_and_place                                      35    35      0   24449
                                             60 COMRAM     2     2      0
                                              0 BANK0     33    33      0
                            _Tweezer
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
                            ___fldiv
                             ___flge
                           ___xxtofl
                    _check_component
                   _fetch_parameters
                         _print_char
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _fetch_parameters                                     1     1      0     124
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_component                                      5     5      0    2569
                                             15 COMRAM     5     5      0
                         _print_char
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _print_char                                           1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2183
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Z_axis                                               3     3      0    3618
                                             15 COMRAM     3     3      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Y_axis                                               1     1      0    3618
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _X_axis                                               1     1      0    3618
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Twister                                              1     1      0    3618
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _ms_delay                                             6     4      2    3556
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _Tweezer                                              1     1      0      62
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                      5     5      0    2566
                                             15 COMRAM     5     5      0
                       _print_string
 ---------------------------------------------------------------------------------
 (2) _add_component                                        2     2      0    4825
                                             31 COMRAM     2     2      0
                               _atoi
                       _print_string
                            _strncat
 ---------------------------------------------------------------------------------
 (3) _strncat                                              8     2      6     788
                                             13 COMRAM     6     0      6
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     394
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2    2470
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    1456
                                             16 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     207
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     161
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11233
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10806
                                             60 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              9 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              9 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                             48 COMRAM    12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             86 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Rx_char_USART                                        7     7      0     165
                                              2 COMRAM     7     7      0
                        _set_new_pos
 ---------------------------------------------------------------------------------
 (6) _set_new_pos                                          2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_Timers
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _print_string
       _strncat
         _strlen
     _change_sequence
       _print_string
     _pick_and_place
       _Tweezer
       _Twister
         _ms_delay
       _X_axis
         _ms_delay
       _Y_axis
         _ms_delay
       _Z_axis
         _ms_delay
       ___fldiv
       ___flge
       ___xxtofl
       _check_component
         _print_char
         _print_string
       _fetch_parameters
       _print_char
       _print_string
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _print_string
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen
     _return_to_initial
       _Twister
       _X_axis
       _Y_axis
       _Z_axis
     _strlen

 _Rx_char_USART (ROOT)
   _set_new_pos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      7E       5       98.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5A      75       1       92.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3      15        0.0%
DATA                 0      0      F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 28 23:42:33 2021

                                                     ___fldiv@aexp 0030  
                                                     ___fldiv@bexp 002F  
                                                     ___fldiv@sign 0028  
                                                               l50 348E  
                                                               l53 34F6  
                                                               l47 34B6  
                                                               l72 33D4  
                                                               l81 2F5C  
                                                               l84 34C2  
                                                               l77 2F00  
                                                               l87 34D6  
                                              ___wmul@multiplicand 000C  
                                           __size_of_start_up_menu 0164  
                                                              l331 29EC  
                                                              l317 1DDA  
                                                              l341 2AF4  
                                                              l351 2DE2  
                                                              l336 2BFE  
                                                              l408 039C  
                                                              l273 22F2  
                                                              l514 3464  
                                                              l282 2FF4  
                                                              l346 28E0  
                                                              l357 3136  
                                                              l373 242A  
                                                              l437 06BC  
                                                              l446 0768  
                                                              l359 3170  
                                                              l367 322C  
                                                              l384 2EA6  
                                                              l472 25B6  
                                                              l377 242A  
                                                              l466 095C  
                                                              l811 2562  
                                                              l467 0976  
                                                              l475 25FA  
                                                              l388 2EBA  
                                                              l484 2694  
                                                              l478 263E  
                                                              l399 02F0  
                                                              l784 27BC  
                                                              l779 276E  
                                                              l788 3394  
                                                ??_init_interrupts 000A  
                                                              wreg 000FE8  
                                                     ___flmul@aexp 001B  
                                                     ___flmul@bexp 001C  
                                                     ___flmul@sign 0016  
                                                     ___flmul@temp 0021  
                                                     ___flmul@prod 001D  
                                                     ___fltol@exp1 00C4  
                                                             l1101 15C4  
                                                             l1110 16D8  
                                                             l1042 0BC2  
                                                             l1051 0F1C  
                                                             l1043 0BAC  
                                                             l1107 1660  
                                                             l1132 13C0  
                                                             l1044 0B62  
                                                             l1213 2184  
                                                             l1109 16F0  
                                                             l1135 121A  
                                                             l1128 100E  
                                                             l1216 218E  
                                                             l1240 2CF8  
                                                             l1145 1378  
                                                             l1137 12AA  
                                                             l3001 0C9A  
                                                             l1138 1292  
                                                             l3011 0D22  
                                                             l1059 0D06  
                                                             l3003 0CCE  
                                                             l1219 3352  
                                                             l1227 31D0  
                                                             l1068 0E0A  
                                                             l1084 32CE  
                                                             l1172 1FD0  
                                                             l1069 0DF2  
                                                             l3021 0D68  
                                                             l3013 0D36  
                                                             l3005 0CD0  
                                                             l1261 3310  
                                                             l3031 0DA2  
                                                             l3023 0D6A  
                                                             l3007 0CE4  
                                                             l3111 1FEC  
                                                             l1271 307A  
                                                             l1183 1F56  
                                                             l3103 30D2  
                                                             l1248 1BD8  
                                                             l1096 17F2  
                                                             l1176 1EEA  
                                                             l3041 0DE8  
                                                             l3025 0D7E  
                                                             l3017 0D4A  
                                                             l3033 0DA4  
                                                             l3009 0CF4  
                                                             l3121 2052  
                                                             l3113 1FF2  
                                                             l1169 1E3E  
                                                             l3105 30F2  
                                                             l1098 160A  
                                                             l3051 0E7C  
                                                             l3027 0D86  
                                                             l3019 0D56  
                                                             l3035 0DB6  
                                                             l3131 2088  
                                                             l3115 1FF8  
                                                             l1284 30FA  
                                                             l3061 0ED0  
                                                             l3045 0E20  
                                                             l3053 0E7E  
                                                             l3037 0DBC  
                                                             l3029 0D8C  
                                                             l3141 213C  
                                                             l3133 20BE  
                                                             l3125 205A  
                                                             l3117 2016  
                                                             l3109 1FD8  
                                                             l1278 340E  
                                                             l3071 0F08  
                                                             l3063 0EE4  
                                                             l3055 0E94  
                                                             l3047 0E2C  
                                                             l3039 0DCE  
                                                             l3143 2152  
                                                             l3127 2074  
                                                             l3119 204E  
                                                             l3151 2FFA  
                                                             l3073 0F0A  
                                                             l3065 0EEA  
                                                             l3057 0EA6  
                                                             l3049 0E3E  
                                                             l3081 3192  
                                                             l3145 2168  
                                                             l3137 20F8  
                                                             l3129 207E  
                                                             l3161 3032  
                                                             l3153 2FFA  
                                                             l5001 070E  
                                                             l2611 3494  
                                                             l3067 0EEE  
                                                             l3059 0ECC  
                                                             l3083 31C4  
                                                             l3155 3012  
                                                             l3163 3036  
                                                             l5011 07AC  
                                                             l5003 073A  
                                                             l2613 34B0  
                                                             l2621 346A  
                                                             l3069 0EF6  
                                                             l3085 31C8  
                                                             l3077 3174  
                                                             l3165 304E  
                                                             l3157 301A  
                                                             l5101 1D24  
                                                             l5021 0814  
                                                             l5013 07B4  
                                                             l5005 075A  
                                                             l3181 2C56  
                                                             l3093 3080  
                                                             l3173 33DA  
                                                             l2615 34B2  
                                                             l2631 3480  
                                                             l2623 3472  
                                                             l3079 317A  
                                                             l3167 3068  
                                                             l3159 302E  
                                                             l5111 1D62  
                                                             l5103 1D28  
                                                             l5031 08D0  
                                                             l5023 08A0  
                                                             l5015 07BA  
                                                             l5007 078C  
                                                             l3191 2CD6  
                                                             l3183 2C66  
                                                             l3095 3088  
                                                             l2617 34B4  
                                                             l2633 3482  
                                                             l2625 347A  
                                                             l5201 2516  
                                                             l3601 1086  
                                                             l2641 34E6  
                                                             l3089 3314  
                                                             l3169 3076  
                                                             l5113 1D6E  
                                                             l5105 1D34  
                                                             l4401 2B2A  
                                                             l5041 0922  
                                                             l5033 08F2  
                                                             l5025 08B2  
                                                             l5017 07E6  
                                                             l5009 079E  
                                                             l3193 2CDA  
                                                             l3185 2C88  
                                                             l3177 2C06  
                                                             l3097 3092  
                                                             l2635 3484  
                                                             l2627 347C  
                                                             l5203 252A  
                                                             l3611 10D0  
                                                             l3603 109E  
                                                             l5211 339A  
                                                             l2643 34EE  
                                                             l5131 1DD6  
                                                             l5123 1D9E  
                                                             l5115 1D84  
                                                             l5107 1D4A  
                                                             l5051 2F8E  
                                                             l4411 2B66  
                                                             l4403 2B36  
                                                             l5043 0928  
                                                             l5035 0904  
                                                             l5027 08C2  
                                                             l5019 0806  
                                                             l3195 2CDE  
                                                             l3179 2C30  
                                                             l3187 2CA8  
                                                             l3099 30C2  
                                                             l2629 347E  
                                                             l5205 2540  
                                                             l3621 1126  
                                                             l3613 10E0  
                                                             l3605 10AA  
                                                             l2901 0A1C  
                                                             l5221 33CE  
                                                             l5213 33C6  
                                                             l2645 34F0  
                                                             l5125 1DA2  
                                                             l5109 1D5E  
                                                             l5117 1D98  
                                                             l5061 1BE8  
                                                             l5053 2FA4  
                                                             l4421 2BAC  
                                                             l4413 2B76  
                                                             l4405 2B46  
                                                             l4501 288A  
                                                             l5045 094A  
                                                             l5037 090C  
                                                             l5029 08CA  
                                                             l3189 2CC0  
                                                             l5141 291E  
                                                             l5133 28E8  
                                                             l5207 2550  
                                                             l3631 11CE  
                                                             l3623 1142  
                                                             l3615 10EC  
                                                             l3607 10B6  
                                                             l3711 3358  
                                                             l2911 0A6A  
                                                             l2903 0A2E  
                                                             l5223 33D0  
                                                             l5215 33C8  
                                                             l2647 34F2  
                                                             l2639 34DC  
                                                             l5127 1DBE  
                                                             l5071 1C40  
                                                             l5063 1C0C  
                                                             l5055 2FC2  
                                                             l5047 2F62  
                                                             l4431 2BE8  
                                                             l4423 2BB8  
                                                             l4407 2B4A  
                                                             l4415 2B7E  
                                                             l4511 28BE  
                                                             l4503 288E  
                                                             l5039 091A  
                                                             l5151 296A  
                                                             l5143 2938  
                                                             l5135 2900  
                                                             l5231 21B8  
                                                             l3641 122C  
                                                             l3633 11DC  
                                                             l3625 114E  
                                                             l3617 10FC  
                                                             l3609 10C4  
                                                             l3561 0F5A  
                                                             l3553 0F24  
                                                             l3713 3372  
                                                             l2921 0AB2  
                                                             l2913 0A6E  
                                                             l2905 0A30  
                                                             l5225 33D2  
                                                             l5217 33CA  
                                                             l2649 34F4  
                                                             l5129 1DCA  
                                                             l5081 1C86  
                                                             l5073 1C4C  
                                                             l5065 1C22  
                                                             l5057 2FF0  
                                                             l5049 2F86  
                                                             l4521 2D2A  
                                                             l4433 2BF8  
                                                             l4425 2BC8  
                                                             l4417 2B94  
                                                             l4409 2B5A  
                                                             l4441 2A20  
                                                             l4513 28CA  
                                                             l4505 289A  
                                                             l5153 2976  
                                                             l5161 29BE  
                                                             l5137 2916  
                                                             l5241 21FA  
                                                             l5233 21C0  
                                                             l3643 1240  
                                                             l3635 11FA  
                                                             l3627 116A  
                                                             l3619 1116  
                                                             l3571 0FA0  
                                                             l3563 0F6E  
                                                             l3555 0F30  
                                                             l3715 3382  
                                                             l2931 0AC8  
                                                             l2923 0AB6  
                                                             l2907 0A46  
                                                             l2915 0A76  
                                                             l5219 33CC  
                                                             l4371 2ECE  
                                                             l2843 32D4  
                                                             l5091 1CD6  
                                                             l5083 1C9C  
                                                             l5075 1C62  
                                                             l5067 1C26  
                                                             l5059 1BE0  
                                                             l4531 2D5E  
                                                             l4523 2D2E  
                                                             l4427 2BCC  
                                                             l4419 2BA8  
                                                             l4451 2A5C  
                                                             l4443 2A2C  
                                                             l4435 29F4  
                                                             l4515 28DA  
                                                             l4507 28AA  
                                                             l4611 2EA6  
                                                             l5163 29CC  
                                                             l5155 29AA  
                                                             l5139 291A  
                                                             l5251 2254  
                                                             l5243 2206  
                                                             l5235 21E6  
                                                             l5227 2196  
                                                             l5181 24AA  
                                                             l5173 2464  
                                                             l3653 12C0  
                                                             l3661 130C  
                                                             l3645 1244  
                                                             l3637 1206  
                                                             l3629 1194  
                                                             l3581 0FE4  
                                                             l3573 0FA6  
                                                             l3565 0F7E  
                                                             l3557 0F42  
                                                             l2941 0ADC  
                                                             l2933 0ACC  
                                                             l2925 0ABC  
                                                             l2917 0A88  
                                                             l2909 0A5A  
                                                             l4373 2F14  
                                                             l2845 32E0  
                                                             l5093 1CEA  
                                                             l5085 1CB0  
                                                             l5077 1C76  
                                                             l5069 1C3C  
                                                             l4381 31E2  
                                                             l4541 2DA0  
                                                             l4533 2D6A  
                                                             l4525 2D3A  
                                                             l4517 2D02  
                                                             l4429 2BDC  
                                                             l4461 2AA2  
                                                             l4453 2A6C  
                                                             l4445 2A3C  
                                                             l4437 2A08  
                                                             l4509 28AE  
                                                             l4701 1640  
                                                             l4621 13FE  
                                                             l4613 13C8  
                                                             l4605 2E70  
                                                             l5157 29B6  
                                                             l5165 29E6  
                                                             l5149 2952  
                                                             l5261 229E  
                                                             l5245 2214  
                                                             l5253 2266  
                                                             l5237 21EA  
                                                             l5229 21A2  
                                                             l5191 24E4  
                                                             l5183 24BC  
                                                             l5175 2494  
                                                             l5167 2432  
                                                             l3671 138E  
                                                             l3663 132C  
                                                             l3655 12CC  
                                                             l3647 1256  
                                                             l3639 1218  
                                                             l3583 0FF4  
                                                             l3575 0FB8  
                                                             l3567 0F86  
                                                             l3559 0F44  
                                                             l2951 0AF0  
                                                             l2943 0AE0  
                                                             l2935 0AD0  
                                                             l2927 0AC0  
                                                             l2919 0AA0  
                                                             l2871 345C  
                                                             l4375 2F18  
                                                             l2847 32E6  
                                                             l5095 1CEE  
                                                             l5087 1CB4  
                                                             l5079 1C7A  
                                                             l4391 320C  
                                                             l4383 31E8  
                                                             l4551 2DDC  
                                                             l4543 2DAC  
                                                             l4527 2D4A  
                                                             l4519 2D16  
                                                             l4535 2D72  
                                                             l4471 2ADE  
                                                             l4463 2AAE  
                                                             l4447 2A40  
                                                             l4439 2A1C  
                                                             l4455 2A74  
                                                             l4711 168A  
                                                             l4703 164C  
                                                             l4631 1440  
                                                             l4623 1412  
                                                             l4615 13D4  
                                                             l4607 2E86  
                                                             l5255 2280  
                                                             l5247 2228  
                                                             l5239 21F2  
                                                             l5271 3412  
                                                             l5193 24EE  
                                                             l5177 2496  
                                                             l5169 244E  
                                                             l3673 13A0  
                                                             l3665 1340  
                                                             l3657 12DE  
                                                             l3649 1288  
                                                             l3593 104C  
                                                             l3585 0FFC  
                                                             l3577 0FBA  
                                                             l3569 0F98  
                                                             l2961 0B5A  
                                                             l2945 0AE4  
                                                             l2937 0AD4  
                                                             l2929 0AC4  
                                                             l2953 0AF4  
                                                             l2881 099C  
                                                             l4369 2EC2  
                                                             l2849 3304  
                                                             l5097 1CFA  
                                                             l5089 1CC0  
                                                             l4561 3160  
                                                             l4553 3104  
                                                             l4393 3212  
                                                             l4385 3204  
                                                             l4545 2DBC  
                                                             l4537 2D88  
                                                             l4529 2D4E  
                                                             l4473 2AEE  
                                                             l4465 2ABE  
                                                             l4457 2A8A  
                                                             l4449 2A50  
                                                             l4481 2808  
                                                             l4721 1712  
                                                             l4713 169C  
                                                             l4705 165E  
                                                             l4641 1478  
                                                             l4633 1448  
                                                             l4625 1422  
                                                             l4617 13E6  
                                                             l4801 1F44  
                                                             l4377 34BE  
                                                             l4609 2E9E  
                                                             l5257 228A  
                                                             l5249 222C  
                                                             l5265 22AC  
                                                             l5281 3426  
                                                             l5273 3418  
                                                             l5179 24A6  
                                                             l3675 13A2  
                                                             l3667 1360  
                                                             l3659 1308  
                                                             l3595 105A  
                                                             l3587 1024  
                                                             l3579 0FD0  
                                                             l2971 0B9E  
                                                             l2963 0B76  
                                                             l2955 0AFA  
                                                             l2947 0AE8  
                                                             l2939 0AD8  
                                                             l2883 09B2  
                                                             l2891 09E2  
                                                             l2875 097C  
                                                             l3683 328A  
                                                             l5099 1D10  
                                                             l4563 316A  
                                                             l4555 3118  
                                                             l4379 31D6  
                                                             l4547 2DC0  
                                                             l4539 2D9C  
                                                             l4395 2AFE  
                                                             l4467 2AC2  
                                                             l4459 2A9E  
                                                             l4491 283C  
                                                             l4483 280C  
                                                             l4475 27C6  
                                                             l4731 1788  
                                                             l4723 1724  
                                                             l4715 16CE  
                                                             l4707 1672  
                                                             l4651 14BA  
                                                             l4643 148C  
                                                             l4635 144E  
                                                             l4627 1426  
                                                             l4619 13E8  
                                                             l4811 1FAA  
                                                             l4803 1F6A  
                                                             l4571 2346  
                                                             l5355 22C2  
                                                             l5259 2294  
                                                             l5283 3428  
                                                             l5275 341C  
                                                             l5189 24D8  
                                                             l3669 137E  
                                                             l3677 13AA  
                                                             l3597 1064  
                                                             l3589 1036  
                                                             l2981 0BFE  
                                                             l2973 0BAA  
                                                             l2965 0B82  
                                                             l2957 0B28  
                                                             l2949 0AEC  
                                                             l2893 09F4  
                                                             l2885 09C6  
                                                             l2877 0988  
                                                             l3685 329A  
                                                             l4821 181A  
                                                             l2869 3440  
                                                             l5357 20A6  
                                                             l4565 316E  
                                                             l4557 312C  
                                                             l4549 2DD0  
                                                             l4397 2B12  
                                                             l4469 2AD2  
                                                             l4493 2848  
                                                             l4485 2818  
                                                             l4477 27E0  
                                                             l4741 17E2  
                                                             l4733 17A8  
                                                             l4725 174E  
                                                             l4709 1686  
                                                             l4653 14D6  
                                                             l4645 149C  
                                                             l4637 1460  
                                                             l4629 142E  
                                                             l4813 1FBC  
                                                             l4805 1F6C  
                                                             l4581 23F6  
                                                             l4573 235E  
                                                             l4901 0250  
                                                             l5285 342A  
                                                             l5277 3420  
                                                             l5199 2508  
                                                             l4751 269C  
                                                             l3679 13B0  
                                                             l3599 107A  
                                                             l2991 0C46  
                                                             l2983 0C10  
                                                             l2975 0BD6  
                                                             l2967 0B88  
                                                             l2959 0B4A  
                                                             l2895 09FC  
                                                             l2887 09D6  
                                                             l2879 099A  
                                                             l4831 190A  
                                                             l4823 186A  
                                                             l4559 314C  
                                                             l4399 2B26  
                                                             l4495 2858  
                                                             l4487 2828  
                                                             l4479 27F4  
                                                             l4743 17E6  
                                                             l4735 17C4  
                                                             l4719 1706  
                                                             l4727 1752  
                                                             l4671 1532  
                                                             l4655 14E6  
                                                             l4663 1508  
                                                             l4647 14A0  
                                                             l4639 1462  
                                                             l4815 1FBE  
                                                             l4807 1F72  
                                                             l4591 2E18  
                                                             l4583 2DEC  
                                                             l4575 2392  
                                                             l4567 22FC  
                                                             l4911 02C2  
                                                             l4903 027A  
                                                             l5287 342C  
                                                             l5279 3424  
                                                             l4761 2736  
                                                             l4753 26CE  
                                                             l2993 0C5A  
                                                             l2985 0C22  
                                                             l2977 0BEA  
                                                             l2969 0B9C  
                                                             l2897 0A12  
                                                             l2889 09DA  
                                                             l4841 1ABA  
                                                             l4825 187E  
                                                             l4489 282C  
                                                             l4497 2860  
                                                             l4737 17CA  
                                                             l4729 1772  
                                                             l4681 1586  
                                                             l4673 154E  
                                                             l4665 151E  
                                                             l4657 14EE  
                                                             l4649 14A8  
                                                             l4809 1F96  
                                                             l4593 2E3A  
                                                             l4585 2DF8  
                                                             l4577 23AA  
                                                             l4569 2312  
                                                             l4921 033C  
                                                             l4913 02E2  
                                                             l4905 0288  
                                                             l5289 3432  
                                                             l4763 2748  
                                                             l4755 26DE  
                                                             l2995 0C5C  
                                                             l2987 0C34  
                                                             l2899 0A14  
                                                             l4843 1B26  
                                                             l4835 1942  
                                                             l4827 18C4  
                                                             l4819 17FA  
                                                             l4499 2876  
                                                             l4739 17DC  
                                                             l4691 15F4  
                                                             l4683 159C  
                                                             l4675 155E  
                                                             l4667 151E  
                                                             l4659 14F4  
                                                             l4595 2E4E  
                                                             l4587 2E0E  
                                                             l4579 23DE  
                                                             l4931 03D2  
                                                             l4923 0342  
                                                             l4915 0314  
                                                             l4907 0290  
                                                             l4765 275C  
                                                             l4757 2712  
                                                             l2997 0C68  
                                                             l2989 0C40  
                                                             l4845 1B5C  
                                                             l4837 1A16  
                                                             l4829 18E8  
                                                             l4693 15F6  
                                                             l4685 15B0  
                                                             l4677 156E  
                                                             l4781 1E6C  
                                                             l4773 1DE2  
                                                             l4597 2E5A  
                                                             l4941 043A  
                                                             l4933 03E0  
                                                             l4925 036E  
                                                             l4917 0326  
                                                             l4909 0296  
                                                             l4861 2592  
                                                             l4853 256A  
                                                             l4767 27B2  
                                                             l4759 2722  
                                                             l2999 0C6E  
                                                             l4847 1BA2  
                                                             l4839 1A82  
                                                             l4695 1606  
                                                             l4687 15C2  
                                                             l4679 157E  
                                                             l4791 1ED0  
                                                             l4775 1DF6  
                                                             l4599 2E60  
                                                             l4951 04FC  
                                                             l4943 0448  
                                                             l4935 03E8  
                                                             l4927 038E  
                                                             l4919 0334  
                                                             l4871 2602  
                                                             l4863 25BE  
                                                             l4855 2572  
                                                             l4769 27B8  
                                                             l4849 1BC6  
                                                             l4697 1620  
                                                             l4689 15D0  
                                                             l4793 1ED4  
                                                             l4785 1E80  
                                                             l4777 1E08  
                                                             l4961 0546  
                                                             l4953 0504  
                                                             l4945 04D4  
                                                             l4937 03EE  
                                                             l4929 03C0  
                                                             l4881 2652  
                                                             l4873 260E  
                                                             l4865 25CA  
                                                             l4857 2586  
                                                             l4699 163A  
                                                             l4795 1EE0  
                                                             l4787 1E8A  
                                                             l4779 1E50  
                                                             l4971 058A  
                                                             l4963 054C  
                                                             l4955 050A  
                                                             l4947 04E6  
                                                             l4939 041A  
                                                             l4891 01D2  
                                                             l4883 265A  
                                                             l4875 2616  
                                                             l4867 25D2  
                                                             l4859 258E  
                                                             l4797 1F22  
                                                             l4789 1E98  
                                                             l4981 0644  
                                                             l4973 059C  
                                                             l4965 055A  
                                                             l4957 052C  
                                                             l4949 04EE  
                                                             l4893 01E6  
                                                             l4885 265E  
                                                             l4877 261A  
                                                             l4869 25D6  
                                                             l4799 1F30  
                                                             l4991 06AE  
                                                             l4983 0654  
                                                             l4975 061C  
                                                             l4967 0562  
                                                             l4959 053E  
                                                             l4895 01F2  
                                                             l4887 2682  
                                                             l4879 2646  
                                                             l4993 06E0  
                                                             l4985 065C  
                                                             l4977 0630  
                                                             l4969 0568  
                                                             l4897 01FA  
                                                             l4889 01CA  
                                                             l4995 06F2  
                                                             l4987 0662  
                                                             l4979 063C  
                                                             l4899 0226  
                                                             l4997 0700  
                                                             l4989 068E  
                                                             l4999 0708  
                                                             STR_1 7D4F  
                                                             STR_2 7F98  
                                                             STR_3 7E82  
                                                             STR_4 7F4F  
                                                             STR_5 7E5A  
                                                             STR_6 7F6A  
                                                             STR_7 7E26  
                                                             STR_8 7F17  
                                                             STR_9 7F33  
                                                             u3000 3348  
                                                             u3001 3340  
                                                             u3010 334C  
                                                             u3100 2166  
                                                             u3020 30C0  
                                                             u3101 2160  
                                                             u3021 30BA  
                                                             u3110 304C  
                                                             u3030 30F0  
                                                             u3111 3046  
                                                             u3031 30EA  
                                                             _LATC 000F8B  
                                                             u3040 2014  
                                                             u3120 3068  
                                                             u3041 200E  
                                                             u3121 3062  
                                                             u3050 204C  
                                                             u3130 2C2E  
                                                             u3051 2046  
                                                             u3131 2C28  
                                                             u3060 206E  
                                                             u3140 2C54  
                                                             u3061 2068  
                                                             u3141 2C4E  
                                                             u3070 2132  
                                                             u3150 2CA2  
                                                             u3071 212A  
                                                             u3151 2C9C  
                                                             u2600 09B0  
                                                             u3080 2136  
                                                             u3160 2CBE  
                                                             u2601 09AA  
                                                             u3161 2CB8  
                                                             u2610 09C4  
                                                             u3090 2150  
                                                             u5010 2EFE  
                                                             u3170 2CF8  
                                                             u2611 09BE  
                                                             u3091 214A  
                                                             u3171 2CF2  
                                                             u2700 0B46  
                                                             u2620 0A10  
                                                             u5020 2F12  
                                                             u5100 2B92  
                                                             u2621 0A0A  
                                                             u5021 2F0C  
                                                             u5101 2B8C  
                                                             u2710 0B74  
                                                             u2630 0A2C  
                                                             u5030 2F48  
                                                             u5110 2BA6  
                                                             u2711 0B6E  
                                                             u2631 0A26  
                                                             u5111 2BA0  
                                                             u2800 0CE2  
                                                             u2720 0B9A  
                                                             u2640 0A44  
                                                             u5040 2F5A  
                                                             u2560 3302  
                                                             u5200 2D14  
                                                             u5120 2A06  
                                                             u6000 03BE  
                                                             u2801 0CDC  
                                                             u2721 0B94  
                                                             u2641 0A3E  
                                                             u5041 2F54  
                                                             u5017 2EF4  
                                                             u2561 32FC  
                                                             u5201 2D0E  
                                                             u5121 2A00  
                                                             u6001 03B8  
                                                             u2810 0D20  
                                                             u2730 0BC2  
                                                             u2650 0A58  
                                                             u5210 2D28  
                                                             u5130 2A1A  
                                                             u5050 34D4  
                                                             u6010 03D2  
                                                             u2811 0D1A  
                                                             u2731 0BBC  
                                                             u2651 0A52  
                                                             u5211 2D22  
                                                             u5131 2A14  
                                                             u5051 34CE  
                                                             u6011 03CC  
                                                             u3700 0F40  
                                                             u2900 0E1E  
                                                             u2820 0D34  
                                                             u2740 0BD4  
                                                             u2660 0A9E  
                                                             u5060 3202  
                                                             u5220 2D86  
                                                             u5140 2A88  
                                                             u5300 23A8  
                                                             u6100 05C4  
                                                             u6020 0418  
                                                             u3701 0F3A  
                                                             u2901 0E18  
                                                             u2821 0D2E  
                                                             u2741 0BCE  
                                                             u2661 0A98  
                                                             u5037 2F3E  
                                                             u5061 31FC  
                                                             u5221 2D80  
                                                             u5141 2A82  
                                                             u5301 23A2  
                                                             u6021 0412  
                                                             u3710 0F58  
                                                             u2910 0E3C  
                                                             u2830 0D66  
                                                             u2750 0BE8  
                                                             u2670 0AB0  
                                                             u2590 0998  
                                                             u5070 322A  
                                                             u5230 2D9A  
                                                             u5150 2A9C  
                                                             u5310 23F4  
                                                             u6110 05EA  
                                                             u6030 04D2  
                                                             u3711 0F52  
                                                             u2911 0E36  
                                                             u2831 0D60  
                                                             u2751 0BE2  
                                                             u2671 0AAA  
                                                             u2591 0992  
                                                             u5071 3224  
                                                             u5231 2D94  
                                                             u5151 2A96  
                                                             u5311 23EE  
                                                             u6111 05E2  
                                                             u6031 04CC  
                                                             u3800 123E  
                                                             u3720 0F6C  
                                                             u2920 0E7A  
                                                             u2840 0D7C  
                                                             u2760 0C20  
                                                             u2680 0B26  
                                                             u5240 3116  
                                                             u5080 2B10  
                                                             u5160 27F2  
                                                             u5400 145E  
                                                             u5320 2E0C  
                                                             u6200 078A  
                                                             u6120 05EE  
                                                             u6040 04E6  
                                                             u3801 1238  
                                                             u3721 0F66  
                                                             u2921 0E74  
                                                             u2841 0D76  
                                                             u2761 0C1A  
                                                             u2681 0B20  
                                                             u5241 3110  
                                                             u5081 2B0A  
                                                             u5161 27EC  
                                                             u5401 1458  
                                                             u5321 2E06  
                                                             u6201 0784  
                                                             u6041 04E0  
                                                             u3810 1254  
                                                             u3730 0FB6  
                                                             u2930 0E92  
                                                             u2850 0DA0  
                                                             u2770 0C32  
                                                             u2690 0B42  
                                                             u5250 312A  
                                                             u5090 2B24  
                                                             u5170 2806  
                                                             u5410 1476  
                                                             u5330 2E38  
                                                             u6210 079E  
                                                             u6130 0614  
                                                             u6050 052A  
                                                             u3811 124E  
                                                             u3731 0FB0  
                                                             u2931 0E8C  
                                                             u2851 0D9A  
                                                             u2771 0C2C  
                                                             u2691 0B3A  
                                                             u5251 3124  
                                                             u5091 2B1E  
                                                             u5171 2800  
                                                             u5411 1470  
                                                             u5331 2E32  
                                                             u6211 0798  
                                                             u6131 060C  
                                                             u6051 0524  
                                                             u3820 1286  
                                                             u3740 0FCE  
                                                             u2940 0EA6  
                                                             u2860 0DB6  
                                                             u2780 0C58  
                                                             u6300 2FEE  
                                                             u5260 314A  
                                                             u5180 2874  
                                                             u5500 165C  
                                                             u5420 148A  
                                                             u5340 2E4C  
                                                             u6220 07E4  
                                                             u6140 0618  
                                                             u6060 053E  
                                                             u3821 1280  
                                                             u3741 0FC8  
                                                             u2941 0EA0  
                                                             u2861 0DB0  
                                                             u2781 0C52  
                                                             u6301 2FE8  
                                                             u5261 3144  
                                                             u5181 286E  
                                                             u5501 1656  
                                                             u5421 1484  
                                                             u5341 2E46  
                                                             u6221 07DE  
                                                             u6061 0538  
                                                             u3830 12A4  
                                                             u3750 0FE2  
                                                             u2950 0ECA  
                                                             u2870 0DCC  
                                                             u2790 0C98  
                                                             u6310 1C20  
                                                             u5270 315E  
                                                             u5190 2888  
                                                             u5510 1684  
                                                             u5430 14D4  
                                                             u5350 2E84  
                                                             u6230 089E  
                                                             u6150 062E  
                                                             u6070 0588  
                                                             u3831 129E  
                                                             u3751 0FDC  
                                                             u2951 0EC4  
                                                             u2871 0DC6  
                                                             u2791 0C92  
                                                             u6311 1C1A  
                                                             u5271 3158  
                                                             u5191 2882  
                                                             u5511 167E  
                                                             u5431 14CE  
                                                             u5351 2E7E  
                                                             u6231 0898  
                                                             u6151 0628  
                                                             u6071 0582  
                                                             u5600 26CC  
                                                             u3840 12BE  
                                                             u3760 1022  
                                                             u2960 0EE2  
                                                             u2880 0DE6  
                                                             u6320 1C3A  
                                                             u5520 169A  
                                                             u5440 151C  
                                                             u5360 2EBA  
                                                             u5280 2310  
                                                             u6240 08B2  
                                                             u6160 068C  
                                                             u6080 059C  
                                                             u6400 294C  
                                                             u5601 26C6  
                                                             u3841 12B8  
                                                             u3761 101C  
                                                             u2961 0EDC  
                                                             u2881 0DE0  
                                                             u6321 1C34  
                                                             u5521 1694  
                                                             u5441 1516  
                                                             u5361 2EB4  
                                                             u5281 230A  
                                                             u6241 08AC  
                                                             u6161 0686  
                                                             u6081 0596  
                                                             u6401 2946  
                                                             u5610 2710  
                                                             u3850 12DC  
                                                             u3770 1036  
                                                             u2970 0F06  
                                                             u2890 0E04  
                                                             u6330 1C60  
                                                             u5530 16CC  
                                                             u5450 159A  
                                                             u5370 13E4  
                                                             u5290 235C  
                                                             u6250 08F0  
                                                             u6170 06DE  
                                                             u6090 05C0  
                                                             u6410 2968  
                                                             u5611 270A  
                                                             u3851 12D6  
                                                             u3771 1030  
                                                             u2971 0F00  
                                                             u2891 0DFE  
                                                             u6331 1C5A  
                                                             u5531 16C6  
                                                             u5451 1594  
                                                             u5371 13DE  
                                                             u5291 2356  
                                                             u6251 08EA  
                                                             u6171 06D8  
                                                             u6091 05B8  
                                                             u6411 2962  
                                                             u5620 2734  
                                                             u3860 132A  
                                                             u3780 11B6  
                                                             u3940 3370  
                                                             u2980 3190  
                                                             u6340 1C9A  
                                                             u5540 16EA  
                                                             u5460 15C0  
                                                             u5380 13FC  
                                                             u5700 1F42  
                                                             u6260 0904  
                                                             u6180 06F2  
                                                             u6420 29E0  
                                                             u6500 21B6  
                                                             _RCIF 007CF5  
                                                             u5621 272E  
                                                             u3861 1324  
                                                             u3941 336A  
                                                             u2981 318A  
                                                             u6341 1C94  
                                                             u5541 16E4  
                                                             u5461 15BA  
                                                             u5381 13F6  
                                                             u5701 1F3C  
                                                             u6261 08FE  
                                                             u6181 06EC  
                                                             u6421 29DA  
                                                             u6501 21B0  
                                                             u6430 244C  
                                                             u5630 275A  
                                                             u3870 135E  
                                                             u3790 1216  
                                                             u2990 31C2  
                                                             u6350 1CD4  
                                                             u5550 1704  
                                                             u5470 15F2  
                                                             u5390 1410  
                                                             u5710 1F56  
                                                             u6270 0948  
                                                             u6190 0738  
                                                             u6510 2252  
                                                             u6431 2446  
                                                             u5631 2754  
                                                             u3871 1358  
                                                             u3791 1210  
                                                             u2991 31BC  
                                                             u6351 1CCE  
                                                             u5551 16FE  
                                                             u5471 15EC  
                                                             u5391 140A  
                                                             u5711 1F50  
                                                             u6271 0942  
                                                             u6191 0732  
                                                             u6511 224C  
                                                             u6440 2488  
                                                             u5640 27B0  
                                                             u3880 139E  
                                                             u5800 1A14  
                                                             u6360 1D0E  
                                                             u5560 1722  
                                                             u5480 161E  
                                                             u5720 1F68  
                                                             u6280 095C  
                                                             u6520 2266  
                                                             u5641 27AA  
                                                             u3881 1398  
                                                             u3785 11AA  
                                                             u5801 1A0E  
                                                             u6361 1D08  
                                                             u5561 171C  
                                                             u5481 1618  
                                                             u5721 1F62  
                                                             u6281 0956  
                                                             u6521 2260  
                                                             u6450 24BA  
                                                             u5810 1AB8  
                                                             u6370 1D48  
                                                             u6290 2FA2  
                                                             u5570 1770  
                                                             u5490 1638  
                                                             u5730 1FA8  
                                                             u5650 1DF4  
                                                             u6530 227A  
                                                             u6451 24B4  
                                                             u5811 1AB2  
                                                             u6371 1D42  
                                                             u6291 2F9C  
                                                             u5571 176A  
                                                             u5491 1632  
                                                             u5731 1FA2  
                                                             u5651 1DEE  
                                                             u6531 2274  
                                                             u6460 24D2  
                                                             u5820 1B80  
                                                             u6380 1D82  
                                                             u5580 17A6  
                                                             u5740 1FBA  
                                                             u5660 1E06  
                                                             u5900 021E  
                                                             u6461 24CC  
                                                             u6445 247C  
                                                             u6381 1D7C  
                                                             u5581 17A0  
                                                             u5741 1FB4  
                                                             u5661 1E00  
                                                             u5901 0216  
                                                             u6470 2502  
                                                             u5830 1BA0  
                                                             u5750 183C  
                                                             u5590 17DA  
                                                             u5670 1E6A  
                                                             u5910 0222  
                                                             u6390 2914  
                                                             u6471 24FC  
                                                             u5831 1B9A  
                                                             u5591 17D4  
                                                             u5671 1E64  
                                                             u6391 290E  
                                                             u6480 252A  
                                                             u5760 1868  
                                                             u5680 1ECA  
                                                             u5920 0248  
                                                             u5840 25B4  
                                                             u6481 2524  
                                                             u5825 1B74  
                                                             u5761 1862  
                                                             u5681 1EC4  
                                                             u5921 0240  
                                                             u5841 25AE  
                                                             u6490 253E  
                                                             u5770 18A2  
                                                             u5690 1F1C  
                                                             u5930 024C  
                                                             u5850 25F8  
                                                             u6491 2538  
                                                             u5755 1830  
                                                             u5691 1F16  
                                                             u5851 25F2  
                                                             u5780 18C2  
                                                             u5940 0272  
                                                             u5860 263C  
                                                             u5781 18BC  
                                                             u5941 026A  
                                                             u5861 2636  
                                                             u5790 1908  
                                                             u5950 0276  
                                                             u5870 2680  
                                                             u5791 1902  
                                                             u5775 1896  
                                                             u6567 2E90  
                                                             u5871 267A  
                                                             u5960 02C0  
                                                             u5880 2694  
                                                             u6577 27D0  
                                                             u5961 02BA  
                                                             u5881 268E  
                                                             u5970 0312  
                                                             u5890 01E4  
                                                             u5971 030C  
                                                             u5891 01DE  
                                                             u5980 0326  
                                                             u5981 0320  
                                                             u5990 036C  
                                                             u5991 0366  
                                                  _check_component 2DE8  
                                                             _Fosc 7D4B  
                                                             _Tosc 00E4  
                                                             _atoi 1FD6  
                                                             _main 3412  
                                                             fsr0h 000FEA  
                                                             fsr1h 000FE2  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf1 000FE7  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0076  
                                                             _stop 0072  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 01C0  
                                                       _Angle_diff 005D  
                                                  ___fldiv@new_exp 0029  
                                                     ___param_bank 000000  
                                                     ?_init_Timers 0001  
                                                    ___fltol@sign1 00C3  
                                                            ?_atoi 0011  
                                                  __end_of___fladd 0F22  
                                                            ?_main 0001  
                                                  __end_of___fldiv 17F8  
                                                  __end_of___flneg 3398  
                                                            STR_10 7EFA  
                                                            STR_11 7EC0  
                                                            STR_20 7FC0  
                                                            STR_12 7EDD  
                                                            STR_21 7FAC  
                                                            STR_13 7EA2  
                                                            STR_22 7FFC  
                                                            STR_14 7F84  
                                                            STR_23 7FFC  
                                                            STR_15 7DE7  
                                                            STR_16 7FD4  
                                                            STR_17 7DA1  
                                                            STR_18 7FE7  
                                                            STR_19 7FF2  
                                                  __end_of___flmul 13C6  
                                                  __end_of___flsub 32D2  
                                                  __end_of___fltol 2568  
                                                  __end_of_Tweezer 3174  
                                                  __end_of_Twister 2DE8  
                                                            i2l511 01B0  
                                                            i2l505 00B4  
                                                            i2l354 3528  
                                                            i2l498 0040  
                                                            _RCREG 000FAE  
                                                            _TMR0H 000FD7  
                                                            _TMR1H 000FCF  
                                                            _TMR0L 000FD6  
                                                            _TMR1L 000FCE  
                                                            _SPBRG 000FAF  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                 Twister@direction 0010  
                                                            _X_dir 0071  
                                                            _Y_dir 0070  
                                                            _State 0075  
                                                            _Steps 005B  
                                           __size_of_add_component 0200  
                                                  __end_of_isdigit 3356  
                                                  __end_of_memmove 2CFE  
                                                            atoi@n 001E  
                                                            atoi@s 0011  
                               __end_of_desired_BaudRate@main$F795 7D43  
                                       _desired_BaudRate@main$F795 7D3F  
                                                    print_char@chr 000A  
                                                            _toint 7D3B  
                                                  __end_of_isspace 31D4  
                                                            tablat 000FF5  
                                                    _start_up_menu 2194  
                                                  _change_sequence 2F60  
                                         __end_of_fetch_parameters 2430  
                                                            ttemp5 0077  
                                                            ttemp6 007A  
                                                  Y_axis@direction 0010  
                                                            ttemp7 007E  
                                                            status 000FD8  
                                                            wtemp8 0077  
                                                  __end_of_strncat 307E  
                                                  __end_of_strrchr 3412  
                                                     __end_of_Fosc 7D4F  
                                                  __initialization 3230  
                                                     __end_of_atoi 2194  
                                                     __end_of_main 343E  
                                                       _Pick_Angle 0065  
                                                           ??_atoi 0013  
                                                           ??_main 005B  
                                                    __activetblptr 000002  
                                          __end_of_check_component 2EC0  
                                                    print_string@i 000E  
                                                   ?_start_up_menu 0001  
                                                           i2l4221 3524  
                                                           i2l4301 0118  
                                                           i2l4223 3526  
                                                           i2l4311 0158  
                                                           i2l4303 012C  
                                                           i2l4217 351C  
                                                           i2l4321 0182  
                                                           i2l4313 016A  
                                                           i2l4305 013E  
                                                           i2l4219 3520  
                                                           i2l4315 0172  
                                                           i2l4323 0184  
                                                           i2l4307 0140  
                                                           i2l4325 0198  
                                                           i2l4317 017E  
                                                           i2l4309 0144  
                                                           i2l4327 01AA  
                                                           i2l4319 0180  
                                                           i2l4271 0014  
                                                           i2l4281 0076  
                                                           i2l4273 0026  
                                                           i2l4291 00E2  
                                                           i2l4283 0088  
                                                           i2l4275 0038  
                                                           i2l4285 00B8  
                                                           i2l4277 0054  
                                                           i2l4293 00E6  
                                                           i2l4295 00FA  
                                                           i2l4287 00BC  
                                                           i2l4279 0064  
                                                           i2l4297 010C  
                                                           i2l4289 00C0  
                                                           i2l4299 010E  
                                                 __end_of___xxtofl 1FD6  
                                          remove_component@rm_comp 001E  
                                                           _X_Pick 006D  
                                                           _Y_Pick 0069  
                                                           _X_diff 0061  
                                                           _Y_diff 005F  
                                                           _X_axis 2AFA  
                                                           _Y_axis 29F0  
                                                           _Z_axis 27C2  
                                                    _add_component 1BDE  
                                                ?_remove_component 0001  
                                                           _Step_X 00B6  
                                                           _Step_Y 00B4  
                                                           _Step_Z 00B2  
                                                           ___flge 269A  
                                                     ?_set_new_pos 0001  
                                                        ??___fladd 0012  
                                                           ___wmul 343E  
                                                        ??___fldiv 0020  
                                                        ??___flneg 000E  
                                                        ??___flmul 0012  
                                                        ??___flsub 0022  
                                                        ??___fltol 00BF  
                                                        ??_Tweezer 000A  
                                                 ??_pick_and_place 003D  
                                               ??_remove_component 001C  
                                                        ??_Twister 0010  
                                                           clear_0 3268  
                                                           clear_1 3274  
                                                           isa$std 000001  
                                                 __end_of_ms_delay 3230  
                                                           _roundf 17F8  
                                                           _strlen 32D2  
                                                     __pdataCOMRAM 0075  
                                                        ??_isdigit 000C  
                                                        ??_memmove 0014  
                                                    _Place_Angle_D 00A4  
                                                       _Step_Angle 00B0  
                                                     __mediumconst 7D3A  
                                                        ??_isspace 000C  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                          __end_of_change_sequence 2FF8  
                                         fetch_parameters@Componnt 000A  
                                                        ??_strncat 0014  
                                                        ??_strrchr 001C  
                                                _return_to_initial 2568  
                                                       ___flge@ff1 0031  
                                                       ___flge@ff2 0035  
                                                     ___xxtofl@arg 0014  
                                                     ___xxtofl@exp 0013  
                                                     ___xxtofl@val 000A  
                                                       __accesstop 0080  
                                          __end_of__initialization 327A  
                                               __size_of___memrchr 0082  
                                               ?_return_to_initial 0001  
                                                       ___flneg@f1 000A  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0057  
                                               _pick_and_place$913 00C1  
                                               _pick_and_place$931 00D9  
                                               _pick_and_place$916 00C5  
                                               _pick_and_place$927 00D1  
                                               _pick_and_place$919 00C9  
                                               _pick_and_place$929 00D5  
                                                   ?_add_component 0001  
                                                  _init_interrupts 34DA  
                                              ??_return_to_initial 0013  
                                                   __pcstackCOMRAM 0001  
                                              _new_TMR1H@main$F825 00ED  
                                                     __pidataBANK0 34FA  
                                                    __end_of_toint 7D3F  
                                             __size_of_init_Timers 002A  
                                                      ms_delay@val 000A  
                                                 _desired_BaudRate 7D43  
                                                 ?_check_component 0001  
                                        __end_of_return_to_initial 269A  
                                                  ??_start_up_menu 003F  
                                                      _Place_Angle 0063  
                                                      _New_char_RX 0074  
                                                       __pbssBANK0 0080  
                                            __end_of_Rx_char_USART 01C0  
                                        remove_component@indxToDel 001F  
                                                       __pnvCOMRAM 0074  
                                                       _angle_diff 00A2  
                                            check_component@Compnt 0012  
                                                          ?_X_axis 0001  
                                                          ?_Y_axis 0001  
                                                          ?_Z_axis 0001  
                                                          ?___flge 0031  
                                              _new_TMR1L@main$F826 00EC  
                                                          ?___wmul 000A  
                                                          ?_roundf 003D  
                                                __end_of___memrchr 3100  
                                                          ?_strlen 000A  
                                                 check_component@j 0013  
                                                set_new_pos@nTMR1H 0002  
                                                set_new_pos@nTMR1L 0001  
                                                          _INTCON2 000FF1  
                                                          _INTCON3 000FF0  
                                                        ?___xxtofl 000A  
                                              pick_and_place@i_921 00CB  
                                              pick_and_place@i_930 00D7  
                                              pick_and_place@i_914 00C3  
                                              pick_and_place@i_932 00DB  
                                              pick_and_place@i_924 00CD  
                                              pick_and_place@i_933 00DD  
                                              pick_and_place@i_917 00C7  
                                              pick_and_place@i_926 00CF  
                                              pick_and_place@i_928 00D3  
                                                 ?_change_sequence 0001  
                                                          _RX_Char 00BE  
                                          __end_of_init_interrupts 34FA  
                                                ?_fetch_parameters 0001  
                                                  ??_add_component 0020  
                                                        ?_ms_delay 000A  
                                                          _X_Place 006B  
                                                          _Y_Place 0067  
                                               ??_fetch_parameters 000A  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  pick_and_place@i 00BF  
                                                       _init_PORTS 3492  
                                                       _init_USART 3398  
                                                  __size_of_X_axis 010A  
                                                  __size_of_Y_axis 010A  
                                                          _Rot_dir 006F  
                                                  __size_of_Z_axis 0124  
                                                  __size_of___flge 0128  
                                                          ___fladd 097A  
                                                          ___fldiv 13C6  
                                                          ___flneg 3356  
                                                          ___flmul 0F22  
                                                          ___flsub 3288  
                                                          ___fltol 2430  
                                                          _Tweezer 3100  
                                                  __size_of___wmul 002A  
                                                          _Twister 2CFE  
                                             __size_of_set_new_pos 0014  
                                                          __pcinit 3230  
                                                          __ramtop 0600  
                                                          __ptext0 3412  
                                                          __ptext1 2194  
                                                          __ptext2 2568  
                                                          __ptext3 28E6  
                                                          __ptext4 33D8  
                                                          __ptext5 307E  
                                                          __ptext6 2C04  
                                                          __ptext7 01C4  
                                                          __ptext8 22F8  
                                                          __ptext9 2DE8  
                                                        _T0CONbits 000FD5  
                                                  __size_of_roundf 03E6  
                                                  __size_of_strlen 0042  
                                                        _T1CONbits 000FCD  
                                                          _isdigit 3314  
                                                          _memmove 2C04  
                                                       ??___xxtofl 000E  
                                                          _isspace 3174  
                                       __size_of_return_to_initial 0132  
                                                          atoi@neg 0017  
                                                    Tweezer@action 000A  
                                                          _strncat 2FF8  
                                                          _strrchr 33D8  
                                             end_of_initialization 327A  
                                              remove_component@ptr 001C  
                                                    __Lmediumconst 7D3A  
                                                       ??_ms_delay 000C  
                                                        _RCSTAbits 000FAB  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                          roundf@e 0049  
                                                          roundf@u 004F  
                                                          roundf@x 003D  
                                                          roundf@y 0053  
                                                          strlen@a 000C  
                                                          strlen@s 000A  
                                                       _print_char 34BA  
                                               add_component@F3142 00E8  
                                                      ___fladd@grs 0019  
                                                    ___xxtofl@sign 0012  
                                        __size_of_remove_component 010A  
                                                        _TRISCbits 000F94  
                                                      ___fldiv@grs 002B  
                                                      ___fldiv@rem 0024  
                                                    ?_print_string 000A  
                                                      ___flmul@grs 0017  
                                                 ?_init_interrupts 0001  
                                                        _TXSTAbits 000FAC  
                                                      ___memrchr@c 0010  
                                                      ___memrchr@m 000E  
                                                      ___memrchr@n 0012  
                                                      ___memrchr@s 0016  
                                         __end_of_desired_BaudRate 7D47  
                                                      ?_init_PORTS 0001  
                                                      ?_init_USART 0001  
                                                   __end_of_X_axis 2C04  
                                                   __end_of_Y_axis 2AFA  
                                                   __end_of_Z_axis 28E6  
                                                   __end_of___flge 27C2  
                                                   __end_of___wmul 3468  
                                                    __pidataCOMRAM 352E  
                                                   __end_of_roundf 1BDE  
                                                   __end_of_strlen 3314  
                                              start_initialization 3230  
                                                   ??_print_string 000C  
                                                        _X_Place_D 00A8  
                                                        _Y_Place_D 00A6  
                                                  X_axis@direction 0010  
                                                     _Pick_Angle_D 00AA  
                                                   _Tosc@main$F794 00E0  
                                                         ??_X_axis 0010  
                                                         ??_Y_axis 0010  
                                                         ??_Z_axis 0010  
                                                         ??___flge 0039  
                                                         ??___wmul 000E  
                                                      __pdataBANK0 00E0  
                                                   _lenth_of_array 00EA  
                                                    ??_init_Timers 000A  
                                               return_to_initial@i 0014  
                                                         ??_roundf 0041  
                                                         ??_strlen 000C  
                                                        ___fladd@a 000E  
                                                        ___fladd@b 000A  
                                                      ?_print_char 0001  
                                                        ___fldiv@a 001C  
                                                        ___fldiv@b 0018  
                                                        ___flmul@a 000E  
                                                        ___flmul@b 000A  
                                                      __pbssCOMRAM 005B  
                                                 change_sequence@i 0013  
                                                        ___flsub@a 001E  
                                                        ___flsub@b 001A  
                                                    __pcstackBANK0 00BF  
                                          __size_of_pick_and_place 07B6  
                                                        ___memrchr 307E  
                                                __size_of___xxtofl 01F8  
                                              __size_of_init_PORTS 0028  
                                              __size_of_init_USART 0040  
                                            __end_of_start_up_menu 22F8  
                                         __size_of_check_component 00D8  
                                                        _atoi$1402 0019  
                                                        _atoi$1403 001D  
                                                        _atoi$1404 001B  
                                                  Z_axis@direction 0012  
                                                __size_of_ms_delay 005C  
                                                        __pintcode 0008  
                                                    __pmediumconst 7D3A  
                                                         ?___fladd 000A  
                                                         ?___fldiv 0018  
                                                         ?___flneg 000A  
                                                         ?___flmul 000A  
                                                         ?___flsub 001A  
                                                         ?___fltol 0057  
                                                         ?_Tweezer 0001  
                                                         ?_Twister 0001  
                                                   Rx_char_USART@i 0008  
                                        __size_of_fetch_parameters 0138  
                                           __size_of_Rx_char_USART 01B8  
                                                print_string@strng 000A  
                                                         ?_isdigit 000A  
                                                         ?_memmove 000E  
                                                         ?_isspace 000A  
                                              __end_of_init_Timers 3492  
                                                 _remove_component 28E6  
                                                   _Fosc@main$F793 7D47  
                                                       ?___memrchr 000E  
                                                        _new_TMR1H 00EF  
                                                        _new_TMR1L 00EE  
                                                         ?_strncat 000E  
                                                         ?_strrchr 0018  
                                                _component_present 0073  
                                                        _input_str 00F0  
                                                   ___wmul@product 000E  
                                                         _LATCbits 000F8B  
                                         __size_of_change_sequence 0098  
                                                         _PIE1bits 000F9D  
                                              __size_of_print_char 0020  
                                            __end_of_add_component 1DDE  
                                                         i2u500_40 01A8  
                                                         i2u500_41 01A2  
                                                         _PIR1bits 000F9E  
                                                         i2u490_40 0086  
                                                         i2u490_41 0080  
                                                         i2u491_40 00B4  
                                                         i2u491_41 00AE  
                                                         i2u492_40 00E0  
                                                         i2u492_41 00DA  
                                                         i2u493_40 00F8  
                                                         i2u493_41 00F2  
                                                         i2u494_40 010A  
                                                         i2u486_40 0024  
                                                         i2u494_41 0104  
                                                         i2u486_41 001E  
                                                         i2u495_40 012A  
                                                         i2u487_40 0036  
                                                         i2u495_41 0124  
                                                         i2u487_41 0030  
                                                         i2u496_40 013C  
                                                         i2u488_40 0052  
                                                         i2u496_41 0136  
                                                         i2u488_41 004C  
                                                         i2u497_40 0156  
                                                         i2u489_40 0064  
                                                         i2u497_41 0150  
                                                         i2u489_41 005E  
                                                         i2u498_40 0168  
                                                         i2u498_41 0162  
                                                         i2u499_40 0196  
                                                         i2u499_41 0190  
                                                    ??_set_new_pos 0002  
                                             __end_of_print_string 2F60  
                                                        _testarray 0080  
                                                ___wmul@multiplier 000A  
                                           __end_of_Fosc@main$F793 7D4B  
                                                     _isspace$1420 0010  
                                                      _INTCON3bits 000FF0  
                                                        copy_data0 3244  
                                                         _X_Pick_D 00AE  
                                                    _Rx_char_USART 0008  
                                                         _Y_Pick_D 00AC  
                                                       roundf@F528 009E  
                                                         __Hrparam 0000  
                                                     ??_init_PORTS 000A  
                                                     ??_init_USART 005B  
                                                         __Lrparam 0000  
                                                ??_check_component 0010  
                                                        memmove@d1 000E  
                                                        memmove@s1 0010  
                                                 __size_of___fladd 05A8  
                                                 __size_of___fldiv 0432  
                                                 __size_of___flneg 0042  
                                                 __size_of___flmul 04A4  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 0138  
                                                 __size_of_Tweezer 0074  
                                                 __size_of_Twister 00EA  
                                                      _init_Timers 3468  
                                              __end_of_set_new_pos 352C  
                                                        ms_delay@i 000C  
                                                        ms_delay@j 000E  
                                                         ___xxtofl 1DDE  
                                                   _pick_and_place 01C4  
                                                 __size_of_isdigit 0042  
                                                 __size_of_memmove 00FA  
                                                      ??___memrchr 0014  
                                                 __size_of_isspace 0060  
                                                         __ptext10 34BA  
                                                         __ptext11 1DDE  
                                                         __ptext20 1BDE  
                                                         __ptext12 13C6  
                                                         __ptext21 2FF8  
                                                         __ptext13 27C2  
                                                         __ptext30 17F8  
                                                         __ptext22 32D2  
                                                         __ptext14 29F0  
                                                         __ptext31 3288  
                                                         __ptext23 2EC0  
                                                         __ptext15 2AFA  
                                                         __ptext40 3518  
                                                         __ptext32 097A  
                                                         __ptext24 1FD6  
                                                         __ptext16 2CFE  
                                                         __ptext33 3356  
                                                         __ptext25 3174  
                                                         __ptext17 31D4  
                                                         __ptext34 0F22  
                                                         __ptext26 3314  
                                                         __ptext18 3100  
                                                         __ptext35 269A  
                                                         __ptext27 343E  
                                                         __ptext19 2F60  
                                                         __ptext36 2430  
                                                         __ptext28 34DA  
                                                         __ptext37 3468  
                                                         __ptext29 3398  
                                                         __ptext38 3492  
                                               __end_of_init_PORTS 34BA  
                                               __end_of_init_USART 33D8  
                                                 __size_of_strncat 0086  
                                                 __size_of_strrchr 003A  
                                                   ?_Rx_char_USART 0001  
                                                    __size_of_atoi 01BE  
                                                    __size_of_main 002C  
                                                         _ms_delay 31D4  
                                                         isa$xinst 000000  
                                                         _sequence 00FA  
                                         __size_of_init_interrupts 0020  
                                                ??_change_sequence 0010  
                                                         int$flags 0076  
                                                         _rotation 00B8  
                                                 _fetch_parameters 22F8  
                                           __end_of_pick_and_place 097A  
                                                     ??_print_char 000A  
                                                       _INTCONbits 000FF2  
                                           return_to_initial@i_936 0016  
                                           return_to_initial@i_937 0018  
                                           return_to_initial@i_938 001A  
                                                         isdigit@c 000A  
                                                         memmove@d 0016  
                                                         memmove@n 0012  
                                                         memmove@s 0018  
                                                         intlevel2 352C  
                                                         isspace@c 000A  
                                                   _displacement_X 00BC  
                                                   _displacement_Y 00BA  
                                            __size_of_print_string 00A0  
                                               __end_of_print_char 34DA  
                                         __end_of_remove_component 29F0  
                                                      _set_new_pos 3518  
                                           pick_and_place@Componnt 00DF  
                                                  ?_pick_and_place 0001  
                                                         strncat@d 000E  
                                                         strncat@n 0012  
                                                         strncat@s 0010  
                                                         strrchr@c 001A  
                                                         strrchr@s 0018  
                                                    ___fladd@signs 0016  
                                                  ??_Rx_char_USART 0003  
                                                     _print_string 2EC0  
                                                     ___fladd@aexp 0017  
                                                     ___fladd@bexp 0018  
                                        add_component@add_componnt 0020  
                                                   start_up_menu@i 0041  
                                                      _roundf$1680 004B  
                                                      _roundf$1681 0045  
