

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 26 09:01:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F452 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataCOMRAM
   100  003656                     __pidataCOMRAM:
   101                           	callstack 0
   102                           
   103                           ;initializer for _new_TMR1H@main$F795
   104  003656  FA                 	db	250
   105                           
   106                           	psect	idataBANK0
   107  003622                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _Tosc@main$F793
   111  003622  37BD               	dw	14269
   112  003624  3486               	dw	13446
   113                           
   114                           ;initializer for _Tosc
   115  003626  37BD               	dw	14269
   116  003628  3486               	dw	13446
   117                           
   118                           ;initializer for add_component@F3136
   119  00362A  20                 	db	32
   120  00362B  00                 	db	0
   121                           
   122                           ;initializer for _steps_per_unit
   123  00362C  0003               	dw	3
   124                           
   125                           ;initializer for _func
   126  00362E  30                 	db	48
   127                           
   128                           ;initializer for _new_TMR1L@main$F796
   129  00362F  60                 	db	96
   130                           
   131                           ;initializer for _new_TMR1L
   132  003630  60                 	db	96
   133                           
   134                           ;initializer for _new_TMR1H
   135  003631  FA                 	db	250
   136                           
   137                           ;initializer for _input_str
   138  003632  20                 	db	32
   139  003633  00                 	db	0
   140  003634  00                 	db	0
   141  003635  00                 	db	0
   142  003636  00                 	db	0
   143  003637  00                 	db	0
   144  003638  00                 	db	0
   145  003639  00                 	db	0
   146  00363A  00                 	db	0
   147  00363B  00                 	db	0
   148                           
   149                           ;initializer for _sequence
   150  00363C  43                 	db	67
   151  00363D  41                 	db	65
   152  00363E  42                 	db	66
   153  00363F  00                 	db	0
   154                           
   155                           	psect	mediumconst
   156  007CB8                     __pmediumconst:
   157                           	callstack 0
   158  007CB8  00                 	db	0
   159  007CB9  0000               	dw	0
   160  007CBB  4B00               	dw	19200
   161  007CBD                     __end_of_toint:
   162                           	callstack 0
   163  007CBD  0000               	dw	0
   164  007CBF  4616               	dw	17942
   165  007CC1                     __end_of_desired_BaudRate@main$F794:
   166                           	callstack 0
   167  007CC1  0000               	dw	0
   168  007CC3  4616               	dw	17942
   169  007CC5                     __end_of_desired_BaudRate:
   170                           	callstack 0
   171  007CC5  2400               	dw	9216
   172  007CC7  4A74               	dw	19060
   173  007CC9                     __end_of_Fosc@main$F792:
   174                           	callstack 0
   175  007CC9  2400               	dw	9216
   176  007CCB  4A74               	dw	19060
   177  007CCD                     __end_of_Fosc:
   178                           	callstack 0
   179  007CCD                     STR_1:
   180  007CCD  0A                 	db	10
   181  007CCE  0A                 	db	10
   182  007CCF  31                 	db	49	;'1'
   183  007CD0  2E                 	db	46
   184  007CD1  20                 	db	32
   185  007CD2  53                 	db	83	;'S'
   186  007CD3  74                 	db	116	;'t'
   187  007CD4  61                 	db	97	;'a'
   188  007CD5  72                 	db	114	;'r'
   189  007CD6  74                 	db	116	;'t'
   190  007CD7  20                 	db	32
   191  007CD8  53                 	db	83	;'S'
   192  007CD9  65                 	db	101	;'e'
   193  007CDA  71                 	db	113	;'q'
   194  007CDB  75                 	db	117	;'u'
   195  007CDC  65                 	db	101	;'e'
   196  007CDD  6E                 	db	110	;'n'
   197  007CDE  63                 	db	99	;'c'
   198  007CDF  65                 	db	101	;'e'
   199  007CE0  0A                 	db	10
   200  007CE1  32                 	db	50	;'2'
   201  007CE2  2E                 	db	46
   202  007CE3  20                 	db	32
   203  007CE4  43                 	db	67	;'C'
   204  007CE5  68                 	db	104	;'h'
   205  007CE6  61                 	db	97	;'a'
   206  007CE7  6E                 	db	110	;'n'
   207  007CE8  67                 	db	103	;'g'
   208  007CE9  65                 	db	101	;'e'
   209  007CEA  20                 	db	32
   210  007CEB  73                 	db	115	;'s'
   211  007CEC  65                 	db	101	;'e'
   212  007CED  71                 	db	113	;'q'
   213  007CEE  75                 	db	117	;'u'
   214  007CEF  65                 	db	101	;'e'
   215  007CF0  6E                 	db	110	;'n'
   216  007CF1  63                 	db	99	;'c'
   217  007CF2  65                 	db	101	;'e'
   218  007CF3  0A                 	db	10
   219  007CF4  33                 	db	51	;'3'
   220  007CF5  2E                 	db	46
   221  007CF6  20                 	db	32
   222  007CF7  41                 	db	65	;'A'
   223  007CF8  64                 	db	100	;'d'
   224  007CF9  64                 	db	100	;'d'
   225  007CFA  20                 	db	32
   226  007CFB  6E                 	db	110	;'n'
   227  007CFC  65                 	db	101	;'e'
   228  007CFD  77                 	db	119	;'w'
   229  007CFE  20                 	db	32
   230  007CFF  63                 	db	99	;'c'
   231  007D00  6F                 	db	111	;'o'
   232  007D01  6D                 	db	109	;'m'
   233  007D02  70                 	db	112	;'p'
   234  007D03  6F                 	db	111	;'o'
   235  007D04  6E                 	db	110	;'n'
   236  007D05  65                 	db	101	;'e'
   237  007D06  6E                 	db	110	;'n'
   238  007D07  74                 	db	116	;'t'
   239  007D08  0A                 	db	10
   240  007D09  34                 	db	52	;'4'
   241  007D0A  2E                 	db	46
   242  007D0B  20                 	db	32
   243  007D0C  52                 	db	82	;'R'
   244  007D0D  65                 	db	101	;'e'
   245  007D0E  6D                 	db	109	;'m'
   246  007D0F  6F                 	db	111	;'o'
   247  007D10  76                 	db	118	;'v'
   248  007D11  65                 	db	101	;'e'
   249  007D12  20                 	db	32
   250  007D13  61                 	db	97	;'a'
   251  007D14  20                 	db	32
   252  007D15  63                 	db	99	;'c'
   253  007D16  6F                 	db	111	;'o'
   254  007D17  6D                 	db	109	;'m'
   255  007D18  70                 	db	112	;'p'
   256  007D19  6F                 	db	111	;'o'
   257  007D1A  6E                 	db	110	;'n'
   258  007D1B  65                 	db	101	;'e'
   259  007D1C  6E                 	db	110	;'n'
   260  007D1D  74                 	db	116	;'t'
   261  007D1E  0A                 	db	10
   262  007D1F  35                 	db	53	;'5'
   263  007D20  2E                 	db	46
   264  007D21  20                 	db	32
   265  007D22  52                 	db	82	;'R'
   266  007D23  65                 	db	101	;'e'
   267  007D24  74                 	db	116	;'t'
   268  007D25  75                 	db	117	;'u'
   269  007D26  72                 	db	114	;'r'
   270  007D27  6E                 	db	110	;'n'
   271  007D28  20                 	db	32
   272  007D29  74                 	db	116	;'t'
   273  007D2A  6F                 	db	111	;'o'
   274  007D2B  20                 	db	32
   275  007D2C  49                 	db	73	;'I'
   276  007D2D  6E                 	db	110	;'n'
   277  007D2E  69                 	db	105	;'i'
   278  007D2F  74                 	db	116	;'t'
   279  007D30  69                 	db	105	;'i'
   280  007D31  61                 	db	97	;'a'
   281  007D32  6C                 	db	108	;'l'
   282  007D33  20                 	db	32
   283  007D34  50                 	db	80	;'P'
   284  007D35  6F                 	db	111	;'o'
   285  007D36  73                 	db	115	;'s'
   286  007D37  69                 	db	105	;'i'
   287  007D38  74                 	db	116	;'t'
   288  007D39  69                 	db	105	;'i'
   289  007D3A  6F                 	db	111	;'o'
   290  007D3B  6E                 	db	110	;'n'
   291  007D3C  00                 	db	0
   292  007D3D                     STR_17:
   293  007D3D  0A                 	db	10
   294  007D3E  63                 	db	99	;'c'
   295  007D3F  6F                 	db	111	;'o'
   296  007D40  6D                 	db	109	;'m'
   297  007D41  70                 	db	112	;'p'
   298  007D42  6F                 	db	111	;'o'
   299  007D43  6E                 	db	110	;'n'
   300  007D44  65                 	db	101	;'e'
   301  007D45  6E                 	db	110	;'n'
   302  007D46  74                 	db	116	;'t'
   303  007D47  20                 	db	32
   304  007D48  69                 	db	105	;'i'
   305  007D49  73                 	db	115	;'s'
   306  007D4A  20                 	db	32
   307  007D4B  6E                 	db	110	;'n'
   308  007D4C  6F                 	db	111	;'o'
   309  007D4D  74                 	db	116	;'t'
   310  007D4E  20                 	db	32
   311  007D4F  69                 	db	105	;'i'
   312  007D50  6E                 	db	110	;'n'
   313  007D51  20                 	db	32
   314  007D52  74                 	db	116	;'t'
   315  007D53  68                 	db	104	;'h'
   316  007D54  65                 	db	101	;'e'
   317  007D55  20                 	db	32
   318  007D56  73                 	db	115	;'s'
   319  007D57  65                 	db	101	;'e'
   320  007D58  71                 	db	113	;'q'
   321  007D59  75                 	db	117	;'u'
   322  007D5A  65                 	db	101	;'e'
   323  007D5B  6E                 	db	110	;'n'
   324  007D5C  63                 	db	99	;'c'
   325  007D5D  65                 	db	101	;'e'
   326  007D5E  2E                 	db	46
   327  007D5F  20                 	db	32
   328  007D60  54                 	db	84	;'T'
   329  007D61  72                 	db	114	;'r'
   330  007D62  79                 	db	121	;'y'
   331  007D63  20                 	db	32
   332  007D64  73                 	db	115	;'s'
   333  007D65  65                 	db	101	;'e'
   334  007D66  6C                 	db	108	;'l'
   335  007D67  65                 	db	101	;'e'
   336  007D68  63                 	db	99	;'c'
   337  007D69  74                 	db	116	;'t'
   338  007D6A  69                 	db	105	;'i'
   339  007D6B  6E                 	db	110	;'n'
   340  007D6C  67                 	db	103	;'g'
   341  007D6D  20                 	db	32
   342  007D6E  61                 	db	97	;'a'
   343  007D6F  6E                 	db	110	;'n'
   344  007D70  6F                 	db	111	;'o'
   345  007D71  74                 	db	116	;'t'
   346  007D72  68                 	db	104	;'h'
   347  007D73  65                 	db	101	;'e'
   348  007D74  72                 	db	114	;'r'
   349  007D75  20                 	db	32
   350  007D76  63                 	db	99	;'c'
   351  007D77  6F                 	db	111	;'o'
   352  007D78  6D                 	db	109	;'m'
   353  007D79  70                 	db	112	;'p'
   354  007D7A  6F                 	db	111	;'o'
   355  007D7B  6E                 	db	110	;'n'
   356  007D7C  65                 	db	101	;'e'
   357  007D7D  6E                 	db	110	;'n'
   358  007D7E  74                 	db	116	;'t'
   359  007D7F  3A                 	db	58	;':'
   360  007D80  20                 	db	32
   361  007D81  0A                 	db	10
   362  007D82  00                 	db	0
   363  007D83                     STR_15:
   364  007D83  0A                 	db	10
   365  007D84  57                 	db	87	;'W'
   366  007D85  68                 	db	104	;'h'
   367  007D86  69                 	db	105	;'i'
   368  007D87  63                 	db	99	;'c'
   369  007D88  68                 	db	104	;'h'
   370  007D89  20                 	db	32
   371  007D8A  63                 	db	99	;'c'
   372  007D8B  6F                 	db	111	;'o'
   373  007D8C  6D                 	db	109	;'m'
   374  007D8D  70                 	db	112	;'p'
   375  007D8E  6F                 	db	111	;'o'
   376  007D8F  6E                 	db	110	;'n'
   377  007D90  65                 	db	101	;'e'
   378  007D91  6E                 	db	110	;'n'
   379  007D92  74                 	db	116	;'t'
   380  007D93  20                 	db	32
   381  007D94  77                 	db	119	;'w'
   382  007D95  6F                 	db	111	;'o'
   383  007D96  75                 	db	117	;'u'
   384  007D97  6C                 	db	108	;'l'
   385  007D98  64                 	db	100	;'d'
   386  007D99  20                 	db	32
   387  007D9A  79                 	db	121	;'y'
   388  007D9B  6F                 	db	111	;'o'
   389  007D9C  75                 	db	117	;'u'
   390  007D9D  20                 	db	32
   391  007D9E  6C                 	db	108	;'l'
   392  007D9F  69                 	db	105	;'i'
   393  007DA0  6B                 	db	107	;'k'
   394  007DA1  65                 	db	101	;'e'
   395  007DA2  20                 	db	32
   396  007DA3  74                 	db	116	;'t'
   397  007DA4  6F                 	db	111	;'o'
   398  007DA5  20                 	db	32
   399  007DA6  72                 	db	114	;'r'
   400  007DA7  65                 	db	101	;'e'
   401  007DA8  6D                 	db	109	;'m'
   402  007DA9  6F                 	db	111	;'o'
   403  007DAA  76                 	db	118	;'v'
   404  007DAB  65                 	db	101	;'e'
   405  007DAC  20                 	db	32
   406  007DAD  66                 	db	102	;'f'
   407  007DAE  72                 	db	114	;'r'
   408  007DAF  6F                 	db	111	;'o'
   409  007DB0  6D                 	db	109	;'m'
   410  007DB1  20                 	db	32
   411  007DB2  74                 	db	116	;'t'
   412  007DB3  68                 	db	104	;'h'
   413  007DB4  65                 	db	101	;'e'
   414  007DB5  20                 	db	32
   415  007DB6  20                 	db	32
   416  007DB7  73                 	db	115	;'s'
   417  007DB8  65                 	db	101	;'e'
   418  007DB9  71                 	db	113	;'q'
   419  007DBA  75                 	db	117	;'u'
   420  007DBB  65                 	db	101	;'e'
   421  007DBC  6E                 	db	110	;'n'
   422  007DBD  63                 	db	99	;'c'
   423  007DBE  65                 	db	101	;'e'
   424  007DBF  3F                 	db	63	;'?'
   425  007DC0  0A                 	db	10
   426  007DC1  00                 	db	0
   427  007DC2                     STR_7:
   428  007DC2  0A                 	db	10
   429  007DC3  45                 	db	69	;'E'
   430  007DC4  6E                 	db	110	;'n'
   431  007DC5  74                 	db	116	;'t'
   432  007DC6  65                 	db	101	;'e'
   433  007DC7  72                 	db	114	;'r'
   434  007DC8  20                 	db	32
   435  007DC9  74                 	db	116	;'t'
   436  007DCA  68                 	db	104	;'h'
   437  007DCB  65                 	db	101	;'e'
   438  007DCC  20                 	db	32
   439  007DCD  63                 	db	99	;'c'
   440  007DCE  6F                 	db	111	;'o'
   441  007DCF  6D                 	db	109	;'m'
   442  007DD0  70                 	db	112	;'p'
   443  007DD1  6F                 	db	111	;'o'
   444  007DD2  6E                 	db	110	;'n'
   445  007DD3  65                 	db	101	;'e'
   446  007DD4  6E                 	db	110	;'n'
   447  007DD5  74                 	db	116	;'t'
   448  007DD6  20                 	db	32
   449  007DD7  79                 	db	121	;'y'
   450  007DD8  6F                 	db	111	;'o'
   451  007DD9  75                 	db	117	;'u'
   452  007DDA  20                 	db	32
   453  007DDB  77                 	db	119	;'w'
   454  007DDC  61                 	db	97	;'a'
   455  007DDD  6E                 	db	110	;'n'
   456  007DDE  74                 	db	116	;'t'
   457  007DDF  20                 	db	32
   458  007DE0  74                 	db	116	;'t'
   459  007DE1  6F                 	db	111	;'o'
   460  007DE2  20                 	db	32
   461  007DE3  61                 	db	97	;'a'
   462  007DE4  64                 	db	100	;'d'
   463  007DE5  64                 	db	100	;'d'
   464  007DE6  3A                 	db	58	;':'
   465  007DE7  20                 	db	32
   466  007DE8  41                 	db	65	;'A'
   467  007DE9  2C                 	db	44
   468  007DEA  20                 	db	32
   469  007DEB  42                 	db	66	;'B'
   470  007DEC  2C                 	db	44
   471  007DED  20                 	db	32
   472  007DEE  43                 	db	67	;'C'
   473  007DEF  20                 	db	32
   474  007DF0  6F                 	db	111	;'o'
   475  007DF1  72                 	db	114	;'r'
   476  007DF2  20                 	db	32
   477  007DF3  44                 	db	68	;'D'
   478  007DF4  3F                 	db	63	;'?'
   479  007DF5  00                 	db	0
   480  007DF6                     STR_20:
   481  007DF6  0A                 	db	10
   482  007DF7  77                 	db	119	;'w'
   483  007DF8  61                 	db	97	;'a'
   484  007DF9  69                 	db	105	;'i'
   485  007DFA  74                 	db	116	;'t'
   486  007DFB  69                 	db	105	;'i'
   487  007DFC  6E                 	db	110	;'n'
   488  007DFD  67                 	db	103	;'g'
   489  007DFE  20                 	db	32
   490  007DFF  66                 	db	102	;'f'
   491  007E00  6F                 	db	111	;'o'
   492  007E01  72                 	db	114	;'r'
   493  007E02  20                 	db	32
   494  007E03  66                 	db	102	;'f'
   495  007E04  65                 	db	101	;'e'
   496  007E05  77                 	db	119	;'w'
   497  007E06  20                 	db	32
   498  007E07  73                 	db	115	;'s'
   499  007E08  65                 	db	101	;'e'
   500  007E09  63                 	db	99	;'c'
   501  007E0A  6F                 	db	111	;'o'
   502  007E0B  6E                 	db	110	;'n'
   503  007E0C  64                 	db	100	;'d'
   504  007E0D  73                 	db	115	;'s'
   505  007E0E  20                 	db	32
   506  007E0F  66                 	db	102	;'f'
   507  007E10  6F                 	db	111	;'o'
   508  007E11  72                 	db	114	;'r'
   509  007E12  20                 	db	32
   510  007E13  74                 	db	116	;'t'
   511  007E14  68                 	db	104	;'h'
   512  007E15  65                 	db	101	;'e'
   513  007E16  20                 	db	32
   514  007E17  63                 	db	99	;'c'
   515  007E18  6F                 	db	111	;'o'
   516  007E19  6D                 	db	109	;'m'
   517  007E1A  70                 	db	112	;'p'
   518  007E1B  6F                 	db	111	;'o'
   519  007E1C  6E                 	db	110	;'n'
   520  007E1D  65                 	db	101	;'e'
   521  007E1E  6E                 	db	110	;'n'
   522  007E1F  74                 	db	116	;'t'
   523  007E20  2E                 	db	46
   524  007E21  2E                 	db	46
   525  007E22  00                 	db	0
   526  007E23                     STR_5:
   527  007E23  0A                 	db	10
   528  007E24  50                 	db	80	;'P'
   529  007E25  6C                 	db	108	;'l'
   530  007E26  65                 	db	101	;'e'
   531  007E27  61                 	db	97	;'a'
   532  007E28  73                 	db	115	;'s'
   533  007E29  65                 	db	101	;'e'
   534  007E2A  20                 	db	32
   535  007E2B  67                 	db	103	;'g'
   536  007E2C  69                 	db	105	;'i'
   537  007E2D  76                 	db	118	;'v'
   538  007E2E  65                 	db	101	;'e'
   539  007E2F  20                 	db	32
   540  007E30  74                 	db	116	;'t'
   541  007E31  68                 	db	104	;'h'
   542  007E32  65                 	db	101	;'e'
   543  007E33  20                 	db	32
   544  007E34  6E                 	db	110	;'n'
   545  007E35  65                 	db	101	;'e'
   546  007E36  77                 	db	119	;'w'
   547  007E37  20                 	db	32
   548  007E38  73                 	db	115	;'s'
   549  007E39  65                 	db	101	;'e'
   550  007E3A  71                 	db	113	;'q'
   551  007E3B  75                 	db	117	;'u'
   552  007E3C  65                 	db	101	;'e'
   553  007E3D  6E                 	db	110	;'n'
   554  007E3E  63                 	db	99	;'c'
   555  007E3F  65                 	db	101	;'e'
   556  007E40  20                 	db	32
   557  007E41  61                 	db	97	;'a'
   558  007E42  73                 	db	115	;'s'
   559  007E43  20                 	db	32
   560  007E44  69                 	db	105	;'i'
   561  007E45  6E                 	db	110	;'n'
   562  007E46  70                 	db	112	;'p'
   563  007E47  75                 	db	117	;'u'
   564  007E48  74                 	db	116	;'t'
   565  007E49  0D                 	db	13
   566  007E4A  00                 	db	0
   567  007E4B                     STR_13:
   568  007E4B  0A                 	db	10
   569  007E4C  45                 	db	69	;'E'
   570  007E4D  6E                 	db	110	;'n'
   571  007E4E  74                 	db	116	;'t'
   572  007E4F  65                 	db	101	;'e'
   573  007E50  72                 	db	114	;'r'
   574  007E51  20                 	db	32
   575  007E52  74                 	db	116	;'t'
   576  007E53  68                 	db	104	;'h'
   577  007E54  65                 	db	101	;'e'
   578  007E55  20                 	db	32
   579  007E56  70                 	db	112	;'p'
   580  007E57  6C                 	db	108	;'l'
   581  007E58  61                 	db	97	;'a'
   582  007E59  63                 	db	99	;'c'
   583  007E5A  65                 	db	101	;'e'
   584  007E5B  20                 	db	32
   585  007E5C  6F                 	db	111	;'o'
   586  007E5D  72                 	db	114	;'r'
   587  007E5E  69                 	db	105	;'i'
   588  007E5F  65                 	db	101	;'e'
   589  007E60  6E                 	db	110	;'n'
   590  007E61  74                 	db	116	;'t'
   591  007E62  61                 	db	97	;'a'
   592  007E63  74                 	db	116	;'t'
   593  007E64  69                 	db	105	;'i'
   594  007E65  6F                 	db	111	;'o'
   595  007E66  6E                 	db	110	;'n'
   596  007E67  20                 	db	32
   597  007E68  28                 	db	40
   598  007E69  30                 	db	48	;'0'
   599  007E6A  2D                 	db	45
   600  007E6B  33                 	db	51	;'3'
   601  007E6C  36                 	db	54	;'6'
   602  007E6D  30                 	db	48	;'0'
   603  007E6E  29                 	db	41
   604  007E6F  3A                 	db	58	;':'
   605  007E70  20                 	db	32
   606  007E71  00                 	db	0
   607  007E72                     STR_10:
   608  007E72  0A                 	db	10
   609  007E73  45                 	db	69	;'E'
   610  007E74  6E                 	db	110	;'n'
   611  007E75  74                 	db	116	;'t'
   612  007E76  65                 	db	101	;'e'
   613  007E77  72                 	db	114	;'r'
   614  007E78  20                 	db	32
   615  007E79  74                 	db	116	;'t'
   616  007E7A  68                 	db	104	;'h'
   617  007E7B  65                 	db	101	;'e'
   618  007E7C  20                 	db	32
   619  007E7D  70                 	db	112	;'p'
   620  007E7E  69                 	db	105	;'i'
   621  007E7F  63                 	db	99	;'c'
   622  007E80  6B                 	db	107	;'k'
   623  007E81  20                 	db	32
   624  007E82  6F                 	db	111	;'o'
   625  007E83  72                 	db	114	;'r'
   626  007E84  69                 	db	105	;'i'
   627  007E85  65                 	db	101	;'e'
   628  007E86  6E                 	db	110	;'n'
   629  007E87  74                 	db	116	;'t'
   630  007E88  61                 	db	97	;'a'
   631  007E89  74                 	db	116	;'t'
   632  007E8A  69                 	db	105	;'i'
   633  007E8B  6F                 	db	111	;'o'
   634  007E8C  6E                 	db	110	;'n'
   635  007E8D  20                 	db	32
   636  007E8E  28                 	db	40
   637  007E8F  30                 	db	48	;'0'
   638  007E90  2D                 	db	45
   639  007E91  33                 	db	51	;'3'
   640  007E92  36                 	db	54	;'6'
   641  007E93  30                 	db	48	;'0'
   642  007E94  29                 	db	41
   643  007E95  3A                 	db	58	;':'
   644  007E96  20                 	db	32
   645  007E97  00                 	db	0
   646  007E98                     STR_11:
   647  007E98  0A                 	db	10
   648  007E99  45                 	db	69	;'E'
   649  007E9A  6E                 	db	110	;'n'
   650  007E9B  74                 	db	116	;'t'
   651  007E9C  65                 	db	101	;'e'
   652  007E9D  72                 	db	114	;'r'
   653  007E9E  20                 	db	32
   654  007E9F  74                 	db	116	;'t'
   655  007EA0  68                 	db	104	;'h'
   656  007EA1  65                 	db	101	;'e'
   657  007EA2  20                 	db	32
   658  007EA3  70                 	db	112	;'p'
   659  007EA4  6C                 	db	108	;'l'
   660  007EA5  61                 	db	97	;'a'
   661  007EA6  63                 	db	99	;'c'
   662  007EA7  65                 	db	101	;'e'
   663  007EA8  20                 	db	32
   664  007EA9  70                 	db	112	;'p'
   665  007EAA  6F                 	db	111	;'o'
   666  007EAB  73                 	db	115	;'s'
   667  007EAC  69                 	db	105	;'i'
   668  007EAD  74                 	db	116	;'t'
   669  007EAE  69                 	db	105	;'i'
   670  007EAF  6F                 	db	111	;'o'
   671  007EB0  6E                 	db	110	;'n'
   672  007EB1  20                 	db	32
   673  007EB2  58                 	db	88	;'X'
   674  007EB3  20                 	db	32
   675  007EB4  28                 	db	40
   676  007EB5  31                 	db	49	;'1'
   677  007EB6  2D                 	db	45
   678  007EB7  32                 	db	50	;'2'
   679  007EB8  30                 	db	48	;'0'
   680  007EB9  29                 	db	41
   681  007EBA  3A                 	db	58	;':'
   682  007EBB  20                 	db	32
   683  007EBC  00                 	db	0
   684  007EBD                     STR_12:
   685  007EBD  0A                 	db	10
   686  007EBE  45                 	db	69	;'E'
   687  007EBF  6E                 	db	110	;'n'
   688  007EC0  74                 	db	116	;'t'
   689  007EC1  65                 	db	101	;'e'
   690  007EC2  72                 	db	114	;'r'
   691  007EC3  20                 	db	32
   692  007EC4  74                 	db	116	;'t'
   693  007EC5  68                 	db	104	;'h'
   694  007EC6  65                 	db	101	;'e'
   695  007EC7  20                 	db	32
   696  007EC8  70                 	db	112	;'p'
   697  007EC9  6C                 	db	108	;'l'
   698  007ECA  61                 	db	97	;'a'
   699  007ECB  63                 	db	99	;'c'
   700  007ECC  65                 	db	101	;'e'
   701  007ECD  20                 	db	32
   702  007ECE  70                 	db	112	;'p'
   703  007ECF  6F                 	db	111	;'o'
   704  007ED0  73                 	db	115	;'s'
   705  007ED1  69                 	db	105	;'i'
   706  007ED2  74                 	db	116	;'t'
   707  007ED3  69                 	db	105	;'i'
   708  007ED4  6F                 	db	111	;'o'
   709  007ED5  6E                 	db	110	;'n'
   710  007ED6  20                 	db	32
   711  007ED7  59                 	db	89	;'Y'
   712  007ED8  20                 	db	32
   713  007ED9  28                 	db	40
   714  007EDA  31                 	db	49	;'1'
   715  007EDB  2D                 	db	45
   716  007EDC  32                 	db	50	;'2'
   717  007EDD  30                 	db	48	;'0'
   718  007EDE  29                 	db	41
   719  007EDF  3A                 	db	58	;':'
   720  007EE0  20                 	db	32
   721  007EE1  00                 	db	0
   722  007EE2                     STR_8:
   723  007EE2  0A                 	db	10
   724  007EE3  45                 	db	69	;'E'
   725  007EE4  6E                 	db	110	;'n'
   726  007EE5  74                 	db	116	;'t'
   727  007EE6  65                 	db	101	;'e'
   728  007EE7  72                 	db	114	;'r'
   729  007EE8  20                 	db	32
   730  007EE9  74                 	db	116	;'t'
   731  007EEA  68                 	db	104	;'h'
   732  007EEB  65                 	db	101	;'e'
   733  007EEC  20                 	db	32
   734  007EED  70                 	db	112	;'p'
   735  007EEE  69                 	db	105	;'i'
   736  007EEF  63                 	db	99	;'c'
   737  007EF0  6B                 	db	107	;'k'
   738  007EF1  20                 	db	32
   739  007EF2  70                 	db	112	;'p'
   740  007EF3  6F                 	db	111	;'o'
   741  007EF4  73                 	db	115	;'s'
   742  007EF5  69                 	db	105	;'i'
   743  007EF6  74                 	db	116	;'t'
   744  007EF7  69                 	db	105	;'i'
   745  007EF8  6F                 	db	111	;'o'
   746  007EF9  6E                 	db	110	;'n'
   747  007EFA  20                 	db	32
   748  007EFB  58                 	db	88	;'X'
   749  007EFC  20                 	db	32
   750  007EFD  28                 	db	40
   751  007EFE  31                 	db	49	;'1'
   752  007EFF  2D                 	db	45
   753  007F00  32                 	db	50	;'2'
   754  007F01  30                 	db	48	;'0'
   755  007F02  29                 	db	41
   756  007F03  3A                 	db	58	;':'
   757  007F04  20                 	db	32
   758  007F05  00                 	db	0
   759  007F06                     STR_9:
   760  007F06  0A                 	db	10
   761  007F07  45                 	db	69	;'E'
   762  007F08  6E                 	db	110	;'n'
   763  007F09  74                 	db	116	;'t'
   764  007F0A  65                 	db	101	;'e'
   765  007F0B  72                 	db	114	;'r'
   766  007F0C  20                 	db	32
   767  007F0D  74                 	db	116	;'t'
   768  007F0E  68                 	db	104	;'h'
   769  007F0F  65                 	db	101	;'e'
   770  007F10  20                 	db	32
   771  007F11  70                 	db	112	;'p'
   772  007F12  69                 	db	105	;'i'
   773  007F13  63                 	db	99	;'c'
   774  007F14  6B                 	db	107	;'k'
   775  007F15  20                 	db	32
   776  007F16  70                 	db	112	;'p'
   777  007F17  6F                 	db	111	;'o'
   778  007F18  73                 	db	115	;'s'
   779  007F19  69                 	db	105	;'i'
   780  007F1A  74                 	db	116	;'t'
   781  007F1B  69                 	db	105	;'i'
   782  007F1C  6F                 	db	111	;'o'
   783  007F1D  6E                 	db	110	;'n'
   784  007F1E  20                 	db	32
   785  007F1F  59                 	db	89	;'Y'
   786  007F20  20                 	db	32
   787  007F21  28                 	db	40
   788  007F22  31                 	db	49	;'1'
   789  007F23  2D                 	db	45
   790  007F24  32                 	db	50	;'2'
   791  007F25  30                 	db	48	;'0'
   792  007F26  29                 	db	41
   793  007F27  3A                 	db	58	;':'
   794  007F28  20                 	db	32
   795  007F29  00                 	db	0
   796  007F2A                     STR_3:
   797  007F2A  0A                 	db	10
   798  007F2B  0A                 	db	10
   799  007F2C  52                 	db	82	;'R'
   800  007F2D  65                 	db	101	;'e'
   801  007F2E  74                 	db	116	;'t'
   802  007F2F  75                 	db	117	;'u'
   803  007F30  72                 	db	114	;'r'
   804  007F31  6E                 	db	110	;'n'
   805  007F32  69                 	db	105	;'i'
   806  007F33  6E                 	db	110	;'n'
   807  007F34  67                 	db	103	;'g'
   808  007F35  20                 	db	32
   809  007F36  74                 	db	116	;'t'
   810  007F37  6F                 	db	111	;'o'
   811  007F38  20                 	db	32
   812  007F39  69                 	db	105	;'i'
   813  007F3A  6E                 	db	110	;'n'
   814  007F3B  69                 	db	105	;'i'
   815  007F3C  74                 	db	116	;'t'
   816  007F3D  69                 	db	105	;'i'
   817  007F3E  61                 	db	97	;'a'
   818  007F3F  6C                 	db	108	;'l'
   819  007F40  20                 	db	32
   820  007F41  70                 	db	112	;'p'
   821  007F42  6F                 	db	111	;'o'
   822  007F43  73                 	db	115	;'s'
   823  007F44  69                 	db	105	;'i'
   824  007F45  74                 	db	116	;'t'
   825  007F46  69                 	db	105	;'i'
   826  007F47  6F                 	db	111	;'o'
   827  007F48  6E                 	db	110	;'n'
   828  007F49  2E                 	db	46
   829  007F4A  2E                 	db	46
   830  007F4B  00                 	db	0
   831  007F4C                     STR_4:
   832  007F4C  0A                 	db	10
   833  007F4D  54                 	db	84	;'T'
   834  007F4E  68                 	db	104	;'h'
   835  007F4F  65                 	db	101	;'e'
   836  007F50  20                 	db	32
   837  007F51  63                 	db	99	;'c'
   838  007F52  75                 	db	117	;'u'
   839  007F53  72                 	db	114	;'r'
   840  007F54  72                 	db	114	;'r'
   841  007F55  65                 	db	101	;'e'
   842  007F56  6E                 	db	110	;'n'
   843  007F57  74                 	db	116	;'t'
   844  007F58  20                 	db	32
   845  007F59  73                 	db	115	;'s'
   846  007F5A  65                 	db	101	;'e'
   847  007F5B  71                 	db	113	;'q'
   848  007F5C  75                 	db	117	;'u'
   849  007F5D  65                 	db	101	;'e'
   850  007F5E  6E                 	db	110	;'n'
   851  007F5F  63                 	db	99	;'c'
   852  007F60  65                 	db	101	;'e'
   853  007F61  20                 	db	32
   854  007F62  69                 	db	105	;'i'
   855  007F63  73                 	db	115	;'s'
   856  007F64  3A                 	db	58	;':'
   857  007F65  20                 	db	32
   858  007F66  00                 	db	0
   859  007F67                     STR_6:
   860  007F67  0A                 	db	10
   861  007F68  0A                 	db	10
   862  007F69  54                 	db	84	;'T'
   863  007F6A  68                 	db	104	;'h'
   864  007F6B  65                 	db	101	;'e'
   865  007F6C  20                 	db	32
   866  007F6D  43                 	db	67	;'C'
   867  007F6E  75                 	db	117	;'u'
   868  007F6F  72                 	db	114	;'r'
   869  007F70  72                 	db	114	;'r'
   870  007F71  65                 	db	101	;'e'
   871  007F72  6E                 	db	110	;'n'
   872  007F73  74                 	db	116	;'t'
   873  007F74  20                 	db	32
   874  007F75  73                 	db	115	;'s'
   875  007F76  65                 	db	101	;'e'
   876  007F77  71                 	db	113	;'q'
   877  007F78  75                 	db	117	;'u'
   878  007F79  65                 	db	101	;'e'
   879  007F7A  6E                 	db	110	;'n'
   880  007F7B  63                 	db	99	;'c'
   881  007F7C  65                 	db	101	;'e'
   882  007F7D  20                 	db	32
   883  007F7E  69                 	db	105	;'i'
   884  007F7F  73                 	db	115	;'s'
   885  007F80  3A                 	db	58	;':'
   886  007F81  00                 	db	0
   887  007F82                     STR_22:
   888  007F82  0A                 	db	10
   889  007F83  50                 	db	80	;'P'
   890  007F84  6C                 	db	108	;'l'
   891  007F85  61                 	db	97	;'a'
   892  007F86  63                 	db	99	;'c'
   893  007F87  69                 	db	105	;'i'
   894  007F88  6E                 	db	110	;'n'
   895  007F89  67                 	db	103	;'g'
   896  007F8A  20                 	db	32
   897  007F8B  63                 	db	99	;'c'
   898  007F8C  6F                 	db	111	;'o'
   899  007F8D  6D                 	db	109	;'m'
   900  007F8E  70                 	db	112	;'p'
   901  007F8F  6F                 	db	111	;'o'
   902  007F90  6E                 	db	110	;'n'
   903  007F91  65                 	db	101	;'e'
   904  007F92  6E                 	db	110	;'n'
   905  007F93  74                 	db	116	;'t'
   906  007F94  3A                 	db	58	;':'
   907  007F95  20                 	db	32
   908  007F96  00                 	db	0
   909  007F97                     STR_21:
   910  007F97  0A                 	db	10
   911  007F98  50                 	db	80	;'P'
   912  007F99  69                 	db	105	;'i'
   913  007F9A  63                 	db	99	;'c'
   914  007F9B  6B                 	db	107	;'k'
   915  007F9C  69                 	db	105	;'i'
   916  007F9D  6E                 	db	110	;'n'
   917  007F9E  67                 	db	103	;'g'
   918  007F9F  20                 	db	32
   919  007FA0  63                 	db	99	;'c'
   920  007FA1  6F                 	db	111	;'o'
   921  007FA2  6D                 	db	109	;'m'
   922  007FA3  70                 	db	112	;'p'
   923  007FA4  6F                 	db	111	;'o'
   924  007FA5  6E                 	db	110	;'n'
   925  007FA6  65                 	db	101	;'e'
   926  007FA7  6E                 	db	110	;'n'
   927  007FA8  74                 	db	116	;'t'
   928  007FA9  3A                 	db	58	;':'
   929  007FAA  20                 	db	32
   930  007FAB  00                 	db	0
   931  007FAC                     STR_2:
   932  007FAC  0A                 	db	10
   933  007FAD  0A                 	db	10
   934  007FAE  53                 	db	83	;'S'
   935  007FAF  74                 	db	116	;'t'
   936  007FB0  61                 	db	97	;'a'
   937  007FB1  72                 	db	114	;'r'
   938  007FB2  74                 	db	116	;'t'
   939  007FB3  69                 	db	105	;'i'
   940  007FB4  6E                 	db	110	;'n'
   941  007FB5  67                 	db	103	;'g'
   942  007FB6  20                 	db	32
   943  007FB7  73                 	db	115	;'s'
   944  007FB8  65                 	db	101	;'e'
   945  007FB9  71                 	db	113	;'q'
   946  007FBA  75                 	db	117	;'u'
   947  007FBB  65                 	db	101	;'e'
   948  007FBC  6E                 	db	110	;'n'
   949  007FBD  63                 	db	99	;'c'
   950  007FBE  65                 	db	101	;'e'
   951  007FBF  3A                 	db	58	;':'
   952  007FC0  00                 	db	0
   953  007FC1                     STR_14:
   954  007FC1  0A                 	db	10
   955  007FC2  0A                 	db	10
   956  007FC3  43                 	db	67	;'C'
   957  007FC4  6F                 	db	111	;'o'
   958  007FC5  6D                 	db	109	;'m'
   959  007FC6  70                 	db	112	;'p'
   960  007FC7  6F                 	db	111	;'o'
   961  007FC8  6E                 	db	110	;'n'
   962  007FC9  65                 	db	101	;'e'
   963  007FCA  6E                 	db	110	;'n'
   964  007FCB  74                 	db	116	;'t'
   965  007FCC  20                 	db	32
   966  007FCD  41                 	db	65	;'A'
   967  007FCE  64                 	db	100	;'d'
   968  007FCF  64                 	db	100	;'d'
   969  007FD0  65                 	db	101	;'e'
   970  007FD1  64                 	db	100	;'d'
   971  007FD2  3A                 	db	58	;':'
   972  007FD3  20                 	db	32
   973  007FD4  00                 	db	0
   974  007FD5                     STR_16:
   975  007FD5  0A                 	db	10
   976  007FD6  63                 	db	99	;'c'
   977  007FD7  6F                 	db	111	;'o'
   978  007FD8  6D                 	db	109	;'m'
   979  007FD9  70                 	db	112	;'p'
   980  007FDA  6F                 	db	111	;'o'
   981  007FDB  6E                 	db	110	;'n'
   982  007FDC  65                 	db	101	;'e'
   983  007FDD  6E                 	db	110	;'n'
   984  007FDE  74                 	db	116	;'t'
   985  007FDF  20                 	db	32
   986  007FE0  72                 	db	114	;'r'
   987  007FE1  65                 	db	101	;'e'
   988  007FE2  6D                 	db	109	;'m'
   989  007FE3  6F                 	db	111	;'o'
   990  007FE4  76                 	db	118	;'v'
   991  007FE5  65                 	db	101	;'e'
   992  007FE6  64                 	db	100	;'d'
   993  007FE7  00                 	db	0
   994  007FE8                     STR_18:
   995  007FE8  0A                 	db	10
   996  007FE9  43                 	db	67	;'C'
   997  007FEA  6F                 	db	111	;'o'
   998  007FEB  6D                 	db	109	;'m'
   999  007FEC  70                 	db	112	;'p'
  1000  007FED  6F                 	db	111	;'o'
  1001  007FEE  6E                 	db	110	;'n'
  1002  007FEF  65                 	db	101	;'e'
  1003  007FF0  6E                 	db	110	;'n'
  1004  007FF1  74                 	db	116	;'t'
  1005  007FF2  20                 	db	32
  1006  007FF3  00                 	db	0
  1007  007FF4                     STR_19:
  1008  007FF4  20                 	db	32
  1009  007FF5  6D                 	db	109	;'m'
  1010  007FF6  69                 	db	105	;'i'
  1011  007FF7  73                 	db	115	;'s'
  1012  007FF8  73                 	db	115	;'s'
  1013  007FF9  69                 	db	105	;'i'
  1014  007FFA  6E                 	db	110	;'n'
  1015  007FFB  67                 	db	103	;'g'
  1016  007FFC  21                 	db	33
  1017  007FFD  00                 	db	0
  1018  007FFE  00                 	db	0	; dummy byte at the end
  1019  0000                     
  1020                           	psect	nvCOMRAM
  1021  000074                     __pnvCOMRAM:
  1022                           	callstack 0
  1023  000074                     _New_char_RX:
  1024                           	callstack 0
  1025  000074                     	ds	1
  1026  0000                     _RCREG	set	4014
  1027  0000                     _PORTB	set	3969
  1028  0000                     _LATCbits	set	3979
  1029  0000                     _TXREG	set	4013
  1030  0000                     _RCSTAbits	set	4011
  1031  0000                     _TXSTAbits	set	4012
  1032  0000                     _SPBRG	set	4015
  1033  0000                     _INTCON3bits	set	4080
  1034  0000                     _INTCON3	set	4080
  1035  0000                     _INTCON2	set	4081
  1036  0000                     _INTCONbits	set	4082
  1037  0000                     _PIE1bits	set	3997
  1038  0000                     _PIR1bits	set	3998
  1039  0000                     _TMR1L	set	4046
  1040  0000                     _TMR1H	set	4047
  1041  0000                     _T1CONbits	set	4045
  1042  0000                     _TMR0L	set	4054
  1043  0000                     _TMR0H	set	4055
  1044  0000                     _T0CONbits	set	4053
  1045  0000                     _TRISCbits	set	3988
  1046  0000                     _PORTC	set	3970
  1047  0000                     _LATC	set	3979
  1048  0000                     _PORTD	set	3971
  1049  0000                     _PORTA	set	3968
  1050  0000                     _TRISB	set	3987
  1051  0000                     _TRISA	set	3986
  1052  0000                     _TRISD	set	3989
  1053  0000                     _RCIF	set	31989
  1054                           
  1055                           ; #config settings
  1056                           
  1057                           	psect	cinit
  1058  0032E6                     __pcinit:
  1059                           	callstack 0
  1060  0032E6                     start_initialization:
  1061                           	callstack 0
  1062  0032E6                     __initialization:
  1063                           	callstack 0
  1064                           
  1065                           ; Initialize objects allocated to BANK0 (30 bytes)
  1066                           ; load TBLPTR registers with __pidataBANK0
  1067  0032E6  0E22               	movlw	low __pidataBANK0
  1068  0032E8  6EF6               	movwf	tblptrl,c
  1069  0032EA  0E36               	movlw	high __pidataBANK0
  1070  0032EC  6EF7               	movwf	tblptrh,c
  1071  0032EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1072  0032F0  6EF8               	movwf	tblptru,c
  1073  0032F2  EE00  F0A1         	lfsr	0,__pdataBANK0
  1074  0032F6  EE10 F01E          	lfsr	1,30
  1075  0032FA                     copy_data0:
  1076  0032FA  0009               	tblrd		*+
  1077  0032FC  CFF5 FFEE          	movff	tablat,postinc0
  1078  003300  50E5               	movf	postdec1,w,c
  1079  003302  50E1               	movf	fsr1l,w,c
  1080  003304  E1FA               	bnz	copy_data0
  1081                           
  1082                           ; Initialize objects allocated to COMRAM (1 bytes)
  1083                           ; load TBLPTR registers with __pidataCOMRAM
  1084  003306  0E56               	movlw	low __pidataCOMRAM
  1085  003308  6EF6               	movwf	tblptrl,c
  1086  00330A  0E36               	movlw	high __pidataCOMRAM
  1087  00330C  6EF7               	movwf	tblptrh,c
  1088  00330E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1089  003310  6EF8               	movwf	tblptru,c
  1090  003312  0009               	tblrd		*+	;fetch initializer
  1091  003314  CFF5 F075          	movff	tablat,__pdataCOMRAM
  1092                           
  1093                           ; Clear objects allocated to BANK0 (26 bytes)
  1094  003318  EE00  F0BF         	lfsr	0,__pbssBANK0
  1095  00331C  0E1A               	movlw	26
  1096  00331E                     clear_0:
  1097  00331E  6AEE               	clrf	postinc0,c
  1098  003320  06E8               	decf	wreg,f,c
  1099  003322  E1FD               	bnz	clear_0
  1100                           
  1101                           ; Clear objects allocated to COMRAM (25 bytes)
  1102  003324  EE00  F05B         	lfsr	0,__pbssCOMRAM
  1103  003328  0E19               	movlw	25
  1104  00332A                     clear_1:
  1105  00332A  6AEE               	clrf	postinc0,c
  1106  00332C  06E8               	decf	wreg,f,c
  1107  00332E  E1FD               	bnz	clear_1
  1108  003330                     end_of_initialization:
  1109                           	callstack 0
  1110  003330                     __end_of__initialization:
  1111                           	callstack 0
  1112  003330  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1113  003332  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1114  003334  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1115  003336  6EF8               	movwf	tblptru,c
  1116  003338  0100               	movlb	0
  1117  00333A  EF88  F01A         	goto	_main	;jump to C main() function
  1118                           
  1119                           	psect	bssCOMRAM
  1120  00005B                     __pbssCOMRAM:
  1121                           	callstack 0
  1122  00005B                     _Steps:
  1123                           	callstack 0
  1124  00005B                     	ds	2
  1125  00005D                     _Angle_diff:
  1126                           	callstack 0
  1127  00005D                     	ds	2
  1128  00005F                     _Y_diff:
  1129                           	callstack 0
  1130  00005F                     	ds	2
  1131  000061                     _X_diff:
  1132                           	callstack 0
  1133  000061                     	ds	2
  1134  000063                     _Place_Angle:
  1135                           	callstack 0
  1136  000063                     	ds	2
  1137  000065                     _Pick_Angle:
  1138                           	callstack 0
  1139  000065                     	ds	2
  1140  000067                     _Y_Place:
  1141                           	callstack 0
  1142  000067                     	ds	2
  1143  000069                     _Y_Pick:
  1144                           	callstack 0
  1145  000069                     	ds	2
  1146  00006B                     _X_Place:
  1147                           	callstack 0
  1148  00006B                     	ds	2
  1149  00006D                     _X_Pick:
  1150                           	callstack 0
  1151  00006D                     	ds	2
  1152  00006F                     _Twist_dir:
  1153                           	callstack 0
  1154  00006F                     	ds	1
  1155  000070                     _Y_dir:
  1156                           	callstack 0
  1157  000070                     	ds	1
  1158  000071                     _X_dir:
  1159                           	callstack 0
  1160  000071                     	ds	1
  1161  000072                     _stop:
  1162                           	callstack 0
  1163  000072                     	ds	1
  1164  000073                     _component_present:
  1165                           	callstack 0
  1166  000073                     	ds	1
  1167                           
  1168                           	psect	dataCOMRAM
  1169  000075                     __pdataCOMRAM:
  1170                           	callstack 0
  1171  000075                     _new_TMR1H@main$F795:
  1172                           	callstack 0
  1173  000075                     	ds	1
  1174                           
  1175                           	psect	bssBANK0
  1176  0000BF                     __pbssBANK0:
  1177                           	callstack 0
  1178  0000BF                     roundf@F528:
  1179                           	callstack 0
  1180  0000BF                     	ds	4
  1181  0000C3                     _angle_diff:
  1182                           	callstack 0
  1183  0000C3                     	ds	2
  1184  0000C5                     _Place_Angle_D:
  1185                           	callstack 0
  1186  0000C5                     	ds	2
  1187  0000C7                     _Y_Place_D:
  1188                           	callstack 0
  1189  0000C7                     	ds	2
  1190  0000C9                     _X_Place_D:
  1191                           	callstack 0
  1192  0000C9                     	ds	2
  1193  0000CB                     _Pick_Angle_D:
  1194                           	callstack 0
  1195  0000CB                     	ds	2
  1196  0000CD                     _Y_Pick_D:
  1197                           	callstack 0
  1198  0000CD                     	ds	2
  1199  0000CF                     _X_Pick_D:
  1200                           	callstack 0
  1201  0000CF                     	ds	2
  1202  0000D1                     _Step_Angle:
  1203                           	callstack 0
  1204  0000D1                     	ds	2
  1205  0000D3                     _Step_Z:
  1206                           	callstack 0
  1207  0000D3                     	ds	2
  1208  0000D5                     _Step_Y:
  1209                           	callstack 0
  1210  0000D5                     	ds	2
  1211  0000D7                     _Step_X:
  1212                           	callstack 0
  1213  0000D7                     	ds	2
  1214                           
  1215                           	psect	dataBANK0
  1216  0000A1                     __pdataBANK0:
  1217                           	callstack 0
  1218  0000A1                     	ds	4
  1219  0000A5                     	ds	4
  1220  0000A9                     add_component@F3136:
  1221                           	callstack 0
  1222  0000A9                     	ds	2
  1223  0000AB                     _steps_per_unit:
  1224                           	callstack 0
  1225  0000AB                     	ds	2
  1226  0000AD                     _func:
  1227                           	callstack 0
  1228  0000AD                     	ds	1
  1229  0000AE                     _new_TMR1L@main$F796:
  1230                           	callstack 0
  1231  0000AE                     	ds	1
  1232  0000AF                     	ds	1
  1233  0000B0                     	ds	1
  1234  0000B1                     _input_str:
  1235                           	callstack 0
  1236  0000B1                     	ds	10
  1237  0000BB                     _sequence:
  1238                           	callstack 0
  1239  0000BB                     	ds	4
  1240                           
  1241                           	psect	cstackBANK0
  1242  000080                     __pcstackBANK0:
  1243                           	callstack 0
  1244  000080                     ??___fltol:
  1245  000080                     pick_and_place@i:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x0
  1249  000080                     	ds	2
  1250  000082                     _pick_and_place$908:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x2
  1254  000082                     	ds	2
  1255  000084                     ___fltol@sign1:
  1256                           	callstack 0
  1257  000084                     pick_and_place@i_909:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x4
  1261  000084                     	ds	1
  1262  000085                     ___fltol@exp1:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x5
  1266  000085                     	ds	1
  1267  000086                     _pick_and_place$911:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x6
  1271  000086                     	ds	2
  1272  000088                     pick_and_place@i_912:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x8
  1276  000088                     	ds	2
  1277  00008A                     _pick_and_place$914:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0xA
  1281  00008A                     	ds	2
  1282  00008C                     pick_and_place@i_916:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0xC
  1286  00008C                     	ds	2
  1287  00008E                     pick_and_place@i_919:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0xE
  1291  00008E                     	ds	2
  1292  000090                     pick_and_place@i_921:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x10
  1296  000090                     	ds	2
  1297  000092                     _pick_and_place$922:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x12
  1301  000092                     	ds	2
  1302  000094                     pick_and_place@i_923:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x14
  1306  000094                     	ds	2
  1307  000096                     _pick_and_place$924:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x16
  1311  000096                     	ds	2
  1312  000098                     pick_and_place@i_925:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x18
  1316  000098                     	ds	2
  1317  00009A                     _pick_and_place$926:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x1A
  1321  00009A                     	ds	2
  1322  00009C                     pick_and_place@i_927:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x1C
  1326  00009C                     	ds	2
  1327  00009E                     pick_and_place@i_928:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x1E
  1331  00009E                     	ds	2
  1332  0000A0                     pick_and_place@Componnt:
  1333                           	callstack 0
  1334                           
  1335                           ; 1 bytes @ 0x20
  1336  0000A0                     	ds	1
  1337                           
  1338                           	psect	cstackCOMRAM
  1339  000001                     __pcstackCOMRAM:
  1340                           	callstack 0
  1341  000001                     set_new_pos@nTMR1L:
  1342                           	callstack 0
  1343                           
  1344                           ; 1 bytes @ 0x0
  1345  000001                     	ds	1
  1346  000002                     set_new_pos@nTMR1H:
  1347                           	callstack 0
  1348                           
  1349                           ; 1 bytes @ 0x1
  1350  000002                     	ds	1
  1351  000003                     ??_Rx_char_USART:
  1352                           
  1353                           ; 1 bytes @ 0x2
  1354  000003                     	ds	5
  1355  000008                     Rx_char_USART@i:
  1356                           	callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x7
  1359  000008                     	ds	2
  1360  00000A                     ?_strlen:
  1361                           	callstack 0
  1362  00000A                     ?_isspace:
  1363                           	callstack 0
  1364  00000A                     ?_isdigit:
  1365                           	callstack 0
  1366  00000A                     ?___wmul:
  1367                           	callstack 0
  1368  00000A                     ?___fladd:
  1369                           	callstack 0
  1370  00000A                     ?___flmul:
  1371                           	callstack 0
  1372  00000A                     ?___flneg:
  1373                           	callstack 0
  1374  00000A                     ?___xxtofl:
  1375                           	callstack 0
  1376  00000A                     print_char@chr:
  1377                           	callstack 0
  1378  00000A                     Tweezer@action:
  1379                           	callstack 0
  1380  00000A                     fetch_coordinates@Componnt:
  1381                           	callstack 0
  1382  00000A                     print_string@strng:
  1383                           	callstack 0
  1384  00000A                     ms_delay@val:
  1385                           	callstack 0
  1386  00000A                     ___wmul@multiplier:
  1387                           	callstack 0
  1388  00000A                     isdigit@c:
  1389                           	callstack 0
  1390  00000A                     isspace@c:
  1391                           	callstack 0
  1392  00000A                     strlen@s:
  1393                           	callstack 0
  1394  00000A                     ___flneg@f1:
  1395                           	callstack 0
  1396  00000A                     ___fladd@b:
  1397                           	callstack 0
  1398  00000A                     ___flmul@b:
  1399                           	callstack 0
  1400  00000A                     ___xxtofl@val:
  1401                           	callstack 0
  1402                           
  1403                           ; 4 bytes @ 0x9
  1404  00000A                     	ds	2
  1405  00000C                     ??_isspace:
  1406  00000C                     ??_isdigit:
  1407  00000C                     ??_print_string:
  1408  00000C                     ms_delay@i:
  1409                           	callstack 0
  1410  00000C                     ___wmul@multiplicand:
  1411                           	callstack 0
  1412  00000C                     strlen@a:
  1413                           	callstack 0
  1414                           
  1415                           ; 2 bytes @ 0xB
  1416  00000C                     	ds	2
  1417  00000E                     ??___xxtofl:
  1418  00000E                     ?___memrchr:
  1419                           	callstack 0
  1420  00000E                     print_string@i:
  1421                           	callstack 0
  1422  00000E                     ms_delay@j:
  1423                           	callstack 0
  1424  00000E                     ___wmul@product:
  1425                           	callstack 0
  1426  00000E                     memmove@d1:
  1427                           	callstack 0
  1428  00000E                     strcpy@dest:
  1429                           	callstack 0
  1430  00000E                     ___memrchr@m:
  1431                           	callstack 0
  1432  00000E                     ___fladd@a:
  1433                           	callstack 0
  1434  00000E                     ___flmul@a:
  1435                           	callstack 0
  1436                           
  1437                           ; 4 bytes @ 0xD
  1438  00000E                     	ds	2
  1439  000010                     ??_change_sequence:
  1440  000010                     ??_check_component:
  1441  000010                     X_axis@direction:
  1442                           	callstack 0
  1443  000010                     Y_axis@direction:
  1444                           	callstack 0
  1445  000010                     Z_axis@direction:
  1446                           	callstack 0
  1447  000010                     Twister@direction:
  1448                           	callstack 0
  1449  000010                     _isspace$1410:
  1450                           	callstack 0
  1451  000010                     memmove@s1:
  1452                           	callstack 0
  1453  000010                     strcpy@src:
  1454                           	callstack 0
  1455  000010                     ___memrchr@c:
  1456                           	callstack 0
  1457                           
  1458                           ; 2 bytes @ 0xF
  1459  000010                     	ds	1
  1460  000011                     ??_return_to_initial:
  1461  000011                     ?_atoi:
  1462                           	callstack 0
  1463  000011                     atoi@s:
  1464                           	callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x10
  1467  000011                     	ds	1
  1468  000012                     ??___fladd:
  1469  000012                     ??___flmul:
  1470  000012                     check_component@Compnt:
  1471                           	callstack 0
  1472  000012                     ___xxtofl@sign:
  1473                           	callstack 0
  1474  000012                     return_to_initial@i:
  1475                           	callstack 0
  1476  000012                     memmove@n:
  1477                           	callstack 0
  1478  000012                     strcpy@s:
  1479                           	callstack 0
  1480  000012                     ___memrchr@n:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x11
  1484  000012                     	ds	1
  1485  000013                     ??_atoi:
  1486  000013                     ___xxtofl@exp:
  1487                           	callstack 0
  1488  000013                     change_sequence@i:
  1489                           	callstack 0
  1490  000013                     check_component@j:
  1491                           	callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x12
  1494  000013                     	ds	1
  1495  000014                     ??_memmove:
  1496  000014                     ??___memrchr:
  1497  000014                     return_to_initial@i_931:
  1498                           	callstack 0
  1499  000014                     strcpy@d:
  1500                           	callstack 0
  1501  000014                     ___xxtofl@arg:
  1502                           	callstack 0
  1503                           
  1504                           ; 4 bytes @ 0x13
  1505  000014                     	ds	2
  1506  000016                     ___fladd@signs:
  1507                           	callstack 0
  1508  000016                     ___flmul@sign:
  1509                           	callstack 0
  1510  000016                     return_to_initial@i_932:
  1511                           	callstack 0
  1512  000016                     memmove@d:
  1513                           	callstack 0
  1514  000016                     strcat@dest:
  1515                           	callstack 0
  1516  000016                     ___memrchr@s:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x15
  1520  000016                     	ds	1
  1521  000017                     ___fladd@aexp:
  1522                           	callstack 0
  1523  000017                     atoi@neg:
  1524                           	callstack 0
  1525  000017                     ___flmul@grs:
  1526                           	callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x16
  1529  000017                     	ds	1
  1530  000018                     ?_strrchr:
  1531                           	callstack 0
  1532  000018                     ?___fldiv:
  1533                           	callstack 0
  1534  000018                     ___fladd@bexp:
  1535                           	callstack 0
  1536  000018                     return_to_initial@i_933:
  1537                           	callstack 0
  1538  000018                     memmove@s:
  1539                           	callstack 0
  1540  000018                     strcat@src:
  1541                           	callstack 0
  1542  000018                     strrchr@s:
  1543                           	callstack 0
  1544  000018                     ___fldiv@b:
  1545                           	callstack 0
  1546                           
  1547                           ; 4 bytes @ 0x17
  1548  000018                     	ds	1
  1549  000019                     ___fladd@grs:
  1550                           	callstack 0
  1551  000019                     _atoi$1392:
  1552                           	callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x18
  1555  000019                     	ds	1
  1556  00001A                     ?___flsub:
  1557                           	callstack 0
  1558  00001A                     strrchr@c:
  1559                           	callstack 0
  1560  00001A                     ___flsub@b:
  1561                           	callstack 0
  1562                           
  1563                           ; 4 bytes @ 0x19
  1564  00001A                     	ds	1
  1565  00001B                     ___flmul@aexp:
  1566                           	callstack 0
  1567  00001B                     _atoi$1394:
  1568                           	callstack 0
  1569                           
  1570                           ; 2 bytes @ 0x1A
  1571  00001B                     	ds	1
  1572  00001C                     remove_component@rm_comp:
  1573                           	callstack 0
  1574  00001C                     ___flmul@bexp:
  1575                           	callstack 0
  1576  00001C                     ___fldiv@a:
  1577                           	callstack 0
  1578                           
  1579                           ; 4 bytes @ 0x1B
  1580  00001C                     	ds	1
  1581  00001D                     _atoi$1393:
  1582                           	callstack 0
  1583  00001D                     remove_component@ptr:
  1584                           	callstack 0
  1585  00001D                     ___flmul@prod:
  1586                           	callstack 0
  1587                           
  1588                           ; 4 bytes @ 0x1C
  1589  00001D                     	ds	1
  1590  00001E                     atoi@n:
  1591                           	callstack 0
  1592  00001E                     ___flsub@a:
  1593                           	callstack 0
  1594                           
  1595                           ; 4 bytes @ 0x1D
  1596  00001E                     	ds	1
  1597  00001F                     remove_component@indxToDel:
  1598                           	callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x1E
  1601  00001F                     	ds	1
  1602  000020                     ??___fldiv:
  1603  000020                     add_component@add_componnt:
  1604                           	callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x1F
  1607  000020                     	ds	1
  1608  000021                     ___flmul@temp:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x20
  1612  000021                     	ds	1
  1613  000022                     
  1614                           ; 1 bytes @ 0x21
  1615  000022                     	ds	2
  1616  000024                     ___fldiv@rem:
  1617                           	callstack 0
  1618                           
  1619                           ; 4 bytes @ 0x23
  1620  000024                     	ds	4
  1621  000028                     ___fldiv@sign:
  1622                           	callstack 0
  1623                           
  1624                           ; 1 bytes @ 0x27
  1625  000028                     	ds	1
  1626  000029                     ___fldiv@new_exp:
  1627                           	callstack 0
  1628                           
  1629                           ; 2 bytes @ 0x28
  1630  000029                     	ds	2
  1631  00002B                     ___fldiv@grs:
  1632                           	callstack 0
  1633                           
  1634                           ; 4 bytes @ 0x2A
  1635  00002B                     	ds	4
  1636  00002F                     ___fldiv@bexp:
  1637                           	callstack 0
  1638                           
  1639                           ; 1 bytes @ 0x2E
  1640  00002F                     	ds	1
  1641  000030                     ___fldiv@aexp:
  1642                           	callstack 0
  1643                           
  1644                           ; 1 bytes @ 0x2F
  1645  000030                     	ds	1
  1646  000031                     ___flge@ff1:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x30
  1650  000031                     	ds	4
  1651  000035                     ___flge@ff2:
  1652                           	callstack 0
  1653                           
  1654                           ; 4 bytes @ 0x34
  1655  000035                     	ds	4
  1656  000039                     ??___flge:
  1657                           
  1658                           ; 1 bytes @ 0x38
  1659  000039                     	ds	4
  1660  00003D                     ??_pick_and_place:
  1661  00003D                     ?_roundf:
  1662                           	callstack 0
  1663  00003D                     roundf@x:
  1664                           	callstack 0
  1665                           
  1666                           ; 4 bytes @ 0x3C
  1667  00003D                     	ds	2
  1668  00003F                     ??_start_up_menu:
  1669                           
  1670                           ; 1 bytes @ 0x3E
  1671  00003F                     	ds	2
  1672  000041                     ??_roundf:
  1673  000041                     start_up_menu@i:
  1674                           	callstack 0
  1675                           
  1676                           ; 2 bytes @ 0x40
  1677  000041                     	ds	4
  1678  000045                     _roundf$1679:
  1679                           	callstack 0
  1680                           
  1681                           ; 4 bytes @ 0x44
  1682  000045                     	ds	4
  1683  000049                     roundf@e:
  1684                           	callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x48
  1687  000049                     	ds	2
  1688  00004B                     _roundf$1678:
  1689                           	callstack 0
  1690                           
  1691                           ; 4 bytes @ 0x4A
  1692  00004B                     	ds	4
  1693  00004F                     roundf@u:
  1694                           	callstack 0
  1695                           
  1696                           ; 4 bytes @ 0x4E
  1697  00004F                     	ds	4
  1698  000053                     roundf@y:
  1699                           	callstack 0
  1700                           
  1701                           ; 4 bytes @ 0x52
  1702  000053                     	ds	4
  1703  000057                     ?___fltol:
  1704                           	callstack 0
  1705  000057                     ___fltol@f1:
  1706                           	callstack 0
  1707                           
  1708                           ; 4 bytes @ 0x56
  1709  000057                     	ds	4
  1710  00005B                     
  1711                           ; 1 bytes @ 0x5A
  1712 ;;
  1713 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1714 ;;
  1715 ;; *************** function _main *****************
  1716 ;; Defined at:
  1717 ;;		line 205 in file "main.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1731 ;;      Params:         0       0       0       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0
  1734 ;;      Totals:         0       0       0       0       0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels required when called: 6
  1737 ;; This function calls:
  1738 ;;		_init_PORTS
  1739 ;;		_init_Timers
  1740 ;;		_init_USART
  1741 ;;		_init_interrupts
  1742 ;;		_start_up_menu
  1743 ;; This function is called by:
  1744 ;;		Startup code after reset
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text0
  1749  003510                     __ptext0:
  1750                           	callstack 0
  1751  003510                     _main:
  1752                           	callstack 25
  1753  003510  FFFF               	dw	65535	; assembler added errata NOP
  1754                           
  1755                           ;main.c: 207:     init_PORTS();
  1756  003512  ECDD  F01A         	call	_init_PORTS	;wreg free
  1757  003516                     
  1758                           ;main.c: 208:     init_USART();
  1759  003516  EC4B  F01A         	call	_init_USART	;wreg free
  1760  00351A                     
  1761                           ;main.c: 209:     init_interrupts();
  1762  00351A  EC01  F01B         	call	_init_interrupts	;wreg free
  1763  00351E                     
  1764                           ;main.c: 210:     init_Timers();
  1765  00351E  ECC8  F01A         	call	_init_Timers	;wreg free
  1766  003522                     
  1767                           ;main.c: 212:     (INTCONbits.GIE = 1);
  1768  003522  8EF2               	bsf	242,7,c	;volatile
  1769  003524                     
  1770                           ;main.c: 213:     T0CONbits.TMR0ON = 1;
  1771  003524  8ED5               	bsf	213,7,c	;volatile
  1772  003526                     
  1773                           ;main.c: 214:  T1CONbits.TMR1ON = 1;
  1774  003526  80CD               	bsf	205,0,c	;volatile
  1775  003528                     
  1776                           ;main.c: 215:  LATCbits.LC2 = 1;
  1777  003528  848B               	bsf	139,2,c	;volatile
  1778  00352A                     l5533:
  1779  00352A  FFFF               	dw	65535	; assembler added errata NOP
  1780                           
  1781                           ;main.c: 218:         New_char_RX=0;
  1782  00352C  0E00               	movlw	0
  1783  00352E  6E74               	movwf	_New_char_RX^0,c
  1784  003530                     
  1785                           ;main.c: 219:         start_up_menu();
  1786  003530  EC03  F011         	call	_start_up_menu	;wreg free
  1787  003534  EF95  F01A         	goto	l5533
  1788  003538  EFC7  F000         	goto	start
  1789  00353C                     __end_of_main:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _start_up_menu *****************
  1793 ;; Defined at:
  1794 ;;		line 225 in file "main.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  i               2   64[COMRAM] int 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1808 ;;      Params:         0       0       0       0       0       0       0
  1809 ;;      Locals:         2       0       0       0       0       0       0
  1810 ;;      Temps:          2       0       0       0       0       0       0
  1811 ;;      Totals:         4       0       0       0       0       0       0
  1812 ;;Total ram usage:        4 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 5
  1815 ;; This function calls:
  1816 ;;		_add_component
  1817 ;;		_change_sequence
  1818 ;;		_pick_and_place
  1819 ;;		_print_string
  1820 ;;		_remove_component
  1821 ;;		_return_to_initial
  1822 ;;		_strlen
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text1
  1829  002206                     __ptext1:
  1830                           	callstack 0
  1831  002206                     _start_up_menu:
  1832                           	callstack 0
  1833  002206  FFFF               	dw	65535	; assembler added errata NOP
  1834  002208                     
  1835                           ;main.c: 227:     print_string("\n\n1. Start Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component\n5. Return to Initial Position");
  1836  002208  0ECD               	movlw	low STR_1
  1837  00220A  6E0A               	movwf	print_string@strng^0,c
  1838  00220C  0E7C               	movlw	high STR_1
  1839  00220E  6E0B               	movwf	(print_string@strng+1)^0,c
  1840  002210  ECFE  F017         	call	_print_string	;wreg free
  1841  002214                     l5471:
  1842  002214  FFFF               	dw	65535	; assembler added errata NOP
  1843                           
  1844                           ;main.c: 230:         if(New_char_RX){
  1845  002216  5074               	movf	_New_char_RX^0,w,c
  1846  002218  B4D8               	btfsc	status,2,c
  1847  00221A  EF11  F011         	goto	u6191
  1848  00221E  EF14  F011         	goto	u6190
  1849  002222                     u6191:
  1850  002222  FFFF               	dw	65535	; assembler added errata NOP
  1851  002224  EF0A  F011         	goto	l5471
  1852  002228                     u6190:
  1853  002228  FFFF               	dw	65535	; assembler added errata NOP
  1854  00222A                     
  1855                           ;main.c: 231:             New_char_RX=0;
  1856  00222A  0E00               	movlw	0
  1857  00222C  6E74               	movwf	_New_char_RX^0,c
  1858  00222E                     
  1859                           ;main.c: 232:             func = input_str[0];
  1860  00222E  C0B1  F0AD         	movff	_input_str,_func	;volatile
  1861                           
  1862                           ;main.c: 233:             switch(func){
  1863  002232  EF8F  F011         	goto	l5511
  1864  002236                     l5477:
  1865  002236  FFFF               	dw	65535	; assembler added errata NOP
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;main.c: 236:                     print_string("\n\nStarting sequence:");
  1869  002238  0EAC               	movlw	low STR_2
  1870  00223A  6E0A               	movwf	print_string@strng^0,c
  1871  00223C  0E7F               	movlw	high STR_2
  1872  00223E  6E0B               	movwf	(print_string@strng+1)^0,c
  1873  002240  ECFE  F017         	call	_print_string	;wreg free
  1874                           
  1875                           ;main.c: 237:                     print_string(sequence);
  1876  002244  0EBB               	movlw	low _sequence
  1877  002246  6E0A               	movwf	print_string@strng^0,c
  1878  002248  0E00               	movlw	high _sequence
  1879  00224A  6E0B               	movwf	(print_string@strng+1)^0,c
  1880  00224C  ECFE  F017         	call	_print_string	;wreg free
  1881  002250                     
  1882                           ;main.c: 238:                     return_to_initial();
  1883  002250  EC06  F016         	call	_return_to_initial	;wreg free
  1884  002254                     
  1885                           ;main.c: 239:                     X_diff=0;
  1886  002254  0E00               	movlw	0
  1887  002256  6E62               	movwf	(_X_diff+1)^0,c
  1888  002258  0E00               	movlw	0
  1889  00225A  6E61               	movwf	_X_diff^0,c
  1890  00225C                     
  1891                           ;main.c: 240:                     Y_diff=0;
  1892  00225C  0E00               	movlw	0
  1893  00225E  6E60               	movwf	(_Y_diff+1)^0,c
  1894  002260  0E00               	movlw	0
  1895  002262  6E5F               	movwf	_Y_diff^0,c
  1896  002264                     
  1897                           ;main.c: 241:                     Angle_diff=0;
  1898  002264  0E00               	movlw	0
  1899  002266  6E5E               	movwf	(_Angle_diff+1)^0,c
  1900  002268  0E00               	movlw	0
  1901  00226A  6E5D               	movwf	_Angle_diff^0,c
  1902                           
  1903                           ;main.c: 243:                     while(!stop){
  1904  00226C  EF68  F011         	goto	l5497
  1905  002270                     l5487:
  1906  002270  FFFF               	dw	65535	; assembler added errata NOP
  1907                           
  1908                           ;main.c: 244:                         for(int i=0; i<strlen(sequence) && !stop;i++){
  1909  002272  0E00               	movlw	0
  1910  002274  6E42               	movwf	(start_up_menu@i+1)^0,c
  1911  002276  0E00               	movlw	0
  1912  002278  6E41               	movwf	start_up_menu@i^0,c
  1913  00227A  EF4B  F011         	goto	l5493
  1914  00227E                     l5489:
  1915  00227E  FFFF               	dw	65535	; assembler added errata NOP
  1916                           
  1917                           ;main.c: 245:                             pick_and_place(sequence[i]);
  1918  002280  0EBB               	movlw	low _sequence
  1919  002282  2441               	addwf	start_up_menu@i^0,w,c
  1920  002284  6ED9               	movwf	fsr2l,c
  1921  002286  0E00               	movlw	high _sequence
  1922  002288  2042               	addwfc	(start_up_menu@i+1)^0,w,c
  1923  00228A  6EDA               	movwf	fsr2h,c
  1924  00228C  50DF               	movf	indf2,w,c
  1925  00228E  ECC9  F000         	call	_pick_and_place
  1926  002292                     
  1927                           ;main.c: 246:                         }
  1928  002292  4A41               	infsnz	start_up_menu@i^0,f,c
  1929  002294  2A42               	incf	(start_up_menu@i+1)^0,f,c
  1930  002296                     l5493:
  1931  002296  FFFF               	dw	65535	; assembler added errata NOP
  1932  002298  0EBB               	movlw	low _sequence
  1933  00229A  6E0A               	movwf	strlen@s^0,c
  1934  00229C  0E00               	movlw	high _sequence
  1935  00229E  6E0B               	movwf	(strlen@s+1)^0,c
  1936  0022A0  ECE8  F019         	call	_strlen	;wreg free
  1937  0022A4  500A               	movf	?_strlen^0,w,c
  1938  0022A6  5C41               	subwf	start_up_menu@i^0,w,c
  1939  0022A8  500B               	movf	(?_strlen+1)^0,w,c
  1940  0022AA  5842               	subwfb	(start_up_menu@i+1)^0,w,c
  1941  0022AC  B0D8               	btfsc	status,0,c
  1942  0022AE  EF5B  F011         	goto	u6201
  1943  0022B2  EF5E  F011         	goto	u6200
  1944  0022B6                     u6201:
  1945  0022B6  FFFF               	dw	65535	; assembler added errata NOP
  1946  0022B8  EF68  F011         	goto	l5497
  1947  0022BC                     u6200:
  1948  0022BC  FFFF               	dw	65535	; assembler added errata NOP
  1949  0022BE  5072               	movf	_stop^0,w,c
  1950  0022C0  B4D8               	btfsc	status,2,c
  1951  0022C2  EF65  F011         	goto	u6211
  1952  0022C6  EF68  F011         	goto	u6210
  1953  0022CA                     u6211:
  1954  0022CA  FFFF               	dw	65535	; assembler added errata NOP
  1955  0022CC  EF3F  F011         	goto	l5489
  1956  0022D0                     u6210:
  1957  0022D0                     l5497:
  1958  0022D0  FFFF               	dw	65535	; assembler added errata NOP
  1959                           
  1960                           ;main.c: 243:                     while(!stop){
  1961  0022D2  5072               	movf	_stop^0,w,c
  1962  0022D4  B4D8               	btfsc	status,2,c
  1963  0022D6  EF6F  F011         	goto	u6221
  1964  0022DA  EF72  F011         	goto	u6220
  1965  0022DE                     u6221:
  1966  0022DE  FFFF               	dw	65535	; assembler added errata NOP
  1967  0022E0  EF38  F011         	goto	l5487
  1968  0022E4                     u6220:
  1969  0022E4  FFFF               	dw	65535	; assembler added errata NOP
  1970  0022E6  EFB3  F011         	goto	l263
  1971  0022EA                     l5499:
  1972  0022EA  FFFF               	dw	65535	; assembler added errata NOP
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;main.c: 251:                     change_sequence();
  1976  0022EC  EC4E  F018         	call	_change_sequence	;wreg free
  1977                           
  1978                           ;main.c: 252:                     break;
  1979  0022F0  EFB3  F011         	goto	l263
  1980  0022F4                     l5501:
  1981  0022F4  FFFF               	dw	65535	; assembler added errata NOP
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;main.c: 255:                     add_component();
  1985  0022F6  ECF7  F00D         	call	_add_component	;wreg free
  1986                           
  1987                           ;main.c: 256:                     break;
  1988  0022FA  EFB3  F011         	goto	l263
  1989  0022FE                     l5503:
  1990  0022FE  FFFF               	dw	65535	; assembler added errata NOP
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;main.c: 259:                     remove_component();
  1994  002300  EC15  F017         	call	_remove_component	;wreg free
  1995                           
  1996                           ;main.c: 260:                     break;
  1997  002304  EFB3  F011         	goto	l263
  1998  002308                     l5505:
  1999  002308  FFFF               	dw	65535	; assembler added errata NOP
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;main.c: 263:                     print_string("\n\nReturning to initial position..");
  2003  00230A  0E2A               	movlw	low STR_3
  2004  00230C  6E0A               	movwf	print_string@strng^0,c
  2005  00230E  0E7F               	movlw	high STR_3
  2006  002310  6E0B               	movwf	(print_string@strng+1)^0,c
  2007  002312  ECFE  F017         	call	_print_string	;wreg free
  2008  002316                     
  2009                           ;main.c: 264:                     return_to_initial();
  2010  002316  EC06  F016         	call	_return_to_initial	;wreg free
  2011                           
  2012                           ;main.c: 265:                     break;
  2013  00231A  EFB3  F011         	goto	l263
  2014  00231E                     l5511:
  2015  00231E  FFFF               	dw	65535	; assembler added errata NOP
  2016  002320  0100               	movlb	0	; () banked
  2017  002322  51AD               	movf	_func& (0+255),w,b
  2018  002324  6E3F               	movwf	??_start_up_menu^0,c
  2019  002326  6A40               	clrf	(??_start_up_menu+1)^0,c
  2020                           
  2021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2022                           ; Switch size 1, requested type "simple"
  2023                           ; Number of cases is 1, Range of values is 0 to 0
  2024                           ; switch strategies available:
  2025                           ; Name         Instructions Cycles
  2026                           ; simple_byte            4     3 (average)
  2027                           ;	Chosen strategy is simple_byte
  2028  002328  5040               	movf	(??_start_up_menu+1)^0,w,c
  2029  00232A  0A00               	xorlw	0	; case 0
  2030  00232C  B4D8               	btfsc	status,2,c
  2031  00232E  EF9B  F011         	goto	l5577
  2032  002332  EFB3  F011         	goto	l263
  2033  002336                     l5577:
  2034  002336  FFFF               	dw	65535	; assembler added errata NOP
  2035                           
  2036                           ; BSR set to: 0
  2037                           ; Switch size 1, requested type "simple"
  2038                           ; Number of cases is 5, Range of values is 49 to 53
  2039                           ; switch strategies available:
  2040                           ; Name         Instructions Cycles
  2041                           ; simple_byte           16     9 (average)
  2042                           ;	Chosen strategy is simple_byte
  2043  002338  503F               	movf	??_start_up_menu^0,w,c
  2044  00233A  0A31               	xorlw	49	; case 49
  2045  00233C  B4D8               	btfsc	status,2,c
  2046  00233E  EF1B  F011         	goto	l5477
  2047  002342  0A03               	xorlw	3	; case 50
  2048  002344  B4D8               	btfsc	status,2,c
  2049  002346  EF75  F011         	goto	l5499
  2050  00234A  0A01               	xorlw	1	; case 51
  2051  00234C  B4D8               	btfsc	status,2,c
  2052  00234E  EF7A  F011         	goto	l5501
  2053  002352  0A07               	xorlw	7	; case 52
  2054  002354  B4D8               	btfsc	status,2,c
  2055  002356  EF7F  F011         	goto	l5503
  2056  00235A  0A01               	xorlw	1	; case 53
  2057  00235C  B4D8               	btfsc	status,2,c
  2058  00235E  EF84  F011         	goto	l5505
  2059  002362  EFB3  F011         	goto	l263
  2060  002366                     l263:
  2061  002366  FFFF               	dw	65535	; assembler added errata NOP
  2062  002368  0012               	return		;funcret
  2063  00236A  FFFF               	dw	65535	; errata NOP
  2064  00236C                     __end_of_start_up_menu:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _return_to_initial *****************
  2068 ;; Defined at:
  2069 ;;		line 755 in file "main.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  i               2   23[COMRAM] int 
  2074 ;;  i               2   21[COMRAM] int 
  2075 ;;  i               2   19[COMRAM] int 
  2076 ;;  i               2   17[COMRAM] int 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2086 ;;      Params:         0       0       0       0       0       0       0
  2087 ;;      Locals:         8       0       0       0       0       0       0
  2088 ;;      Temps:          1       0       0       0       0       0       0
  2089 ;;      Totals:         9       0       0       0       0       0       0
  2090 ;;Total ram usage:        9 bytes
  2091 ;; Hardware stack levels used: 1
  2092 ;; Hardware stack levels required when called: 4
  2093 ;; This function calls:
  2094 ;;		_Tweezer
  2095 ;;		_Twister
  2096 ;;		_X_axis
  2097 ;;		_Y_axis
  2098 ;;		_Z_axis
  2099 ;; This function is called by:
  2100 ;;		_start_up_menu
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text2
  2105  002C0C                     __ptext2:
  2106                           	callstack 0
  2107  002C0C                     _return_to_initial:
  2108                           	callstack 0
  2109  002C0C  FFFF               	dw	65535	; assembler added errata NOP
  2110  002C0E                     
  2111                           ;main.c: 756:     New_char_RX=0;
  2112  002C0E  0E00               	movlw	0
  2113  002C10  6E74               	movwf	_New_char_RX^0,c
  2114                           
  2115                           ;main.c: 757:     stop=0;
  2116  002C12  0E00               	movlw	0
  2117  002C14  6E72               	movwf	_stop^0,c
  2118  002C16                     
  2119                           ;main.c: 759:     Steps=Step_X;
  2120  002C16  C0D7  F05B         	movff	_Step_X,_Steps
  2121  002C1A  C0D8  F05C         	movff	_Step_X+1,_Steps+1
  2122                           
  2123                           ;main.c: 760:     for(int i = 0; i<Steps; i++){X_axis(0);}
  2124  002C1E  0E00               	movlw	0
  2125  002C20  6E13               	movwf	(return_to_initial@i+1)^0,c
  2126  002C22  0E00               	movlw	0
  2127  002C24  6E12               	movwf	return_to_initial@i^0,c
  2128  002C26  EF1B  F016         	goto	l5089
  2129  002C2A                     l5085:
  2130  002C2A  FFFF               	dw	65535	; assembler added errata NOP
  2131  002C2C  0E00               	movlw	0
  2132  002C2E  ECF8  F012         	call	_X_axis
  2133  002C32  4A12               	infsnz	return_to_initial@i^0,f,c
  2134  002C34  2A13               	incf	(return_to_initial@i+1)^0,f,c
  2135  002C36                     l5089:
  2136  002C36  FFFF               	dw	65535	; assembler added errata NOP
  2137  002C38  505B               	movf	_Steps^0,w,c
  2138  002C3A  5C12               	subwf	return_to_initial@i^0,w,c
  2139  002C3C  5013               	movf	(return_to_initial@i+1)^0,w,c
  2140  002C3E  0A80               	xorlw	128
  2141  002C40  6E11               	movwf	??_return_to_initial^0,c
  2142  002C42  505C               	movf	(_Steps+1)^0,w,c
  2143  002C44  0A80               	xorlw	128
  2144  002C46  5811               	subwfb	??_return_to_initial^0,w,c
  2145  002C48  A0D8               	btfss	status,0,c
  2146  002C4A  EF29  F016         	goto	u5551
  2147  002C4E  EF2C  F016         	goto	u5550
  2148  002C52                     u5551:
  2149  002C52  FFFF               	dw	65535	; assembler added errata NOP
  2150  002C54  EF15  F016         	goto	l5085
  2151  002C58                     u5550:
  2152  002C58  FFFF               	dw	65535	; assembler added errata NOP
  2153  002C5A                     
  2154                           ;main.c: 762:     Steps=Step_Y;
  2155  002C5A  C0D5  F05B         	movff	_Step_Y,_Steps
  2156  002C5E  C0D6  F05C         	movff	_Step_Y+1,_Steps+1
  2157  002C62                     
  2158                           ;main.c: 763:     for(int i = 0; i<Steps; i++){Y_axis(0);}
  2159  002C62  0E00               	movlw	0
  2160  002C64  6E15               	movwf	(return_to_initial@i_931+1)^0,c
  2161  002C66  0E00               	movlw	0
  2162  002C68  6E14               	movwf	return_to_initial@i_931^0,c
  2163  002C6A  EF3D  F016         	goto	l5097
  2164  002C6E                     l5093:
  2165  002C6E  FFFF               	dw	65535	; assembler added errata NOP
  2166  002C70  0E00               	movlw	0
  2167  002C72  EC57  F012         	call	_Y_axis
  2168  002C76  4A14               	infsnz	return_to_initial@i_931^0,f,c
  2169  002C78  2A15               	incf	(return_to_initial@i_931+1)^0,f,c
  2170  002C7A                     l5097:
  2171  002C7A  FFFF               	dw	65535	; assembler added errata NOP
  2172  002C7C  505B               	movf	_Steps^0,w,c
  2173  002C7E  5C14               	subwf	return_to_initial@i_931^0,w,c
  2174  002C80  5015               	movf	(return_to_initial@i_931+1)^0,w,c
  2175  002C82  0A80               	xorlw	128
  2176  002C84  6E11               	movwf	??_return_to_initial^0,c
  2177  002C86  505C               	movf	(_Steps+1)^0,w,c
  2178  002C88  0A80               	xorlw	128
  2179  002C8A  5811               	subwfb	??_return_to_initial^0,w,c
  2180  002C8C  A0D8               	btfss	status,0,c
  2181  002C8E  EF4B  F016         	goto	u5561
  2182  002C92  EF4E  F016         	goto	u5560
  2183  002C96                     u5561:
  2184  002C96  FFFF               	dw	65535	; assembler added errata NOP
  2185  002C98  EF37  F016         	goto	l5093
  2186  002C9C                     u5560:
  2187  002C9C  FFFF               	dw	65535	; assembler added errata NOP
  2188  002C9E                     
  2189                           ;main.c: 765:     Steps=Step_Angle;
  2190  002C9E  C0D1  F05B         	movff	_Step_Angle,_Steps
  2191  002CA2  C0D2  F05C         	movff	_Step_Angle+1,_Steps+1
  2192  002CA6                     
  2193                           ;main.c: 766:     for(int i = 0; i<Steps; i++){Twister(0);}
  2194  002CA6  0E00               	movlw	0
  2195  002CA8  6E17               	movwf	(return_to_initial@i_932+1)^0,c
  2196  002CAA  0E00               	movlw	0
  2197  002CAC  6E16               	movwf	return_to_initial@i_932^0,c
  2198  002CAE  EF5F  F016         	goto	l5105
  2199  002CB2                     l5101:
  2200  002CB2  FFFF               	dw	65535	; assembler added errata NOP
  2201  002CB4  0E00               	movlw	0
  2202  002CB6  EC99  F013         	call	_Twister
  2203  002CBA  4A16               	infsnz	return_to_initial@i_932^0,f,c
  2204  002CBC  2A17               	incf	(return_to_initial@i_932+1)^0,f,c
  2205  002CBE                     l5105:
  2206  002CBE  FFFF               	dw	65535	; assembler added errata NOP
  2207  002CC0  505B               	movf	_Steps^0,w,c
  2208  002CC2  5C16               	subwf	return_to_initial@i_932^0,w,c
  2209  002CC4  5017               	movf	(return_to_initial@i_932+1)^0,w,c
  2210  002CC6  0A80               	xorlw	128
  2211  002CC8  6E11               	movwf	??_return_to_initial^0,c
  2212  002CCA  505C               	movf	(_Steps+1)^0,w,c
  2213  002CCC  0A80               	xorlw	128
  2214  002CCE  5811               	subwfb	??_return_to_initial^0,w,c
  2215  002CD0  A0D8               	btfss	status,0,c
  2216  002CD2  EF6D  F016         	goto	u5571
  2217  002CD6  EF70  F016         	goto	u5570
  2218  002CDA                     u5571:
  2219  002CDA  FFFF               	dw	65535	; assembler added errata NOP
  2220  002CDC  EF59  F016         	goto	l5101
  2221  002CE0                     u5570:
  2222  002CE0  FFFF               	dw	65535	; assembler added errata NOP
  2223  002CE2                     
  2224                           ;main.c: 768:     Steps=Step_Z;
  2225  002CE2  C0D3  F05B         	movff	_Step_Z,_Steps
  2226  002CE6  C0D4  F05C         	movff	_Step_Z+1,_Steps+1
  2227  002CEA                     
  2228                           ;main.c: 769:     for(int i=0; i<Steps; i++){Z_axis(0);}
  2229  002CEA  0E00               	movlw	0
  2230  002CEC  6E19               	movwf	(return_to_initial@i_933+1)^0,c
  2231  002CEE  0E00               	movlw	0
  2232  002CF0  6E18               	movwf	return_to_initial@i_933^0,c
  2233  002CF2  EF81  F016         	goto	l5113
  2234  002CF6                     l5109:
  2235  002CF6  FFFF               	dw	65535	; assembler added errata NOP
  2236  002CF8  0E00               	movlw	0
  2237  002CFA  ECB6  F011         	call	_Z_axis
  2238  002CFE  4A18               	infsnz	return_to_initial@i_933^0,f,c
  2239  002D00  2A19               	incf	(return_to_initial@i_933+1)^0,f,c
  2240  002D02                     l5113:
  2241  002D02  FFFF               	dw	65535	; assembler added errata NOP
  2242  002D04  505B               	movf	_Steps^0,w,c
  2243  002D06  5C18               	subwf	return_to_initial@i_933^0,w,c
  2244  002D08  5019               	movf	(return_to_initial@i_933+1)^0,w,c
  2245  002D0A  0A80               	xorlw	128
  2246  002D0C  6E11               	movwf	??_return_to_initial^0,c
  2247  002D0E  505C               	movf	(_Steps+1)^0,w,c
  2248  002D10  0A80               	xorlw	128
  2249  002D12  5811               	subwfb	??_return_to_initial^0,w,c
  2250  002D14  A0D8               	btfss	status,0,c
  2251  002D16  EF8F  F016         	goto	u5581
  2252  002D1A  EF92  F016         	goto	u5580
  2253  002D1E                     u5581:
  2254  002D1E  FFFF               	dw	65535	; assembler added errata NOP
  2255  002D20  EF7B  F016         	goto	l5109
  2256  002D24                     u5580:
  2257  002D24  FFFF               	dw	65535	; assembler added errata NOP
  2258  002D26                     
  2259                           ;main.c: 771:     Tweezer(0);
  2260  002D26  0E00               	movlw	0
  2261  002D28  ECDB  F018         	call	_Tweezer
  2262  002D2C  0012               	return		;funcret
  2263  002D2E  FFFF               	dw	65535	; errata NOP
  2264  002D30                     __end_of_return_to_initial:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _remove_component *****************
  2268 ;; Defined at:
  2269 ;;		line 376 in file "main.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  indxToDel       2   30[COMRAM] int 
  2274 ;;  ptr             2   28[COMRAM] PTR unsigned char 
  2275 ;;		 -> sequence(4), NULL(0), 
  2276 ;;  rm_comp         1   27[COMRAM] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2286 ;;      Params:         0       0       0       0       0       0       0
  2287 ;;      Locals:         5       0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0
  2289 ;;      Totals:         5       0       0       0       0       0       0
  2290 ;;Total ram usage:        5 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 4
  2293 ;; This function calls:
  2294 ;;		_memmove
  2295 ;;		_print_string
  2296 ;;		_strlen
  2297 ;;		_strrchr
  2298 ;; This function is called by:
  2299 ;;		_start_up_menu
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text3
  2304  002E2A                     __ptext3:
  2305                           	callstack 0
  2306  002E2A                     _remove_component:
  2307                           	callstack 0
  2308  002E2A  FFFF               	dw	65535	; assembler added errata NOP
  2309  002E2C                     
  2310                           ;main.c: 377:     print_string("\nWhich component would you like to remove from the  seq
      +                          uence?\n");
  2311  002E2C  0E83               	movlw	low STR_15
  2312  002E2E  6E0A               	movwf	print_string@strng^0,c
  2313  002E30  0E7D               	movlw	high STR_15
  2314  002E32  6E0B               	movwf	(print_string@strng+1)^0,c
  2315  002E34  ECFE  F017         	call	_print_string	;wreg free
  2316                           
  2317                           ;main.c: 378:     print_string(sequence);
  2318  002E38  0EBB               	movlw	low _sequence
  2319  002E3A  6E0A               	movwf	print_string@strng^0,c
  2320  002E3C  0E00               	movlw	high _sequence
  2321  002E3E  6E0B               	movwf	(print_string@strng+1)^0,c
  2322  002E40  ECFE  F017         	call	_print_string	;wreg free
  2323  002E44                     l5383:
  2324  002E44  FFFF               	dw	65535	; assembler added errata NOP
  2325                           
  2326                           ;main.c: 380:         if(New_char_RX){
  2327  002E46  5074               	movf	_New_char_RX^0,w,c
  2328  002E48  B4D8               	btfsc	status,2,c
  2329  002E4A  EF29  F017         	goto	u6091
  2330  002E4E  EF2C  F017         	goto	u6090
  2331  002E52                     u6091:
  2332  002E52  FFFF               	dw	65535	; assembler added errata NOP
  2333  002E54  EF22  F017         	goto	l5383
  2334  002E58                     u6090:
  2335  002E58  FFFF               	dw	65535	; assembler added errata NOP
  2336  002E5A                     
  2337                           ;main.c: 381:             New_char_RX=0;
  2338  002E5A  0E00               	movlw	0
  2339  002E5C  6E74               	movwf	_New_char_RX^0,c
  2340  002E5E                     
  2341                           ;main.c: 382:             char rm_comp = input_str[0];
  2342  002E5E  C0B1  F01C         	movff	_input_str,remove_component@rm_comp	;volatile
  2343  002E62                     
  2344                           ;main.c: 383:             char *ptr;;main.c: 384:             int indxToDel;;main.c: 385
      +                          :             ptr=strrchr(sequence,rm_comp);
  2345  002E62  0EBB               	movlw	low _sequence
  2346  002E64  6E18               	movwf	strrchr@s^0,c
  2347  002E66  0E00               	movlw	high _sequence
  2348  002E68  6E19               	movwf	(strrchr@s+1)^0,c
  2349  002E6A  C01C  F01A         	movff	remove_component@rm_comp,strrchr@c
  2350  002E6E  6A1B               	clrf	(strrchr@c+1)^0,c
  2351  002E70  EC6B  F01A         	call	_strrchr	;wreg free
  2352  002E74  C018  F01D         	movff	?_strrchr,remove_component@ptr
  2353  002E78  C019  F01E         	movff	?_strrchr+1,remove_component@ptr+1
  2354  002E7C                     
  2355                           ;main.c: 387:             if(ptr != ((void*)0)){
  2356  002E7C  501D               	movf	remove_component@ptr^0,w,c
  2357  002E7E  101E               	iorwf	(remove_component@ptr+1)^0,w,c
  2358  002E80  B4D8               	btfsc	status,2,c
  2359  002E82  EF45  F017         	goto	u6101
  2360  002E86  EF48  F017         	goto	u6100
  2361  002E8A                     u6101:
  2362  002E8A  FFFF               	dw	65535	; assembler added errata NOP
  2363  002E8C  EF73  F017         	goto	l5403
  2364  002E90                     u6100:
  2365  002E90  FFFF               	dw	65535	; assembler added errata NOP
  2366  002E92                     
  2367                           ;main.c: 388:                 indxToDel = ptr - sequence;
  2368  002E92  0EBB               	movlw	low _sequence
  2369  002E94  5C1D               	subwf	remove_component@ptr^0,w,c
  2370  002E96  6E1F               	movwf	remove_component@indxToDel^0,c
  2371  002E98  0E00               	movlw	high _sequence
  2372  002E9A  581E               	subwfb	(remove_component@ptr+1)^0,w,c
  2373  002E9C  6E20               	movwf	(remove_component@indxToDel+1)^0,c
  2374  002E9E                     
  2375                           ;main.c: 389:                 memmove(&sequence[indxToDel], &sequence[indxToDel + 1], st
      +                          rlen(sequence) - indxToDel);
  2376  002E9E  0EBB               	movlw	low _sequence
  2377  002EA0  241F               	addwf	remove_component@indxToDel^0,w,c
  2378  002EA2  6E0E               	movwf	memmove@d1^0,c
  2379  002EA4  0E00               	movlw	high _sequence
  2380  002EA6  2020               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2381  002EA8  6E0F               	movwf	(memmove@d1+1)^0,c
  2382  002EAA  0EBC               	movlw	low (_sequence+1)
  2383  002EAC  241F               	addwf	remove_component@indxToDel^0,w,c
  2384  002EAE  6E10               	movwf	memmove@s1^0,c
  2385  002EB0  0E00               	movlw	high (_sequence+1)
  2386  002EB2  2020               	addwfc	(remove_component@indxToDel+1)^0,w,c
  2387  002EB4  6E11               	movwf	(memmove@s1+1)^0,c
  2388  002EB6  0EBB               	movlw	low _sequence
  2389  002EB8  6E0A               	movwf	strlen@s^0,c
  2390  002EBA  0E00               	movlw	high _sequence
  2391  002EBC  6E0B               	movwf	(strlen@s+1)^0,c
  2392  002EBE  ECE8  F019         	call	_strlen	;wreg free
  2393  002EC2  501F               	movf	remove_component@indxToDel^0,w,c
  2394  002EC4  5C0A               	subwf	?_strlen^0,w,c
  2395  002EC6  6E12               	movwf	memmove@n^0,c
  2396  002EC8  5020               	movf	(remove_component@indxToDel+1)^0,w,c
  2397  002ECA  580B               	subwfb	(?_strlen+1)^0,w,c
  2398  002ECC  6E13               	movwf	(memmove@n+1)^0,c
  2399  002ECE  EC98  F016         	call	_memmove	;wreg free
  2400  002ED2                     
  2401                           ;main.c: 390:                 print_string("\ncomponent removed");
  2402  002ED2  0ED5               	movlw	low STR_16
  2403  002ED4  6E0A               	movwf	print_string@strng^0,c
  2404  002ED6  0E7F               	movlw	high STR_16
  2405  002ED8  6E0B               	movwf	(print_string@strng+1)^0,c
  2406  002EDA  ECFE  F017         	call	_print_string	;wreg free
  2407  002EDE                     
  2408                           ;main.c: 391:                 stop=0;
  2409  002EDE  0E00               	movlw	0
  2410  002EE0  6E72               	movwf	_stop^0,c
  2411                           
  2412                           ;main.c: 392:                 break;
  2413  002EE2  EF87  F017         	goto	l5407
  2414  002EE6                     l5403:
  2415  002EE6  FFFF               	dw	65535	; assembler added errata NOP
  2416                           
  2417                           ;main.c: 397:                 print_string("\ncomponent is not in the sequence. Try sele
      +                          cting another component: \n");
  2418  002EE8  0E3D               	movlw	low STR_17
  2419  002EEA  6E0A               	movwf	print_string@strng^0,c
  2420  002EEC  0E7D               	movlw	high STR_17
  2421  002EEE  6E0B               	movwf	(print_string@strng+1)^0,c
  2422  002EF0  ECFE  F017         	call	_print_string	;wreg free
  2423  002EF4                     l5405:
  2424  002EF4  FFFF               	dw	65535	; assembler added errata NOP
  2425  002EF6  5074               	movf	_New_char_RX^0,w,c
  2426  002EF8  B4D8               	btfsc	status,2,c
  2427  002EFA  EF81  F017         	goto	u6111
  2428  002EFE  EF84  F017         	goto	u6110
  2429  002F02                     u6111:
  2430  002F02  FFFF               	dw	65535	; assembler added errata NOP
  2431  002F04  EF7A  F017         	goto	l5405
  2432  002F08                     u6110:
  2433  002F08  FFFF               	dw	65535	; assembler added errata NOP
  2434  002F0A  EF22  F017         	goto	l5383
  2435  002F0E                     l5407:
  2436  002F0E  FFFF               	dw	65535	; assembler added errata NOP
  2437                           
  2438                           ;main.c: 402:     New_char_RX=0;
  2439  002F10  0E00               	movlw	0
  2440  002F12  6E74               	movwf	_New_char_RX^0,c
  2441  002F14  0012               	return		;funcret
  2442  002F16  FFFF               	dw	65535	; errata NOP
  2443  002F18                     __end_of_remove_component:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function _strrchr *****************
  2447 ;; Defined at:
  2448 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2451 ;;		 -> sequence(4), 
  2452 ;;  c               2   25[COMRAM] int 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  2   23[COMRAM] PTR unsigned char 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2464 ;;      Params:         4       0       0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0
  2467 ;;      Totals:         4       0       0       0       0       0       0
  2468 ;;Total ram usage:        4 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 3
  2471 ;; This function calls:
  2472 ;;		___memrchr
  2473 ;;		_strlen
  2474 ;; This function is called by:
  2475 ;;		_remove_component
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text4
  2480  0034D6                     __ptext4:
  2481                           	callstack 0
  2482  0034D6                     _strrchr:
  2483                           	callstack 0
  2484  0034D6  FFFF               	dw	65535	; assembler added errata NOP
  2485  0034D8  C018  F00E         	movff	strrchr@s,___memrchr@m
  2486  0034DC  C019  F00F         	movff	strrchr@s+1,___memrchr@m+1
  2487  0034E0  C01A  F010         	movff	strrchr@c,___memrchr@c
  2488  0034E4  C01B  F011         	movff	strrchr@c+1,___memrchr@c+1
  2489  0034E8  C018  F00A         	movff	strrchr@s,strlen@s
  2490  0034EC  C019  F00B         	movff	strrchr@s+1,strlen@s+1
  2491  0034F0  ECE8  F019         	call	_strlen	;wreg free
  2492  0034F4  0E01               	movlw	1
  2493  0034F6  240A               	addwf	?_strlen^0,w,c
  2494  0034F8  6E12               	movwf	___memrchr@n^0,c
  2495  0034FA  0E00               	movlw	0
  2496  0034FC  200B               	addwfc	(?_strlen+1)^0,w,c
  2497  0034FE  6E13               	movwf	(___memrchr@n+1)^0,c
  2498  003500  EC9A  F018         	call	___memrchr	;wreg free
  2499  003504  C00E  F018         	movff	?___memrchr,?_strrchr
  2500  003508  C00F  F019         	movff	?___memrchr+1,?_strrchr+1
  2501  00350C  0012               	return		;funcret
  2502  00350E  FFFF               	dw	65535	; errata NOP
  2503  003510                     __end_of_strrchr:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function ___memrchr *****************
  2507 ;; Defined at:
  2508 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  m               2   13[COMRAM] PTR const void 
  2511 ;;		 -> sequence(4), 
  2512 ;;  c               2   15[COMRAM] int 
  2513 ;;  n               2   17[COMRAM] unsigned int 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2516 ;;		 -> sequence(4), 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  2   13[COMRAM] PTR void 
  2519 ;; Registers used:
  2520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2526 ;;      Params:         6       0       0       0       0       0       0
  2527 ;;      Locals:         2       0       0       0       0       0       0
  2528 ;;      Temps:          2       0       0       0       0       0       0
  2529 ;;      Totals:        10       0       0       0       0       0       0
  2530 ;;Total ram usage:       10 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 2
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_strrchr
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text5
  2541  003134                     __ptext5:
  2542                           	callstack 0
  2543  003134                     ___memrchr:
  2544                           	callstack 0
  2545  003134  FFFF               	dw	65535	; assembler added errata NOP
  2546  003136  C00E  F016         	movff	___memrchr@m,___memrchr@s
  2547  00313A  C00F  F017         	movff	___memrchr@m+1,___memrchr@s+1
  2548  00313E  C010  F010         	movff	___memrchr@c,___memrchr@c
  2549  003142  6A11               	clrf	(___memrchr@c+1)^0,c
  2550  003144  EFC4  F018         	goto	l3145
  2551  003148                     l3139:
  2552  003148  FFFF               	dw	65535	; assembler added errata NOP
  2553  00314A  5012               	movf	___memrchr@n^0,w,c
  2554  00314C  2416               	addwf	___memrchr@s^0,w,c
  2555  00314E  6ED9               	movwf	fsr2l,c
  2556  003150  5013               	movf	(___memrchr@n+1)^0,w,c
  2557  003152  2017               	addwfc	(___memrchr@s+1)^0,w,c
  2558  003154  6EDA               	movwf	fsr2h,c
  2559  003156  50DF               	movf	indf2,w,c
  2560  003158  6E14               	movwf	??___memrchr^0,c
  2561  00315A  6A15               	clrf	(??___memrchr+1)^0,c
  2562  00315C  5010               	movf	___memrchr@c^0,w,c
  2563  00315E  1814               	xorwf	??___memrchr^0,w,c
  2564  003160  E107               	bnz	u2891
  2565  003162  5011               	movf	(___memrchr@c+1)^0,w,c
  2566  003164  1815               	xorwf	(??___memrchr+1)^0,w,c
  2567  003166  A4D8               	btfss	status,2,c
  2568  003168  EFB8  F018         	goto	u2891
  2569  00316C  EFBB  F018         	goto	u2890
  2570  003170                     u2891:
  2571  003170  FFFF               	dw	65535	; assembler added errata NOP
  2572  003172  EFC4  F018         	goto	l3145
  2573  003176                     u2890:
  2574  003176  FFFF               	dw	65535	; assembler added errata NOP
  2575  003178  5012               	movf	___memrchr@n^0,w,c
  2576  00317A  2416               	addwf	___memrchr@s^0,w,c
  2577  00317C  6E0E               	movwf	?___memrchr^0,c
  2578  00317E  5013               	movf	(___memrchr@n+1)^0,w,c
  2579  003180  2017               	addwfc	(___memrchr@s+1)^0,w,c
  2580  003182  6E0F               	movwf	(?___memrchr+1)^0,c
  2581  003184  EFD8  F018         	goto	l1264
  2582  003188                     l3145:
  2583  003188  FFFF               	dw	65535	; assembler added errata NOP
  2584  00318A  0612               	decf	___memrchr@n^0,f,c
  2585  00318C  A0D8               	btfss	status,0,c
  2586  00318E  0613               	decf	(___memrchr@n+1)^0,f,c
  2587  003190  2812               	incf	___memrchr@n^0,w,c
  2588  003192  E106               	bnz	u2901
  2589  003194  2813               	incf	(___memrchr@n+1)^0,w,c
  2590  003196  A4D8               	btfss	status,2,c
  2591  003198  EFD0  F018         	goto	u2901
  2592  00319C  EFD3  F018         	goto	u2900
  2593  0031A0                     u2901:
  2594  0031A0  FFFF               	dw	65535	; assembler added errata NOP
  2595  0031A2  EFA4  F018         	goto	l3139
  2596  0031A6                     u2900:
  2597  0031A6  FFFF               	dw	65535	; assembler added errata NOP
  2598  0031A8  0E00               	movlw	0
  2599  0031AA  6E0E               	movwf	?___memrchr^0,c
  2600  0031AC  0E00               	movlw	0
  2601  0031AE  6E0F               	movwf	(?___memrchr+1)^0,c
  2602  0031B0                     l1264:
  2603  0031B0  FFFF               	dw	65535	; assembler added errata NOP
  2604  0031B2  0012               	return		;funcret
  2605  0031B4  FFFF               	dw	65535	; errata NOP
  2606  0031B6                     __end_of___memrchr:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function _memmove *****************
  2610 ;; Defined at:
  2611 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  d1              2   13[COMRAM] PTR void 
  2614 ;;		 -> sequence(4), 
  2615 ;;  s1              2   15[COMRAM] PTR const void 
  2616 ;;		 -> sequence(4), 
  2617 ;;  n               2   17[COMRAM] unsigned int 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2620 ;;		 -> sequence(4), 
  2621 ;;  d               2   21[COMRAM] PTR unsigned char 
  2622 ;;		 -> sequence(4), 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  2   13[COMRAM] PTR void 
  2625 ;; Registers used:
  2626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2632 ;;      Params:         6       0       0       0       0       0       0
  2633 ;;      Locals:         4       0       0       0       0       0       0
  2634 ;;      Temps:          2       0       0       0       0       0       0
  2635 ;;      Totals:        12       0       0       0       0       0       0
  2636 ;;Total ram usage:       12 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; Hardware stack levels required when called: 2
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_remove_component
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text6
  2647  002D30                     __ptext6:
  2648                           	callstack 0
  2649  002D30                     _memmove:
  2650                           	callstack 0
  2651  002D30  FFFF               	dw	65535	; assembler added errata NOP
  2652  002D32  C010  F018         	movff	memmove@s1,memmove@s
  2653  002D36  C011  F019         	movff	memmove@s1+1,memmove@s+1
  2654  002D3A  C00E  F016         	movff	memmove@d1,memmove@d
  2655  002D3E  C00F  F017         	movff	memmove@d1+1,memmove@d+1
  2656  002D42  5016               	movf	memmove@d^0,w,c
  2657  002D44  5C18               	subwf	memmove@s^0,w,c
  2658  002D46  5017               	movf	(memmove@d+1)^0,w,c
  2659  002D48  5819               	subwfb	(memmove@s+1)^0,w,c
  2660  002D4A  B0D8               	btfsc	status,0,c
  2661  002D4C  EFAA  F016         	goto	u2981
  2662  002D50  EFAD  F016         	goto	u2980
  2663  002D54                     u2981:
  2664  002D54  FFFF               	dw	65535	; assembler added errata NOP
  2665  002D56  EFEA  F016         	goto	l3211
  2666  002D5A                     u2980:
  2667  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  2668  002D5C  5012               	movf	memmove@n^0,w,c
  2669  002D5E  2418               	addwf	memmove@s^0,w,c
  2670  002D60  6E14               	movwf	??_memmove^0,c
  2671  002D62  5013               	movf	(memmove@n+1)^0,w,c
  2672  002D64  2019               	addwfc	(memmove@s+1)^0,w,c
  2673  002D66  6E15               	movwf	(??_memmove+1)^0,c
  2674  002D68  5014               	movf	??_memmove^0,w,c
  2675  002D6A  5C16               	subwf	memmove@d^0,w,c
  2676  002D6C  5015               	movf	(??_memmove+1)^0,w,c
  2677  002D6E  5817               	subwfb	(memmove@d+1)^0,w,c
  2678  002D70  B0D8               	btfsc	status,0,c
  2679  002D72  EFBD  F016         	goto	u2991
  2680  002D76  EFC0  F016         	goto	u2990
  2681  002D7A                     u2991:
  2682  002D7A  FFFF               	dw	65535	; assembler added errata NOP
  2683  002D7C  EFEA  F016         	goto	l3211
  2684  002D80                     u2990:
  2685  002D80  FFFF               	dw	65535	; assembler added errata NOP
  2686  002D82  5012               	movf	memmove@n^0,w,c
  2687  002D84  2618               	addwf	memmove@s^0,f,c
  2688  002D86  5013               	movf	(memmove@n+1)^0,w,c
  2689  002D88  2219               	addwfc	(memmove@s+1)^0,f,c
  2690  002D8A  5012               	movf	memmove@n^0,w,c
  2691  002D8C  2616               	addwf	memmove@d^0,f,c
  2692  002D8E  5013               	movf	(memmove@n+1)^0,w,c
  2693  002D90  2217               	addwfc	(memmove@d+1)^0,f,c
  2694  002D92                     l3207:
  2695  002D92  FFFF               	dw	65535	; assembler added errata NOP
  2696  002D94  0618               	decf	memmove@s^0,f,c
  2697  002D96  A0D8               	btfss	status,0,c
  2698  002D98  0619               	decf	(memmove@s+1)^0,f,c
  2699  002D9A  C018  FFD9         	movff	memmove@s,fsr2l
  2700  002D9E  C019  FFDA         	movff	memmove@s+1,fsr2h
  2701  002DA2  0616               	decf	memmove@d^0,f,c
  2702  002DA4  A0D8               	btfss	status,0,c
  2703  002DA6  0617               	decf	(memmove@d+1)^0,f,c
  2704  002DA8  C016  FFE1         	movff	memmove@d,fsr1l
  2705  002DAC  C017  FFE2         	movff	memmove@d+1,fsr1h
  2706  002DB0  CFDF FFE7          	movff	indf2,indf1
  2707  002DB4  0612               	decf	memmove@n^0,f,c
  2708  002DB6  A0D8               	btfss	status,0,c
  2709  002DB8  0613               	decf	(memmove@n+1)^0,f,c
  2710  002DBA  5012               	movf	memmove@n^0,w,c
  2711  002DBC  1013               	iorwf	(memmove@n+1)^0,w,c
  2712  002DBE  A4D8               	btfss	status,2,c
  2713  002DC0  EFE4  F016         	goto	u3001
  2714  002DC4  EFE7  F016         	goto	u3000
  2715  002DC8                     u3001:
  2716  002DC8  FFFF               	dw	65535	; assembler added errata NOP
  2717  002DCA  EFC9  F016         	goto	l3207
  2718  002DCE                     u3000:
  2719  002DCE  FFFF               	dw	65535	; assembler added errata NOP
  2720  002DD0  EF12  F017         	goto	l1217
  2721  002DD4                     l3211:
  2722  002DD4  FFFF               	dw	65535	; assembler added errata NOP
  2723  002DD6  5012               	movf	memmove@n^0,w,c
  2724  002DD8  1013               	iorwf	(memmove@n+1)^0,w,c
  2725  002DDA  B4D8               	btfsc	status,2,c
  2726  002DDC  EFF2  F016         	goto	u3011
  2727  002DE0  EFF5  F016         	goto	u3010
  2728  002DE4                     u3011:
  2729  002DE4  FFFF               	dw	65535	; assembler added errata NOP
  2730  002DE6  EF12  F017         	goto	l1217
  2731  002DEA                     u3010:
  2732  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  2733  002DEC                     l3213:
  2734  002DEC  FFFF               	dw	65535	; assembler added errata NOP
  2735  002DEE  C018  FFD9         	movff	memmove@s,fsr2l
  2736  002DF2  C019  FFDA         	movff	memmove@s+1,fsr2h
  2737  002DF6  C016  FFE1         	movff	memmove@d,fsr1l
  2738  002DFA  C017  FFE2         	movff	memmove@d+1,fsr1h
  2739  002DFE  CFDF FFE7          	movff	indf2,indf1
  2740  002E02  4A18               	infsnz	memmove@s^0,f,c
  2741  002E04  2A19               	incf	(memmove@s+1)^0,f,c
  2742  002E06  4A16               	infsnz	memmove@d^0,f,c
  2743  002E08  2A17               	incf	(memmove@d+1)^0,f,c
  2744  002E0A  0612               	decf	memmove@n^0,f,c
  2745  002E0C  A0D8               	btfss	status,0,c
  2746  002E0E  0613               	decf	(memmove@n+1)^0,f,c
  2747  002E10  5012               	movf	memmove@n^0,w,c
  2748  002E12  1013               	iorwf	(memmove@n+1)^0,w,c
  2749  002E14  A4D8               	btfss	status,2,c
  2750  002E16  EF0F  F017         	goto	u3021
  2751  002E1A  EF12  F017         	goto	u3020
  2752  002E1E                     u3021:
  2753  002E1E  FFFF               	dw	65535	; assembler added errata NOP
  2754  002E20  EFF6  F016         	goto	l3213
  2755  002E24                     u3020:
  2756  002E24                     l1217:
  2757  002E24  FFFF               	dw	65535	; assembler added errata NOP
  2758  002E26  0012               	return		;funcret
  2759  002E28  FFFF               	dw	65535	; errata NOP
  2760  002E2A                     __end_of_memmove:
  2761                           	callstack 0
  2762                           
  2763 ;; *************** function _pick_and_place *****************
  2764 ;; Defined at:
  2765 ;;		line 677 in file "main.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  Componnt        1    wreg     unsigned char 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  Componnt        1   32[BANK0 ] unsigned char 
  2770 ;;  i               2   30[BANK0 ] int 
  2771 ;;  i               2   28[BANK0 ] int 
  2772 ;;  i               2   24[BANK0 ] int 
  2773 ;;  i               2   20[BANK0 ] int 
  2774 ;;  i               2   16[BANK0 ] int 
  2775 ;;  i               2   14[BANK0 ] int 
  2776 ;;  i               2   12[BANK0 ] int 
  2777 ;;  i               2    8[BANK0 ] int 
  2778 ;;  i               2    4[BANK0 ] int 
  2779 ;;  i               2    0[BANK0 ] int 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  2  111[None  ] int 
  2782 ;; Registers used:
  2783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2789 ;;      Params:         0       0       0       0       0       0       0
  2790 ;;      Locals:         0      33       0       0       0       0       0
  2791 ;;      Temps:          2       0       0       0       0       0       0
  2792 ;;      Totals:         2      33       0       0       0       0       0
  2793 ;;Total ram usage:       35 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 4
  2796 ;; This function calls:
  2797 ;;		_Tweezer
  2798 ;;		_Twister
  2799 ;;		_X_axis
  2800 ;;		_Y_axis
  2801 ;;		_Z_axis
  2802 ;;		___fldiv
  2803 ;;		___flge
  2804 ;;		___wmul
  2805 ;;		___xxtofl
  2806 ;;		_check_component
  2807 ;;		_fetch_coordinates
  2808 ;;		_print_char
  2809 ;;		_print_string
  2810 ;; This function is called by:
  2811 ;;		_start_up_menu
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text7
  2816  000192                     __ptext7:
  2817                           	callstack 0
  2818  000192                     _pick_and_place:
  2819                           	callstack 0
  2820  000192  FFFF               	dw	65535	; assembler added errata NOP
  2821                           
  2822                           ;incstack = 0
  2823                           ;pick_and_place@Componnt stored from wreg
  2824  000194  0100               	movlb	0	; () banked
  2825  000196  6FA0               	movwf	pick_and_place@Componnt& (0+255),b
  2826  000198                     
  2827                           ;main.c: 677: int pick_and_place(char Componnt);main.c: 678: {;main.c: 679:     fetch_co
      +                          ordinates(Componnt);
  2828  000198  0100               	movlb	0	; () banked
  2829  00019A  51A0               	movf	pick_and_place@Componnt& (0+255),w,b
  2830  00019C  EC3A  F014         	call	_fetch_coordinates
  2831  0001A0                     
  2832                           ;main.c: 681:     print_string("\nPicking component: ");
  2833  0001A0  0E97               	movlw	low STR_21
  2834  0001A2  6E0A               	movwf	print_string@strng^0,c
  2835  0001A4  0E7F               	movlw	high STR_21
  2836  0001A6  6E0B               	movwf	(print_string@strng+1)^0,c
  2837  0001A8  ECFE  F017         	call	_print_string	;wreg free
  2838  0001AC                     
  2839                           ;main.c: 682:     print_char(Componnt);
  2840  0001AC  0100               	movlb	0	; () banked
  2841  0001AE  51A0               	movf	pick_and_place@Componnt& (0+255),w,b
  2842  0001B0  ECF1  F01A         	call	_print_char
  2843  0001B4                     
  2844                           ;main.c: 688:     X_dir=((X_diff<X_Pick)? 1:0);
  2845  0001B4  506D               	movf	_X_Pick^0,w,c
  2846  0001B6  5C61               	subwf	_X_diff^0,w,c
  2847  0001B8  5062               	movf	(_X_diff+1)^0,w,c
  2848  0001BA  0A80               	xorlw	128
  2849  0001BC  6E3D               	movwf	??_pick_and_place^0,c
  2850  0001BE  506E               	movf	(_X_Pick+1)^0,w,c
  2851  0001C0  0A80               	xorlw	128
  2852  0001C2  583D               	subwfb	??_pick_and_place^0,w,c
  2853  0001C4  A0D8               	btfss	status,0,c
  2854  0001C6  EFE7  F000         	goto	u5591
  2855  0001CA  EFEB  F000         	goto	u5590
  2856  0001CE                     u5591:
  2857  0001CE  FFFF               	dw	65535	; assembler added errata NOP
  2858  0001D0  0E01               	movlw	1
  2859  0001D2  EFED  F000         	goto	u5600
  2860  0001D6                     u5590:
  2861  0001D6  FFFF               	dw	65535	; assembler added errata NOP
  2862  0001D8  0E00               	movlw	0
  2863  0001DA                     u5600:
  2864  0001DA  FFFF               	dw	65535	; assembler added errata NOP
  2865  0001DC  6E71               	movwf	_X_dir^0,c
  2866  0001DE                     
  2867                           ;main.c: 689:     Y_dir=((Y_diff<Y_Pick)? 1:0);
  2868  0001DE  5069               	movf	_Y_Pick^0,w,c
  2869  0001E0  5C5F               	subwf	_Y_diff^0,w,c
  2870  0001E2  5060               	movf	(_Y_diff+1)^0,w,c
  2871  0001E4  0A80               	xorlw	128
  2872  0001E6  6E3D               	movwf	??_pick_and_place^0,c
  2873  0001E8  506A               	movf	(_Y_Pick+1)^0,w,c
  2874  0001EA  0A80               	xorlw	128
  2875  0001EC  583D               	subwfb	??_pick_and_place^0,w,c
  2876  0001EE  A0D8               	btfss	status,0,c
  2877  0001F0  EFFC  F000         	goto	u5611
  2878  0001F4  EF00  F001         	goto	u5610
  2879  0001F8                     u5611:
  2880  0001F8  FFFF               	dw	65535	; assembler added errata NOP
  2881  0001FA  0E01               	movlw	1
  2882  0001FC  EF02  F001         	goto	u5620
  2883  000200                     u5610:
  2884  000200  FFFF               	dw	65535	; assembler added errata NOP
  2885  000202  0E00               	movlw	0
  2886  000204                     u5620:
  2887  000204  FFFF               	dw	65535	; assembler added errata NOP
  2888  000206  6E70               	movwf	_Y_dir^0,c
  2889  000208                     
  2890                           ;main.c: 690:     Twist_dir=((Angle_diff<Pick_Angle)? 1:0);
  2891  000208  5065               	movf	_Pick_Angle^0,w,c
  2892  00020A  5C5D               	subwf	_Angle_diff^0,w,c
  2893  00020C  505E               	movf	(_Angle_diff+1)^0,w,c
  2894  00020E  0A80               	xorlw	128
  2895  000210  6E3D               	movwf	??_pick_and_place^0,c
  2896  000212  5066               	movf	(_Pick_Angle+1)^0,w,c
  2897  000214  0A80               	xorlw	128
  2898  000216  583D               	subwfb	??_pick_and_place^0,w,c
  2899  000218  A0D8               	btfss	status,0,c
  2900  00021A  EF11  F001         	goto	u5631
  2901  00021E  EF15  F001         	goto	u5630
  2902  000222                     u5631:
  2903  000222  FFFF               	dw	65535	; assembler added errata NOP
  2904  000224  0E01               	movlw	1
  2905  000226  EF17  F001         	goto	u5640
  2906  00022A                     u5630:
  2907  00022A  FFFF               	dw	65535	; assembler added errata NOP
  2908  00022C  0E00               	movlw	0
  2909  00022E                     u5640:
  2910  00022E  FFFF               	dw	65535	; assembler added errata NOP
  2911  000230  6E6F               	movwf	_Twist_dir^0,c
  2912  000232                     
  2913                           ;main.c: 699:     for(int i = 0; (i<((((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_Pick-
      +                          X_diff)))*steps_per_unit)) && !stop; i++){
  2914  000232  0E00               	movlw	0
  2915  000234  0100               	movlb	0	; () banked
  2916  000236  6F81               	movwf	(pick_and_place@i+1)& (0+255),b
  2917  000238  0E00               	movlw	0
  2918  00023A  6F80               	movwf	pick_and_place@i& (0+255),b
  2919  00023C  EF27  F001         	goto	l5135
  2920  000240                     l5131:
  2921  000240  FFFF               	dw	65535	; assembler added errata NOP
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;main.c: 700:         X_axis(X_dir);
  2925  000242  5071               	movf	_X_dir^0,w,c
  2926  000244  ECF8  F012         	call	_X_axis
  2927  000248                     
  2928                           ;main.c: 701:     }
  2929  000248  0100               	movlb	0	; () banked
  2930  00024A  4B80               	infsnz	pick_and_place@i& (0+255),f,b
  2931  00024C  2B81               	incf	(pick_and_place@i+1)& (0+255),f,b
  2932  00024E                     l5135:
  2933  00024E  FFFF               	dw	65535	; assembler added errata NOP
  2934                           
  2935                           ; BSR set to: 0
  2936  000250  5061               	movf	_X_diff^0,w,c
  2937  000252  5C6D               	subwf	_X_Pick^0,w,c
  2938  000254  6E3D               	movwf	??_pick_and_place^0,c
  2939  000256  5062               	movf	(_X_diff+1)^0,w,c
  2940  000258  586E               	subwfb	(_X_Pick+1)^0,w,c
  2941  00025A  6E3E               	movwf	(??_pick_and_place+1)^0,c
  2942  00025C  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  2943  00025E  EF3C  F001         	goto	u5650
  2944  000262  503E               	movf	(??_pick_and_place+1)^0,w,c
  2945  000264  E106               	bnz	u5651
  2946  000266  043D               	decf	??_pick_and_place^0,w,c
  2947  000268  B0D8               	btfsc	status,0,c
  2948  00026A  EF39  F001         	goto	u5651
  2949  00026E  EF3C  F001         	goto	u5650
  2950  000272                     u5651:
  2951  000272  FFFF               	dw	65535	; assembler added errata NOP
  2952  000274  EF4D  F001         	goto	l5139
  2953  000278                     u5650:
  2954  000278  FFFF               	dw	65535	; assembler added errata NOP
  2955  00027A                     
  2956                           ; BSR set to: 0
  2957  00027A  5061               	movf	_X_diff^0,w,c
  2958  00027C  5C6D               	subwf	_X_Pick^0,w,c
  2959  00027E  6E3D               	movwf	??_pick_and_place^0,c
  2960  000280  5062               	movf	(_X_diff+1)^0,w,c
  2961  000282  586E               	subwfb	(_X_Pick+1)^0,w,c
  2962  000284  6E3E               	movwf	(??_pick_and_place+1)^0,c
  2963  000286  1E3D               	comf	??_pick_and_place^0,f,c
  2964  000288  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  2965  00028A  4A3D               	infsnz	??_pick_and_place^0,f,c
  2966  00028C  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  2967  00028E  C03D  F082         	movff	??_pick_and_place,_pick_and_place$908
  2968  000292  C03E  F083         	movff	??_pick_and_place+1,_pick_and_place$908+1
  2969  000296  EF54  F001         	goto	l5141
  2970  00029A                     l5139:
  2971  00029A  FFFF               	dw	65535	; assembler added errata NOP
  2972                           
  2973                           ; BSR set to: 0
  2974  00029C  5061               	movf	_X_diff^0,w,c
  2975  00029E  5C6D               	subwf	_X_Pick^0,w,c
  2976  0002A0  6F82               	movwf	_pick_and_place$908& (0+255),b
  2977  0002A2  5062               	movf	(_X_diff+1)^0,w,c
  2978  0002A4  586E               	subwfb	(_X_Pick+1)^0,w,c
  2979  0002A6  6F83               	movwf	(_pick_and_place$908+1)& (0+255),b
  2980  0002A8                     l5141:
  2981  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  2982                           
  2983                           ; BSR set to: 0
  2984  0002AA  C082  F00A         	movff	_pick_and_place$908,___wmul@multiplier
  2985  0002AE  C083  F00B         	movff	_pick_and_place$908+1,___wmul@multiplier+1
  2986  0002B2  0E00               	movlw	0
  2987  0002B4  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  2988  0002B6  0E03               	movlw	3
  2989  0002B8  6E0C               	movwf	___wmul@multiplicand^0,c
  2990  0002BA  ECB3  F01A         	call	___wmul	;wreg free
  2991  0002BE  500A               	movf	?___wmul^0,w,c
  2992  0002C0  0100               	movlb	0	; () banked
  2993  0002C2  5D80               	subwf	pick_and_place@i& (0+255),w,b
  2994  0002C4  5181               	movf	(pick_and_place@i+1)& (0+255),w,b
  2995  0002C6  0A80               	xorlw	128
  2996  0002C8  6E3D               	movwf	??_pick_and_place^0,c
  2997  0002CA  500B               	movf	(?___wmul+1)^0,w,c
  2998  0002CC  0A80               	xorlw	128
  2999  0002CE  583D               	subwfb	??_pick_and_place^0,w,c
  3000  0002D0  B0D8               	btfsc	status,0,c
  3001  0002D2  EF6D  F001         	goto	u5661
  3002  0002D6  EF70  F001         	goto	u5660
  3003  0002DA                     u5661:
  3004  0002DA  FFFF               	dw	65535	; assembler added errata NOP
  3005  0002DC  EF7A  F001         	goto	l5145
  3006  0002E0                     u5660:
  3007  0002E0  FFFF               	dw	65535	; assembler added errata NOP
  3008  0002E2                     
  3009                           ; BSR set to: 0
  3010  0002E2  5072               	movf	_stop^0,w,c
  3011  0002E4  B4D8               	btfsc	status,2,c
  3012  0002E6  EF77  F001         	goto	u5671
  3013  0002EA  EF7A  F001         	goto	u5670
  3014  0002EE                     u5671:
  3015  0002EE  FFFF               	dw	65535	; assembler added errata NOP
  3016  0002F0  EF20  F001         	goto	l5131
  3017  0002F4                     u5670:
  3018  0002F4                     l5145:
  3019  0002F4  FFFF               	dw	65535	; assembler added errata NOP
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;main.c: 702:     for(int i = 0; (i<((((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_Pick-
      +                          Y_diff)))*steps_per_unit)) && !stop; i++){
  3023  0002F6  0E00               	movlw	0
  3024  0002F8  6F85               	movwf	(pick_and_place@i_909+1)& (0+255),b
  3025  0002FA  0E00               	movlw	0
  3026  0002FC  6F84               	movwf	pick_and_place@i_909& (0+255),b
  3027  0002FE  EF88  F001         	goto	l5151
  3028  000302                     l5147:
  3029  000302  FFFF               	dw	65535	; assembler added errata NOP
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;main.c: 703:         Y_axis(Y_dir);
  3033  000304  5070               	movf	_Y_dir^0,w,c
  3034  000306  EC57  F012         	call	_Y_axis
  3035  00030A                     
  3036                           ;main.c: 704:     }
  3037  00030A  0100               	movlb	0	; () banked
  3038  00030C  4B84               	infsnz	pick_and_place@i_909& (0+255),f,b
  3039  00030E  2B85               	incf	(pick_and_place@i_909+1)& (0+255),f,b
  3040  000310                     l5151:
  3041  000310  FFFF               	dw	65535	; assembler added errata NOP
  3042                           
  3043                           ; BSR set to: 0
  3044  000312  505F               	movf	_Y_diff^0,w,c
  3045  000314  5C69               	subwf	_Y_Pick^0,w,c
  3046  000316  6E3D               	movwf	??_pick_and_place^0,c
  3047  000318  5060               	movf	(_Y_diff+1)^0,w,c
  3048  00031A  586A               	subwfb	(_Y_Pick+1)^0,w,c
  3049  00031C  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3050  00031E  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3051  000320  EF9D  F001         	goto	u5680
  3052  000324  503E               	movf	(??_pick_and_place+1)^0,w,c
  3053  000326  E106               	bnz	u5681
  3054  000328  043D               	decf	??_pick_and_place^0,w,c
  3055  00032A  B0D8               	btfsc	status,0,c
  3056  00032C  EF9A  F001         	goto	u5681
  3057  000330  EF9D  F001         	goto	u5680
  3058  000334                     u5681:
  3059  000334  FFFF               	dw	65535	; assembler added errata NOP
  3060  000336  EFAE  F001         	goto	l5155
  3061  00033A                     u5680:
  3062  00033A  FFFF               	dw	65535	; assembler added errata NOP
  3063  00033C                     
  3064                           ; BSR set to: 0
  3065  00033C  505F               	movf	_Y_diff^0,w,c
  3066  00033E  5C69               	subwf	_Y_Pick^0,w,c
  3067  000340  6E3D               	movwf	??_pick_and_place^0,c
  3068  000342  5060               	movf	(_Y_diff+1)^0,w,c
  3069  000344  586A               	subwfb	(_Y_Pick+1)^0,w,c
  3070  000346  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3071  000348  1E3D               	comf	??_pick_and_place^0,f,c
  3072  00034A  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3073  00034C  4A3D               	infsnz	??_pick_and_place^0,f,c
  3074  00034E  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3075  000350  C03D  F086         	movff	??_pick_and_place,_pick_and_place$911
  3076  000354  C03E  F087         	movff	??_pick_and_place+1,_pick_and_place$911+1
  3077  000358  EFB5  F001         	goto	l5157
  3078  00035C                     l5155:
  3079  00035C  FFFF               	dw	65535	; assembler added errata NOP
  3080                           
  3081                           ; BSR set to: 0
  3082  00035E  505F               	movf	_Y_diff^0,w,c
  3083  000360  5C69               	subwf	_Y_Pick^0,w,c
  3084  000362  6F86               	movwf	_pick_and_place$911& (0+255),b
  3085  000364  5060               	movf	(_Y_diff+1)^0,w,c
  3086  000366  586A               	subwfb	(_Y_Pick+1)^0,w,c
  3087  000368  6F87               	movwf	(_pick_and_place$911+1)& (0+255),b
  3088  00036A                     l5157:
  3089  00036A  FFFF               	dw	65535	; assembler added errata NOP
  3090                           
  3091                           ; BSR set to: 0
  3092  00036C  C086  F00A         	movff	_pick_and_place$911,___wmul@multiplier
  3093  000370  C087  F00B         	movff	_pick_and_place$911+1,___wmul@multiplier+1
  3094  000374  0E00               	movlw	0
  3095  000376  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  3096  000378  0E03               	movlw	3
  3097  00037A  6E0C               	movwf	___wmul@multiplicand^0,c
  3098  00037C  ECB3  F01A         	call	___wmul	;wreg free
  3099  000380  500A               	movf	?___wmul^0,w,c
  3100  000382  0100               	movlb	0	; () banked
  3101  000384  5D84               	subwf	pick_and_place@i_909& (0+255),w,b
  3102  000386  5185               	movf	(pick_and_place@i_909+1)& (0+255),w,b
  3103  000388  0A80               	xorlw	128
  3104  00038A  6E3D               	movwf	??_pick_and_place^0,c
  3105  00038C  500B               	movf	(?___wmul+1)^0,w,c
  3106  00038E  0A80               	xorlw	128
  3107  000390  583D               	subwfb	??_pick_and_place^0,w,c
  3108  000392  B0D8               	btfsc	status,0,c
  3109  000394  EFCE  F001         	goto	u5691
  3110  000398  EFD1  F001         	goto	u5690
  3111  00039C                     u5691:
  3112  00039C  FFFF               	dw	65535	; assembler added errata NOP
  3113  00039E  EFDB  F001         	goto	l5161
  3114  0003A2                     u5690:
  3115  0003A2  FFFF               	dw	65535	; assembler added errata NOP
  3116  0003A4                     
  3117                           ; BSR set to: 0
  3118  0003A4  5072               	movf	_stop^0,w,c
  3119  0003A6  B4D8               	btfsc	status,2,c
  3120  0003A8  EFD8  F001         	goto	u5701
  3121  0003AC  EFDB  F001         	goto	u5700
  3122  0003B0                     u5701:
  3123  0003B0  FFFF               	dw	65535	; assembler added errata NOP
  3124  0003B2  EF81  F001         	goto	l5147
  3125  0003B6                     u5700:
  3126  0003B6                     l5161:
  3127  0003B6  FFFF               	dw	65535	; assembler added errata NOP
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;main.c: 705:     for(int i = 0; (i<(((Angle_diff-Pick_Angle) > 0 ? (Angle_diff-Pick_Ang
      +                          le) : -(Angle_diff-Pick_Angle))/3.6)) && !stop; i++){
  3131  0003B8  0E00               	movlw	0
  3132  0003BA  6F89               	movwf	(pick_and_place@i_912+1)& (0+255),b
  3133  0003BC  0E00               	movlw	0
  3134  0003BE  6F88               	movwf	pick_and_place@i_912& (0+255),b
  3135  0003C0  EFE9  F001         	goto	l5167
  3136  0003C4                     l5163:
  3137  0003C4  FFFF               	dw	65535	; assembler added errata NOP
  3138                           
  3139                           ;main.c: 706:         Twister(Twist_dir);
  3140  0003C6  506F               	movf	_Twist_dir^0,w,c
  3141  0003C8  EC99  F013         	call	_Twister
  3142  0003CC                     
  3143                           ;main.c: 707:     }
  3144  0003CC  0100               	movlb	0	; () banked
  3145  0003CE  4B88               	infsnz	pick_and_place@i_912& (0+255),f,b
  3146  0003D0  2B89               	incf	(pick_and_place@i_912+1)& (0+255),f,b
  3147  0003D2                     l5167:
  3148  0003D2  FFFF               	dw	65535	; assembler added errata NOP
  3149                           
  3150                           ; BSR set to: 0
  3151  0003D4  5065               	movf	_Pick_Angle^0,w,c
  3152  0003D6  5C5D               	subwf	_Angle_diff^0,w,c
  3153  0003D8  6E3D               	movwf	??_pick_and_place^0,c
  3154  0003DA  5066               	movf	(_Pick_Angle+1)^0,w,c
  3155  0003DC  585E               	subwfb	(_Angle_diff+1)^0,w,c
  3156  0003DE  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3157  0003E0  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3158  0003E2  EFFE  F001         	goto	u5710
  3159  0003E6  503E               	movf	(??_pick_and_place+1)^0,w,c
  3160  0003E8  E106               	bnz	u5711
  3161  0003EA  043D               	decf	??_pick_and_place^0,w,c
  3162  0003EC  B0D8               	btfsc	status,0,c
  3163  0003EE  EFFB  F001         	goto	u5711
  3164  0003F2  EFFE  F001         	goto	u5710
  3165  0003F6                     u5711:
  3166  0003F6  FFFF               	dw	65535	; assembler added errata NOP
  3167  0003F8  EF0F  F002         	goto	l5171
  3168  0003FC                     u5710:
  3169  0003FC  FFFF               	dw	65535	; assembler added errata NOP
  3170  0003FE                     
  3171                           ; BSR set to: 0
  3172  0003FE  5065               	movf	_Pick_Angle^0,w,c
  3173  000400  5C5D               	subwf	_Angle_diff^0,w,c
  3174  000402  6E3D               	movwf	??_pick_and_place^0,c
  3175  000404  5066               	movf	(_Pick_Angle+1)^0,w,c
  3176  000406  585E               	subwfb	(_Angle_diff+1)^0,w,c
  3177  000408  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3178  00040A  1E3D               	comf	??_pick_and_place^0,f,c
  3179  00040C  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3180  00040E  4A3D               	infsnz	??_pick_and_place^0,f,c
  3181  000410  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3182  000412  C03D  F08A         	movff	??_pick_and_place,_pick_and_place$914
  3183  000416  C03E  F08B         	movff	??_pick_and_place+1,_pick_and_place$914+1
  3184  00041A  EF16  F002         	goto	l5173
  3185  00041E                     l5171:
  3186  00041E  FFFF               	dw	65535	; assembler added errata NOP
  3187                           
  3188                           ; BSR set to: 0
  3189  000420  5065               	movf	_Pick_Angle^0,w,c
  3190  000422  5C5D               	subwf	_Angle_diff^0,w,c
  3191  000424  6F8A               	movwf	_pick_and_place$914& (0+255),b
  3192  000426  5066               	movf	(_Pick_Angle+1)^0,w,c
  3193  000428  585E               	subwfb	(_Angle_diff+1)^0,w,c
  3194  00042A  6F8B               	movwf	(_pick_and_place$914+1)& (0+255),b
  3195  00042C                     l5173:
  3196  00042C  FFFF               	dw	65535	; assembler added errata NOP
  3197                           
  3198                           ; BSR set to: 0
  3199  00042E  C088  F00A         	movff	pick_and_place@i_912,___xxtofl@val
  3200  000432  C089  F00B         	movff	pick_and_place@i_912+1,___xxtofl@val+1
  3201  000436  0E00               	movlw	0
  3202  000438  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3203  00043A  0EFF               	movlw	-1
  3204  00043C  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3205  00043E  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3206  000440  0E01               	movlw	1
  3207  000442  EC28  F00F         	call	___xxtofl
  3208  000446  C00A  F031         	movff	?___xxtofl,___flge@ff1
  3209  00044A  C00B  F032         	movff	?___xxtofl+1,___flge@ff1+1
  3210  00044E  C00C  F033         	movff	?___xxtofl+2,___flge@ff1+2
  3211  000452  C00D  F034         	movff	?___xxtofl+3,___flge@ff1+3
  3212  000456  0E66               	movlw	102
  3213  000458  6E1C               	movwf	___fldiv@a^0,c
  3214  00045A  0E66               	movlw	102
  3215  00045C  6E1D               	movwf	(___fldiv@a+1)^0,c
  3216  00045E  0E66               	movlw	102
  3217  000460  6E1E               	movwf	(___fldiv@a+2)^0,c
  3218  000462  0E40               	movlw	64
  3219  000464  6E1F               	movwf	(___fldiv@a+3)^0,c
  3220  000466  C08A  F00A         	movff	_pick_and_place$914,___xxtofl@val
  3221  00046A  C08B  F00B         	movff	_pick_and_place$914+1,___xxtofl@val+1
  3222  00046E  0E00               	movlw	0
  3223  000470  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3224  000472  0EFF               	movlw	-1
  3225  000474  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3226  000476  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3227  000478  0E01               	movlw	1
  3228  00047A  EC28  F00F         	call	___xxtofl
  3229  00047E  C00A  F018         	movff	?___xxtofl,___fldiv@b
  3230  000482  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
  3231  000486  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
  3232  00048A  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
  3233  00048E  ECEB  F009         	call	___fldiv	;wreg free
  3234  000492  C018  F035         	movff	?___fldiv,___flge@ff2
  3235  000496  C019  F036         	movff	?___fldiv+1,___flge@ff2+1
  3236  00049A  C01A  F037         	movff	?___fldiv+2,___flge@ff2+2
  3237  00049E  C01B  F038         	movff	?___fldiv+3,___flge@ff2+3
  3238  0004A2  EC72  F015         	call	___flge	;wreg free
  3239  0004A6  B0D8               	btfsc	status,0,c
  3240  0004A8  EF58  F002         	goto	u5721
  3241  0004AC  EF5B  F002         	goto	u5720
  3242  0004B0                     u5721:
  3243  0004B0  FFFF               	dw	65535	; assembler added errata NOP
  3244  0004B2  EF65  F002         	goto	l5177
  3245  0004B6                     u5720:
  3246  0004B6  FFFF               	dw	65535	; assembler added errata NOP
  3247  0004B8  5072               	movf	_stop^0,w,c
  3248  0004BA  B4D8               	btfsc	status,2,c
  3249  0004BC  EF62  F002         	goto	u5731
  3250  0004C0  EF65  F002         	goto	u5730
  3251  0004C4                     u5731:
  3252  0004C4  FFFF               	dw	65535	; assembler added errata NOP
  3253  0004C6  EFE2  F001         	goto	l5163
  3254  0004CA                     u5730:
  3255  0004CA                     l5177:
  3256  0004CA  FFFF               	dw	65535	; assembler added errata NOP
  3257                           
  3258                           ;main.c: 709:     Tweezer(1);
  3259  0004CC  0E01               	movlw	1
  3260  0004CE  ECDB  F018         	call	_Tweezer
  3261  0004D2                     
  3262                           ;main.c: 710:     for(int i=0; i<(3*steps_per_unit) && !stop; i++){Z_axis(1);}
  3263  0004D2  0E00               	movlw	0
  3264  0004D4  0100               	movlb	0	; () banked
  3265  0004D6  6F8D               	movwf	(pick_and_place@i_916+1)& (0+255),b
  3266  0004D8  0E00               	movlw	0
  3267  0004DA  6F8C               	movwf	pick_and_place@i_916& (0+255),b
  3268  0004DC  EF77  F002         	goto	l5185
  3269  0004E0                     l5181:
  3270  0004E0  FFFF               	dw	65535	; assembler added errata NOP
  3271                           
  3272                           ; BSR set to: 0
  3273  0004E2  0E01               	movlw	1
  3274  0004E4  ECB6  F011         	call	_Z_axis
  3275  0004E8  0100               	movlb	0	; () banked
  3276  0004EA  4B8C               	infsnz	pick_and_place@i_916& (0+255),f,b
  3277  0004EC  2B8D               	incf	(pick_and_place@i_916+1)& (0+255),f,b
  3278  0004EE                     l5185:
  3279  0004EE  FFFF               	dw	65535	; assembler added errata NOP
  3280                           
  3281                           ; BSR set to: 0
  3282  0004F0  BF8D               	btfsc	(pick_and_place@i_916+1)& (0+255),7,b
  3283  0004F2  EF87  F002         	goto	u5740
  3284  0004F6  518D               	movf	(pick_and_place@i_916+1)& (0+255),w,b
  3285  0004F8  E107               	bnz	u5741
  3286  0004FA  0E09               	movlw	9
  3287  0004FC  5D8C               	subwf	pick_and_place@i_916& (0+255),w,b
  3288  0004FE  B0D8               	btfsc	status,0,c
  3289  000500  EF84  F002         	goto	u5741
  3290  000504  EF87  F002         	goto	u5740
  3291  000508                     u5741:
  3292  000508  FFFF               	dw	65535	; assembler added errata NOP
  3293  00050A  EF91  F002         	goto	l5189
  3294  00050E                     u5740:
  3295  00050E  FFFF               	dw	65535	; assembler added errata NOP
  3296  000510                     
  3297                           ; BSR set to: 0
  3298  000510  5072               	movf	_stop^0,w,c
  3299  000512  B4D8               	btfsc	status,2,c
  3300  000514  EF8E  F002         	goto	u5751
  3301  000518  EF91  F002         	goto	u5750
  3302  00051C                     u5751:
  3303  00051C  FFFF               	dw	65535	; assembler added errata NOP
  3304  00051E  EF70  F002         	goto	l5181
  3305  000522                     u5750:
  3306  000522                     l5189:
  3307  000522  FFFF               	dw	65535	; assembler added errata NOP
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;main.c: 711:     check_component(Componnt);
  3311  000524  51A0               	movf	pick_and_place@Componnt& (0+255),w,b
  3312  000526  EC8C  F017         	call	_check_component
  3313  00052A                     
  3314                           ;main.c: 713:     Tweezer(0);
  3315  00052A  0E00               	movlw	0
  3316  00052C  ECDB  F018         	call	_Tweezer
  3317  000530                     
  3318                           ;main.c: 714:     for(int i=0; i<(3*steps_per_unit) && !stop; i++){Z_axis(0);}
  3319  000530  0E00               	movlw	0
  3320  000532  0100               	movlb	0	; () banked
  3321  000534  6F8F               	movwf	(pick_and_place@i_919+1)& (0+255),b
  3322  000536  0E00               	movlw	0
  3323  000538  6F8E               	movwf	pick_and_place@i_919& (0+255),b
  3324  00053A  EFA6  F002         	goto	l5199
  3325  00053E                     l5195:
  3326  00053E  FFFF               	dw	65535	; assembler added errata NOP
  3327                           
  3328                           ; BSR set to: 0
  3329  000540  0E00               	movlw	0
  3330  000542  ECB6  F011         	call	_Z_axis
  3331  000546  0100               	movlb	0	; () banked
  3332  000548  4B8E               	infsnz	pick_and_place@i_919& (0+255),f,b
  3333  00054A  2B8F               	incf	(pick_and_place@i_919+1)& (0+255),f,b
  3334  00054C                     l5199:
  3335  00054C  FFFF               	dw	65535	; assembler added errata NOP
  3336                           
  3337                           ; BSR set to: 0
  3338  00054E  BF8F               	btfsc	(pick_and_place@i_919+1)& (0+255),7,b
  3339  000550  EFB6  F002         	goto	u5760
  3340  000554  518F               	movf	(pick_and_place@i_919+1)& (0+255),w,b
  3341  000556  E107               	bnz	u5761
  3342  000558  0E09               	movlw	9
  3343  00055A  5D8E               	subwf	pick_and_place@i_919& (0+255),w,b
  3344  00055C  B0D8               	btfsc	status,0,c
  3345  00055E  EFB3  F002         	goto	u5761
  3346  000562  EFB6  F002         	goto	u5760
  3347  000566                     u5761:
  3348  000566  FFFF               	dw	65535	; assembler added errata NOP
  3349  000568  EFC0  F002         	goto	l5203
  3350  00056C                     u5760:
  3351  00056C  FFFF               	dw	65535	; assembler added errata NOP
  3352  00056E                     
  3353                           ; BSR set to: 0
  3354  00056E  5072               	movf	_stop^0,w,c
  3355  000570  B4D8               	btfsc	status,2,c
  3356  000572  EFBD  F002         	goto	u5771
  3357  000576  EFC0  F002         	goto	u5770
  3358  00057A                     u5771:
  3359  00057A  FFFF               	dw	65535	; assembler added errata NOP
  3360  00057C  EF9F  F002         	goto	l5195
  3361  000580                     u5770:
  3362  000580                     l5203:
  3363  000580  FFFF               	dw	65535	; assembler added errata NOP
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;main.c: 718:     X_dir=((X_Pick<X_Place)? 1:0);
  3367  000582  506B               	movf	_X_Place^0,w,c
  3368  000584  5C6D               	subwf	_X_Pick^0,w,c
  3369  000586  506E               	movf	(_X_Pick+1)^0,w,c
  3370  000588  0A80               	xorlw	128
  3371  00058A  6E3D               	movwf	??_pick_and_place^0,c
  3372  00058C  506C               	movf	(_X_Place+1)^0,w,c
  3373  00058E  0A80               	xorlw	128
  3374  000590  583D               	subwfb	??_pick_and_place^0,w,c
  3375  000592  A0D8               	btfss	status,0,c
  3376  000594  EFCE  F002         	goto	u5781
  3377  000598  EFD2  F002         	goto	u5780
  3378  00059C                     u5781:
  3379  00059C  FFFF               	dw	65535	; assembler added errata NOP
  3380  00059E  0E01               	movlw	1
  3381  0005A0  EFD4  F002         	goto	u5790
  3382  0005A4                     u5780:
  3383  0005A4  FFFF               	dw	65535	; assembler added errata NOP
  3384  0005A6  0E00               	movlw	0
  3385  0005A8                     u5790:
  3386  0005A8  FFFF               	dw	65535	; assembler added errata NOP
  3387  0005AA  6E71               	movwf	_X_dir^0,c
  3388                           
  3389                           ;main.c: 719:     Y_dir=((Y_Pick<Y_Place)? 1:0);
  3390  0005AC  5067               	movf	_Y_Place^0,w,c
  3391  0005AE  5C69               	subwf	_Y_Pick^0,w,c
  3392  0005B0  506A               	movf	(_Y_Pick+1)^0,w,c
  3393  0005B2  0A80               	xorlw	128
  3394  0005B4  6E3D               	movwf	??_pick_and_place^0,c
  3395  0005B6  5068               	movf	(_Y_Place+1)^0,w,c
  3396  0005B8  0A80               	xorlw	128
  3397  0005BA  583D               	subwfb	??_pick_and_place^0,w,c
  3398  0005BC  A0D8               	btfss	status,0,c
  3399  0005BE  EFE3  F002         	goto	u5801
  3400  0005C2  EFE7  F002         	goto	u5800
  3401  0005C6                     u5801:
  3402  0005C6  FFFF               	dw	65535	; assembler added errata NOP
  3403  0005C8  0E01               	movlw	1
  3404  0005CA  EFE9  F002         	goto	u5810
  3405  0005CE                     u5800:
  3406  0005CE  FFFF               	dw	65535	; assembler added errata NOP
  3407  0005D0  0E00               	movlw	0
  3408  0005D2                     u5810:
  3409  0005D2  FFFF               	dw	65535	; assembler added errata NOP
  3410  0005D4  6E70               	movwf	_Y_dir^0,c
  3411                           
  3412                           ;main.c: 720:     Twist_dir=((Pick_Angle<Place_Angle)? 1:0);
  3413  0005D6  5063               	movf	_Place_Angle^0,w,c
  3414  0005D8  5C65               	subwf	_Pick_Angle^0,w,c
  3415  0005DA  5066               	movf	(_Pick_Angle+1)^0,w,c
  3416  0005DC  0A80               	xorlw	128
  3417  0005DE  6E3D               	movwf	??_pick_and_place^0,c
  3418  0005E0  5064               	movf	(_Place_Angle+1)^0,w,c
  3419  0005E2  0A80               	xorlw	128
  3420  0005E4  583D               	subwfb	??_pick_and_place^0,w,c
  3421  0005E6  A0D8               	btfss	status,0,c
  3422  0005E8  EFF8  F002         	goto	u5821
  3423  0005EC  EFFC  F002         	goto	u5820
  3424  0005F0                     u5821:
  3425  0005F0  FFFF               	dw	65535	; assembler added errata NOP
  3426  0005F2  0E01               	movlw	1
  3427  0005F4  EFFE  F002         	goto	u5830
  3428  0005F8                     u5820:
  3429  0005F8  FFFF               	dw	65535	; assembler added errata NOP
  3430  0005FA  0E00               	movlw	0
  3431  0005FC                     u5830:
  3432  0005FC  FFFF               	dw	65535	; assembler added errata NOP
  3433  0005FE  6E6F               	movwf	_Twist_dir^0,c
  3434  000600                     
  3435                           ; BSR set to: 0
  3436                           ;main.c: 723:     if(!stop){
  3437  000600  5072               	movf	_stop^0,w,c
  3438  000602  A4D8               	btfss	status,2,c
  3439  000604  EF06  F003         	goto	u5841
  3440  000608  EF09  F003         	goto	u5840
  3441  00060C                     u5841:
  3442  00060C  FFFF               	dw	65535	; assembler added errata NOP
  3443  00060E  EF14  F003         	goto	l5211
  3444  000612                     u5840:
  3445  000612  FFFF               	dw	65535	; assembler added errata NOP
  3446  000614                     
  3447                           ; BSR set to: 0
  3448                           ;main.c: 724:         print_string("\nPlacing component: ");
  3449  000614  0E82               	movlw	low STR_22
  3450  000616  6E0A               	movwf	print_string@strng^0,c
  3451  000618  0E7F               	movlw	high STR_22
  3452  00061A  6E0B               	movwf	(print_string@strng+1)^0,c
  3453  00061C  ECFE  F017         	call	_print_string	;wreg free
  3454  000620                     
  3455                           ;main.c: 725:         print_char(Componnt);
  3456  000620  0100               	movlb	0	; () banked
  3457  000622  51A0               	movf	pick_and_place@Componnt& (0+255),w,b
  3458  000624  ECF1  F01A         	call	_print_char
  3459  000628                     l5211:
  3460  000628  FFFF               	dw	65535	; assembler added errata NOP
  3461                           
  3462                           ;main.c: 730:     for(int i = 0; (i<((((X_Place-X_Pick) > 0 ? (X_Place-X_Pick) : -(X_Pla
      +                          ce-X_Pick)))*steps_per_unit)) && !stop; i++){
  3463  00062A  0E00               	movlw	0
  3464  00062C  0100               	movlb	0	; () banked
  3465  00062E  6F91               	movwf	(pick_and_place@i_921+1)& (0+255),b
  3466  000630  0E00               	movlw	0
  3467  000632  6F90               	movwf	pick_and_place@i_921& (0+255),b
  3468  000634  EF23  F003         	goto	l5217
  3469  000638                     l5213:
  3470  000638  FFFF               	dw	65535	; assembler added errata NOP
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;main.c: 731:         X_axis(X_dir);
  3474  00063A  5071               	movf	_X_dir^0,w,c
  3475  00063C  ECF8  F012         	call	_X_axis
  3476  000640                     
  3477                           ;main.c: 732:     }
  3478  000640  0100               	movlb	0	; () banked
  3479  000642  4B90               	infsnz	pick_and_place@i_921& (0+255),f,b
  3480  000644  2B91               	incf	(pick_and_place@i_921+1)& (0+255),f,b
  3481  000646                     l5217:
  3482  000646  FFFF               	dw	65535	; assembler added errata NOP
  3483                           
  3484                           ; BSR set to: 0
  3485  000648  506D               	movf	_X_Pick^0,w,c
  3486  00064A  5C6B               	subwf	_X_Place^0,w,c
  3487  00064C  6E3D               	movwf	??_pick_and_place^0,c
  3488  00064E  506E               	movf	(_X_Pick+1)^0,w,c
  3489  000650  586C               	subwfb	(_X_Place+1)^0,w,c
  3490  000652  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3491  000654  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3492  000656  EF38  F003         	goto	u5850
  3493  00065A  503E               	movf	(??_pick_and_place+1)^0,w,c
  3494  00065C  E106               	bnz	u5851
  3495  00065E  043D               	decf	??_pick_and_place^0,w,c
  3496  000660  B0D8               	btfsc	status,0,c
  3497  000662  EF35  F003         	goto	u5851
  3498  000666  EF38  F003         	goto	u5850
  3499  00066A                     u5851:
  3500  00066A  FFFF               	dw	65535	; assembler added errata NOP
  3501  00066C  EF49  F003         	goto	l5221
  3502  000670                     u5850:
  3503  000670  FFFF               	dw	65535	; assembler added errata NOP
  3504  000672                     
  3505                           ; BSR set to: 0
  3506  000672  506D               	movf	_X_Pick^0,w,c
  3507  000674  5C6B               	subwf	_X_Place^0,w,c
  3508  000676  6E3D               	movwf	??_pick_and_place^0,c
  3509  000678  506E               	movf	(_X_Pick+1)^0,w,c
  3510  00067A  586C               	subwfb	(_X_Place+1)^0,w,c
  3511  00067C  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3512  00067E  1E3D               	comf	??_pick_and_place^0,f,c
  3513  000680  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3514  000682  4A3D               	infsnz	??_pick_and_place^0,f,c
  3515  000684  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3516  000686  C03D  F092         	movff	??_pick_and_place,_pick_and_place$922
  3517  00068A  C03E  F093         	movff	??_pick_and_place+1,_pick_and_place$922+1
  3518  00068E  EF50  F003         	goto	l5223
  3519  000692                     l5221:
  3520  000692  FFFF               	dw	65535	; assembler added errata NOP
  3521                           
  3522                           ; BSR set to: 0
  3523  000694  506D               	movf	_X_Pick^0,w,c
  3524  000696  5C6B               	subwf	_X_Place^0,w,c
  3525  000698  6F92               	movwf	_pick_and_place$922& (0+255),b
  3526  00069A  506E               	movf	(_X_Pick+1)^0,w,c
  3527  00069C  586C               	subwfb	(_X_Place+1)^0,w,c
  3528  00069E  6F93               	movwf	(_pick_and_place$922+1)& (0+255),b
  3529  0006A0                     l5223:
  3530  0006A0  FFFF               	dw	65535	; assembler added errata NOP
  3531                           
  3532                           ; BSR set to: 0
  3533  0006A2  C092  F00A         	movff	_pick_and_place$922,___wmul@multiplier
  3534  0006A6  C093  F00B         	movff	_pick_and_place$922+1,___wmul@multiplier+1
  3535  0006AA  0E00               	movlw	0
  3536  0006AC  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  3537  0006AE  0E03               	movlw	3
  3538  0006B0  6E0C               	movwf	___wmul@multiplicand^0,c
  3539  0006B2  ECB3  F01A         	call	___wmul	;wreg free
  3540  0006B6  500A               	movf	?___wmul^0,w,c
  3541  0006B8  0100               	movlb	0	; () banked
  3542  0006BA  5D90               	subwf	pick_and_place@i_921& (0+255),w,b
  3543  0006BC  5191               	movf	(pick_and_place@i_921+1)& (0+255),w,b
  3544  0006BE  0A80               	xorlw	128
  3545  0006C0  6E3D               	movwf	??_pick_and_place^0,c
  3546  0006C2  500B               	movf	(?___wmul+1)^0,w,c
  3547  0006C4  0A80               	xorlw	128
  3548  0006C6  583D               	subwfb	??_pick_and_place^0,w,c
  3549  0006C8  B0D8               	btfsc	status,0,c
  3550  0006CA  EF69  F003         	goto	u5861
  3551  0006CE  EF6C  F003         	goto	u5860
  3552  0006D2                     u5861:
  3553  0006D2  FFFF               	dw	65535	; assembler added errata NOP
  3554  0006D4  EF76  F003         	goto	l5227
  3555  0006D8                     u5860:
  3556  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  3557  0006DA                     
  3558                           ; BSR set to: 0
  3559  0006DA  5072               	movf	_stop^0,w,c
  3560  0006DC  B4D8               	btfsc	status,2,c
  3561  0006DE  EF73  F003         	goto	u5871
  3562  0006E2  EF76  F003         	goto	u5870
  3563  0006E6                     u5871:
  3564  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  3565  0006E8  EF1C  F003         	goto	l5213
  3566  0006EC                     u5870:
  3567  0006EC                     l5227:
  3568  0006EC  FFFF               	dw	65535	; assembler added errata NOP
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;main.c: 733:     for(int i = 0; (i<((((Y_Place-Y_Pick) > 0 ? (Y_Place-Y_Pick) : -(Y_Pla
      +                          ce-Y_Pick)))*steps_per_unit)) && !stop; i++){
  3572  0006EE  0E00               	movlw	0
  3573  0006F0  6F95               	movwf	(pick_and_place@i_923+1)& (0+255),b
  3574  0006F2  0E00               	movlw	0
  3575  0006F4  6F94               	movwf	pick_and_place@i_923& (0+255),b
  3576  0006F6  EF84  F003         	goto	l5233
  3577  0006FA                     l5229:
  3578  0006FA  FFFF               	dw	65535	; assembler added errata NOP
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;main.c: 734:         Y_axis(Y_dir);
  3582  0006FC  5070               	movf	_Y_dir^0,w,c
  3583  0006FE  EC57  F012         	call	_Y_axis
  3584  000702                     
  3585                           ;main.c: 735:     }
  3586  000702  0100               	movlb	0	; () banked
  3587  000704  4B94               	infsnz	pick_and_place@i_923& (0+255),f,b
  3588  000706  2B95               	incf	(pick_and_place@i_923+1)& (0+255),f,b
  3589  000708                     l5233:
  3590  000708  FFFF               	dw	65535	; assembler added errata NOP
  3591                           
  3592                           ; BSR set to: 0
  3593  00070A  5069               	movf	_Y_Pick^0,w,c
  3594  00070C  5C67               	subwf	_Y_Place^0,w,c
  3595  00070E  6E3D               	movwf	??_pick_and_place^0,c
  3596  000710  506A               	movf	(_Y_Pick+1)^0,w,c
  3597  000712  5868               	subwfb	(_Y_Place+1)^0,w,c
  3598  000714  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3599  000716  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3600  000718  EF99  F003         	goto	u5880
  3601  00071C  503E               	movf	(??_pick_and_place+1)^0,w,c
  3602  00071E  E106               	bnz	u5881
  3603  000720  043D               	decf	??_pick_and_place^0,w,c
  3604  000722  B0D8               	btfsc	status,0,c
  3605  000724  EF96  F003         	goto	u5881
  3606  000728  EF99  F003         	goto	u5880
  3607  00072C                     u5881:
  3608  00072C  FFFF               	dw	65535	; assembler added errata NOP
  3609  00072E  EFAA  F003         	goto	l5237
  3610  000732                     u5880:
  3611  000732  FFFF               	dw	65535	; assembler added errata NOP
  3612  000734                     
  3613                           ; BSR set to: 0
  3614  000734  5069               	movf	_Y_Pick^0,w,c
  3615  000736  5C67               	subwf	_Y_Place^0,w,c
  3616  000738  6E3D               	movwf	??_pick_and_place^0,c
  3617  00073A  506A               	movf	(_Y_Pick+1)^0,w,c
  3618  00073C  5868               	subwfb	(_Y_Place+1)^0,w,c
  3619  00073E  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3620  000740  1E3D               	comf	??_pick_and_place^0,f,c
  3621  000742  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3622  000744  4A3D               	infsnz	??_pick_and_place^0,f,c
  3623  000746  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3624  000748  C03D  F096         	movff	??_pick_and_place,_pick_and_place$924
  3625  00074C  C03E  F097         	movff	??_pick_and_place+1,_pick_and_place$924+1
  3626  000750  EFB1  F003         	goto	l5239
  3627  000754                     l5237:
  3628  000754  FFFF               	dw	65535	; assembler added errata NOP
  3629                           
  3630                           ; BSR set to: 0
  3631  000756  5069               	movf	_Y_Pick^0,w,c
  3632  000758  5C67               	subwf	_Y_Place^0,w,c
  3633  00075A  6F96               	movwf	_pick_and_place$924& (0+255),b
  3634  00075C  506A               	movf	(_Y_Pick+1)^0,w,c
  3635  00075E  5868               	subwfb	(_Y_Place+1)^0,w,c
  3636  000760  6F97               	movwf	(_pick_and_place$924+1)& (0+255),b
  3637  000762                     l5239:
  3638  000762  FFFF               	dw	65535	; assembler added errata NOP
  3639                           
  3640                           ; BSR set to: 0
  3641  000764  C096  F00A         	movff	_pick_and_place$924,___wmul@multiplier
  3642  000768  C097  F00B         	movff	_pick_and_place$924+1,___wmul@multiplier+1
  3643  00076C  0E00               	movlw	0
  3644  00076E  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  3645  000770  0E03               	movlw	3
  3646  000772  6E0C               	movwf	___wmul@multiplicand^0,c
  3647  000774  ECB3  F01A         	call	___wmul	;wreg free
  3648  000778  500A               	movf	?___wmul^0,w,c
  3649  00077A  0100               	movlb	0	; () banked
  3650  00077C  5D94               	subwf	pick_and_place@i_923& (0+255),w,b
  3651  00077E  5195               	movf	(pick_and_place@i_923+1)& (0+255),w,b
  3652  000780  0A80               	xorlw	128
  3653  000782  6E3D               	movwf	??_pick_and_place^0,c
  3654  000784  500B               	movf	(?___wmul+1)^0,w,c
  3655  000786  0A80               	xorlw	128
  3656  000788  583D               	subwfb	??_pick_and_place^0,w,c
  3657  00078A  B0D8               	btfsc	status,0,c
  3658  00078C  EFCA  F003         	goto	u5891
  3659  000790  EFCD  F003         	goto	u5890
  3660  000794                     u5891:
  3661  000794  FFFF               	dw	65535	; assembler added errata NOP
  3662  000796  EFD7  F003         	goto	l5243
  3663  00079A                     u5890:
  3664  00079A  FFFF               	dw	65535	; assembler added errata NOP
  3665  00079C                     
  3666                           ; BSR set to: 0
  3667  00079C  5072               	movf	_stop^0,w,c
  3668  00079E  B4D8               	btfsc	status,2,c
  3669  0007A0  EFD4  F003         	goto	u5901
  3670  0007A4  EFD7  F003         	goto	u5900
  3671  0007A8                     u5901:
  3672  0007A8  FFFF               	dw	65535	; assembler added errata NOP
  3673  0007AA  EF7D  F003         	goto	l5229
  3674  0007AE                     u5900:
  3675  0007AE                     l5243:
  3676  0007AE  FFFF               	dw	65535	; assembler added errata NOP
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;main.c: 736:     for(int i = 0; (i<(((Pick_Angle-Place_Angle) > 0 ? (Pick_Angle-Place_A
      +                          ngle) : -(Pick_Angle-Place_Angle))/3.6)) && !stop; i++){
  3680  0007B0  0E00               	movlw	0
  3681  0007B2  6F99               	movwf	(pick_and_place@i_925+1)& (0+255),b
  3682  0007B4  0E00               	movlw	0
  3683  0007B6  6F98               	movwf	pick_and_place@i_925& (0+255),b
  3684  0007B8  EFE5  F003         	goto	l5249
  3685  0007BC                     l5245:
  3686  0007BC  FFFF               	dw	65535	; assembler added errata NOP
  3687                           
  3688                           ;main.c: 737:         Twister(Twist_dir);
  3689  0007BE  506F               	movf	_Twist_dir^0,w,c
  3690  0007C0  EC99  F013         	call	_Twister
  3691  0007C4                     
  3692                           ;main.c: 738:     }
  3693  0007C4  0100               	movlb	0	; () banked
  3694  0007C6  4B98               	infsnz	pick_and_place@i_925& (0+255),f,b
  3695  0007C8  2B99               	incf	(pick_and_place@i_925+1)& (0+255),f,b
  3696  0007CA                     l5249:
  3697  0007CA  FFFF               	dw	65535	; assembler added errata NOP
  3698                           
  3699                           ; BSR set to: 0
  3700  0007CC  5063               	movf	_Place_Angle^0,w,c
  3701  0007CE  5C65               	subwf	_Pick_Angle^0,w,c
  3702  0007D0  6E3D               	movwf	??_pick_and_place^0,c
  3703  0007D2  5064               	movf	(_Place_Angle+1)^0,w,c
  3704  0007D4  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3705  0007D6  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3706  0007D8  BE3E               	btfsc	(??_pick_and_place+1)^0,7,c
  3707  0007DA  EFFA  F003         	goto	u5910
  3708  0007DE  503E               	movf	(??_pick_and_place+1)^0,w,c
  3709  0007E0  E106               	bnz	u5911
  3710  0007E2  043D               	decf	??_pick_and_place^0,w,c
  3711  0007E4  B0D8               	btfsc	status,0,c
  3712  0007E6  EFF7  F003         	goto	u5911
  3713  0007EA  EFFA  F003         	goto	u5910
  3714  0007EE                     u5911:
  3715  0007EE  FFFF               	dw	65535	; assembler added errata NOP
  3716  0007F0  EF0B  F004         	goto	l5253
  3717  0007F4                     u5910:
  3718  0007F4  FFFF               	dw	65535	; assembler added errata NOP
  3719  0007F6                     
  3720                           ; BSR set to: 0
  3721  0007F6  5063               	movf	_Place_Angle^0,w,c
  3722  0007F8  5C65               	subwf	_Pick_Angle^0,w,c
  3723  0007FA  6E3D               	movwf	??_pick_and_place^0,c
  3724  0007FC  5064               	movf	(_Place_Angle+1)^0,w,c
  3725  0007FE  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3726  000800  6E3E               	movwf	(??_pick_and_place+1)^0,c
  3727  000802  1E3D               	comf	??_pick_and_place^0,f,c
  3728  000804  1E3E               	comf	(??_pick_and_place+1)^0,f,c
  3729  000806  4A3D               	infsnz	??_pick_and_place^0,f,c
  3730  000808  2A3E               	incf	(??_pick_and_place+1)^0,f,c
  3731  00080A  C03D  F09A         	movff	??_pick_and_place,_pick_and_place$926
  3732  00080E  C03E  F09B         	movff	??_pick_and_place+1,_pick_and_place$926+1
  3733  000812  EF12  F004         	goto	l5255
  3734  000816                     l5253:
  3735  000816  FFFF               	dw	65535	; assembler added errata NOP
  3736                           
  3737                           ; BSR set to: 0
  3738  000818  5063               	movf	_Place_Angle^0,w,c
  3739  00081A  5C65               	subwf	_Pick_Angle^0,w,c
  3740  00081C  6F9A               	movwf	_pick_and_place$926& (0+255),b
  3741  00081E  5064               	movf	(_Place_Angle+1)^0,w,c
  3742  000820  5866               	subwfb	(_Pick_Angle+1)^0,w,c
  3743  000822  6F9B               	movwf	(_pick_and_place$926+1)& (0+255),b
  3744  000824                     l5255:
  3745  000824  FFFF               	dw	65535	; assembler added errata NOP
  3746                           
  3747                           ; BSR set to: 0
  3748  000826  C098  F00A         	movff	pick_and_place@i_925,___xxtofl@val
  3749  00082A  C099  F00B         	movff	pick_and_place@i_925+1,___xxtofl@val+1
  3750  00082E  0E00               	movlw	0
  3751  000830  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3752  000832  0EFF               	movlw	-1
  3753  000834  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3754  000836  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3755  000838  0E01               	movlw	1
  3756  00083A  EC28  F00F         	call	___xxtofl
  3757  00083E  C00A  F031         	movff	?___xxtofl,___flge@ff1
  3758  000842  C00B  F032         	movff	?___xxtofl+1,___flge@ff1+1
  3759  000846  C00C  F033         	movff	?___xxtofl+2,___flge@ff1+2
  3760  00084A  C00D  F034         	movff	?___xxtofl+3,___flge@ff1+3
  3761  00084E  0E66               	movlw	102
  3762  000850  6E1C               	movwf	___fldiv@a^0,c
  3763  000852  0E66               	movlw	102
  3764  000854  6E1D               	movwf	(___fldiv@a+1)^0,c
  3765  000856  0E66               	movlw	102
  3766  000858  6E1E               	movwf	(___fldiv@a+2)^0,c
  3767  00085A  0E40               	movlw	64
  3768  00085C  6E1F               	movwf	(___fldiv@a+3)^0,c
  3769  00085E  C09A  F00A         	movff	_pick_and_place$926,___xxtofl@val
  3770  000862  C09B  F00B         	movff	_pick_and_place$926+1,___xxtofl@val+1
  3771  000866  0E00               	movlw	0
  3772  000868  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3773  00086A  0EFF               	movlw	-1
  3774  00086C  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3775  00086E  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3776  000870  0E01               	movlw	1
  3777  000872  EC28  F00F         	call	___xxtofl
  3778  000876  C00A  F018         	movff	?___xxtofl,___fldiv@b
  3779  00087A  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
  3780  00087E  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
  3781  000882  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
  3782  000886  ECEB  F009         	call	___fldiv	;wreg free
  3783  00088A  C018  F035         	movff	?___fldiv,___flge@ff2
  3784  00088E  C019  F036         	movff	?___fldiv+1,___flge@ff2+1
  3785  000892  C01A  F037         	movff	?___fldiv+2,___flge@ff2+2
  3786  000896  C01B  F038         	movff	?___fldiv+3,___flge@ff2+3
  3787  00089A  EC72  F015         	call	___flge	;wreg free
  3788  00089E  B0D8               	btfsc	status,0,c
  3789  0008A0  EF54  F004         	goto	u5921
  3790  0008A4  EF57  F004         	goto	u5920
  3791  0008A8                     u5921:
  3792  0008A8  FFFF               	dw	65535	; assembler added errata NOP
  3793  0008AA  EF61  F004         	goto	l5259
  3794  0008AE                     u5920:
  3795  0008AE  FFFF               	dw	65535	; assembler added errata NOP
  3796  0008B0  5072               	movf	_stop^0,w,c
  3797  0008B2  B4D8               	btfsc	status,2,c
  3798  0008B4  EF5E  F004         	goto	u5931
  3799  0008B8  EF61  F004         	goto	u5930
  3800  0008BC                     u5931:
  3801  0008BC  FFFF               	dw	65535	; assembler added errata NOP
  3802  0008BE  EFDE  F003         	goto	l5245
  3803  0008C2                     u5930:
  3804  0008C2                     l5259:
  3805  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  3806                           
  3807                           ;main.c: 741:     for(int i=0; i<(3*steps_per_unit) && !stop; i++){Z_axis(1);}
  3808  0008C4  0E00               	movlw	0
  3809  0008C6  0100               	movlb	0	; () banked
  3810  0008C8  6F9D               	movwf	(pick_and_place@i_927+1)& (0+255),b
  3811  0008CA  0E00               	movlw	0
  3812  0008CC  6F9C               	movwf	pick_and_place@i_927& (0+255),b
  3813  0008CE  EF70  F004         	goto	l5265
  3814  0008D2                     l5261:
  3815  0008D2  FFFF               	dw	65535	; assembler added errata NOP
  3816                           
  3817                           ; BSR set to: 0
  3818  0008D4  0E01               	movlw	1
  3819  0008D6  ECB6  F011         	call	_Z_axis
  3820  0008DA  0100               	movlb	0	; () banked
  3821  0008DC  4B9C               	infsnz	pick_and_place@i_927& (0+255),f,b
  3822  0008DE  2B9D               	incf	(pick_and_place@i_927+1)& (0+255),f,b
  3823  0008E0                     l5265:
  3824  0008E0  FFFF               	dw	65535	; assembler added errata NOP
  3825                           
  3826                           ; BSR set to: 0
  3827  0008E2  BF9D               	btfsc	(pick_and_place@i_927+1)& (0+255),7,b
  3828  0008E4  EF80  F004         	goto	u5940
  3829  0008E8  519D               	movf	(pick_and_place@i_927+1)& (0+255),w,b
  3830  0008EA  E107               	bnz	u5941
  3831  0008EC  0E09               	movlw	9
  3832  0008EE  5D9C               	subwf	pick_and_place@i_927& (0+255),w,b
  3833  0008F0  B0D8               	btfsc	status,0,c
  3834  0008F2  EF7D  F004         	goto	u5941
  3835  0008F6  EF80  F004         	goto	u5940
  3836  0008FA                     u5941:
  3837  0008FA  FFFF               	dw	65535	; assembler added errata NOP
  3838  0008FC  EF8A  F004         	goto	l5269
  3839  000900                     u5940:
  3840  000900  FFFF               	dw	65535	; assembler added errata NOP
  3841  000902                     
  3842                           ; BSR set to: 0
  3843  000902  5072               	movf	_stop^0,w,c
  3844  000904  B4D8               	btfsc	status,2,c
  3845  000906  EF87  F004         	goto	u5951
  3846  00090A  EF8A  F004         	goto	u5950
  3847  00090E                     u5951:
  3848  00090E  FFFF               	dw	65535	; assembler added errata NOP
  3849  000910  EF69  F004         	goto	l5261
  3850  000914                     u5950:
  3851  000914                     l5269:
  3852  000914  FFFF               	dw	65535	; assembler added errata NOP
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;main.c: 742:     Tweezer(1);
  3856  000916  0E01               	movlw	1
  3857  000918  ECDB  F018         	call	_Tweezer
  3858  00091C                     
  3859                           ;main.c: 743:     for(int i=0; i<(3*steps_per_unit) && !stop; i++){Z_axis(0);}
  3860  00091C  0E00               	movlw	0
  3861  00091E  0100               	movlb	0	; () banked
  3862  000920  6F9F               	movwf	(pick_and_place@i_928+1)& (0+255),b
  3863  000922  0E00               	movlw	0
  3864  000924  6F9E               	movwf	pick_and_place@i_928& (0+255),b
  3865  000926  EF9C  F004         	goto	l5277
  3866  00092A                     l5273:
  3867  00092A  FFFF               	dw	65535	; assembler added errata NOP
  3868                           
  3869                           ; BSR set to: 0
  3870  00092C  0E00               	movlw	0
  3871  00092E  ECB6  F011         	call	_Z_axis
  3872  000932  0100               	movlb	0	; () banked
  3873  000934  4B9E               	infsnz	pick_and_place@i_928& (0+255),f,b
  3874  000936  2B9F               	incf	(pick_and_place@i_928+1)& (0+255),f,b
  3875  000938                     l5277:
  3876  000938  FFFF               	dw	65535	; assembler added errata NOP
  3877                           
  3878                           ; BSR set to: 0
  3879  00093A  BF9F               	btfsc	(pick_and_place@i_928+1)& (0+255),7,b
  3880  00093C  EFAC  F004         	goto	u5960
  3881  000940  519F               	movf	(pick_and_place@i_928+1)& (0+255),w,b
  3882  000942  E107               	bnz	u5961
  3883  000944  0E09               	movlw	9
  3884  000946  5D9E               	subwf	pick_and_place@i_928& (0+255),w,b
  3885  000948  B0D8               	btfsc	status,0,c
  3886  00094A  EFA9  F004         	goto	u5961
  3887  00094E  EFAC  F004         	goto	u5960
  3888  000952                     u5961:
  3889  000952  FFFF               	dw	65535	; assembler added errata NOP
  3890  000954  EFB6  F004         	goto	l453
  3891  000958                     u5960:
  3892  000958  FFFF               	dw	65535	; assembler added errata NOP
  3893  00095A                     
  3894                           ; BSR set to: 0
  3895  00095A  5072               	movf	_stop^0,w,c
  3896  00095C  B4D8               	btfsc	status,2,c
  3897  00095E  EFB3  F004         	goto	u5971
  3898  000962  EFB6  F004         	goto	u5970
  3899  000966                     u5971:
  3900  000966  FFFF               	dw	65535	; assembler added errata NOP
  3901  000968  EF95  F004         	goto	l5273
  3902  00096C                     u5970:
  3903  00096C                     l453:
  3904  00096C  FFFF               	dw	65535	; assembler added errata NOP
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;main.c: 746:     Angle_diff= Place_Angle;
  3908  00096E  C063  F05D         	movff	_Place_Angle,_Angle_diff
  3909  000972  C064  F05E         	movff	_Place_Angle+1,_Angle_diff+1
  3910                           
  3911                           ;main.c: 747:     X_diff = X_Place;
  3912  000976  C06B  F061         	movff	_X_Place,_X_diff
  3913  00097A  C06C  F062         	movff	_X_Place+1,_X_diff+1
  3914                           
  3915                           ;main.c: 748:     Y_diff = Y_Place;
  3916  00097E  C067  F05F         	movff	_Y_Place,_Y_diff
  3917  000982  C068  F060         	movff	_Y_Place+1,_Y_diff+1
  3918  000986                     
  3919                           ; BSR set to: 0
  3920  000986  0012               	return		;funcret
  3921  000988  FFFF               	dw	65535	; errata NOP
  3922  00098A                     __end_of_pick_and_place:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _fetch_coordinates *****************
  3926 ;; Defined at:
  3927 ;;		line 612 in file "main.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  Componnt        1    wreg     unsigned char 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  Componnt        1    9[COMRAM] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  2  357[None  ] int 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3941 ;;      Params:         0       0       0       0       0       0       0
  3942 ;;      Locals:         1       0       0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0
  3944 ;;      Totals:         1       0       0       0       0       0       0
  3945 ;;Total ram usage:        1 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 2
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_pick_and_place
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text8
  3956  002874                     __ptext8:
  3957                           	callstack 0
  3958  002874                     _fetch_coordinates:
  3959                           	callstack 0
  3960  002874  FFFF               	dw	65535	; assembler added errata NOP
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;incstack = 0
  3964                           ;fetch_coordinates@Componnt stored from wreg
  3965  002876  6E0A               	movwf	fetch_coordinates@Componnt^0,c
  3966  002878                     
  3967                           ;main.c: 613:     if(Componnt=='A'){
  3968  002878  0E41               	movlw	65
  3969  00287A  180A               	xorwf	fetch_coordinates@Componnt^0,w,c
  3970  00287C  A4D8               	btfss	status,2,c
  3971  00287E  EF43  F014         	goto	u4991
  3972  002882  EF46  F014         	goto	u4990
  3973  002886                     u4991:
  3974  002886  FFFF               	dw	65535	; assembler added errata NOP
  3975  002888  EF61  F014         	goto	l4797
  3976  00288C                     u4990:
  3977  00288C  FFFF               	dw	65535	; assembler added errata NOP
  3978  00288E                     
  3979                           ;main.c: 614:         X_Pick=3;
  3980  00288E  0E00               	movlw	0
  3981  002890  6E6E               	movwf	(_X_Pick+1)^0,c
  3982  002892  0E03               	movlw	3
  3983  002894  6E6D               	movwf	_X_Pick^0,c
  3984                           
  3985                           ;main.c: 615:         Y_Pick=4;
  3986  002896  0E00               	movlw	0
  3987  002898  6E6A               	movwf	(_Y_Pick+1)^0,c
  3988  00289A  0E04               	movlw	4
  3989  00289C  6E69               	movwf	_Y_Pick^0,c
  3990                           
  3991                           ;main.c: 616:         Pick_Angle=0;
  3992  00289E  0E00               	movlw	0
  3993  0028A0  6E66               	movwf	(_Pick_Angle+1)^0,c
  3994  0028A2  0E00               	movlw	0
  3995  0028A4  6E65               	movwf	_Pick_Angle^0,c
  3996                           
  3997                           ;main.c: 618:         X_Place=17;
  3998  0028A6  0E00               	movlw	0
  3999  0028A8  6E6C               	movwf	(_X_Place+1)^0,c
  4000  0028AA  0E11               	movlw	17
  4001  0028AC  6E6B               	movwf	_X_Place^0,c
  4002                           
  4003                           ;main.c: 619:         Y_Place=5;
  4004  0028AE  0E00               	movlw	0
  4005  0028B0  6E68               	movwf	(_Y_Place+1)^0,c
  4006  0028B2  0E05               	movlw	5
  4007  0028B4  6E67               	movwf	_Y_Place^0,c
  4008                           
  4009                           ;main.c: 620:         Place_Angle=270;
  4010  0028B6  0E01               	movlw	1
  4011  0028B8  6E64               	movwf	(_Place_Angle+1)^0,c
  4012  0028BA  0E0E               	movlw	14
  4013  0028BC  6E63               	movwf	_Place_Angle^0,c
  4014                           
  4015                           ;main.c: 621:     }
  4016  0028BE  EFD3  F014         	goto	l365
  4017  0028C2                     l4797:
  4018  0028C2  FFFF               	dw	65535	; assembler added errata NOP
  4019  0028C4  0E42               	movlw	66
  4020  0028C6  180A               	xorwf	fetch_coordinates@Componnt^0,w,c
  4021  0028C8  A4D8               	btfss	status,2,c
  4022  0028CA  EF69  F014         	goto	u5001
  4023  0028CE  EF6C  F014         	goto	u5000
  4024  0028D2                     u5001:
  4025  0028D2  FFFF               	dw	65535	; assembler added errata NOP
  4026  0028D4  EF87  F014         	goto	l4801
  4027  0028D8                     u5000:
  4028  0028D8  FFFF               	dw	65535	; assembler added errata NOP
  4029  0028DA                     
  4030                           ;main.c: 623:         X_Pick=3;
  4031  0028DA  0E00               	movlw	0
  4032  0028DC  6E6E               	movwf	(_X_Pick+1)^0,c
  4033  0028DE  0E03               	movlw	3
  4034  0028E0  6E6D               	movwf	_X_Pick^0,c
  4035                           
  4036                           ;main.c: 624:         Y_Pick=10;
  4037  0028E2  0E00               	movlw	0
  4038  0028E4  6E6A               	movwf	(_Y_Pick+1)^0,c
  4039  0028E6  0E0A               	movlw	10
  4040  0028E8  6E69               	movwf	_Y_Pick^0,c
  4041                           
  4042                           ;main.c: 625:         Pick_Angle=90;
  4043  0028EA  0E00               	movlw	0
  4044  0028EC  6E66               	movwf	(_Pick_Angle+1)^0,c
  4045  0028EE  0E5A               	movlw	90
  4046  0028F0  6E65               	movwf	_Pick_Angle^0,c
  4047                           
  4048                           ;main.c: 627:         X_Place=10;
  4049  0028F2  0E00               	movlw	0
  4050  0028F4  6E6C               	movwf	(_X_Place+1)^0,c
  4051  0028F6  0E0A               	movlw	10
  4052  0028F8  6E6B               	movwf	_X_Place^0,c
  4053                           
  4054                           ;main.c: 628:         Y_Place=5;
  4055  0028FA  0E00               	movlw	0
  4056  0028FC  6E68               	movwf	(_Y_Place+1)^0,c
  4057  0028FE  0E05               	movlw	5
  4058  002900  6E67               	movwf	_Y_Place^0,c
  4059                           
  4060                           ;main.c: 629:         Place_Angle=180;
  4061  002902  0E00               	movlw	0
  4062  002904  6E64               	movwf	(_Place_Angle+1)^0,c
  4063  002906  0EB4               	movlw	180
  4064  002908  6E63               	movwf	_Place_Angle^0,c
  4065                           
  4066                           ;main.c: 630:     }
  4067  00290A  EFD3  F014         	goto	l365
  4068  00290E                     l4801:
  4069  00290E  FFFF               	dw	65535	; assembler added errata NOP
  4070  002910  0E43               	movlw	67
  4071  002912  180A               	xorwf	fetch_coordinates@Componnt^0,w,c
  4072  002914  A4D8               	btfss	status,2,c
  4073  002916  EF8F  F014         	goto	u5011
  4074  00291A  EF92  F014         	goto	u5010
  4075  00291E                     u5011:
  4076  00291E  FFFF               	dw	65535	; assembler added errata NOP
  4077  002920  EFAD  F014         	goto	l4805
  4078  002924                     u5010:
  4079  002924  FFFF               	dw	65535	; assembler added errata NOP
  4080  002926                     
  4081                           ;main.c: 632:         X_Pick=3;
  4082  002926  0E00               	movlw	0
  4083  002928  6E6E               	movwf	(_X_Pick+1)^0,c
  4084  00292A  0E03               	movlw	3
  4085  00292C  6E6D               	movwf	_X_Pick^0,c
  4086                           
  4087                           ;main.c: 633:         Y_Pick=15;
  4088  00292E  0E00               	movlw	0
  4089  002930  6E6A               	movwf	(_Y_Pick+1)^0,c
  4090  002932  0E0F               	movlw	15
  4091  002934  6E69               	movwf	_Y_Pick^0,c
  4092                           
  4093                           ;main.c: 634:         Pick_Angle=90;
  4094  002936  0E00               	movlw	0
  4095  002938  6E66               	movwf	(_Pick_Angle+1)^0,c
  4096  00293A  0E5A               	movlw	90
  4097  00293C  6E65               	movwf	_Pick_Angle^0,c
  4098                           
  4099                           ;main.c: 636:         X_Place=16;
  4100  00293E  0E00               	movlw	0
  4101  002940  6E6C               	movwf	(_X_Place+1)^0,c
  4102  002942  0E10               	movlw	16
  4103  002944  6E6B               	movwf	_X_Place^0,c
  4104                           
  4105                           ;main.c: 637:         Y_Place=14;
  4106  002946  0E00               	movlw	0
  4107  002948  6E68               	movwf	(_Y_Place+1)^0,c
  4108  00294A  0E0E               	movlw	14
  4109  00294C  6E67               	movwf	_Y_Place^0,c
  4110                           
  4111                           ;main.c: 638:         Place_Angle=270;
  4112  00294E  0E01               	movlw	1
  4113  002950  6E64               	movwf	(_Place_Angle+1)^0,c
  4114  002952  0E0E               	movlw	14
  4115  002954  6E63               	movwf	_Place_Angle^0,c
  4116                           
  4117                           ;main.c: 639:     }
  4118  002956  EFD3  F014         	goto	l365
  4119  00295A                     l4805:
  4120  00295A  FFFF               	dw	65535	; assembler added errata NOP
  4121  00295C  0E44               	movlw	68
  4122  00295E  180A               	xorwf	fetch_coordinates@Componnt^0,w,c
  4123  002960  A4D8               	btfss	status,2,c
  4124  002962  EFB5  F014         	goto	u5021
  4125  002966  EFB8  F014         	goto	u5020
  4126  00296A                     u5021:
  4127  00296A  FFFF               	dw	65535	; assembler added errata NOP
  4128  00296C  EFD3  F014         	goto	l361
  4129  002970                     u5020:
  4130  002970  FFFF               	dw	65535	; assembler added errata NOP
  4131  002972                     
  4132                           ;main.c: 641:         X_Pick=X_Pick_D;
  4133  002972  C0CF  F06D         	movff	_X_Pick_D,_X_Pick
  4134  002976  C0D0  F06E         	movff	_X_Pick_D+1,_X_Pick+1
  4135                           
  4136                           ;main.c: 642:         Y_Pick=Y_Pick_D;
  4137  00297A  C0CD  F069         	movff	_Y_Pick_D,_Y_Pick
  4138  00297E  C0CE  F06A         	movff	_Y_Pick_D+1,_Y_Pick+1
  4139                           
  4140                           ;main.c: 643:         Pick_Angle=Pick_Angle_D;
  4141  002982  C0CB  F065         	movff	_Pick_Angle_D,_Pick_Angle
  4142  002986  C0CC  F066         	movff	_Pick_Angle_D+1,_Pick_Angle+1
  4143                           
  4144                           ;main.c: 645:         X_Place=X_Place_D;
  4145  00298A  C0C9  F06B         	movff	_X_Place_D,_X_Place
  4146  00298E  C0CA  F06C         	movff	_X_Place_D+1,_X_Place+1
  4147                           
  4148                           ;main.c: 646:         Y_Place=Y_Place_D;
  4149  002992  C0C7  F067         	movff	_Y_Place_D,_Y_Place
  4150  002996  C0C8  F068         	movff	_Y_Place_D+1,_Y_Place+1
  4151                           
  4152                           ;main.c: 647:         Place_Angle=Place_Angle_D;
  4153  00299A  C0C5  F063         	movff	_Place_Angle_D,_Place_Angle
  4154  00299E  C0C6  F064         	movff	_Place_Angle_D+1,_Place_Angle+1
  4155  0029A2  EFD3  F014         	goto	l365
  4156  0029A6                     l361:
  4157  0029A6                     l365:
  4158  0029A6  FFFF               	dw	65535	; assembler added errata NOP
  4159  0029A8  0012               	return		;funcret
  4160  0029AA  FFFF               	dw	65535	; errata NOP
  4161  0029AC                     __end_of_fetch_coordinates:
  4162                           	callstack 0
  4163                           
  4164 ;; *************** function _check_component *****************
  4165 ;; Defined at:
  4166 ;;		line 654 in file "main.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  Compnt          1    wreg     unsigned char 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  Compnt          1   17[COMRAM] unsigned char 
  4171 ;;  j               2   18[COMRAM] int 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4181 ;;      Params:         0       0       0       0       0       0       0
  4182 ;;      Locals:         3       0       0       0       0       0       0
  4183 ;;      Temps:          2       0       0       0       0       0       0
  4184 ;;      Totals:         5       0       0       0       0       0       0
  4185 ;;Total ram usage:        5 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; Hardware stack levels required when called: 3
  4188 ;; This function calls:
  4189 ;;		_print_char
  4190 ;;		_print_string
  4191 ;; This function is called by:
  4192 ;;		_pick_and_place
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text9
  4197  002F18                     __ptext9:
  4198                           	callstack 0
  4199  002F18                     _check_component:
  4200                           	callstack 0
  4201  002F18  FFFF               	dw	65535	; assembler added errata NOP
  4202                           
  4203                           ;incstack = 0
  4204                           ;check_component@Compnt stored from wreg
  4205  002F1A  6E12               	movwf	check_component@Compnt^0,c
  4206  002F1C                     
  4207                           ;main.c: 655:     int j = 0;
  4208  002F1C  0E00               	movlw	0
  4209  002F1E  6E14               	movwf	(check_component@j+1)^0,c
  4210  002F20  0E00               	movlw	0
  4211  002F22  6E13               	movwf	check_component@j^0,c
  4212                           
  4213                           ;main.c: 656:     while(!stop){
  4214  002F24  EFF1  F017         	goto	l4839
  4215  002F28                     l4811:
  4216  002F28  FFFF               	dw	65535	; assembler added errata NOP
  4217                           
  4218                           ;main.c: 657:         if(component_present){
  4219  002F2A  5073               	movf	_component_present^0,w,c
  4220  002F2C  B4D8               	btfsc	status,2,c
  4221  002F2E  EF9B  F017         	goto	u5031
  4222  002F32  EF9E  F017         	goto	u5030
  4223  002F36                     u5031:
  4224  002F36  FFFF               	dw	65535	; assembler added errata NOP
  4225  002F38  EFA3  F017         	goto	l4817
  4226  002F3C                     u5030:
  4227  002F3C  FFFF               	dw	65535	; assembler added errata NOP
  4228  002F3E                     
  4229                           ;main.c: 658:             component_present=0;
  4230  002F3E  0E00               	movlw	0
  4231  002F40  6E73               	movwf	_component_present^0,c
  4232                           
  4233                           ;main.c: 659:             break;
  4234  002F42  EFFB  F017         	goto	l376
  4235  002F46                     l4817:
  4236  002F46  FFFF               	dw	65535	; assembler added errata NOP
  4237  002F48  BE14               	btfsc	(check_component@j+1)^0,7,c
  4238  002F4A  EFAF  F017         	goto	u5041
  4239  002F4E  5014               	movf	(check_component@j+1)^0,w,c
  4240  002F50  E109               	bnz	u5040
  4241  002F52  0413               	decf	check_component@j^0,w,c
  4242  002F54  A0D8               	btfss	status,0,c
  4243  002F56  EFAF  F017         	goto	u5041
  4244  002F5A  EFB2  F017         	goto	u5040
  4245  002F5E                     u5041:
  4246  002F5E  FFFF               	dw	65535	; assembler added errata NOP
  4247  002F60  EFD0  F017         	goto	l4831
  4248  002F64                     u5040:
  4249  002F64  FFFF               	dw	65535	; assembler added errata NOP
  4250  002F66  5073               	movf	_component_present^0,w,c
  4251  002F68  A4D8               	btfss	status,2,c
  4252  002F6A  EFB9  F017         	goto	u5051
  4253  002F6E  EFBC  F017         	goto	u5050
  4254  002F72                     u5051:
  4255  002F72  FFFF               	dw	65535	; assembler added errata NOP
  4256  002F74  EFD0  F017         	goto	l4831
  4257  002F78                     u5050:
  4258  002F78  FFFF               	dw	65535	; assembler added errata NOP
  4259  002F7A                     
  4260                           ;main.c: 662:             print_string("\nComponent ");
  4261  002F7A  0EE8               	movlw	low STR_18
  4262  002F7C  6E0A               	movwf	print_string@strng^0,c
  4263  002F7E  0E7F               	movlw	high STR_18
  4264  002F80  6E0B               	movwf	(print_string@strng+1)^0,c
  4265  002F82  ECFE  F017         	call	_print_string	;wreg free
  4266  002F86                     
  4267                           ;main.c: 663:             print_char(Compnt);
  4268  002F86  5012               	movf	check_component@Compnt^0,w,c
  4269  002F88  ECF1  F01A         	call	_print_char
  4270  002F8C                     
  4271                           ;main.c: 664:             print_string(" missing!");
  4272  002F8C  0EF4               	movlw	low STR_19
  4273  002F8E  6E0A               	movwf	print_string@strng^0,c
  4274  002F90  0E7F               	movlw	high STR_19
  4275  002F92  6E0B               	movwf	(print_string@strng+1)^0,c
  4276  002F94  ECFE  F017         	call	_print_string	;wreg free
  4277  002F98                     
  4278                           ;main.c: 665:             stop=1;
  4279  002F98  0E01               	movlw	1
  4280  002F9A  6E72               	movwf	_stop^0,c
  4281                           
  4282                           ;main.c: 666:             break;
  4283  002F9C  EFFB  F017         	goto	l376
  4284  002FA0                     l4831:
  4285  002FA0  FFFF               	dw	65535	; assembler added errata NOP
  4286  002FA2  5073               	movf	_component_present^0,w,c
  4287  002FA4  A4D8               	btfss	status,2,c
  4288  002FA6  EFD7  F017         	goto	u5061
  4289  002FAA  EFDA  F017         	goto	u5060
  4290  002FAE                     u5061:
  4291  002FAE  FFFF               	dw	65535	; assembler added errata NOP
  4292  002FB0  EFF1  F017         	goto	l372
  4293  002FB4                     u5060:
  4294  002FB4  FFFF               	dw	65535	; assembler added errata NOP
  4295  002FB6                     
  4296                           ;main.c: 669:             print_string("\nwaiting for few seconds for the component..");
  4297  002FB6  0EF6               	movlw	low STR_20
  4298  002FB8  6E0A               	movwf	print_string@strng^0,c
  4299  002FBA  0E7D               	movlw	high STR_20
  4300  002FBC  6E0B               	movwf	(print_string@strng+1)^0,c
  4301  002FBE  ECFE  F017         	call	_print_string	;wreg free
  4302  002FC2                     
  4303                           ;main.c: 670:             _delay((unsigned long)((5000)*(4000000/4000.0)));
  4304  002FC2  0E14               	movlw	20
  4305  002FC4  6E11               	movwf	(??_check_component+1)^0,c
  4306  002FC6  0E0A               	movlw	10
  4307  002FC8  6E10               	movwf	??_check_component^0,c
  4308  002FCA  0E40               	movlw	64
  4309  002FCC                     u6237:
  4310  002FCC  FFFF               	dw	65535	; errata NOP
  4311  002FCE  2EE8               	decfsz	wreg,f,c
  4312  002FD0  D7FD               	bra	u6237
  4313  002FD2  2E10               	decfsz	??_check_component^0,f,c
  4314  002FD4  D7FB               	bra	u6237
  4315  002FD6  2E11               	decfsz	(??_check_component+1)^0,f,c
  4316  002FD8  D7F9               	bra	u6237
  4317  002FDA                     
  4318                           ;main.c: 671:             j++;
  4319  002FDA  4A13               	infsnz	check_component@j^0,f,c
  4320  002FDC  2A14               	incf	(check_component@j+1)^0,f,c
  4321  002FDE  EFF1  F017         	goto	l4839
  4322  002FE2                     l372:
  4323  002FE2                     l4839:
  4324  002FE2  FFFF               	dw	65535	; assembler added errata NOP
  4325                           
  4326                           ;main.c: 656:     while(!stop){
  4327  002FE4  5072               	movf	_stop^0,w,c
  4328  002FE6  B4D8               	btfsc	status,2,c
  4329  002FE8  EFF8  F017         	goto	u5071
  4330  002FEC  EFFB  F017         	goto	u5070
  4331  002FF0                     u5071:
  4332  002FF0  FFFF               	dw	65535	; assembler added errata NOP
  4333  002FF2  EF94  F017         	goto	l4811
  4334  002FF6                     u5070:
  4335  002FF6                     l376:
  4336  002FF6  FFFF               	dw	65535	; assembler added errata NOP
  4337  002FF8  0012               	return		;funcret
  4338  002FFA  FFFF               	dw	65535	; errata NOP
  4339  002FFC                     __end_of_check_component:
  4340                           	callstack 0
  4341                           
  4342 ;; *************** function _print_char *****************
  4343 ;; Defined at:
  4344 ;;		line 52 in file "serial.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  chr             1    wreg     unsigned char 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  chr             1    9[COMRAM] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4358 ;;      Params:         0       0       0       0       0       0       0
  4359 ;;      Locals:         1       0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0
  4361 ;;      Totals:         1       0       0       0       0       0       0
  4362 ;;Total ram usage:        1 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; Hardware stack levels required when called: 2
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_check_component
  4369 ;;		_pick_and_place
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text10
  4374  0035E2                     __ptext10:
  4375                           	callstack 0
  4376  0035E2                     _print_char:
  4377                           	callstack 0
  4378  0035E2  FFFF               	dw	65535	; assembler added errata NOP
  4379                           
  4380                           ;incstack = 0
  4381                           ;print_char@chr stored from wreg
  4382  0035E4  6E0A               	movwf	print_char@chr^0,c
  4383  0035E6                     
  4384                           ;serial.c: 53:     TXREG=chr;
  4385  0035E6  C00A  FFAD         	movff	print_char@chr,4013	;volatile
  4386  0035EA                     l84:
  4387  0035EA  FFFF               	dw	65535	; assembler added errata NOP
  4388  0035EC  A2AC               	btfss	172,1,c	;volatile
  4389  0035EE  EFFB  F01A         	goto	u4771
  4390  0035F2  EFFE  F01A         	goto	u4770
  4391  0035F6                     u4771:
  4392  0035F6  FFFF               	dw	65535	; assembler added errata NOP
  4393  0035F8  EFF5  F01A         	goto	l84
  4394  0035FC                     u4770:
  4395  0035FC  FFFF               	dw	65535	; assembler added errata NOP
  4396  0035FE  0012               	return		;funcret
  4397  003600  FFFF               	dw	65535	; errata NOP
  4398  003602                     __end_of_print_char:
  4399                           	callstack 0
  4400                           
  4401 ;; *************** function ___xxtofl *****************
  4402 ;; Defined at:
  4403 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  sign            1    wreg     unsigned char 
  4406 ;;  val             4    9[COMRAM] long 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  sign            1   17[COMRAM] unsigned char 
  4409 ;;  arg             4   19[COMRAM] unsigned long 
  4410 ;;  exp             1   18[COMRAM] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  4    9[COMRAM] unsigned char 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4420 ;;      Params:         4       0       0       0       0       0       0
  4421 ;;      Locals:         6       0       0       0       0       0       0
  4422 ;;      Temps:          4       0       0       0       0       0       0
  4423 ;;      Totals:        14       0       0       0       0       0       0
  4424 ;;Total ram usage:       14 bytes
  4425 ;; Hardware stack levels used: 1
  4426 ;; Hardware stack levels required when called: 2
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_pick_and_place
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text11
  4435  001E50                     __ptext11:
  4436                           	callstack 0
  4437  001E50                     ___xxtofl:
  4438                           	callstack 0
  4439  001E50  FFFF               	dw	65535	; assembler added errata NOP
  4440                           
  4441                           ;incstack = 0
  4442                           ;___xxtofl@sign stored from wreg
  4443  001E52  6E12               	movwf	___xxtofl@sign^0,c
  4444  001E54  5012               	movf	___xxtofl@sign^0,w,c
  4445  001E56  B4D8               	btfsc	status,2,c
  4446  001E58  EF30  F00F         	goto	u5361
  4447  001E5C  EF33  F00F         	goto	u5360
  4448  001E60                     u5361:
  4449  001E60  FFFF               	dw	65535	; assembler added errata NOP
  4450  001E62  EF58  F00F         	goto	l1146
  4451  001E66                     u5360:
  4452  001E66  FFFF               	dw	65535	; assembler added errata NOP
  4453  001E68  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  4454  001E6A  EF3C  F00F         	goto	u5370
  4455  001E6E  EF39  F00F         	goto	u5371
  4456  001E72                     u5371:
  4457  001E72  FFFF               	dw	65535	; assembler added errata NOP
  4458  001E74  EF58  F00F         	goto	l1146
  4459  001E78                     u5370:
  4460  001E78  FFFF               	dw	65535	; assembler added errata NOP
  4461  001E7A  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
  4462  001E7E  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
  4463  001E82  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
  4464  001E86  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
  4465  001E8A  1E0E               	comf	??___xxtofl^0,f,c
  4466  001E8C  1E0F               	comf	(??___xxtofl+1)^0,f,c
  4467  001E8E  1E10               	comf	(??___xxtofl+2)^0,f,c
  4468  001E90  1E11               	comf	(??___xxtofl+3)^0,f,c
  4469  001E92  2A0E               	incf	??___xxtofl^0,f,c
  4470  001E94  0E00               	movlw	0
  4471  001E96  220F               	addwfc	(??___xxtofl+1)^0,f,c
  4472  001E98  2210               	addwfc	(??___xxtofl+2)^0,f,c
  4473  001E9A  2211               	addwfc	(??___xxtofl+3)^0,f,c
  4474  001E9C  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
  4475  001EA0  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
  4476  001EA4  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
  4477  001EA8  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
  4478  001EAC  EF61  F00F         	goto	l5007
  4479  001EB0                     l1146:
  4480  001EB0  FFFF               	dw	65535	; assembler added errata NOP
  4481  001EB2  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
  4482  001EB6  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4483  001EBA  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4484  001EBE  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4485  001EC2                     l5007:
  4486  001EC2  FFFF               	dw	65535	; assembler added errata NOP
  4487  001EC4  500A               	movf	___xxtofl@val^0,w,c
  4488  001EC6  100B               	iorwf	(___xxtofl@val+1)^0,w,c
  4489  001EC8  100C               	iorwf	(___xxtofl@val+2)^0,w,c
  4490  001ECA  100D               	iorwf	(___xxtofl@val+3)^0,w,c
  4491  001ECC  A4D8               	btfss	status,2,c
  4492  001ECE  EF6B  F00F         	goto	u5381
  4493  001ED2  EF6E  F00F         	goto	u5380
  4494  001ED6                     u5381:
  4495  001ED6  FFFF               	dw	65535	; assembler added errata NOP
  4496  001ED8  EF79  F00F         	goto	l5013
  4497  001EDC                     u5380:
  4498  001EDC  FFFF               	dw	65535	; assembler added errata NOP
  4499  001EDE  0E00               	movlw	0
  4500  001EE0  6E0A               	movwf	?___xxtofl^0,c
  4501  001EE2  0E00               	movlw	0
  4502  001EE4  6E0B               	movwf	(?___xxtofl+1)^0,c
  4503  001EE6  0E00               	movlw	0
  4504  001EE8  6E0C               	movwf	(?___xxtofl+2)^0,c
  4505  001EEA  0E00               	movlw	0
  4506  001EEC  6E0D               	movwf	(?___xxtofl+3)^0,c
  4507  001EEE  EF21  F010         	goto	l1149
  4508  001EF2                     l5013:
  4509  001EF2  FFFF               	dw	65535	; assembler added errata NOP
  4510  001EF4  0E96               	movlw	150
  4511  001EF6  6E13               	movwf	___xxtofl@exp^0,c
  4512  001EF8  EF85  F00F         	goto	l5017
  4513  001EFC                     l5015:
  4514  001EFC  FFFF               	dw	65535	; assembler added errata NOP
  4515  001EFE  2A13               	incf	___xxtofl@exp^0,f,c
  4516  001F00  90D8               	bcf	status,0,c
  4517  001F02  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  4518  001F04  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  4519  001F06  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  4520  001F08  3214               	rrcf	___xxtofl@arg^0,f,c
  4521  001F0A                     l5017:
  4522  001F0A  FFFF               	dw	65535	; assembler added errata NOP
  4523  001F0C  0E00               	movlw	0
  4524  001F0E  1414               	andwf	___xxtofl@arg^0,w,c
  4525  001F10  6E0E               	movwf	??___xxtofl^0,c
  4526  001F12  0E00               	movlw	0
  4527  001F14  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  4528  001F16  6E0F               	movwf	(??___xxtofl+1)^0,c
  4529  001F18  0E00               	movlw	0
  4530  001F1A  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  4531  001F1C  6E10               	movwf	(??___xxtofl+2)^0,c
  4532  001F1E  0EFE               	movlw	254
  4533  001F20  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  4534  001F22  6E11               	movwf	(??___xxtofl+3)^0,c
  4535  001F24  500E               	movf	??___xxtofl^0,w,c
  4536  001F26  100F               	iorwf	(??___xxtofl+1)^0,w,c
  4537  001F28  1010               	iorwf	(??___xxtofl+2)^0,w,c
  4538  001F2A  1011               	iorwf	(??___xxtofl+3)^0,w,c
  4539  001F2C  A4D8               	btfss	status,2,c
  4540  001F2E  EF9B  F00F         	goto	u5391
  4541  001F32  EF9E  F00F         	goto	u5390
  4542  001F36                     u5391:
  4543  001F36  FFFF               	dw	65535	; assembler added errata NOP
  4544  001F38  EF7E  F00F         	goto	l5015
  4545  001F3C                     u5390:
  4546  001F3C  FFFF               	dw	65535	; assembler added errata NOP
  4547  001F3E  EFAE  F00F         	goto	l1153
  4548  001F42                     l5019:
  4549  001F42  FFFF               	dw	65535	; assembler added errata NOP
  4550  001F44  2A13               	incf	___xxtofl@exp^0,f,c
  4551  001F46  0E01               	movlw	1
  4552  001F48  2614               	addwf	___xxtofl@arg^0,f,c
  4553  001F4A  0E00               	movlw	0
  4554  001F4C  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
  4555  001F4E  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
  4556  001F50  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
  4557  001F52  90D8               	bcf	status,0,c
  4558  001F54  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  4559  001F56  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  4560  001F58  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  4561  001F5A  3214               	rrcf	___xxtofl@arg^0,f,c
  4562  001F5C                     l1153:
  4563  001F5C  FFFF               	dw	65535	; assembler added errata NOP
  4564  001F5E  0E00               	movlw	0
  4565  001F60  1414               	andwf	___xxtofl@arg^0,w,c
  4566  001F62  6E0E               	movwf	??___xxtofl^0,c
  4567  001F64  0E00               	movlw	0
  4568  001F66  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  4569  001F68  6E0F               	movwf	(??___xxtofl+1)^0,c
  4570  001F6A  0E00               	movlw	0
  4571  001F6C  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  4572  001F6E  6E10               	movwf	(??___xxtofl+2)^0,c
  4573  001F70  0EFF               	movlw	255
  4574  001F72  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  4575  001F74  6E11               	movwf	(??___xxtofl+3)^0,c
  4576  001F76  500E               	movf	??___xxtofl^0,w,c
  4577  001F78  100F               	iorwf	(??___xxtofl+1)^0,w,c
  4578  001F7A  1010               	iorwf	(??___xxtofl+2)^0,w,c
  4579  001F7C  1011               	iorwf	(??___xxtofl+3)^0,w,c
  4580  001F7E  A4D8               	btfss	status,2,c
  4581  001F80  EFC4  F00F         	goto	u5401
  4582  001F84  EFC7  F00F         	goto	u5400
  4583  001F88                     u5401:
  4584  001F88  FFFF               	dw	65535	; assembler added errata NOP
  4585  001F8A  EFA1  F00F         	goto	l5019
  4586  001F8E                     u5400:
  4587  001F8E  FFFF               	dw	65535	; assembler added errata NOP
  4588  001F90  EFD1  F00F         	goto	l5027
  4589  001F94                     l5025:
  4590  001F94  FFFF               	dw	65535	; assembler added errata NOP
  4591  001F96  0613               	decf	___xxtofl@exp^0,f,c
  4592  001F98  90D8               	bcf	status,0,c
  4593  001F9A  3614               	rlcf	___xxtofl@arg^0,f,c
  4594  001F9C  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
  4595  001F9E  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
  4596  001FA0  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
  4597  001FA2                     l5027:
  4598  001FA2  FFFF               	dw	65535	; assembler added errata NOP
  4599  001FA4  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
  4600  001FA6  EFD7  F00F         	goto	u5411
  4601  001FAA  EFDA  F00F         	goto	u5410
  4602  001FAE                     u5411:
  4603  001FAE  FFFF               	dw	65535	; assembler added errata NOP
  4604  001FB0  EFE4  F00F         	goto	l1160
  4605  001FB4                     u5410:
  4606  001FB4  FFFF               	dw	65535	; assembler added errata NOP
  4607  001FB6  0E02               	movlw	2
  4608  001FB8  6013               	cpfslt	___xxtofl@exp^0,c
  4609  001FBA  EFE1  F00F         	goto	u5421
  4610  001FBE  EFE4  F00F         	goto	u5420
  4611  001FC2                     u5421:
  4612  001FC2  FFFF               	dw	65535	; assembler added errata NOP
  4613  001FC4  EFCA  F00F         	goto	l5025
  4614  001FC8                     u5420:
  4615  001FC8                     l1160:
  4616  001FC8  FFFF               	dw	65535	; assembler added errata NOP
  4617  001FCA  B013               	btfsc	___xxtofl@exp^0,0,c
  4618  001FCC  EFEA  F00F         	goto	u5431
  4619  001FD0  EFED  F00F         	goto	u5430
  4620  001FD4                     u5431:
  4621  001FD4  FFFF               	dw	65535	; assembler added errata NOP
  4622  001FD6  EFEF  F00F         	goto	l5033
  4623  001FDA                     u5430:
  4624  001FDA  FFFF               	dw	65535	; assembler added errata NOP
  4625  001FDC  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
  4626  001FDE                     l5033:
  4627  001FDE  FFFF               	dw	65535	; assembler added errata NOP
  4628  001FE0  90D8               	bcf	status,0,c
  4629  001FE2  3213               	rrcf	___xxtofl@exp^0,f,c
  4630  001FE4  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
  4631  001FE8  6A0F               	clrf	(??___xxtofl+1)^0,c
  4632  001FEA  6A10               	clrf	(??___xxtofl+2)^0,c
  4633  001FEC  6A11               	clrf	(??___xxtofl+3)^0,c
  4634  001FEE  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
  4635  001FF2  6A10               	clrf	(??___xxtofl+2)^0,c
  4636  001FF4  6A0F               	clrf	(??___xxtofl+1)^0,c
  4637  001FF6  6A0E               	clrf	??___xxtofl^0,c
  4638  001FF8  500E               	movf	??___xxtofl^0,w,c
  4639  001FFA  1214               	iorwf	___xxtofl@arg^0,f,c
  4640  001FFC  500F               	movf	(??___xxtofl+1)^0,w,c
  4641  001FFE  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
  4642  002000  5010               	movf	(??___xxtofl+2)^0,w,c
  4643  002002  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
  4644  002004  5011               	movf	(??___xxtofl+3)^0,w,c
  4645  002006  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
  4646  002008  5012               	movf	___xxtofl@sign^0,w,c
  4647  00200A  B4D8               	btfsc	status,2,c
  4648  00200C  EF0A  F010         	goto	u5441
  4649  002010  EF0D  F010         	goto	u5440
  4650  002014                     u5441:
  4651  002014  FFFF               	dw	65535	; assembler added errata NOP
  4652  002016  EF18  F010         	goto	l5043
  4653  00201A                     u5440:
  4654  00201A  FFFF               	dw	65535	; assembler added errata NOP
  4655  00201C  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  4656  00201E  EF16  F010         	goto	u5450
  4657  002022  EF13  F010         	goto	u5451
  4658  002026                     u5451:
  4659  002026  FFFF               	dw	65535	; assembler added errata NOP
  4660  002028  EF18  F010         	goto	l5043
  4661  00202C                     u5450:
  4662  00202C  FFFF               	dw	65535	; assembler added errata NOP
  4663  00202E  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
  4664  002030                     l5043:
  4665  002030  FFFF               	dw	65535	; assembler added errata NOP
  4666  002032  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
  4667  002036  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
  4668  00203A  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
  4669  00203E  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
  4670  002042                     l1149:
  4671  002042  FFFF               	dw	65535	; assembler added errata NOP
  4672  002044  0012               	return		;funcret
  4673  002046  FFFF               	dw	65535	; errata NOP
  4674  002048                     __end_of___xxtofl:
  4675                           	callstack 0
  4676                           
  4677 ;; *************** function ___fldiv *****************
  4678 ;; Defined at:
  4679 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  b               4   23[COMRAM] unsigned char 
  4682 ;;  a               4   27[COMRAM] unsigned char 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  grs             4   42[COMRAM] unsigned long 
  4685 ;;  rem             4   35[COMRAM] unsigned long 
  4686 ;;  new_exp         2   40[COMRAM] short 
  4687 ;;  aexp            1   47[COMRAM] unsigned char 
  4688 ;;  bexp            1   46[COMRAM] unsigned char 
  4689 ;;  sign            1   39[COMRAM] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  4   23[COMRAM] unsigned char 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4699 ;;      Params:         8       0       0       0       0       0       0
  4700 ;;      Locals:        13       0       0       0       0       0       0
  4701 ;;      Temps:          4       0       0       0       0       0       0
  4702 ;;      Totals:        25       0       0       0       0       0       0
  4703 ;;Total ram usage:       25 bytes
  4704 ;; Hardware stack levels used: 1
  4705 ;; Hardware stack levels required when called: 2
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_pick_and_place
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text12
  4714  0013D6                     __ptext12:
  4715                           	callstack 0
  4716  0013D6                     ___fldiv:
  4717                           	callstack 0
  4718  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  4719  0013D8  501B               	movf	(___fldiv@b+3)^0,w,c
  4720  0013DA  0B80               	andlw	128
  4721  0013DC  6E28               	movwf	___fldiv@sign^0,c
  4722  0013DE  501B               	movf	(___fldiv@b+3)^0,w,c
  4723  0013E0  241B               	addwf	(___fldiv@b+3)^0,w,c
  4724  0013E2  6E2F               	movwf	___fldiv@bexp^0,c
  4725  0013E4  AE1A               	btfss	(___fldiv@b+2)^0,7,c
  4726  0013E6  EFF7  F009         	goto	u5081
  4727  0013EA  EFFA  F009         	goto	u5080
  4728  0013EE                     u5081:
  4729  0013EE  FFFF               	dw	65535	; assembler added errata NOP
  4730  0013F0  EFFC  F009         	goto	l4847
  4731  0013F4                     u5080:
  4732  0013F4  FFFF               	dw	65535	; assembler added errata NOP
  4733  0013F6  802F               	bsf	___fldiv@bexp^0,0,c
  4734  0013F8                     l4847:
  4735  0013F8  FFFF               	dw	65535	; assembler added errata NOP
  4736  0013FA  502F               	movf	___fldiv@bexp^0,w,c
  4737  0013FC  B4D8               	btfsc	status,2,c
  4738  0013FE  EF03  F00A         	goto	u5091
  4739  001402  EF06  F00A         	goto	u5090
  4740  001406                     u5091:
  4741  001406  FFFF               	dw	65535	; assembler added errata NOP
  4742  001408  EF1F  F00A         	goto	l4857
  4743  00140C                     u5090:
  4744  00140C  FFFF               	dw	65535	; assembler added errata NOP
  4745  00140E  282F               	incf	___fldiv@bexp^0,w,c
  4746  001410  A4D8               	btfss	status,2,c
  4747  001412  EF0D  F00A         	goto	u5101
  4748  001416  EF10  F00A         	goto	u5100
  4749  00141A                     u5101:
  4750  00141A  FFFF               	dw	65535	; assembler added errata NOP
  4751  00141C  EF19  F00A         	goto	l4853
  4752  001420                     u5100:
  4753  001420  FFFF               	dw	65535	; assembler added errata NOP
  4754  001422  0E00               	movlw	0
  4755  001424  6E18               	movwf	___fldiv@b^0,c
  4756  001426  0E00               	movlw	0
  4757  001428  6E19               	movwf	(___fldiv@b+1)^0,c
  4758  00142A  0E00               	movlw	0
  4759  00142C  6E1A               	movwf	(___fldiv@b+2)^0,c
  4760  00142E  0E00               	movlw	0
  4761  001430  6E1B               	movwf	(___fldiv@b+3)^0,c
  4762  001432                     l4853:
  4763  001432  FFFF               	dw	65535	; assembler added errata NOP
  4764  001434  8E1A               	bsf	(___fldiv@b+2)^0,7,c
  4765  001436  0E00               	movlw	0
  4766  001438  6E1B               	movwf	(___fldiv@b+3)^0,c
  4767  00143A  EF28  F00A         	goto	l4859
  4768  00143E                     l4857:
  4769  00143E  FFFF               	dw	65535	; assembler added errata NOP
  4770  001440  0E00               	movlw	0
  4771  001442  6E18               	movwf	___fldiv@b^0,c
  4772  001444  0E00               	movlw	0
  4773  001446  6E19               	movwf	(___fldiv@b+1)^0,c
  4774  001448  0E00               	movlw	0
  4775  00144A  6E1A               	movwf	(___fldiv@b+2)^0,c
  4776  00144C  0E00               	movlw	0
  4777  00144E  6E1B               	movwf	(___fldiv@b+3)^0,c
  4778  001450                     l4859:
  4779  001450  FFFF               	dw	65535	; assembler added errata NOP
  4780  001452  501F               	movf	(___fldiv@a+3)^0,w,c
  4781  001454  0B80               	andlw	128
  4782  001456  1A28               	xorwf	___fldiv@sign^0,f,c
  4783  001458  501F               	movf	(___fldiv@a+3)^0,w,c
  4784  00145A  241F               	addwf	(___fldiv@a+3)^0,w,c
  4785  00145C  6E30               	movwf	___fldiv@aexp^0,c
  4786  00145E  AE1E               	btfss	(___fldiv@a+2)^0,7,c
  4787  001460  EF34  F00A         	goto	u5111
  4788  001464  EF37  F00A         	goto	u5110
  4789  001468                     u5111:
  4790  001468  FFFF               	dw	65535	; assembler added errata NOP
  4791  00146A  EF39  F00A         	goto	l4867
  4792  00146E                     u5110:
  4793  00146E  FFFF               	dw	65535	; assembler added errata NOP
  4794  001470  8030               	bsf	___fldiv@aexp^0,0,c
  4795  001472                     l4867:
  4796  001472  FFFF               	dw	65535	; assembler added errata NOP
  4797  001474  5030               	movf	___fldiv@aexp^0,w,c
  4798  001476  B4D8               	btfsc	status,2,c
  4799  001478  EF40  F00A         	goto	u5121
  4800  00147C  EF43  F00A         	goto	u5120
  4801  001480                     u5121:
  4802  001480  FFFF               	dw	65535	; assembler added errata NOP
  4803  001482  EF5C  F00A         	goto	l4877
  4804  001486                     u5120:
  4805  001486  FFFF               	dw	65535	; assembler added errata NOP
  4806  001488  2830               	incf	___fldiv@aexp^0,w,c
  4807  00148A  A4D8               	btfss	status,2,c
  4808  00148C  EF4A  F00A         	goto	u5131
  4809  001490  EF4D  F00A         	goto	u5130
  4810  001494                     u5131:
  4811  001494  FFFF               	dw	65535	; assembler added errata NOP
  4812  001496  EF56  F00A         	goto	l4873
  4813  00149A                     u5130:
  4814  00149A  FFFF               	dw	65535	; assembler added errata NOP
  4815  00149C  0E00               	movlw	0
  4816  00149E  6E1C               	movwf	___fldiv@a^0,c
  4817  0014A0  0E00               	movlw	0
  4818  0014A2  6E1D               	movwf	(___fldiv@a+1)^0,c
  4819  0014A4  0E00               	movlw	0
  4820  0014A6  6E1E               	movwf	(___fldiv@a+2)^0,c
  4821  0014A8  0E00               	movlw	0
  4822  0014AA  6E1F               	movwf	(___fldiv@a+3)^0,c
  4823  0014AC                     l4873:
  4824  0014AC  FFFF               	dw	65535	; assembler added errata NOP
  4825  0014AE  8E1E               	bsf	(___fldiv@a+2)^0,7,c
  4826  0014B0  0E00               	movlw	0
  4827  0014B2  6E1F               	movwf	(___fldiv@a+3)^0,c
  4828  0014B4  EF65  F00A         	goto	l4879
  4829  0014B8                     l4877:
  4830  0014B8  FFFF               	dw	65535	; assembler added errata NOP
  4831  0014BA  0E00               	movlw	0
  4832  0014BC  6E1C               	movwf	___fldiv@a^0,c
  4833  0014BE  0E00               	movlw	0
  4834  0014C0  6E1D               	movwf	(___fldiv@a+1)^0,c
  4835  0014C2  0E00               	movlw	0
  4836  0014C4  6E1E               	movwf	(___fldiv@a+2)^0,c
  4837  0014C6  0E00               	movlw	0
  4838  0014C8  6E1F               	movwf	(___fldiv@a+3)^0,c
  4839  0014CA                     l4879:
  4840  0014CA  FFFF               	dw	65535	; assembler added errata NOP
  4841  0014CC  501C               	movf	___fldiv@a^0,w,c
  4842  0014CE  101D               	iorwf	(___fldiv@a+1)^0,w,c
  4843  0014D0  101E               	iorwf	(___fldiv@a+2)^0,w,c
  4844  0014D2  101F               	iorwf	(___fldiv@a+3)^0,w,c
  4845  0014D4  A4D8               	btfss	status,2,c
  4846  0014D6  EF6F  F00A         	goto	u5141
  4847  0014DA  EF72  F00A         	goto	u5140
  4848  0014DE                     u5141:
  4849  0014DE  FFFF               	dw	65535	; assembler added errata NOP
  4850  0014E0  EF8C  F00A         	goto	l4891
  4851  0014E4                     u5140:
  4852  0014E4  FFFF               	dw	65535	; assembler added errata NOP
  4853  0014E6  0E00               	movlw	0
  4854  0014E8  6E18               	movwf	___fldiv@b^0,c
  4855  0014EA  0E00               	movlw	0
  4856  0014EC  6E19               	movwf	(___fldiv@b+1)^0,c
  4857  0014EE  0E00               	movlw	0
  4858  0014F0  6E1A               	movwf	(___fldiv@b+2)^0,c
  4859  0014F2  0E00               	movlw	0
  4860  0014F4  6E1B               	movwf	(___fldiv@b+3)^0,c
  4861  0014F6  0E80               	movlw	128
  4862  0014F8  121A               	iorwf	(___fldiv@b+2)^0,f,c
  4863  0014FA  0E7F               	movlw	127
  4864  0014FC  121B               	iorwf	(___fldiv@b+3)^0,f,c
  4865  0014FE                     l4885:
  4866  0014FE  FFFF               	dw	65535	; assembler added errata NOP
  4867  001500  5028               	movf	___fldiv@sign^0,w,c
  4868  001502  121B               	iorwf	(___fldiv@b+3)^0,f,c
  4869  001504  C018  F018         	movff	___fldiv@b,?___fldiv
  4870  001508  C019  F019         	movff	___fldiv@b+1,?___fldiv+1
  4871  00150C  C01A  F01A         	movff	___fldiv@b+2,?___fldiv+2
  4872  001510  C01B  F01B         	movff	___fldiv@b+3,?___fldiv+3
  4873  001514  EF01  F00C         	goto	l1073
  4874  001518                     l4891:
  4875  001518  FFFF               	dw	65535	; assembler added errata NOP
  4876  00151A  502F               	movf	___fldiv@bexp^0,w,c
  4877  00151C  A4D8               	btfss	status,2,c
  4878  00151E  EF93  F00A         	goto	u5151
  4879  001522  EF96  F00A         	goto	u5150
  4880  001526                     u5151:
  4881  001526  FFFF               	dw	65535	; assembler added errata NOP
  4882  001528  EFA1  F00A         	goto	l4899
  4883  00152C                     u5150:
  4884  00152C  FFFF               	dw	65535	; assembler added errata NOP
  4885  00152E  0E00               	movlw	0
  4886  001530  6E18               	movwf	?___fldiv^0,c
  4887  001532  0E00               	movlw	0
  4888  001534  6E19               	movwf	(?___fldiv+1)^0,c
  4889  001536  0E00               	movlw	0
  4890  001538  6E1A               	movwf	(?___fldiv+2)^0,c
  4891  00153A  0E00               	movlw	0
  4892  00153C  6E1B               	movwf	(?___fldiv+3)^0,c
  4893  00153E  EF01  F00C         	goto	l1073
  4894  001542                     l4899:
  4895  001542  FFFF               	dw	65535	; assembler added errata NOP
  4896  001544  5030               	movf	___fldiv@aexp^0,w,c
  4897  001546  C02F  F020         	movff	___fldiv@bexp,??___fldiv
  4898  00154A  6A21               	clrf	(??___fldiv+1)^0,c
  4899  00154C  5E20               	subwf	??___fldiv^0,f,c
  4900  00154E  0E00               	movlw	0
  4901  001550  5A21               	subwfb	(??___fldiv+1)^0,f,c
  4902  001552  0E7F               	movlw	127
  4903  001554  2420               	addwf	??___fldiv^0,w,c
  4904  001556  6E29               	movwf	___fldiv@new_exp^0,c
  4905  001558  0E00               	movlw	0
  4906  00155A  2021               	addwfc	(??___fldiv+1)^0,w,c
  4907  00155C  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  4908  00155E  C018  F024         	movff	___fldiv@b,___fldiv@rem
  4909  001562  C019  F025         	movff	___fldiv@b+1,___fldiv@rem+1
  4910  001566  C01A  F026         	movff	___fldiv@b+2,___fldiv@rem+2
  4911  00156A  C01B  F027         	movff	___fldiv@b+3,___fldiv@rem+3
  4912  00156E  0E00               	movlw	0
  4913  001570  6E18               	movwf	___fldiv@b^0,c
  4914  001572  0E00               	movlw	0
  4915  001574  6E19               	movwf	(___fldiv@b+1)^0,c
  4916  001576  0E00               	movlw	0
  4917  001578  6E1A               	movwf	(___fldiv@b+2)^0,c
  4918  00157A  0E00               	movlw	0
  4919  00157C  6E1B               	movwf	(___fldiv@b+3)^0,c
  4920  00157E  0E00               	movlw	0
  4921  001580  6E2B               	movwf	___fldiv@grs^0,c
  4922  001582  0E00               	movlw	0
  4923  001584  6E2C               	movwf	(___fldiv@grs+1)^0,c
  4924  001586  0E00               	movlw	0
  4925  001588  6E2D               	movwf	(___fldiv@grs+2)^0,c
  4926  00158A  0E00               	movlw	0
  4927  00158C  6E2E               	movwf	(___fldiv@grs+3)^0,c
  4928  00158E  0E00               	movlw	0
  4929  001590  6E30               	movwf	___fldiv@aexp^0,c
  4930  001592  EF0D  F00B         	goto	l1075
  4931  001596                     l4909:
  4932  001596  FFFF               	dw	65535	; assembler added errata NOP
  4933  001598  5030               	movf	___fldiv@aexp^0,w,c
  4934  00159A  B4D8               	btfsc	status,2,c
  4935  00159C  EFD2  F00A         	goto	u5161
  4936  0015A0  EFD5  F00A         	goto	u5160
  4937  0015A4                     u5161:
  4938  0015A4  FFFF               	dw	65535	; assembler added errata NOP
  4939  0015A6  EFF0  F00A         	goto	l4917
  4940  0015AA                     u5160:
  4941  0015AA  FFFF               	dw	65535	; assembler added errata NOP
  4942  0015AC  90D8               	bcf	status,0,c
  4943  0015AE  3624               	rlcf	___fldiv@rem^0,f,c
  4944  0015B0  3625               	rlcf	(___fldiv@rem+1)^0,f,c
  4945  0015B2  3626               	rlcf	(___fldiv@rem+2)^0,f,c
  4946  0015B4  3627               	rlcf	(___fldiv@rem+3)^0,f,c
  4947  0015B6  90D8               	bcf	status,0,c
  4948  0015B8  3618               	rlcf	___fldiv@b^0,f,c
  4949  0015BA  3619               	rlcf	(___fldiv@b+1)^0,f,c
  4950  0015BC  361A               	rlcf	(___fldiv@b+2)^0,f,c
  4951  0015BE  361B               	rlcf	(___fldiv@b+3)^0,f,c
  4952  0015C0  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  4953  0015C2  EFE5  F00A         	goto	u5171
  4954  0015C6  EFE8  F00A         	goto	u5170
  4955  0015CA                     u5171:
  4956  0015CA  FFFF               	dw	65535	; assembler added errata NOP
  4957  0015CC  EFEA  F00A         	goto	l1078
  4958  0015D0                     u5170:
  4959  0015D0  FFFF               	dw	65535	; assembler added errata NOP
  4960  0015D2  8018               	bsf	___fldiv@b^0,0,c
  4961  0015D4                     l1078:
  4962  0015D4  FFFF               	dw	65535	; assembler added errata NOP
  4963  0015D6  90D8               	bcf	status,0,c
  4964  0015D8  362B               	rlcf	___fldiv@grs^0,f,c
  4965  0015DA  362C               	rlcf	(___fldiv@grs+1)^0,f,c
  4966  0015DC  362D               	rlcf	(___fldiv@grs+2)^0,f,c
  4967  0015DE  362E               	rlcf	(___fldiv@grs+3)^0,f,c
  4968  0015E0                     l4917:
  4969  0015E0  FFFF               	dw	65535	; assembler added errata NOP
  4970  0015E2  501C               	movf	___fldiv@a^0,w,c
  4971  0015E4  5C24               	subwf	___fldiv@rem^0,w,c
  4972  0015E6  501D               	movf	(___fldiv@a+1)^0,w,c
  4973  0015E8  5825               	subwfb	(___fldiv@rem+1)^0,w,c
  4974  0015EA  501E               	movf	(___fldiv@a+2)^0,w,c
  4975  0015EC  5826               	subwfb	(___fldiv@rem+2)^0,w,c
  4976  0015EE  501F               	movf	(___fldiv@a+3)^0,w,c
  4977  0015F0  5827               	subwfb	(___fldiv@rem+3)^0,w,c
  4978  0015F2  A0D8               	btfss	status,0,c
  4979  0015F4  EFFE  F00A         	goto	u5181
  4980  0015F8  EF01  F00B         	goto	u5180
  4981  0015FC                     u5181:
  4982  0015FC  FFFF               	dw	65535	; assembler added errata NOP
  4983  0015FE  EF0B  F00B         	goto	l4923
  4984  001602                     u5180:
  4985  001602  FFFF               	dw	65535	; assembler added errata NOP
  4986  001604  8C2E               	bsf	(___fldiv@grs+3)^0,6,c
  4987  001606  501C               	movf	___fldiv@a^0,w,c
  4988  001608  5E24               	subwf	___fldiv@rem^0,f,c
  4989  00160A  501D               	movf	(___fldiv@a+1)^0,w,c
  4990  00160C  5A25               	subwfb	(___fldiv@rem+1)^0,f,c
  4991  00160E  501E               	movf	(___fldiv@a+2)^0,w,c
  4992  001610  5A26               	subwfb	(___fldiv@rem+2)^0,f,c
  4993  001612  501F               	movf	(___fldiv@a+3)^0,w,c
  4994  001614  5A27               	subwfb	(___fldiv@rem+3)^0,f,c
  4995  001616                     l4923:
  4996  001616  FFFF               	dw	65535	; assembler added errata NOP
  4997  001618  2A30               	incf	___fldiv@aexp^0,f,c
  4998  00161A                     l1075:
  4999  00161A  FFFF               	dw	65535	; assembler added errata NOP
  5000  00161C  0E19               	movlw	25
  5001  00161E  6430               	cpfsgt	___fldiv@aexp^0,c
  5002  001620  EF14  F00B         	goto	u5191
  5003  001624  EF17  F00B         	goto	u5190
  5004  001628                     u5191:
  5005  001628  FFFF               	dw	65535	; assembler added errata NOP
  5006  00162A  EFCB  F00A         	goto	l4909
  5007  00162E                     u5190:
  5008  00162E  FFFF               	dw	65535	; assembler added errata NOP
  5009  001630  5024               	movf	___fldiv@rem^0,w,c
  5010  001632  1025               	iorwf	(___fldiv@rem+1)^0,w,c
  5011  001634  1026               	iorwf	(___fldiv@rem+2)^0,w,c
  5012  001636  1027               	iorwf	(___fldiv@rem+3)^0,w,c
  5013  001638  B4D8               	btfsc	status,2,c
  5014  00163A  EF21  F00B         	goto	u5201
  5015  00163E  EF24  F00B         	goto	u5200
  5016  001642                     u5201:
  5017  001642  FFFF               	dw	65535	; assembler added errata NOP
  5018  001644  EF41  F00B         	goto	l4935
  5019  001648                     u5200:
  5020  001648  FFFF               	dw	65535	; assembler added errata NOP
  5021  00164A  802B               	bsf	___fldiv@grs^0,0,c
  5022  00164C  EF41  F00B         	goto	l4935
  5023  001650                     l4929:
  5024  001650  FFFF               	dw	65535	; assembler added errata NOP
  5025  001652  90D8               	bcf	status,0,c
  5026  001654  3618               	rlcf	___fldiv@b^0,f,c
  5027  001656  3619               	rlcf	(___fldiv@b+1)^0,f,c
  5028  001658  361A               	rlcf	(___fldiv@b+2)^0,f,c
  5029  00165A  361B               	rlcf	(___fldiv@b+3)^0,f,c
  5030  00165C  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  5031  00165E  EF33  F00B         	goto	u5211
  5032  001662  EF36  F00B         	goto	u5210
  5033  001666                     u5211:
  5034  001666  FFFF               	dw	65535	; assembler added errata NOP
  5035  001668  EF38  F00B         	goto	l1084
  5036  00166C                     u5210:
  5037  00166C  FFFF               	dw	65535	; assembler added errata NOP
  5038  00166E  8018               	bsf	___fldiv@b^0,0,c
  5039  001670                     l1084:
  5040  001670  FFFF               	dw	65535	; assembler added errata NOP
  5041  001672  90D8               	bcf	status,0,c
  5042  001674  362B               	rlcf	___fldiv@grs^0,f,c
  5043  001676  362C               	rlcf	(___fldiv@grs+1)^0,f,c
  5044  001678  362D               	rlcf	(___fldiv@grs+2)^0,f,c
  5045  00167A  362E               	rlcf	(___fldiv@grs+3)^0,f,c
  5046  00167C  0629               	decf	___fldiv@new_exp^0,f,c
  5047  00167E  A0D8               	btfss	status,0,c
  5048  001680  062A               	decf	(___fldiv@new_exp+1)^0,f,c
  5049  001682                     l4935:
  5050  001682  FFFF               	dw	65535	; assembler added errata NOP
  5051  001684  AE1A               	btfss	(___fldiv@b+2)^0,7,c
  5052  001686  EF47  F00B         	goto	u5221
  5053  00168A  EF4A  F00B         	goto	u5220
  5054  00168E                     u5221:
  5055  00168E  FFFF               	dw	65535	; assembler added errata NOP
  5056  001690  EF28  F00B         	goto	l4929
  5057  001694                     u5220:
  5058  001694  FFFF               	dw	65535	; assembler added errata NOP
  5059  001696  0E00               	movlw	0
  5060  001698  6E30               	movwf	___fldiv@aexp^0,c
  5061  00169A  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
  5062  00169C  EF52  F00B         	goto	u5231
  5063  0016A0  EF55  F00B         	goto	u5230
  5064  0016A4                     u5231:
  5065  0016A4  FFFF               	dw	65535	; assembler added errata NOP
  5066  0016A6  EF80  F00B         	goto	l1086
  5067  0016AA                     u5230:
  5068  0016AA  FFFF               	dw	65535	; assembler added errata NOP
  5069  0016AC  0EFF               	movlw	255
  5070  0016AE  142B               	andwf	___fldiv@grs^0,w,c
  5071  0016B0  6E20               	movwf	??___fldiv^0,c
  5072  0016B2  0EFF               	movlw	255
  5073  0016B4  142C               	andwf	(___fldiv@grs+1)^0,w,c
  5074  0016B6  6E21               	movwf	(??___fldiv+1)^0,c
  5075  0016B8  0EFF               	movlw	255
  5076  0016BA  142D               	andwf	(___fldiv@grs+2)^0,w,c
  5077  0016BC  6E22               	movwf	(??___fldiv+2)^0,c
  5078  0016BE  0E7F               	movlw	127
  5079  0016C0  142E               	andwf	(___fldiv@grs+3)^0,w,c
  5080  0016C2  6E23               	movwf	(??___fldiv+3)^0,c
  5081  0016C4  5020               	movf	??___fldiv^0,w,c
  5082  0016C6  1021               	iorwf	(??___fldiv+1)^0,w,c
  5083  0016C8  1022               	iorwf	(??___fldiv+2)^0,w,c
  5084  0016CA  1023               	iorwf	(??___fldiv+3)^0,w,c
  5085  0016CC  B4D8               	btfsc	status,2,c
  5086  0016CE  EF6B  F00B         	goto	u5241
  5087  0016D2  EF6E  F00B         	goto	u5240
  5088  0016D6                     u5241:
  5089  0016D6  FFFF               	dw	65535	; assembler added errata NOP
  5090  0016D8  EF74  F00B         	goto	l1087
  5091  0016DC                     u5240:
  5092  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  5093  0016DE                     l4943:
  5094  0016DE  FFFF               	dw	65535	; assembler added errata NOP
  5095  0016E0  0E01               	movlw	1
  5096  0016E2  6E30               	movwf	___fldiv@aexp^0,c
  5097  0016E4  EF80  F00B         	goto	l1086
  5098  0016E8                     l1087:
  5099  0016E8  FFFF               	dw	65535	; assembler added errata NOP
  5100  0016EA  A018               	btfss	___fldiv@b^0,0,c
  5101  0016EC  EF7A  F00B         	goto	u5251
  5102  0016F0  EF7D  F00B         	goto	u5250
  5103  0016F4                     u5251:
  5104  0016F4  FFFF               	dw	65535	; assembler added errata NOP
  5105  0016F6  EF80  F00B         	goto	l1086
  5106  0016FA                     u5250:
  5107  0016FA  FFFF               	dw	65535	; assembler added errata NOP
  5108  0016FC  EF6F  F00B         	goto	l4943
  5109  001700                     l1086:
  5110  001700  FFFF               	dw	65535	; assembler added errata NOP
  5111  001702  5030               	movf	___fldiv@aexp^0,w,c
  5112  001704  B4D8               	btfsc	status,2,c
  5113  001706  EF87  F00B         	goto	u5261
  5114  00170A  EF8A  F00B         	goto	u5260
  5115  00170E                     u5261:
  5116  00170E  FFFF               	dw	65535	; assembler added errata NOP
  5117  001710  EFB1  F00B         	goto	l4955
  5118  001714                     u5260:
  5119  001714  FFFF               	dw	65535	; assembler added errata NOP
  5120  001716  0E01               	movlw	1
  5121  001718  2618               	addwf	___fldiv@b^0,f,c
  5122  00171A  0E00               	movlw	0
  5123  00171C  2219               	addwfc	(___fldiv@b+1)^0,f,c
  5124  00171E  221A               	addwfc	(___fldiv@b+2)^0,f,c
  5125  001720  221B               	addwfc	(___fldiv@b+3)^0,f,c
  5126  001722  A01B               	btfss	(___fldiv@b+3)^0,0,c
  5127  001724  EF96  F00B         	goto	u5271
  5128  001728  EF99  F00B         	goto	u5270
  5129  00172C                     u5271:
  5130  00172C  FFFF               	dw	65535	; assembler added errata NOP
  5131  00172E  EFB1  F00B         	goto	l4955
  5132  001732                     u5270:
  5133  001732  FFFF               	dw	65535	; assembler added errata NOP
  5134  001734  C018  F020         	movff	___fldiv@b,??___fldiv
  5135  001738  C019  F021         	movff	___fldiv@b+1,??___fldiv+1
  5136  00173C  C01A  F022         	movff	___fldiv@b+2,??___fldiv+2
  5137  001740  C01B  F023         	movff	___fldiv@b+3,??___fldiv+3
  5138  001744  3423               	rlcf	(??___fldiv+3)^0,w,c
  5139  001746  3223               	rrcf	(??___fldiv+3)^0,f,c
  5140  001748  3222               	rrcf	(??___fldiv+2)^0,f,c
  5141  00174A  3221               	rrcf	(??___fldiv+1)^0,f,c
  5142  00174C  3220               	rrcf	??___fldiv^0,f,c
  5143  00174E  C020  F018         	movff	??___fldiv,___fldiv@b
  5144  001752  C021  F019         	movff	??___fldiv+1,___fldiv@b+1
  5145  001756  C022  F01A         	movff	??___fldiv+2,___fldiv@b+2
  5146  00175A  C023  F01B         	movff	??___fldiv+3,___fldiv@b+3
  5147  00175E  4A29               	infsnz	___fldiv@new_exp^0,f,c
  5148  001760  2A2A               	incf	(___fldiv@new_exp+1)^0,f,c
  5149  001762                     l4955:
  5150  001762  FFFF               	dw	65535	; assembler added errata NOP
  5151  001764  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5152  001766  EFBD  F00B         	goto	u5281
  5153  00176A  502A               	movf	(___fldiv@new_exp+1)^0,w,c
  5154  00176C  E109               	bnz	u5280
  5155  00176E  2829               	incf	___fldiv@new_exp^0,w,c
  5156  001770  A0D8               	btfss	status,0,c
  5157  001772  EFBD  F00B         	goto	u5281
  5158  001776  EFC0  F00B         	goto	u5280
  5159  00177A                     u5281:
  5160  00177A  FFFF               	dw	65535	; assembler added errata NOP
  5161  00177C  EFCC  F00B         	goto	l4959
  5162  001780                     u5280:
  5163  001780  FFFF               	dw	65535	; assembler added errata NOP
  5164  001782  0E00               	movlw	0
  5165  001784  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  5166  001786  6829               	setf	___fldiv@new_exp^0,c
  5167  001788  0E00               	movlw	0
  5168  00178A  6E18               	movwf	___fldiv@b^0,c
  5169  00178C  0E00               	movlw	0
  5170  00178E  6E19               	movwf	(___fldiv@b+1)^0,c
  5171  001790  0E00               	movlw	0
  5172  001792  6E1A               	movwf	(___fldiv@b+2)^0,c
  5173  001794  0E00               	movlw	0
  5174  001796  6E1B               	movwf	(___fldiv@b+3)^0,c
  5175  001798                     l4959:
  5176  001798  FFFF               	dw	65535	; assembler added errata NOP
  5177  00179A  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5178  00179C  EFDB  F00B         	goto	u5290
  5179  0017A0  502A               	movf	(___fldiv@new_exp+1)^0,w,c
  5180  0017A2  E106               	bnz	u5291
  5181  0017A4  0429               	decf	___fldiv@new_exp^0,w,c
  5182  0017A6  B0D8               	btfsc	status,0,c
  5183  0017A8  EFD8  F00B         	goto	u5291
  5184  0017AC  EFDB  F00B         	goto	u5290
  5185  0017B0                     u5291:
  5186  0017B0  FFFF               	dw	65535	; assembler added errata NOP
  5187  0017B2  EFEA  F00B         	goto	l4963
  5188  0017B6                     u5290:
  5189  0017B6  FFFF               	dw	65535	; assembler added errata NOP
  5190  0017B8  0E00               	movlw	0
  5191  0017BA  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
  5192  0017BC  0E00               	movlw	0
  5193  0017BE  6E29               	movwf	___fldiv@new_exp^0,c
  5194  0017C0  0E00               	movlw	0
  5195  0017C2  6E18               	movwf	___fldiv@b^0,c
  5196  0017C4  0E00               	movlw	0
  5197  0017C6  6E19               	movwf	(___fldiv@b+1)^0,c
  5198  0017C8  0E00               	movlw	0
  5199  0017CA  6E1A               	movwf	(___fldiv@b+2)^0,c
  5200  0017CC  0E00               	movlw	0
  5201  0017CE  6E1B               	movwf	(___fldiv@b+3)^0,c
  5202  0017D0  0E00               	movlw	0
  5203  0017D2  6E28               	movwf	___fldiv@sign^0,c
  5204  0017D4                     l4963:
  5205  0017D4  FFFF               	dw	65535	; assembler added errata NOP
  5206  0017D6  C029  F02F         	movff	___fldiv@new_exp,___fldiv@bexp
  5207  0017DA  A02F               	btfss	___fldiv@bexp^0,0,c
  5208  0017DC  EFF2  F00B         	goto	u5301
  5209  0017E0  EFF5  F00B         	goto	u5300
  5210  0017E4                     u5301:
  5211  0017E4  FFFF               	dw	65535	; assembler added errata NOP
  5212  0017E6  EFF9  F00B         	goto	l4969
  5213  0017EA                     u5300:
  5214  0017EA  FFFF               	dw	65535	; assembler added errata NOP
  5215  0017EC  8E1A               	bsf	(___fldiv@b+2)^0,7,c
  5216  0017EE  EFFB  F00B         	goto	l4971
  5217  0017F2                     l4969:
  5218  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  5219  0017F4  9E1A               	bcf	(___fldiv@b+2)^0,7,c
  5220  0017F6                     l4971:
  5221  0017F6  FFFF               	dw	65535	; assembler added errata NOP
  5222  0017F8  90D8               	bcf	status,0,c
  5223  0017FA  302F               	rrcf	___fldiv@bexp^0,w,c
  5224  0017FC  6E1B               	movwf	(___fldiv@b+3)^0,c
  5225  0017FE  EF7F  F00A         	goto	l4885
  5226  001802                     l1073:
  5227  001802  FFFF               	dw	65535	; assembler added errata NOP
  5228  001804  0012               	return		;funcret
  5229  001806  FFFF               	dw	65535	; errata NOP
  5230  001808                     __end_of___fldiv:
  5231                           	callstack 0
  5232                           
  5233 ;; *************** function _Z_axis *****************
  5234 ;; Defined at:
  5235 ;;		line 493 in file "main.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  direction       1    wreg     unsigned char 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  direction       1   15[COMRAM] unsigned char 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      void 
  5242 ;; Registers used:
  5243 ;;		wreg, status,2, status,0, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5249 ;;      Params:         0       0       0       0       0       0       0
  5250 ;;      Locals:         1       0       0       0       0       0       0
  5251 ;;      Temps:          0       0       0       0       0       0       0
  5252 ;;      Totals:         1       0       0       0       0       0       0
  5253 ;;Total ram usage:        1 bytes
  5254 ;; Hardware stack levels used: 1
  5255 ;; Hardware stack levels required when called: 3
  5256 ;; This function calls:
  5257 ;;		_ms_delay
  5258 ;; This function is called by:
  5259 ;;		_pick_and_place
  5260 ;;		_return_to_initial
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text13
  5265  00236C                     __ptext13:
  5266                           	callstack 0
  5267  00236C                     _Z_axis:
  5268                           	callstack 0
  5269  00236C  FFFF               	dw	65535	; assembler added errata NOP
  5270                           
  5271                           ;incstack = 0
  5272                           ;Z_axis@direction stored from wreg
  5273  00236E  6E10               	movwf	Z_axis@direction^0,c
  5274  002370                     
  5275                           ;main.c: 494:         if (direction == 0){
  5276  002370  5010               	movf	Z_axis@direction^0,w,c
  5277  002372  A4D8               	btfss	status,2,c
  5278  002374  EFBE  F011         	goto	u4911
  5279  002378  EFC1  F011         	goto	u4910
  5280  00237C                     u4911:
  5281  00237C  FFFF               	dw	65535	; assembler added errata NOP
  5282  00237E  EF06  F012         	goto	l332
  5283  002382                     u4910:
  5284  002382  FFFF               	dw	65535	; assembler added errata NOP
  5285  002384                     
  5286                           ;main.c: 495:             PORTD = 0b00010000;
  5287  002384  0E10               	movlw	16
  5288  002386  6E83               	movwf	131,c	;volatile
  5289  002388                     
  5290                           ;main.c: 496:             ms_delay(1);
  5291  002388  0E00               	movlw	0
  5292  00238A  6E0B               	movwf	(ms_delay@val+1)^0,c
  5293  00238C  0E01               	movlw	1
  5294  00238E  6E0A               	movwf	ms_delay@val^0,c
  5295  002390  EC45  F019         	call	_ms_delay	;wreg free
  5296  002394                     
  5297                           ;main.c: 497:             PORTD = 0b00110000;
  5298  002394  0E30               	movlw	48
  5299  002396  6E83               	movwf	131,c	;volatile
  5300  002398                     
  5301                           ;main.c: 498:             ms_delay(1);
  5302  002398  0E00               	movlw	0
  5303  00239A  6E0B               	movwf	(ms_delay@val+1)^0,c
  5304  00239C  0E01               	movlw	1
  5305  00239E  6E0A               	movwf	ms_delay@val^0,c
  5306  0023A0  EC45  F019         	call	_ms_delay	;wreg free
  5307  0023A4                     
  5308                           ;main.c: 499:             PORTD = 0b00100000;
  5309  0023A4  0E20               	movlw	32
  5310  0023A6  6E83               	movwf	131,c	;volatile
  5311  0023A8                     
  5312                           ;main.c: 500:             ms_delay(1);
  5313  0023A8  0E00               	movlw	0
  5314  0023AA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5315  0023AC  0E01               	movlw	1
  5316  0023AE  6E0A               	movwf	ms_delay@val^0,c
  5317  0023B0  EC45  F019         	call	_ms_delay	;wreg free
  5318  0023B4                     
  5319                           ;main.c: 501:             PORTD = 0b01100000;
  5320  0023B4  0E60               	movlw	96
  5321  0023B6  6E83               	movwf	131,c	;volatile
  5322  0023B8                     
  5323                           ;main.c: 502:             ms_delay(1);
  5324  0023B8  0E00               	movlw	0
  5325  0023BA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5326  0023BC  0E01               	movlw	1
  5327  0023BE  6E0A               	movwf	ms_delay@val^0,c
  5328  0023C0  EC45  F019         	call	_ms_delay	;wreg free
  5329  0023C4                     
  5330                           ;main.c: 503:             PORTD = 0b01000000;
  5331  0023C4  0E40               	movlw	64
  5332  0023C6  6E83               	movwf	131,c	;volatile
  5333  0023C8                     
  5334                           ;main.c: 504:             ms_delay(1);
  5335  0023C8  0E00               	movlw	0
  5336  0023CA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5337  0023CC  0E01               	movlw	1
  5338  0023CE  6E0A               	movwf	ms_delay@val^0,c
  5339  0023D0  EC45  F019         	call	_ms_delay	;wreg free
  5340  0023D4                     
  5341                           ;main.c: 505:             PORTD = 0b11000000;
  5342  0023D4  0EC0               	movlw	192
  5343  0023D6  6E83               	movwf	131,c	;volatile
  5344  0023D8                     
  5345                           ;main.c: 506:             ms_delay(1);
  5346  0023D8  0E00               	movlw	0
  5347  0023DA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5348  0023DC  0E01               	movlw	1
  5349  0023DE  6E0A               	movwf	ms_delay@val^0,c
  5350  0023E0  EC45  F019         	call	_ms_delay	;wreg free
  5351  0023E4                     
  5352                           ;main.c: 507:             PORTD = 0b10000000;
  5353  0023E4  0E80               	movlw	128
  5354  0023E6  6E83               	movwf	131,c	;volatile
  5355  0023E8                     
  5356                           ;main.c: 508:             ms_delay(1);
  5357  0023E8  0E00               	movlw	0
  5358  0023EA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5359  0023EC  0E01               	movlw	1
  5360  0023EE  6E0A               	movwf	ms_delay@val^0,c
  5361  0023F0  EC45  F019         	call	_ms_delay	;wreg free
  5362  0023F4                     
  5363                           ;main.c: 509:             PORTD = 0b10010000;
  5364  0023F4  0E90               	movlw	144
  5365  0023F6  6E83               	movwf	131,c	;volatile
  5366  0023F8                     
  5367                           ;main.c: 510:             ms_delay(1);
  5368  0023F8  0E00               	movlw	0
  5369  0023FA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5370  0023FC  0E01               	movlw	1
  5371  0023FE  6E0A               	movwf	ms_delay@val^0,c
  5372  002400  EC45  F019         	call	_ms_delay	;wreg free
  5373  002404                     
  5374                           ;main.c: 511:             Step_Z--;
  5375  002404  0100               	movlb	0	; () banked
  5376  002406  07D3               	decf	_Step_Z& (0+255),f,b
  5377  002408  A0D8               	btfss	status,0,c
  5378  00240A  07D4               	decf	(_Step_Z+1)& (0+255),f,b
  5379  00240C                     l332:
  5380  00240C  FFFF               	dw	65535	; assembler added errata NOP
  5381                           
  5382                           ;main.c: 513:         if (direction == 1){
  5383  00240E  0410               	decf	Z_axis@direction^0,w,c
  5384  002410  A4D8               	btfss	status,2,c
  5385  002412  EF0D  F012         	goto	u4921
  5386  002416  EF10  F012         	goto	u4920
  5387  00241A                     u4921:
  5388  00241A  FFFF               	dw	65535	; assembler added errata NOP
  5389  00241C  EF54  F012         	goto	l334
  5390  002420                     u4920:
  5391  002420  FFFF               	dw	65535	; assembler added errata NOP
  5392  002422                     
  5393                           ;main.c: 514:             PORTD = 0b10010000;
  5394  002422  0E90               	movlw	144
  5395  002424  6E83               	movwf	131,c	;volatile
  5396  002426                     
  5397                           ;main.c: 515:             ms_delay(1);
  5398  002426  0E00               	movlw	0
  5399  002428  6E0B               	movwf	(ms_delay@val+1)^0,c
  5400  00242A  0E01               	movlw	1
  5401  00242C  6E0A               	movwf	ms_delay@val^0,c
  5402  00242E  EC45  F019         	call	_ms_delay	;wreg free
  5403  002432                     
  5404                           ;main.c: 516:             PORTD = 0b10000000;
  5405  002432  0E80               	movlw	128
  5406  002434  6E83               	movwf	131,c	;volatile
  5407                           
  5408                           ;main.c: 517:             ms_delay(1);
  5409  002436  0E00               	movlw	0
  5410  002438  6E0B               	movwf	(ms_delay@val+1)^0,c
  5411  00243A  0E01               	movlw	1
  5412  00243C  6E0A               	movwf	ms_delay@val^0,c
  5413  00243E  EC45  F019         	call	_ms_delay	;wreg free
  5414  002442                     
  5415                           ;main.c: 518:             PORTD = 0b11000000;
  5416  002442  0EC0               	movlw	192
  5417  002444  6E83               	movwf	131,c	;volatile
  5418  002446                     
  5419                           ;main.c: 519:             ms_delay(1);
  5420  002446  0E00               	movlw	0
  5421  002448  6E0B               	movwf	(ms_delay@val+1)^0,c
  5422  00244A  0E01               	movlw	1
  5423  00244C  6E0A               	movwf	ms_delay@val^0,c
  5424  00244E  EC45  F019         	call	_ms_delay	;wreg free
  5425                           
  5426                           ;main.c: 520:             PORTD = 0b01000000;
  5427  002452  0E40               	movlw	64
  5428  002454  6E83               	movwf	131,c	;volatile
  5429  002456                     
  5430                           ;main.c: 521:             ms_delay(1);
  5431  002456  0E00               	movlw	0
  5432  002458  6E0B               	movwf	(ms_delay@val+1)^0,c
  5433  00245A  0E01               	movlw	1
  5434  00245C  6E0A               	movwf	ms_delay@val^0,c
  5435  00245E  EC45  F019         	call	_ms_delay	;wreg free
  5436  002462                     
  5437                           ;main.c: 522:             PORTD = 0b01100000;
  5438  002462  0E60               	movlw	96
  5439  002464  6E83               	movwf	131,c	;volatile
  5440                           
  5441                           ;main.c: 523:             ms_delay(1);
  5442  002466  0E00               	movlw	0
  5443  002468  6E0B               	movwf	(ms_delay@val+1)^0,c
  5444  00246A  0E01               	movlw	1
  5445  00246C  6E0A               	movwf	ms_delay@val^0,c
  5446  00246E  EC45  F019         	call	_ms_delay	;wreg free
  5447  002472                     
  5448                           ;main.c: 524:             PORTD = 0b00100000;
  5449  002472  0E20               	movlw	32
  5450  002474  6E83               	movwf	131,c	;volatile
  5451  002476                     
  5452                           ;main.c: 525:             ms_delay(1);
  5453  002476  0E00               	movlw	0
  5454  002478  6E0B               	movwf	(ms_delay@val+1)^0,c
  5455  00247A  0E01               	movlw	1
  5456  00247C  6E0A               	movwf	ms_delay@val^0,c
  5457  00247E  EC45  F019         	call	_ms_delay	;wreg free
  5458                           
  5459                           ;main.c: 526:             PORTD = 0b00110000;
  5460  002482  0E30               	movlw	48
  5461  002484  6E83               	movwf	131,c	;volatile
  5462  002486                     
  5463                           ;main.c: 527:             ms_delay(1);
  5464  002486  0E00               	movlw	0
  5465  002488  6E0B               	movwf	(ms_delay@val+1)^0,c
  5466  00248A  0E01               	movlw	1
  5467  00248C  6E0A               	movwf	ms_delay@val^0,c
  5468  00248E  EC45  F019         	call	_ms_delay	;wreg free
  5469  002492                     
  5470                           ;main.c: 528:             PORTD = 0b00010000;
  5471  002492  0E10               	movlw	16
  5472  002494  6E83               	movwf	131,c	;volatile
  5473                           
  5474                           ;main.c: 529:             ms_delay(1);
  5475  002496  0E00               	movlw	0
  5476  002498  6E0B               	movwf	(ms_delay@val+1)^0,c
  5477  00249A  0E01               	movlw	1
  5478  00249C  6E0A               	movwf	ms_delay@val^0,c
  5479  00249E  EC45  F019         	call	_ms_delay	;wreg free
  5480  0024A2                     
  5481                           ;main.c: 530:             Step_Z++;
  5482  0024A2  0100               	movlb	0	; () banked
  5483  0024A4  4BD3               	infsnz	_Step_Z& (0+255),f,b
  5484  0024A6  2BD4               	incf	(_Step_Z+1)& (0+255),f,b
  5485  0024A8                     l334:
  5486  0024A8  FFFF               	dw	65535	; assembler added errata NOP
  5487  0024AA  0012               	return		;funcret
  5488  0024AC  FFFF               	dw	65535	; errata NOP
  5489  0024AE                     __end_of_Z_axis:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function _Y_axis *****************
  5493 ;; Defined at:
  5494 ;;		line 451 in file "main.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  direction       1    wreg     unsigned char 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  direction       1   15[COMRAM] unsigned char 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      void 
  5501 ;; Registers used:
  5502 ;;		wreg, status,2, status,0, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5508 ;;      Params:         0       0       0       0       0       0       0
  5509 ;;      Locals:         1       0       0       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0
  5511 ;;      Totals:         1       0       0       0       0       0       0
  5512 ;;Total ram usage:        1 bytes
  5513 ;; Hardware stack levels used: 1
  5514 ;; Hardware stack levels required when called: 3
  5515 ;; This function calls:
  5516 ;;		_ms_delay
  5517 ;; This function is called by:
  5518 ;;		_pick_and_place
  5519 ;;		_return_to_initial
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text14
  5524  0024AE                     __ptext14:
  5525                           	callstack 0
  5526  0024AE                     _Y_axis:
  5527                           	callstack 0
  5528  0024AE  FFFF               	dw	65535	; assembler added errata NOP
  5529                           
  5530                           ;incstack = 0
  5531                           ;Y_axis@direction stored from wreg
  5532  0024B0  6E10               	movwf	Y_axis@direction^0,c
  5533  0024B2                     
  5534                           ;main.c: 452:         if (direction == 0){
  5535  0024B2  5010               	movf	Y_axis@direction^0,w,c
  5536  0024B4  A4D8               	btfss	status,2,c
  5537  0024B6  EF5F  F012         	goto	u4891
  5538  0024BA  EF62  F012         	goto	u4890
  5539  0024BE                     u4891:
  5540  0024BE  FFFF               	dw	65535	; assembler added errata NOP
  5541  0024C0  EFA7  F012         	goto	l327
  5542  0024C4                     u4890:
  5543  0024C4  FFFF               	dw	65535	; assembler added errata NOP
  5544  0024C6                     
  5545                           ;main.c: 453:             PORTB = 0b00010000;
  5546  0024C6  0E10               	movlw	16
  5547  0024C8  6E81               	movwf	129,c	;volatile
  5548  0024CA                     
  5549                           ;main.c: 454:             ms_delay(1);
  5550  0024CA  0E00               	movlw	0
  5551  0024CC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5552  0024CE  0E01               	movlw	1
  5553  0024D0  6E0A               	movwf	ms_delay@val^0,c
  5554  0024D2  EC45  F019         	call	_ms_delay	;wreg free
  5555  0024D6                     
  5556                           ;main.c: 455:             PORTB = 0b00110000;
  5557  0024D6  0E30               	movlw	48
  5558  0024D8  6E81               	movwf	129,c	;volatile
  5559  0024DA                     
  5560                           ;main.c: 456:             ms_delay(1);
  5561  0024DA  0E00               	movlw	0
  5562  0024DC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5563  0024DE  0E01               	movlw	1
  5564  0024E0  6E0A               	movwf	ms_delay@val^0,c
  5565  0024E2  EC45  F019         	call	_ms_delay	;wreg free
  5566  0024E6                     
  5567                           ;main.c: 457:             PORTB = 0b00100000;
  5568  0024E6  0E20               	movlw	32
  5569  0024E8  6E81               	movwf	129,c	;volatile
  5570  0024EA                     
  5571                           ;main.c: 458:             ms_delay(1);
  5572  0024EA  0E00               	movlw	0
  5573  0024EC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5574  0024EE  0E01               	movlw	1
  5575  0024F0  6E0A               	movwf	ms_delay@val^0,c
  5576  0024F2  EC45  F019         	call	_ms_delay	;wreg free
  5577  0024F6                     
  5578                           ;main.c: 459:             PORTB = 0b01100000;
  5579  0024F6  0E60               	movlw	96
  5580  0024F8  6E81               	movwf	129,c	;volatile
  5581  0024FA                     
  5582                           ;main.c: 460:             ms_delay(1);
  5583  0024FA  0E00               	movlw	0
  5584  0024FC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5585  0024FE  0E01               	movlw	1
  5586  002500  6E0A               	movwf	ms_delay@val^0,c
  5587  002502  EC45  F019         	call	_ms_delay	;wreg free
  5588  002506                     
  5589                           ;main.c: 461:             PORTB = 0b01000000;
  5590  002506  0E40               	movlw	64
  5591  002508  6E81               	movwf	129,c	;volatile
  5592  00250A                     
  5593                           ;main.c: 462:             ms_delay(1);
  5594  00250A  0E00               	movlw	0
  5595  00250C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5596  00250E  0E01               	movlw	1
  5597  002510  6E0A               	movwf	ms_delay@val^0,c
  5598  002512  EC45  F019         	call	_ms_delay	;wreg free
  5599  002516                     
  5600                           ;main.c: 463:             PORTB = 0b11000000;
  5601  002516  0EC0               	movlw	192
  5602  002518  6E81               	movwf	129,c	;volatile
  5603  00251A                     
  5604                           ;main.c: 464:             ms_delay(1);
  5605  00251A  0E00               	movlw	0
  5606  00251C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5607  00251E  0E01               	movlw	1
  5608  002520  6E0A               	movwf	ms_delay@val^0,c
  5609  002522  EC45  F019         	call	_ms_delay	;wreg free
  5610  002526                     
  5611                           ;main.c: 465:             PORTB = 0b10000000;
  5612  002526  0E80               	movlw	128
  5613  002528  6E81               	movwf	129,c	;volatile
  5614  00252A                     
  5615                           ;main.c: 466:             ms_delay(1);
  5616  00252A  0E00               	movlw	0
  5617  00252C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5618  00252E  0E01               	movlw	1
  5619  002530  6E0A               	movwf	ms_delay@val^0,c
  5620  002532  EC45  F019         	call	_ms_delay	;wreg free
  5621  002536                     
  5622                           ;main.c: 467:             PORTB = 0b10010000;
  5623  002536  0E90               	movlw	144
  5624  002538  6E81               	movwf	129,c	;volatile
  5625  00253A                     
  5626                           ;main.c: 468:             ms_delay(1);
  5627  00253A  0E00               	movlw	0
  5628  00253C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5629  00253E  0E01               	movlw	1
  5630  002540  6E0A               	movwf	ms_delay@val^0,c
  5631  002542  EC45  F019         	call	_ms_delay	;wreg free
  5632  002546                     
  5633                           ;main.c: 469:             Step_Y--;
  5634  002546  0100               	movlb	0	; () banked
  5635  002548  07D5               	decf	_Step_Y& (0+255),f,b
  5636  00254A  A0D8               	btfss	status,0,c
  5637  00254C  07D6               	decf	(_Step_Y+1)& (0+255),f,b
  5638  00254E                     l327:
  5639  00254E  FFFF               	dw	65535	; assembler added errata NOP
  5640                           
  5641                           ;main.c: 471:         if (direction == 1){
  5642  002550  0410               	decf	Y_axis@direction^0,w,c
  5643  002552  A4D8               	btfss	status,2,c
  5644  002554  EFAE  F012         	goto	u4901
  5645  002558  EFB1  F012         	goto	u4900
  5646  00255C                     u4901:
  5647  00255C  FFFF               	dw	65535	; assembler added errata NOP
  5648  00255E  EFF5  F012         	goto	l329
  5649  002562                     u4900:
  5650  002562  FFFF               	dw	65535	; assembler added errata NOP
  5651  002564                     
  5652                           ;main.c: 472:             PORTB = 0b10010000;
  5653  002564  0E90               	movlw	144
  5654  002566  6E81               	movwf	129,c	;volatile
  5655  002568                     
  5656                           ;main.c: 473:             ms_delay(1);
  5657  002568  0E00               	movlw	0
  5658  00256A  6E0B               	movwf	(ms_delay@val+1)^0,c
  5659  00256C  0E01               	movlw	1
  5660  00256E  6E0A               	movwf	ms_delay@val^0,c
  5661  002570  EC45  F019         	call	_ms_delay	;wreg free
  5662  002574                     
  5663                           ;main.c: 474:             PORTB = 0b10000000;
  5664  002574  0E80               	movlw	128
  5665  002576  6E81               	movwf	129,c	;volatile
  5666                           
  5667                           ;main.c: 475:             ms_delay(1);
  5668  002578  0E00               	movlw	0
  5669  00257A  6E0B               	movwf	(ms_delay@val+1)^0,c
  5670  00257C  0E01               	movlw	1
  5671  00257E  6E0A               	movwf	ms_delay@val^0,c
  5672  002580  EC45  F019         	call	_ms_delay	;wreg free
  5673  002584                     
  5674                           ;main.c: 476:             PORTB = 0b11000000;
  5675  002584  0EC0               	movlw	192
  5676  002586  6E81               	movwf	129,c	;volatile
  5677  002588                     
  5678                           ;main.c: 477:             ms_delay(1);
  5679  002588  0E00               	movlw	0
  5680  00258A  6E0B               	movwf	(ms_delay@val+1)^0,c
  5681  00258C  0E01               	movlw	1
  5682  00258E  6E0A               	movwf	ms_delay@val^0,c
  5683  002590  EC45  F019         	call	_ms_delay	;wreg free
  5684                           
  5685                           ;main.c: 478:             PORTB = 0b01000000;
  5686  002594  0E40               	movlw	64
  5687  002596  6E81               	movwf	129,c	;volatile
  5688  002598                     
  5689                           ;main.c: 479:             ms_delay(1);
  5690  002598  0E00               	movlw	0
  5691  00259A  6E0B               	movwf	(ms_delay@val+1)^0,c
  5692  00259C  0E01               	movlw	1
  5693  00259E  6E0A               	movwf	ms_delay@val^0,c
  5694  0025A0  EC45  F019         	call	_ms_delay	;wreg free
  5695  0025A4                     
  5696                           ;main.c: 480:             PORTB = 0b01100000;
  5697  0025A4  0E60               	movlw	96
  5698  0025A6  6E81               	movwf	129,c	;volatile
  5699                           
  5700                           ;main.c: 481:             ms_delay(1);
  5701  0025A8  0E00               	movlw	0
  5702  0025AA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5703  0025AC  0E01               	movlw	1
  5704  0025AE  6E0A               	movwf	ms_delay@val^0,c
  5705  0025B0  EC45  F019         	call	_ms_delay	;wreg free
  5706  0025B4                     
  5707                           ;main.c: 482:             PORTB = 0b00100000;
  5708  0025B4  0E20               	movlw	32
  5709  0025B6  6E81               	movwf	129,c	;volatile
  5710  0025B8                     
  5711                           ;main.c: 483:             ms_delay(1);
  5712  0025B8  0E00               	movlw	0
  5713  0025BA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5714  0025BC  0E01               	movlw	1
  5715  0025BE  6E0A               	movwf	ms_delay@val^0,c
  5716  0025C0  EC45  F019         	call	_ms_delay	;wreg free
  5717                           
  5718                           ;main.c: 484:             PORTB = 0b00110000;
  5719  0025C4  0E30               	movlw	48
  5720  0025C6  6E81               	movwf	129,c	;volatile
  5721  0025C8                     
  5722                           ;main.c: 485:             ms_delay(1);
  5723  0025C8  0E00               	movlw	0
  5724  0025CA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5725  0025CC  0E01               	movlw	1
  5726  0025CE  6E0A               	movwf	ms_delay@val^0,c
  5727  0025D0  EC45  F019         	call	_ms_delay	;wreg free
  5728  0025D4                     
  5729                           ;main.c: 486:             PORTB = 0b00010000;
  5730  0025D4  0E10               	movlw	16
  5731  0025D6  6E81               	movwf	129,c	;volatile
  5732                           
  5733                           ;main.c: 487:             ms_delay(1);
  5734  0025D8  0E00               	movlw	0
  5735  0025DA  6E0B               	movwf	(ms_delay@val+1)^0,c
  5736  0025DC  0E01               	movlw	1
  5737  0025DE  6E0A               	movwf	ms_delay@val^0,c
  5738  0025E0  EC45  F019         	call	_ms_delay	;wreg free
  5739  0025E4                     
  5740                           ;main.c: 488:             Step_Y++;
  5741  0025E4  0100               	movlb	0	; () banked
  5742  0025E6  4BD5               	infsnz	_Step_Y& (0+255),f,b
  5743  0025E8  2BD6               	incf	(_Step_Y+1)& (0+255),f,b
  5744  0025EA                     l329:
  5745  0025EA  FFFF               	dw	65535	; assembler added errata NOP
  5746  0025EC  0012               	return		;funcret
  5747  0025EE  FFFF               	dw	65535	; errata NOP
  5748  0025F0                     __end_of_Y_axis:
  5749                           	callstack 0
  5750                           
  5751 ;; *************** function _X_axis *****************
  5752 ;; Defined at:
  5753 ;;		line 408 in file "main.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  direction       1    wreg     unsigned char 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  direction       1   15[COMRAM] unsigned char 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1    wreg      void 
  5760 ;; Registers used:
  5761 ;;		wreg, status,2, status,0, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5767 ;;      Params:         0       0       0       0       0       0       0
  5768 ;;      Locals:         1       0       0       0       0       0       0
  5769 ;;      Temps:          0       0       0       0       0       0       0
  5770 ;;      Totals:         1       0       0       0       0       0       0
  5771 ;;Total ram usage:        1 bytes
  5772 ;; Hardware stack levels used: 1
  5773 ;; Hardware stack levels required when called: 3
  5774 ;; This function calls:
  5775 ;;		_ms_delay
  5776 ;; This function is called by:
  5777 ;;		_pick_and_place
  5778 ;;		_return_to_initial
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text15
  5783  0025F0                     __ptext15:
  5784                           	callstack 0
  5785  0025F0                     _X_axis:
  5786                           	callstack 0
  5787  0025F0  FFFF               	dw	65535	; assembler added errata NOP
  5788                           
  5789                           ;incstack = 0
  5790                           ;X_axis@direction stored from wreg
  5791  0025F2  6E10               	movwf	X_axis@direction^0,c
  5792  0025F4                     
  5793                           ;main.c: 409:         if (direction == 0){
  5794  0025F4  5010               	movf	X_axis@direction^0,w,c
  5795  0025F6  A4D8               	btfss	status,2,c
  5796  0025F8  EF00  F013         	goto	u4871
  5797  0025FC  EF03  F013         	goto	u4870
  5798  002600                     u4871:
  5799  002600  FFFF               	dw	65535	; assembler added errata NOP
  5800  002602  EF48  F013         	goto	l322
  5801  002606                     u4870:
  5802  002606  FFFF               	dw	65535	; assembler added errata NOP
  5803  002608                     
  5804                           ;main.c: 410:             PORTA = 0b00000001;
  5805  002608  0E01               	movlw	1
  5806  00260A  6E80               	movwf	128,c	;volatile
  5807  00260C                     
  5808                           ;main.c: 411:             ms_delay(1);
  5809  00260C  0E00               	movlw	0
  5810  00260E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5811  002610  0E01               	movlw	1
  5812  002612  6E0A               	movwf	ms_delay@val^0,c
  5813  002614  EC45  F019         	call	_ms_delay	;wreg free
  5814  002618                     
  5815                           ;main.c: 412:             PORTA = 0b00000011;
  5816  002618  0E03               	movlw	3
  5817  00261A  6E80               	movwf	128,c	;volatile
  5818  00261C                     
  5819                           ;main.c: 413:             ms_delay(1);
  5820  00261C  0E00               	movlw	0
  5821  00261E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5822  002620  0E01               	movlw	1
  5823  002622  6E0A               	movwf	ms_delay@val^0,c
  5824  002624  EC45  F019         	call	_ms_delay	;wreg free
  5825  002628                     
  5826                           ;main.c: 414:             PORTA = 0b00000010;
  5827  002628  0E02               	movlw	2
  5828  00262A  6E80               	movwf	128,c	;volatile
  5829  00262C                     
  5830                           ;main.c: 415:             ms_delay(1);
  5831  00262C  0E00               	movlw	0
  5832  00262E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5833  002630  0E01               	movlw	1
  5834  002632  6E0A               	movwf	ms_delay@val^0,c
  5835  002634  EC45  F019         	call	_ms_delay	;wreg free
  5836  002638                     
  5837                           ;main.c: 416:             PORTA = 0b00000110;
  5838  002638  0E06               	movlw	6
  5839  00263A  6E80               	movwf	128,c	;volatile
  5840  00263C                     
  5841                           ;main.c: 417:             ms_delay(1);
  5842  00263C  0E00               	movlw	0
  5843  00263E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5844  002640  0E01               	movlw	1
  5845  002642  6E0A               	movwf	ms_delay@val^0,c
  5846  002644  EC45  F019         	call	_ms_delay	;wreg free
  5847  002648                     
  5848                           ;main.c: 418:             PORTA = 0b00000100;
  5849  002648  0E04               	movlw	4
  5850  00264A  6E80               	movwf	128,c	;volatile
  5851  00264C                     
  5852                           ;main.c: 419:             ms_delay(1);
  5853  00264C  0E00               	movlw	0
  5854  00264E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5855  002650  0E01               	movlw	1
  5856  002652  6E0A               	movwf	ms_delay@val^0,c
  5857  002654  EC45  F019         	call	_ms_delay	;wreg free
  5858  002658                     
  5859                           ;main.c: 420:             PORTA = 0b00001100;
  5860  002658  0E0C               	movlw	12
  5861  00265A  6E80               	movwf	128,c	;volatile
  5862  00265C                     
  5863                           ;main.c: 421:             ms_delay(1);
  5864  00265C  0E00               	movlw	0
  5865  00265E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5866  002660  0E01               	movlw	1
  5867  002662  6E0A               	movwf	ms_delay@val^0,c
  5868  002664  EC45  F019         	call	_ms_delay	;wreg free
  5869  002668                     
  5870                           ;main.c: 422:             PORTA = 0b00001000;
  5871  002668  0E08               	movlw	8
  5872  00266A  6E80               	movwf	128,c	;volatile
  5873  00266C                     
  5874                           ;main.c: 423:             ms_delay(1);
  5875  00266C  0E00               	movlw	0
  5876  00266E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5877  002670  0E01               	movlw	1
  5878  002672  6E0A               	movwf	ms_delay@val^0,c
  5879  002674  EC45  F019         	call	_ms_delay	;wreg free
  5880  002678                     
  5881                           ;main.c: 424:             PORTA = 0b00001001;
  5882  002678  0E09               	movlw	9
  5883  00267A  6E80               	movwf	128,c	;volatile
  5884  00267C                     
  5885                           ;main.c: 425:             ms_delay(1);
  5886  00267C  0E00               	movlw	0
  5887  00267E  6E0B               	movwf	(ms_delay@val+1)^0,c
  5888  002680  0E01               	movlw	1
  5889  002682  6E0A               	movwf	ms_delay@val^0,c
  5890  002684  EC45  F019         	call	_ms_delay	;wreg free
  5891  002688                     
  5892                           ;main.c: 426:             Step_X--;
  5893  002688  0100               	movlb	0	; () banked
  5894  00268A  07D7               	decf	_Step_X& (0+255),f,b
  5895  00268C  A0D8               	btfss	status,0,c
  5896  00268E  07D8               	decf	(_Step_X+1)& (0+255),f,b
  5897  002690                     l322:
  5898  002690  FFFF               	dw	65535	; assembler added errata NOP
  5899                           
  5900                           ;main.c: 428:         if (direction == 1){
  5901  002692  0410               	decf	X_axis@direction^0,w,c
  5902  002694  A4D8               	btfss	status,2,c
  5903  002696  EF4F  F013         	goto	u4881
  5904  00269A  EF52  F013         	goto	u4880
  5905  00269E                     u4881:
  5906  00269E  FFFF               	dw	65535	; assembler added errata NOP
  5907  0026A0  EF96  F013         	goto	l324
  5908  0026A4                     u4880:
  5909  0026A4  FFFF               	dw	65535	; assembler added errata NOP
  5910  0026A6                     
  5911                           ;main.c: 429:             PORTA = 0b00001001;
  5912  0026A6  0E09               	movlw	9
  5913  0026A8  6E80               	movwf	128,c	;volatile
  5914  0026AA                     
  5915                           ;main.c: 430:             ms_delay(1);
  5916  0026AA  0E00               	movlw	0
  5917  0026AC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5918  0026AE  0E01               	movlw	1
  5919  0026B0  6E0A               	movwf	ms_delay@val^0,c
  5920  0026B2  EC45  F019         	call	_ms_delay	;wreg free
  5921  0026B6                     
  5922                           ;main.c: 431:             PORTA = 0b00001000;
  5923  0026B6  0E08               	movlw	8
  5924  0026B8  6E80               	movwf	128,c	;volatile
  5925                           
  5926                           ;main.c: 432:             ms_delay(1);
  5927  0026BA  0E00               	movlw	0
  5928  0026BC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5929  0026BE  0E01               	movlw	1
  5930  0026C0  6E0A               	movwf	ms_delay@val^0,c
  5931  0026C2  EC45  F019         	call	_ms_delay	;wreg free
  5932  0026C6                     
  5933                           ;main.c: 433:             PORTA = 0b00001100;
  5934  0026C6  0E0C               	movlw	12
  5935  0026C8  6E80               	movwf	128,c	;volatile
  5936  0026CA                     
  5937                           ;main.c: 434:             ms_delay(1);
  5938  0026CA  0E00               	movlw	0
  5939  0026CC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5940  0026CE  0E01               	movlw	1
  5941  0026D0  6E0A               	movwf	ms_delay@val^0,c
  5942  0026D2  EC45  F019         	call	_ms_delay	;wreg free
  5943                           
  5944                           ;main.c: 435:             PORTA = 0b00000100;
  5945  0026D6  0E04               	movlw	4
  5946  0026D8  6E80               	movwf	128,c	;volatile
  5947  0026DA                     
  5948                           ;main.c: 436:             ms_delay(1);
  5949  0026DA  0E00               	movlw	0
  5950  0026DC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5951  0026DE  0E01               	movlw	1
  5952  0026E0  6E0A               	movwf	ms_delay@val^0,c
  5953  0026E2  EC45  F019         	call	_ms_delay	;wreg free
  5954  0026E6                     
  5955                           ;main.c: 437:             PORTA = 0b00000110;
  5956  0026E6  0E06               	movlw	6
  5957  0026E8  6E80               	movwf	128,c	;volatile
  5958                           
  5959                           ;main.c: 438:             ms_delay(1);
  5960  0026EA  0E00               	movlw	0
  5961  0026EC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5962  0026EE  0E01               	movlw	1
  5963  0026F0  6E0A               	movwf	ms_delay@val^0,c
  5964  0026F2  EC45  F019         	call	_ms_delay	;wreg free
  5965  0026F6                     
  5966                           ;main.c: 439:             PORTA = 0b00000010;
  5967  0026F6  0E02               	movlw	2
  5968  0026F8  6E80               	movwf	128,c	;volatile
  5969  0026FA                     
  5970                           ;main.c: 440:             ms_delay(1);
  5971  0026FA  0E00               	movlw	0
  5972  0026FC  6E0B               	movwf	(ms_delay@val+1)^0,c
  5973  0026FE  0E01               	movlw	1
  5974  002700  6E0A               	movwf	ms_delay@val^0,c
  5975  002702  EC45  F019         	call	_ms_delay	;wreg free
  5976                           
  5977                           ;main.c: 441:             PORTA = 0b00000011;
  5978  002706  0E03               	movlw	3
  5979  002708  6E80               	movwf	128,c	;volatile
  5980  00270A                     
  5981                           ;main.c: 442:             ms_delay(1);
  5982  00270A  0E00               	movlw	0
  5983  00270C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5984  00270E  0E01               	movlw	1
  5985  002710  6E0A               	movwf	ms_delay@val^0,c
  5986  002712  EC45  F019         	call	_ms_delay	;wreg free
  5987  002716                     
  5988                           ;main.c: 443:             PORTA = 0b00000001;
  5989  002716  0E01               	movlw	1
  5990  002718  6E80               	movwf	128,c	;volatile
  5991                           
  5992                           ;main.c: 444:             ms_delay(1);
  5993  00271A  0E00               	movlw	0
  5994  00271C  6E0B               	movwf	(ms_delay@val+1)^0,c
  5995  00271E  0E01               	movlw	1
  5996  002720  6E0A               	movwf	ms_delay@val^0,c
  5997  002722  EC45  F019         	call	_ms_delay	;wreg free
  5998  002726                     
  5999                           ;main.c: 445:             Step_X++;
  6000  002726  0100               	movlb	0	; () banked
  6001  002728  4BD7               	infsnz	_Step_X& (0+255),f,b
  6002  00272A  2BD8               	incf	(_Step_X+1)& (0+255),f,b
  6003  00272C                     l324:
  6004  00272C  FFFF               	dw	65535	; assembler added errata NOP
  6005  00272E  0012               	return		;funcret
  6006  002730  FFFF               	dw	65535	; errata NOP
  6007  002732                     __end_of_X_axis:
  6008                           	callstack 0
  6009                           
  6010 ;; *************** function _Twister *****************
  6011 ;; Defined at:
  6012 ;;		line 535 in file "main.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  direction       1    wreg     unsigned char 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  direction       1   15[COMRAM] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6026 ;;      Params:         0       0       0       0       0       0       0
  6027 ;;      Locals:         1       0       0       0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0
  6029 ;;      Totals:         1       0       0       0       0       0       0
  6030 ;;Total ram usage:        1 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 3
  6033 ;; This function calls:
  6034 ;;		_ms_delay
  6035 ;; This function is called by:
  6036 ;;		_pick_and_place
  6037 ;;		_return_to_initial
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text16
  6042  002732                     __ptext16:
  6043                           	callstack 0
  6044  002732                     _Twister:
  6045                           	callstack 0
  6046  002732  FFFF               	dw	65535	; assembler added errata NOP
  6047                           
  6048                           ;incstack = 0
  6049                           ;Twister@direction stored from wreg
  6050  002734  6E10               	movwf	Twister@direction^0,c
  6051  002736                     
  6052                           ;main.c: 536:         if (direction == 0){
  6053  002736  5010               	movf	Twister@direction^0,w,c
  6054  002738  A4D8               	btfss	status,2,c
  6055  00273A  EFA1  F013         	goto	u4931
  6056  00273E  EFA4  F013         	goto	u4930
  6057  002742                     u4931:
  6058  002742  FFFF               	dw	65535	; assembler added errata NOP
  6059  002744  EFE9  F013         	goto	l337
  6060  002748                     u4930:
  6061  002748  FFFF               	dw	65535	; assembler added errata NOP
  6062  00274A                     
  6063                           ;main.c: 537:             PORTD = 0b00000001;
  6064  00274A  0E01               	movlw	1
  6065  00274C  6E83               	movwf	131,c	;volatile
  6066  00274E                     
  6067                           ;main.c: 538:             ms_delay(1);
  6068  00274E  0E00               	movlw	0
  6069  002750  6E0B               	movwf	(ms_delay@val+1)^0,c
  6070  002752  0E01               	movlw	1
  6071  002754  6E0A               	movwf	ms_delay@val^0,c
  6072  002756  EC45  F019         	call	_ms_delay	;wreg free
  6073  00275A                     
  6074                           ;main.c: 539:             PORTD = 0b00000011;
  6075  00275A  0E03               	movlw	3
  6076  00275C  6E83               	movwf	131,c	;volatile
  6077  00275E                     
  6078                           ;main.c: 540:             ms_delay(1);
  6079  00275E  0E00               	movlw	0
  6080  002760  6E0B               	movwf	(ms_delay@val+1)^0,c
  6081  002762  0E01               	movlw	1
  6082  002764  6E0A               	movwf	ms_delay@val^0,c
  6083  002766  EC45  F019         	call	_ms_delay	;wreg free
  6084  00276A                     
  6085                           ;main.c: 541:             PORTD = 0b00000010;
  6086  00276A  0E02               	movlw	2
  6087  00276C  6E83               	movwf	131,c	;volatile
  6088  00276E                     
  6089                           ;main.c: 542:             ms_delay(1);
  6090  00276E  0E00               	movlw	0
  6091  002770  6E0B               	movwf	(ms_delay@val+1)^0,c
  6092  002772  0E01               	movlw	1
  6093  002774  6E0A               	movwf	ms_delay@val^0,c
  6094  002776  EC45  F019         	call	_ms_delay	;wreg free
  6095  00277A                     
  6096                           ;main.c: 543:             PORTD = 0b00000110;
  6097  00277A  0E06               	movlw	6
  6098  00277C  6E83               	movwf	131,c	;volatile
  6099  00277E                     
  6100                           ;main.c: 544:             ms_delay(1);
  6101  00277E  0E00               	movlw	0
  6102  002780  6E0B               	movwf	(ms_delay@val+1)^0,c
  6103  002782  0E01               	movlw	1
  6104  002784  6E0A               	movwf	ms_delay@val^0,c
  6105  002786  EC45  F019         	call	_ms_delay	;wreg free
  6106  00278A                     
  6107                           ;main.c: 545:             PORTD = 0b00000100;
  6108  00278A  0E04               	movlw	4
  6109  00278C  6E83               	movwf	131,c	;volatile
  6110  00278E                     
  6111                           ;main.c: 546:             ms_delay(1);
  6112  00278E  0E00               	movlw	0
  6113  002790  6E0B               	movwf	(ms_delay@val+1)^0,c
  6114  002792  0E01               	movlw	1
  6115  002794  6E0A               	movwf	ms_delay@val^0,c
  6116  002796  EC45  F019         	call	_ms_delay	;wreg free
  6117  00279A                     
  6118                           ;main.c: 547:             PORTD = 0b00001100;
  6119  00279A  0E0C               	movlw	12
  6120  00279C  6E83               	movwf	131,c	;volatile
  6121  00279E                     
  6122                           ;main.c: 548:             ms_delay(1);
  6123  00279E  0E00               	movlw	0
  6124  0027A0  6E0B               	movwf	(ms_delay@val+1)^0,c
  6125  0027A2  0E01               	movlw	1
  6126  0027A4  6E0A               	movwf	ms_delay@val^0,c
  6127  0027A6  EC45  F019         	call	_ms_delay	;wreg free
  6128  0027AA                     
  6129                           ;main.c: 549:             PORTD = 0b00001000;
  6130  0027AA  0E08               	movlw	8
  6131  0027AC  6E83               	movwf	131,c	;volatile
  6132  0027AE                     
  6133                           ;main.c: 550:             ms_delay(1);
  6134  0027AE  0E00               	movlw	0
  6135  0027B0  6E0B               	movwf	(ms_delay@val+1)^0,c
  6136  0027B2  0E01               	movlw	1
  6137  0027B4  6E0A               	movwf	ms_delay@val^0,c
  6138  0027B6  EC45  F019         	call	_ms_delay	;wreg free
  6139  0027BA                     
  6140                           ;main.c: 551:             PORTD = 0b00001001;
  6141  0027BA  0E09               	movlw	9
  6142  0027BC  6E83               	movwf	131,c	;volatile
  6143  0027BE                     
  6144                           ;main.c: 552:             ms_delay(1);
  6145  0027BE  0E00               	movlw	0
  6146  0027C0  6E0B               	movwf	(ms_delay@val+1)^0,c
  6147  0027C2  0E01               	movlw	1
  6148  0027C4  6E0A               	movwf	ms_delay@val^0,c
  6149  0027C6  EC45  F019         	call	_ms_delay	;wreg free
  6150  0027CA                     
  6151                           ;main.c: 553:             Step_Angle--;
  6152  0027CA  0100               	movlb	0	; () banked
  6153  0027CC  07D1               	decf	_Step_Angle& (0+255),f,b
  6154  0027CE  A0D8               	btfss	status,0,c
  6155  0027D0  07D2               	decf	(_Step_Angle+1)& (0+255),f,b
  6156  0027D2                     l337:
  6157  0027D2  FFFF               	dw	65535	; assembler added errata NOP
  6158                           
  6159                           ;main.c: 555:         if (direction == 1){
  6160  0027D4  0410               	decf	Twister@direction^0,w,c
  6161  0027D6  A4D8               	btfss	status,2,c
  6162  0027D8  EFF0  F013         	goto	u4941
  6163  0027DC  EFF3  F013         	goto	u4940
  6164  0027E0                     u4941:
  6165  0027E0  FFFF               	dw	65535	; assembler added errata NOP
  6166  0027E2  EF37  F014         	goto	l339
  6167  0027E6                     u4940:
  6168  0027E6  FFFF               	dw	65535	; assembler added errata NOP
  6169  0027E8                     
  6170                           ;main.c: 556:             PORTD = 0b00001001;
  6171  0027E8  0E09               	movlw	9
  6172  0027EA  6E83               	movwf	131,c	;volatile
  6173  0027EC                     
  6174                           ;main.c: 557:             ms_delay(1);
  6175  0027EC  0E00               	movlw	0
  6176  0027EE  6E0B               	movwf	(ms_delay@val+1)^0,c
  6177  0027F0  0E01               	movlw	1
  6178  0027F2  6E0A               	movwf	ms_delay@val^0,c
  6179  0027F4  EC45  F019         	call	_ms_delay	;wreg free
  6180  0027F8                     
  6181                           ;main.c: 558:             PORTD = 0b00001000;
  6182  0027F8  0E08               	movlw	8
  6183  0027FA  6E83               	movwf	131,c	;volatile
  6184                           
  6185                           ;main.c: 559:             ms_delay(1);
  6186  0027FC  0E00               	movlw	0
  6187  0027FE  6E0B               	movwf	(ms_delay@val+1)^0,c
  6188  002800  0E01               	movlw	1
  6189  002802  6E0A               	movwf	ms_delay@val^0,c
  6190  002804  EC45  F019         	call	_ms_delay	;wreg free
  6191  002808                     
  6192                           ;main.c: 560:             PORTD = 0b00001100;
  6193  002808  0E0C               	movlw	12
  6194  00280A  6E83               	movwf	131,c	;volatile
  6195  00280C                     
  6196                           ;main.c: 561:             ms_delay(1);
  6197  00280C  0E00               	movlw	0
  6198  00280E  6E0B               	movwf	(ms_delay@val+1)^0,c
  6199  002810  0E01               	movlw	1
  6200  002812  6E0A               	movwf	ms_delay@val^0,c
  6201  002814  EC45  F019         	call	_ms_delay	;wreg free
  6202                           
  6203                           ;main.c: 562:             PORTD = 0b00000100;
  6204  002818  0E04               	movlw	4
  6205  00281A  6E83               	movwf	131,c	;volatile
  6206  00281C                     
  6207                           ;main.c: 563:             ms_delay(1);
  6208  00281C  0E00               	movlw	0
  6209  00281E  6E0B               	movwf	(ms_delay@val+1)^0,c
  6210  002820  0E01               	movlw	1
  6211  002822  6E0A               	movwf	ms_delay@val^0,c
  6212  002824  EC45  F019         	call	_ms_delay	;wreg free
  6213  002828                     
  6214                           ;main.c: 564:             PORTD = 0b00000110;
  6215  002828  0E06               	movlw	6
  6216  00282A  6E83               	movwf	131,c	;volatile
  6217                           
  6218                           ;main.c: 565:             ms_delay(1);
  6219  00282C  0E00               	movlw	0
  6220  00282E  6E0B               	movwf	(ms_delay@val+1)^0,c
  6221  002830  0E01               	movlw	1
  6222  002832  6E0A               	movwf	ms_delay@val^0,c
  6223  002834  EC45  F019         	call	_ms_delay	;wreg free
  6224  002838                     
  6225                           ;main.c: 566:             PORTD = 0b00000010;
  6226  002838  0E02               	movlw	2
  6227  00283A  6E83               	movwf	131,c	;volatile
  6228  00283C                     
  6229                           ;main.c: 567:             ms_delay(1);
  6230  00283C  0E00               	movlw	0
  6231  00283E  6E0B               	movwf	(ms_delay@val+1)^0,c
  6232  002840  0E01               	movlw	1
  6233  002842  6E0A               	movwf	ms_delay@val^0,c
  6234  002844  EC45  F019         	call	_ms_delay	;wreg free
  6235                           
  6236                           ;main.c: 568:             PORTD = 0b00000011;
  6237  002848  0E03               	movlw	3
  6238  00284A  6E83               	movwf	131,c	;volatile
  6239  00284C                     
  6240                           ;main.c: 569:             ms_delay(1);
  6241  00284C  0E00               	movlw	0
  6242  00284E  6E0B               	movwf	(ms_delay@val+1)^0,c
  6243  002850  0E01               	movlw	1
  6244  002852  6E0A               	movwf	ms_delay@val^0,c
  6245  002854  EC45  F019         	call	_ms_delay	;wreg free
  6246  002858                     
  6247                           ;main.c: 570:             PORTD = 0b00000001;
  6248  002858  0E01               	movlw	1
  6249  00285A  6E83               	movwf	131,c	;volatile
  6250                           
  6251                           ;main.c: 571:             ms_delay(1);
  6252  00285C  0E00               	movlw	0
  6253  00285E  6E0B               	movwf	(ms_delay@val+1)^0,c
  6254  002860  0E01               	movlw	1
  6255  002862  6E0A               	movwf	ms_delay@val^0,c
  6256  002864  EC45  F019         	call	_ms_delay	;wreg free
  6257  002868                     
  6258                           ;main.c: 572:             Step_Angle++;
  6259  002868  0100               	movlb	0	; () banked
  6260  00286A  4BD1               	infsnz	_Step_Angle& (0+255),f,b
  6261  00286C  2BD2               	incf	(_Step_Angle+1)& (0+255),f,b
  6262  00286E                     l339:
  6263  00286E  FFFF               	dw	65535	; assembler added errata NOP
  6264  002870  0012               	return		;funcret
  6265  002872  FFFF               	dw	65535	; errata NOP
  6266  002874                     __end_of_Twister:
  6267                           	callstack 0
  6268                           
  6269 ;; *************** function _ms_delay *****************
  6270 ;; Defined at:
  6271 ;;		line 578 in file "main.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  val             2    9[COMRAM] unsigned int 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  j               2   13[COMRAM] unsigned int 
  6276 ;;  i               2   11[COMRAM] unsigned int 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6286 ;;      Params:         2       0       0       0       0       0       0
  6287 ;;      Locals:         4       0       0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0
  6289 ;;      Totals:         6       0       0       0       0       0       0
  6290 ;;Total ram usage:        6 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 2
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_X_axis
  6297 ;;		_Y_axis
  6298 ;;		_Z_axis
  6299 ;;		_Twister
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text17
  6304  00328A                     __ptext17:
  6305                           	callstack 0
  6306  00328A                     _ms_delay:
  6307                           	callstack 0
  6308  00328A  FFFF               	dw	65535	; assembler added errata NOP
  6309  00328C                     
  6310                           ;main.c: 578: void ms_delay(unsigned int val);main.c: 579: {;main.c: 580:     unsigned i
      +                          nt i,j;;main.c: 581:     for(i=0;i<val;i++);
  6311  00328C  0E00               	movlw	0
  6312  00328E  6E0D               	movwf	(ms_delay@i+1)^0,c
  6313  003290  0E00               	movlw	0
  6314  003292  6E0C               	movwf	ms_delay@i^0,c
  6315  003294  EF4F  F019         	goto	l4479
  6316  003298                     l4477:
  6317  003298  FFFF               	dw	65535	; assembler added errata NOP
  6318  00329A  4A0C               	infsnz	ms_delay@i^0,f,c
  6319  00329C  2A0D               	incf	(ms_delay@i+1)^0,f,c
  6320  00329E                     l4479:
  6321  00329E  FFFF               	dw	65535	; assembler added errata NOP
  6322  0032A0  500A               	movf	ms_delay@val^0,w,c
  6323  0032A2  5C0C               	subwf	ms_delay@i^0,w,c
  6324  0032A4  500B               	movf	(ms_delay@val+1)^0,w,c
  6325  0032A6  580D               	subwfb	(ms_delay@i+1)^0,w,c
  6326  0032A8  A0D8               	btfss	status,0,c
  6327  0032AA  EF59  F019         	goto	u4781
  6328  0032AE  EF5C  F019         	goto	u4780
  6329  0032B2                     u4781:
  6330  0032B2  FFFF               	dw	65535	; assembler added errata NOP
  6331  0032B4  EF4C  F019         	goto	l4477
  6332  0032B8                     u4780:
  6333  0032B8  FFFF               	dw	65535	; assembler added errata NOP
  6334  0032BA                     
  6335                           ;main.c: 582:     for(j=0;j<1650;j++);
  6336  0032BA  0E00               	movlw	0
  6337  0032BC  6E0F               	movwf	(ms_delay@j+1)^0,c
  6338  0032BE  0E00               	movlw	0
  6339  0032C0  6E0E               	movwf	ms_delay@j^0,c
  6340  0032C2                     l4487:
  6341  0032C2  FFFF               	dw	65535	; assembler added errata NOP
  6342  0032C4  4A0E               	infsnz	ms_delay@j^0,f,c
  6343  0032C6  2A0F               	incf	(ms_delay@j+1)^0,f,c
  6344  0032C8  0E72               	movlw	114
  6345  0032CA  5C0E               	subwf	ms_delay@j^0,w,c
  6346  0032CC  0E06               	movlw	6
  6347  0032CE  580F               	subwfb	(ms_delay@j+1)^0,w,c
  6348  0032D0  A0D8               	btfss	status,0,c
  6349  0032D2  EF6D  F019         	goto	u4791
  6350  0032D6  EF70  F019         	goto	u4790
  6351  0032DA                     u4791:
  6352  0032DA  FFFF               	dw	65535	; assembler added errata NOP
  6353  0032DC  EF61  F019         	goto	l4487
  6354  0032E0                     u4790:
  6355  0032E0  FFFF               	dw	65535	; assembler added errata NOP
  6356  0032E2  0012               	return		;funcret
  6357  0032E4  FFFF               	dw	65535	; errata NOP
  6358  0032E6                     __end_of_ms_delay:
  6359                           	callstack 0
  6360                           
  6361 ;; *************** function _Tweezer *****************
  6362 ;; Defined at:
  6363 ;;		line 595 in file "main.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  action          1    wreg     unsigned char 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  action          1    9[COMRAM] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6377 ;;      Params:         0       0       0       0       0       0       0
  6378 ;;      Locals:         1       0       0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0
  6380 ;;      Totals:         1       0       0       0       0       0       0
  6381 ;;Total ram usage:        1 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 2
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_pick_and_place
  6388 ;;		_return_to_initial
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text18
  6393  0031B6                     __ptext18:
  6394                           	callstack 0
  6395  0031B6                     _Tweezer:
  6396                           	callstack 0
  6397  0031B6  FFFF               	dw	65535	; assembler added errata NOP
  6398                           
  6399                           ;incstack = 0
  6400                           ;Tweezer@action stored from wreg
  6401  0031B8  6E0A               	movwf	Tweezer@action^0,c
  6402  0031BA                     
  6403                           ;main.c: 596:     if(action == 1 && !stop){
  6404  0031BA  040A               	decf	Tweezer@action^0,w,c
  6405  0031BC  A4D8               	btfss	status,2,c
  6406  0031BE  EFE3  F018         	goto	u4951
  6407  0031C2  EFE6  F018         	goto	u4950
  6408  0031C6                     u4951:
  6409  0031C6  FFFF               	dw	65535	; assembler added errata NOP
  6410  0031C8  EFF6  F018         	goto	l353
  6411  0031CC                     u4950:
  6412  0031CC  FFFF               	dw	65535	; assembler added errata NOP
  6413  0031CE  5072               	movf	_stop^0,w,c
  6414  0031D0  A4D8               	btfss	status,2,c
  6415  0031D2  EFED  F018         	goto	u4961
  6416  0031D6  EFF0  F018         	goto	u4960
  6417  0031DA                     u4961:
  6418  0031DA  FFFF               	dw	65535	; assembler added errata NOP
  6419  0031DC  EFF6  F018         	goto	l353
  6420  0031E0                     u4960:
  6421  0031E0  FFFF               	dw	65535	; assembler added errata NOP
  6422  0031E2                     
  6423                           ;main.c: 597:         new_TMR1H = 0xF9;
  6424  0031E2  0EF9               	movlw	249
  6425  0031E4  6E75               	movwf	_new_TMR1H@main$F795^0,c
  6426                           
  6427                           ;main.c: 598:         new_TMR1L = 0x53;
  6428  0031E6  0E53               	movlw	83
  6429  0031E8  0100               	movlb	0	; () banked
  6430  0031EA  6FAE               	movwf	_new_TMR1L@main$F796& (0+255),b
  6431  0031EC                     l353:
  6432  0031EC  FFFF               	dw	65535	; assembler added errata NOP
  6433                           
  6434                           ;main.c: 601:     if(action == 0 && !stop){
  6435  0031EE  500A               	movf	Tweezer@action^0,w,c
  6436  0031F0  A4D8               	btfss	status,2,c
  6437  0031F2  EFFD  F018         	goto	u4971
  6438  0031F6  EF00  F019         	goto	u4970
  6439  0031FA                     u4971:
  6440  0031FA  FFFF               	dw	65535	; assembler added errata NOP
  6441  0031FC  EF10  F019         	goto	l4789
  6442  003200                     u4970:
  6443  003200  FFFF               	dw	65535	; assembler added errata NOP
  6444  003202  5072               	movf	_stop^0,w,c
  6445  003204  A4D8               	btfss	status,2,c
  6446  003206  EF07  F019         	goto	u4981
  6447  00320A  EF0A  F019         	goto	u4980
  6448  00320E                     u4981:
  6449  00320E  FFFF               	dw	65535	; assembler added errata NOP
  6450  003210  EF10  F019         	goto	l4789
  6451  003214                     u4980:
  6452  003214  FFFF               	dw	65535	; assembler added errata NOP
  6453  003216                     
  6454                           ;main.c: 602:         new_TMR1H= 0xFA;
  6455  003216  0EFA               	movlw	250
  6456  003218  6E75               	movwf	_new_TMR1H@main$F795^0,c
  6457                           
  6458                           ;main.c: 603:         new_TMR1L= 0x60;
  6459  00321A  0E60               	movlw	96
  6460  00321C  0100               	movlb	0	; () banked
  6461  00321E  6FAE               	movwf	_new_TMR1L@main$F796& (0+255),b
  6462  003220                     l4789:
  6463  003220  FFFF               	dw	65535	; assembler added errata NOP
  6464                           
  6465                           ;main.c: 605:     LATCbits.LC2=1;
  6466  003222  848B               	bsf	139,2,c	;volatile
  6467  003224                     
  6468                           ;main.c: 606:     T1CONbits.TMR1ON=1;
  6469  003224  80CD               	bsf	205,0,c	;volatile
  6470  003226  0012               	return		;funcret
  6471  003228  FFFF               	dw	65535	; errata NOP
  6472  00322A                     __end_of_Tweezer:
  6473                           	callstack 0
  6474                           
  6475 ;; *************** function _change_sequence *****************
  6476 ;; Defined at:
  6477 ;;		line 275 in file "main.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;		None
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  i               2   18[COMRAM] int 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      void 
  6484 ;; Registers used:
  6485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6491 ;;      Params:         0       0       0       0       0       0       0
  6492 ;;      Locals:         2       0       0       0       0       0       0
  6493 ;;      Temps:          3       0       0       0       0       0       0
  6494 ;;      Totals:         5       0       0       0       0       0       0
  6495 ;;Total ram usage:        5 bytes
  6496 ;; Hardware stack levels used: 1
  6497 ;; Hardware stack levels required when called: 3
  6498 ;; This function calls:
  6499 ;;		_print_string
  6500 ;; This function is called by:
  6501 ;;		_start_up_menu
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text19
  6506  00309C                     __ptext19:
  6507                           	callstack 0
  6508  00309C                     _change_sequence:
  6509                           	callstack 0
  6510  00309C  FFFF               	dw	65535	; assembler added errata NOP
  6511  00309E                     
  6512                           ;main.c: 276:     print_string("\nThe current sequence is: ");
  6513  00309E  0E4C               	movlw	low STR_4
  6514  0030A0  6E0A               	movwf	print_string@strng^0,c
  6515  0030A2  0E7F               	movlw	high STR_4
  6516  0030A4  6E0B               	movwf	(print_string@strng+1)^0,c
  6517  0030A6  ECFE  F017         	call	_print_string	;wreg free
  6518                           
  6519                           ;main.c: 277:     print_string(sequence);
  6520  0030AA  0EBB               	movlw	low _sequence
  6521  0030AC  6E0A               	movwf	print_string@strng^0,c
  6522  0030AE  0E00               	movlw	high _sequence
  6523  0030B0  6E0B               	movwf	(print_string@strng+1)^0,c
  6524  0030B2  ECFE  F017         	call	_print_string	;wreg free
  6525                           
  6526                           ;main.c: 278:     print_string("\nPlease give the new sequence as input\r");
  6527  0030B6  0E23               	movlw	low STR_5
  6528  0030B8  6E0A               	movwf	print_string@strng^0,c
  6529  0030BA  0E7E               	movlw	high STR_5
  6530  0030BC  6E0B               	movwf	(print_string@strng+1)^0,c
  6531  0030BE  ECFE  F017         	call	_print_string	;wreg free
  6532  0030C2                     
  6533                           ;main.c: 279:     int i = 0;
  6534  0030C2  0E00               	movlw	0
  6535  0030C4  6E14               	movwf	(change_sequence@i+1)^0,c
  6536  0030C6  0E00               	movlw	0
  6537  0030C8  6E13               	movwf	change_sequence@i^0,c
  6538  0030CA                     l5285:
  6539  0030CA  FFFF               	dw	65535	; assembler added errata NOP
  6540                           
  6541                           ;main.c: 281:         if(New_char_RX){
  6542  0030CC  5074               	movf	_New_char_RX^0,w,c
  6543  0030CE  B4D8               	btfsc	status,2,c
  6544  0030D0  EF6C  F018         	goto	u5981
  6545  0030D4  EF6F  F018         	goto	u5980
  6546  0030D8                     u5981:
  6547  0030D8  FFFF               	dw	65535	; assembler added errata NOP
  6548  0030DA  EF65  F018         	goto	l5285
  6549  0030DE                     u5980:
  6550  0030DE  FFFF               	dw	65535	; assembler added errata NOP
  6551  0030E0                     l5287:
  6552  0030E0  FFFF               	dw	65535	; assembler added errata NOP
  6553                           
  6554                           ;main.c: 283:                 sequence[i]=input_str[i];
  6555  0030E2  0EB1               	movlw	low _input_str
  6556  0030E4  2413               	addwf	change_sequence@i^0,w,c
  6557  0030E6  6ED9               	movwf	fsr2l,c
  6558  0030E8  0E00               	movlw	high _input_str
  6559  0030EA  2014               	addwfc	(change_sequence@i+1)^0,w,c
  6560  0030EC  6EDA               	movwf	fsr2h,c
  6561  0030EE  0EBB               	movlw	low _sequence
  6562  0030F0  2413               	addwf	change_sequence@i^0,w,c
  6563  0030F2  6EE1               	movwf	fsr1l,c
  6564  0030F4  0E00               	movlw	high _sequence
  6565  0030F6  2014               	addwfc	(change_sequence@i+1)^0,w,c
  6566  0030F8  6EE2               	movwf	fsr1h,c
  6567  0030FA  CFDF FFE7          	movff	indf2,indf1
  6568  0030FE                     
  6569                           ;main.c: 284:             }while(input_str[i++]!='\n');
  6570  0030FE  5013               	movf	change_sequence@i^0,w,c
  6571  003100  6E10               	movwf	??_change_sequence^0,c
  6572  003102  5014               	movf	(change_sequence@i+1)^0,w,c
  6573  003104  6E11               	movwf	(??_change_sequence+1)^0,c
  6574  003106  4A13               	infsnz	change_sequence@i^0,f,c
  6575  003108  2A14               	incf	(change_sequence@i+1)^0,f,c
  6576  00310A  0EB1               	movlw	low _input_str
  6577  00310C  2410               	addwf	??_change_sequence^0,w,c
  6578  00310E  6ED9               	movwf	fsr2l,c
  6579  003110  0E00               	movlw	high _input_str
  6580  003112  2011               	addwfc	(??_change_sequence+1)^0,w,c
  6581  003114  6EDA               	movwf	fsr2h,c
  6582  003116  0E0A               	movlw	10
  6583  003118  18DE               	xorwf	postinc2,w,c
  6584  00311A  A4D8               	btfss	status,2,c
  6585  00311C  EF92  F018         	goto	u5991
  6586  003120  EF95  F018         	goto	u5990
  6587  003124                     u5991:
  6588  003124  FFFF               	dw	65535	; assembler added errata NOP
  6589  003126  EF70  F018         	goto	l5287
  6590  00312A                     u5990:
  6591  00312A  FFFF               	dw	65535	; assembler added errata NOP
  6592  00312C                     
  6593                           ;main.c: 286:             New_char_RX=0;
  6594  00312C  0E00               	movlw	0
  6595  00312E  6E74               	movwf	_New_char_RX^0,c
  6596  003130  0012               	return		;funcret
  6597  003132  FFFF               	dw	65535	; errata NOP
  6598  003134                     __end_of_change_sequence:
  6599                           	callstack 0
  6600                           
  6601 ;; *************** function _add_component *****************
  6602 ;; Defined at:
  6603 ;;		line 295 in file "main.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;		None
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  add_componnt    2   31[COMRAM] unsigned char [2]
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  1    wreg      void 
  6610 ;; Registers used:
  6611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6617 ;;      Params:         0       0       0       0       0       0       0
  6618 ;;      Locals:         2       0       0       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0       0       0
  6620 ;;      Totals:         2       0       0       0       0       0       0
  6621 ;;Total ram usage:        2 bytes
  6622 ;; Hardware stack levels used: 1
  6623 ;; Hardware stack levels required when called: 4
  6624 ;; This function calls:
  6625 ;;		_atoi
  6626 ;;		_print_string
  6627 ;;		_strcat
  6628 ;; This function is called by:
  6629 ;;		_start_up_menu
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text20
  6634  001BEE                     __ptext20:
  6635                           	callstack 0
  6636  001BEE                     _add_component:
  6637                           	callstack 0
  6638  001BEE  FFFF               	dw	65535	; assembler added errata NOP
  6639  001BF0                     
  6640                           ;main.c: 296:     char add_componnt[]=" ";
  6641  001BF0  C0A9  F020         	movff	add_component@F3136,add_component@add_componnt
  6642  001BF4  C0AA  F021         	movff	add_component@F3136+1,add_component@add_componnt+1
  6643  001BF8                     
  6644                           ;main.c: 297:     print_string("\n\nThe Current sequence is:");
  6645  001BF8  0E67               	movlw	low STR_6
  6646  001BFA  6E0A               	movwf	print_string@strng^0,c
  6647  001BFC  0E7F               	movlw	high STR_6
  6648  001BFE  6E0B               	movwf	(print_string@strng+1)^0,c
  6649  001C00  ECFE  F017         	call	_print_string	;wreg free
  6650                           
  6651                           ;main.c: 298:     print_string(sequence);
  6652  001C04  0EBB               	movlw	low _sequence
  6653  001C06  6E0A               	movwf	print_string@strng^0,c
  6654  001C08  0E00               	movlw	high _sequence
  6655  001C0A  6E0B               	movwf	(print_string@strng+1)^0,c
  6656  001C0C  ECFE  F017         	call	_print_string	;wreg free
  6657                           
  6658                           ;main.c: 299:     print_string("\nEnter the component you want to add: A, B, C or D?");
  6659  001C10  0EC2               	movlw	low STR_7
  6660  001C12  6E0A               	movwf	print_string@strng^0,c
  6661  001C14  0E7D               	movlw	high STR_7
  6662  001C16  6E0B               	movwf	(print_string@strng+1)^0,c
  6663  001C18  ECFE  F017         	call	_print_string	;wreg free
  6664  001C1C                     l5297:
  6665  001C1C  FFFF               	dw	65535	; assembler added errata NOP
  6666                           
  6667                           ;main.c: 301:         if(New_char_RX && input_str[0]=='D'){
  6668  001C1E  5074               	movf	_New_char_RX^0,w,c
  6669  001C20  B4D8               	btfsc	status,2,c
  6670  001C22  EF15  F00E         	goto	u6001
  6671  001C26  EF18  F00E         	goto	u6000
  6672  001C2A                     u6001:
  6673  001C2A  FFFF               	dw	65535	; assembler added errata NOP
  6674  001C2C  EFFE  F00E         	goto	l5367
  6675  001C30                     u6000:
  6676  001C30  FFFF               	dw	65535	; assembler added errata NOP
  6677  001C32  0E44               	movlw	68
  6678  001C34  0100               	movlb	0	; () banked
  6679  001C36  19B1               	xorwf	_input_str& (0+255),w,b	;volatile
  6680  001C38  A4D8               	btfss	status,2,c
  6681  001C3A  EF21  F00E         	goto	u6011
  6682  001C3E  EF24  F00E         	goto	u6010
  6683  001C42                     u6011:
  6684  001C42  FFFF               	dw	65535	; assembler added errata NOP
  6685  001C44  EFFE  F00E         	goto	l5367
  6686  001C48                     u6010:
  6687  001C48  FFFF               	dw	65535	; assembler added errata NOP
  6688  001C4A                     
  6689                           ; BSR set to: 0
  6690                           ;main.c: 302:             add_componnt[0]=input_str[0];
  6691  001C4A  C0B1  F020         	movff	_input_str,add_component@add_componnt	;volatile
  6692  001C4E                     
  6693                           ; BSR set to: 0
  6694                           ;main.c: 303:             New_char_RX=0;
  6695  001C4E  0E00               	movlw	0
  6696  001C50  6E74               	movwf	_New_char_RX^0,c
  6697  001C52                     
  6698                           ; BSR set to: 0
  6699                           ;main.c: 304:             print_string("\nEnter the pick position X (1-20): ");
  6700  001C52  0EE2               	movlw	low STR_8
  6701  001C54  6E0A               	movwf	print_string@strng^0,c
  6702  001C56  0E7E               	movlw	high STR_8
  6703  001C58  6E0B               	movwf	(print_string@strng+1)^0,c
  6704  001C5A  ECFE  F017         	call	_print_string	;wreg free
  6705  001C5E                     l5307:
  6706  001C5E  FFFF               	dw	65535	; assembler added errata NOP
  6707                           
  6708                           ;main.c: 306:                 if(New_char_RX){
  6709  001C60  5074               	movf	_New_char_RX^0,w,c
  6710  001C62  B4D8               	btfsc	status,2,c
  6711  001C64  EF36  F00E         	goto	u6021
  6712  001C68  EF39  F00E         	goto	u6020
  6713  001C6C                     u6021:
  6714  001C6C  FFFF               	dw	65535	; assembler added errata NOP
  6715  001C6E  EF2F  F00E         	goto	l5307
  6716  001C72                     u6020:
  6717  001C72  FFFF               	dw	65535	; assembler added errata NOP
  6718  001C74                     
  6719                           ;main.c: 307:                     X_Pick_D=atoi(input_str);
  6720  001C74  0EB1               	movlw	low _input_str
  6721  001C76  6E11               	movwf	atoi@s^0,c
  6722  001C78  0E00               	movlw	high _input_str
  6723  001C7A  6E12               	movwf	(atoi@s+1)^0,c
  6724  001C7C  EC24  F010         	call	_atoi	;wreg free
  6725  001C80  C011  F0CF         	movff	?_atoi,_X_Pick_D
  6726  001C84  C012  F0D0         	movff	?_atoi+1,_X_Pick_D+1
  6727  001C88                     
  6728                           ;main.c: 308:                     print_string(input_str);
  6729  001C88  0EB1               	movlw	low _input_str
  6730  001C8A  6E0A               	movwf	print_string@strng^0,c
  6731  001C8C  0E00               	movlw	high _input_str
  6732  001C8E  6E0B               	movwf	(print_string@strng+1)^0,c
  6733  001C90  ECFE  F017         	call	_print_string	;wreg free
  6734  001C94                     
  6735                           ;main.c: 309:                     New_char_RX=0;
  6736  001C94  0E00               	movlw	0
  6737  001C96  6E74               	movwf	_New_char_RX^0,c
  6738  001C98                     
  6739                           ;main.c: 313:             print_string("\nEnter the pick position Y (1-20): ");
  6740  001C98  0E06               	movlw	low STR_9
  6741  001C9A  6E0A               	movwf	print_string@strng^0,c
  6742  001C9C  0E7F               	movlw	high STR_9
  6743  001C9E  6E0B               	movwf	(print_string@strng+1)^0,c
  6744  001CA0  ECFE  F017         	call	_print_string	;wreg free
  6745  001CA4                     l5317:
  6746  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  6747                           
  6748                           ;main.c: 315:                 if(New_char_RX){
  6749  001CA6  5074               	movf	_New_char_RX^0,w,c
  6750  001CA8  B4D8               	btfsc	status,2,c
  6751  001CAA  EF59  F00E         	goto	u6031
  6752  001CAE  EF5C  F00E         	goto	u6030
  6753  001CB2                     u6031:
  6754  001CB2  FFFF               	dw	65535	; assembler added errata NOP
  6755  001CB4  EF52  F00E         	goto	l5317
  6756  001CB8                     u6030:
  6757  001CB8  FFFF               	dw	65535	; assembler added errata NOP
  6758  001CBA                     
  6759                           ;main.c: 316:                     Y_Pick_D=(atoi(input_str));
  6760  001CBA  0EB1               	movlw	low _input_str
  6761  001CBC  6E11               	movwf	atoi@s^0,c
  6762  001CBE  0E00               	movlw	high _input_str
  6763  001CC0  6E12               	movwf	(atoi@s+1)^0,c
  6764  001CC2  EC24  F010         	call	_atoi	;wreg free
  6765  001CC6  C011  F0CD         	movff	?_atoi,_Y_Pick_D
  6766  001CCA  C012  F0CE         	movff	?_atoi+1,_Y_Pick_D+1
  6767  001CCE                     
  6768                           ;main.c: 317:                     print_string(input_str);
  6769  001CCE  0EB1               	movlw	low _input_str
  6770  001CD0  6E0A               	movwf	print_string@strng^0,c
  6771  001CD2  0E00               	movlw	high _input_str
  6772  001CD4  6E0B               	movwf	(print_string@strng+1)^0,c
  6773  001CD6  ECFE  F017         	call	_print_string	;wreg free
  6774  001CDA                     
  6775                           ;main.c: 318:                     New_char_RX=0;
  6776  001CDA  0E00               	movlw	0
  6777  001CDC  6E74               	movwf	_New_char_RX^0,c
  6778  001CDE                     
  6779                           ;main.c: 322:             print_string("\nEnter the pick orientation (0-360): ");
  6780  001CDE  0E72               	movlw	low STR_10
  6781  001CE0  6E0A               	movwf	print_string@strng^0,c
  6782  001CE2  0E7E               	movlw	high STR_10
  6783  001CE4  6E0B               	movwf	(print_string@strng+1)^0,c
  6784  001CE6  ECFE  F017         	call	_print_string	;wreg free
  6785  001CEA                     l5327:
  6786  001CEA  FFFF               	dw	65535	; assembler added errata NOP
  6787                           
  6788                           ;main.c: 324:                 if(New_char_RX){
  6789  001CEC  5074               	movf	_New_char_RX^0,w,c
  6790  001CEE  B4D8               	btfsc	status,2,c
  6791  001CF0  EF7C  F00E         	goto	u6041
  6792  001CF4  EF7F  F00E         	goto	u6040
  6793  001CF8                     u6041:
  6794  001CF8  FFFF               	dw	65535	; assembler added errata NOP
  6795  001CFA  EF75  F00E         	goto	l5327
  6796  001CFE                     u6040:
  6797  001CFE  FFFF               	dw	65535	; assembler added errata NOP
  6798  001D00                     
  6799                           ;main.c: 325:                     Pick_Angle_D=(atoi(input_str));
  6800  001D00  0EB1               	movlw	low _input_str
  6801  001D02  6E11               	movwf	atoi@s^0,c
  6802  001D04  0E00               	movlw	high _input_str
  6803  001D06  6E12               	movwf	(atoi@s+1)^0,c
  6804  001D08  EC24  F010         	call	_atoi	;wreg free
  6805  001D0C  C011  F0CB         	movff	?_atoi,_Pick_Angle_D
  6806  001D10  C012  F0CC         	movff	?_atoi+1,_Pick_Angle_D+1
  6807  001D14                     
  6808                           ;main.c: 326:                     print_string(input_str);
  6809  001D14  0EB1               	movlw	low _input_str
  6810  001D16  6E0A               	movwf	print_string@strng^0,c
  6811  001D18  0E00               	movlw	high _input_str
  6812  001D1A  6E0B               	movwf	(print_string@strng+1)^0,c
  6813  001D1C  ECFE  F017         	call	_print_string	;wreg free
  6814  001D20                     
  6815                           ;main.c: 327:                     New_char_RX=0;
  6816  001D20  0E00               	movlw	0
  6817  001D22  6E74               	movwf	_New_char_RX^0,c
  6818  001D24                     
  6819                           ;main.c: 331:             print_string("\nEnter the place position X (1-20): ");
  6820  001D24  0E98               	movlw	low STR_11
  6821  001D26  6E0A               	movwf	print_string@strng^0,c
  6822  001D28  0E7E               	movlw	high STR_11
  6823  001D2A  6E0B               	movwf	(print_string@strng+1)^0,c
  6824  001D2C  ECFE  F017         	call	_print_string	;wreg free
  6825  001D30                     l5337:
  6826  001D30  FFFF               	dw	65535	; assembler added errata NOP
  6827                           
  6828                           ;main.c: 333:                 if(New_char_RX){
  6829  001D32  5074               	movf	_New_char_RX^0,w,c
  6830  001D34  B4D8               	btfsc	status,2,c
  6831  001D36  EF9F  F00E         	goto	u6051
  6832  001D3A  EFA2  F00E         	goto	u6050
  6833  001D3E                     u6051:
  6834  001D3E  FFFF               	dw	65535	; assembler added errata NOP
  6835  001D40  EF98  F00E         	goto	l5337
  6836  001D44                     u6050:
  6837  001D44  FFFF               	dw	65535	; assembler added errata NOP
  6838  001D46                     
  6839                           ;main.c: 334:                     X_Place_D=(atoi(input_str));
  6840  001D46  0EB1               	movlw	low _input_str
  6841  001D48  6E11               	movwf	atoi@s^0,c
  6842  001D4A  0E00               	movlw	high _input_str
  6843  001D4C  6E12               	movwf	(atoi@s+1)^0,c
  6844  001D4E  EC24  F010         	call	_atoi	;wreg free
  6845  001D52  C011  F0C9         	movff	?_atoi,_X_Place_D
  6846  001D56  C012  F0CA         	movff	?_atoi+1,_X_Place_D+1
  6847  001D5A                     
  6848                           ;main.c: 335:                     print_string(input_str);
  6849  001D5A  0EB1               	movlw	low _input_str
  6850  001D5C  6E0A               	movwf	print_string@strng^0,c
  6851  001D5E  0E00               	movlw	high _input_str
  6852  001D60  6E0B               	movwf	(print_string@strng+1)^0,c
  6853  001D62  ECFE  F017         	call	_print_string	;wreg free
  6854  001D66                     
  6855                           ;main.c: 336:                     New_char_RX=0;
  6856  001D66  0E00               	movlw	0
  6857  001D68  6E74               	movwf	_New_char_RX^0,c
  6858  001D6A                     
  6859                           ;main.c: 340:             print_string("\nEnter the place position Y (1-20): ");
  6860  001D6A  0EBD               	movlw	low STR_12
  6861  001D6C  6E0A               	movwf	print_string@strng^0,c
  6862  001D6E  0E7E               	movlw	high STR_12
  6863  001D70  6E0B               	movwf	(print_string@strng+1)^0,c
  6864  001D72  ECFE  F017         	call	_print_string	;wreg free
  6865  001D76                     l5347:
  6866  001D76  FFFF               	dw	65535	; assembler added errata NOP
  6867                           
  6868                           ;main.c: 342:                 if(New_char_RX){
  6869  001D78  5074               	movf	_New_char_RX^0,w,c
  6870  001D7A  B4D8               	btfsc	status,2,c
  6871  001D7C  EFC2  F00E         	goto	u6061
  6872  001D80  EFC5  F00E         	goto	u6060
  6873  001D84                     u6061:
  6874  001D84  FFFF               	dw	65535	; assembler added errata NOP
  6875  001D86  EFBB  F00E         	goto	l5347
  6876  001D8A                     u6060:
  6877  001D8A  FFFF               	dw	65535	; assembler added errata NOP
  6878  001D8C                     
  6879                           ;main.c: 343:                     Y_Place_D=(atoi(input_str));
  6880  001D8C  0EB1               	movlw	low _input_str
  6881  001D8E  6E11               	movwf	atoi@s^0,c
  6882  001D90  0E00               	movlw	high _input_str
  6883  001D92  6E12               	movwf	(atoi@s+1)^0,c
  6884  001D94  EC24  F010         	call	_atoi	;wreg free
  6885  001D98  C011  F0C7         	movff	?_atoi,_Y_Place_D
  6886  001D9C  C012  F0C8         	movff	?_atoi+1,_Y_Place_D+1
  6887  001DA0                     
  6888                           ;main.c: 344:                     print_string(input_str);
  6889  001DA0  0EB1               	movlw	low _input_str
  6890  001DA2  6E0A               	movwf	print_string@strng^0,c
  6891  001DA4  0E00               	movlw	high _input_str
  6892  001DA6  6E0B               	movwf	(print_string@strng+1)^0,c
  6893  001DA8  ECFE  F017         	call	_print_string	;wreg free
  6894  001DAC                     
  6895                           ;main.c: 345:                     New_char_RX=0;
  6896  001DAC  0E00               	movlw	0
  6897  001DAE  6E74               	movwf	_New_char_RX^0,c
  6898  001DB0                     
  6899                           ;main.c: 349:             print_string("\nEnter the place orientation (0-360): ");
  6900  001DB0  0E4B               	movlw	low STR_13
  6901  001DB2  6E0A               	movwf	print_string@strng^0,c
  6902  001DB4  0E7E               	movlw	high STR_13
  6903  001DB6  6E0B               	movwf	(print_string@strng+1)^0,c
  6904  001DB8  ECFE  F017         	call	_print_string	;wreg free
  6905  001DBC                     l5357:
  6906  001DBC  FFFF               	dw	65535	; assembler added errata NOP
  6907                           
  6908                           ;main.c: 351:                     if(New_char_RX){
  6909  001DBE  5074               	movf	_New_char_RX^0,w,c
  6910  001DC0  B4D8               	btfsc	status,2,c
  6911  001DC2  EFE5  F00E         	goto	u6071
  6912  001DC6  EFE8  F00E         	goto	u6070
  6913  001DCA                     u6071:
  6914  001DCA  FFFF               	dw	65535	; assembler added errata NOP
  6915  001DCC  EFDE  F00E         	goto	l5357
  6916  001DD0                     u6070:
  6917  001DD0  FFFF               	dw	65535	; assembler added errata NOP
  6918  001DD2                     
  6919                           ;main.c: 352:                     Place_Angle_D=(atoi(input_str));
  6920  001DD2  0EB1               	movlw	low _input_str
  6921  001DD4  6E11               	movwf	atoi@s^0,c
  6922  001DD6  0E00               	movlw	high _input_str
  6923  001DD8  6E12               	movwf	(atoi@s+1)^0,c
  6924  001DDA  EC24  F010         	call	_atoi	;wreg free
  6925  001DDE  C011  F0C5         	movff	?_atoi,_Place_Angle_D
  6926  001DE2  C012  F0C6         	movff	?_atoi+1,_Place_Angle_D+1
  6927  001DE6                     
  6928                           ;main.c: 353:                     print_string(input_str);
  6929  001DE6  0EB1               	movlw	low _input_str
  6930  001DE8  6E0A               	movwf	print_string@strng^0,c
  6931  001DEA  0E00               	movlw	high _input_str
  6932  001DEC  6E0B               	movwf	(print_string@strng+1)^0,c
  6933  001DEE  ECFE  F017         	call	_print_string	;wreg free
  6934  001DF2                     l5363:
  6935  001DF2  FFFF               	dw	65535	; assembler added errata NOP
  6936                           
  6937                           ;main.c: 354:                     New_char_RX=0;
  6938  001DF4  0E00               	movlw	0
  6939  001DF6  6E74               	movwf	_New_char_RX^0,c
  6940                           
  6941                           ;main.c: 355:                     break;
  6942  001DF8  EF0D  F00F         	goto	l5373
  6943  001DFC                     l5367:
  6944  001DFC  FFFF               	dw	65535	; assembler added errata NOP
  6945  001DFE  5074               	movf	_New_char_RX^0,w,c
  6946  001E00  B4D8               	btfsc	status,2,c
  6947  001E02  EF05  F00F         	goto	u6081
  6948  001E06  EF08  F00F         	goto	u6080
  6949  001E0A                     u6081:
  6950  001E0A  FFFF               	dw	65535	; assembler added errata NOP
  6951  001E0C  EF0E  F00E         	goto	l5297
  6952  001E10                     u6080:
  6953  001E10  FFFF               	dw	65535	; assembler added errata NOP
  6954  001E12                     
  6955                           ;main.c: 361:             add_componnt[0]=input_str[0];
  6956  001E12  C0B1  F020         	movff	_input_str,add_component@add_componnt	;volatile
  6957  001E16  EFF9  F00E         	goto	l5363
  6958  001E1A                     l5373:
  6959  001E1A  FFFF               	dw	65535	; assembler added errata NOP
  6960                           
  6961                           ;main.c: 367:     strcat(sequence,add_componnt);
  6962  001E1C  0EBB               	movlw	low _sequence
  6963  001E1E  6E16               	movwf	strcat@dest^0,c
  6964  001E20  0E00               	movlw	high _sequence
  6965  001E22  6E17               	movwf	(strcat@dest+1)^0,c
  6966  001E24  0E20               	movlw	low add_component@add_componnt
  6967  001E26  6E18               	movwf	strcat@src^0,c
  6968  001E28  0E00               	movlw	high add_component@add_componnt
  6969  001E2A  6E19               	movwf	(strcat@src+1)^0,c
  6970  001E2C  EC9E  F01A         	call	_strcat	;wreg free
  6971  001E30                     
  6972                           ;main.c: 368:     print_string("\n\nComponent Added: ");
  6973  001E30  0EC1               	movlw	low STR_14
  6974  001E32  6E0A               	movwf	print_string@strng^0,c
  6975  001E34  0E7F               	movlw	high STR_14
  6976  001E36  6E0B               	movwf	(print_string@strng+1)^0,c
  6977  001E38  ECFE  F017         	call	_print_string	;wreg free
  6978  001E3C                     
  6979                           ;main.c: 369:     print_string(add_componnt);
  6980  001E3C  0E20               	movlw	low add_component@add_componnt
  6981  001E3E  6E0A               	movwf	print_string@strng^0,c
  6982  001E40  0E00               	movlw	high add_component@add_componnt
  6983  001E42  6E0B               	movwf	(print_string@strng+1)^0,c
  6984  001E44  ECFE  F017         	call	_print_string	;wreg free
  6985  001E48                     
  6986                           ;main.c: 370:     New_char_RX=0;
  6987  001E48  0E00               	movlw	0
  6988  001E4A  6E74               	movwf	_New_char_RX^0,c
  6989  001E4C  0012               	return		;funcret
  6990  001E4E  FFFF               	dw	65535	; errata NOP
  6991  001E50                     __end_of_add_component:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function _strcat *****************
  6995 ;; Defined at:
  6996 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strcat.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  dest            2   21[COMRAM] PTR unsigned char 
  6999 ;;		 -> sequence(4), 
  7000 ;;  src             2   23[COMRAM] PTR const unsigned char 
  7001 ;;		 -> add_component@add_componnt(2), 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  2   21[COMRAM] PTR unsigned char 
  7006 ;; Registers used:
  7007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7013 ;;      Params:         4       0       0       0       0       0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0
  7016 ;;      Totals:         4       0       0       0       0       0       0
  7017 ;;Total ram usage:        4 bytes
  7018 ;; Hardware stack levels used: 1
  7019 ;; Hardware stack levels required when called: 3
  7020 ;; This function calls:
  7021 ;;		_strcpy
  7022 ;;		_strlen
  7023 ;; This function is called by:
  7024 ;;		_add_component
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text21
  7029  00353C                     __ptext21:
  7030                           	callstack 0
  7031  00353C                     _strcat:
  7032                           	callstack 0
  7033  00353C  FFFF               	dw	65535	; assembler added errata NOP
  7034  00353E  C016  F00A         	movff	strcat@dest,strlen@s
  7035  003542  C017  F00B         	movff	strcat@dest+1,strlen@s+1
  7036  003546  ECE8  F019         	call	_strlen	;wreg free
  7037  00354A  500A               	movf	?_strlen^0,w,c
  7038  00354C  2416               	addwf	strcat@dest^0,w,c
  7039  00354E  6E0E               	movwf	strcpy@dest^0,c
  7040  003550  500B               	movf	(?_strlen+1)^0,w,c
  7041  003552  2017               	addwfc	(strcat@dest+1)^0,w,c
  7042  003554  6E0F               	movwf	(strcpy@dest+1)^0,c
  7043  003556  C018  F010         	movff	strcat@src,strcpy@src
  7044  00355A  C019  F011         	movff	strcat@src+1,strcpy@src+1
  7045  00355E  ECC4  F019         	call	_strcpy	;wreg free
  7046  003562  0012               	return		;funcret
  7047  003564  FFFF               	dw	65535	; errata NOP
  7048  003566                     __end_of_strcat:
  7049                           	callstack 0
  7050                           
  7051 ;; *************** function _strlen *****************
  7052 ;; Defined at:
  7053 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7056 ;;		 -> sequence(4), 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  a               2   11[COMRAM] PTR const unsigned char 
  7059 ;;		 -> sequence(4), 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  2    9[COMRAM] unsigned int 
  7062 ;; Registers used:
  7063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7069 ;;      Params:         2       0       0       0       0       0       0
  7070 ;;      Locals:         2       0       0       0       0       0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0
  7072 ;;      Totals:         4       0       0       0       0       0       0
  7073 ;;Total ram usage:        4 bytes
  7074 ;; Hardware stack levels used: 1
  7075 ;; Hardware stack levels required when called: 2
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		_start_up_menu
  7080 ;;		_remove_component
  7081 ;;		_strcat
  7082 ;;		_strrchr
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text22
  7087  0033D0                     __ptext22:
  7088                           	callstack 0
  7089  0033D0                     _strlen:
  7090                           	callstack 0
  7091  0033D0  FFFF               	dw	65535	; assembler added errata NOP
  7092  0033D2  C00A  F00C         	movff	strlen@s,strlen@a
  7093  0033D6  C00B  F00D         	movff	strlen@s+1,strlen@a+1
  7094  0033DA  EFF2  F019         	goto	l2885
  7095  0033DE                     l2883:
  7096  0033DE  FFFF               	dw	65535	; assembler added errata NOP
  7097  0033E0  4A0A               	infsnz	strlen@s^0,f,c
  7098  0033E2  2A0B               	incf	(strlen@s+1)^0,f,c
  7099  0033E4                     l2885:
  7100  0033E4  FFFF               	dw	65535	; assembler added errata NOP
  7101  0033E6  C00A  FFD9         	movff	strlen@s,fsr2l
  7102  0033EA  C00B  FFDA         	movff	strlen@s+1,fsr2h
  7103  0033EE  50DF               	movf	indf2,w,c
  7104  0033F0  A4D8               	btfss	status,2,c
  7105  0033F2  EFFD  F019         	goto	u2421
  7106  0033F6  EF00  F01A         	goto	u2420
  7107  0033FA                     u2421:
  7108  0033FA  FFFF               	dw	65535	; assembler added errata NOP
  7109  0033FC  EFEF  F019         	goto	l2883
  7110  003400                     u2420:
  7111  003400  FFFF               	dw	65535	; assembler added errata NOP
  7112  003402  500C               	movf	strlen@a^0,w,c
  7113  003404  5C0A               	subwf	strlen@s^0,w,c
  7114  003406  6E0A               	movwf	?_strlen^0,c
  7115  003408  500D               	movf	(strlen@a+1)^0,w,c
  7116  00340A  580B               	subwfb	(strlen@s+1)^0,w,c
  7117  00340C  6E0B               	movwf	(?_strlen+1)^0,c
  7118  00340E  0012               	return		;funcret
  7119  003410  FFFF               	dw	65535	; errata NOP
  7120  003412                     __end_of_strlen:
  7121                           	callstack 0
  7122                           
  7123 ;; *************** function _strcpy *****************
  7124 ;; Defined at:
  7125 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strcpy.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  dest            2   13[COMRAM] PTR unsigned char 
  7128 ;;		 -> sequence(4), 
  7129 ;;  src             2   15[COMRAM] PTR const unsigned char 
  7130 ;;		 -> add_component@add_componnt(2), 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;  d               2   19[COMRAM] PTR unsigned char 
  7133 ;;		 -> sequence(4), 
  7134 ;;  s               2   17[COMRAM] PTR const unsigned char 
  7135 ;;		 -> add_component@add_componnt(2), 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  2   13[COMRAM] PTR unsigned char 
  7138 ;; Registers used:
  7139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7145 ;;      Params:         4       0       0       0       0       0       0
  7146 ;;      Locals:         4       0       0       0       0       0       0
  7147 ;;      Temps:          0       0       0       0       0       0       0
  7148 ;;      Totals:         8       0       0       0       0       0       0
  7149 ;;Total ram usage:        8 bytes
  7150 ;; Hardware stack levels used: 1
  7151 ;; Hardware stack levels required when called: 2
  7152 ;; This function calls:
  7153 ;;		Nothing
  7154 ;; This function is called by:
  7155 ;;		_strcat
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text23
  7160  003388                     __ptext23:
  7161                           	callstack 0
  7162  003388                     _strcpy:
  7163                           	callstack 0
  7164  003388  FFFF               	dw	65535	; assembler added errata NOP
  7165  00338A  C010  F012         	movff	strcpy@src,strcpy@s
  7166  00338E  C011  F013         	movff	strcpy@src+1,strcpy@s+1
  7167  003392  C00E  F014         	movff	strcpy@dest,strcpy@d
  7168  003396  C00F  F015         	movff	strcpy@dest+1,strcpy@d+1
  7169  00339A                     l3133:
  7170  00339A  FFFF               	dw	65535	; assembler added errata NOP
  7171  00339C  C012  FFD9         	movff	strcpy@s,fsr2l
  7172  0033A0  C013  FFDA         	movff	strcpy@s+1,fsr2h
  7173  0033A4  4A12               	infsnz	strcpy@s^0,f,c
  7174  0033A6  2A13               	incf	(strcpy@s+1)^0,f,c
  7175  0033A8  C014  FFE1         	movff	strcpy@d,fsr1l
  7176  0033AC  C015  FFE2         	movff	strcpy@d+1,fsr1h
  7177  0033B0  4A14               	infsnz	strcpy@d^0,f,c
  7178  0033B2  2A15               	incf	(strcpy@d+1)^0,f,c
  7179  0033B4  CFDF FFE7          	movff	indf2,indf1
  7180  0033B8  50E7               	movf	indf1,w,c
  7181  0033BA  A4D8               	btfss	status,2,c
  7182  0033BC  EFE2  F019         	goto	u2881
  7183  0033C0  EFE5  F019         	goto	u2880
  7184  0033C4                     u2881:
  7185  0033C4  FFFF               	dw	65535	; assembler added errata NOP
  7186  0033C6  EFCD  F019         	goto	l3133
  7187  0033CA                     u2880:
  7188  0033CA  FFFF               	dw	65535	; assembler added errata NOP
  7189  0033CC  0012               	return		;funcret
  7190  0033CE  FFFF               	dw	65535	; errata NOP
  7191  0033D0                     __end_of_strcpy:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function _print_string *****************
  7195 ;; Defined at:
  7196 ;;		line 44 in file "serial.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  strng           2    9[COMRAM] PTR unsigned char 
  7199 ;;		 -> STR_22(21), STR_21(21), STR_20(45), STR_19(10), 
  7200 ;;		 -> STR_18(12), STR_17(70), STR_16(19), STR_15(63), 
  7201 ;;		 -> STR_14(20), STR_13(39), STR_12(37), STR_11(37), 
  7202 ;;		 -> STR_10(38), STR_9(36), STR_8(36), STR_7(52), 
  7203 ;;		 -> STR_6(27), add_component@add_componnt(2), STR_5(40), STR_4(27), 
  7204 ;;		 -> STR_3(34), sequence(4), STR_2(21), input_str(10), 
  7205 ;;		 -> STR_1(112), 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  i               2   13[COMRAM] int 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7217 ;;      Params:         2       0       0       0       0       0       0
  7218 ;;      Locals:         2       0       0       0       0       0       0
  7219 ;;      Temps:          2       0       0       0       0       0       0
  7220 ;;      Totals:         6       0       0       0       0       0       0
  7221 ;;Total ram usage:        6 bytes
  7222 ;; Hardware stack levels used: 1
  7223 ;; Hardware stack levels required when called: 2
  7224 ;; This function calls:
  7225 ;;		Nothing
  7226 ;; This function is called by:
  7227 ;;		_start_up_menu
  7228 ;;		_change_sequence
  7229 ;;		_add_component
  7230 ;;		_remove_component
  7231 ;;		_check_component
  7232 ;;		_pick_and_place
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text24
  7237  002FFC                     __ptext24:
  7238                           	callstack 0
  7239  002FFC                     _print_string:
  7240                           	callstack 0
  7241  002FFC  FFFF               	dw	65535	; assembler added errata NOP
  7242  002FFE                     
  7243                           ;serial.c: 44: void print_string(char strng[]);serial.c: 45: {;serial.c: 46:     for(int
      +                           i=0; strng[i]!=((void*)0);i++){
  7244  002FFE  0E00               	movlw	0
  7245  003000  6E0F               	movwf	(print_string@i+1)^0,c
  7246  003002  0E00               	movlw	0
  7247  003004  6E0E               	movwf	print_string@i^0,c
  7248  003006  EF2A  F018         	goto	l4471
  7249  00300A                     l4467:
  7250  00300A  FFFF               	dw	65535	; assembler added errata NOP
  7251                           
  7252                           ;serial.c: 47:         TXREG=strng[i];
  7253  00300C  500E               	movf	print_string@i^0,w,c
  7254  00300E  240A               	addwf	print_string@strng^0,w,c
  7255  003010  6E0C               	movwf	??_print_string^0,c
  7256  003012  500F               	movf	(print_string@i+1)^0,w,c
  7257  003014  200B               	addwfc	(print_string@strng+1)^0,w,c
  7258  003016  6E0D               	movwf	(??_print_string+1)^0,c
  7259  003018  C00C  FFF6         	movff	??_print_string,tblptrl
  7260  00301C  C00D  FFF7         	movff	??_print_string+1,tblptrh
  7261  003020  6AF8               	clrf	tblptru,c
  7262  003022  0E05               	movlw	(high __ramtop+-1)
  7263  003024  64F7               	cpfsgt	tblptrh,c
  7264  003026  D004               	bra	u4737
  7265  003028  0008               	tblrd		*
  7266  00302A  FFFF               	dw	65535	; errata NOP
  7267  00302C  50F5               	movf	tablat,w,c
  7268  00302E  D005               	bra	u4730
  7269  003030                     u4737:
  7270  003030  CFF6 FFE9          	movff	tblptrl,fsr0l
  7271  003034  CFF7 FFEA          	movff	tblptrh,fsr0h
  7272  003038  50EF               	movf	indf0,w,c
  7273  00303A                     u4730:
  7274  00303A  6EAD               	movwf	173,c	;volatile
  7275  00303C                     l77:
  7276  00303C  FFFF               	dw	65535	; assembler added errata NOP
  7277  00303E  A2AC               	btfss	172,1,c	;volatile
  7278  003040  EF24  F018         	goto	u4741
  7279  003044  EF27  F018         	goto	u4740
  7280  003048                     u4741:
  7281  003048  FFFF               	dw	65535	; assembler added errata NOP
  7282  00304A  EF1E  F018         	goto	l77
  7283  00304E                     u4740:
  7284  00304E  FFFF               	dw	65535	; assembler added errata NOP
  7285  003050                     
  7286                           ;serial.c: 49:     }
  7287  003050  4A0E               	infsnz	print_string@i^0,f,c
  7288  003052  2A0F               	incf	(print_string@i+1)^0,f,c
  7289  003054                     l4471:
  7290  003054  FFFF               	dw	65535	; assembler added errata NOP
  7291  003056  500E               	movf	print_string@i^0,w,c
  7292  003058  240A               	addwf	print_string@strng^0,w,c
  7293  00305A  6E0C               	movwf	??_print_string^0,c
  7294  00305C  500F               	movf	(print_string@i+1)^0,w,c
  7295  00305E  200B               	addwfc	(print_string@strng+1)^0,w,c
  7296  003060  6E0D               	movwf	(??_print_string+1)^0,c
  7297  003062  C00C  FFF6         	movff	??_print_string,tblptrl
  7298  003066  C00D  FFF7         	movff	??_print_string+1,tblptrh
  7299  00306A  6AF8               	clrf	tblptru,c
  7300  00306C  0E05               	movlw	(high __ramtop+-1)
  7301  00306E  64F7               	cpfsgt	tblptrh,c
  7302  003070  D004               	bra	u4757
  7303  003072  0008               	tblrd		*
  7304  003074  FFFF               	dw	65535	; errata NOP
  7305  003076  50F5               	movf	tablat,w,c
  7306  003078  D005               	bra	u4750
  7307  00307A                     u4757:
  7308  00307A  CFF6 FFE9          	movff	tblptrl,fsr0l
  7309  00307E  CFF7 FFEA          	movff	tblptrh,fsr0h
  7310  003082  50EF               	movf	indf0,w,c
  7311  003084                     u4750:
  7312  003084  0900               	iorlw	0
  7313  003086  A4D8               	btfss	status,2,c
  7314  003088  EF48  F018         	goto	u4761
  7315  00308C  EF4B  F018         	goto	u4760
  7316  003090                     u4761:
  7317  003090  FFFF               	dw	65535	; assembler added errata NOP
  7318  003092  EF05  F018         	goto	l4467
  7319  003096                     u4760:
  7320  003096  FFFF               	dw	65535	; assembler added errata NOP
  7321  003098  0012               	return		;funcret
  7322  00309A  FFFF               	dw	65535	; errata NOP
  7323  00309C                     __end_of_print_string:
  7324                           	callstack 0
  7325                           
  7326 ;; *************** function _atoi *****************
  7327 ;; Defined at:
  7328 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  s               2   16[COMRAM] PTR const unsigned char 
  7331 ;;		 -> input_str(10), 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  n               2   29[COMRAM] int 
  7334 ;;  neg             2   22[COMRAM] int 
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  2   16[COMRAM] int 
  7337 ;; Registers used:
  7338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7344 ;;      Params:         2       0       0       0       0       0       0
  7345 ;;      Locals:         9       0       0       0       0       0       0
  7346 ;;      Temps:          4       0       0       0       0       0       0
  7347 ;;      Totals:        15       0       0       0       0       0       0
  7348 ;;Total ram usage:       15 bytes
  7349 ;; Hardware stack levels used: 1
  7350 ;; Hardware stack levels required when called: 3
  7351 ;; This function calls:
  7352 ;;		___wmul
  7353 ;;		_isdigit
  7354 ;;		_isspace
  7355 ;; This function is called by:
  7356 ;;		_add_component
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text25
  7361  002048                     __ptext25:
  7362                           	callstack 0
  7363  002048                     _atoi:
  7364                           	callstack 0
  7365  002048  FFFF               	dw	65535	; assembler added errata NOP
  7366  00204A  0E00               	movlw	0
  7367  00204C  6E1F               	movwf	(atoi@n+1)^0,c
  7368  00204E  0E00               	movlw	0
  7369  002050  6E1E               	movwf	atoi@n^0,c
  7370  002052  0E00               	movlw	0
  7371  002054  6E18               	movwf	(atoi@neg+1)^0,c
  7372  002056  0E00               	movlw	0
  7373  002058  6E17               	movwf	atoi@neg^0,c
  7374  00205A  EF32  F010         	goto	l4501
  7375  00205E                     l4499:
  7376  00205E  FFFF               	dw	65535	; assembler added errata NOP
  7377  002060  4A11               	infsnz	atoi@s^0,f,c
  7378  002062  2A12               	incf	(atoi@s+1)^0,f,c
  7379  002064                     l4501:
  7380  002064  FFFF               	dw	65535	; assembler added errata NOP
  7381  002066  0E01               	movlw	1
  7382  002068  6E1D               	movwf	_atoi$1393^0,c
  7383  00206A  C011  FFD9         	movff	atoi@s,fsr2l
  7384  00206E  C012  FFDA         	movff	atoi@s+1,fsr2h
  7385  002072  0E20               	movlw	32
  7386  002074  18DE               	xorwf	postinc2,w,c
  7387  002076  B4D8               	btfsc	status,2,c
  7388  002078  EF40  F010         	goto	u4801
  7389  00207C  EF43  F010         	goto	u4800
  7390  002080                     u4801:
  7391  002080  FFFF               	dw	65535	; assembler added errata NOP
  7392  002082  EF62  F010         	goto	l4509
  7393  002086                     u4800:
  7394  002086  FFFF               	dw	65535	; assembler added errata NOP
  7395  002088  0EF7               	movlw	247
  7396  00208A  6E13               	movwf	??_atoi^0,c
  7397  00208C  0EFF               	movlw	255
  7398  00208E  6E14               	movwf	(??_atoi+1)^0,c
  7399  002090  C011  FFD9         	movff	atoi@s,fsr2l
  7400  002094  C012  FFDA         	movff	atoi@s+1,fsr2h
  7401  002098  50DF               	movf	indf2,w,c
  7402  00209A  6E15               	movwf	(??_atoi+2)^0,c
  7403  00209C  6A16               	clrf	(??_atoi+3)^0,c
  7404  00209E  5013               	movf	??_atoi^0,w,c
  7405  0020A0  2615               	addwf	(??_atoi+2)^0,f,c
  7406  0020A2  5014               	movf	(??_atoi+1)^0,w,c
  7407  0020A4  2216               	addwfc	(??_atoi+3)^0,f,c
  7408  0020A6  5016               	movf	(??_atoi+3)^0,w,c
  7409  0020A8  E10A               	bnz	u4810
  7410  0020AA  0E05               	movlw	5
  7411  0020AC  5C15               	subwf	(??_atoi+2)^0,w,c
  7412  0020AE  A0D8               	btfss	status,0,c
  7413  0020B0  EF5C  F010         	goto	u4811
  7414  0020B4  EF5F  F010         	goto	u4810
  7415  0020B8                     u4811:
  7416  0020B8  FFFF               	dw	65535	; assembler added errata NOP
  7417  0020BA  EF62  F010         	goto	l4509
  7418  0020BE                     u4810:
  7419  0020BE  FFFF               	dw	65535	; assembler added errata NOP
  7420  0020C0  0E00               	movlw	0
  7421  0020C2  6E1D               	movwf	_atoi$1393^0,c
  7422  0020C4                     l4509:
  7423  0020C4  FFFF               	dw	65535	; assembler added errata NOP
  7424  0020C6  C01D  F019         	movff	_atoi$1393,_atoi$1392
  7425  0020CA  6A1A               	clrf	(_atoi$1392+1)^0,c
  7426  0020CC  5019               	movf	_atoi$1392^0,w,c
  7427  0020CE  101A               	iorwf	(_atoi$1392+1)^0,w,c
  7428  0020D0  A4D8               	btfss	status,2,c
  7429  0020D2  EF6D  F010         	goto	u4821
  7430  0020D6  EF70  F010         	goto	u4820
  7431  0020DA                     u4821:
  7432  0020DA  FFFF               	dw	65535	; assembler added errata NOP
  7433  0020DC  EF2F  F010         	goto	l4499
  7434  0020E0                     u4820:
  7435  0020E0  FFFF               	dw	65535	; assembler added errata NOP
  7436  0020E2  EF7D  F010         	goto	l4519
  7437  0020E6                     l4515:
  7438  0020E6  FFFF               	dw	65535	; assembler added errata NOP
  7439  0020E8  0E00               	movlw	0
  7440  0020EA  6E18               	movwf	(atoi@neg+1)^0,c
  7441  0020EC  0E01               	movlw	1
  7442  0020EE  6E17               	movwf	atoi@neg^0,c
  7443  0020F0                     l4517:
  7444  0020F0  FFFF               	dw	65535	; assembler added errata NOP
  7445  0020F2  4A11               	infsnz	atoi@s^0,f,c
  7446  0020F4  2A12               	incf	(atoi@s+1)^0,f,c
  7447  0020F6  EFB5  F010         	goto	l4525
  7448  0020FA                     l4519:
  7449  0020FA  FFFF               	dw	65535	; assembler added errata NOP
  7450  0020FC  C011  FFD9         	movff	atoi@s,fsr2l
  7451  002100  C012  FFDA         	movff	atoi@s+1,fsr2h
  7452  002104  50DF               	movf	indf2,w,c
  7453  002106  6E13               	movwf	??_atoi^0,c
  7454  002108  6A14               	clrf	(??_atoi+1)^0,c
  7455                           
  7456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7457                           ; Switch size 1, requested type "simple"
  7458                           ; Number of cases is 1, Range of values is 0 to 0
  7459                           ; switch strategies available:
  7460                           ; Name         Instructions Cycles
  7461                           ; simple_byte            4     3 (average)
  7462                           ;	Chosen strategy is simple_byte
  7463  00210A  5014               	movf	(??_atoi+1)^0,w,c
  7464  00210C  0A00               	xorlw	0	; case 0
  7465  00210E  B4D8               	btfsc	status,2,c
  7466  002110  EF8C  F010         	goto	l5579
  7467  002114  EFB5  F010         	goto	l4525
  7468  002118                     l5579:
  7469  002118  FFFF               	dw	65535	; assembler added errata NOP
  7470                           
  7471                           ; Switch size 1, requested type "simple"
  7472                           ; Number of cases is 2, Range of values is 43 to 45
  7473                           ; switch strategies available:
  7474                           ; Name         Instructions Cycles
  7475                           ; simple_byte            7     4 (average)
  7476                           ;	Chosen strategy is simple_byte
  7477  00211A  5013               	movf	??_atoi^0,w,c
  7478  00211C  0A2B               	xorlw	43	; case 43
  7479  00211E  B4D8               	btfsc	status,2,c
  7480  002120  EF78  F010         	goto	l4517
  7481  002124  0A06               	xorlw	6	; case 45
  7482  002126  B4D8               	btfsc	status,2,c
  7483  002128  EF73  F010         	goto	l4515
  7484  00212C  EFB5  F010         	goto	l4525
  7485  002130                     l4521:
  7486  002130  FFFF               	dw	65535	; assembler added errata NOP
  7487  002132  C01E  F00A         	movff	atoi@n,___wmul@multiplier
  7488  002136  C01F  F00B         	movff	atoi@n+1,___wmul@multiplier+1
  7489  00213A  0E00               	movlw	0
  7490  00213C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  7491  00213E  0E0A               	movlw	10
  7492  002140  6E0C               	movwf	___wmul@multiplicand^0,c
  7493  002142  ECB3  F01A         	call	___wmul	;wreg free
  7494  002146  C011  FFD9         	movff	atoi@s,fsr2l
  7495  00214A  C012  FFDA         	movff	atoi@s+1,fsr2h
  7496  00214E  50DF               	movf	indf2,w,c
  7497  002150  6E13               	movwf	??_atoi^0,c
  7498  002152  5013               	movf	??_atoi^0,w,c
  7499  002154  5E0A               	subwf	?___wmul^0,f,c
  7500  002156  0E00               	movlw	0
  7501  002158  5A0B               	subwfb	(?___wmul+1)^0,f,c
  7502  00215A  0E30               	movlw	48
  7503  00215C  240A               	addwf	?___wmul^0,w,c
  7504  00215E  6E1E               	movwf	atoi@n^0,c
  7505  002160  0E00               	movlw	0
  7506  002162  200B               	addwfc	(?___wmul+1)^0,w,c
  7507  002164  6E1F               	movwf	(atoi@n+1)^0,c
  7508  002166  EF78  F010         	goto	l4517
  7509  00216A                     l4525:
  7510  00216A  FFFF               	dw	65535	; assembler added errata NOP
  7511  00216C  0ED0               	movlw	208
  7512  00216E  6E13               	movwf	??_atoi^0,c
  7513  002170  0EFF               	movlw	255
  7514  002172  6E14               	movwf	(??_atoi+1)^0,c
  7515  002174  C011  FFD9         	movff	atoi@s,fsr2l
  7516  002178  C012  FFDA         	movff	atoi@s+1,fsr2h
  7517  00217C  50DF               	movf	indf2,w,c
  7518  00217E  6E15               	movwf	(??_atoi+2)^0,c
  7519  002180  6A16               	clrf	(??_atoi+3)^0,c
  7520  002182  5013               	movf	??_atoi^0,w,c
  7521  002184  2615               	addwf	(??_atoi+2)^0,f,c
  7522  002186  5014               	movf	(??_atoi+1)^0,w,c
  7523  002188  2216               	addwfc	(??_atoi+3)^0,f,c
  7524  00218A  5016               	movf	(??_atoi+3)^0,w,c
  7525  00218C  E10B               	bnz	u4830
  7526  00218E  0E0A               	movlw	10
  7527  002190  5C15               	subwf	(??_atoi+2)^0,w,c
  7528  002192  A0D8               	btfss	status,0,c
  7529  002194  EFCE  F010         	goto	u4831
  7530  002198  EFD2  F010         	goto	u4830
  7531  00219C                     u4831:
  7532  00219C  FFFF               	dw	65535	; assembler added errata NOP
  7533  00219E  0E01               	movlw	1
  7534  0021A0  EFD4  F010         	goto	u4840
  7535  0021A4                     u4830:
  7536  0021A4  FFFF               	dw	65535	; assembler added errata NOP
  7537  0021A6  0E00               	movlw	0
  7538  0021A8                     u4840:
  7539  0021A8  FFFF               	dw	65535	; assembler added errata NOP
  7540  0021AA  6E1B               	movwf	_atoi$1394^0,c
  7541  0021AC  6A1C               	clrf	(_atoi$1394+1)^0,c
  7542  0021AE  501B               	movf	_atoi$1394^0,w,c
  7543  0021B0  101C               	iorwf	(_atoi$1394+1)^0,w,c
  7544  0021B2  A4D8               	btfss	status,2,c
  7545  0021B4  EFDE  F010         	goto	u4851
  7546  0021B8  EFE1  F010         	goto	u4850
  7547  0021BC                     u4851:
  7548  0021BC  FFFF               	dw	65535	; assembler added errata NOP
  7549  0021BE  EF98  F010         	goto	l4521
  7550  0021C2                     u4850:
  7551  0021C2  FFFF               	dw	65535	; assembler added errata NOP
  7552  0021C4  5017               	movf	atoi@neg^0,w,c
  7553  0021C6  1018               	iorwf	(atoi@neg+1)^0,w,c
  7554  0021C8  A4D8               	btfss	status,2,c
  7555  0021CA  EFE9  F010         	goto	u4861
  7556  0021CE  EFEC  F010         	goto	u4860
  7557  0021D2                     u4861:
  7558  0021D2  FFFF               	dw	65535	; assembler added errata NOP
  7559  0021D4  EFFB  F010         	goto	l1190
  7560  0021D8                     u4860:
  7561  0021D8  FFFF               	dw	65535	; assembler added errata NOP
  7562  0021DA  C01E  F013         	movff	atoi@n,??_atoi
  7563  0021DE  C01F  F014         	movff	atoi@n+1,??_atoi+1
  7564  0021E2  1E13               	comf	??_atoi^0,f,c
  7565  0021E4  1E14               	comf	(??_atoi+1)^0,f,c
  7566  0021E6  4A13               	infsnz	??_atoi^0,f,c
  7567  0021E8  2A14               	incf	(??_atoi+1)^0,f,c
  7568  0021EA  C013  F011         	movff	??_atoi,?_atoi
  7569  0021EE  C014  F012         	movff	??_atoi+1,?_atoi+1
  7570  0021F2  EF00  F011         	goto	l1193
  7571  0021F6                     l1190:
  7572  0021F6  FFFF               	dw	65535	; assembler added errata NOP
  7573  0021F8  C01E  F011         	movff	atoi@n,?_atoi
  7574  0021FC  C01F  F012         	movff	atoi@n+1,?_atoi+1
  7575  002200                     l1193:
  7576  002200  FFFF               	dw	65535	; assembler added errata NOP
  7577  002202  0012               	return		;funcret
  7578  002204  FFFF               	dw	65535	; errata NOP
  7579  002206                     __end_of_atoi:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _isspace *****************
  7583 ;; Defined at:
  7584 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  c               2    9[COMRAM] int 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;		None
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  2    9[COMRAM] int 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7598 ;;      Params:         2       0       0       0       0       0       0
  7599 ;;      Locals:         1       0       0       0       0       0       0
  7600 ;;      Temps:          4       0       0       0       0       0       0
  7601 ;;      Totals:         7       0       0       0       0       0       0
  7602 ;;Total ram usage:        7 bytes
  7603 ;; Hardware stack levels used: 1
  7604 ;; Hardware stack levels required when called: 2
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_atoi
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text26
  7613  00322A                     __ptext26:
  7614                           	callstack 0
  7615  00322A                     _isspace:
  7616                           	callstack 25
  7617  00322A  FFFF               	dw	65535	; assembler added errata NOP
  7618  00322C  0E01               	movlw	1
  7619  00322E  6E10               	movwf	_isspace$1410^0,c
  7620  003230  0E20               	movlw	32
  7621  003232  180A               	xorwf	isspace@c^0,w,c
  7622  003234  100B               	iorwf	(isspace@c+1)^0,w,c
  7623  003236  B4D8               	btfsc	status,2,c
  7624  003238  EF20  F019         	goto	u2841
  7625  00323C  EF23  F019         	goto	u2840
  7626  003240                     u2841:
  7627  003240  FFFF               	dw	65535	; assembler added errata NOP
  7628  003242  EF3F  F019         	goto	l3123
  7629  003246                     u2840:
  7630  003246  FFFF               	dw	65535	; assembler added errata NOP
  7631  003248  0EF7               	movlw	247
  7632  00324A  6E0C               	movwf	??_isspace^0,c
  7633  00324C  0EFF               	movlw	255
  7634  00324E  6E0D               	movwf	(??_isspace+1)^0,c
  7635  003250  C00A  F00E         	movff	isspace@c,??_isspace+2
  7636  003254  C00B  F00F         	movff	isspace@c+1,??_isspace+3
  7637  003258  500C               	movf	??_isspace^0,w,c
  7638  00325A  260E               	addwf	(??_isspace+2)^0,f,c
  7639  00325C  500D               	movf	(??_isspace+1)^0,w,c
  7640  00325E  220F               	addwfc	(??_isspace+3)^0,f,c
  7641  003260  500F               	movf	(??_isspace+3)^0,w,c
  7642  003262  E10A               	bnz	u2850
  7643  003264  0E05               	movlw	5
  7644  003266  5C0E               	subwf	(??_isspace+2)^0,w,c
  7645  003268  A0D8               	btfss	status,0,c
  7646  00326A  EF39  F019         	goto	u2851
  7647  00326E  EF3C  F019         	goto	u2850
  7648  003272                     u2851:
  7649  003272  FFFF               	dw	65535	; assembler added errata NOP
  7650  003274  EF3F  F019         	goto	l3123
  7651  003278                     u2850:
  7652  003278  FFFF               	dw	65535	; assembler added errata NOP
  7653  00327A  0E00               	movlw	0
  7654  00327C  6E10               	movwf	_isspace$1410^0,c
  7655  00327E                     l3123:
  7656  00327E  FFFF               	dw	65535	; assembler added errata NOP
  7657  003280  C010  F00A         	movff	_isspace$1410,?_isspace
  7658  003284  6A0B               	clrf	(?_isspace+1)^0,c
  7659  003286  0012               	return		;funcret
  7660  003288  FFFF               	dw	65535	; errata NOP
  7661  00328A                     __end_of_isspace:
  7662                           	callstack 0
  7663                           
  7664 ;; *************** function _isdigit *****************
  7665 ;; Defined at:
  7666 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  c               2    9[COMRAM] int 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  2    9[COMRAM] int 
  7673 ;; Registers used:
  7674 ;;		wreg, status,2, status,0
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7680 ;;      Params:         2       0       0       0       0       0       0
  7681 ;;      Locals:         0       0       0       0       0       0       0
  7682 ;;      Temps:          4       0       0       0       0       0       0
  7683 ;;      Totals:         6       0       0       0       0       0       0
  7684 ;;Total ram usage:        6 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 2
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_atoi
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           	psect	text27
  7695  003412                     __ptext27:
  7696                           	callstack 0
  7697  003412                     _isdigit:
  7698                           	callstack 25
  7699  003412  FFFF               	dw	65535	; assembler added errata NOP
  7700  003414  0ED0               	movlw	208
  7701  003416  6E0C               	movwf	??_isdigit^0,c
  7702  003418  0EFF               	movlw	255
  7703  00341A  6E0D               	movwf	(??_isdigit+1)^0,c
  7704  00341C  C00A  F00E         	movff	isdigit@c,??_isdigit+2
  7705  003420  C00B  F00F         	movff	isdigit@c+1,??_isdigit+3
  7706  003424  500C               	movf	??_isdigit^0,w,c
  7707  003426  260E               	addwf	(??_isdigit+2)^0,f,c
  7708  003428  500D               	movf	(??_isdigit+1)^0,w,c
  7709  00342A  220F               	addwfc	(??_isdigit+3)^0,f,c
  7710  00342C  500F               	movf	(??_isdigit+3)^0,w,c
  7711  00342E  E10B               	bnz	u2860
  7712  003430  0E0A               	movlw	10
  7713  003432  5C0E               	subwf	(??_isdigit+2)^0,w,c
  7714  003434  A0D8               	btfss	status,0,c
  7715  003436  EF1F  F01A         	goto	u2861
  7716  00343A  EF23  F01A         	goto	u2860
  7717  00343E                     u2861:
  7718  00343E  FFFF               	dw	65535	; assembler added errata NOP
  7719  003440  0E01               	movlw	1
  7720  003442  EF25  F01A         	goto	u2870
  7721  003446                     u2860:
  7722  003446  FFFF               	dw	65535	; assembler added errata NOP
  7723  003448  0E00               	movlw	0
  7724  00344A                     u2870:
  7725  00344A  FFFF               	dw	65535	; assembler added errata NOP
  7726  00344C  6E0A               	movwf	?_isdigit^0,c
  7727  00344E  6A0B               	clrf	(?_isdigit+1)^0,c
  7728  003450  0012               	return		;funcret
  7729  003452  FFFF               	dw	65535	; errata NOP
  7730  003454                     __end_of_isdigit:
  7731                           	callstack 0
  7732                           
  7733 ;; *************** function ___wmul *****************
  7734 ;; Defined at:
  7735 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  multiplier      2    9[COMRAM] unsigned int 
  7738 ;;  multiplicand    2   11[COMRAM] unsigned int 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  product         2   13[COMRAM] unsigned int 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  2    9[COMRAM] unsigned int 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0, prodl, prodh
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7750 ;;      Params:         4       0       0       0       0       0       0
  7751 ;;      Locals:         2       0       0       0       0       0       0
  7752 ;;      Temps:          0       0       0       0       0       0       0
  7753 ;;      Totals:         6       0       0       0       0       0       0
  7754 ;;Total ram usage:        6 bytes
  7755 ;; Hardware stack levels used: 1
  7756 ;; Hardware stack levels required when called: 2
  7757 ;; This function calls:
  7758 ;;		Nothing
  7759 ;; This function is called by:
  7760 ;;		_pick_and_place
  7761 ;;		_atoi
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text28
  7766  003566                     __ptext28:
  7767                           	callstack 0
  7768  003566                     ___wmul:
  7769                           	callstack 0
  7770  003566  FFFF               	dw	65535	; assembler added errata NOP
  7771  003568  500A               	movf	___wmul@multiplier^0,w,c
  7772  00356A  020C               	mulwf	___wmul@multiplicand^0,c
  7773  00356C  CFF3 F00E          	movff	prodl,___wmul@product
  7774  003570  CFF4 F00F          	movff	prodh,___wmul@product+1
  7775  003574  500A               	movf	___wmul@multiplier^0,w,c
  7776  003576  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  7777  003578  50F3               	movf	243,w,c
  7778  00357A  260F               	addwf	(___wmul@product+1)^0,f,c
  7779  00357C  500B               	movf	(___wmul@multiplier+1)^0,w,c
  7780  00357E  020C               	mulwf	___wmul@multiplicand^0,c
  7781  003580  50F3               	movf	243,w,c
  7782  003582  260F               	addwf	(___wmul@product+1)^0,f,c
  7783  003584  C00E  F00A         	movff	___wmul@product,?___wmul
  7784  003588  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  7785  00358C  0012               	return		;funcret
  7786  00358E  FFFF               	dw	65535	; errata NOP
  7787  003590                     __end_of___wmul:
  7788                           	callstack 0
  7789                           
  7790 ;; *************** function _init_interrupts *****************
  7791 ;; Defined at:
  7792 ;;		line 69 in file "init_PIC.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;		None
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;		None
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1    wreg      void 
  7799 ;; Registers used:
  7800 ;;		wreg, status,2
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7806 ;;      Params:         0       0       0       0       0       0       0
  7807 ;;      Locals:         0       0       0       0       0       0       0
  7808 ;;      Temps:          0       0       0       0       0       0       0
  7809 ;;      Totals:         0       0       0       0       0       0       0
  7810 ;;Total ram usage:        0 bytes
  7811 ;; Hardware stack levels used: 1
  7812 ;; Hardware stack levels required when called: 2
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_main
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text29
  7821  003602                     __ptext29:
  7822                           	callstack 0
  7823  003602                     _init_interrupts:
  7824                           	callstack 0
  7825  003602  FFFF               	dw	65535	; assembler added errata NOP
  7826  003604                     
  7827                           ;init_PIC.c: 71:     PIR1bits.RCIF = 0;
  7828  003604  9A9E               	bcf	158,5,c	;volatile
  7829                           
  7830                           ;init_PIC.c: 72:  PIE1bits.RCIE = 1;
  7831  003606  8A9D               	bsf	157,5,c	;volatile
  7832                           
  7833                           ;init_PIC.c: 73:  INTCONbits.PEIE = 1;
  7834  003608  8CF2               	bsf	242,6,c	;volatile
  7835                           
  7836                           ;init_PIC.c: 75:     PIE1bits.TMR1IE = 1;
  7837  00360A  809D               	bsf	157,0,c	;volatile
  7838                           
  7839                           ;init_PIC.c: 76:     INTCONbits.TMR0IE = 1;
  7840  00360C  8AF2               	bsf	242,5,c	;volatile
  7841  00360E                     
  7842                           ;init_PIC.c: 78:     INTCON2=0x00;
  7843  00360E  0E00               	movlw	0
  7844  003610  6EF1               	movwf	241,c	;volatile
  7845                           
  7846                           ;init_PIC.c: 79:     INTCON3=0x00;
  7847  003612  0E00               	movlw	0
  7848  003614  6EF0               	movwf	240,c	;volatile
  7849  003616                     
  7850                           ;init_PIC.c: 80:     INTCONbits.INT0IF=0;
  7851  003616  92F2               	bcf	242,1,c	;volatile
  7852  003618                     
  7853                           ;init_PIC.c: 81:     INTCONbits.INT0IE=1;
  7854  003618  88F2               	bsf	242,4,c	;volatile
  7855  00361A                     
  7856                           ;init_PIC.c: 82:     INTCON3bits.INT1IF=0;
  7857  00361A  90F0               	bcf	240,0,c	;volatile
  7858  00361C                     
  7859                           ;init_PIC.c: 83:     INTCON3bits.INT1IE=1;
  7860  00361C  86F0               	bsf	240,3,c	;volatile
  7861  00361E  0012               	return		;funcret
  7862  003620  FFFF               	dw	65535	; errata NOP
  7863  003622                     __end_of_init_interrupts:
  7864                           	callstack 0
  7865                           
  7866 ;; *************** function _init_USART *****************
  7867 ;; Defined at:
  7868 ;;		line 17 in file "serial.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;		None
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;		None
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  1    wreg      void 
  7875 ;; Registers used:
  7876 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7882 ;;      Params:         0       0       0       0       0       0       0
  7883 ;;      Locals:         0       0       0       0       0       0       0
  7884 ;;      Temps:          0       0       0       0       0       0       0
  7885 ;;      Totals:         0       0       0       0       0       0       0
  7886 ;;Total ram usage:        0 bytes
  7887 ;; Hardware stack levels used: 1
  7888 ;; Hardware stack levels required when called: 5
  7889 ;; This function calls:
  7890 ;;		___fltol
  7891 ;;		_roundf
  7892 ;; This function is called by:
  7893 ;;		_main
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text30
  7898  003496                     __ptext30:
  7899                           	callstack 0
  7900  003496                     _init_USART:
  7901                           	callstack 0
  7902  003496  FFFF               	dw	65535	; assembler added errata NOP
  7903  003498                     
  7904                           ;serial.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  7905  003498  0E55               	movlw	85
  7906  00349A  6E3D               	movwf	roundf@x^0,c
  7907  00349C  0E55               	movlw	85
  7908  00349E  6E3E               	movwf	(roundf@x+1)^0,c
  7909  0034A0  0EC8               	movlw	200
  7910  0034A2  6E3F               	movwf	(roundf@x+2)^0,c
  7911  0034A4  0E41               	movlw	65
  7912  0034A6  6E40               	movwf	(roundf@x+3)^0,c
  7913  0034A8  EC04  F00C         	call	_roundf	;wreg free
  7914  0034AC  C03D  F057         	movff	?_roundf,___fltol@f1
  7915  0034B0  C03E  F058         	movff	?_roundf+1,___fltol@f1+1
  7916  0034B4  C03F  F059         	movff	?_roundf+2,___fltol@f1+2
  7917  0034B8  C040  F05A         	movff	?_roundf+3,___fltol@f1+3
  7918  0034BC  ECD6  F014         	call	___fltol	;wreg free
  7919  0034C0  5057               	movf	?___fltol^0,w,c
  7920  0034C2  6EAF               	movwf	175,c	;volatile
  7921  0034C4                     
  7922                           ;serial.c: 35:  TXSTAbits.TX9=0;
  7923  0034C4  9CAC               	bcf	172,6,c	;volatile
  7924  0034C6                     
  7925                           ;serial.c: 36:     TXSTAbits.TXEN=1;
  7926  0034C6  8AAC               	bsf	172,5,c	;volatile
  7927  0034C8                     
  7928                           ;serial.c: 37:     TXSTAbits.SYNC=0;
  7929  0034C8  98AC               	bcf	172,4,c	;volatile
  7930  0034CA                     
  7931                           ;serial.c: 38:     TXSTAbits.BRGH=1;
  7932  0034CA  84AC               	bsf	172,2,c	;volatile
  7933  0034CC                     
  7934                           ;serial.c: 39:     RCSTAbits.SPEN=1;
  7935  0034CC  8EAB               	bsf	171,7,c	;volatile
  7936  0034CE                     
  7937                           ;serial.c: 40:     RCSTAbits.RX9=0;
  7938  0034CE  9CAB               	bcf	171,6,c	;volatile
  7939  0034D0                     
  7940                           ;serial.c: 41:     RCSTAbits.CREN=1;
  7941  0034D0  88AB               	bsf	171,4,c	;volatile
  7942  0034D2  0012               	return		;funcret
  7943  0034D4  FFFF               	dw	65535	; errata NOP
  7944  0034D6                     __end_of_init_USART:
  7945                           	callstack 0
  7946                           
  7947 ;; *************** function _roundf *****************
  7948 ;; Defined at:
  7949 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  x               4   60[COMRAM] float 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  y               4   82[COMRAM] float 
  7954 ;;  u               4   78[COMRAM] struct .
  7955 ;;  e               2   72[COMRAM] int 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  4   60[COMRAM] float 
  7958 ;; Registers used:
  7959 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7965 ;;      Params:         4       0       0       0       0       0       0
  7966 ;;      Locals:        18       0       0       0       0       0       0
  7967 ;;      Temps:          4       0       0       0       0       0       0
  7968 ;;      Totals:        26       0       0       0       0       0       0
  7969 ;;Total ram usage:       26 bytes
  7970 ;; Hardware stack levels used: 1
  7971 ;; Hardware stack levels required when called: 4
  7972 ;; This function calls:
  7973 ;;		___fladd
  7974 ;;		___flge
  7975 ;;		___flmul
  7976 ;;		___flneg
  7977 ;;		___flsub
  7978 ;; This function is called by:
  7979 ;;		_init_USART
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text31
  7984  001808                     __ptext31:
  7985                           	callstack 0
  7986  001808                     _roundf:
  7987                           	callstack 0
  7988  001808  FFFF               	dw	65535	; assembler added errata NOP
  7989  00180A  C0BF  F04F         	movff	roundf@F528,roundf@u
  7990  00180E  C0C0  F050         	movff	roundf@F528+1,roundf@u+1
  7991  001812  C0C1  F051         	movff	roundf@F528+2,roundf@u+2
  7992  001816  C0C2  F052         	movff	roundf@F528+3,roundf@u+3
  7993  00181A  C03D  F04F         	movff	roundf@x,roundf@u
  7994  00181E  C03E  F050         	movff	roundf@x+1,roundf@u+1
  7995  001822  C03F  F051         	movff	roundf@x+2,roundf@u+2
  7996  001826  C040  F052         	movff	roundf@x+3,roundf@u+3
  7997  00182A  C04F  F041         	movff	roundf@u,??_roundf
  7998  00182E  C050  F042         	movff	roundf@u+1,??_roundf+1
  7999  001832  C051  F043         	movff	roundf@u+2,??_roundf+2
  8000  001836  C052  F044         	movff	roundf@u+3,??_roundf+3
  8001  00183A  0E18               	movlw	24
  8002  00183C  EF26  F00C         	goto	u5460
  8003  001840                     u5465:
  8004  001840  FFFF               	dw	65535	; assembler added errata NOP
  8005  001842  90D8               	bcf	status,0,c
  8006  001844  3244               	rrcf	(??_roundf+3)^0,f,c
  8007  001846  3243               	rrcf	(??_roundf+2)^0,f,c
  8008  001848  3242               	rrcf	(??_roundf+1)^0,f,c
  8009  00184A  3241               	rrcf	??_roundf^0,f,c
  8010  00184C                     u5460:
  8011  00184C  FFFF               	dw	65535	; assembler added errata NOP
  8012  00184E  2EE8               	decfsz	wreg,f,c
  8013  001850  EF20  F00C         	goto	u5465
  8014  001854  5041               	movf	??_roundf^0,w,c
  8015  001856  6E49               	movwf	roundf@e^0,c
  8016  001858  6A4A               	clrf	(roundf@e+1)^0,c
  8017  00185A  BE4A               	btfsc	(roundf@e+1)^0,7,c
  8018  00185C  EF39  F00C         	goto	u5471
  8019  001860  504A               	movf	(roundf@e+1)^0,w,c
  8020  001862  E10A               	bnz	u5470
  8021  001864  0E96               	movlw	150
  8022  001866  5C49               	subwf	roundf@e^0,w,c
  8023  001868  A0D8               	btfss	status,0,c
  8024  00186A  EF39  F00C         	goto	u5471
  8025  00186E  EF3C  F00C         	goto	u5470
  8026  001872                     u5471:
  8027  001872  FFFF               	dw	65535	; assembler added errata NOP
  8028  001874  EF47  F00C         	goto	l5053
  8029  001878                     u5470:
  8030  001878  FFFF               	dw	65535	; assembler added errata NOP
  8031  00187A  C03D  F03D         	movff	roundf@x,?_roundf
  8032  00187E  C03E  F03E         	movff	roundf@x+1,?_roundf+1
  8033  001882  C03F  F03F         	movff	roundf@x+2,?_roundf+2
  8034  001886  C040  F040         	movff	roundf@x+3,?_roundf+3
  8035  00188A  EFF4  F00D         	goto	l1225
  8036  00188E                     l5053:
  8037  00188E  FFFF               	dw	65535	; assembler added errata NOP
  8038  001890  C04F  F041         	movff	roundf@u,??_roundf
  8039  001894  C050  F042         	movff	roundf@u+1,??_roundf+1
  8040  001898  C051  F043         	movff	roundf@u+2,??_roundf+2
  8041  00189C  C052  F044         	movff	roundf@u+3,??_roundf+3
  8042  0018A0  0E20               	movlw	32
  8043  0018A2  EF59  F00C         	goto	u5480
  8044  0018A6                     u5485:
  8045  0018A6  FFFF               	dw	65535	; assembler added errata NOP
  8046  0018A8  90D8               	bcf	status,0,c
  8047  0018AA  3244               	rrcf	(??_roundf+3)^0,f,c
  8048  0018AC  3243               	rrcf	(??_roundf+2)^0,f,c
  8049  0018AE  3242               	rrcf	(??_roundf+1)^0,f,c
  8050  0018B0  3241               	rrcf	??_roundf^0,f,c
  8051  0018B2                     u5480:
  8052  0018B2  FFFF               	dw	65535	; assembler added errata NOP
  8053  0018B4  2EE8               	decfsz	wreg,f,c
  8054  0018B6  EF53  F00C         	goto	u5485
  8055  0018BA  5041               	movf	??_roundf^0,w,c
  8056  0018BC  1042               	iorwf	(??_roundf+1)^0,w,c
  8057  0018BE  1043               	iorwf	(??_roundf+2)^0,w,c
  8058  0018C0  1044               	iorwf	(??_roundf+3)^0,w,c
  8059  0018C2  B4D8               	btfsc	status,2,c
  8060  0018C4  EF66  F00C         	goto	u5491
  8061  0018C8  EF69  F00C         	goto	u5490
  8062  0018CC                     u5491:
  8063  0018CC  FFFF               	dw	65535	; assembler added errata NOP
  8064  0018CE  EF7C  F00C         	goto	l5057
  8065  0018D2                     u5490:
  8066  0018D2  FFFF               	dw	65535	; assembler added errata NOP
  8067  0018D4  C03D  F00A         	movff	roundf@x,___flneg@f1
  8068  0018D8  C03E  F00B         	movff	roundf@x+1,___flneg@f1+1
  8069  0018DC  C03F  F00C         	movff	roundf@x+2,___flneg@f1+2
  8070  0018E0  C040  F00D         	movff	roundf@x+3,___flneg@f1+3
  8071  0018E4  EC2A  F01A         	call	___flneg	;wreg free
  8072  0018E8  C00A  F03D         	movff	?___flneg,roundf@x
  8073  0018EC  C00B  F03E         	movff	?___flneg+1,roundf@x+1
  8074  0018F0  C00C  F03F         	movff	?___flneg+2,roundf@x+2
  8075  0018F4  C00D  F040         	movff	?___flneg+3,roundf@x+3
  8076  0018F8                     l5057:
  8077  0018F8  FFFF               	dw	65535	; assembler added errata NOP
  8078  0018FA  BE4A               	btfsc	(roundf@e+1)^0,7,c
  8079  0018FC  EF8C  F00C         	goto	u5500
  8080  001900  504A               	movf	(roundf@e+1)^0,w,c
  8081  001902  E107               	bnz	u5501
  8082  001904  0E7E               	movlw	126
  8083  001906  5C49               	subwf	roundf@e^0,w,c
  8084  001908  B0D8               	btfsc	status,0,c
  8085  00190A  EF89  F00C         	goto	u5501
  8086  00190E  EF8C  F00C         	goto	u5500
  8087  001912                     u5501:
  8088  001912  FFFF               	dw	65535	; assembler added errata NOP
  8089  001914  EFA9  F00C         	goto	l5063
  8090  001918                     u5500:
  8091  001918  FFFF               	dw	65535	; assembler added errata NOP
  8092  00191A  C04F  F00A         	movff	roundf@u,___flmul@b
  8093  00191E  C050  F00B         	movff	roundf@u+1,___flmul@b+1
  8094  001922  C051  F00C         	movff	roundf@u+2,___flmul@b+2
  8095  001926  C052  F00D         	movff	roundf@u+3,___flmul@b+3
  8096  00192A  0E00               	movlw	0
  8097  00192C  6E0E               	movwf	___flmul@a^0,c
  8098  00192E  0E00               	movlw	0
  8099  001930  6E0F               	movwf	(___flmul@a+1)^0,c
  8100  001932  0E00               	movlw	0
  8101  001934  6E10               	movwf	(___flmul@a+2)^0,c
  8102  001936  0E00               	movlw	0
  8103  001938  6E11               	movwf	(___flmul@a+3)^0,c
  8104  00193A  EC99  F007         	call	___flmul	;wreg free
  8105  00193E  C00A  F03D         	movff	?___flmul,?_roundf
  8106  001942  C00B  F03E         	movff	?___flmul+1,?_roundf+1
  8107  001946  C00C  F03F         	movff	?___flmul+2,?_roundf+2
  8108  00194A  C00D  F040         	movff	?___flmul+3,?_roundf+3
  8109  00194E  EFF4  F00D         	goto	l1225
  8110  001952                     l5063:
  8111  001952  FFFF               	dw	65535	; assembler added errata NOP
  8112  001954  0E00               	movlw	0
  8113  001956  6E0E               	movwf	___fladd@a^0,c
  8114  001958  0E00               	movlw	0
  8115  00195A  6E0F               	movwf	(___fladd@a+1)^0,c
  8116  00195C  0E00               	movlw	0
  8117  00195E  6E10               	movwf	(___fladd@a+2)^0,c
  8118  001960  0E4B               	movlw	75
  8119  001962  6E11               	movwf	(___fladd@a+3)^0,c
  8120  001964  C03D  F00A         	movff	roundf@x,___fladd@b
  8121  001968  C03E  F00B         	movff	roundf@x+1,___fladd@b+1
  8122  00196C  C03F  F00C         	movff	roundf@x+2,___fladd@b+2
  8123  001970  C040  F00D         	movff	roundf@x+3,___fladd@b+3
  8124  001974  ECC5  F004         	call	___fladd	;wreg free
  8125  001978  C00A  F04B         	movff	?___fladd,_roundf$1678
  8126  00197C  C00B  F04C         	movff	?___fladd+1,_roundf$1678+1
  8127  001980  C00C  F04D         	movff	?___fladd+2,_roundf$1678+2
  8128  001984  C00D  F04E         	movff	?___fladd+3,_roundf$1678+3
  8129  001988  0E00               	movlw	0
  8130  00198A  6E0E               	movwf	___fladd@a^0,c
  8131  00198C  0E00               	movlw	0
  8132  00198E  6E0F               	movwf	(___fladd@a+1)^0,c
  8133  001990  0E00               	movlw	0
  8134  001992  6E10               	movwf	(___fladd@a+2)^0,c
  8135  001994  0ECB               	movlw	203
  8136  001996  6E11               	movwf	(___fladd@a+3)^0,c
  8137  001998  C04B  F00A         	movff	_roundf$1678,___fladd@b
  8138  00199C  C04C  F00B         	movff	_roundf$1678+1,___fladd@b+1
  8139  0019A0  C04D  F00C         	movff	_roundf$1678+2,___fladd@b+2
  8140  0019A4  C04E  F00D         	movff	_roundf$1678+3,___fladd@b+3
  8141  0019A8  ECC5  F004         	call	___fladd	;wreg free
  8142  0019AC  C00A  F045         	movff	?___fladd,_roundf$1679
  8143  0019B0  C00B  F046         	movff	?___fladd+1,_roundf$1679+1
  8144  0019B4  C00C  F047         	movff	?___fladd+2,_roundf$1679+2
  8145  0019B8  C00D  F048         	movff	?___fladd+3,_roundf$1679+3
  8146  0019BC  C045  F01A         	movff	_roundf$1679,___flsub@b
  8147  0019C0  C046  F01B         	movff	_roundf$1679+1,___flsub@b+1
  8148  0019C4  C047  F01C         	movff	_roundf$1679+2,___flsub@b+2
  8149  0019C8  C048  F01D         	movff	_roundf$1679+3,___flsub@b+3
  8150  0019CC  C03D  F01E         	movff	roundf@x,___flsub@a
  8151  0019D0  C03E  F01F         	movff	roundf@x+1,___flsub@a+1
  8152  0019D4  C03F  F020         	movff	roundf@x+2,___flsub@a+2
  8153  0019D8  C040  F021         	movff	roundf@x+3,___flsub@a+3
  8154  0019DC  EC9F  F019         	call	___flsub	;wreg free
  8155  0019E0  C01A  F053         	movff	?___flsub,roundf@y
  8156  0019E4  C01B  F054         	movff	?___flsub+1,roundf@y+1
  8157  0019E8  C01C  F055         	movff	?___flsub+2,roundf@y+2
  8158  0019EC  C01D  F056         	movff	?___flsub+3,roundf@y+3
  8159  0019F0  0E00               	movlw	0
  8160  0019F2  6E31               	movwf	___flge@ff1^0,c
  8161  0019F4  0E00               	movlw	0
  8162  0019F6  6E32               	movwf	(___flge@ff1+1)^0,c
  8163  0019F8  0E00               	movlw	0
  8164  0019FA  6E33               	movwf	(___flge@ff1+2)^0,c
  8165  0019FC  0E3F               	movlw	63
  8166  0019FE  6E34               	movwf	(___flge@ff1+3)^0,c
  8167  001A00  C053  F035         	movff	roundf@y,___flge@ff2
  8168  001A04  C054  F036         	movff	roundf@y+1,___flge@ff2+1
  8169  001A08  C055  F037         	movff	roundf@y+2,___flge@ff2+2
  8170  001A0C  C056  F038         	movff	roundf@y+3,___flge@ff2+3
  8171  001A10  EC72  F015         	call	___flge	;wreg free
  8172  001A14  B0D8               	btfsc	status,0,c
  8173  001A16  EF0F  F00D         	goto	u5511
  8174  001A1A  EF12  F00D         	goto	u5510
  8175  001A1E                     u5511:
  8176  001A1E  FFFF               	dw	65535	; assembler added errata NOP
  8177  001A20  EF49  F00D         	goto	l5067
  8178  001A24                     u5510:
  8179  001A24  FFFF               	dw	65535	; assembler added errata NOP
  8180  001A26  C03D  F00E         	movff	roundf@x,___fladd@a
  8181  001A2A  C03E  F00F         	movff	roundf@x+1,___fladd@a+1
  8182  001A2E  C03F  F010         	movff	roundf@x+2,___fladd@a+2
  8183  001A32  C040  F011         	movff	roundf@x+3,___fladd@a+3
  8184  001A36  C053  F00A         	movff	roundf@y,___fladd@b
  8185  001A3A  C054  F00B         	movff	roundf@y+1,___fladd@b+1
  8186  001A3E  C055  F00C         	movff	roundf@y+2,___fladd@b+2
  8187  001A42  C056  F00D         	movff	roundf@y+3,___fladd@b+3
  8188  001A46  ECC5  F004         	call	___fladd	;wreg free
  8189  001A4A  C00A  F04B         	movff	?___fladd,_roundf$1678
  8190  001A4E  C00B  F04C         	movff	?___fladd+1,_roundf$1678+1
  8191  001A52  C00C  F04D         	movff	?___fladd+2,_roundf$1678+2
  8192  001A56  C00D  F04E         	movff	?___fladd+3,_roundf$1678+3
  8193  001A5A  C04B  F00A         	movff	_roundf$1678,___fladd@b
  8194  001A5E  C04C  F00B         	movff	_roundf$1678+1,___fladd@b+1
  8195  001A62  C04D  F00C         	movff	_roundf$1678+2,___fladd@b+2
  8196  001A66  C04E  F00D         	movff	_roundf$1678+3,___fladd@b+3
  8197  001A6A  0E00               	movlw	0
  8198  001A6C  6E0E               	movwf	___fladd@a^0,c
  8199  001A6E  0E00               	movlw	0
  8200  001A70  6E0F               	movwf	(___fladd@a+1)^0,c
  8201  001A72  0E80               	movlw	128
  8202  001A74  6E10               	movwf	(___fladd@a+2)^0,c
  8203  001A76  0EBF               	movlw	191
  8204  001A78  6E11               	movwf	(___fladd@a+3)^0,c
  8205  001A7A  ECC5  F004         	call	___fladd	;wreg free
  8206  001A7E  C00A  F053         	movff	?___fladd,roundf@y
  8207  001A82  C00B  F054         	movff	?___fladd+1,roundf@y+1
  8208  001A86  C00C  F055         	movff	?___fladd+2,roundf@y+2
  8209  001A8A  C00D  F056         	movff	?___fladd+3,roundf@y+3
  8210  001A8E  EFB6  F00D         	goto	l5073
  8211  001A92                     l5067:
  8212  001A92  FFFF               	dw	65535	; assembler added errata NOP
  8213  001A94  0E00               	movlw	0
  8214  001A96  6E31               	movwf	___flge@ff1^0,c
  8215  001A98  0E00               	movlw	0
  8216  001A9A  6E32               	movwf	(___flge@ff1+1)^0,c
  8217  001A9C  0E00               	movlw	0
  8218  001A9E  6E33               	movwf	(___flge@ff1+2)^0,c
  8219  001AA0  0EBF               	movlw	191
  8220  001AA2  6E34               	movwf	(___flge@ff1+3)^0,c
  8221  001AA4  C053  F035         	movff	roundf@y,___flge@ff2
  8222  001AA8  C054  F036         	movff	roundf@y+1,___flge@ff2+1
  8223  001AAC  C055  F037         	movff	roundf@y+2,___flge@ff2+2
  8224  001AB0  C056  F038         	movff	roundf@y+3,___flge@ff2+3
  8225  001AB4  EC72  F015         	call	___flge	;wreg free
  8226  001AB8  A0D8               	btfss	status,0,c
  8227  001ABA  EF61  F00D         	goto	u5521
  8228  001ABE  EF64  F00D         	goto	u5520
  8229  001AC2                     u5521:
  8230  001AC2  FFFF               	dw	65535	; assembler added errata NOP
  8231  001AC4  EF9B  F00D         	goto	l5071
  8232  001AC8                     u5520:
  8233  001AC8  FFFF               	dw	65535	; assembler added errata NOP
  8234  001ACA  C03D  F00E         	movff	roundf@x,___fladd@a
  8235  001ACE  C03E  F00F         	movff	roundf@x+1,___fladd@a+1
  8236  001AD2  C03F  F010         	movff	roundf@x+2,___fladd@a+2
  8237  001AD6  C040  F011         	movff	roundf@x+3,___fladd@a+3
  8238  001ADA  C053  F00A         	movff	roundf@y,___fladd@b
  8239  001ADE  C054  F00B         	movff	roundf@y+1,___fladd@b+1
  8240  001AE2  C055  F00C         	movff	roundf@y+2,___fladd@b+2
  8241  001AE6  C056  F00D         	movff	roundf@y+3,___fladd@b+3
  8242  001AEA  ECC5  F004         	call	___fladd	;wreg free
  8243  001AEE  C00A  F04B         	movff	?___fladd,_roundf$1678
  8244  001AF2  C00B  F04C         	movff	?___fladd+1,_roundf$1678+1
  8245  001AF6  C00C  F04D         	movff	?___fladd+2,_roundf$1678+2
  8246  001AFA  C00D  F04E         	movff	?___fladd+3,_roundf$1678+3
  8247  001AFE  C04B  F00A         	movff	_roundf$1678,___fladd@b
  8248  001B02  C04C  F00B         	movff	_roundf$1678+1,___fladd@b+1
  8249  001B06  C04D  F00C         	movff	_roundf$1678+2,___fladd@b+2
  8250  001B0A  C04E  F00D         	movff	_roundf$1678+3,___fladd@b+3
  8251  001B0E  0E00               	movlw	0
  8252  001B10  6E0E               	movwf	___fladd@a^0,c
  8253  001B12  0E00               	movlw	0
  8254  001B14  6E0F               	movwf	(___fladd@a+1)^0,c
  8255  001B16  0E80               	movlw	128
  8256  001B18  6E10               	movwf	(___fladd@a+2)^0,c
  8257  001B1A  0E3F               	movlw	63
  8258  001B1C  6E11               	movwf	(___fladd@a+3)^0,c
  8259  001B1E  ECC5  F004         	call	___fladd	;wreg free
  8260  001B22  C00A  F053         	movff	?___fladd,roundf@y
  8261  001B26  C00B  F054         	movff	?___fladd+1,roundf@y+1
  8262  001B2A  C00C  F055         	movff	?___fladd+2,roundf@y+2
  8263  001B2E  C00D  F056         	movff	?___fladd+3,roundf@y+3
  8264  001B32  EFB6  F00D         	goto	l5073
  8265  001B36                     l5071:
  8266  001B36  FFFF               	dw	65535	; assembler added errata NOP
  8267  001B38  C053  F00A         	movff	roundf@y,___fladd@b
  8268  001B3C  C054  F00B         	movff	roundf@y+1,___fladd@b+1
  8269  001B40  C055  F00C         	movff	roundf@y+2,___fladd@b+2
  8270  001B44  C056  F00D         	movff	roundf@y+3,___fladd@b+3
  8271  001B48  C03D  F00E         	movff	roundf@x,___fladd@a
  8272  001B4C  C03E  F00F         	movff	roundf@x+1,___fladd@a+1
  8273  001B50  C03F  F010         	movff	roundf@x+2,___fladd@a+2
  8274  001B54  C040  F011         	movff	roundf@x+3,___fladd@a+3
  8275  001B58  ECC5  F004         	call	___fladd	;wreg free
  8276  001B5C  C00A  F053         	movff	?___fladd,roundf@y
  8277  001B60  C00B  F054         	movff	?___fladd+1,roundf@y+1
  8278  001B64  C00C  F055         	movff	?___fladd+2,roundf@y+2
  8279  001B68  C00D  F056         	movff	?___fladd+3,roundf@y+3
  8280  001B6C                     l5073:
  8281  001B6C  FFFF               	dw	65535	; assembler added errata NOP
  8282  001B6E  C04F  F041         	movff	roundf@u,??_roundf
  8283  001B72  C050  F042         	movff	roundf@u+1,??_roundf+1
  8284  001B76  C051  F043         	movff	roundf@u+2,??_roundf+2
  8285  001B7A  C052  F044         	movff	roundf@u+3,??_roundf+3
  8286  001B7E  0E20               	movlw	32
  8287  001B80  EFC8  F00D         	goto	u5530
  8288  001B84                     u5535:
  8289  001B84  FFFF               	dw	65535	; assembler added errata NOP
  8290  001B86  90D8               	bcf	status,0,c
  8291  001B88  3244               	rrcf	(??_roundf+3)^0,f,c
  8292  001B8A  3243               	rrcf	(??_roundf+2)^0,f,c
  8293  001B8C  3242               	rrcf	(??_roundf+1)^0,f,c
  8294  001B8E  3241               	rrcf	??_roundf^0,f,c
  8295  001B90                     u5530:
  8296  001B90  FFFF               	dw	65535	; assembler added errata NOP
  8297  001B92  2EE8               	decfsz	wreg,f,c
  8298  001B94  EFC2  F00D         	goto	u5535
  8299  001B98  5041               	movf	??_roundf^0,w,c
  8300  001B9A  1042               	iorwf	(??_roundf+1)^0,w,c
  8301  001B9C  1043               	iorwf	(??_roundf+2)^0,w,c
  8302  001B9E  1044               	iorwf	(??_roundf+3)^0,w,c
  8303  001BA0  B4D8               	btfsc	status,2,c
  8304  001BA2  EFD5  F00D         	goto	u5541
  8305  001BA6  EFD8  F00D         	goto	u5540
  8306  001BAA                     u5541:
  8307  001BAA  FFFF               	dw	65535	; assembler added errata NOP
  8308  001BAC  EFEB  F00D         	goto	l5077
  8309  001BB0                     u5540:
  8310  001BB0  FFFF               	dw	65535	; assembler added errata NOP
  8311  001BB2  C053  F00A         	movff	roundf@y,___flneg@f1
  8312  001BB6  C054  F00B         	movff	roundf@y+1,___flneg@f1+1
  8313  001BBA  C055  F00C         	movff	roundf@y+2,___flneg@f1+2
  8314  001BBE  C056  F00D         	movff	roundf@y+3,___flneg@f1+3
  8315  001BC2  EC2A  F01A         	call	___flneg	;wreg free
  8316  001BC6  C00A  F053         	movff	?___flneg,roundf@y
  8317  001BCA  C00B  F054         	movff	?___flneg+1,roundf@y+1
  8318  001BCE  C00C  F055         	movff	?___flneg+2,roundf@y+2
  8319  001BD2  C00D  F056         	movff	?___flneg+3,roundf@y+3
  8320  001BD6                     l5077:
  8321  001BD6  FFFF               	dw	65535	; assembler added errata NOP
  8322  001BD8  C053  F03D         	movff	roundf@y,?_roundf
  8323  001BDC  C054  F03E         	movff	roundf@y+1,?_roundf+1
  8324  001BE0  C055  F03F         	movff	roundf@y+2,?_roundf+2
  8325  001BE4  C056  F040         	movff	roundf@y+3,?_roundf+3
  8326  001BE8                     l1225:
  8327  001BE8  FFFF               	dw	65535	; assembler added errata NOP
  8328  001BEA  0012               	return		;funcret
  8329  001BEC  FFFF               	dw	65535	; errata NOP
  8330  001BEE                     __end_of_roundf:
  8331                           	callstack 0
  8332                           
  8333 ;; *************** function ___flsub *****************
  8334 ;; Defined at:
  8335 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  b               4   25[COMRAM] float 
  8338 ;;  a               4   29[COMRAM] float 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  4   25[COMRAM] float 
  8343 ;; Registers used:
  8344 ;;		wreg, status,2, status,0, cstack
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8350 ;;      Params:         8       0       0       0       0       0       0
  8351 ;;      Locals:         0       0       0       0       0       0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0
  8353 ;;      Totals:         8       0       0       0       0       0       0
  8354 ;;Total ram usage:        8 bytes
  8355 ;; Hardware stack levels used: 1
  8356 ;; Hardware stack levels required when called: 3
  8357 ;; This function calls:
  8358 ;;		___fladd
  8359 ;; This function is called by:
  8360 ;;		_roundf
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text32
  8365  00333E                     __ptext32:
  8366                           	callstack 0
  8367  00333E                     ___flsub:
  8368                           	callstack 0
  8369  00333E  FFFF               	dw	65535	; assembler added errata NOP
  8370  003340  0E00               	movlw	0
  8371  003342  1A1E               	xorwf	___flsub@a^0,f,c
  8372  003344  0E00               	movlw	0
  8373  003346  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  8374  003348  0E00               	movlw	0
  8375  00334A  1A20               	xorwf	(___flsub@a+2)^0,f,c
  8376  00334C  0E80               	movlw	128
  8377  00334E  1A21               	xorwf	(___flsub@a+3)^0,f,c
  8378  003350  C01A  F00A         	movff	___flsub@b,___fladd@b
  8379  003354  C01B  F00B         	movff	___flsub@b+1,___fladd@b+1
  8380  003358  C01C  F00C         	movff	___flsub@b+2,___fladd@b+2
  8381  00335C  C01D  F00D         	movff	___flsub@b+3,___fladd@b+3
  8382  003360  C01E  F00E         	movff	___flsub@a,___fladd@a
  8383  003364  C01F  F00F         	movff	___flsub@a+1,___fladd@a+1
  8384  003368  C020  F010         	movff	___flsub@a+2,___fladd@a+2
  8385  00336C  C021  F011         	movff	___flsub@a+3,___fladd@a+3
  8386  003370  ECC5  F004         	call	___fladd	;wreg free
  8387  003374  C00A  F01A         	movff	?___fladd,?___flsub
  8388  003378  C00B  F01B         	movff	?___fladd+1,?___flsub+1
  8389  00337C  C00C  F01C         	movff	?___fladd+2,?___flsub+2
  8390  003380  C00D  F01D         	movff	?___fladd+3,?___flsub+3
  8391  003384  0012               	return		;funcret
  8392  003386  FFFF               	dw	65535	; errata NOP
  8393  003388                     __end_of___flsub:
  8394                           	callstack 0
  8395                           
  8396 ;; *************** function ___fladd *****************
  8397 ;; Defined at:
  8398 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;  b               4    9[COMRAM] float 
  8401 ;;  a               4   13[COMRAM] float 
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;  grs             1   24[COMRAM] unsigned char 
  8404 ;;  bexp            1   23[COMRAM] unsigned char 
  8405 ;;  aexp            1   22[COMRAM] unsigned char 
  8406 ;;  signs           1   21[COMRAM] unsigned char 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  4    9[COMRAM] unsigned char 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8416 ;;      Params:         8       0       0       0       0       0       0
  8417 ;;      Locals:         4       0       0       0       0       0       0
  8418 ;;      Temps:          4       0       0       0       0       0       0
  8419 ;;      Totals:        16       0       0       0       0       0       0
  8420 ;;Total ram usage:       16 bytes
  8421 ;; Hardware stack levels used: 1
  8422 ;; Hardware stack levels required when called: 2
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		___flsub
  8427 ;;		_roundf
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text33
  8432  00098A                     __ptext33:
  8433                           	callstack 0
  8434  00098A                     ___fladd:
  8435                           	callstack 0
  8436  00098A  FFFF               	dw	65535	; assembler added errata NOP
  8437  00098C  500D               	movf	(___fladd@b+3)^0,w,c
  8438  00098E  0B80               	andlw	128
  8439  000990  6E16               	movwf	___fladd@signs^0,c
  8440  000992  500D               	movf	(___fladd@b+3)^0,w,c
  8441  000994  240D               	addwf	(___fladd@b+3)^0,w,c
  8442  000996  6E18               	movwf	___fladd@bexp^0,c
  8443  000998  AE0C               	btfss	(___fladd@b+2)^0,7,c
  8444  00099A  EFD1  F004         	goto	u2451
  8445  00099E  EFD4  F004         	goto	u2450
  8446  0009A2                     u2451:
  8447  0009A2  FFFF               	dw	65535	; assembler added errata NOP
  8448  0009A4  EFD6  F004         	goto	l2919
  8449  0009A8                     u2450:
  8450  0009A8  FFFF               	dw	65535	; assembler added errata NOP
  8451  0009AA  8018               	bsf	___fladd@bexp^0,0,c
  8452  0009AC                     l2919:
  8453  0009AC  FFFF               	dw	65535	; assembler added errata NOP
  8454  0009AE  5018               	movf	___fladd@bexp^0,w,c
  8455  0009B0  B4D8               	btfsc	status,2,c
  8456  0009B2  EFDD  F004         	goto	u2461
  8457  0009B6  EFE0  F004         	goto	u2460
  8458  0009BA                     u2461:
  8459  0009BA  FFFF               	dw	65535	; assembler added errata NOP
  8460  0009BC  EFF9  F004         	goto	l2929
  8461  0009C0                     u2460:
  8462  0009C0  FFFF               	dw	65535	; assembler added errata NOP
  8463  0009C2  2818               	incf	___fladd@bexp^0,w,c
  8464  0009C4  A4D8               	btfss	status,2,c
  8465  0009C6  EFE7  F004         	goto	u2471
  8466  0009CA  EFEA  F004         	goto	u2470
  8467  0009CE                     u2471:
  8468  0009CE  FFFF               	dw	65535	; assembler added errata NOP
  8469  0009D0  EFF3  F004         	goto	l2925
  8470  0009D4                     u2470:
  8471  0009D4  FFFF               	dw	65535	; assembler added errata NOP
  8472  0009D6  0E00               	movlw	0
  8473  0009D8  6E0A               	movwf	___fladd@b^0,c
  8474  0009DA  0E00               	movlw	0
  8475  0009DC  6E0B               	movwf	(___fladd@b+1)^0,c
  8476  0009DE  0E00               	movlw	0
  8477  0009E0  6E0C               	movwf	(___fladd@b+2)^0,c
  8478  0009E2  0E00               	movlw	0
  8479  0009E4  6E0D               	movwf	(___fladd@b+3)^0,c
  8480  0009E6                     l2925:
  8481  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  8482  0009E8  8E0C               	bsf	(___fladd@b+2)^0,7,c
  8483  0009EA  0E00               	movlw	0
  8484  0009EC  6E0D               	movwf	(___fladd@b+3)^0,c
  8485  0009EE  EF02  F005         	goto	l2931
  8486  0009F2                     l2929:
  8487  0009F2  FFFF               	dw	65535	; assembler added errata NOP
  8488  0009F4  0E00               	movlw	0
  8489  0009F6  6E0A               	movwf	___fladd@b^0,c
  8490  0009F8  0E00               	movlw	0
  8491  0009FA  6E0B               	movwf	(___fladd@b+1)^0,c
  8492  0009FC  0E00               	movlw	0
  8493  0009FE  6E0C               	movwf	(___fladd@b+2)^0,c
  8494  000A00  0E00               	movlw	0
  8495  000A02  6E0D               	movwf	(___fladd@b+3)^0,c
  8496  000A04                     l2931:
  8497  000A04  FFFF               	dw	65535	; assembler added errata NOP
  8498  000A06  5011               	movf	(___fladd@a+3)^0,w,c
  8499  000A08  0B80               	andlw	128
  8500  000A0A  6E17               	movwf	___fladd@aexp^0,c
  8501  000A0C  5016               	movf	___fladd@signs^0,w,c
  8502  000A0E  1817               	xorwf	___fladd@aexp^0,w,c
  8503  000A10  B4D8               	btfsc	status,2,c
  8504  000A12  EF0D  F005         	goto	u2481
  8505  000A16  EF10  F005         	goto	u2480
  8506  000A1A                     u2481:
  8507  000A1A  FFFF               	dw	65535	; assembler added errata NOP
  8508  000A1C  EF12  F005         	goto	l2937
  8509  000A20                     u2480:
  8510  000A20  FFFF               	dw	65535	; assembler added errata NOP
  8511  000A22  8C16               	bsf	___fladd@signs^0,6,c
  8512  000A24                     l2937:
  8513  000A24  FFFF               	dw	65535	; assembler added errata NOP
  8514  000A26  5011               	movf	(___fladd@a+3)^0,w,c
  8515  000A28  2411               	addwf	(___fladd@a+3)^0,w,c
  8516  000A2A  6E17               	movwf	___fladd@aexp^0,c
  8517  000A2C  AE10               	btfss	(___fladd@a+2)^0,7,c
  8518  000A2E  EF1B  F005         	goto	u2491
  8519  000A32  EF1E  F005         	goto	u2490
  8520  000A36                     u2491:
  8521  000A36  FFFF               	dw	65535	; assembler added errata NOP
  8522  000A38  EF20  F005         	goto	l2943
  8523  000A3C                     u2490:
  8524  000A3C  FFFF               	dw	65535	; assembler added errata NOP
  8525  000A3E  8017               	bsf	___fladd@aexp^0,0,c
  8526  000A40                     l2943:
  8527  000A40  FFFF               	dw	65535	; assembler added errata NOP
  8528  000A42  5017               	movf	___fladd@aexp^0,w,c
  8529  000A44  B4D8               	btfsc	status,2,c
  8530  000A46  EF27  F005         	goto	u2501
  8531  000A4A  EF2A  F005         	goto	u2500
  8532  000A4E                     u2501:
  8533  000A4E  FFFF               	dw	65535	; assembler added errata NOP
  8534  000A50  EF43  F005         	goto	l2953
  8535  000A54                     u2500:
  8536  000A54  FFFF               	dw	65535	; assembler added errata NOP
  8537  000A56  2817               	incf	___fladd@aexp^0,w,c
  8538  000A58  A4D8               	btfss	status,2,c
  8539  000A5A  EF31  F005         	goto	u2511
  8540  000A5E  EF34  F005         	goto	u2510
  8541  000A62                     u2511:
  8542  000A62  FFFF               	dw	65535	; assembler added errata NOP
  8543  000A64  EF3D  F005         	goto	l2949
  8544  000A68                     u2510:
  8545  000A68  FFFF               	dw	65535	; assembler added errata NOP
  8546  000A6A  0E00               	movlw	0
  8547  000A6C  6E0E               	movwf	___fladd@a^0,c
  8548  000A6E  0E00               	movlw	0
  8549  000A70  6E0F               	movwf	(___fladd@a+1)^0,c
  8550  000A72  0E00               	movlw	0
  8551  000A74  6E10               	movwf	(___fladd@a+2)^0,c
  8552  000A76  0E00               	movlw	0
  8553  000A78  6E11               	movwf	(___fladd@a+3)^0,c
  8554  000A7A                     l2949:
  8555  000A7A  FFFF               	dw	65535	; assembler added errata NOP
  8556  000A7C  8E10               	bsf	(___fladd@a+2)^0,7,c
  8557  000A7E  0E00               	movlw	0
  8558  000A80  6E11               	movwf	(___fladd@a+3)^0,c
  8559  000A82  EF4C  F005         	goto	l2955
  8560  000A86                     l2953:
  8561  000A86  FFFF               	dw	65535	; assembler added errata NOP
  8562  000A88  0E00               	movlw	0
  8563  000A8A  6E0E               	movwf	___fladd@a^0,c
  8564  000A8C  0E00               	movlw	0
  8565  000A8E  6E0F               	movwf	(___fladd@a+1)^0,c
  8566  000A90  0E00               	movlw	0
  8567  000A92  6E10               	movwf	(___fladd@a+2)^0,c
  8568  000A94  0E00               	movlw	0
  8569  000A96  6E11               	movwf	(___fladd@a+3)^0,c
  8570  000A98                     l2955:
  8571  000A98  FFFF               	dw	65535	; assembler added errata NOP
  8572  000A9A  5018               	movf	___fladd@bexp^0,w,c
  8573  000A9C  5C17               	subwf	___fladd@aexp^0,w,c
  8574  000A9E  B0D8               	btfsc	status,0,c
  8575  000AA0  EF54  F005         	goto	u2521
  8576  000AA4  EF57  F005         	goto	u2520
  8577  000AA8                     u2521:
  8578  000AA8  FFFF               	dw	65535	; assembler added errata NOP
  8579  000AAA  EF82  F005         	goto	l2991
  8580  000AAE                     u2520:
  8581  000AAE  FFFF               	dw	65535	; assembler added errata NOP
  8582  000AB0  AC16               	btfss	___fladd@signs^0,6,c
  8583  000AB2  EF5D  F005         	goto	u2531
  8584  000AB6  EF60  F005         	goto	u2530
  8585  000ABA                     u2531:
  8586  000ABA  FFFF               	dw	65535	; assembler added errata NOP
  8587  000ABC  EF63  F005         	goto	l2961
  8588  000AC0                     u2530:
  8589  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  8590  000AC2  0E80               	movlw	128
  8591  000AC4  1A16               	xorwf	___fladd@signs^0,f,c
  8592  000AC6                     l2961:
  8593  000AC6  FFFF               	dw	65535	; assembler added errata NOP
  8594  000AC8  C018  F019         	movff	___fladd@bexp,___fladd@grs
  8595  000ACC  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  8596  000AD0  C019  F017         	movff	___fladd@grs,___fladd@aexp
  8597  000AD4  C00A  F019         	movff	___fladd@b,___fladd@grs
  8598  000AD8  C00E  F00A         	movff	___fladd@a,___fladd@b
  8599  000ADC  C019  F00E         	movff	___fladd@grs,___fladd@a
  8600  000AE0  C00B  F019         	movff	___fladd@b+1,___fladd@grs
  8601  000AE4  C00F  F00B         	movff	___fladd@a+1,___fladd@b+1
  8602  000AE8  C019  F00F         	movff	___fladd@grs,___fladd@a+1
  8603  000AEC  C00C  F019         	movff	___fladd@b+2,___fladd@grs
  8604  000AF0  C010  F00C         	movff	___fladd@a+2,___fladd@b+2
  8605  000AF4  C019  F010         	movff	___fladd@grs,___fladd@a+2
  8606  000AF8  C00D  F019         	movff	___fladd@b+3,___fladd@grs
  8607  000AFC  C011  F00D         	movff	___fladd@a+3,___fladd@b+3
  8608  000B00  C019  F011         	movff	___fladd@grs,___fladd@a+3
  8609  000B04                     l2991:
  8610  000B04  FFFF               	dw	65535	; assembler added errata NOP
  8611  000B06  0E00               	movlw	0
  8612  000B08  6E19               	movwf	___fladd@grs^0,c
  8613  000B0A  5018               	movf	___fladd@bexp^0,w,c
  8614  000B0C  C017  F012         	movff	___fladd@aexp,??___fladd
  8615  000B10  6A13               	clrf	(??___fladd+1)^0,c
  8616  000B12  5E12               	subwf	??___fladd^0,f,c
  8617  000B14  0E00               	movlw	0
  8618  000B16  5A13               	subwfb	(??___fladd+1)^0,f,c
  8619  000B18  BE13               	btfsc	(??___fladd+1)^0,7,c
  8620  000B1A  EF98  F005         	goto	u2541
  8621  000B1E  5013               	movf	(??___fladd+1)^0,w,c
  8622  000B20  E10A               	bnz	u2540
  8623  000B22  0E1A               	movlw	26
  8624  000B24  5C12               	subwf	??___fladd^0,w,c
  8625  000B26  A0D8               	btfss	status,0,c
  8626  000B28  EF98  F005         	goto	u2541
  8627  000B2C  EF9B  F005         	goto	u2540
  8628  000B30                     u2541:
  8629  000B30  FFFF               	dw	65535	; assembler added errata NOP
  8630  000B32  EFDE  F005         	goto	l1020
  8631  000B36                     u2540:
  8632  000B36  FFFF               	dw	65535	; assembler added errata NOP
  8633  000B38  500A               	movf	___fladd@b^0,w,c
  8634  000B3A  100B               	iorwf	(___fladd@b+1)^0,w,c
  8635  000B3C  100C               	iorwf	(___fladd@b+2)^0,w,c
  8636  000B3E  100D               	iorwf	(___fladd@b+3)^0,w,c
  8637  000B40  A4D8               	btfss	status,2,c
  8638  000B42  EFA5  F005         	goto	u2551
  8639  000B46  EFA9  F005         	goto	u2550
  8640  000B4A                     u2551:
  8641  000B4A  FFFF               	dw	65535	; assembler added errata NOP
  8642  000B4C  0E01               	movlw	1
  8643  000B4E  EFAB  F005         	goto	u2560
  8644  000B52                     u2550:
  8645  000B52  FFFF               	dw	65535	; assembler added errata NOP
  8646  000B54  0E00               	movlw	0
  8647  000B56                     u2560:
  8648  000B56  FFFF               	dw	65535	; assembler added errata NOP
  8649  000B58  6E19               	movwf	___fladd@grs^0,c
  8650  000B5A  0E00               	movlw	0
  8651  000B5C  6E0A               	movwf	___fladd@b^0,c
  8652  000B5E  0E00               	movlw	0
  8653  000B60  6E0B               	movwf	(___fladd@b+1)^0,c
  8654  000B62  0E00               	movlw	0
  8655  000B64  6E0C               	movwf	(___fladd@b+2)^0,c
  8656  000B66  0E00               	movlw	0
  8657  000B68  6E0D               	movwf	(___fladd@b+3)^0,c
  8658  000B6A  C017  F018         	movff	___fladd@aexp,___fladd@bexp
  8659  000B6E  EFE9  F005         	goto	l1019
  8660  000B72                     l1021:
  8661  000B72  FFFF               	dw	65535	; assembler added errata NOP
  8662  000B74  A019               	btfss	___fladd@grs^0,0,c
  8663  000B76  EFBF  F005         	goto	u2571
  8664  000B7A  EFC2  F005         	goto	u2570
  8665  000B7E                     u2571:
  8666  000B7E  FFFF               	dw	65535	; assembler added errata NOP
  8667  000B80  EFC9  F005         	goto	l3003
  8668  000B84                     u2570:
  8669  000B84  FFFF               	dw	65535	; assembler added errata NOP
  8670  000B86  90D8               	bcf	status,0,c
  8671  000B88  3019               	rrcf	___fladd@grs^0,w,c
  8672  000B8A  0901               	iorlw	1
  8673  000B8C  6E19               	movwf	___fladd@grs^0,c
  8674  000B8E  EFCC  F005         	goto	l3005
  8675  000B92                     l3003:
  8676  000B92  FFFF               	dw	65535	; assembler added errata NOP
  8677  000B94  90D8               	bcf	status,0,c
  8678  000B96  3219               	rrcf	___fladd@grs^0,f,c
  8679  000B98                     l3005:
  8680  000B98  FFFF               	dw	65535	; assembler added errata NOP
  8681  000B9A  A00A               	btfss	___fladd@b^0,0,c
  8682  000B9C  EFD2  F005         	goto	u2581
  8683  000BA0  EFD5  F005         	goto	u2580
  8684  000BA4                     u2581:
  8685  000BA4  FFFF               	dw	65535	; assembler added errata NOP
  8686  000BA6  EFD7  F005         	goto	l3009
  8687  000BAA                     u2580:
  8688  000BAA  FFFF               	dw	65535	; assembler added errata NOP
  8689  000BAC  8E19               	bsf	___fladd@grs^0,7,c
  8690  000BAE                     l3009:
  8691  000BAE  FFFF               	dw	65535	; assembler added errata NOP
  8692  000BB0  340D               	rlcf	(___fladd@b+3)^0,w,c
  8693  000BB2  320D               	rrcf	(___fladd@b+3)^0,f,c
  8694  000BB4  320C               	rrcf	(___fladd@b+2)^0,f,c
  8695  000BB6  320B               	rrcf	(___fladd@b+1)^0,f,c
  8696  000BB8  320A               	rrcf	___fladd@b^0,f,c
  8697  000BBA  2A18               	incf	___fladd@bexp^0,f,c
  8698  000BBC                     l1020:
  8699  000BBC  FFFF               	dw	65535	; assembler added errata NOP
  8700  000BBE  5017               	movf	___fladd@aexp^0,w,c
  8701  000BC0  5C18               	subwf	___fladd@bexp^0,w,c
  8702  000BC2  A0D8               	btfss	status,0,c
  8703  000BC4  EFE6  F005         	goto	u2591
  8704  000BC8  EFE9  F005         	goto	u2590
  8705  000BCC                     u2591:
  8706  000BCC  FFFF               	dw	65535	; assembler added errata NOP
  8707  000BCE  EFB9  F005         	goto	l1021
  8708  000BD2                     u2590:
  8709  000BD2                     l1019:
  8710  000BD2  FFFF               	dw	65535	; assembler added errata NOP
  8711  000BD4  BC16               	btfsc	___fladd@signs^0,6,c
  8712  000BD6  EFEF  F005         	goto	u2601
  8713  000BDA  EFF2  F005         	goto	u2600
  8714  000BDE                     u2601:
  8715  000BDE  FFFF               	dw	65535	; assembler added errata NOP
  8716  000BE0  EF3F  F006         	goto	l3037
  8717  000BE4                     u2600:
  8718  000BE4  FFFF               	dw	65535	; assembler added errata NOP
  8719  000BE6  5018               	movf	___fladd@bexp^0,w,c
  8720  000BE8  A4D8               	btfss	status,2,c
  8721  000BEA  EFF9  F005         	goto	u2611
  8722  000BEE  EFFC  F005         	goto	u2610
  8723  000BF2                     u2611:
  8724  000BF2  FFFF               	dw	65535	; assembler added errata NOP
  8725  000BF4  EF07  F006         	goto	l3019
  8726  000BF8                     u2610:
  8727  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  8728  000BFA  0E00               	movlw	0
  8729  000BFC  6E0A               	movwf	?___fladd^0,c
  8730  000BFE  0E00               	movlw	0
  8731  000C00  6E0B               	movwf	(?___fladd+1)^0,c
  8732  000C02  0E00               	movlw	0
  8733  000C04  6E0C               	movwf	(?___fladd+2)^0,c
  8734  000C06  0E00               	movlw	0
  8735  000C08  6E0D               	movwf	(?___fladd+3)^0,c
  8736  000C0A  EF96  F007         	goto	l1028
  8737  000C0E                     l3019:
  8738  000C0E  FFFF               	dw	65535	; assembler added errata NOP
  8739  000C10  500E               	movf	___fladd@a^0,w,c
  8740  000C12  260A               	addwf	___fladd@b^0,f,c
  8741  000C14  500F               	movf	(___fladd@a+1)^0,w,c
  8742  000C16  220B               	addwfc	(___fladd@b+1)^0,f,c
  8743  000C18  5010               	movf	(___fladd@a+2)^0,w,c
  8744  000C1A  220C               	addwfc	(___fladd@b+2)^0,f,c
  8745  000C1C  5011               	movf	(___fladd@a+3)^0,w,c
  8746  000C1E  220D               	addwfc	(___fladd@b+3)^0,f,c
  8747  000C20  A00D               	btfss	(___fladd@b+3)^0,0,c
  8748  000C22  EF15  F006         	goto	u2621
  8749  000C26  EF18  F006         	goto	u2620
  8750  000C2A                     u2621:
  8751  000C2A  FFFF               	dw	65535	; assembler added errata NOP
  8752  000C2C  EFE3  F006         	goto	l3073
  8753  000C30                     u2620:
  8754  000C30  FFFF               	dw	65535	; assembler added errata NOP
  8755  000C32  A019               	btfss	___fladd@grs^0,0,c
  8756  000C34  EF1E  F006         	goto	u2631
  8757  000C38  EF21  F006         	goto	u2630
  8758  000C3C                     u2631:
  8759  000C3C  FFFF               	dw	65535	; assembler added errata NOP
  8760  000C3E  EF28  F006         	goto	l3027
  8761  000C42                     u2630:
  8762  000C42  FFFF               	dw	65535	; assembler added errata NOP
  8763  000C44  90D8               	bcf	status,0,c
  8764  000C46  3019               	rrcf	___fladd@grs^0,w,c
  8765  000C48  0901               	iorlw	1
  8766  000C4A  6E19               	movwf	___fladd@grs^0,c
  8767  000C4C  EF2B  F006         	goto	l3029
  8768  000C50                     l3027:
  8769  000C50  FFFF               	dw	65535	; assembler added errata NOP
  8770  000C52  90D8               	bcf	status,0,c
  8771  000C54  3219               	rrcf	___fladd@grs^0,f,c
  8772  000C56                     l3029:
  8773  000C56  FFFF               	dw	65535	; assembler added errata NOP
  8774  000C58  A00A               	btfss	___fladd@b^0,0,c
  8775  000C5A  EF31  F006         	goto	u2641
  8776  000C5E  EF34  F006         	goto	u2640
  8777  000C62                     u2641:
  8778  000C62  FFFF               	dw	65535	; assembler added errata NOP
  8779  000C64  EF36  F006         	goto	l3033
  8780  000C68                     u2640:
  8781  000C68  FFFF               	dw	65535	; assembler added errata NOP
  8782  000C6A  8E19               	bsf	___fladd@grs^0,7,c
  8783  000C6C                     l3033:
  8784  000C6C  FFFF               	dw	65535	; assembler added errata NOP
  8785  000C6E  340D               	rlcf	(___fladd@b+3)^0,w,c
  8786  000C70  320D               	rrcf	(___fladd@b+3)^0,f,c
  8787  000C72  320C               	rrcf	(___fladd@b+2)^0,f,c
  8788  000C74  320B               	rrcf	(___fladd@b+1)^0,f,c
  8789  000C76  320A               	rrcf	___fladd@b^0,f,c
  8790  000C78  2A18               	incf	___fladd@bexp^0,f,c
  8791  000C7A  EFE3  F006         	goto	l3073
  8792  000C7E                     l3037:
  8793  000C7E  FFFF               	dw	65535	; assembler added errata NOP
  8794  000C80  500E               	movf	___fladd@a^0,w,c
  8795  000C82  5C0A               	subwf	___fladd@b^0,w,c
  8796  000C84  500F               	movf	(___fladd@a+1)^0,w,c
  8797  000C86  580B               	subwfb	(___fladd@b+1)^0,w,c
  8798  000C88  5010               	movf	(___fladd@a+2)^0,w,c
  8799  000C8A  580C               	subwfb	(___fladd@b+2)^0,w,c
  8800  000C8C  500D               	movf	(___fladd@b+3)^0,w,c
  8801  000C8E  0A80               	xorlw	128
  8802  000C90  6E12               	movwf	??___fladd^0,c
  8803  000C92  5011               	movf	(___fladd@a+3)^0,w,c
  8804  000C94  0A80               	xorlw	128
  8805  000C96  5812               	subwfb	??___fladd^0,w,c
  8806  000C98  B0D8               	btfsc	status,0,c
  8807  000C9A  EF51  F006         	goto	u2651
  8808  000C9E  EF54  F006         	goto	u2650
  8809  000CA2                     u2651:
  8810  000CA2  FFFF               	dw	65535	; assembler added errata NOP
  8811  000CA4  EF82  F006         	goto	l3047
  8812  000CA8                     u2650:
  8813  000CA8  FFFF               	dw	65535	; assembler added errata NOP
  8814  000CAA  500A               	movf	___fladd@b^0,w,c
  8815  000CAC  5C0E               	subwf	___fladd@a^0,w,c
  8816  000CAE  6E12               	movwf	??___fladd^0,c
  8817  000CB0  500B               	movf	(___fladd@b+1)^0,w,c
  8818  000CB2  580F               	subwfb	(___fladd@a+1)^0,w,c
  8819  000CB4  6E13               	movwf	(??___fladd+1)^0,c
  8820  000CB6  500C               	movf	(___fladd@b+2)^0,w,c
  8821  000CB8  5810               	subwfb	(___fladd@a+2)^0,w,c
  8822  000CBA  6E14               	movwf	(??___fladd+2)^0,c
  8823  000CBC  500D               	movf	(___fladd@b+3)^0,w,c
  8824  000CBE  5811               	subwfb	(___fladd@a+3)^0,w,c
  8825  000CC0  6E15               	movwf	(??___fladd+3)^0,c
  8826  000CC2  0EFF               	movlw	255
  8827  000CC4  2412               	addwf	??___fladd^0,w,c
  8828  000CC6  6E0A               	movwf	___fladd@b^0,c
  8829  000CC8  0EFF               	movlw	255
  8830  000CCA  2013               	addwfc	(??___fladd+1)^0,w,c
  8831  000CCC  6E0B               	movwf	(___fladd@b+1)^0,c
  8832  000CCE  0EFF               	movlw	255
  8833  000CD0  2014               	addwfc	(??___fladd+2)^0,w,c
  8834  000CD2  6E0C               	movwf	(___fladd@b+2)^0,c
  8835  000CD4  0EFF               	movlw	255
  8836  000CD6  2015               	addwfc	(??___fladd+3)^0,w,c
  8837  000CD8  6E0D               	movwf	(___fladd@b+3)^0,c
  8838  000CDA  0E80               	movlw	128
  8839  000CDC  1A16               	xorwf	___fladd@signs^0,f,c
  8840  000CDE  6C19               	negf	___fladd@grs^0,c
  8841  000CE0  5019               	movf	___fladd@grs^0,w,c
  8842  000CE2  A4D8               	btfss	status,2,c
  8843  000CE4  EF76  F006         	goto	u2661
  8844  000CE8  EF79  F006         	goto	u2660
  8845  000CEC                     u2661:
  8846  000CEC  FFFF               	dw	65535	; assembler added errata NOP
  8847  000CEE  EF8B  F006         	goto	l1036
  8848  000CF2                     u2660:
  8849  000CF2  FFFF               	dw	65535	; assembler added errata NOP
  8850  000CF4  0E01               	movlw	1
  8851  000CF6  260A               	addwf	___fladd@b^0,f,c
  8852  000CF8  0E00               	movlw	0
  8853  000CFA  220B               	addwfc	(___fladd@b+1)^0,f,c
  8854  000CFC  220C               	addwfc	(___fladd@b+2)^0,f,c
  8855  000CFE  220D               	addwfc	(___fladd@b+3)^0,f,c
  8856  000D00  EF8B  F006         	goto	l1036
  8857  000D04                     l3047:
  8858  000D04  FFFF               	dw	65535	; assembler added errata NOP
  8859  000D06  500E               	movf	___fladd@a^0,w,c
  8860  000D08  5E0A               	subwf	___fladd@b^0,f,c
  8861  000D0A  500F               	movf	(___fladd@a+1)^0,w,c
  8862  000D0C  5A0B               	subwfb	(___fladd@b+1)^0,f,c
  8863  000D0E  5010               	movf	(___fladd@a+2)^0,w,c
  8864  000D10  5A0C               	subwfb	(___fladd@b+2)^0,f,c
  8865  000D12  5011               	movf	(___fladd@a+3)^0,w,c
  8866  000D14  5A0D               	subwfb	(___fladd@b+3)^0,f,c
  8867  000D16                     l1036:
  8868  000D16  FFFF               	dw	65535	; assembler added errata NOP
  8869  000D18  500A               	movf	___fladd@b^0,w,c
  8870  000D1A  100B               	iorwf	(___fladd@b+1)^0,w,c
  8871  000D1C  100C               	iorwf	(___fladd@b+2)^0,w,c
  8872  000D1E  100D               	iorwf	(___fladd@b+3)^0,w,c
  8873  000D20  A4D8               	btfss	status,2,c
  8874  000D22  EF95  F006         	goto	u2671
  8875  000D26  EF98  F006         	goto	u2670
  8876  000D2A                     u2671:
  8877  000D2A  FFFF               	dw	65535	; assembler added errata NOP
  8878  000D2C  EFDA  F006         	goto	l3071
  8879  000D30                     u2670:
  8880  000D30  FFFF               	dw	65535	; assembler added errata NOP
  8881  000D32  5019               	movf	___fladd@grs^0,w,c
  8882  000D34  A4D8               	btfss	status,2,c
  8883  000D36  EF9F  F006         	goto	u2681
  8884  000D3A  EFA2  F006         	goto	u2680
  8885  000D3E                     u2681:
  8886  000D3E  FFFF               	dw	65535	; assembler added errata NOP
  8887  000D40  EFDA  F006         	goto	l3071
  8888  000D44                     u2680:
  8889  000D44  FFFF               	dw	65535	; assembler added errata NOP
  8890  000D46  0E00               	movlw	0
  8891  000D48  6E0A               	movwf	?___fladd^0,c
  8892  000D4A  0E00               	movlw	0
  8893  000D4C  6E0B               	movwf	(?___fladd+1)^0,c
  8894  000D4E  0E00               	movlw	0
  8895  000D50  6E0C               	movwf	(?___fladd+2)^0,c
  8896  000D52  0E00               	movlw	0
  8897  000D54  6E0D               	movwf	(?___fladd+3)^0,c
  8898  000D56  EF96  F007         	goto	l1028
  8899  000D5A                     l3055:
  8900  000D5A  FFFF               	dw	65535	; assembler added errata NOP
  8901  000D5C  90D8               	bcf	status,0,c
  8902  000D5E  360A               	rlcf	___fladd@b^0,f,c
  8903  000D60  360B               	rlcf	(___fladd@b+1)^0,f,c
  8904  000D62  360C               	rlcf	(___fladd@b+2)^0,f,c
  8905  000D64  360D               	rlcf	(___fladd@b+3)^0,f,c
  8906  000D66  AE19               	btfss	___fladd@grs^0,7,c
  8907  000D68  EFB8  F006         	goto	u2691
  8908  000D6C  EFBB  F006         	goto	u2690
  8909  000D70                     u2691:
  8910  000D70  FFFF               	dw	65535	; assembler added errata NOP
  8911  000D72  EFBD  F006         	goto	l3061
  8912  000D76                     u2690:
  8913  000D76  FFFF               	dw	65535	; assembler added errata NOP
  8914  000D78  800A               	bsf	___fladd@b^0,0,c
  8915  000D7A                     l3061:
  8916  000D7A  FFFF               	dw	65535	; assembler added errata NOP
  8917  000D7C  A019               	btfss	___fladd@grs^0,0,c
  8918  000D7E  EFC3  F006         	goto	u2701
  8919  000D82  EFC6  F006         	goto	u2700
  8920  000D86                     u2701:
  8921  000D86  FFFF               	dw	65535	; assembler added errata NOP
  8922  000D88  EFCB  F006         	goto	l3065
  8923  000D8C                     u2700:
  8924  000D8C  FFFF               	dw	65535	; assembler added errata NOP
  8925  000D8E  80D8               	bsf	status,0,c
  8926  000D90  3619               	rlcf	___fladd@grs^0,f,c
  8927  000D92  EFCE  F006         	goto	l3067
  8928  000D96                     l3065:
  8929  000D96  FFFF               	dw	65535	; assembler added errata NOP
  8930  000D98  90D8               	bcf	status,0,c
  8931  000D9A  3619               	rlcf	___fladd@grs^0,f,c
  8932  000D9C                     l3067:
  8933  000D9C  FFFF               	dw	65535	; assembler added errata NOP
  8934  000D9E  5018               	movf	___fladd@bexp^0,w,c
  8935  000DA0  B4D8               	btfsc	status,2,c
  8936  000DA2  EFD5  F006         	goto	u2711
  8937  000DA6  EFD8  F006         	goto	u2710
  8938  000DAA                     u2711:
  8939  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  8940  000DAC  EFDA  F006         	goto	l3071
  8941  000DB0                     u2710:
  8942  000DB0  FFFF               	dw	65535	; assembler added errata NOP
  8943  000DB2  0618               	decf	___fladd@bexp^0,f,c
  8944  000DB4                     l3071:
  8945  000DB4  FFFF               	dw	65535	; assembler added errata NOP
  8946  000DB6  AE0C               	btfss	(___fladd@b+2)^0,7,c
  8947  000DB8  EFE0  F006         	goto	u2721
  8948  000DBC  EFE3  F006         	goto	u2720
  8949  000DC0                     u2721:
  8950  000DC0  FFFF               	dw	65535	; assembler added errata NOP
  8951  000DC2  EFAD  F006         	goto	l3055
  8952  000DC6                     u2720:
  8953  000DC6                     l3073:
  8954  000DC6  FFFF               	dw	65535	; assembler added errata NOP
  8955  000DC8  0E00               	movlw	0
  8956  000DCA  6E17               	movwf	___fladd@aexp^0,c
  8957  000DCC  AE19               	btfss	___fladd@grs^0,7,c
  8958  000DCE  EFEB  F006         	goto	u2731
  8959  000DD2  EFEE  F006         	goto	u2730
  8960  000DD6                     u2731:
  8961  000DD6  FFFF               	dw	65535	; assembler added errata NOP
  8962  000DD8  EF0D  F007         	goto	l1045
  8963  000DDC                     u2730:
  8964  000DDC  FFFF               	dw	65535	; assembler added errata NOP
  8965  000DDE  C019  F012         	movff	___fladd@grs,??___fladd
  8966  000DE2  0E7F               	movlw	127
  8967  000DE4  1612               	andwf	??___fladd^0,f,c
  8968  000DE6  B4D8               	btfsc	status,2,c
  8969  000DE8  EFF8  F006         	goto	u2741
  8970  000DEC  EFFB  F006         	goto	u2740
  8971  000DF0                     u2741:
  8972  000DF0  FFFF               	dw	65535	; assembler added errata NOP
  8973  000DF2  EF01  F007         	goto	l1046
  8974  000DF6                     u2740:
  8975  000DF6  FFFF               	dw	65535	; assembler added errata NOP
  8976  000DF8                     l3079:
  8977  000DF8  FFFF               	dw	65535	; assembler added errata NOP
  8978  000DFA  0E01               	movlw	1
  8979  000DFC  6E17               	movwf	___fladd@aexp^0,c
  8980  000DFE  EF0D  F007         	goto	l1045
  8981  000E02                     l1046:
  8982  000E02  FFFF               	dw	65535	; assembler added errata NOP
  8983  000E04  A00A               	btfss	___fladd@b^0,0,c
  8984  000E06  EF07  F007         	goto	u2751
  8985  000E0A  EF0A  F007         	goto	u2750
  8986  000E0E                     u2751:
  8987  000E0E  FFFF               	dw	65535	; assembler added errata NOP
  8988  000E10  EF0D  F007         	goto	l1045
  8989  000E14                     u2750:
  8990  000E14  FFFF               	dw	65535	; assembler added errata NOP
  8991  000E16  EFFC  F006         	goto	l3079
  8992  000E1A                     l1045:
  8993  000E1A  FFFF               	dw	65535	; assembler added errata NOP
  8994  000E1C  5017               	movf	___fladd@aexp^0,w,c
  8995  000E1E  B4D8               	btfsc	status,2,c
  8996  000E20  EF14  F007         	goto	u2761
  8997  000E24  EF17  F007         	goto	u2760
  8998  000E28                     u2761:
  8999  000E28  FFFF               	dw	65535	; assembler added errata NOP
  9000  000E2A  EF47  F007         	goto	l3091
  9001  000E2E                     u2760:
  9002  000E2E  FFFF               	dw	65535	; assembler added errata NOP
  9003  000E30  0E01               	movlw	1
  9004  000E32  260A               	addwf	___fladd@b^0,f,c
  9005  000E34  0E00               	movlw	0
  9006  000E36  220B               	addwfc	(___fladd@b+1)^0,f,c
  9007  000E38  220C               	addwfc	(___fladd@b+2)^0,f,c
  9008  000E3A  220D               	addwfc	(___fladd@b+3)^0,f,c
  9009  000E3C  A00D               	btfss	(___fladd@b+3)^0,0,c
  9010  000E3E  EF23  F007         	goto	u2771
  9011  000E42  EF26  F007         	goto	u2770
  9012  000E46                     u2771:
  9013  000E46  FFFF               	dw	65535	; assembler added errata NOP
  9014  000E48  EF47  F007         	goto	l3091
  9015  000E4C                     u2770:
  9016  000E4C  FFFF               	dw	65535	; assembler added errata NOP
  9017  000E4E  C00A  F012         	movff	___fladd@b,??___fladd
  9018  000E52  C00B  F013         	movff	___fladd@b+1,??___fladd+1
  9019  000E56  C00C  F014         	movff	___fladd@b+2,??___fladd+2
  9020  000E5A  C00D  F015         	movff	___fladd@b+3,??___fladd+3
  9021  000E5E  3415               	rlcf	(??___fladd+3)^0,w,c
  9022  000E60  3215               	rrcf	(??___fladd+3)^0,f,c
  9023  000E62  3214               	rrcf	(??___fladd+2)^0,f,c
  9024  000E64  3213               	rrcf	(??___fladd+1)^0,f,c
  9025  000E66  3212               	rrcf	??___fladd^0,f,c
  9026  000E68  C012  F00A         	movff	??___fladd,___fladd@b
  9027  000E6C  C013  F00B         	movff	??___fladd+1,___fladd@b+1
  9028  000E70  C014  F00C         	movff	??___fladd+2,___fladd@b+2
  9029  000E74  C015  F00D         	movff	??___fladd+3,___fladd@b+3
  9030  000E78  2818               	incf	___fladd@bexp^0,w,c
  9031  000E7A  B4D8               	btfsc	status,2,c
  9032  000E7C  EF42  F007         	goto	u2781
  9033  000E80  EF45  F007         	goto	u2780
  9034  000E84                     u2781:
  9035  000E84  FFFF               	dw	65535	; assembler added errata NOP
  9036  000E86  EF47  F007         	goto	l3091
  9037  000E8A                     u2780:
  9038  000E8A  FFFF               	dw	65535	; assembler added errata NOP
  9039  000E8C  2A18               	incf	___fladd@bexp^0,f,c
  9040  000E8E                     l3091:
  9041  000E8E  FFFF               	dw	65535	; assembler added errata NOP
  9042  000E90  2818               	incf	___fladd@bexp^0,w,c
  9043  000E92  B4D8               	btfsc	status,2,c
  9044  000E94  EF4E  F007         	goto	u2791
  9045  000E98  EF51  F007         	goto	u2790
  9046  000E9C                     u2791:
  9047  000E9C  FFFF               	dw	65535	; assembler added errata NOP
  9048  000E9E  EF5B  F007         	goto	l3095
  9049  000EA2                     u2790:
  9050  000EA2  FFFF               	dw	65535	; assembler added errata NOP
  9051  000EA4  5018               	movf	___fladd@bexp^0,w,c
  9052  000EA6  A4D8               	btfss	status,2,c
  9053  000EA8  EF58  F007         	goto	u2801
  9054  000EAC  EF5B  F007         	goto	u2800
  9055  000EB0                     u2801:
  9056  000EB0  FFFF               	dw	65535	; assembler added errata NOP
  9057  000EB2  EF70  F007         	goto	l3099
  9058  000EB6                     u2800:
  9059  000EB6                     l3095:
  9060  000EB6  FFFF               	dw	65535	; assembler added errata NOP
  9061  000EB8  0E00               	movlw	0
  9062  000EBA  6E0A               	movwf	___fladd@b^0,c
  9063  000EBC  0E00               	movlw	0
  9064  000EBE  6E0B               	movwf	(___fladd@b+1)^0,c
  9065  000EC0  0E00               	movlw	0
  9066  000EC2  6E0C               	movwf	(___fladd@b+2)^0,c
  9067  000EC4  0E00               	movlw	0
  9068  000EC6  6E0D               	movwf	(___fladd@b+3)^0,c
  9069  000EC8  5018               	movf	___fladd@bexp^0,w,c
  9070  000ECA  A4D8               	btfss	status,2,c
  9071  000ECC  EF6A  F007         	goto	u2811
  9072  000ED0  EF6D  F007         	goto	u2810
  9073  000ED4                     u2811:
  9074  000ED4  FFFF               	dw	65535	; assembler added errata NOP
  9075  000ED6  EF70  F007         	goto	l3099
  9076  000EDA                     u2810:
  9077  000EDA  FFFF               	dw	65535	; assembler added errata NOP
  9078  000EDC  0E00               	movlw	0
  9079  000EDE  6E16               	movwf	___fladd@signs^0,c
  9080  000EE0                     l3099:
  9081  000EE0  FFFF               	dw	65535	; assembler added errata NOP
  9082  000EE2  A018               	btfss	___fladd@bexp^0,0,c
  9083  000EE4  EF76  F007         	goto	u2821
  9084  000EE8  EF79  F007         	goto	u2820
  9085  000EEC                     u2821:
  9086  000EEC  FFFF               	dw	65535	; assembler added errata NOP
  9087  000EEE  EF7D  F007         	goto	l3103
  9088  000EF2                     u2820:
  9089  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  9090  000EF4  8E0C               	bsf	(___fladd@b+2)^0,7,c
  9091  000EF6  EF7F  F007         	goto	l3105
  9092  000EFA                     l3103:
  9093  000EFA  FFFF               	dw	65535	; assembler added errata NOP
  9094  000EFC  9E0C               	bcf	(___fladd@b+2)^0,7,c
  9095  000EFE                     l3105:
  9096  000EFE  FFFF               	dw	65535	; assembler added errata NOP
  9097  000F00  90D8               	bcf	status,0,c
  9098  000F02  3018               	rrcf	___fladd@bexp^0,w,c
  9099  000F04  6E0D               	movwf	(___fladd@b+3)^0,c
  9100  000F06  AE16               	btfss	___fladd@signs^0,7,c
  9101  000F08  EF88  F007         	goto	u2831
  9102  000F0C  EF8B  F007         	goto	u2830
  9103  000F10                     u2831:
  9104  000F10  FFFF               	dw	65535	; assembler added errata NOP
  9105  000F12  EF8D  F007         	goto	l3111
  9106  000F16                     u2830:
  9107  000F16  FFFF               	dw	65535	; assembler added errata NOP
  9108  000F18  8E0D               	bsf	(___fladd@b+3)^0,7,c
  9109  000F1A                     l3111:
  9110  000F1A  FFFF               	dw	65535	; assembler added errata NOP
  9111  000F1C  C00A  F00A         	movff	___fladd@b,?___fladd
  9112  000F20  C00B  F00B         	movff	___fladd@b+1,?___fladd+1
  9113  000F24  C00C  F00C         	movff	___fladd@b+2,?___fladd+2
  9114  000F28  C00D  F00D         	movff	___fladd@b+3,?___fladd+3
  9115  000F2C                     l1028:
  9116  000F2C  FFFF               	dw	65535	; assembler added errata NOP
  9117  000F2E  0012               	return		;funcret
  9118  000F30  FFFF               	dw	65535	; errata NOP
  9119  000F32                     __end_of___fladd:
  9120                           	callstack 0
  9121                           
  9122 ;; *************** function ___flneg *****************
  9123 ;; Defined at:
  9124 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  f1              4    9[COMRAM] unsigned char 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  4    9[COMRAM] unsigned char 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2, status,0
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9138 ;;      Params:         4       0       0       0       0       0       0
  9139 ;;      Locals:         0       0       0       0       0       0       0
  9140 ;;      Temps:          0       0       0       0       0       0       0
  9141 ;;      Totals:         4       0       0       0       0       0       0
  9142 ;;Total ram usage:        4 bytes
  9143 ;; Hardware stack levels used: 1
  9144 ;; Hardware stack levels required when called: 2
  9145 ;; This function calls:
  9146 ;;		Nothing
  9147 ;; This function is called by:
  9148 ;;		_roundf
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           	psect	text34
  9153  003454                     __ptext34:
  9154                           	callstack 0
  9155  003454                     ___flneg:
  9156                           	callstack 0
  9157  003454  FFFF               	dw	65535	; assembler added errata NOP
  9158  003456  500A               	movf	___flneg@f1^0,w,c
  9159  003458  100B               	iorwf	(___flneg@f1+1)^0,w,c
  9160  00345A  100C               	iorwf	(___flneg@f1+2)^0,w,c
  9161  00345C  100D               	iorwf	(___flneg@f1+3)^0,w,c
  9162  00345E  B4D8               	btfsc	status,2,c
  9163  003460  EF34  F01A         	goto	u3711
  9164  003464  EF37  F01A         	goto	u3710
  9165  003468                     u3711:
  9166  003468  FFFF               	dw	65535	; assembler added errata NOP
  9167  00346A  EF40  F01A         	goto	l3823
  9168  00346E                     u3710:
  9169  00346E  FFFF               	dw	65535	; assembler added errata NOP
  9170  003470  0E00               	movlw	0
  9171  003472  1A0A               	xorwf	___flneg@f1^0,f,c
  9172  003474  0E00               	movlw	0
  9173  003476  1A0B               	xorwf	(___flneg@f1+1)^0,f,c
  9174  003478  0E00               	movlw	0
  9175  00347A  1A0C               	xorwf	(___flneg@f1+2)^0,f,c
  9176  00347C  0E80               	movlw	128
  9177  00347E  1A0D               	xorwf	(___flneg@f1+3)^0,f,c
  9178  003480                     l3823:
  9179  003480  FFFF               	dw	65535	; assembler added errata NOP
  9180  003482  C00A  F00A         	movff	___flneg@f1,?___flneg
  9181  003486  C00B  F00B         	movff	___flneg@f1+1,?___flneg+1
  9182  00348A  C00C  F00C         	movff	___flneg@f1+2,?___flneg+2
  9183  00348E  C00D  F00D         	movff	___flneg@f1+3,?___flneg+3
  9184  003492  0012               	return		;funcret
  9185  003494  FFFF               	dw	65535	; errata NOP
  9186  003496                     __end_of___flneg:
  9187                           	callstack 0
  9188                           
  9189 ;; *************** function ___flmul *****************
  9190 ;; Defined at:
  9191 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  b               4    9[COMRAM] unsigned char 
  9194 ;;  a               4   13[COMRAM] unsigned char 
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;  prod            4   28[COMRAM] struct .
  9197 ;;  grs             4   22[COMRAM] unsigned long 
  9198 ;;  temp            2   32[COMRAM] struct .
  9199 ;;  bexp            1   27[COMRAM] unsigned char 
  9200 ;;  aexp            1   26[COMRAM] unsigned char 
  9201 ;;  sign            1   21[COMRAM] unsigned char 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  4    9[COMRAM] unsigned char 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0, prodl, prodh
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9211 ;;      Params:         8       0       0       0       0       0       0
  9212 ;;      Locals:        13       0       0       0       0       0       0
  9213 ;;      Temps:          4       0       0       0       0       0       0
  9214 ;;      Totals:        25       0       0       0       0       0       0
  9215 ;;Total ram usage:       25 bytes
  9216 ;; Hardware stack levels used: 1
  9217 ;; Hardware stack levels required when called: 2
  9218 ;; This function calls:
  9219 ;;		Nothing
  9220 ;; This function is called by:
  9221 ;;		_roundf
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text35
  9226  000F32                     __ptext35:
  9227                           	callstack 0
  9228  000F32                     ___flmul:
  9229                           	callstack 0
  9230  000F32  FFFF               	dw	65535	; assembler added errata NOP
  9231  000F34  500D               	movf	(___flmul@b+3)^0,w,c
  9232  000F36  0B80               	andlw	128
  9233  000F38  6E16               	movwf	___flmul@sign^0,c
  9234  000F3A  500D               	movf	(___flmul@b+3)^0,w,c
  9235  000F3C  240D               	addwf	(___flmul@b+3)^0,w,c
  9236  000F3E  6E1C               	movwf	___flmul@bexp^0,c
  9237  000F40  AE0C               	btfss	(___flmul@b+2)^0,7,c
  9238  000F42  EFA5  F007         	goto	u3471
  9239  000F46  EFA8  F007         	goto	u3470
  9240  000F4A                     u3471:
  9241  000F4A  FFFF               	dw	65535	; assembler added errata NOP
  9242  000F4C  EFAA  F007         	goto	l3667
  9243  000F50                     u3470:
  9244  000F50  FFFF               	dw	65535	; assembler added errata NOP
  9245  000F52  801C               	bsf	___flmul@bexp^0,0,c
  9246  000F54                     l3667:
  9247  000F54  FFFF               	dw	65535	; assembler added errata NOP
  9248  000F56  501C               	movf	___flmul@bexp^0,w,c
  9249  000F58  B4D8               	btfsc	status,2,c
  9250  000F5A  EFB1  F007         	goto	u3481
  9251  000F5E  EFB4  F007         	goto	u3480
  9252  000F62                     u3481:
  9253  000F62  FFFF               	dw	65535	; assembler added errata NOP
  9254  000F64  EFCB  F007         	goto	l3675
  9255  000F68                     u3480:
  9256  000F68  FFFF               	dw	65535	; assembler added errata NOP
  9257  000F6A  281C               	incf	___flmul@bexp^0,w,c
  9258  000F6C  A4D8               	btfss	status,2,c
  9259  000F6E  EFBB  F007         	goto	u3491
  9260  000F72  EFBE  F007         	goto	u3490
  9261  000F76                     u3491:
  9262  000F76  FFFF               	dw	65535	; assembler added errata NOP
  9263  000F78  EFC7  F007         	goto	l3673
  9264  000F7C                     u3490:
  9265  000F7C  FFFF               	dw	65535	; assembler added errata NOP
  9266  000F7E  0E00               	movlw	0
  9267  000F80  6E0A               	movwf	___flmul@b^0,c
  9268  000F82  0E00               	movlw	0
  9269  000F84  6E0B               	movwf	(___flmul@b+1)^0,c
  9270  000F86  0E00               	movlw	0
  9271  000F88  6E0C               	movwf	(___flmul@b+2)^0,c
  9272  000F8A  0E00               	movlw	0
  9273  000F8C  6E0D               	movwf	(___flmul@b+3)^0,c
  9274  000F8E                     l3673:
  9275  000F8E  FFFF               	dw	65535	; assembler added errata NOP
  9276  000F90  8E0C               	bsf	(___flmul@b+2)^0,7,c
  9277  000F92  EFD4  F007         	goto	l3677
  9278  000F96                     l3675:
  9279  000F96  FFFF               	dw	65535	; assembler added errata NOP
  9280  000F98  0E00               	movlw	0
  9281  000F9A  6E0A               	movwf	___flmul@b^0,c
  9282  000F9C  0E00               	movlw	0
  9283  000F9E  6E0B               	movwf	(___flmul@b+1)^0,c
  9284  000FA0  0E00               	movlw	0
  9285  000FA2  6E0C               	movwf	(___flmul@b+2)^0,c
  9286  000FA4  0E00               	movlw	0
  9287  000FA6  6E0D               	movwf	(___flmul@b+3)^0,c
  9288  000FA8                     l3677:
  9289  000FA8  FFFF               	dw	65535	; assembler added errata NOP
  9290  000FAA  5011               	movf	(___flmul@a+3)^0,w,c
  9291  000FAC  0B80               	andlw	128
  9292  000FAE  1A16               	xorwf	___flmul@sign^0,f,c
  9293  000FB0  5011               	movf	(___flmul@a+3)^0,w,c
  9294  000FB2  2411               	addwf	(___flmul@a+3)^0,w,c
  9295  000FB4  6E1B               	movwf	___flmul@aexp^0,c
  9296  000FB6  AE10               	btfss	(___flmul@a+2)^0,7,c
  9297  000FB8  EFE0  F007         	goto	u3501
  9298  000FBC  EFE3  F007         	goto	u3500
  9299  000FC0                     u3501:
  9300  000FC0  FFFF               	dw	65535	; assembler added errata NOP
  9301  000FC2  EFE5  F007         	goto	l3685
  9302  000FC6                     u3500:
  9303  000FC6  FFFF               	dw	65535	; assembler added errata NOP
  9304  000FC8  801B               	bsf	___flmul@aexp^0,0,c
  9305  000FCA                     l3685:
  9306  000FCA  FFFF               	dw	65535	; assembler added errata NOP
  9307  000FCC  501B               	movf	___flmul@aexp^0,w,c
  9308  000FCE  B4D8               	btfsc	status,2,c
  9309  000FD0  EFEC  F007         	goto	u3511
  9310  000FD4  EFEF  F007         	goto	u3510
  9311  000FD8                     u3511:
  9312  000FD8  FFFF               	dw	65535	; assembler added errata NOP
  9313  000FDA  EF06  F008         	goto	l3693
  9314  000FDE                     u3510:
  9315  000FDE  FFFF               	dw	65535	; assembler added errata NOP
  9316  000FE0  281B               	incf	___flmul@aexp^0,w,c
  9317  000FE2  A4D8               	btfss	status,2,c
  9318  000FE4  EFF6  F007         	goto	u3521
  9319  000FE8  EFF9  F007         	goto	u3520
  9320  000FEC                     u3521:
  9321  000FEC  FFFF               	dw	65535	; assembler added errata NOP
  9322  000FEE  EF02  F008         	goto	l3691
  9323  000FF2                     u3520:
  9324  000FF2  FFFF               	dw	65535	; assembler added errata NOP
  9325  000FF4  0E00               	movlw	0
  9326  000FF6  6E0E               	movwf	___flmul@a^0,c
  9327  000FF8  0E00               	movlw	0
  9328  000FFA  6E0F               	movwf	(___flmul@a+1)^0,c
  9329  000FFC  0E00               	movlw	0
  9330  000FFE  6E10               	movwf	(___flmul@a+2)^0,c
  9331  001000  0E00               	movlw	0
  9332  001002  6E11               	movwf	(___flmul@a+3)^0,c
  9333  001004                     l3691:
  9334  001004  FFFF               	dw	65535	; assembler added errata NOP
  9335  001006  8E10               	bsf	(___flmul@a+2)^0,7,c
  9336  001008  EF0F  F008         	goto	l1105
  9337  00100C                     l3693:
  9338  00100C  FFFF               	dw	65535	; assembler added errata NOP
  9339  00100E  0E00               	movlw	0
  9340  001010  6E0E               	movwf	___flmul@a^0,c
  9341  001012  0E00               	movlw	0
  9342  001014  6E0F               	movwf	(___flmul@a+1)^0,c
  9343  001016  0E00               	movlw	0
  9344  001018  6E10               	movwf	(___flmul@a+2)^0,c
  9345  00101A  0E00               	movlw	0
  9346  00101C  6E11               	movwf	(___flmul@a+3)^0,c
  9347  00101E                     l1105:
  9348  00101E  FFFF               	dw	65535	; assembler added errata NOP
  9349  001020  501B               	movf	___flmul@aexp^0,w,c
  9350  001022  B4D8               	btfsc	status,2,c
  9351  001024  EF16  F008         	goto	u3531
  9352  001028  EF19  F008         	goto	u3530
  9353  00102C                     u3531:
  9354  00102C  FFFF               	dw	65535	; assembler added errata NOP
  9355  00102E  EF23  F008         	goto	l3697
  9356  001032                     u3530:
  9357  001032  FFFF               	dw	65535	; assembler added errata NOP
  9358  001034  501C               	movf	___flmul@bexp^0,w,c
  9359  001036  A4D8               	btfss	status,2,c
  9360  001038  EF20  F008         	goto	u3541
  9361  00103C  EF23  F008         	goto	u3540
  9362  001040                     u3541:
  9363  001040  FFFF               	dw	65535	; assembler added errata NOP
  9364  001042  EF2E  F008         	goto	l3701
  9365  001046                     u3540:
  9366  001046                     l3697:
  9367  001046  FFFF               	dw	65535	; assembler added errata NOP
  9368  001048  0E00               	movlw	0
  9369  00104A  6E0A               	movwf	?___flmul^0,c
  9370  00104C  0E00               	movlw	0
  9371  00104E  6E0B               	movwf	(?___flmul+1)^0,c
  9372  001050  0E00               	movlw	0
  9373  001052  6E0C               	movwf	(?___flmul+2)^0,c
  9374  001054  0E00               	movlw	0
  9375  001056  6E0D               	movwf	(?___flmul+3)^0,c
  9376  001058  EFE8  F009         	goto	l1109
  9377  00105C                     l3701:
  9378  00105C  FFFF               	dw	65535	; assembler added errata NOP
  9379  00105E  5010               	movf	(___flmul@a+2)^0,w,c
  9380  001060  020A               	mulwf	___flmul@b^0,c
  9381  001062  CFF3 F021          	movff	prodl,___flmul@temp
  9382  001066  CFF4 F022          	movff	prodh,___flmul@temp+1
  9383  00106A  5021               	movf	___flmul@temp^0,w,c
  9384  00106C  6E17               	movwf	___flmul@grs^0,c
  9385  00106E  6A18               	clrf	(___flmul@grs+1)^0,c
  9386  001070  6A19               	clrf	(___flmul@grs+2)^0,c
  9387  001072  6A1A               	clrf	(___flmul@grs+3)^0,c
  9388  001074  5022               	movf	(___flmul@temp+1)^0,w,c
  9389  001076  6E1D               	movwf	___flmul@prod^0,c
  9390  001078  6A1E               	clrf	(___flmul@prod+1)^0,c
  9391  00107A  6A1F               	clrf	(___flmul@prod+2)^0,c
  9392  00107C  6A20               	clrf	(___flmul@prod+3)^0,c
  9393  00107E  500F               	movf	(___flmul@a+1)^0,w,c
  9394  001080  020B               	mulwf	(___flmul@b+1)^0,c
  9395  001082  CFF3 F021          	movff	prodl,___flmul@temp
  9396  001086  CFF4 F022          	movff	prodh,___flmul@temp+1
  9397  00108A  5021               	movf	___flmul@temp^0,w,c
  9398  00108C  2617               	addwf	___flmul@grs^0,f,c
  9399  00108E  0E00               	movlw	0
  9400  001090  2218               	addwfc	(___flmul@grs+1)^0,f,c
  9401  001092  2219               	addwfc	(___flmul@grs+2)^0,f,c
  9402  001094  221A               	addwfc	(___flmul@grs+3)^0,f,c
  9403  001096  5022               	movf	(___flmul@temp+1)^0,w,c
  9404  001098  261D               	addwf	___flmul@prod^0,f,c
  9405  00109A  0E00               	movlw	0
  9406  00109C  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9407  00109E  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9408  0010A0  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9409  0010A2  500E               	movf	___flmul@a^0,w,c
  9410  0010A4  020C               	mulwf	(___flmul@b+2)^0,c
  9411  0010A6  CFF3 F021          	movff	prodl,___flmul@temp
  9412  0010AA  CFF4 F022          	movff	prodh,___flmul@temp+1
  9413  0010AE  5021               	movf	___flmul@temp^0,w,c
  9414  0010B0  2617               	addwf	___flmul@grs^0,f,c
  9415  0010B2  0E00               	movlw	0
  9416  0010B4  2218               	addwfc	(___flmul@grs+1)^0,f,c
  9417  0010B6  2219               	addwfc	(___flmul@grs+2)^0,f,c
  9418  0010B8  221A               	addwfc	(___flmul@grs+3)^0,f,c
  9419  0010BA  5022               	movf	(___flmul@temp+1)^0,w,c
  9420  0010BC  261D               	addwf	___flmul@prod^0,f,c
  9421  0010BE  0E00               	movlw	0
  9422  0010C0  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9423  0010C2  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9424  0010C4  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9425  0010C6  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  9426  0010CA  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  9427  0010CE  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  9428  0010D2  6A17               	clrf	___flmul@grs^0,c
  9429  0010D4  500E               	movf	___flmul@a^0,w,c
  9430  0010D6  020B               	mulwf	(___flmul@b+1)^0,c
  9431  0010D8  CFF3 F021          	movff	prodl,___flmul@temp
  9432  0010DC  CFF4 F022          	movff	prodh,___flmul@temp+1
  9433  0010E0  5021               	movf	___flmul@temp^0,w,c
  9434  0010E2  2617               	addwf	___flmul@grs^0,f,c
  9435  0010E4  5022               	movf	(___flmul@temp+1)^0,w,c
  9436  0010E6  2218               	addwfc	(___flmul@grs+1)^0,f,c
  9437  0010E8  0E00               	movlw	0
  9438  0010EA  2219               	addwfc	(___flmul@grs+2)^0,f,c
  9439  0010EC  0E00               	movlw	0
  9440  0010EE  221A               	addwfc	(___flmul@grs+3)^0,f,c
  9441  0010F0  500F               	movf	(___flmul@a+1)^0,w,c
  9442  0010F2  020A               	mulwf	___flmul@b^0,c
  9443  0010F4  CFF3 F021          	movff	prodl,___flmul@temp
  9444  0010F8  CFF4 F022          	movff	prodh,___flmul@temp+1
  9445  0010FC  5021               	movf	___flmul@temp^0,w,c
  9446  0010FE  2617               	addwf	___flmul@grs^0,f,c
  9447  001100  5022               	movf	(___flmul@temp+1)^0,w,c
  9448  001102  2218               	addwfc	(___flmul@grs+1)^0,f,c
  9449  001104  0E00               	movlw	0
  9450  001106  2219               	addwfc	(___flmul@grs+2)^0,f,c
  9451  001108  0E00               	movlw	0
  9452  00110A  221A               	addwfc	(___flmul@grs+3)^0,f,c
  9453  00110C  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  9454  001110  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  9455  001114  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  9456  001118  6A17               	clrf	___flmul@grs^0,c
  9457  00111A  500E               	movf	___flmul@a^0,w,c
  9458  00111C  020A               	mulwf	___flmul@b^0,c
  9459  00111E  CFF3 F021          	movff	prodl,___flmul@temp
  9460  001122  CFF4 F022          	movff	prodh,___flmul@temp+1
  9461  001126  5021               	movf	___flmul@temp^0,w,c
  9462  001128  2617               	addwf	___flmul@grs^0,f,c
  9463  00112A  5022               	movf	(___flmul@temp+1)^0,w,c
  9464  00112C  2218               	addwfc	(___flmul@grs+1)^0,f,c
  9465  00112E  0E00               	movlw	0
  9466  001130  2219               	addwfc	(___flmul@grs+2)^0,f,c
  9467  001132  0E00               	movlw	0
  9468  001134  221A               	addwfc	(___flmul@grs+3)^0,f,c
  9469  001136  5010               	movf	(___flmul@a+2)^0,w,c
  9470  001138  020B               	mulwf	(___flmul@b+1)^0,c
  9471  00113A  CFF3 F021          	movff	prodl,___flmul@temp
  9472  00113E  CFF4 F022          	movff	prodh,___flmul@temp+1
  9473  001142  5021               	movf	___flmul@temp^0,w,c
  9474  001144  261D               	addwf	___flmul@prod^0,f,c
  9475  001146  5022               	movf	(___flmul@temp+1)^0,w,c
  9476  001148  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9477  00114A  0E00               	movlw	0
  9478  00114C  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9479  00114E  0E00               	movlw	0
  9480  001150  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9481  001152  500F               	movf	(___flmul@a+1)^0,w,c
  9482  001154  020C               	mulwf	(___flmul@b+2)^0,c
  9483  001156  CFF3 F021          	movff	prodl,___flmul@temp
  9484  00115A  CFF4 F022          	movff	prodh,___flmul@temp+1
  9485  00115E  5021               	movf	___flmul@temp^0,w,c
  9486  001160  261D               	addwf	___flmul@prod^0,f,c
  9487  001162  5022               	movf	(___flmul@temp+1)^0,w,c
  9488  001164  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9489  001166  0E00               	movlw	0
  9490  001168  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9491  00116A  0E00               	movlw	0
  9492  00116C  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9493  00116E  5010               	movf	(___flmul@a+2)^0,w,c
  9494  001170  020C               	mulwf	(___flmul@b+2)^0,c
  9495  001172  CFF3 F021          	movff	prodl,___flmul@temp
  9496  001176  CFF4 F022          	movff	prodh,___flmul@temp+1
  9497  00117A  5021               	movf	___flmul@temp^0,w,c
  9498  00117C  6E12               	movwf	??___flmul^0,c
  9499  00117E  5022               	movf	(___flmul@temp+1)^0,w,c
  9500  001180  6E13               	movwf	(??___flmul+1)^0,c
  9501  001182  6A14               	clrf	(??___flmul+2)^0,c
  9502  001184  6A15               	clrf	(??___flmul+3)^0,c
  9503  001186  C014  F015         	movff	??___flmul+2,??___flmul+3
  9504  00118A  C013  F014         	movff	??___flmul+1,??___flmul+2
  9505  00118E  C012  F013         	movff	??___flmul,??___flmul+1
  9506  001192  6A12               	clrf	??___flmul^0,c
  9507  001194  5012               	movf	??___flmul^0,w,c
  9508  001196  261D               	addwf	___flmul@prod^0,f,c
  9509  001198  5013               	movf	(??___flmul+1)^0,w,c
  9510  00119A  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9511  00119C  5014               	movf	(??___flmul+2)^0,w,c
  9512  00119E  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9513  0011A0  5015               	movf	(??___flmul+3)^0,w,c
  9514  0011A2  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9515  0011A4  C017  F012         	movff	___flmul@grs,??___flmul
  9516  0011A8  C018  F013         	movff	___flmul@grs+1,??___flmul+1
  9517  0011AC  C019  F014         	movff	___flmul@grs+2,??___flmul+2
  9518  0011B0  C01A  F015         	movff	___flmul@grs+3,??___flmul+3
  9519  0011B4  0E19               	movlw	25
  9520  0011B6  EFE3  F008         	goto	u3550
  9521  0011BA                     u3555:
  9522  0011BA  FFFF               	dw	65535	; assembler added errata NOP
  9523  0011BC  90D8               	bcf	status,0,c
  9524  0011BE  3215               	rrcf	(??___flmul+3)^0,f,c
  9525  0011C0  3214               	rrcf	(??___flmul+2)^0,f,c
  9526  0011C2  3213               	rrcf	(??___flmul+1)^0,f,c
  9527  0011C4  3212               	rrcf	??___flmul^0,f,c
  9528  0011C6                     u3550:
  9529  0011C6  FFFF               	dw	65535	; assembler added errata NOP
  9530  0011C8  2EE8               	decfsz	wreg,f,c
  9531  0011CA  EFDD  F008         	goto	u3555
  9532  0011CE  5012               	movf	??___flmul^0,w,c
  9533  0011D0  261D               	addwf	___flmul@prod^0,f,c
  9534  0011D2  5013               	movf	(??___flmul+1)^0,w,c
  9535  0011D4  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9536  0011D6  5014               	movf	(??___flmul+2)^0,w,c
  9537  0011D8  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9538  0011DA  5015               	movf	(??___flmul+3)^0,w,c
  9539  0011DC  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9540  0011DE  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  9541  0011E2  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  9542  0011E6  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  9543  0011EA  6A17               	clrf	___flmul@grs^0,c
  9544  0011EC  501B               	movf	___flmul@aexp^0,w,c
  9545  0011EE  C01C  F012         	movff	___flmul@bexp,??___flmul
  9546  0011F2  6A13               	clrf	(??___flmul+1)^0,c
  9547  0011F4  2612               	addwf	??___flmul^0,f,c
  9548  0011F6  0E00               	movlw	0
  9549  0011F8  2213               	addwfc	(??___flmul+1)^0,f,c
  9550  0011FA  0E82               	movlw	130
  9551  0011FC  2412               	addwf	??___flmul^0,w,c
  9552  0011FE  6E21               	movwf	___flmul@temp^0,c
  9553  001200  0EFF               	movlw	255
  9554  001202  2013               	addwfc	(??___flmul+1)^0,w,c
  9555  001204  6E22               	movwf	(___flmul@temp+1)^0,c
  9556  001206  EF1E  F009         	goto	l3749
  9557  00120A                     l3743:
  9558  00120A  FFFF               	dw	65535	; assembler added errata NOP
  9559  00120C  90D8               	bcf	status,0,c
  9560  00120E  361D               	rlcf	___flmul@prod^0,f,c
  9561  001210  361E               	rlcf	(___flmul@prod+1)^0,f,c
  9562  001212  361F               	rlcf	(___flmul@prod+2)^0,f,c
  9563  001214  3620               	rlcf	(___flmul@prod+3)^0,f,c
  9564  001216  AE1A               	btfss	(___flmul@grs+3)^0,7,c
  9565  001218  EF10  F009         	goto	u3561
  9566  00121C  EF13  F009         	goto	u3560
  9567  001220                     u3561:
  9568  001220  FFFF               	dw	65535	; assembler added errata NOP
  9569  001222  EF15  F009         	goto	l1112
  9570  001226                     u3560:
  9571  001226  FFFF               	dw	65535	; assembler added errata NOP
  9572  001228  801D               	bsf	___flmul@prod^0,0,c
  9573  00122A                     l1112:
  9574  00122A  FFFF               	dw	65535	; assembler added errata NOP
  9575  00122C  90D8               	bcf	status,0,c
  9576  00122E  3617               	rlcf	___flmul@grs^0,f,c
  9577  001230  3618               	rlcf	(___flmul@grs+1)^0,f,c
  9578  001232  3619               	rlcf	(___flmul@grs+2)^0,f,c
  9579  001234  361A               	rlcf	(___flmul@grs+3)^0,f,c
  9580  001236  0621               	decf	___flmul@temp^0,f,c
  9581  001238  A0D8               	btfss	status,0,c
  9582  00123A  0622               	decf	(___flmul@temp+1)^0,f,c
  9583  00123C                     l3749:
  9584  00123C  FFFF               	dw	65535	; assembler added errata NOP
  9585  00123E  AE1F               	btfss	(___flmul@prod+2)^0,7,c
  9586  001240  EF24  F009         	goto	u3571
  9587  001244  EF27  F009         	goto	u3570
  9588  001248                     u3571:
  9589  001248  FFFF               	dw	65535	; assembler added errata NOP
  9590  00124A  EF05  F009         	goto	l3743
  9591  00124E                     u3570:
  9592  00124E  FFFF               	dw	65535	; assembler added errata NOP
  9593  001250  0E00               	movlw	0
  9594  001252  6E1B               	movwf	___flmul@aexp^0,c
  9595  001254  AE1A               	btfss	(___flmul@grs+3)^0,7,c
  9596  001256  EF2F  F009         	goto	u3581
  9597  00125A  EF32  F009         	goto	u3580
  9598  00125E                     u3581:
  9599  00125E  FFFF               	dw	65535	; assembler added errata NOP
  9600  001260  EF5D  F009         	goto	l1114
  9601  001264                     u3580:
  9602  001264  FFFF               	dw	65535	; assembler added errata NOP
  9603  001266  0EFF               	movlw	255
  9604  001268  1417               	andwf	___flmul@grs^0,w,c
  9605  00126A  6E12               	movwf	??___flmul^0,c
  9606  00126C  0EFF               	movlw	255
  9607  00126E  1418               	andwf	(___flmul@grs+1)^0,w,c
  9608  001270  6E13               	movwf	(??___flmul+1)^0,c
  9609  001272  0EFF               	movlw	255
  9610  001274  1419               	andwf	(___flmul@grs+2)^0,w,c
  9611  001276  6E14               	movwf	(??___flmul+2)^0,c
  9612  001278  0E7F               	movlw	127
  9613  00127A  141A               	andwf	(___flmul@grs+3)^0,w,c
  9614  00127C  6E15               	movwf	(??___flmul+3)^0,c
  9615  00127E  5012               	movf	??___flmul^0,w,c
  9616  001280  1013               	iorwf	(??___flmul+1)^0,w,c
  9617  001282  1014               	iorwf	(??___flmul+2)^0,w,c
  9618  001284  1015               	iorwf	(??___flmul+3)^0,w,c
  9619  001286  B4D8               	btfsc	status,2,c
  9620  001288  EF48  F009         	goto	u3591
  9621  00128C  EF4B  F009         	goto	u3590
  9622  001290                     u3591:
  9623  001290  FFFF               	dw	65535	; assembler added errata NOP
  9624  001292  EF51  F009         	goto	l1115
  9625  001296                     u3590:
  9626  001296  FFFF               	dw	65535	; assembler added errata NOP
  9627  001298                     l3757:
  9628  001298  FFFF               	dw	65535	; assembler added errata NOP
  9629  00129A  0E01               	movlw	1
  9630  00129C  6E1B               	movwf	___flmul@aexp^0,c
  9631  00129E  EF5D  F009         	goto	l1114
  9632  0012A2                     l1115:
  9633  0012A2  FFFF               	dw	65535	; assembler added errata NOP
  9634  0012A4  A01D               	btfss	___flmul@prod^0,0,c
  9635  0012A6  EF57  F009         	goto	u3601
  9636  0012AA  EF5A  F009         	goto	u3600
  9637  0012AE                     u3601:
  9638  0012AE  FFFF               	dw	65535	; assembler added errata NOP
  9639  0012B0  EF5D  F009         	goto	l1114
  9640  0012B4                     u3600:
  9641  0012B4  FFFF               	dw	65535	; assembler added errata NOP
  9642  0012B6  EF4C  F009         	goto	l3757
  9643  0012BA                     l1114:
  9644  0012BA  FFFF               	dw	65535	; assembler added errata NOP
  9645  0012BC  501B               	movf	___flmul@aexp^0,w,c
  9646  0012BE  B4D8               	btfsc	status,2,c
  9647  0012C0  EF64  F009         	goto	u3611
  9648  0012C4  EF67  F009         	goto	u3610
  9649  0012C8                     u3611:
  9650  0012C8  FFFF               	dw	65535	; assembler added errata NOP
  9651  0012CA  EF8E  F009         	goto	l3769
  9652  0012CE                     u3610:
  9653  0012CE  FFFF               	dw	65535	; assembler added errata NOP
  9654  0012D0  0E01               	movlw	1
  9655  0012D2  261D               	addwf	___flmul@prod^0,f,c
  9656  0012D4  0E00               	movlw	0
  9657  0012D6  221E               	addwfc	(___flmul@prod+1)^0,f,c
  9658  0012D8  221F               	addwfc	(___flmul@prod+2)^0,f,c
  9659  0012DA  2220               	addwfc	(___flmul@prod+3)^0,f,c
  9660  0012DC  A020               	btfss	(___flmul@prod+3)^0,0,c
  9661  0012DE  EF73  F009         	goto	u3621
  9662  0012E2  EF76  F009         	goto	u3620
  9663  0012E6                     u3621:
  9664  0012E6  FFFF               	dw	65535	; assembler added errata NOP
  9665  0012E8  EF8E  F009         	goto	l3769
  9666  0012EC                     u3620:
  9667  0012EC  FFFF               	dw	65535	; assembler added errata NOP
  9668  0012EE  C01D  F012         	movff	___flmul@prod,??___flmul
  9669  0012F2  C01E  F013         	movff	___flmul@prod+1,??___flmul+1
  9670  0012F6  C01F  F014         	movff	___flmul@prod+2,??___flmul+2
  9671  0012FA  C020  F015         	movff	___flmul@prod+3,??___flmul+3
  9672  0012FE  3415               	rlcf	(??___flmul+3)^0,w,c
  9673  001300  3215               	rrcf	(??___flmul+3)^0,f,c
  9674  001302  3214               	rrcf	(??___flmul+2)^0,f,c
  9675  001304  3213               	rrcf	(??___flmul+1)^0,f,c
  9676  001306  3212               	rrcf	??___flmul^0,f,c
  9677  001308  C012  F01D         	movff	??___flmul,___flmul@prod
  9678  00130C  C013  F01E         	movff	??___flmul+1,___flmul@prod+1
  9679  001310  C014  F01F         	movff	??___flmul+2,___flmul@prod+2
  9680  001314  C015  F020         	movff	??___flmul+3,___flmul@prod+3
  9681  001318  4A21               	infsnz	___flmul@temp^0,f,c
  9682  00131A  2A22               	incf	(___flmul@temp+1)^0,f,c
  9683  00131C                     l3769:
  9684  00131C  FFFF               	dw	65535	; assembler added errata NOP
  9685  00131E  BE22               	btfsc	(___flmul@temp+1)^0,7,c
  9686  001320  EF9A  F009         	goto	u3631
  9687  001324  5022               	movf	(___flmul@temp+1)^0,w,c
  9688  001326  E109               	bnz	u3630
  9689  001328  2821               	incf	___flmul@temp^0,w,c
  9690  00132A  A0D8               	btfss	status,0,c
  9691  00132C  EF9A  F009         	goto	u3631
  9692  001330  EF9D  F009         	goto	u3630
  9693  001334                     u3631:
  9694  001334  FFFF               	dw	65535	; assembler added errata NOP
  9695  001336  EFA8  F009         	goto	l3773
  9696  00133A                     u3630:
  9697  00133A  FFFF               	dw	65535	; assembler added errata NOP
  9698  00133C  0E00               	movlw	0
  9699  00133E  6E1D               	movwf	___flmul@prod^0,c
  9700  001340  0E00               	movlw	0
  9701  001342  6E1E               	movwf	(___flmul@prod+1)^0,c
  9702  001344  0E80               	movlw	128
  9703  001346  6E1F               	movwf	(___flmul@prod+2)^0,c
  9704  001348  0E7F               	movlw	127
  9705  00134A  6E20               	movwf	(___flmul@prod+3)^0,c
  9706  00134C  EFDD  F009         	goto	l3785
  9707  001350                     l3773:
  9708  001350  FFFF               	dw	65535	; assembler added errata NOP
  9709  001352  BE22               	btfsc	(___flmul@temp+1)^0,7,c
  9710  001354  EFB7  F009         	goto	u3640
  9711  001358  5022               	movf	(___flmul@temp+1)^0,w,c
  9712  00135A  E106               	bnz	u3641
  9713  00135C  0421               	decf	___flmul@temp^0,w,c
  9714  00135E  B0D8               	btfsc	status,0,c
  9715  001360  EFB4  F009         	goto	u3641
  9716  001364  EFB7  F009         	goto	u3640
  9717  001368                     u3641:
  9718  001368  FFFF               	dw	65535	; assembler added errata NOP
  9719  00136A  EFC4  F009         	goto	l1122
  9720  00136E                     u3640:
  9721  00136E  FFFF               	dw	65535	; assembler added errata NOP
  9722  001370  0E00               	movlw	0
  9723  001372  6E1D               	movwf	___flmul@prod^0,c
  9724  001374  0E00               	movlw	0
  9725  001376  6E1E               	movwf	(___flmul@prod+1)^0,c
  9726  001378  0E00               	movlw	0
  9727  00137A  6E1F               	movwf	(___flmul@prod+2)^0,c
  9728  00137C  0E00               	movlw	0
  9729  00137E  6E20               	movwf	(___flmul@prod+3)^0,c
  9730  001380  0E00               	movlw	0
  9731  001382  6E16               	movwf	___flmul@sign^0,c
  9732  001384  EFDD  F009         	goto	l3785
  9733  001388                     l1122:
  9734  001388  FFFF               	dw	65535	; assembler added errata NOP
  9735  00138A  C021  F01C         	movff	___flmul@temp,___flmul@bexp
  9736  00138E  0EFF               	movlw	255
  9737  001390  161D               	andwf	___flmul@prod^0,f,c
  9738  001392  0EFF               	movlw	255
  9739  001394  161E               	andwf	(___flmul@prod+1)^0,f,c
  9740  001396  0E7F               	movlw	127
  9741  001398  161F               	andwf	(___flmul@prod+2)^0,f,c
  9742  00139A  0E00               	movlw	0
  9743  00139C  1620               	andwf	(___flmul@prod+3)^0,f,c
  9744  00139E  A01C               	btfss	___flmul@bexp^0,0,c
  9745  0013A0  EFD4  F009         	goto	u3651
  9746  0013A4  EFD7  F009         	goto	u3650
  9747  0013A8                     u3651:
  9748  0013A8  FFFF               	dw	65535	; assembler added errata NOP
  9749  0013AA  EFD9  F009         	goto	l3783
  9750  0013AE                     u3650:
  9751  0013AE  FFFF               	dw	65535	; assembler added errata NOP
  9752  0013B0  8E1F               	bsf	(___flmul@prod+2)^0,7,c
  9753  0013B2                     l3783:
  9754  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  9755  0013B4  90D8               	bcf	status,0,c
  9756  0013B6  301C               	rrcf	___flmul@bexp^0,w,c
  9757  0013B8  6E20               	movwf	(___flmul@prod+3)^0,c
  9758  0013BA                     l3785:
  9759  0013BA  FFFF               	dw	65535	; assembler added errata NOP
  9760  0013BC  5016               	movf	___flmul@sign^0,w,c
  9761  0013BE  1220               	iorwf	(___flmul@prod+3)^0,f,c
  9762  0013C0  C01D  F00A         	movff	___flmul@prod,?___flmul
  9763  0013C4  C01E  F00B         	movff	___flmul@prod+1,?___flmul+1
  9764  0013C8  C01F  F00C         	movff	___flmul@prod+2,?___flmul+2
  9765  0013CC  C020  F00D         	movff	___flmul@prod+3,?___flmul+3
  9766  0013D0                     l1109:
  9767  0013D0  FFFF               	dw	65535	; assembler added errata NOP
  9768  0013D2  0012               	return		;funcret
  9769  0013D4  FFFF               	dw	65535	; errata NOP
  9770  0013D6                     __end_of___flmul:
  9771                           	callstack 0
  9772                           
  9773 ;; *************** function ___flge *****************
  9774 ;; Defined at:
  9775 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;  ff1             4   48[COMRAM] unsigned char 
  9778 ;;  ff2             4   52[COMRAM] unsigned char 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;		None               void
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9790 ;;      Params:         8       0       0       0       0       0       0
  9791 ;;      Locals:         0       0       0       0       0       0       0
  9792 ;;      Temps:          4       0       0       0       0       0       0
  9793 ;;      Totals:        12       0       0       0       0       0       0
  9794 ;;Total ram usage:       12 bytes
  9795 ;; Hardware stack levels used: 1
  9796 ;; Hardware stack levels required when called: 2
  9797 ;; This function calls:
  9798 ;;		Nothing
  9799 ;; This function is called by:
  9800 ;;		_pick_and_place
  9801 ;;		_roundf
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           	psect	text36
  9806  002AE4                     __ptext36:
  9807                           	callstack 0
  9808  002AE4                     ___flge:
  9809                           	callstack 0
  9810  002AE4  FFFF               	dw	65535	; assembler added errata NOP
  9811  002AE6  0E00               	movlw	0
  9812  002AE8  1431               	andwf	___flge@ff1^0,w,c
  9813  002AEA  6E39               	movwf	??___flge^0,c
  9814  002AEC  0E00               	movlw	0
  9815  002AEE  1432               	andwf	(___flge@ff1+1)^0,w,c
  9816  002AF0  6E3A               	movwf	(??___flge+1)^0,c
  9817  002AF2  0E80               	movlw	128
  9818  002AF4  1433               	andwf	(___flge@ff1+2)^0,w,c
  9819  002AF6  6E3B               	movwf	(??___flge+2)^0,c
  9820  002AF8  0E7F               	movlw	127
  9821  002AFA  1434               	andwf	(___flge@ff1+3)^0,w,c
  9822  002AFC  6E3C               	movwf	(??___flge+3)^0,c
  9823  002AFE  5039               	movf	??___flge^0,w,c
  9824  002B00  103A               	iorwf	(??___flge+1)^0,w,c
  9825  002B02  103B               	iorwf	(??___flge+2)^0,w,c
  9826  002B04  103C               	iorwf	(??___flge+3)^0,w,c
  9827  002B06  A4D8               	btfss	status,2,c
  9828  002B08  EF88  F015         	goto	u5311
  9829  002B0C  EF8B  F015         	goto	u5310
  9830  002B10                     u5311:
  9831  002B10  FFFF               	dw	65535	; assembler added errata NOP
  9832  002B12  EF94  F015         	goto	l4983
  9833  002B16                     u5310:
  9834  002B16  FFFF               	dw	65535	; assembler added errata NOP
  9835  002B18  0E00               	movlw	0
  9836  002B1A  6E31               	movwf	___flge@ff1^0,c
  9837  002B1C  0E00               	movlw	0
  9838  002B1E  6E32               	movwf	(___flge@ff1+1)^0,c
  9839  002B20  0E00               	movlw	0
  9840  002B22  6E33               	movwf	(___flge@ff1+2)^0,c
  9841  002B24  0E00               	movlw	0
  9842  002B26  6E34               	movwf	(___flge@ff1+3)^0,c
  9843  002B28                     l4983:
  9844  002B28  FFFF               	dw	65535	; assembler added errata NOP
  9845  002B2A  0E00               	movlw	0
  9846  002B2C  1435               	andwf	___flge@ff2^0,w,c
  9847  002B2E  6E39               	movwf	??___flge^0,c
  9848  002B30  0E00               	movlw	0
  9849  002B32  1436               	andwf	(___flge@ff2+1)^0,w,c
  9850  002B34  6E3A               	movwf	(??___flge+1)^0,c
  9851  002B36  0E80               	movlw	128
  9852  002B38  1437               	andwf	(___flge@ff2+2)^0,w,c
  9853  002B3A  6E3B               	movwf	(??___flge+2)^0,c
  9854  002B3C  0E7F               	movlw	127
  9855  002B3E  1438               	andwf	(___flge@ff2+3)^0,w,c
  9856  002B40  6E3C               	movwf	(??___flge+3)^0,c
  9857  002B42  5039               	movf	??___flge^0,w,c
  9858  002B44  103A               	iorwf	(??___flge+1)^0,w,c
  9859  002B46  103B               	iorwf	(??___flge+2)^0,w,c
  9860  002B48  103C               	iorwf	(??___flge+3)^0,w,c
  9861  002B4A  A4D8               	btfss	status,2,c
  9862  002B4C  EFAA  F015         	goto	u5321
  9863  002B50  EFAD  F015         	goto	u5320
  9864  002B54                     u5321:
  9865  002B54  FFFF               	dw	65535	; assembler added errata NOP
  9866  002B56  EFB6  F015         	goto	l4987
  9867  002B5A                     u5320:
  9868  002B5A  FFFF               	dw	65535	; assembler added errata NOP
  9869  002B5C  0E00               	movlw	0
  9870  002B5E  6E35               	movwf	___flge@ff2^0,c
  9871  002B60  0E00               	movlw	0
  9872  002B62  6E36               	movwf	(___flge@ff2+1)^0,c
  9873  002B64  0E00               	movlw	0
  9874  002B66  6E37               	movwf	(___flge@ff2+2)^0,c
  9875  002B68  0E00               	movlw	0
  9876  002B6A  6E38               	movwf	(___flge@ff2+3)^0,c
  9877  002B6C                     l4987:
  9878  002B6C  FFFF               	dw	65535	; assembler added errata NOP
  9879  002B6E  AE34               	btfss	(___flge@ff1+3)^0,7,c
  9880  002B70  EFBC  F015         	goto	u5331
  9881  002B74  EFBF  F015         	goto	u5330
  9882  002B78                     u5331:
  9883  002B78  FFFF               	dw	65535	; assembler added errata NOP
  9884  002B7A  EFC9  F015         	goto	l4991
  9885  002B7E                     u5330:
  9886  002B7E  FFFF               	dw	65535	; assembler added errata NOP
  9887  002B80  6C31               	negf	___flge@ff1^0,c
  9888  002B82  1E32               	comf	(___flge@ff1+1)^0,f,c
  9889  002B84  B0D8               	btfsc	status,0,c
  9890  002B86  2A32               	incf	(___flge@ff1+1)^0,f,c
  9891  002B88  1E33               	comf	(___flge@ff1+2)^0,f,c
  9892  002B8A  B0D8               	btfsc	status,0,c
  9893  002B8C  2A33               	incf	(___flge@ff1+2)^0,f,c
  9894  002B8E  0E80               	movlw	128
  9895  002B90  5634               	subfwb	(___flge@ff1+3)^0,f,c
  9896  002B92                     l4991:
  9897  002B92  FFFF               	dw	65535	; assembler added errata NOP
  9898  002B94  AE38               	btfss	(___flge@ff2+3)^0,7,c
  9899  002B96  EFCF  F015         	goto	u5341
  9900  002B9A  EFD2  F015         	goto	u5340
  9901  002B9E                     u5341:
  9902  002B9E  FFFF               	dw	65535	; assembler added errata NOP
  9903  002BA0  EFDC  F015         	goto	l756
  9904  002BA4                     u5340:
  9905  002BA4  FFFF               	dw	65535	; assembler added errata NOP
  9906  002BA6  6C35               	negf	___flge@ff2^0,c
  9907  002BA8  1E36               	comf	(___flge@ff2+1)^0,f,c
  9908  002BAA  B0D8               	btfsc	status,0,c
  9909  002BAC  2A36               	incf	(___flge@ff2+1)^0,f,c
  9910  002BAE  1E37               	comf	(___flge@ff2+2)^0,f,c
  9911  002BB0  B0D8               	btfsc	status,0,c
  9912  002BB2  2A37               	incf	(___flge@ff2+2)^0,f,c
  9913  002BB4  0E80               	movlw	128
  9914  002BB6  5638               	subfwb	(___flge@ff2+3)^0,f,c
  9915  002BB8                     l756:
  9916  002BB8  FFFF               	dw	65535	; assembler added errata NOP
  9917  002BBA  0E00               	movlw	0
  9918  002BBC  1A31               	xorwf	___flge@ff1^0,f,c
  9919  002BBE  0E00               	movlw	0
  9920  002BC0  1A32               	xorwf	(___flge@ff1+1)^0,f,c
  9921  002BC2  0E00               	movlw	0
  9922  002BC4  1A33               	xorwf	(___flge@ff1+2)^0,f,c
  9923  002BC6  0E80               	movlw	128
  9924  002BC8  1A34               	xorwf	(___flge@ff1+3)^0,f,c
  9925  002BCA  0E00               	movlw	0
  9926  002BCC  1A35               	xorwf	___flge@ff2^0,f,c
  9927  002BCE  0E00               	movlw	0
  9928  002BD0  1A36               	xorwf	(___flge@ff2+1)^0,f,c
  9929  002BD2  0E00               	movlw	0
  9930  002BD4  1A37               	xorwf	(___flge@ff2+2)^0,f,c
  9931  002BD6  0E80               	movlw	128
  9932  002BD8  1A38               	xorwf	(___flge@ff2+3)^0,f,c
  9933  002BDA  5035               	movf	___flge@ff2^0,w,c
  9934  002BDC  5C31               	subwf	___flge@ff1^0,w,c
  9935  002BDE  5036               	movf	(___flge@ff2+1)^0,w,c
  9936  002BE0  5832               	subwfb	(___flge@ff1+1)^0,w,c
  9937  002BE2  5037               	movf	(___flge@ff2+2)^0,w,c
  9938  002BE4  5833               	subwfb	(___flge@ff1+2)^0,w,c
  9939  002BE6  5038               	movf	(___flge@ff2+3)^0,w,c
  9940  002BE8  5834               	subwfb	(___flge@ff1+3)^0,w,c
  9941  002BEA  B0D8               	btfsc	status,0,c
  9942  002BEC  EFFA  F015         	goto	u5351
  9943  002BF0  EFFD  F015         	goto	u5350
  9944  002BF4                     u5351:
  9945  002BF4  FFFF               	dw	65535	; assembler added errata NOP
  9946  002BF6  EF01  F016         	goto	l4997
  9947  002BFA                     u5350:
  9948  002BFA  FFFF               	dw	65535	; assembler added errata NOP
  9949  002BFC  90D8               	bcf	status,0,c
  9950  002BFE  EF03  F016         	goto	l761
  9951  002C02                     l4997:
  9952  002C02  FFFF               	dw	65535	; assembler added errata NOP
  9953  002C04  80D8               	bsf	status,0,c
  9954  002C06                     l761:
  9955  002C06  FFFF               	dw	65535	; assembler added errata NOP
  9956  002C08  0012               	return		;funcret
  9957  002C0A  FFFF               	dw	65535	; errata NOP
  9958  002C0C                     __end_of___flge:
  9959                           	callstack 0
  9960                           
  9961 ;; *************** function ___fltol *****************
  9962 ;; Defined at:
  9963 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  9964 ;; Parameters:    Size  Location     Type
  9965 ;;  f1              4   86[COMRAM] unsigned char 
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;  exp1            1    5[BANK0 ] unsigned char 
  9968 ;;  sign1           1    4[BANK0 ] unsigned char 
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  4   86[COMRAM] long 
  9971 ;; Registers used:
  9972 ;;		wreg, status,2, status,0
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9978 ;;      Params:         4       0       0       0       0       0       0
  9979 ;;      Locals:         0       2       0       0       0       0       0
  9980 ;;      Temps:          0       4       0       0       0       0       0
  9981 ;;      Totals:         4       6       0       0       0       0       0
  9982 ;;Total ram usage:       10 bytes
  9983 ;; Hardware stack levels used: 1
  9984 ;; Hardware stack levels required when called: 2
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		_init_USART
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text37
  9993  0029AC                     __ptext37:
  9994                           	callstack 0
  9995  0029AC                     ___fltol:
  9996                           	callstack 0
  9997  0029AC  FFFF               	dw	65535	; assembler added errata NOP
  9998  0029AE  3459               	rlcf	(___fltol@f1+2)^0,w,c
  9999  0029B0  345A               	rlcf	(___fltol@f1+3)^0,w,c
 10000  0029B2  0100               	movlb	0	; () banked
 10001  0029B4  6F85               	movwf	___fltol@exp1& (0+255),b
 10002  0029B6  5185               	movf	___fltol@exp1& (0+255),w,b
 10003  0029B8  A4D8               	btfss	status,2,c
 10004  0029BA  EFE1  F014         	goto	u6121
 10005  0029BE  EFE4  F014         	goto	u6120
 10006  0029C2                     u6121:
 10007  0029C2  FFFF               	dw	65535	; assembler added errata NOP
 10008  0029C4  EFF0  F014         	goto	l5415
 10009  0029C8                     u6120:
 10010  0029C8  FFFF               	dw	65535	; assembler added errata NOP
 10011  0029CA                     l5411:
 10012  0029CA  FFFF               	dw	65535	; assembler added errata NOP
 10013                           
 10014                           ; BSR set to: 0
 10015  0029CC  0E00               	movlw	0
 10016  0029CE  6E57               	movwf	?___fltol^0,c
 10017  0029D0  0E00               	movlw	0
 10018  0029D2  6E58               	movwf	(?___fltol+1)^0,c
 10019  0029D4  0E00               	movlw	0
 10020  0029D6  6E59               	movwf	(?___fltol+2)^0,c
 10021  0029D8  0E00               	movlw	0
 10022  0029DA  6E5A               	movwf	(?___fltol+3)^0,c
 10023  0029DC  EF6F  F015         	goto	l788
 10024  0029E0                     l5415:
 10025  0029E0  FFFF               	dw	65535	; assembler added errata NOP
 10026                           
 10027                           ; BSR set to: 0
 10028  0029E2  C057  F080         	movff	___fltol@f1,??___fltol
 10029  0029E6  C058  F081         	movff	___fltol@f1+1,??___fltol+1
 10030  0029EA  C059  F082         	movff	___fltol@f1+2,??___fltol+2
 10031  0029EE  C05A  F083         	movff	___fltol@f1+3,??___fltol+3
 10032  0029F2  0E20               	movlw	32
 10033  0029F4  EF02  F015         	goto	u6130
 10034  0029F8                     u6135:
 10035  0029F8  FFFF               	dw	65535	; assembler added errata NOP
 10036  0029FA  90D8               	bcf	status,0,c
 10037  0029FC  3383               	rrcf	(??___fltol+3)& (0+255),f,b
 10038  0029FE  3382               	rrcf	(??___fltol+2)& (0+255),f,b
 10039  002A00  3381               	rrcf	(??___fltol+1)& (0+255),f,b
 10040  002A02  3380               	rrcf	??___fltol& (0+255),f,b
 10041  002A04                     u6130:
 10042  002A04  FFFF               	dw	65535	; assembler added errata NOP
 10043  002A06  2EE8               	decfsz	wreg,f,c
 10044  002A08  EFFC  F014         	goto	u6135
 10045  002A0C  5180               	movf	??___fltol& (0+255),w,b
 10046  002A0E  6F84               	movwf	___fltol@sign1& (0+255),b
 10047  002A10                     
 10048                           ; BSR set to: 0
 10049  002A10  8E59               	bsf	(___fltol@f1+2)^0,7,c
 10050  002A12                     
 10051                           ; BSR set to: 0
 10052  002A12  0EFF               	movlw	255
 10053  002A14  1657               	andwf	___fltol@f1^0,f,c
 10054  002A16  0EFF               	movlw	255
 10055  002A18  1658               	andwf	(___fltol@f1+1)^0,f,c
 10056  002A1A  0EFF               	movlw	255
 10057  002A1C  1659               	andwf	(___fltol@f1+2)^0,f,c
 10058  002A1E  0E00               	movlw	0
 10059  002A20  165A               	andwf	(___fltol@f1+3)^0,f,c
 10060  002A22                     
 10061                           ; BSR set to: 0
 10062  002A22  0E96               	movlw	150
 10063  002A24  5F85               	subwf	___fltol@exp1& (0+255),f,b
 10064  002A26                     
 10065                           ; BSR set to: 0
 10066  002A26  BF85               	btfsc	___fltol@exp1& (0+255),7,b
 10067  002A28  EF1B  F015         	goto	u6140
 10068  002A2C  EF18  F015         	goto	u6141
 10069  002A30                     u6141:
 10070  002A30  FFFF               	dw	65535	; assembler added errata NOP
 10071  002A32  EF35  F015         	goto	l5435
 10072  002A36                     u6140:
 10073  002A36  FFFF               	dw	65535	; assembler added errata NOP
 10074  002A38                     
 10075                           ; BSR set to: 0
 10076  002A38  5185               	movf	___fltol@exp1& (0+255),w,b
 10077  002A3A  0A80               	xorlw	128
 10078  002A3C  0F97               	addlw	151
 10079  002A3E  B0D8               	btfsc	status,0,c
 10080  002A40  EF24  F015         	goto	u6151
 10081  002A44  EF27  F015         	goto	u6150
 10082  002A48                     u6151:
 10083  002A48  FFFF               	dw	65535	; assembler added errata NOP
 10084  002A4A  EF2A  F015         	goto	l5431
 10085  002A4E                     u6150:
 10086  002A4E  FFFF               	dw	65535	; assembler added errata NOP
 10087  002A50  EFE5  F014         	goto	l5411
 10088  002A54                     l5431:
 10089  002A54  FFFF               	dw	65535	; assembler added errata NOP
 10090                           
 10091                           ; BSR set to: 0
 10092  002A56  90D8               	bcf	status,0,c
 10093  002A58  325A               	rrcf	(___fltol@f1+3)^0,f,c
 10094  002A5A  3259               	rrcf	(___fltol@f1+2)^0,f,c
 10095  002A5C  3258               	rrcf	(___fltol@f1+1)^0,f,c
 10096  002A5E  3257               	rrcf	___fltol@f1^0,f,c
 10097  002A60                     
 10098                           ; BSR set to: 0
 10099  002A60  3F85               	incfsz	___fltol@exp1& (0+255),f,b
 10100  002A62  EF2A  F015         	goto	l5431
 10101  002A66  EF53  F015         	goto	l5445
 10102  002A6A                     l5435:
 10103  002A6A  FFFF               	dw	65535	; assembler added errata NOP
 10104                           
 10105                           ; BSR set to: 0
 10106  002A6C  0E1F               	movlw	31
 10107  002A6E  6585               	cpfsgt	___fltol@exp1& (0+255),b
 10108  002A70  EF3C  F015         	goto	u6161
 10109  002A74  EF3F  F015         	goto	u6160
 10110  002A78                     u6161:
 10111  002A78  FFFF               	dw	65535	; assembler added errata NOP
 10112  002A7A  EF49  F015         	goto	l5443
 10113  002A7E                     u6160:
 10114  002A7E  FFFF               	dw	65535	; assembler added errata NOP
 10115  002A80  EFE5  F014         	goto	l5411
 10116  002A84                     l5441:
 10117  002A84  FFFF               	dw	65535	; assembler added errata NOP
 10118                           
 10119                           ; BSR set to: 0
 10120  002A86  90D8               	bcf	status,0,c
 10121  002A88  3657               	rlcf	___fltol@f1^0,f,c
 10122  002A8A  3658               	rlcf	(___fltol@f1+1)^0,f,c
 10123  002A8C  3659               	rlcf	(___fltol@f1+2)^0,f,c
 10124  002A8E  365A               	rlcf	(___fltol@f1+3)^0,f,c
 10125  002A90  0785               	decf	___fltol@exp1& (0+255),f,b
 10126  002A92                     l5443:
 10127  002A92  FFFF               	dw	65535	; assembler added errata NOP
 10128                           
 10129                           ; BSR set to: 0
 10130  002A94  5185               	movf	___fltol@exp1& (0+255),w,b
 10131  002A96  A4D8               	btfss	status,2,c
 10132  002A98  EF50  F015         	goto	u6171
 10133  002A9C  EF53  F015         	goto	u6170
 10134  002AA0                     u6171:
 10135  002AA0  FFFF               	dw	65535	; assembler added errata NOP
 10136  002AA2  EF42  F015         	goto	l5441
 10137  002AA6                     u6170:
 10138  002AA6                     l5445:
 10139  002AA6  FFFF               	dw	65535	; assembler added errata NOP
 10140                           
 10141                           ; BSR set to: 0
 10142  002AA8  5184               	movf	___fltol@sign1& (0+255),w,b
 10143  002AAA  B4D8               	btfsc	status,2,c
 10144  002AAC  EF5A  F015         	goto	u6181
 10145  002AB0  EF5D  F015         	goto	u6180
 10146  002AB4                     u6181:
 10147  002AB4  FFFF               	dw	65535	; assembler added errata NOP
 10148  002AB6  EF66  F015         	goto	l5449
 10149  002ABA                     u6180:
 10150  002ABA  FFFF               	dw	65535	; assembler added errata NOP
 10151  002ABC                     
 10152                           ; BSR set to: 0
 10153  002ABC  1E5A               	comf	(___fltol@f1+3)^0,f,c
 10154  002ABE  1E59               	comf	(___fltol@f1+2)^0,f,c
 10155  002AC0  1E58               	comf	(___fltol@f1+1)^0,f,c
 10156  002AC2  6C57               	negf	___fltol@f1^0,c
 10157  002AC4  0E00               	movlw	0
 10158  002AC6  2258               	addwfc	(___fltol@f1+1)^0,f,c
 10159  002AC8  2259               	addwfc	(___fltol@f1+2)^0,f,c
 10160  002ACA  225A               	addwfc	(___fltol@f1+3)^0,f,c
 10161  002ACC                     l5449:
 10162  002ACC  FFFF               	dw	65535	; assembler added errata NOP
 10163                           
 10164                           ; BSR set to: 0
 10165  002ACE  C057  F057         	movff	___fltol@f1,?___fltol
 10166  002AD2  C058  F058         	movff	___fltol@f1+1,?___fltol+1
 10167  002AD6  C059  F059         	movff	___fltol@f1+2,?___fltol+2
 10168  002ADA  C05A  F05A         	movff	___fltol@f1+3,?___fltol+3
 10169  002ADE                     l788:
 10170  002ADE  FFFF               	dw	65535	; assembler added errata NOP
 10171                           
 10172                           ; BSR set to: 0
 10173  002AE0  0012               	return		;funcret
 10174  002AE2  FFFF               	dw	65535	; errata NOP
 10175  002AE4                     __end_of___fltol:
 10176                           	callstack 0
 10177                           
 10178 ;; *************** function _init_Timers *****************
 10179 ;; Defined at:
 10180 ;;		line 42 in file "init_PIC.c"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;		None
 10183 ;; Auto vars:     Size  Location     Type
 10184 ;;		None
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  1    wreg      void 
 10187 ;; Registers used:
 10188 ;;		wreg, status,2
 10189 ;; Tracked objects:
 10190 ;;		On entry : 0/0
 10191 ;;		On exit  : 0/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10194 ;;      Params:         0       0       0       0       0       0       0
 10195 ;;      Locals:         0       0       0       0       0       0       0
 10196 ;;      Temps:          0       0       0       0       0       0       0
 10197 ;;      Totals:         0       0       0       0       0       0       0
 10198 ;;Total ram usage:        0 bytes
 10199 ;; Hardware stack levels used: 1
 10200 ;; Hardware stack levels required when called: 2
 10201 ;; This function calls:
 10202 ;;		Nothing
 10203 ;; This function is called by:
 10204 ;;		_main
 10205 ;; This function uses a non-reentrant model
 10206 ;;
 10207                           
 10208                           	psect	text38
 10209  003590                     __ptext38:
 10210                           	callstack 0
 10211  003590                     _init_Timers:
 10212                           	callstack 0
 10213  003590  FFFF               	dw	65535	; assembler added errata NOP
 10214  003592                     
 10215                           ;init_PIC.c: 43:     T0CONbits.T08BIT = 0;
 10216  003592  9CD5               	bcf	213,6,c	;volatile
 10217                           
 10218                           ;init_PIC.c: 44:  T0CONbits.T0CS = 0;
 10219  003594  9AD5               	bcf	213,5,c	;volatile
 10220                           
 10221                           ;init_PIC.c: 45:  T0CONbits.PSA = 1;
 10222  003596  86D5               	bsf	213,3,c	;volatile
 10223                           
 10224                           ;init_PIC.c: 46:  T0CONbits.TMR0ON = 0;
 10225  003598  9ED5               	bcf	213,7,c	;volatile
 10226  00359A                     
 10227                           ;init_PIC.c: 49:  TMR0H = 0xB2;
 10228  00359A  0EB2               	movlw	178
 10229  00359C  6ED7               	movwf	215,c	;volatile
 10230                           
 10231                           ;init_PIC.c: 50:  TMR0L = 0x04;
 10232  00359E  0E04               	movlw	4
 10233  0035A0  6ED6               	movwf	214,c	;volatile
 10234  0035A2                     
 10235                           ;init_PIC.c: 53:     T1CONbits.RD16 = 1;
 10236  0035A2  8ECD               	bsf	205,7,c	;volatile
 10237  0035A4                     
 10238                           ;init_PIC.c: 54:  T1CONbits.T1CKPS1 = 0;
 10239  0035A4  9ACD               	bcf	205,5,c	;volatile
 10240  0035A6                     
 10241                           ;init_PIC.c: 55:  T1CONbits.T1CKPS0 = 0;
 10242  0035A6  98CD               	bcf	205,4,c	;volatile
 10243  0035A8                     
 10244                           ;init_PIC.c: 56:  T1CONbits.T1OSCEN = 0;
 10245  0035A8  96CD               	bcf	205,3,c	;volatile
 10246  0035AA                     
 10247                           ;init_PIC.c: 57:  T1CONbits.TMR1CS = 0;
 10248  0035AA  92CD               	bcf	205,1,c	;volatile
 10249  0035AC                     
 10250                           ;init_PIC.c: 58:  T1CONbits.TMR1ON = 0;
 10251  0035AC  90CD               	bcf	205,0,c	;volatile
 10252                           
 10253                           ;init_PIC.c: 61:  TMR1H = 0xFA;
 10254  0035AE  0EFA               	movlw	250
 10255  0035B0  6ECF               	movwf	207,c	;volatile
 10256                           
 10257                           ;init_PIC.c: 62:     TMR1L = 0x60;
 10258  0035B2  0E60               	movlw	96
 10259  0035B4  6ECE               	movwf	206,c	;volatile
 10260  0035B6  0012               	return		;funcret
 10261  0035B8  FFFF               	dw	65535	; errata NOP
 10262  0035BA                     __end_of_init_Timers:
 10263                           	callstack 0
 10264                           
 10265 ;; *************** function _init_PORTS *****************
 10266 ;; Defined at:
 10267 ;;		line 21 in file "init_PIC.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;		None
 10270 ;; Auto vars:     Size  Location     Type
 10271 ;;		None
 10272 ;; Return value:  Size  Location     Type
 10273 ;;                  1    wreg      void 
 10274 ;; Registers used:
 10275 ;;		wreg, status,2
 10276 ;; Tracked objects:
 10277 ;;		On entry : 0/0
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10281 ;;      Params:         0       0       0       0       0       0       0
 10282 ;;      Locals:         0       0       0       0       0       0       0
 10283 ;;      Temps:          0       0       0       0       0       0       0
 10284 ;;      Totals:         0       0       0       0       0       0       0
 10285 ;;Total ram usage:        0 bytes
 10286 ;; Hardware stack levels used: 1
 10287 ;; Hardware stack levels required when called: 2
 10288 ;; This function calls:
 10289 ;;		Nothing
 10290 ;; This function is called by:
 10291 ;;		_main
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           	psect	text39
 10296  0035BA                     __ptext39:
 10297                           	callstack 0
 10298  0035BA                     _init_PORTS:
 10299                           	callstack 0
 10300  0035BA  FFFF               	dw	65535	; assembler added errata NOP
 10301  0035BC                     
 10302                           ;init_PIC.c: 24:     TRISD = 0x00;
 10303  0035BC  0E00               	movlw	0
 10304  0035BE  6E95               	movwf	149,c	;volatile
 10305                           
 10306                           ;init_PIC.c: 25:     TRISA = 0x00;
 10307  0035C0  0E00               	movlw	0
 10308  0035C2  6E92               	movwf	146,c	;volatile
 10309                           
 10310                           ;init_PIC.c: 26:     TRISB = 0X03;
 10311  0035C4  0E03               	movlw	3
 10312  0035C6  6E93               	movwf	147,c	;volatile
 10313                           
 10314                           ;init_PIC.c: 27:     PORTA = 0x00;
 10315  0035C8  0E00               	movlw	0
 10316  0035CA  6E80               	movwf	128,c	;volatile
 10317                           
 10318                           ;init_PIC.c: 28:     PORTD = 0x00;
 10319  0035CC  0E00               	movlw	0
 10320  0035CE  6E83               	movwf	131,c	;volatile
 10321                           
 10322                           ;init_PIC.c: 32:     LATC = 0;
 10323  0035D0  0E00               	movlw	0
 10324  0035D2  6E8B               	movwf	139,c	;volatile
 10325                           
 10326                           ;init_PIC.c: 33:     PORTC = 0;
 10327  0035D4  0E00               	movlw	0
 10328  0035D6  6E82               	movwf	130,c	;volatile
 10329  0035D8                     
 10330                           ;init_PIC.c: 34:     TRISCbits.RC7 = 1;
 10331  0035D8  8E94               	bsf	148,7,c	;volatile
 10332  0035DA                     
 10333                           ;init_PIC.c: 35:     TRISCbits.RC6 = 0;
 10334  0035DA  9C94               	bcf	148,6,c	;volatile
 10335  0035DC                     
 10336                           ;init_PIC.c: 36:     TRISCbits.RC2 = 0;
 10337  0035DC  9494               	bcf	148,2,c	;volatile
 10338  0035DE  0012               	return		;funcret
 10339  0035E0  FFFF               	dw	65535	; errata NOP
 10340  0035E2                     __end_of_init_PORTS:
 10341                           	callstack 0
 10342                           
 10343 ;; *************** function _Rx_char_USART *****************
 10344 ;; Defined at:
 10345 ;;		line 776 in file "main.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;		None
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;  i               2    7[COMRAM] int 
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10359 ;;      Params:         0       0       0       0       0       0       0
 10360 ;;      Locals:         2       0       0       0       0       0       0
 10361 ;;      Temps:          5       0       0       0       0       0       0
 10362 ;;      Totals:         7       0       0       0       0       0       0
 10363 ;;Total ram usage:        7 bytes
 10364 ;; Hardware stack levels used: 1
 10365 ;; Hardware stack levels required when called: 1
 10366 ;; This function calls:
 10367 ;;		_set_new_pos
 10368 ;; This function is called by:
 10369 ;;		Interrupt level 2
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	intcode
 10374  000008                     __pintcode:
 10375                           	callstack 0
 10376  000008                     _Rx_char_USART:
 10377                           	callstack 0
 10378  000008  FFFF               	dw	65535	; assembler added errata NOP
 10379                           
 10380                           ;incstack = 0
 10381  00000A  8276               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10382  00000C  CFD9 F006          	movff	fsr2l,??_Rx_char_USART+3
 10383  000010  CFDA F007          	movff	fsr2h,??_Rx_char_USART+4
 10384  000014                     
 10385                           ;main.c: 778:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 10386  000014  AA9D               	btfss	157,5,c	;volatile
 10387  000016  EF0F  F000         	goto	i2u459_41
 10388  00001A  EF12  F000         	goto	i2u459_40
 10389  00001E                     i2u459_41:
 10390  00001E  FFFF               	dw	65535	; assembler added errata NOP
 10391  000020  EF5E  F000         	goto	i2l4389
 10392  000024                     i2u459_40:
 10393  000024  FFFF               	dw	65535	; assembler added errata NOP
 10394  000026  AA9E               	btfss	158,5,c	;volatile
 10395  000028  EF18  F000         	goto	i2u460_41
 10396  00002C  EF1B  F000         	goto	i2u460_40
 10397  000030                     i2u460_41:
 10398  000030  FFFF               	dw	65535	; assembler added errata NOP
 10399  000032  EF5E  F000         	goto	i2l4389
 10400  000036                     i2u460_40:
 10401  000036  FFFF               	dw	65535	; assembler added errata NOP
 10402  000038                     
 10403                           ;main.c: 779:         int i=0;
 10404  000038  0E00               	movlw	0
 10405  00003A  6E09               	movwf	(Rx_char_USART@i+1)^0,c
 10406  00003C  0E00               	movlw	0
 10407  00003E  6E08               	movwf	Rx_char_USART@i^0,c
 10408  000040                     i2l476:
 10409  000040  FFFF               	dw	65535	; assembler added errata NOP
 10410  000042  B2F2               	btfsc	242,1,c	;volatile
 10411  000044  EF26  F000         	goto	i2u461_41
 10412  000048  EF29  F000         	goto	i2u461_40
 10413  00004C                     i2u461_41:
 10414  00004C  FFFF               	dw	65535	; assembler added errata NOP
 10415  00004E  EF32  F000         	goto	i2l4381
 10416  000052                     i2u461_40:
 10417  000052  FFFF               	dw	65535	; assembler added errata NOP
 10418  000054  AA9E               	btfss	3998,5,c	;volatile
 10419  000056  EF2F  F000         	goto	i2u462_41
 10420  00005A  EF32  F000         	goto	i2u462_40
 10421  00005E                     i2u462_41:
 10422  00005E  FFFF               	dw	65535	; assembler added errata NOP
 10423  000060  EF20  F000         	goto	i2l476
 10424  000064                     i2u462_40:
 10425  000064                     i2l4381:
 10426  000064  FFFF               	dw	65535	; assembler added errata NOP
 10427                           
 10428                           ;main.c: 783:             input_str[i]=RCREG;
 10429  000066  0EB1               	movlw	low _input_str
 10430  000068  2408               	addwf	Rx_char_USART@i^0,w,c
 10431  00006A  6ED9               	movwf	fsr2l,c
 10432  00006C  0E00               	movlw	high _input_str
 10433  00006E  2009               	addwfc	(Rx_char_USART@i+1)^0,w,c
 10434  000070  6EDA               	movwf	fsr2h,c
 10435  000072  CFAE FFDF          	movff	4014,indf2	;volatile
 10436  000076                     
 10437                           ;main.c: 784:         }while(INTCONbits.INT0IF==0 && input_str[i++] != '\n');
 10438  000076  B2F2               	btfsc	242,1,c	;volatile
 10439  000078  EF40  F000         	goto	i2u463_41
 10440  00007C  EF43  F000         	goto	i2u463_40
 10441  000080                     i2u463_41:
 10442  000080  FFFF               	dw	65535	; assembler added errata NOP
 10443  000082  EF5A  F000         	goto	i2l483
 10444  000086                     i2u463_40:
 10445  000086  FFFF               	dw	65535	; assembler added errata NOP
 10446  000088  5008               	movf	Rx_char_USART@i^0,w,c
 10447  00008A  6E03               	movwf	??_Rx_char_USART^0,c
 10448  00008C  5009               	movf	(Rx_char_USART@i+1)^0,w,c
 10449  00008E  6E04               	movwf	(??_Rx_char_USART+1)^0,c
 10450  000090  4A08               	infsnz	Rx_char_USART@i^0,f,c
 10451  000092  2A09               	incf	(Rx_char_USART@i+1)^0,f,c
 10452  000094  0EB1               	movlw	low _input_str
 10453  000096  2403               	addwf	??_Rx_char_USART^0,w,c
 10454  000098  6ED9               	movwf	fsr2l,c
 10455  00009A  0E00               	movlw	high _input_str
 10456  00009C  2004               	addwfc	(??_Rx_char_USART+1)^0,w,c
 10457  00009E  6EDA               	movwf	fsr2h,c
 10458  0000A0  0E0A               	movlw	10
 10459  0000A2  18DE               	xorwf	postinc2,w,c
 10460  0000A4  A4D8               	btfss	status,2,c
 10461  0000A6  EF57  F000         	goto	i2u464_41
 10462  0000AA  EF5A  F000         	goto	i2u464_40
 10463  0000AE                     i2u464_41:
 10464  0000AE  FFFF               	dw	65535	; assembler added errata NOP
 10465  0000B0  EF20  F000         	goto	i2l476
 10466  0000B4                     i2u464_40:
 10467  0000B4                     i2l483:
 10468  0000B4  FFFF               	dw	65535	; assembler added errata NOP
 10469                           
 10470                           ;main.c: 786:         PIR1bits.RCIF = 0;
 10471  0000B6  9A9E               	bcf	158,5,c	;volatile
 10472  0000B8                     
 10473                           ;main.c: 787:         New_char_RX = 1;
 10474  0000B8  0E01               	movlw	1
 10475  0000BA  6E74               	movwf	_New_char_RX^0,c
 10476  0000BC                     i2l4389:
 10477  0000BC  FFFF               	dw	65535	; assembler added errata NOP
 10478                           
 10479                           ;main.c: 793:     if(INTCONbits.INT0IF && INTCONbits.INT0IE){
 10480  0000BE  A2F2               	btfss	242,1,c	;volatile
 10481  0000C0  EF64  F000         	goto	i2u465_41
 10482  0000C4  EF67  F000         	goto	i2u465_40
 10483  0000C8                     i2u465_41:
 10484  0000C8  FFFF               	dw	65535	; assembler added errata NOP
 10485  0000CA  EF74  F000         	goto	i2l4397
 10486  0000CE                     i2u465_40:
 10487  0000CE  FFFF               	dw	65535	; assembler added errata NOP
 10488  0000D0  A8F2               	btfss	242,4,c	;volatile
 10489  0000D2  EF6D  F000         	goto	i2u466_41
 10490  0000D6  EF70  F000         	goto	i2u466_40
 10491  0000DA                     i2u466_41:
 10492  0000DA  FFFF               	dw	65535	; assembler added errata NOP
 10493  0000DC  EF74  F000         	goto	i2l4397
 10494  0000E0                     i2u466_40:
 10495  0000E0  FFFF               	dw	65535	; assembler added errata NOP
 10496  0000E2                     
 10497                           ;main.c: 794:         INTCONbits.INT0IF=0;
 10498  0000E2  92F2               	bcf	242,1,c	;volatile
 10499  0000E4                     
 10500                           ;main.c: 795:         stop=1;
 10501  0000E4  0E01               	movlw	1
 10502  0000E6  6E72               	movwf	_stop^0,c
 10503  0000E8                     i2l4397:
 10504  0000E8  FFFF               	dw	65535	; assembler added errata NOP
 10505                           
 10506                           ;main.c: 800:     if(INTCON3bits.INT1IF && INTCON3bits.INT1IE){
 10507  0000EA  A0F0               	btfss	240,0,c	;volatile
 10508  0000EC  EF7A  F000         	goto	i2u467_41
 10509  0000F0  EF7D  F000         	goto	i2u467_40
 10510  0000F4                     i2u467_41:
 10511  0000F4  FFFF               	dw	65535	; assembler added errata NOP
 10512  0000F6  EF8A  F000         	goto	i2l4405
 10513  0000FA                     i2u467_40:
 10514  0000FA  FFFF               	dw	65535	; assembler added errata NOP
 10515  0000FC  A6F0               	btfss	240,3,c	;volatile
 10516  0000FE  EF83  F000         	goto	i2u468_41
 10517  000102  EF86  F000         	goto	i2u468_40
 10518  000106                     i2u468_41:
 10519  000106  FFFF               	dw	65535	; assembler added errata NOP
 10520  000108  EF8A  F000         	goto	i2l4405
 10521  00010C                     i2u468_40:
 10522  00010C  FFFF               	dw	65535	; assembler added errata NOP
 10523  00010E                     
 10524                           ;main.c: 801:         INTCON3bits.INT1IF=0;
 10525  00010E  90F0               	bcf	240,0,c	;volatile
 10526  000110                     
 10527                           ;main.c: 802:         component_present=1;
 10528  000110  0E01               	movlw	1
 10529  000112  6E73               	movwf	_component_present^0,c
 10530  000114                     i2l4405:
 10531  000114  FFFF               	dw	65535	; assembler added errata NOP
 10532                           
 10533                           ;main.c: 807:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
 10534  000116  AAF2               	btfss	242,5,c	;volatile
 10535  000118  EF90  F000         	goto	i2u469_41
 10536  00011C  EF93  F000         	goto	i2u469_40
 10537  000120                     i2u469_41:
 10538  000120  FFFF               	dw	65535	; assembler added errata NOP
 10539  000122  EFA9  F000         	goto	i2l4419
 10540  000126                     i2u469_40:
 10541  000126  FFFF               	dw	65535	; assembler added errata NOP
 10542  000128  A4F2               	btfss	242,2,c	;volatile
 10543  00012A  EF99  F000         	goto	i2u470_41
 10544  00012E  EF9C  F000         	goto	i2u470_40
 10545  000132                     i2u470_41:
 10546  000132  FFFF               	dw	65535	; assembler added errata NOP
 10547  000134  EFA9  F000         	goto	i2l4419
 10548  000138                     i2u470_40:
 10549  000138  FFFF               	dw	65535	; assembler added errata NOP
 10550  00013A                     
 10551                           ;main.c: 808:         {;main.c: 810:          TMR0H = 0xB2;
 10552  00013A  0EB2               	movlw	178
 10553  00013C  6ED7               	movwf	215,c	;volatile
 10554                           
 10555                           ;main.c: 811:             TMR0L = 0x04;
 10556  00013E  0E04               	movlw	4
 10557  000140  6ED6               	movwf	214,c	;volatile
 10558  000142                     
 10559                           ;main.c: 812:    set_new_pos(new_TMR1H, new_TMR1L);
 10560  000142  C0AE  F001         	movff	_new_TMR1L@main$F796,set_new_pos@nTMR1L
 10561  000146  5075               	movf	_new_TMR1H@main$F795^0,w,c
 10562  000148  EC20  F01B         	call	_set_new_pos
 10563  00014C                     
 10564                           ;main.c: 813:             T0CONbits.TMR0ON = 1;
 10565  00014C  8ED5               	bsf	213,7,c	;volatile
 10566  00014E                     
 10567                           ;main.c: 814:    T1CONbits.TMR1ON = 1;
 10568  00014E  80CD               	bsf	205,0,c	;volatile
 10569  000150                     
 10570                           ;main.c: 815:             INTCONbits.TMR0IF = 0;
 10571  000150  94F2               	bcf	242,2,c	;volatile
 10572  000152                     i2l4419:
 10573  000152  FFFF               	dw	65535	; assembler added errata NOP
 10574                           
 10575                           ;main.c: 819:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF)
 10576  000154  A09D               	btfss	157,0,c	;volatile
 10577  000156  EFAF  F000         	goto	i2u471_41
 10578  00015A  EFB2  F000         	goto	i2u471_40
 10579  00015E                     i2u471_41:
 10580  00015E  FFFF               	dw	65535	; assembler added errata NOP
 10581  000160  EFBF  F000         	goto	i2l488
 10582  000164                     i2u471_40:
 10583  000164  FFFF               	dw	65535	; assembler added errata NOP
 10584  000166  A09E               	btfss	158,0,c	;volatile
 10585  000168  EFB8  F000         	goto	i2u472_41
 10586  00016C  EFBB  F000         	goto	i2u472_40
 10587  000170                     i2u472_41:
 10588  000170  FFFF               	dw	65535	; assembler added errata NOP
 10589  000172  EFBF  F000         	goto	i2l488
 10590  000176                     i2u472_40:
 10591  000176  FFFF               	dw	65535	; assembler added errata NOP
 10592  000178                     
 10593                           ;main.c: 820:         {;main.c: 821:             LATCbits.LC2 = 0;
 10594  000178  948B               	bcf	139,2,c	;volatile
 10595                           
 10596                           ;main.c: 822:             T1CONbits.TMR1ON = 0;
 10597  00017A  90CD               	bcf	205,0,c	;volatile
 10598                           
 10599                           ;main.c: 823:          PIR1bits.TMR1IF = 0;
 10600  00017C  909E               	bcf	158,0,c	;volatile
 10601  00017E                     i2l488:
 10602  00017E  FFFF               	dw	65535	; assembler added errata NOP
 10603  000180  C007  FFDA         	movff	??_Rx_char_USART+4,fsr2h
 10604  000184  C006  FFD9         	movff	??_Rx_char_USART+3,fsr2l
 10605  000188  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10606  00018A  0011               	retfie		f
 10607  00018C  FFFF               	dw	65535	; errata NOP
 10608  00018E                     __end_of_Rx_char_USART:
 10609                           	callstack 0
 10610                           
 10611 ;; *************** function _set_new_pos *****************
 10612 ;; Defined at:
 10613 ;;		line 586 in file "main.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;  nTMR1H          1    wreg     unsigned char 
 10616 ;;  nTMR1L          1    0[COMRAM] unsigned char 
 10617 ;; Auto vars:     Size  Location     Type
 10618 ;;  nTMR1H          1    1[COMRAM] unsigned char 
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  1    wreg      void 
 10621 ;; Registers used:
 10622 ;;		wreg
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10628 ;;      Params:         1       0       0       0       0       0       0
 10629 ;;      Locals:         1       0       0       0       0       0       0
 10630 ;;      Temps:          0       0       0       0       0       0       0
 10631 ;;      Totals:         2       0       0       0       0       0       0
 10632 ;;Total ram usage:        2 bytes
 10633 ;; Hardware stack levels used: 1
 10634 ;; This function calls:
 10635 ;;		Nothing
 10636 ;; This function is called by:
 10637 ;;		_Rx_char_USART
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641                           	psect	text41
 10642  003640                     __ptext41:
 10643                           	callstack 0
 10644  003640                     _set_new_pos:
 10645                           	callstack 0
 10646  003640  FFFF               	dw	65535	; assembler added errata NOP
 10647                           
 10648                           ;incstack = 0
 10649                           ;set_new_pos@nTMR1H stored from wreg
 10650  003642  6E02               	movwf	set_new_pos@nTMR1H^0,c
 10651  003644                     
 10652                           ;main.c: 586: void set_new_pos(uint8_t nTMR1H, uint8_t nTMR1L);main.c: 587: {;main.c: 58
      +                          8:     TMR1H = nTMR1H;
 10653  003644  C002  FFCF         	movff	set_new_pos@nTMR1H,4047	;volatile
 10654  003648                     
 10655                           ;main.c: 589:     TMR1L = nTMR1L;
 10656  003648  C001  FFCE         	movff	set_new_pos@nTMR1L,4046	;volatile
 10657  00364C                     
 10658                           ;main.c: 590:     LATCbits.LC2 = 1;
 10659  00364C  848B               	bsf	139,2,c	;volatile
 10660  00364E                     
 10661                           ;main.c: 591:  T1CONbits.TMR1ON = 1;
 10662  00364E  80CD               	bsf	205,0,c	;volatile
 10663  003650  0012               	return		;funcret
 10664  003652  FFFF               	dw	65535	; errata NOP
 10665  003654                     __end_of_set_new_pos:
 10666                           	callstack 0
 10667                           
 10668                           	psect	rparam
 10669  0000                     
 10670                           	psect	temp
 10671  000076                     btemp:
 10672                           	callstack 0
 10673  000076                     	ds	1
 10674  0000                     int$flags	set	btemp
 10675  0000                     wtemp8	set	btemp+1
 10676  0000                     ttemp5	set	btemp+1
 10677  0000                     ttemp6	set	btemp+4
 10678  0000                     ttemp7	set	btemp+8
 10679                           
 10680                           	psect	idloc
 10681                           
 10682                           ;Config register IDLOC0 @ 0x200000
 10683                           ;	unspecified, using default values
 10684  200000                     	org	2097152
 10685  200000  FF                 	db	255
 10686                           
 10687                           ;Config register IDLOC1 @ 0x200001
 10688                           ;	unspecified, using default values
 10689  200001                     	org	2097153
 10690  200001  FF                 	db	255
 10691                           
 10692                           ;Config register IDLOC2 @ 0x200002
 10693                           ;	unspecified, using default values
 10694  200002                     	org	2097154
 10695  200002  FF                 	db	255
 10696                           
 10697                           ;Config register IDLOC3 @ 0x200003
 10698                           ;	unspecified, using default values
 10699  200003                     	org	2097155
 10700  200003  FF                 	db	255
 10701                           
 10702                           ;Config register IDLOC4 @ 0x200004
 10703                           ;	unspecified, using default values
 10704  200004                     	org	2097156
 10705  200004  FF                 	db	255
 10706                           
 10707                           ;Config register IDLOC5 @ 0x200005
 10708                           ;	unspecified, using default values
 10709  200005                     	org	2097157
 10710  200005  FF                 	db	255
 10711                           
 10712                           ;Config register IDLOC6 @ 0x200006
 10713                           ;	unspecified, using default values
 10714  200006                     	org	2097158
 10715  200006  FF                 	db	255
 10716                           
 10717                           ;Config register IDLOC7 @ 0x200007
 10718                           ;	unspecified, using default values
 10719  200007                     	org	2097159
 10720  200007  FF                 	db	255
 10721                           
 10722                           	psect	config
 10723                           
 10724                           ; Padding undefined space
 10725  300000                     	org	3145728
 10726  300000  FF                 	db	255
 10727                           
 10728                           ;Config register CONFIG1H @ 0x300001
 10729                           ;	Oscillator Selection bits
 10730                           ;	OSC = XT, XT oscillator
 10731                           ;	Oscillator System Clock Switch Enable bit
 10732                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 10733  300001                     	org	3145729
 10734  300001  21                 	db	33
 10735                           
 10736                           ;Config register CONFIG2L @ 0x300002
 10737                           ;	Power-up Timer Enable bit
 10738                           ;	PWRT = OFF, PWRT disabled
 10739                           ;	Brown-out Reset Enable bit
 10740                           ;	BOR = OFF, Brown-out Reset disabled
 10741                           ;	Brown-out Reset Voltage bits
 10742                           ;	BORV = 20, VBOR set to 2.0V
 10743  300002                     	org	3145730
 10744  300002  0D                 	db	13
 10745                           
 10746                           ;Config register CONFIG2H @ 0x300003
 10747                           ;	Watchdog Timer Enable bit
 10748                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10749                           ;	Watchdog Timer Postscale Select bits
 10750                           ;	WDTPS = 128, 1:128
 10751  300003                     	org	3145731
 10752  300003  0E                 	db	14
 10753                           
 10754                           ; Padding undefined space
 10755  300004                     	org	3145732
 10756  300004  FF                 	db	255
 10757                           
 10758                           ;Config register CONFIG3H @ 0x300005
 10759                           ;	CCP2 Mux bit
 10760                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
 10761  300005                     	org	3145733
 10762  300005  00                 	db	0
 10763                           
 10764                           ;Config register CONFIG4L @ 0x300006
 10765                           ;	Stack Full/Underflow Reset Enable bit
 10766                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
 10767                           ;	Low Voltage ICSP Enable bit
 10768                           ;	LVP = OFF, Low Voltage ICSP disabled
 10769                           ;	Background Debugger Enable bit
 10770                           ;	DEBUG = 0x1, unprogrammed default
 10771  300006                     	org	3145734
 10772  300006  80                 	db	128
 10773                           
 10774                           ; Padding undefined space
 10775  300007                     	org	3145735
 10776  300007  FF                 	db	255
 10777                           
 10778                           ;Config register CONFIG5L @ 0x300008
 10779                           ;	Code Protection bit
 10780                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 10781                           ;	Code Protection bit
 10782                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 10783                           ;	Code Protection bit
 10784                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 10785                           ;	Code Protection bit
 10786                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 10787  300008                     	org	3145736
 10788  300008  0F                 	db	15
 10789                           
 10790                           ;Config register CONFIG5H @ 0x300009
 10791                           ;	Boot Block Code Protection bit
 10792                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 10793                           ;	Data EEPROM Code Protection bit
 10794                           ;	CPD = OFF, Data EEPROM not code protected
 10795  300009                     	org	3145737
 10796  300009  C0                 	db	192
 10797                           
 10798                           ;Config register CONFIG6L @ 0x30000A
 10799                           ;	Write Protection bit
 10800                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 10801                           ;	Write Protection bit
 10802                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 10803                           ;	Write Protection bit
 10804                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 10805                           ;	Write Protection bit
 10806                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 10807  30000A                     	org	3145738
 10808  30000A  0F                 	db	15
 10809                           
 10810                           ;Config register CONFIG6H @ 0x30000B
 10811                           ;	Configuration Register Write Protection bit
 10812                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 10813                           ;	Boot Block Write Protection bit
 10814                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 10815                           ;	Data EEPROM Write Protection bit
 10816                           ;	WRTD = OFF, Data EEPROM not write protected
 10817  30000B                     	org	3145739
 10818  30000B  E0                 	db	224
 10819                           
 10820                           ;Config register CONFIG7L @ 0x30000C
 10821                           ;	Table Read Protection bit
 10822                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 10823                           ;	Table Read Protection bit
 10824                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 10825                           ;	Table Read Protection bit
 10826                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 10827                           ;	Table Read Protection bit
 10828                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 10829  30000C                     	org	3145740
 10830  30000C  0F                 	db	15
 10831                           
 10832                           ;Config register CONFIG7H @ 0x30000D
 10833                           ;	Boot Block Table Read Protection bit
 10834                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 10835  30000D                     	org	3145741
 10836  30000D  40                 	db	64
 10837                           tosu	equ	0xFFF
 10838                           tosh	equ	0xFFE
 10839                           tosl	equ	0xFFD
 10840                           stkptr	equ	0xFFC
 10841                           pclatu	equ	0xFFB
 10842                           pclath	equ	0xFFA
 10843                           pcl	equ	0xFF9
 10844                           tblptru	equ	0xFF8
 10845                           tblptrh	equ	0xFF7
 10846                           tblptrl	equ	0xFF6
 10847                           tablat	equ	0xFF5
 10848                           prodh	equ	0xFF4
 10849                           prodl	equ	0xFF3
 10850                           indf0	equ	0xFEF
 10851                           postinc0	equ	0xFEE
 10852                           postdec0	equ	0xFED
 10853                           preinc0	equ	0xFEC
 10854                           plusw0	equ	0xFEB
 10855                           fsr0h	equ	0xFEA
 10856                           fsr0l	equ	0xFE9
 10857                           wreg	equ	0xFE8
 10858                           indf1	equ	0xFE7
 10859                           postinc1	equ	0xFE6
 10860                           postdec1	equ	0xFE5
 10861                           preinc1	equ	0xFE4
 10862                           plusw1	equ	0xFE3
 10863                           fsr1h	equ	0xFE2
 10864                           fsr1l	equ	0xFE1
 10865                           bsr	equ	0xFE0
 10866                           indf2	equ	0xFDF
 10867                           postinc2	equ	0xFDE
 10868                           postdec2	equ	0xFDD
 10869                           preinc2	equ	0xFDC
 10870                           plusw2	equ	0xFDB
 10871                           fsr2h	equ	0xFDA
 10872                           fsr2l	equ	0xFD9
 10873                           status	equ	0xFD8

Data Sizes:
    Strings     817
    Constant    20
    Data        31
    BSS         51
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     90     117
    BANK0           128     33      89
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_componnt(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> input_str(BANK0[10]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), NULL(NULL[0]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(BANK0[4]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 112
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[45]), STR_19(CODE[10]), 
		 -> STR_18(CODE[12]), STR_17(CODE[70]), STR_16(CODE[19]), STR_15(CODE[63]), 
		 -> STR_14(CODE[20]), STR_13(CODE[39]), STR_12(CODE[37]), STR_11(CODE[37]), 
		 -> STR_10(CODE[38]), STR_9(CODE[36]), STR_8(CODE[36]), STR_7(CODE[52]), 
		 -> STR_6(CODE[27]), add_component@add_componnt(COMRAM[2]), STR_5(CODE[40]), STR_4(CODE[27]), 
		 -> STR_3(CODE[34]), sequence(BANK0[4]), STR_2(CODE[21]), input_str(BANK0[10]), 
		 -> STR_1(CODE[112]), 


Critical Paths under _main in COMRAM

    _start_up_menu->_pick_and_place
    _return_to_initial->_Twister
    _return_to_initial->_X_axis
    _return_to_initial->_Y_axis
    _return_to_initial->_Z_axis
    _remove_component->_strrchr
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _pick_and_place->___flge
    _check_component->_print_string
    ___fldiv->___xxtofl
    _Z_axis->_ms_delay
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _change_sequence->_print_string
    _add_component->_atoi
    _strcat->_strcpy
    _strcpy->_strlen
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    _Rx_char_USART->_set_new_pos

Critical Paths under _main in BANK0

    _start_up_menu->_pick_and_place
    _init_USART->___fltol

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   91308
                         _init_PORTS
                        _init_Timers
                         _init_USART
                    _init_interrupts
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                        4     4      0   80075
                                             62 COMRAM     4     4      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
                  _return_to_initial
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _return_to_initial                                    9     9      0   24042
                                             16 COMRAM     9     9      0
                            _Tweezer
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
 ---------------------------------------------------------------------------------
 (2) _remove_component                                     5     5      0    5299
                                             27 COMRAM     5     5      0
                            _memmove
                       _print_string
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4    1018
                                             23 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     406
                                             13 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     592
                                             13 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _pick_and_place                                      35    35      0   36809
                                             60 COMRAM     2     2      0
                                              0 BANK0     33    33      0
                            _Tweezer
                            _Twister
                             _X_axis
                             _Y_axis
                             _Z_axis
                            ___fldiv
                             ___flge
                             ___wmul
                           ___xxtofl
                    _check_component
                  _fetch_coordinates
                         _print_char
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _fetch_coordinates                                    1     1      0     124
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_component                                      5     5      0    3199
                                             15 COMRAM     5     5      0
                         _print_char
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _print_char                                           1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2183
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Z_axis                                               1     1      0    5958
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Y_axis                                               1     1      0    5958
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _X_axis                                               1     1      0    5958
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (3) _Twister                                              1     1      0    5958
                                             15 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _ms_delay                                             6     4      2    5896
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _Tweezer                                              1     1      0      62
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                      5     5      0    3196
                                             15 COMRAM     5     5      0
                       _print_string
 ---------------------------------------------------------------------------------
 (2) _add_component                                        2     2      0    7167
                                             31 COMRAM     2     2      0
                               _atoi
                       _print_string
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     0      4     866
                                             21 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     394
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               8     4      4     248
                                             13 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2    3100
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    3121
                                             16 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     207
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     161
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1740
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11233
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10806
                                             60 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              9 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              9 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                             48 COMRAM    12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             86 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Rx_char_USART                                        7     7      0     165
                                              2 COMRAM     7     7      0
                        _set_new_pos
 ---------------------------------------------------------------------------------
 (6) _set_new_pos                                          2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_Timers
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _print_string
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
     _change_sequence
       _print_string
     _pick_and_place
       _Tweezer
       _Twister
         _ms_delay
       _X_axis
         _ms_delay
       _Y_axis
         _ms_delay
       _Z_axis
         _ms_delay
       ___fldiv
       ___flge
       ___wmul
       ___xxtofl
       _check_component
         _print_char
         _print_string
       _fetch_coordinates
       _print_char
       _print_string
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _print_string
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen
     _return_to_initial
       _Tweezer
       _Twister
       _X_axis
       _Y_axis
       _Z_axis
     _strlen

 _Rx_char_USART (ROOT)
   _set_new_pos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      59       5       69.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5A      75       1       92.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE      15        0.0%
DATA                 0      0      CE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 26 09:01:30 2021

                                                     ___fldiv@aexp 0030  
                                                     ___fldiv@bexp 002F  
                                                     ___fldiv@sign 0028  
                                                               l50 35B6  
                                                               l53 361E  
                                                               l47 35DE  
                                                               l72 34D2  
                                                               l81 3098  
                                                               l84 35EA  
                                                               l77 303C  
                                                               l87 35FE  
                                              ___wmul@multiplicand 000C  
                                           __size_of_start_up_menu 0166  
                                                              l322 2690  
                                                              l307 1E4C  
                                                              l324 272C  
                                                              l332 240C  
                                                              l334 24A8  
                                                              l327 254E  
                                                              l319 2F14  
                                                              l263 2366  
                                                              l272 3130  
                                                              l353 31EC  
                                                              l337 27D2  
                                                              l329 25EA  
                                                              l361 29A6  
                                                              l355 3226  
                                                              l347 32E2  
                                                              l339 286E  
                                                              l372 2FE2  
                                                              l365 29A6  
                                                              l453 096C  
                                                              l454 0986  
                                                              l462 2C9E  
                                                              l376 2FF6  
                                                              l465 2CE2  
                                                              l491 358C  
                                                              l459 2C5A  
                                                              l469 2D2C  
                                                              l761 2C06  
                                                              l756 2BB8  
                                                              l765 3492  
                                                              l788 2ADE  
                                                ??_init_interrupts 000A  
                                                              wreg 000FE8  
                                                     ___flmul@aexp 001B  
                                                     ___flmul@bexp 001C  
                                                     ___flmul@sign 0016  
                                                     ___flmul@temp 0021  
                                                     ___flmul@prod 001D  
                                                     ___fltol@exp1 0085  
                                                             l1020 0BBC  
                                                             l1021 0B72  
                                                             l1112 122A  
                                                             l1105 101E  
                                                             l1122 1388  
                                                             l1114 12BA  
                                                             l1115 12A2  
                                                             l1019 0BD2  
                                                             l1036 0D16  
                                                             l1028 0F2C  
                                                             l1204 3286  
                                                             l1109 13D0  
                                                             l1045 0E1A  
                                                             l1061 3384  
                                                             l1046 0E02  
                                                             l1160 1FC8  
                                                             l3001 0B86  
                                                             l1225 1BE8  
                                                             l1073 1802  
                                                             l1153 1F5C  
                                                             l1217 2E24  
                                                             l1146 1EB0  
                                                             l3011 0BBA  
                                                             l3003 0B92  
                                                             l1251 340E  
                                                             l1075 161A  
                                                             l1084 1670  
                                                             l3101 0EF4  
                                                             l3021 0C20  
                                                             l3013 0BE6  
                                                             l3005 0B98  
                                                             l1245 33CC  
                                                             l1149 2042  
                                                             l1190 21F6  
                                                             l1086 1700  
                                                             l1078 15D4  
                                                             l3111 0F1A  
                                                             l3103 0EFA  
                                                             l3031 0C6A  
                                                             l3023 0C32  
                                                             l3015 0BFA  
                                                             l3007 0BAC  
                                                             l1239 3562  
                                                             l1087 16E8  
                                                             l1264 31B0  
                                                             l3105 0EFE  
                                                             l3041 0CDE  
                                                             l3033 0C6C  
                                                             l3025 0C44  
                                                             l3009 0BAE  
                                                             l3121 327A  
                                                             l1193 2200  
                                                             l3201 2D32  
                                                             l1258 350C  
                                                             l3107 0F06  
                                                             l3051 0D46  
                                                             l3043 0CE0  
                                                             l3035 0C78  
                                                             l3027 0C50  
                                                             l3019 0C0E  
                                                             l3123 327E  
                                                             l3115 322A  
                                                             l3131 338A  
                                                             l3203 2D5C  
                                                             l3211 2DD4  
                                                             l1196 3450  
                                                             l3109 0F18  
                                                             l3061 0D7A  
                                                             l3045 0CF4  
                                                             l3029 0C56  
                                                             l3037 0C7E  
                                                             l3117 3230  
                                                             l3133 339A  
                                                             l3213 2DEC  
                                                             l3205 2D82  
                                                             l3141 3178  
                                                             l3063 0D8E  
                                                             l3055 0D5A  
                                                             l3071 0DB4  
                                                             l3039 0CAA  
                                                             l3047 0D04  
                                                             l3127 3412  
                                                             l3119 3248  
                                                             l3215 2E02  
                                                             l3207 2D92  
                                                             l3135 3136  
                                                             l3065 0D96  
                                                             l3057 0D66  
                                                             l3049 0D32  
                                                             l3073 0DC6  
                                                             l5001 1E54  
                                                             l3217 2E06  
                                                             l3209 2DB4  
                                                             l3145 3188  
                                                             l3137 313E  
                                                             l3083 0E30  
                                                             l3091 0E8E  
                                                             l3075 0DCC  
                                                             l3067 0D9C  
                                                             l3059 0D78  
                                                             l5003 1E68  
                                                             l3219 2E0A  
                                                             l3147 31A8  
                                                             l3139 3148  
                                                             l3093 0EA4  
                                                             l3085 0E3C  
                                                             l3077 0DDE  
                                                             l3069 0DB2  
                                                             l5021 1F46  
                                                             l5013 1EF2  
                                                             l5005 1E7A  
                                                             l5101 2CB2  
                                                             l3095 0EB6  
                                                             l3087 0E4E  
                                                             l3079 0DF8  
                                                             l2711 361A  
                                                             l2703 3604  
                                                             l5031 1FDC  
                                                             l5023 1F52  
                                                             l5015 1EFC  
                                                             l5007 1EC2  
                                                             l5111 2CFE  
                                                             l5103 2CBA  
                                                             l3097 0EDC  
                                                             l3089 0E8C  
                                                             l2713 361C  
                                                             l2705 360E  
                                                             l3193 353E  
                                                             l5041 202E  
                                                             l5033 1FDE  
                                                             l5025 1F94  
                                                             l5017 1F0A  
                                                             l5009 1EDE  
                                                             l5201 056E  
                                                             l5121 01AC  
                                                             l5113 2D02  
                                                             l5105 2CBE  
                                                             l3099 0EE0  
                                                             l5051 187A  
                                                             l2707 3616  
                                                             l5043 2030  
                                                             l5035 1FE4  
                                                             l5027 1FA2  
                                                             l5019 1F42  
                                                             l5211 0628  
                                                             l5203 0580  
                                                             l5131 0240  
                                                             l5123 01B4  
                                                             l5115 2D26  
                                                             l5107 2CEA  
                                                             l3701 105C  
                                                             l5053 188E  
                                                             l2709 3618  
                                                             l4501 2064  
                                                             l5301 1C4A  
                                                             l5037 2008  
                                                             l5029 1FB6  
                                                             l5221 0692  
                                                             l5213 0638  
                                                             l5205 0600  
                                                             l5141 02A8  
                                                             l5133 0248  
                                                             l5125 01DE  
                                                             l5117 0198  
                                                             l3197 34D8  
                                                             l5109 2CF6  
                                                             l3711 10AE  
                                                             l3703 106A  
                                                             l5071 1B36  
                                                             l5063 1952  
                                                             l5055 18D4  
                                                             l5047 180A  
                                                             l4503 206A  
                                                             l5311 1C88  
                                                             l5303 1C4E  
                                                             l5039 201C  
                                                             l5231 0702  
                                                             l5223 06A0  
                                                             l5215 0640  
                                                             l5207 0614  
                                                             l5151 0310  
                                                             l5143 02E2  
                                                             l5135 024E  
                                                             l5127 0208  
                                                             l5119 01A0  
                                                             l2681 35DC  
                                                             l3721 10F0  
                                                             l3713 10BA  
                                                             l3705 1074  
                                                             l2921 09C2  
                                                             l2913 098C  
                                                             l5073 1B6C  
                                                             l5065 1A26  
                                                             l5057 18F8  
                                                             l5049 182A  
                                                             l4521 2130  
                                                             l4513 20CC  
                                                             l4505 2088  
                                                             l5321 1CCE  
                                                             l5313 1C94  
                                                             l5305 1C52  
                                                             l4601 24C6  
                                                             l5241 079C  
                                                             l5233 0708  
                                                             l5225 06DA  
                                                             l5217 0646  
                                                             l5209 0620  
                                                             l5161 03B6  
                                                             l5153 033C  
                                                             l5145 02F4  
                                                             l5137 027A  
                                                             l5129 0232  
                                                             l5081 2C0E  
                                                             l2675 35BC  
                                                             l2691 35A4  
                                                             l5411 29CA  
                                                             l3731 1152  
                                                             l3723 10FC  
                                                             l3715 10C6  
                                                             l3707 108A  
                                                             l2931 0A04  
                                                             l2923 09D6  
                                                             l2915 0998  
                                                             l5075 1BB2  
                                                             l5067 1A92  
                                                             l5059 191A  
                                                             l4531 21C4  
                                                             l4515 20E6  
                                                             l4507 20C0  
                                                             l5331 1D14  
                                                             l5323 1CDA  
                                                             l5315 1C98  
                                                             l5307 1C5E  
                                                             l4611 24EA  
                                                             l4603 24CA  
                                                             l5251 07F6  
                                                             l5243 07AE  
                                                             l5235 0734  
                                                             l5227 06EC  
                                                             l5219 0672  
                                                             l5171 041E  
                                                             l5163 03C4  
                                                             l5155 035C  
                                                             l5147 0302  
                                                             l5139 029A  
                                                             l5403 2EE6  
                                                             l5091 2C62  
                                                             l5083 2C16  
                                                             l2677 35D8  
                                                             l2693 35A6  
                                                             l2685 3592  
                                                             l5421 2A22  
                                                             l3741 11EC  
                                                             l3733 115E  
                                                             l3725 110C  
                                                             l3717 10D4  
                                                             l3709 1096  
                                                             l3661 0F34  
                                                             l3821 3470  
                                                             l2941 0A3E  
                                                             l2933 0A0C  
                                                             l2925 09E6  
                                                             l2917 09AA  
                                                             l5077 1BD6  
                                                             l5069 1ACA  
                                                             l4533 21DA  
                                                             l4525 216A  
                                                             l4517 20F0  
                                                             l4509 20C4  
                                                             l5341 1D5A  
                                                             l5333 1D20  
                                                             l5325 1CDE  
                                                             l5317 1CA4  
                                                             l5309 1C74  
                                                             l4541 2608  
                                                             l4621 2516  
                                                             l4613 24F6  
                                                             l4605 24D6  
                                                             l4701 2442  
                                                             l5261 08D2  
                                                             l5253 0816  
                                                             l5245 07BC  
                                                             l5237 0754  
                                                             l5229 06FA  
                                                             l5181 04E0  
                                                             l5173 042C  
                                                             l5165 03CC  
                                                             l5157 036A  
                                                             l5149 030A  
                                                             l5405 2EF4  
                                                             l5093 2C6E  
                                                             l5085 2C2A  
                                                             l5501 22F4  
                                                             l2679 35DA  
                                                             l2695 35A8  
                                                             l2687 359A  
                                                             l5431 2A54  
                                                             l5423 2A26  
                                                             l5415 29E0  
                                                             l3751 1250  
                                                             l3743 120A  
                                                             l3735 117A  
                                                             l3727 1126  
                                                             l3719 10E0  
                                                             l3671 0F7E  
                                                             l3663 0F40  
                                                             l3823 3480  
                                                             l2951 0A7E  
                                                             l2943 0A40  
                                                             l2935 0A22  
                                                             l2927 09EA  
                                                             l2919 09AC  
                                                             l4519 20FA  
                                                             l4471 3054  
                                                             l5351 1DA0  
                                                             l5343 1D66  
                                                             l5335 1D24  
                                                             l5327 1CEA  
                                                             l5319 1CBA  
                                                             l4551 262C  
                                                             l4543 260C  
                                                             l4631 253A  
                                                             l4623 251A  
                                                             l4615 24FA  
                                                             l4607 24DA  
                                                             l4711 2476  
                                                             l4703 2446  
                                                             l5271 091C  
                                                             l5263 08DA  
                                                             l5255 0824  
                                                             l5247 07C4  
                                                             l5239 0762  
                                                             l5191 052A  
                                                             l5183 04E8  
                                                             l5175 04B8  
                                                             l5167 03D2  
                                                             l5159 03A4  
                                                             l5407 2F0E  
                                                             l5095 2C76  
                                                             l5087 2C32  
                                                             l5503 22FE  
                                                             l5511 231E  
                                                             l2697 35AA  
                                                             l2689 35A2  
                                                             l5441 2A84  
                                                             l5433 2A60  
                                                             l5425 2A38  
                                                             l5417 2A10  
                                                             l5409 29AE  
                                                             l3761 12D0  
                                                             l3753 1254  
                                                             l3745 1216  
                                                             l3737 11A4  
                                                             l3729 1136  
                                                             l3681 0FB6  
                                                             l3673 0F8E  
                                                             l3665 0F52  
                                                             l2961 0AC6  
                                                             l2945 0A56  
                                                             l2953 0A86  
                                                             l2937 0A24  
                                                             l2929 09F2  
                                                             l4529 21AE  
                                                             l4465 2FFE  
                                                             l2881 33D2  
                                                             l5361 1DE6  
                                                             l5353 1DAC  
                                                             l5345 1D6A  
                                                             l5337 1D30  
                                                             l5329 1D00  
                                                             l5281 309E  
                                                             l4481 32BA  
                                                             l4721 274A  
                                                             l4561 2658  
                                                             l4553 2638  
                                                             l4545 2618  
                                                             l4641 2584  
                                                             l4633 2546  
                                                             l4625 2526  
                                                             l4617 2506  
                                                             l4609 24E6  
                                                             l4713 2486  
                                                             l4705 2456  
                                                             l4473 35E6  
                                                             l4801 290E  
                                                             l5273 092A  
                                                             l5265 08E0  
                                                             l5257 08B0  
                                                             l5249 07CA  
                                                             l5193 0530  
                                                             l5185 04EE  
                                                             l5177 04CA  
                                                             l5169 03FE  
                                                             l5097 2C7A  
                                                             l5089 2C36  
                                                             l5505 2308  
                                                             l5521 351A  
                                                             l2699 35AC  
                                                             l5443 2A92  
                                                             l5435 2A6A  
                                                             l5419 2A12  
                                                             l3771 133C  
                                                             l3763 12DC  
                                                             l3755 1266  
                                                             l3747 1228  
                                                             l3739 11DE  
                                                             l3691 1004  
                                                             l3683 0FC8  
                                                             l3675 0F96  
                                                             l3667 0F54  
                                                             l3819 3456  
                                                             l2971 0ADC  
                                                             l2963 0ACC  
                                                             l2955 0A98  
                                                             l2947 0A6A  
                                                             l2939 0A2C  
                                                             l4491 3568  
                                                             l4467 300A  
                                                             l2883 33DE  
                                                             l5363 1DF2  
                                                             l5355 1DB0  
                                                             l5347 1D76  
                                                             l5339 1D46  
                                                             l5291 312C  
                                                             l5283 30C2  
                                                             l4475 328C  
                                                             l4731 276E  
                                                             l4723 274E  
                                                             l4571 267C  
                                                             l4563 265C  
                                                             l4555 263C  
                                                             l4547 261C  
                                                             l4539 25F4  
                                                             l4651 25B8  
                                                             l4643 2588  
                                                             l4635 2564  
                                                             l4627 252A  
                                                             l4619 250A  
                                                             l4715 2492  
                                                             l4707 2462  
                                                             l4811 2F28  
                                                             l4803 2926  
                                                             l5275 0932  
                                                             l5267 0902  
                                                             l5259 08C2  
                                                             l5195 053E  
                                                             l5187 0510  
                                                             l5179 04D2  
                                                             l5099 2CA6  
                                                             l5507 2316  
                                                             l5531 3528  
                                                             l5523 351E  
                                                             l5445 2AA6  
                                                             l3781 13B0  
                                                             l3773 1350  
                                                             l3765 12EE  
                                                             l3757 1298  
                                                             l3749 123C  
                                                             l3693 100C  
                                                             l3685 0FCA  
                                                             l3677 0FA8  
                                                             l3669 0F6A  
                                                             l2981 0AF0  
                                                             l2973 0AE0  
                                                             l2965 0AD0  
                                                             l2957 0AB0  
                                                             l2949 0A7A  
                                                             l5461 34CA  
                                                             l5453 3498  
                                                             l4493 3584  
                                                             l4469 3050  
                                                             l2885 33E4  
                                                             l5373 1E1A  
                                                             l5357 1DBC  
                                                             l5349 1D8C  
                                                             l5293 1BF0  
                                                             l5285 30CA  
                                                             l4477 3298  
                                                             l4741 279A  
                                                             l4733 277A  
                                                             l4725 275A  
                                                             l4581 26C6  
                                                             l4573 2688  
                                                             l4565 2668  
                                                             l4557 2648  
                                                             l4549 2628  
                                                             l4653 25C8  
                                                             l4645 2598  
                                                             l4637 2568  
                                                             l4629 2536  
                                                             l4717 24A2  
                                                             l4709 2472  
                                                             l4661 2384  
                                                             l4901 155E  
                                                             l4821 2F7A  
                                                             l4813 2F3E  
                                                             l4805 295A  
                                                             l5277 0938  
                                                             l5269 0914  
                                                             l5197 0546  
                                                             l5189 0522  
                                                             l5381 2E2C  
                                                             l5533 352A  
                                                             l5525 3522  
                                                             l5517 3510  
                                                             l5447 2ABC  
                                                             l3783 13B2  
                                                             l3775 1370  
                                                             l3767 1318  
                                                             l3695 1034  
                                                             l3687 0FE0  
                                                             l3679 0FB0  
                                                             l2983 0AF4  
                                                             l2975 0AE4  
                                                             l2967 0AD4  
                                                             l2959 0AC2  
                                                             l2991 0B04  
                                                             l3791 3340  
                                                             l5463 34CC  
                                                             l5455 34C4  
                                                             l2887 3402  
                                                             l5375 1E30  
                                                             l5359 1DD2  
                                                             l5367 1DFC  
                                                             l5295 1BF8  
                                                             l5287 30E0  
                                                             l4487 32C2  
                                                             l4479 329E  
                                                             l4751 27BE  
                                                             l4743 279E  
                                                             l4735 277E  
                                                             l4727 275E  
                                                             l4719 2736  
                                                             l4591 26FA  
                                                             l4583 26CA  
                                                             l4575 26A6  
                                                             l4567 266C  
                                                             l4559 264C  
                                                             l4655 25D4  
                                                             l4647 25A4  
                                                             l4639 2574  
                                                             l4671 23A8  
                                                             l4663 2388  
                                                             l4911 15AC  
                                                             l4903 156E  
                                                             l4823 2F86  
                                                             l4831 2FA0  
                                                             l4807 2972  
                                                             l5279 095A  
                                                             l5199 054C  
                                                             l5391 2E7C  
                                                             l5383 2E44  
                                                             l5471 2214  
                                                             l5535 3530  
                                                             l5527 3524  
                                                             l5519 3516  
                                                             l5449 2ACC  
                                                             l3777 138E  
                                                             l3785 13BA  
                                                             l3769 131C  
                                                             l3697 1046  
                                                             l3689 0FF4  
                                                             l2993 0B0A  
                                                             l2985 0AF8  
                                                             l2977 0AE8  
                                                             l2969 0AD8  
                                                             l3793 3350  
                                                             l5465 34CE  
                                                             l5457 34C6  
                                                             l4497 204A  
                                                             l5377 1E3C  
                                                             l5369 1E12  
                                                             l5297 1C1C  
                                                             l5289 30FE  
                                                             l4489 32C8  
                                                             l4761 2808  
                                                             l4753 27CA  
                                                             l4745 27AA  
                                                             l4737 278A  
                                                             l4729 276A  
                                                             l4593 270A  
                                                             l4585 26DA  
                                                             l4577 26AA  
                                                             l4569 2678  
                                                             l4657 25E4  
                                                             l4649 25B4  
                                                             l4681 23D4  
                                                             l4673 23B4  
                                                             l4665 2394  
                                                             l4921 1606  
                                                             l4913 15C0  
                                                             l4905 157E  
                                                             l4841 13D8  
                                                             l4833 2FB6  
                                                             l4825 2F8C  
                                                             l4817 2F46  
                                                             l4809 2F1C  
                                                             l5393 2E92  
                                                             l5385 2E5A  
                                                             l5481 2254  
                                                             l5473 222A  
                                                             l5529 3526  
                                                             l3787 13C0  
                                                             l3779 139E  
                                                             l2995 0B38  
                                                             l2987 0AFC  
                                                             l2979 0AEC  
                                                             l5467 34D0  
                                                             l5459 34C8  
                                                             l4499 205E  
                                                             l5379 1E48  
                                                             l5299 1C32  
                                                             l4771 283C  
                                                             l4763 280C  
                                                             l4755 27E8  
                                                             l4747 27AE  
                                                             l4739 278E  
                                                             l4595 2716  
                                                             l4587 26E6  
                                                             l4579 26B6  
                                                             l4691 23F8  
                                                             l4683 23D8  
                                                             l4675 23B8  
                                                             l4667 2398  
                                                             l4659 2370  
                                                             l4931 165C  
                                                             l4923 1616  
                                                             l4915 15D2  
                                                             l4907 158E  
                                                             l4851 1422  
                                                             l4843 13E4  
                                                             l4835 2FC2  
                                                             l4827 2F98  
                                                             l4819 2F66  
                                                             l5395 2E9E  
                                                             l5387 2E5E  
                                                             l5491 2292  
                                                             l5483 225C  
                                                             l5475 222E  
                                                             l2997 0B5A  
                                                             l2989 0B00  
                                                             l4781 31CE  
                                                             l4773 284C  
                                                             l4765 281C  
                                                             l4757 27EC  
                                                             l4749 27BA  
                                                             l4597 2726  
                                                             l4589 26F6  
                                                             l4693 2404  
                                                             l4685 23E4  
                                                             l4677 23C4  
                                                             l4669 23A4  
                                                             l4941 16AC  
                                                             l4933 166E  
                                                             l4925 1630  
                                                             l4917 15E0  
                                                             l4909 1596  
                                                             l4861 1458  
                                                             l4853 1432  
                                                             l4845 13F6  
                                                             l4837 2FDA  
                                                             l5397 2ED2  
                                                             l5389 2E62  
                                                             l5493 2296  
                                                             l5485 2264  
                                                             l5477 2236  
                                                             l5469 2208  
                                                             l2999 0B6A  
                                                             l4791 3224  
                                                             l4783 31E2  
                                                             l4775 2858  
                                                             l4767 2828  
                                                             l4759 27F8  
                                                             l4599 24B2  
                                                             l4695 2422  
                                                             l4687 23E8  
                                                             l4679 23C8  
                                                             l4951 1734  
                                                             l4943 16DE  
                                                             l4927 164A  
                                                             l4935 1682  
                                                             l4919 1604  
                                                             l4871 149C  
                                                             l4863 145E  
                                                             l4855 1436  
                                                             l4847 13F8  
                                                             l4839 2FE2  
                                                             l5399 2EDE  
                                                             l5495 22BE  
                                                             l5487 2270  
                                                             l5479 2250  
                                                             l4785 3202  
                                                             l4777 2868  
                                                             l4769 2838  
                                                             l4697 2426  
                                                             l4689 23F4  
                                                             l4961 17B8  
                                                             l4953 175E  
                                                             l4937 1696  
                                                             l4929 1650  
                                                             l4881 14E6  
                                                             l4873 14AC  
                                                             l4865 1470  
                                                             l4849 140E  
                                                             l4857 143E  
                                                             l4793 2878  
                                                             l5577 2336  
                                                             l5489 227E  
                                                             l5497 22D0  
                                                             l5579 2118  
                                                             l4787 3216  
                                                             l4779 31BA  
                                                             l4699 2432  
                                                             l4971 17F6  
                                                             l4963 17D4  
                                                             l4947 1716  
                                                             l4955 1762  
                                                             l4939 169A  
                                                             l4883 14F6  
                                                             l4891 1518  
                                                             l4875 14B0  
                                                             l4867 1472  
                                                             l4859 1450  
                                                             l4795 288E  
                                                             l5499 22EA  
                                                             l4981 2B18  
                                                             l4789 3220  
                                                             l4965 17DA  
                                                             l4957 1782  
                                                             l4949 1722  
                                                             l4893 152E  
                                                             l4885 14FE  
                                                             l4869 1488  
                                                             l4877 14B8  
                                                             l4797 28C2  
                                                             l4991 2B92  
                                                             l4983 2B28  
                                                             l4967 17EC  
                                                             l4959 1798  
                                                             l4895 152E  
                                                             l4887 1504  
                                                             l4879 14CA  
                                                             l4799 28DA  
                                                             l4993 2BA6  
                                                             l4985 2B5C  
                                                             l4969 17F2  
                                                             l4995 2BFC  
                                                             l4987 2B6C  
                                                             l4979 2AE6  
                                                             l4899 1542  
                                                             l4997 2C02  
                                                             l4989 2B80  
                                                             STR_1 7CCD  
                                                             STR_2 7FAC  
                                                             STR_3 7F2A  
                                                             STR_4 7F4C  
                                                             STR_5 7E23  
                                                             STR_6 7F67  
                                                             STR_7 7DC2  
                                                             STR_8 7EE2  
                                                             STR_9 7F06  
                                                             u3000 2DCE  
                                                             u3001 2DC8  
                                                             u3010 2DEA  
                                                             u3011 2DE4  
                                                             u3020 2E24  
                                                             u3021 2E1E  
                                                             _LATC 000F8B  
                                                             u2500 0A54  
                                                             u2420 3400  
                                                             u2501 0A4E  
                                                             u2421 33FA  
                                                             u2510 0A68  
                                                             u2511 0A62  
                                                             u2600 0BE4  
                                                             u2520 0AAE  
                                                             u5000 28D8  
                                                             u2601 0BDE  
                                                             u2521 0AA8  
                                                             u5001 28D2  
                                                             u2610 0BF8  
                                                             u2530 0AC0  
                                                             u2450 09A8  
                                                             u5010 2924  
                                                             u2611 0BF2  
                                                             u2531 0ABA  
                                                             u2451 09A2  
                                                             u5011 291E  
                                                             u3500 0FC6  
                                                             u2700 0D8C  
                                                             u2620 0C30  
                                                             u2540 0B36  
                                                             u2460 09C0  
                                                             u5100 1420  
                                                             u5020 2970  
                                                             u3501 0FC0  
                                                             u2701 0D86  
                                                             u2621 0C2A  
                                                             u2541 0B30  
                                                             u2461 09BA  
                                                             u5101 141A  
                                                             u5021 296A  
                                                             u3510 0FDE  
                                                             u2710 0DB0  
                                                             u2630 0C42  
                                                             u2550 0B52  
                                                             u2470 09D4  
                                                             u5110 146E  
                                                             u5030 2F3C  
                                                             u3511 0FD8  
                                                             u2711 0DAA  
                                                             u2631 0C3C  
                                                             u2551 0B4A  
                                                             u2471 09CE  
                                                             u5111 1468  
                                                             u5031 2F36  
                                                             u3600 12B4  
                                                             u3520 0FF2  
                                                             u2800 0EB6  
                                                             u2720 0DC6  
                                                             u2640 0C68  
                                                             u2560 0B56  
                                                             u2480 0A20  
                                                             u6000 1C30  
                                                             u5200 1648  
                                                             u5120 1486  
                                                             u5040 2F64  
                                                             u3601 12AE  
                                                             u3521 0FEC  
                                                             u2801 0EB0  
                                                             u2721 0DC0  
                                                             u2641 0C62  
                                                             u2481 0A1A  
                                                             u6001 1C2A  
                                                             u5201 1642  
                                                             u5121 1480  
                                                             u5041 2F5E  
                                                             u3610 12CE  
                                                             u3530 1032  
                                                             u2810 0EDA  
                                                             u2730 0DDC  
                                                             u2650 0CA8  
                                                             u2570 0B84  
                                                             u2490 0A3C  
                                                             u6010 1C48  
                                                             u5210 166C  
                                                             u5130 149A  
                                                             u5050 2F78  
                                                             u3611 12C8  
                                                             u3531 102C  
                                                             u2811 0ED4  
                                                             u2731 0DD6  
                                                             u2651 0CA2  
                                                             u2571 0B7E  
                                                             u2491 0A36  
                                                             u6011 1C42  
                                                             u5211 1666  
                                                             u5131 1494  
                                                             u5051 2F72  
                                                             u3620 12EC  
                                                             u3540 1046  
                                                             u2820 0EF2  
                                                             u2740 0DF6  
                                                             u2660 0CF2  
                                                             u2580 0BAA  
                                                             u6020 1C72  
                                                             u5300 17EA  
                                                             u5220 1694  
                                                             u5140 14E4  
                                                             u5060 2FB4  
                                                             u2900 31A6  
                                                             u6100 2E90  
                                                             u3621 12E6  
                                                             u3541 1040  
                                                             u2821 0EEC  
                                                             u2741 0DF0  
                                                             u2661 0CEC  
                                                             u2581 0BA4  
                                                             u6021 1C6C  
                                                             u5301 17E4  
                                                             u5221 168E  
                                                             u5141 14DE  
                                                             u5061 2FAE  
                                                             u2901 31A0  
                                                             u6101 2E8A  
                                                             u5310 2B16  
                                                             u3630 133A  
                                                             u3550 11C6  
                                                             u3470 0F50  
                                                             u3710 346E  
                                                             u2830 0F16  
                                                             u2750 0E14  
                                                             u2670 0D30  
                                                             u2590 0BD2  
                                                             u6030 1CB8  
                                                             u5230 16AA  
                                                             u5150 152C  
                                                             u5070 2FF6  
                                                             u6110 2F08  
                                                             u5311 2B10  
                                                             u3631 1334  
                                                             u3471 0F4A  
                                                             u3711 3468  
                                                             u2831 0F10  
                                                             u2751 0E0E  
                                                             u2671 0D2A  
                                                             u2591 0BCC  
                                                             u6031 1CB2  
                                                             u5231 16A4  
                                                             u5151 1526  
                                                             u5071 2FF0  
                                                             u6111 2F02  
                                                             u6120 29C8  
                                                             u5320 2B5A  
                                                             u3640 136E  
                                                             u3560 1226  
                                                             u3480 0F68  
                                                             u2760 0E2E  
                                                             u2680 0D44  
                                                             u2840 3246  
                                                             u6040 1CFE  
                                                             u5240 16DC  
                                                             u5160 15AA  
                                                             u5080 13F4  
                                                             u5400 1F8E  
                                                             u6200 22BC  
                                                             u6121 29C2  
                                                             u5321 2B54  
                                                             u3641 1368  
                                                             u3561 1220  
                                                             u3481 0F62  
                                                             u2761 0E28  
                                                             u2681 0D3E  
                                                             u2841 3240  
                                                             u6041 1CF8  
                                                             u5241 16D6  
                                                             u5161 15A4  
                                                             u5081 13EE  
                                                             u5401 1F88  
                                                             u6201 22B6  
                                                             u6130 2A04  
                                                             u5330 2B7E  
                                                             u3650 13AE  
                                                             u3570 124E  
                                                             u3490 0F7C  
                                                             u2770 0E4C  
                                                             u2690 0D76  
                                                             u2850 3278  
                                                             u6050 1D44  
                                                             u5250 16FA  
                                                             u5170 15D0  
                                                             u5090 140C  
                                                             u5410 1FB4  
                                                             u6210 22D0  
                                                             u5331 2B78  
                                                             u3651 13A8  
                                                             u3571 1248  
                                                             u3555 11BA  
                                                             u3491 0F76  
                                                             u2771 0E46  
                                                             u2691 0D70  
                                                             u2851 3272  
                                                             u6051 1D3E  
                                                             u5251 16F4  
                                                             u5171 15CA  
                                                             u5091 1406  
                                                             u5411 1FAE  
                                                             u6211 22CA  
                                                             u6140 2A36  
                                                             u5340 2BA4  
                                                             u3580 1264  
                                                             u2780 0E8A  
                                                             u5500 1918  
                                                             u2860 3446  
                                                             u6060 1D8A  
                                                             u5260 1714  
                                                             u5180 1602  
                                                             u5420 1FC8  
                                                             u6220 22E4  
                                                             u6141 2A30  
                                                             u5341 2B9E  
                                                             u3581 125E  
                                                             u2781 0E84  
                                                             u5501 1912  
                                                             u2861 343E  
                                                             u6061 1D84  
                                                             u5261 170E  
                                                             u5181 15FC  
                                                             u5421 1FC2  
                                                             u6221 22DE  
                                                             u6150 2A4E  
                                                             u5350 2BFA  
                                                             u3590 1296  
                                                             u2790 0EA2  
                                                             u5510 1A24  
                                                             u2870 344A  
                                                             u6070 1DD0  
                                                             u5270 1732  
                                                             u5190 162E  
                                                             u5430 1FDA  
                                                             u6151 2A48  
                                                             u6135 29F8  
                                                             u5351 2BF4  
                                                             u3591 1290  
                                                             u2791 0E9C  
                                                             u5511 1A1E  
                                                             u6071 1DCA  
                                                             u5271 172C  
                                                             u5191 1628  
                                                             u5431 1FD4  
                                                             u6160 2A7E  
                                                             u5520 1AC8  
                                                             u4800 2086  
                                                             u2880 33CA  
                                                             u6080 1E10  
                                                             u5280 1780  
                                                             u5440 201A  
                                                             u5360 1E66  
                                                             u5600 01DA  
                                                             u6161 2A78  
                                                             u5521 1AC2  
                                                             u4801 2080  
                                                             u2881 33C4  
                                                             u6081 1E0A  
                                                             u5281 177A  
                                                             u5441 2014  
                                                             u5361 1E60  
                                                             u6170 2AA6  
                                                             u5530 1B90  
                                                             u4810 20BE  
                                                             u4730 303A  
                                                             u5290 17B6  
                                                             u5450 202C  
                                                             u5370 1E78  
                                                             u5610 0200  
                                                             u2890 3176  
                                                             u6090 2E58  
                                                             u6171 2AA0  
                                                             u4811 20B8  
                                                             u5291 17B0  
                                                             u5451 2026  
                                                             u5371 1E72  
                                                             u5611 01F8  
                                                             u2891 3170  
                                                             u6091 2E52  
                                                             u6180 2ABA  
                                                             u5540 1BB0  
                                                             u5460 184C  
                                                             u4820 20E0  
                                                             u4740 304E  
                                                             u4900 2562  
                                                             u5380 1EDC  
                                                             u5700 03B6  
                                                             u5620 0204  
                                                             u2980 2D5A  
                                                             _RCIF 007CF5  
                                                             u6181 2AB4  
                                                             u5541 1BAA  
                                                             u4821 20DA  
                                                             u4741 3048  
                                                             u4901 255C  
                                                             u5381 1ED6  
                                                             u6237 2FCC  
                                                             u5701 03B0  
                                                             u2981 2D54  
                                                             u5470 1878  
                                                             u4830 21A4  
                                                             u4750 3084  
                                                             u4910 2382  
                                                             u5390 1F3C  
                                                             u5710 03FC  
                                                             u5630 022A  
                                                             u2990 2D80  
                                                             u5550 2C58  
                                                             u6190 2228  
                                                             u5535 1B84  
                                                             u5471 1872  
                                                             u4831 219C  
                                                             u4911 237C  
                                                             u5391 1F36  
                                                             u5711 03F6  
                                                             u5631 0222  
                                                             u2991 2D7A  
                                                             u5551 2C52  
                                                             u6191 2222  
                                                             u5480 18B2  
                                                             u4840 21A8  
                                                             u4760 3096  
                                                             u4920 2420  
                                                             u5800 05CE  
                                                             u5720 04B6  
                                                             u5640 022E  
                                                             u5560 2C9C  
                                                             u5465 1840  
                                                             u4761 3090  
                                                             u4737 3030  
                                                             u4921 241A  
                                                             u5801 05C6  
                                                             u5721 04B0  
                                                             u5561 2C96  
                                                             u5490 18D2  
                                                             u4850 21C2  
                                                             u4930 2748  
                                                             u4770 35FC  
                                                             u5810 05D2  
                                                             u5730 04CA  
                                                             u5650 0278  
                                                             u5570 2CE0  
                                                             u5491 18CC  
                                                             u4851 21BC  
                                                             u4931 2742  
                                                             u4771 35F6  
                                                             u5731 04C4  
                                                             u5651 0272  
                                                             u5571 2CDA  
                                                             u4860 21D8  
                                                             u4780 32B8  
                                                             u4940 27E6  
                                                             u5900 07AE  
                                                             u5820 05F8  
                                                             u5740 050E  
                                                             u5660 02E0  
                                                             u5580 2D24  
                                                             u5485 18A6  
                                                             u4861 21D2  
                                                             u4757 307A  
                                                             u4781 32B2  
                                                             u4941 27E0  
                                                             u5901 07A8  
                                                             u5821 05F0  
                                                             u5741 0508  
                                                             u5661 02DA  
                                                             u5581 2D1E  
                                                             u4950 31CC  
                                                             u4790 32E0  
                                                             u4870 2606  
                                                             u5910 07F4  
                                                             u5830 05FC  
                                                             u5750 0522  
                                                             u5670 02F4  
                                                             u5590 01D6  
                                                             u4951 31C6  
                                                             u4791 32DA  
                                                             u4871 2600  
                                                             u5911 07EE  
                                                             u5751 051C  
                                                             u5671 02EE  
                                                             u5591 01CE  
                                                             u4960 31E0  
                                                             u4880 26A4  
                                                             u5920 08AE  
                                                             u5840 0612  
                                                             u5760 056C  
                                                             u5680 033A  
                                                             u4961 31DA  
                                                             u4881 269E  
                                                             u5921 08A8  
                                                             u5841 060C  
                                                             u5761 0566  
                                                             u5681 0334  
                                                             u4970 3200  
                                                             u4890 24C4  
                                                             u5930 08C2  
                                                             u5850 0670  
                                                             u5770 0580  
                                                             u5690 03A2  
                                                             u4971 31FA  
                                                             u4891 24BE  
                                                             u5931 08BC  
                                                             u5851 066A  
                                                             u5771 057A  
                                                             u5691 039C  
                                                             u4980 3214  
                                                             u5940 0900  
                                                             u5860 06D8  
                                                             u5780 05A4  
                                                             u4981 320E  
                                                             u5941 08FA  
                                                             u5861 06D2  
                                                             u5781 059C  
                                                             u4990 288C  
                                                             u5950 0914  
                                                             u5870 06EC  
                                                             u5790 05A8  
                                                             u4991 2886  
                                                             u5951 090E  
                                                             u5871 06E6  
                                                             u5960 0958  
                                                             u5880 0732  
                                                             u5961 0952  
                                                             u5881 072C  
                                                             u5970 096C  
                                                             u5890 079A  
                                                             u5971 0966  
                                                             u5891 0794  
                                                             u5980 30DE  
                                                             u5981 30D8  
                                                             u5990 312A  
                                                             u5991 3124  
                                                  _check_component 2F18  
                                                             _Fosc 7CC9  
                                                             _Tosc 00A5  
                                                             _atoi 2048  
                                                             _main 3510  
                                                             _func 00AD  
                                                             fsr0h 000FEA  
                                                             fsr1h 000FE2  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf1 000FE7  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0076  
                                                             _stop 0072  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 018E  
                                                       _Angle_diff 005D  
                                                  ___fldiv@new_exp 0029  
                                                     ___param_bank 000000  
                                                     ?_init_Timers 0001  
                                                    ___fltol@sign1 0084  
                                                            ?_atoi 0011  
                                                  __end_of___fladd 0F32  
                                                            ?_main 0001  
                                                  __end_of___fldiv 1808  
                                                  __end_of___flneg 3496  
                                                            STR_10 7E72  
                                                            STR_11 7E98  
                                                            STR_12 7EBD  
                                                            STR_20 7DF6  
                                                            STR_21 7F97  
                                                            STR_13 7E4B  
                                                            STR_14 7FC1  
                                                            STR_22 7F82  
                                                            STR_15 7D83  
                                                            STR_16 7FD5  
                                                            STR_17 7D3D  
                                                            STR_18 7FE8  
                                                            STR_19 7FF4  
                                                  __end_of___flmul 13D6  
                                                  __end_of___flsub 3388  
                                                  __end_of___fltol 2AE4  
                                                  __end_of_Tweezer 322A  
                                                  __end_of_Twister 2874  
                                                            i2l350 3650  
                                                            i2l483 00B4  
                                                            i2l476 0040  
                                                            i2l488 017E  
                                                            _RCREG 000FAE  
                                                            _TMR0H 000FD7  
                                                            _TMR1H 000FCF  
                                                            _TMR0L 000FD6  
                                                            _TMR1L 000FCE  
                                                            _SPBRG 000FAF  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                 Twister@direction 0010  
                                                            _X_dir 0071  
                                                            _Y_dir 0070  
                                                            _Steps 005B  
                                           __size_of_add_component 0262  
                                                  __end_of_isdigit 3454  
                                                  __end_of_memmove 2E2A  
                                                            atoi@n 001E  
                                                            atoi@s 0011  
                               __end_of_desired_BaudRate@main$F794 7CC1  
                                       _desired_BaudRate@main$F794 7CBD  
                                                    print_char@chr 000A  
                                                            _toint 7CB9  
                                                  __end_of_isspace 328A  
                                                            tablat 000FF5  
                                                    _start_up_menu 2206  
                                                  _change_sequence 309C  
                                                            ttemp5 0077  
                                                            ttemp6 007A  
                                                  Y_axis@direction 0010  
                                                            ttemp7 007E  
                                                            status 000FD8  
                                                            wtemp8 0077  
                                                  __end_of_strrchr 3510  
                                                     __end_of_Fosc 7CCD  
                                                  __initialization 32E6  
                                                     __end_of_atoi 2206  
                                                     __end_of_main 353C  
                                                       _Pick_Angle 0065  
                                                           ??_atoi 0013  
                                                           ??_main 005B  
                                                    __activetblptr 000002  
                                          __end_of_check_component 2FFC  
                                                    print_string@i 000E  
                                                   ?_start_up_menu 0001  
                                                           i2l4401 010E  
                                                           i2l4411 0142  
                                                           i2l4403 0110  
                                                           i2l4421 0166  
                                                           i2l4413 014C  
                                                           i2l4405 0114  
                                                           i2l4343 3644  
                                                           i2l4423 0178  
                                                           i2l4415 014E  
                                                           i2l4407 0128  
                                                           i2l4345 3648  
                                                           i2l4417 0150  
                                                           i2l4409 013A  
                                                           i2l4347 364C  
                                                           i2l4419 0152  
                                                           i2l4349 364E  
                                                           i2l4381 0064  
                                                           i2l4373 0014  
                                                           i2l4391 00D0  
                                                           i2l4383 0076  
                                                           i2l4375 0026  
                                                           i2l4393 00E2  
                                                           i2l4385 0088  
                                                           i2l4377 0038  
                                                           i2l4395 00E4  
                                                           i2l4387 00B8  
                                                           i2l4379 0054  
                                                           i2l4397 00E8  
                                                           i2l4389 00BC  
                                                           i2l4399 00FC  
                                                 __end_of___xxtofl 2048  
                                          remove_component@rm_comp 001C  
                                                           _X_Pick 006D  
                                                           _Y_Pick 0069  
                                                           _X_diff 0061  
                                                           _Y_diff 005F  
                                                           _X_axis 25F0  
                                                           _Y_axis 24AE  
                                                           _Z_axis 236C  
                                                    _add_component 1BEE  
                                                ?_remove_component 0001  
                                                           _Step_X 00D7  
                                                           _Step_Y 00D5  
                                                           _Step_Z 00D3  
                                                           ___flge 2AE4  
                                                     ?_set_new_pos 0001  
                                                        ??___fladd 0012  
                                                           ___wmul 3566  
                                                        ??___fldiv 0020  
                                                        ??___flneg 000E  
                                                        ??___flmul 0012  
                                                        ??___flsub 0022  
                                                        ??___fltol 0080  
                                                        ??_Tweezer 000A  
                                                 ??_pick_and_place 003D  
                                               ??_remove_component 001C  
                                                        ??_Twister 0010  
                                                           clear_0 331E  
                                                           clear_1 332A  
                                                           isa$std 000001  
                                                 __end_of_ms_delay 32E6  
                                                           _roundf 1808  
                                                           _strcat 353C  
                                                           _strcpy 3388  
                                                           _strlen 33D0  
                                                     __pdataCOMRAM 0075  
                                                        ??_isdigit 000C  
                                                        ??_memmove 0014  
                                                    _Place_Angle_D 00C5  
                                                       _Step_Angle 00D1  
                                                     __mediumconst 7CB8  
                                                        ??_isspace 000C  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                          __end_of_change_sequence 3134  
                                                        ??_strrchr 001C  
                                                _return_to_initial 2C0C  
                                                       ___flge@ff1 0031  
                                                       ___flge@ff2 0035  
                                                     ___xxtofl@arg 0014  
                                                     ___xxtofl@exp 0013  
                                                     ___xxtofl@val 000A  
                                                       __accesstop 0080  
                                          __end_of__initialization 3330  
                                               __size_of___memrchr 0082  
                                               ?_return_to_initial 0001  
                                                       ___flneg@f1 000A  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0057  
                                               _pick_and_place$911 0086  
                                               _pick_and_place$922 0092  
                                               _pick_and_place$914 008A  
                                               _pick_and_place$924 0096  
                                               _pick_and_place$908 0082  
                                               _pick_and_place$926 009A  
                                                   ?_add_component 0001  
                                        fetch_coordinates@Componnt 000A  
                                                  _init_interrupts 3602  
                                              ??_return_to_initial 0011  
                                                   __pcstackCOMRAM 0001  
                                              _new_TMR1H@main$F795 0075  
                                                     __pidataBANK0 3622  
                                                    __end_of_toint 7CBD  
                                             __size_of_init_Timers 002A  
                                                      ms_delay@val 000A  
                                                 _desired_BaudRate 7CC1  
                                                 ?_check_component 0001  
                                        __end_of_return_to_initial 2D30  
                                                  ??_start_up_menu 003F  
                                                      _Place_Angle 0063  
                                                   _steps_per_unit 00AB  
                                                      _New_char_RX 0074  
                                                       __pbssBANK0 00BF  
                                            __end_of_Rx_char_USART 018E  
                                        remove_component@indxToDel 001F  
                                                       __pnvCOMRAM 0074  
                                                       _angle_diff 00C3  
                                            check_component@Compnt 0012  
                                                          ?_X_axis 0001  
                                                          ?_Y_axis 0001  
                                                          ?_Z_axis 0001  
                                                          ?___flge 0031  
                                              _new_TMR1L@main$F796 00AE  
                                                          ?___wmul 000A  
                                                          ?_roundf 003D  
                                                          ?_strcat 0016  
                                                __end_of___memrchr 31B6  
                                                          ?_strcpy 000E  
                                                          ?_strlen 000A  
                                                 check_component@j 0013  
                                                set_new_pos@nTMR1H 0002  
                                                set_new_pos@nTMR1L 0001  
                                                          _INTCON2 000FF1  
                                                          _INTCON3 000FF0  
                                                        ?___xxtofl 000A  
                                              pick_and_place@i_912 0088  
                                              pick_and_place@i_921 0090  
                                              pick_and_place@i_923 0094  
                                              pick_and_place@i_916 008C  
                                              pick_and_place@i_925 0098  
                                              pick_and_place@i_909 0084  
                                              pick_and_place@i_927 009C  
                                              pick_and_place@i_919 008E  
                                              pick_and_place@i_928 009E  
                                                 ?_change_sequence 0001  
                                          __end_of_init_interrupts 3622  
                                                  ??_add_component 0020  
                                                        ?_ms_delay 000A  
                                                          _X_Place 006B  
                                                          _Y_Place 0067  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  pick_and_place@i 0080  
                                                       _init_PORTS 35BA  
                                                       _init_USART 3496  
                                                  __size_of_X_axis 0142  
                                                  __size_of_Y_axis 0142  
                                                  __size_of_Z_axis 0142  
                                                  __size_of___flge 0128  
                                                          ___fladd 098A  
                                                          ___fldiv 13D6  
                                                          ___flneg 3454  
                                                          ___flmul 0F32  
                                                          ___flsub 333E  
                                                          ___fltol 29AC  
                                                          _Tweezer 31B6  
                                                  __size_of___wmul 002A  
                                                          _Twister 2732  
                                             __size_of_set_new_pos 0014  
                                                          __pcinit 32E6  
                                                          __ramtop 0600  
                                                          __ptext0 3510  
                                                          __ptext1 2206  
                                                          __ptext2 2C0C  
                                                          __ptext3 2E2A  
                                                          __ptext4 34D6  
                                                          __ptext5 3134  
                                                          __ptext6 2D30  
                                                          __ptext7 0192  
                                                          __ptext8 2874  
                                                          __ptext9 2F18  
                                                        _T0CONbits 000FD5  
                                                  __size_of_roundf 03E6  
                                                  __size_of_strcat 002A  
                                                  __size_of_strcpy 0048  
                                                  __size_of_strlen 0042  
                                                        _T1CONbits 000FCD  
                                                          _isdigit 3412  
                                                          _memmove 2D30  
                                                       ??___xxtofl 000E  
                                                          _isspace 322A  
                                       __size_of_return_to_initial 0124  
                                                          atoi@neg 0017  
                                                    Tweezer@action 000A  
                                                          _strrchr 34D6  
                                             end_of_initialization 3330  
                                              remove_component@ptr 001D  
                                                    __Lmediumconst 7CB8  
                                                       ??_ms_delay 000C  
                                                        _RCSTAbits 000FAB  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                          roundf@e 0049  
                                                          roundf@u 004F  
                                                          roundf@x 003D  
                                                          roundf@y 0053  
                                                          strcpy@d 0014  
                                                          strlen@a 000C  
                                                          strcpy@s 0012  
                                                          strlen@s 000A  
                                                       _print_char 35E2  
                                               add_component@F3136 00A9  
                                                      ___fladd@grs 0019  
                                                    ___xxtofl@sign 0012  
                                        __size_of_remove_component 00EE  
                                                        _TRISCbits 000F94  
                                                      ___fldiv@grs 002B  
                                                      ___fldiv@rem 0024  
                                                    ?_print_string 000A  
                                                      ___flmul@grs 0017  
                                                 ?_init_interrupts 0001  
                                                        _TXSTAbits 000FAC  
                                                      ___memrchr@c 0010  
                                                      ___memrchr@m 000E  
                                                      ___memrchr@n 0012  
                                                      ___memrchr@s 0016  
                                         __end_of_desired_BaudRate 7CC5  
                                                      ?_init_PORTS 0001  
                                                      ?_init_USART 0001  
                                                   __end_of_X_axis 2732  
                                                   __end_of_Y_axis 25F0  
                                                   __end_of_Z_axis 24AE  
                                                   __end_of___flge 2C0C  
                                                   __end_of___wmul 3590  
                                                    __pidataCOMRAM 3656  
                                                   __end_of_roundf 1BEE  
                                                   __end_of_strcat 3566  
                                                   __end_of_strcpy 33D0  
                                                   __end_of_strlen 3412  
                                              start_initialization 32E6  
                                                   ??_print_string 000C  
                                                        _X_Place_D 00C9  
                                                        _Y_Place_D 00C7  
                                                  X_axis@direction 0010  
                                                     _Pick_Angle_D 00CB  
                                                   _Tosc@main$F793 00A1  
                                                         ??_X_axis 0010  
                                                         ??_Y_axis 0010  
                                                         ??_Z_axis 0010  
                                                         ??___flge 0039  
                                                         ??___wmul 000E  
                                                      __pdataBANK0 00A1  
                                                    ??_init_Timers 000A  
                                               return_to_initial@i 0012  
                                                         ??_roundf 0041  
                                                         ??_strcat 001A  
                                                         ??_strcpy 0012  
                                                         ??_strlen 000C  
                                                        ___fladd@a 000E  
                                                        ___fladd@b 000A  
                                                      ?_print_char 0001  
                                                        ___fldiv@a 001C  
                                                        ___fldiv@b 0018  
                                                        ___flmul@a 000E  
                                                        ___flmul@b 000A  
                                                      __pbssCOMRAM 005B  
                                                 change_sequence@i 0013  
                                                        ___flsub@a 001E  
                                                        ___flsub@b 001A  
                                                    __pcstackBANK0 0080  
                                          __size_of_pick_and_place 07F8  
                                                        ___memrchr 3134  
                                                __size_of___xxtofl 01F8  
                                              __size_of_init_PORTS 0028  
                                              __size_of_init_USART 0040  
                                                        _Twist_dir 006F  
                                            __end_of_start_up_menu 236C  
                                         __size_of_check_component 00E4  
                                                        _atoi$1392 0019  
                                                        _atoi$1393 001D  
                                                        _atoi$1394 001B  
                                                  Z_axis@direction 0010  
                                                __size_of_ms_delay 005C  
                                                        __pintcode 0008  
                                                    __pmediumconst 7CB8  
                                                         ?___fladd 000A  
                                                         ?___fldiv 0018  
                                                         ?___flneg 000A  
                                                         ?___flmul 000A  
                                                         ?___flsub 001A  
                                                         ?___fltol 0057  
                                                         ?_Tweezer 0001  
                                                         ?_Twister 0001  
                                                _fetch_coordinates 2874  
                                                   Rx_char_USART@i 0008  
                                           __size_of_Rx_char_USART 0186  
                                               ?_fetch_coordinates 0001  
                                                print_string@strng 000A  
                                                         ?_isdigit 000A  
                                                         ?_memmove 000E  
                                                         ?_isspace 000A  
                                              __end_of_init_Timers 35BA  
                                                 _remove_component 2E2A  
                                                   _Fosc@main$F792 7CC5  
                                                       ?___memrchr 000E  
                                                        _new_TMR1H 00B0  
                                                        _new_TMR1L 00AF  
                                              ??_fetch_coordinates 000A  
                                                         ?_strrchr 0018  
                                                _component_present 0073  
                                                        _input_str 00B1  
                                                   ___wmul@product 000E  
                                                         _LATCbits 000F8B  
                                         __size_of_change_sequence 0098  
                                                         _PIE1bits 000F9D  
                                              __size_of_print_char 0020  
                                            __end_of_add_component 1E50  
                                                         _PIR1bits 000F9E  
                                                         i2u460_40 0036  
                                                         i2u460_41 0030  
                                                         i2u461_40 0052  
                                                         i2u461_41 004C  
                                                         i2u470_40 0138  
                                                         i2u462_40 0064  
                                                         i2u470_41 0132  
                                                         i2u462_41 005E  
                                                         i2u471_40 0164  
                                                         i2u463_40 0086  
                                                         i2u471_41 015E  
                                                         i2u463_41 0080  
                                                         i2u472_40 0176  
                                                         i2u464_40 00B4  
                                                         i2u472_41 0170  
                                                         i2u464_41 00AE  
                                                         i2u465_40 00CE  
                                                         i2u465_41 00C8  
                                                         i2u466_40 00E0  
                                                         i2u466_41 00DA  
                                                         i2u467_40 00FA  
                                                         i2u459_40 0024  
                                                         i2u467_41 00F4  
                                                         i2u459_41 001E  
                                                         i2u468_40 010C  
                                                         i2u468_41 0106  
                                                         i2u469_40 0126  
                                                         i2u469_41 0120  
                                                    ??_set_new_pos 0002  
                                        __end_of_fetch_coordinates 29AC  
                                             __end_of_print_string 309C  
                                                ___wmul@multiplier 000A  
                                           __end_of_Fosc@main$F792 7CC9  
                                                     _isspace$1410 0010  
                                                      _INTCON3bits 000FF0  
                                                        copy_data0 32FA  
                                                         _X_Pick_D 00CF  
                                                    _Rx_char_USART 0008  
                                                         _Y_Pick_D 00CD  
                                                       roundf@F528 00BF  
                                                         __Hrparam 0000  
                                                     ??_init_PORTS 000A  
                                                     ??_init_USART 005B  
                                                         __Lrparam 0000  
                                                ??_check_component 0010  
                                                        memmove@d1 000E  
                                                        memmove@s1 0010  
                                                 __size_of___fladd 05A8  
                                                 __size_of___fldiv 0432  
                                                 __size_of___flneg 0042  
                                                 __size_of___flmul 04A4  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 0138  
                                                 __size_of_Tweezer 0074  
                                                 __size_of_Twister 0142  
                                                      _init_Timers 3590  
                                              __end_of_set_new_pos 3654  
                                                        ms_delay@i 000C  
                                                        ms_delay@j 000E  
                                                         ___xxtofl 1E50  
                                                       strcat@dest 0016  
                                                   _pick_and_place 0192  
                                                 __size_of_isdigit 0042  
                                                 __size_of_memmove 00FA  
                                                      ??___memrchr 0014  
                                                 __size_of_isspace 0060  
                                                         __ptext10 35E2  
                                                         __ptext11 1E50  
                                                         __ptext20 1BEE  
                                                         __ptext12 13D6  
                                                         __ptext21 353C  
                                                         __ptext13 236C  
                                                         __ptext30 3496  
                                                         __ptext22 33D0  
                                                         __ptext14 24AE  
                                                         __ptext31 1808  
                                                         __ptext23 3388  
                                                         __ptext15 25F0  
                                                         __ptext32 333E  
                                                         __ptext24 2FFC  
                                                         __ptext16 2732  
                                                         __ptext41 3640  
                                                         __ptext33 098A  
                                                         __ptext25 2048  
                                                         __ptext17 328A  
                                                         __ptext34 3454  
                                                         __ptext26 322A  
                                                         __ptext18 31B6  
                                                         __ptext35 0F32  
                                                         __ptext27 3412  
                                                         __ptext19 309C  
                                                         __ptext36 2AE4  
                                                         __ptext28 3566  
                                                         __ptext37 29AC  
                                                         __ptext29 3602  
                                                         __ptext38 3590  
                                                         __ptext39 35BA  
                                               __end_of_init_PORTS 35E2  
                                               __end_of_init_USART 34D6  
                                                       strcpy@dest 000E  
                                                 __size_of_strrchr 003A  
                                                   ?_Rx_char_USART 0001  
                                                    __size_of_atoi 01BE  
                                                    __size_of_main 002C  
                                                         _ms_delay 328A  
                                                         isa$xinst 000000  
                                                         _sequence 00BB  
                                       __size_of_fetch_coordinates 0138  
                                         __size_of_init_interrupts 0020  
                                                ??_change_sequence 0010  
                                                         int$flags 0076  
                                           __end_of_pick_and_place 098A  
                                                     ??_print_char 000A  
                                                       _INTCONbits 000FF2  
                                           return_to_initial@i_931 0014  
                                           return_to_initial@i_932 0016  
                                           return_to_initial@i_933 0018  
                                                         isdigit@c 000A  
                                                         memmove@d 0016  
                                                         memmove@n 0012  
                                                         memmove@s 0018  
                                                         intlevel2 3654  
                                                        strcat@src 0018  
                                                         isspace@c 000A  
                                                        strcpy@src 0010  
                                            __size_of_print_string 00A0  
                                               __end_of_print_char 3602  
                                         __end_of_remove_component 2F18  
                                                      _set_new_pos 3640  
                                           pick_and_place@Componnt 00A0  
                                                  ?_pick_and_place 0001  
                                                         strrchr@c 001A  
                                                         strrchr@s 0018  
                                                    ___fladd@signs 0016  
                                                  ??_Rx_char_USART 0003  
                                                     _print_string 2FFC  
                                                     ___fladd@aexp 0017  
                                                     ___fladd@bexp 0018  
                                        add_component@add_componnt 0020  
                                                   start_up_menu@i 0041  
                                                      _roundf$1678 004B  
                                                      _roundf$1679 0045  
