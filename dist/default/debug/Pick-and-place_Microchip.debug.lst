

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun  8 01:23:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F452 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  002DDE                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _sequence
    98  002DDE  43                 	db	67
    99  002DDF  41                 	db	65
   100  002DE0  42                 	db	66
   101  002DE1  00                 	db	0
   102                           
   103                           ;initializer for _input_str
   104  002DE2  20                 	db	32
   105  002DE3  00                 	db	0
   106                           
   107                           	psect	idataBANK0
   108  002DC6                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _Tosc@main$F494
   112  002DC6  37BD               	dw	14269
   113  002DC8  3486               	dw	13446
   114                           
   115                           ;initializer for _Tosc
   116  002DCA  37BD               	dw	14269
   117  002DCC  3486               	dw	13446
   118                           
   119                           ;initializer for add_component@F3129
   120  002DCE  44                 	db	68
   121  002DCF  00                 	db	0
   122                           
   123                           ;initializer for _lenth_of_array
   124  002DD0  001E               	dw	30
   125                           
   126                           	psect	mediumconst
   127  007DF0                     __pmediumconst:
   128                           	callstack 0
   129  007DF0  00                 	db	0
   130  007DF1  0000               	dw	0
   131  007DF3  4B00               	dw	19200
   132  007DF5                     __end_of_toint:
   133                           	callstack 0
   134  007DF5  0000               	dw	0
   135  007DF7  4616               	dw	17942
   136  007DF9                     __end_of_desired_BaudRate@main$F495:
   137                           	callstack 0
   138  007DF9  0000               	dw	0
   139  007DFB  4616               	dw	17942
   140  007DFD                     __end_of_desired_BaudRate:
   141                           	callstack 0
   142  007DFD  2400               	dw	9216
   143  007DFF  4A74               	dw	19060
   144  007E01                     __end_of_Fosc@main$F493:
   145                           	callstack 0
   146  007E01  2400               	dw	9216
   147  007E03  4A74               	dw	19060
   148  007E05                     __end_of_Fosc:
   149                           	callstack 0
   150  0000                     _RCREG	set	4014
   151  0000                     _TXREG	set	4013
   152  0000                     _RCSTAbits	set	4011
   153  0000                     _TXSTAbits	set	4012
   154  0000                     _SPBRG	set	4015
   155  0000                     _INTCONbits	set	4082
   156  0000                     _PIE1bits	set	3997
   157  0000                     _PIR1bits	set	3998
   158  0000                     _TRISCbits	set	3988
   159  0000                     _PORTC	set	3970
   160  0000                     _LATC	set	3979
   161  0000                     _PORTD	set	3971
   162  0000                     _PORTB	set	3969
   163  0000                     _TRISD	set	3989
   164  0000                     _TRISB	set	3987
   165  0000                     _RCIF	set	31989
   166  007E05                     STR_1:
   167  007E05  0A                 	db	10
   168  007E06  31                 	db	49	;'1'
   169  007E07  2E                 	db	46
   170  007E08  20                 	db	32
   171  007E09  44                 	db	68	;'D'
   172  007E0A  65                 	db	101	;'e'
   173  007E0B  66                 	db	102	;'f'
   174  007E0C  61                 	db	97	;'a'
   175  007E0D  75                 	db	117	;'u'
   176  007E0E  6C                 	db	108	;'l'
   177  007E0F  74                 	db	116	;'t'
   178  007E10  20                 	db	32
   179  007E11  53                 	db	83	;'S'
   180  007E12  65                 	db	101	;'e'
   181  007E13  71                 	db	113	;'q'
   182  007E14  75                 	db	117	;'u'
   183  007E15  65                 	db	101	;'e'
   184  007E16  6E                 	db	110	;'n'
   185  007E17  63                 	db	99	;'c'
   186  007E18  65                 	db	101	;'e'
   187  007E19  0A                 	db	10
   188  007E1A  32                 	db	50	;'2'
   189  007E1B  2E                 	db	46
   190  007E1C  20                 	db	32
   191  007E1D  43                 	db	67	;'C'
   192  007E1E  68                 	db	104	;'h'
   193  007E1F  61                 	db	97	;'a'
   194  007E20  6E                 	db	110	;'n'
   195  007E21  67                 	db	103	;'g'
   196  007E22  65                 	db	101	;'e'
   197  007E23  20                 	db	32
   198  007E24  73                 	db	115	;'s'
   199  007E25  65                 	db	101	;'e'
   200  007E26  71                 	db	113	;'q'
   201  007E27  75                 	db	117	;'u'
   202  007E28  65                 	db	101	;'e'
   203  007E29  6E                 	db	110	;'n'
   204  007E2A  63                 	db	99	;'c'
   205  007E2B  65                 	db	101	;'e'
   206  007E2C  0A                 	db	10
   207  007E2D  33                 	db	51	;'3'
   208  007E2E  2E                 	db	46
   209  007E2F  20                 	db	32
   210  007E30  41                 	db	65	;'A'
   211  007E31  64                 	db	100	;'d'
   212  007E32  64                 	db	100	;'d'
   213  007E33  20                 	db	32
   214  007E34  6E                 	db	110	;'n'
   215  007E35  65                 	db	101	;'e'
   216  007E36  77                 	db	119	;'w'
   217  007E37  20                 	db	32
   218  007E38  63                 	db	99	;'c'
   219  007E39  6F                 	db	111	;'o'
   220  007E3A  6D                 	db	109	;'m'
   221  007E3B  70                 	db	112	;'p'
   222  007E3C  6F                 	db	111	;'o'
   223  007E3D  6E                 	db	110	;'n'
   224  007E3E  65                 	db	101	;'e'
   225  007E3F  6E                 	db	110	;'n'
   226  007E40  74                 	db	116	;'t'
   227  007E41  0A                 	db	10
   228  007E42  34                 	db	52	;'4'
   229  007E43  2E                 	db	46
   230  007E44  20                 	db	32
   231  007E45  52                 	db	82	;'R'
   232  007E46  65                 	db	101	;'e'
   233  007E47  6D                 	db	109	;'m'
   234  007E48  6F                 	db	111	;'o'
   235  007E49  76                 	db	118	;'v'
   236  007E4A  65                 	db	101	;'e'
   237  007E4B  20                 	db	32
   238  007E4C  61                 	db	97	;'a'
   239  007E4D  20                 	db	32
   240  007E4E  63                 	db	99	;'c'
   241  007E4F  6F                 	db	111	;'o'
   242  007E50  6D                 	db	109	;'m'
   243  007E51  70                 	db	112	;'p'
   244  007E52  6F                 	db	111	;'o'
   245  007E53  6E                 	db	110	;'n'
   246  007E54  65                 	db	101	;'e'
   247  007E55  6E                 	db	110	;'n'
   248  007E56  74                 	db	116	;'t'
   249  007E57  00                 	db	0
   250  007E58                     STR_16:
   251  007E58  0A                 	db	10
   252  007E59  63                 	db	99	;'c'
   253  007E5A  6F                 	db	111	;'o'
   254  007E5B  6D                 	db	109	;'m'
   255  007E5C  70                 	db	112	;'p'
   256  007E5D  6F                 	db	111	;'o'
   257  007E5E  6E                 	db	110	;'n'
   258  007E5F  65                 	db	101	;'e'
   259  007E60  6E                 	db	110	;'n'
   260  007E61  74                 	db	116	;'t'
   261  007E62  20                 	db	32
   262  007E63  69                 	db	105	;'i'
   263  007E64  73                 	db	115	;'s'
   264  007E65  20                 	db	32
   265  007E66  6E                 	db	110	;'n'
   266  007E67  6F                 	db	111	;'o'
   267  007E68  74                 	db	116	;'t'
   268  007E69  20                 	db	32
   269  007E6A  69                 	db	105	;'i'
   270  007E6B  6E                 	db	110	;'n'
   271  007E6C  20                 	db	32
   272  007E6D  74                 	db	116	;'t'
   273  007E6E  68                 	db	104	;'h'
   274  007E6F  65                 	db	101	;'e'
   275  007E70  20                 	db	32
   276  007E71  73                 	db	115	;'s'
   277  007E72  65                 	db	101	;'e'
   278  007E73  71                 	db	113	;'q'
   279  007E74  75                 	db	117	;'u'
   280  007E75  65                 	db	101	;'e'
   281  007E76  6E                 	db	110	;'n'
   282  007E77  63                 	db	99	;'c'
   283  007E78  65                 	db	101	;'e'
   284  007E79  2E                 	db	46
   285  007E7A  20                 	db	32
   286  007E7B  0A                 	db	10
   287  007E7C  54                 	db	84	;'T'
   288  007E7D  72                 	db	114	;'r'
   289  007E7E  79                 	db	121	;'y'
   290  007E7F  20                 	db	32
   291  007E80  73                 	db	115	;'s'
   292  007E81  65                 	db	101	;'e'
   293  007E82  6C                 	db	108	;'l'
   294  007E83  65                 	db	101	;'e'
   295  007E84  63                 	db	99	;'c'
   296  007E85  74                 	db	116	;'t'
   297  007E86  69                 	db	105	;'i'
   298  007E87  6E                 	db	110	;'n'
   299  007E88  67                 	db	103	;'g'
   300  007E89  20                 	db	32
   301  007E8A  61                 	db	97	;'a'
   302  007E8B  6E                 	db	110	;'n'
   303  007E8C  6F                 	db	111	;'o'
   304  007E8D  74                 	db	116	;'t'
   305  007E8E  68                 	db	104	;'h'
   306  007E8F  65                 	db	101	;'e'
   307  007E90  72                 	db	114	;'r'
   308  007E91  20                 	db	32
   309  007E92  63                 	db	99	;'c'
   310  007E93  6F                 	db	111	;'o'
   311  007E94  6D                 	db	109	;'m'
   312  007E95  70                 	db	112	;'p'
   313  007E96  6F                 	db	111	;'o'
   314  007E97  6E                 	db	110	;'n'
   315  007E98  65                 	db	101	;'e'
   316  007E99  6E                 	db	110	;'n'
   317  007E9A  74                 	db	116	;'t'
   318  007E9B  0A                 	db	10
   319  007E9C  00                 	db	0
   320  007E9D                     STR_15:
   321  007E9D  0A                 	db	10
   322  007E9E  57                 	db	87	;'W'
   323  007E9F  68                 	db	104	;'h'
   324  007EA0  69                 	db	105	;'i'
   325  007EA1  63                 	db	99	;'c'
   326  007EA2  68                 	db	104	;'h'
   327  007EA3  20                 	db	32
   328  007EA4  63                 	db	99	;'c'
   329  007EA5  6F                 	db	111	;'o'
   330  007EA6  6D                 	db	109	;'m'
   331  007EA7  70                 	db	112	;'p'
   332  007EA8  6F                 	db	111	;'o'
   333  007EA9  6E                 	db	110	;'n'
   334  007EAA  65                 	db	101	;'e'
   335  007EAB  6E                 	db	110	;'n'
   336  007EAC  74                 	db	116	;'t'
   337  007EAD  20                 	db	32
   338  007EAE  77                 	db	119	;'w'
   339  007EAF  6F                 	db	111	;'o'
   340  007EB0  75                 	db	117	;'u'
   341  007EB1  6C                 	db	108	;'l'
   342  007EB2  64                 	db	100	;'d'
   343  007EB3  20                 	db	32
   344  007EB4  79                 	db	121	;'y'
   345  007EB5  6F                 	db	111	;'o'
   346  007EB6  75                 	db	117	;'u'
   347  007EB7  20                 	db	32
   348  007EB8  6C                 	db	108	;'l'
   349  007EB9  69                 	db	105	;'i'
   350  007EBA  6B                 	db	107	;'k'
   351  007EBB  65                 	db	101	;'e'
   352  007EBC  20                 	db	32
   353  007EBD  74                 	db	116	;'t'
   354  007EBE  6F                 	db	111	;'o'
   355  007EBF  20                 	db	32
   356  007EC0  72                 	db	114	;'r'
   357  007EC1  65                 	db	101	;'e'
   358  007EC2  6D                 	db	109	;'m'
   359  007EC3  6F                 	db	111	;'o'
   360  007EC4  76                 	db	118	;'v'
   361  007EC5  65                 	db	101	;'e'
   362  007EC6  20                 	db	32
   363  007EC7  66                 	db	102	;'f'
   364  007EC8  72                 	db	114	;'r'
   365  007EC9  6F                 	db	111	;'o'
   366  007ECA  6D                 	db	109	;'m'
   367  007ECB  20                 	db	32
   368  007ECC  74                 	db	116	;'t'
   369  007ECD  68                 	db	104	;'h'
   370  007ECE  65                 	db	101	;'e'
   371  007ECF  20                 	db	32
   372  007ED0  20                 	db	32
   373  007ED1  73                 	db	115	;'s'
   374  007ED2  65                 	db	101	;'e'
   375  007ED3  71                 	db	113	;'q'
   376  007ED4  75                 	db	117	;'u'
   377  007ED5  65                 	db	101	;'e'
   378  007ED6  6E                 	db	110	;'n'
   379  007ED7  63                 	db	99	;'c'
   380  007ED8  65                 	db	101	;'e'
   381  007ED9  3F                 	db	63	;'?'
   382  007EDA  0A                 	db	10
   383  007EDB  00                 	db	0
   384  007EDC                     STR_6:
   385  007EDC  50                 	db	80	;'P'
   386  007EDD  6C                 	db	108	;'l'
   387  007EDE  65                 	db	101	;'e'
   388  007EDF  61                 	db	97	;'a'
   389  007EE0  73                 	db	115	;'s'
   390  007EE1  65                 	db	101	;'e'
   391  007EE2  20                 	db	32
   392  007EE3  67                 	db	103	;'g'
   393  007EE4  69                 	db	105	;'i'
   394  007EE5  76                 	db	118	;'v'
   395  007EE6  65                 	db	101	;'e'
   396  007EE7  20                 	db	32
   397  007EE8  74                 	db	116	;'t'
   398  007EE9  68                 	db	104	;'h'
   399  007EEA  65                 	db	101	;'e'
   400  007EEB  20                 	db	32
   401  007EEC  6E                 	db	110	;'n'
   402  007EED  65                 	db	101	;'e'
   403  007EEE  77                 	db	119	;'w'
   404  007EEF  20                 	db	32
   405  007EF0  73                 	db	115	;'s'
   406  007EF1  65                 	db	101	;'e'
   407  007EF2  71                 	db	113	;'q'
   408  007EF3  75                 	db	117	;'u'
   409  007EF4  65                 	db	101	;'e'
   410  007EF5  6E                 	db	110	;'n'
   411  007EF6  63                 	db	99	;'c'
   412  007EF7  65                 	db	101	;'e'
   413  007EF8  20                 	db	32
   414  007EF9  61                 	db	97	;'a'
   415  007EFA  73                 	db	115	;'s'
   416  007EFB  20                 	db	32
   417  007EFC  69                 	db	105	;'i'
   418  007EFD  6E                 	db	110	;'n'
   419  007EFE  70                 	db	112	;'p'
   420  007EFF  75                 	db	117	;'u'
   421  007F00  74                 	db	116	;'t'
   422  007F01  0D                 	db	13
   423  007F02  00                 	db	0
   424  007F03                     STR_13:
   425  007F03  0A                 	db	10
   426  007F04  45                 	db	69	;'E'
   427  007F05  6E                 	db	110	;'n'
   428  007F06  74                 	db	116	;'t'
   429  007F07  65                 	db	101	;'e'
   430  007F08  72                 	db	114	;'r'
   431  007F09  20                 	db	32
   432  007F0A  74                 	db	116	;'t'
   433  007F0B  68                 	db	104	;'h'
   434  007F0C  65                 	db	101	;'e'
   435  007F0D  20                 	db	32
   436  007F0E  70                 	db	112	;'p'
   437  007F0F  6C                 	db	108	;'l'
   438  007F10  61                 	db	97	;'a'
   439  007F11  63                 	db	99	;'c'
   440  007F12  65                 	db	101	;'e'
   441  007F13  20                 	db	32
   442  007F14  6F                 	db	111	;'o'
   443  007F15  72                 	db	114	;'r'
   444  007F16  69                 	db	105	;'i'
   445  007F17  65                 	db	101	;'e'
   446  007F18  6E                 	db	110	;'n'
   447  007F19  74                 	db	116	;'t'
   448  007F1A  61                 	db	97	;'a'
   449  007F1B  74                 	db	116	;'t'
   450  007F1C  69                 	db	105	;'i'
   451  007F1D  6F                 	db	111	;'o'
   452  007F1E  6E                 	db	110	;'n'
   453  007F1F  3A                 	db	58	;':'
   454  007F20  00                 	db	0
   455  007F21                     STR_11:
   456  007F21  0A                 	db	10
   457  007F22  45                 	db	69	;'E'
   458  007F23  6E                 	db	110	;'n'
   459  007F24  74                 	db	116	;'t'
   460  007F25  65                 	db	101	;'e'
   461  007F26  72                 	db	114	;'r'
   462  007F27  20                 	db	32
   463  007F28  74                 	db	116	;'t'
   464  007F29  68                 	db	104	;'h'
   465  007F2A  65                 	db	101	;'e'
   466  007F2B  20                 	db	32
   467  007F2C  70                 	db	112	;'p'
   468  007F2D  6C                 	db	108	;'l'
   469  007F2E  61                 	db	97	;'a'
   470  007F2F  63                 	db	99	;'c'
   471  007F30  65                 	db	101	;'e'
   472  007F31  20                 	db	32
   473  007F32  70                 	db	112	;'p'
   474  007F33  6F                 	db	111	;'o'
   475  007F34  73                 	db	115	;'s'
   476  007F35  69                 	db	105	;'i'
   477  007F36  74                 	db	116	;'t'
   478  007F37  69                 	db	105	;'i'
   479  007F38  6F                 	db	111	;'o'
   480  007F39  6E                 	db	110	;'n'
   481  007F3A  20                 	db	32
   482  007F3B  58                 	db	88	;'X'
   483  007F3C  3A                 	db	58	;':'
   484  007F3D  00                 	db	0
   485  007F3E                     STR_12:
   486  007F3E  0A                 	db	10
   487  007F3F  45                 	db	69	;'E'
   488  007F40  6E                 	db	110	;'n'
   489  007F41  74                 	db	116	;'t'
   490  007F42  65                 	db	101	;'e'
   491  007F43  72                 	db	114	;'r'
   492  007F44  20                 	db	32
   493  007F45  74                 	db	116	;'t'
   494  007F46  68                 	db	104	;'h'
   495  007F47  65                 	db	101	;'e'
   496  007F48  20                 	db	32
   497  007F49  70                 	db	112	;'p'
   498  007F4A  6C                 	db	108	;'l'
   499  007F4B  61                 	db	97	;'a'
   500  007F4C  63                 	db	99	;'c'
   501  007F4D  65                 	db	101	;'e'
   502  007F4E  20                 	db	32
   503  007F4F  70                 	db	112	;'p'
   504  007F50  6F                 	db	111	;'o'
   505  007F51  73                 	db	115	;'s'
   506  007F52  69                 	db	105	;'i'
   507  007F53  74                 	db	116	;'t'
   508  007F54  69                 	db	105	;'i'
   509  007F55  6F                 	db	111	;'o'
   510  007F56  6E                 	db	110	;'n'
   511  007F57  20                 	db	32
   512  007F58  59                 	db	89	;'Y'
   513  007F59  3A                 	db	58	;':'
   514  007F5A  00                 	db	0
   515  007F5B                     STR_10:
   516  007F5B  0A                 	db	10
   517  007F5C  45                 	db	69	;'E'
   518  007F5D  6E                 	db	110	;'n'
   519  007F5E  74                 	db	116	;'t'
   520  007F5F  65                 	db	101	;'e'
   521  007F60  72                 	db	114	;'r'
   522  007F61  20                 	db	32
   523  007F62  74                 	db	116	;'t'
   524  007F63  68                 	db	104	;'h'
   525  007F64  65                 	db	101	;'e'
   526  007F65  20                 	db	32
   527  007F66  70                 	db	112	;'p'
   528  007F67  69                 	db	105	;'i'
   529  007F68  63                 	db	99	;'c'
   530  007F69  6B                 	db	107	;'k'
   531  007F6A  20                 	db	32
   532  007F6B  6F                 	db	111	;'o'
   533  007F6C  72                 	db	114	;'r'
   534  007F6D  69                 	db	105	;'i'
   535  007F6E  65                 	db	101	;'e'
   536  007F6F  6E                 	db	110	;'n'
   537  007F70  74                 	db	116	;'t'
   538  007F71  61                 	db	97	;'a'
   539  007F72  74                 	db	116	;'t'
   540  007F73  69                 	db	105	;'i'
   541  007F74  6F                 	db	111	;'o'
   542  007F75  6E                 	db	110	;'n'
   543  007F76  3A                 	db	58	;':'
   544  007F77  00                 	db	0
   545  007F78                     STR_8:
   546  007F78  0A                 	db	10
   547  007F79  45                 	db	69	;'E'
   548  007F7A  6E                 	db	110	;'n'
   549  007F7B  74                 	db	116	;'t'
   550  007F7C  65                 	db	101	;'e'
   551  007F7D  72                 	db	114	;'r'
   552  007F7E  20                 	db	32
   553  007F7F  74                 	db	116	;'t'
   554  007F80  68                 	db	104	;'h'
   555  007F81  65                 	db	101	;'e'
   556  007F82  20                 	db	32
   557  007F83  70                 	db	112	;'p'
   558  007F84  69                 	db	105	;'i'
   559  007F85  63                 	db	99	;'c'
   560  007F86  6B                 	db	107	;'k'
   561  007F87  20                 	db	32
   562  007F88  70                 	db	112	;'p'
   563  007F89  6F                 	db	111	;'o'
   564  007F8A  73                 	db	115	;'s'
   565  007F8B  69                 	db	105	;'i'
   566  007F8C  74                 	db	116	;'t'
   567  007F8D  69                 	db	105	;'i'
   568  007F8E  6F                 	db	111	;'o'
   569  007F8F  6E                 	db	110	;'n'
   570  007F90  20                 	db	32
   571  007F91  58                 	db	88	;'X'
   572  007F92  3A                 	db	58	;':'
   573  007F93  00                 	db	0
   574  007F94                     STR_9:
   575  007F94  0A                 	db	10
   576  007F95  45                 	db	69	;'E'
   577  007F96  6E                 	db	110	;'n'
   578  007F97  74                 	db	116	;'t'
   579  007F98  65                 	db	101	;'e'
   580  007F99  72                 	db	114	;'r'
   581  007F9A  20                 	db	32
   582  007F9B  74                 	db	116	;'t'
   583  007F9C  68                 	db	104	;'h'
   584  007F9D  65                 	db	101	;'e'
   585  007F9E  20                 	db	32
   586  007F9F  70                 	db	112	;'p'
   587  007FA0  69                 	db	105	;'i'
   588  007FA1  63                 	db	99	;'c'
   589  007FA2  6B                 	db	107	;'k'
   590  007FA3  20                 	db	32
   591  007FA4  70                 	db	112	;'p'
   592  007FA5  6F                 	db	111	;'o'
   593  007FA6  73                 	db	115	;'s'
   594  007FA7  69                 	db	105	;'i'
   595  007FA8  74                 	db	116	;'t'
   596  007FA9  69                 	db	105	;'i'
   597  007FAA  6F                 	db	111	;'o'
   598  007FAB  6E                 	db	110	;'n'
   599  007FAC  20                 	db	32
   600  007FAD  59                 	db	89	;'Y'
   601  007FAE  3A                 	db	58	;':'
   602  007FAF  00                 	db	0
   603  007FB0                     STR_14:
   604  007FB0  0A                 	db	10
   605  007FB1  54                 	db	84	;'T'
   606  007FB2  68                 	db	104	;'h'
   607  007FB3  65                 	db	101	;'e'
   608  007FB4  20                 	db	32
   609  007FB5  63                 	db	99	;'c'
   610  007FB6  75                 	db	117	;'u'
   611  007FB7  72                 	db	114	;'r'
   612  007FB8  72                 	db	114	;'r'
   613  007FB9  65                 	db	101	;'e'
   614  007FBA  6E                 	db	110	;'n'
   615  007FBB  74                 	db	116	;'t'
   616  007FBC  20                 	db	32
   617  007FBD  73                 	db	115	;'s'
   618  007FBE  65                 	db	101	;'e'
   619  007FBF  71                 	db	113	;'q'
   620  007FC0  75                 	db	117	;'u'
   621  007FC1  65                 	db	101	;'e'
   622  007FC2  6E                 	db	110	;'n'
   623  007FC3  63                 	db	99	;'c'
   624  007FC4  65                 	db	101	;'e'
   625  007FC5  20                 	db	32
   626  007FC6  69                 	db	105	;'i'
   627  007FC7  73                 	db	115	;'s'
   628  007FC8  3A                 	db	58	;':'
   629  007FC9  20                 	db	32
   630  007FCA  00                 	db	0
   631  007FCB                     STR_7:
   632  007FCB  0A                 	db	10
   633  007FCC  54                 	db	84	;'T'
   634  007FCD  68                 	db	104	;'h'
   635  007FCE  65                 	db	101	;'e'
   636  007FCF  20                 	db	32
   637  007FD0  4E                 	db	78	;'N'
   638  007FD1  65                 	db	101	;'e'
   639  007FD2  77                 	db	119	;'w'
   640  007FD3  20                 	db	32
   641  007FD4  73                 	db	115	;'s'
   642  007FD5  65                 	db	101	;'e'
   643  007FD6  71                 	db	113	;'q'
   644  007FD7  75                 	db	117	;'u'
   645  007FD8  65                 	db	101	;'e'
   646  007FD9  6E                 	db	110	;'n'
   647  007FDA  63                 	db	99	;'c'
   648  007FDB  65                 	db	101	;'e'
   649  007FDC  20                 	db	32
   650  007FDD  69                 	db	105	;'i'
   651  007FDE  73                 	db	115	;'s'
   652  007FDF  3A                 	db	58	;':'
   653  007FE0  20                 	db	32
   654  007FE1  00                 	db	0
   655  007FE2                     STR_17:
   656  007FE2  0A                 	db	10
   657  007FE3  54                 	db	84	;'T'
   658  007FE4  68                 	db	104	;'h'
   659  007FE5  65                 	db	101	;'e'
   660  007FE6  20                 	db	32
   661  007FE7  6E                 	db	110	;'n'
   662  007FE8  65                 	db	101	;'e'
   663  007FE9  77                 	db	119	;'w'
   664  007FEA  20                 	db	32
   665  007FEB  73                 	db	115	;'s'
   666  007FEC  65                 	db	101	;'e'
   667  007FED  71                 	db	113	;'q'
   668  007FEE  75                 	db	117	;'u'
   669  007FEF  65                 	db	101	;'e'
   670  007FF0  6E                 	db	110	;'n'
   671  007FF1  63                 	db	99	;'c'
   672  007FF2  65                 	db	101	;'e'
   673  007FF3  20                 	db	32
   674  007FF4  69                 	db	105	;'i'
   675  007FF5  73                 	db	115	;'s'
   676  007FF6  3A                 	db	58	;':'
   677  007FF7  20                 	db	32
   678  007FF8  00                 	db	0
   679  007FF9                     STR_3:
   680  007FF9  41                 	db	65	;'A'
   681  007FFA  00                 	db	0
   682  007FFB                     STR_4:
   683  007FFB  42                 	db	66	;'B'
   684  007FFC  00                 	db	0
   685  007FFD                     STR_2:
   686  007FFD  43                 	db	67	;'C'
   687  007FFE  00                 	db	0
   688  007FFF  00                 	db	0	; dummy byte at the end
   689  0000                     
   690                           ; #config settings
   691                           
   692                           	psect	cinit
   693  002A50                     __pcinit:
   694                           	callstack 0
   695  002A50                     start_initialization:
   696                           	callstack 0
   697  002A50                     __initialization:
   698                           	callstack 0
   699                           
   700                           ; Initialize objects allocated to BANK0 (12 bytes)
   701                           ; load TBLPTR registers with __pidataBANK0
   702  002A50  0EC6               	movlw	low __pidataBANK0
   703  002A52  6EF6               	movwf	tblptrl,c
   704  002A54  0E2D               	movlw	high __pidataBANK0
   705  002A56  6EF7               	movwf	tblptrh,c
   706  002A58  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   707  002A5A  6EF8               	movwf	tblptru,c
   708  002A5C  EE00  F0B4         	lfsr	0,__pdataBANK0
   709  002A60  EE10 F00C          	lfsr	1,12
   710  002A64                     copy_data0:
   711  002A64  0009               	tblrd		*+
   712  002A66  CFF5 FFEE          	movff	tablat,postinc0
   713  002A6A  50E5               	movf	postdec1,w,c
   714  002A6C  50E1               	movf	fsr1l,w,c
   715  002A6E  E1FA               	bnz	copy_data0
   716                           
   717                           ; Initialize objects allocated to COMRAM (6 bytes)
   718                           ; load TBLPTR registers with __pidataCOMRAM
   719  002A70  0EDE               	movlw	low __pidataCOMRAM
   720  002A72  6EF6               	movwf	tblptrl,c
   721  002A74  0E2D               	movlw	high __pidataCOMRAM
   722  002A76  6EF7               	movwf	tblptrh,c
   723  002A78  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   724  002A7A  6EF8               	movwf	tblptru,c
   725  002A7C  EE00  F072         	lfsr	0,__pdataCOMRAM
   726  002A80  EE10 F006          	lfsr	1,6
   727  002A84                     copy_data1:
   728  002A84  0009               	tblrd		*+
   729  002A86  CFF5 FFEE          	movff	tablat,postinc0
   730  002A8A  50E5               	movf	postdec1,w,c
   731  002A8C  50E1               	movf	fsr1l,w,c
   732  002A8E  E1FA               	bnz	copy_data1
   733                           
   734                           ; Clear objects allocated to BANK0 (52 bytes)
   735  002A90  EE00  F080         	lfsr	0,__pbssBANK0
   736  002A94  0E34               	movlw	52
   737  002A96                     clear_0:
   738  002A96  6AEE               	clrf	postinc0,c
   739  002A98  06E8               	decf	wreg,f,c
   740  002A9A  E1FD               	bnz	clear_0
   741                           
   742                           ; Clear objects allocated to COMRAM (25 bytes)
   743  002A9C  EE00  F059         	lfsr	0,__pbssCOMRAM
   744  002AA0  0E19               	movlw	25
   745  002AA2                     clear_1:
   746  002AA2  6AEE               	clrf	postinc0,c
   747  002AA4  06E8               	decf	wreg,f,c
   748  002AA6  E1FD               	bnz	clear_1
   749  002AA8                     end_of_initialization:
   750                           	callstack 0
   751  002AA8                     __end_of__initialization:
   752                           	callstack 0
   753  002AA8  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   754  002AAA  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   755  002AAC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   756  002AAE  6EF8               	movwf	tblptru,c
   757  002AB0  0100               	movlb	0
   758  002AB2  EFD4  F016         	goto	_main	;jump to C main() function
   759                           
   760                           	psect	bssCOMRAM
   761  000059                     __pbssCOMRAM:
   762                           	callstack 0
   763  000059                     _X_Pick_D:
   764                           	callstack 0
   765  000059                     	ds	2
   766  00005B                     _Angle_diff:
   767                           	callstack 0
   768  00005B                     	ds	2
   769  00005D                     _Y_diff:
   770                           	callstack 0
   771  00005D                     	ds	2
   772  00005F                     _X_diff:
   773                           	callstack 0
   774  00005F                     	ds	2
   775  000061                     _Place_Angle:
   776                           	callstack 0
   777  000061                     	ds	2
   778  000063                     _Pick_Angle:
   779                           	callstack 0
   780  000063                     	ds	2
   781  000065                     _Y_Place:
   782                           	callstack 0
   783  000065                     	ds	2
   784  000067                     _Y_Pick:
   785                           	callstack 0
   786  000067                     	ds	2
   787  000069                     _X_Place:
   788                           	callstack 0
   789  000069                     	ds	2
   790  00006B                     _X_Pick:
   791                           	callstack 0
   792  00006B                     	ds	2
   793  00006D                     _RX_Char:
   794                           	callstack 0
   795  00006D                     	ds	1
   796  00006E                     _Rot_dir:
   797                           	callstack 0
   798  00006E                     	ds	1
   799  00006F                     _Y_dir:
   800                           	callstack 0
   801  00006F                     	ds	1
   802  000070                     _X_dir:
   803                           	callstack 0
   804  000070                     	ds	1
   805  000071                     _New_char_RX:
   806                           	callstack 0
   807  000071                     	ds	1
   808                           
   809                           	psect	dataCOMRAM
   810  000072                     __pdataCOMRAM:
   811                           	callstack 0
   812  000072                     _sequence:
   813                           	callstack 0
   814  000072                     	ds	4
   815  000076                     _input_str:
   816                           	callstack 0
   817  000076                     	ds	2
   818                           
   819                           	psect	bssBANK0
   820  000080                     __pbssBANK0:
   821                           	callstack 0
   822  000080                     _testarray:
   823                           	callstack 0
   824  000080                     	ds	30
   825  00009E                     roundf@F528:
   826                           	callstack 0
   827  00009E                     	ds	4
   828  0000A2                     _angle_diff:
   829                           	callstack 0
   830  0000A2                     	ds	2
   831  0000A4                     _Place_Angle_D:
   832                           	callstack 0
   833  0000A4                     	ds	2
   834  0000A6                     _Y_Place_D:
   835                           	callstack 0
   836  0000A6                     	ds	2
   837  0000A8                     _X_Place_D:
   838                           	callstack 0
   839  0000A8                     	ds	2
   840  0000AA                     _Pick_Angle_D:
   841                           	callstack 0
   842  0000AA                     	ds	2
   843  0000AC                     _Y_Pick_D:
   844                           	callstack 0
   845  0000AC                     	ds	2
   846  0000AE                     _rotation:
   847                           	callstack 0
   848  0000AE                     	ds	2
   849  0000B0                     _displacement_Y:
   850                           	callstack 0
   851  0000B0                     	ds	2
   852  0000B2                     _displacement_X:
   853                           	callstack 0
   854  0000B2                     	ds	2
   855                           
   856                           	psect	dataBANK0
   857  0000B4                     __pdataBANK0:
   858                           	callstack 0
   859  0000B4                     	ds	4
   860  0000B8                     	ds	4
   861  0000BC                     add_component@F3129:
   862                           	callstack 0
   863  0000BC                     	ds	2
   864  0000BE                     _lenth_of_array:
   865                           	callstack 0
   866  0000BE                     	ds	2
   867                           
   868                           	psect	cstackBANK0
   869  0000C0                     __pcstackBANK0:
   870                           	callstack 0
   871  0000C0                     ??___fltol:
   872  0000C0                     change_sequence@j:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x0
   876  0000C0                     	ds	2
   877  0000C2                     change_sequence@i_550:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x2
   881  0000C2                     	ds	2
   882  0000C4                     ___fltol@sign1:
   883                           	callstack 0
   884  0000C4                     change_sequence@i:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x4
   888  0000C4                     	ds	1
   889  0000C5                     ___fltol@exp1:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x5
   893  0000C5                     	ds	1
   894  0000C6                     ??_start_up_menu:
   895                           
   896                           ; 1 bytes @ 0x6
   897  0000C6                     	ds	2
   898  0000C8                     start_up_menu@ip:
   899                           	callstack 0
   900                           
   901                           ; 1 bytes @ 0x8
   902  0000C8                     	ds	1
   903                           
   904                           	psect	cstackCOMRAM
   905  000001                     __pcstackCOMRAM:
   906                           	callstack 0
   907  000001                     ??_Rx_char_USART:
   908  000001                     
   909                           ; 2 bytes @ 0x0
   910  000001                     	ds	5
   911  000006                     Rx_char_USART@i:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x5
   915  000006                     	ds	2
   916  000008                     ?_strlen:
   917                           	callstack 0
   918  000008                     ?_direct:
   919                           	callstack 0
   920  000008                     ?_isspace:
   921                           	callstack 0
   922  000008                     ?_isdigit:
   923                           	callstack 0
   924  000008                     ?___wmul:
   925                           	callstack 0
   926  000008                     ?___fladd:
   927                           	callstack 0
   928  000008                     ?___flmul:
   929                           	callstack 0
   930  000008                     ?___flneg:
   931                           	callstack 0
   932  000008                     ?___xxtofl:
   933                           	callstack 0
   934  000008                     serial_tx_char@val:
   935                           	callstack 0
   936  000008                     ms_delay@val:
   937                           	callstack 0
   938  000008                     direct@prev:
   939                           	callstack 0
   940  000008                     ___wmul@multiplier:
   941                           	callstack 0
   942  000008                     isdigit@c:
   943                           	callstack 0
   944  000008                     isspace@c:
   945                           	callstack 0
   946  000008                     strlen@s:
   947                           	callstack 0
   948  000008                     ___flneg@f1:
   949                           	callstack 0
   950  000008                     ___fladd@b:
   951                           	callstack 0
   952  000008                     ___flmul@b:
   953                           	callstack 0
   954  000008                     ___xxtofl@val:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x7
   958  000008                     	ds	1
   959  000009                     print_string@strng:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x8
   963  000009                     	ds	1
   964  00000A                     ??_isspace:
   965  00000A                     ??_isdigit:
   966  00000A                     ms_delay@i:
   967                           	callstack 0
   968  00000A                     direct@next:
   969                           	callstack 0
   970  00000A                     ___wmul@multiplicand:
   971                           	callstack 0
   972  00000A                     strlen@a:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x9
   976  00000A                     	ds	1
   977  00000B                     ??_print_string:
   978                           
   979                           ; 1 bytes @ 0xA
   980  00000B                     	ds	1
   981  00000C                     ??_direct:
   982  00000C                     ??___xxtofl:
   983  00000C                     ?___memrchr:
   984                           	callstack 0
   985  00000C                     ms_delay@j:
   986                           	callstack 0
   987  00000C                     ___wmul@product:
   988                           	callstack 0
   989  00000C                     memmove@d1:
   990                           	callstack 0
   991  00000C                     strncat@d:
   992                           	callstack 0
   993  00000C                     ___memrchr@m:
   994                           	callstack 0
   995  00000C                     ___fladd@a:
   996                           	callstack 0
   997  00000C                     ___flmul@a:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0xB
  1001  00000C                     	ds	1
  1002  00000D                     print_string@i:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0xC
  1006  00000D                     	ds	1
  1007  00000E                     X_axis@direction:
  1008                           	callstack 0
  1009  00000E                     Y_axis@direction:
  1010                           	callstack 0
  1011  00000E                     Z_axis@direction:
  1012                           	callstack 0
  1013  00000E                     Twister@direction:
  1014                           	callstack 0
  1015  00000E                     _isspace$1087:
  1016                           	callstack 0
  1017  00000E                     memmove@s1:
  1018                           	callstack 0
  1019  00000E                     strncat@s:
  1020                           	callstack 0
  1021  00000E                     ___memrchr@c:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0xD
  1025  00000E                     	ds	1
  1026  00000F                     ?_atoi:
  1027                           	callstack 0
  1028  00000F                     Z_axis_and_Tweezer@i:
  1029                           	callstack 0
  1030  00000F                     atoi@s:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0xE
  1034  00000F                     	ds	1
  1035  000010                     ??___fladd:
  1036  000010                     ??___flmul:
  1037  000010                     ___xxtofl@sign:
  1038                           	callstack 0
  1039  000010                     memmove@n:
  1040                           	callstack 0
  1041  000010                     strncat@n:
  1042                           	callstack 0
  1043  000010                     ___memrchr@n:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0xF
  1047  000010                     	ds	1
  1048  000011                     ??_atoi:
  1049  000011                     ___xxtofl@exp:
  1050                           	callstack 0
  1051  000011                     Z_axis_and_Tweezer@i_611:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x10
  1055  000011                     	ds	1
  1056  000012                     ??_memmove:
  1057  000012                     ??___memrchr:
  1058  000012                     ___xxtofl@arg:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x11
  1062  000012                     	ds	2
  1063  000014                     ___fladd@signs:
  1064                           	callstack 0
  1065  000014                     ___flmul@sign:
  1066                           	callstack 0
  1067  000014                     memmove@d:
  1068                           	callstack 0
  1069  000014                     ___memrchr@s:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x13
  1073  000014                     	ds	1
  1074  000015                     ___fladd@aexp:
  1075                           	callstack 0
  1076  000015                     atoi@neg:
  1077                           	callstack 0
  1078  000015                     ___flmul@grs:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x14
  1082  000015                     	ds	1
  1083  000016                     ?_strrchr:
  1084                           	callstack 0
  1085  000016                     ?___fldiv:
  1086                           	callstack 0
  1087  000016                     ___fladd@bexp:
  1088                           	callstack 0
  1089  000016                     memmove@s:
  1090                           	callstack 0
  1091  000016                     strrchr@s:
  1092                           	callstack 0
  1093  000016                     ___fldiv@b:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x15
  1097  000016                     	ds	1
  1098  000017                     ___fladd@grs:
  1099                           	callstack 0
  1100  000017                     _atoi$1069:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x16
  1104  000017                     	ds	1
  1105  000018                     ?___flsub:
  1106                           	callstack 0
  1107  000018                     strrchr@c:
  1108                           	callstack 0
  1109  000018                     ___flsub@b:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x17
  1113  000018                     	ds	1
  1114  000019                     ___flmul@aexp:
  1115                           	callstack 0
  1116  000019                     _atoi$1071:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x18
  1120  000019                     	ds	1
  1121  00001A                     ___flmul@bexp:
  1122                           	callstack 0
  1123  00001A                     ___fldiv@a:
  1124                           	callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x19
  1127  00001A                     	ds	1
  1128  00001B                     _atoi$1070:
  1129                           	callstack 0
  1130  00001B                     ___flmul@prod:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x1A
  1134  00001B                     	ds	1
  1135  00001C                     atoi@n:
  1136                           	callstack 0
  1137  00001C                     ___flsub@a:
  1138                           	callstack 0
  1139                           
  1140                           ; 4 bytes @ 0x1B
  1141  00001C                     	ds	2
  1142  00001E                     ??___fldiv:
  1143                           
  1144                           ; 1 bytes @ 0x1D
  1145  00001E                     	ds	1
  1146  00001F                     ___flmul@temp:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x1E
  1150  00001F                     	ds	1
  1151  000020                     
  1152                           ; 1 bytes @ 0x1F
  1153  000020                     	ds	2
  1154  000022                     ___fldiv@rem:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x21
  1158  000022                     	ds	4
  1159  000026                     ___fldiv@sign:
  1160                           	callstack 0
  1161                           
  1162                           ; 1 bytes @ 0x25
  1163  000026                     	ds	1
  1164  000027                     ___fldiv@new_exp:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x26
  1168  000027                     	ds	2
  1169  000029                     ___fldiv@grs:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x28
  1173  000029                     	ds	4
  1174  00002D                     ___fldiv@bexp:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x2C
  1178  00002D                     	ds	1
  1179  00002E                     ___fldiv@aexp:
  1180                           	callstack 0
  1181                           
  1182                           ; 1 bytes @ 0x2D
  1183  00002E                     	ds	1
  1184  00002F                     ___flge@ff1:
  1185                           	callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x2E
  1188  00002F                     	ds	4
  1189  000033                     ___flge@ff2:
  1190                           	callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x32
  1193  000033                     	ds	4
  1194  000037                     ??___flge:
  1195                           
  1196                           ; 1 bytes @ 0x36
  1197  000037                     	ds	4
  1198  00003B                     ??_pick_and_place:
  1199  00003B                     ?_roundf:
  1200                           	callstack 0
  1201  00003B                     roundf@x:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x3A
  1205  00003B                     	ds	2
  1206  00003D                     pick_and_place@i:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x3C
  1210  00003D                     	ds	2
  1211  00003F                     ??_roundf:
  1212  00003F                     _pick_and_place$590:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x3E
  1216  00003F                     	ds	2
  1217  000041                     pick_and_place@i_591:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x40
  1221  000041                     	ds	2
  1222  000043                     _pick_and_place$593:
  1223                           	callstack 0
  1224  000043                     _roundf$1336:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x42
  1228  000043                     	ds	2
  1229  000045                     pick_and_place@i_594:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x44
  1233  000045                     	ds	2
  1234  000047                     pick_and_place@i_596:
  1235                           	callstack 0
  1236  000047                     roundf@e:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x46
  1240  000047                     	ds	2
  1241  000049                     _pick_and_place$597:
  1242                           	callstack 0
  1243  000049                     _roundf$1335:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x48
  1247  000049                     	ds	2
  1248  00004B                     pick_and_place@i_598:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x4A
  1252  00004B                     	ds	2
  1253  00004D                     _pick_and_place$599:
  1254                           	callstack 0
  1255  00004D                     roundf@u:
  1256                           	callstack 0
  1257                           
  1258                           ; 4 bytes @ 0x4C
  1259  00004D                     	ds	2
  1260  00004F                     pick_and_place@i_600:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x4E
  1264  00004F                     	ds	2
  1265  000051                     pick_and_place@Componnt:
  1266                           	callstack 0
  1267  000051                     roundf@y:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x50
  1271  000051                     	ds	1
  1272  000052                     ??_change_sequence:
  1273  000052                     ??_add_component:
  1274  000052                     remove_component@rm_comp:
  1275                           	callstack 0
  1276                           
  1277                           ; 1 bytes @ 0x51
  1278  000052                     	ds	1
  1279  000053                     remove_component@ptr:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x52
  1283  000053                     	ds	2
  1284  000055                     ?___fltol:
  1285                           	callstack 0
  1286  000055                     add_component@add_to_sequence:
  1287                           	callstack 0
  1288  000055                     remove_component@indxToDel:
  1289                           	callstack 0
  1290  000055                     ___fltol@f1:
  1291                           	callstack 0
  1292                           
  1293                           ; 4 bytes @ 0x54
  1294  000055                     	ds	2
  1295  000057                     add_component@i:
  1296                           	callstack 0
  1297  000057                     remove_component@i_570:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x56
  1301  000057                     	ds	2
  1302  000059                     
  1303                           ; 1 bytes @ 0x58
  1304 ;;
  1305 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1306 ;;
  1307 ;; *************** function _main *****************
  1308 ;; Defined at:
  1309 ;;		line 215 in file "main.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  RX_Char         1    0        unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1323 ;;      Params:         0       0       0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0       0       0
  1326 ;;      Totals:         0       0       0       0       0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels required when called: 7
  1329 ;; This function calls:
  1330 ;;		_init_PORTS
  1331 ;;		_init_USART
  1332 ;;		_init_interrupts
  1333 ;;		_start_up_menu
  1334 ;; This function is called by:
  1335 ;;		Startup code after reset
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text0
  1340  002DA8                     __ptext0:
  1341                           	callstack 0
  1342  002DA8                     _main:
  1343                           	callstack 24
  1344  002DA8  FFFF               	dw	65535	; assembler added errata NOP
  1345                           
  1346                           ;main.c: 219:     init_PORTS();
  1347  002DAA  ECB3  F016         	call	_init_PORTS	;wreg free
  1348  002DAE                     
  1349                           ;main.c: 220:     init_USART();
  1350  002DAE  EC61  F016         	call	_init_USART	;wreg free
  1351  002DB2                     
  1352                           ;main.c: 221:     init_interrupts();
  1353  002DB2  ECE9  F016         	call	_init_interrupts	;wreg free
  1354  002DB6                     
  1355                           ;main.c: 223:     (INTCONbits.GIE = 1);
  1356  002DB6  8EF2               	bsf	242,7,c	;volatile
  1357  002DB8                     l4643:
  1358  002DB8  FFFF               	dw	65535	; assembler added errata NOP
  1359                           
  1360                           ;main.c: 225:     start_up_menu();
  1361  002DBA  EC63  F013         	call	_start_up_menu	;wreg free
  1362  002DBE  EFDC  F016         	goto	l4643
  1363  002DC2  EF41  F000         	goto	start
  1364  002DC6                     __end_of_main:
  1365                           	callstack 0
  1366                           
  1367 ;; *************** function _start_up_menu *****************
  1368 ;; Defined at:
  1369 ;;		line 233 in file "main.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  ip              1    8[BANK0 ] const unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1383 ;;      Params:         0       0       0       0       0       0       0
  1384 ;;      Locals:         0       1       0       0       0       0       0
  1385 ;;      Temps:          0       2       0       0       0       0       0
  1386 ;;      Totals:         0       3       0       0       0       0       0
  1387 ;;Total ram usage:        3 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 6
  1390 ;; This function calls:
  1391 ;;		_add_component
  1392 ;;		_change_sequence
  1393 ;;		_pick_and_place
  1394 ;;		_print_string
  1395 ;;		_remove_component
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text1
  1402  0026C6                     __ptext1:
  1403                           	callstack 0
  1404  0026C6                     _start_up_menu:
  1405                           	callstack 0
  1406  0026C6  FFFF               	dw	65535	; assembler added errata NOP
  1407  0026C8                     
  1408                           ;main.c: 237:     print_string("\n1. Default Sequence\n2. Change sequence\n3. Add new co
      +                          mponent\n4. Remove a component");
  1409  0026C8  0E05               	movlw	low STR_1
  1410  0026CA  6E09               	movwf	print_string@strng^0,c
  1411  0026CC  0E7E               	movlw	high STR_1
  1412  0026CE  6E0A               	movwf	(print_string@strng+1)^0,c
  1413  0026D0  EC26  F014         	call	_print_string	;wreg free
  1414  0026D4                     l4601:
  1415  0026D4  FFFF               	dw	65535	; assembler added errata NOP
  1416                           
  1417                           ;main.c: 242:         if(New_char_RX){
  1418  0026D6  5071               	movf	_New_char_RX^0,w,c
  1419  0026D8  B4D8               	btfsc	status,2,c
  1420  0026DA  EF71  F013         	goto	u5001
  1421  0026DE  EF74  F013         	goto	u5000
  1422  0026E2                     u5001:
  1423  0026E2  FFFF               	dw	65535	; assembler added errata NOP
  1424  0026E4  EF6A  F013         	goto	l4601
  1425  0026E8                     u5000:
  1426  0026E8  FFFF               	dw	65535	; assembler added errata NOP
  1427  0026EA                     
  1428                           ;main.c: 244:             const char ip = input_str[0];
  1429  0026EA  C076  F0C8         	movff	_input_str,start_up_menu@ip	;volatile
  1430  0026EE                     
  1431                           ;main.c: 246:             New_char_RX=0;
  1432  0026EE  0E00               	movlw	0
  1433  0026F0  6E71               	movwf	_New_char_RX^0,c
  1434                           
  1435                           ;main.c: 247:             switch(ip){
  1436  0026F2  EFA7  F013         	goto	l4625
  1437  0026F6                     l4607:
  1438  0026F6  FFFF               	dw	65535	; assembler added errata NOP
  1439                           
  1440                           ;main.c: 250:                     pick_and_place('C');
  1441  0026F8  0E43               	movlw	67
  1442  0026FA  EC17  F003         	call	_pick_and_place
  1443                           
  1444                           ;main.c: 251:                     pick_and_place('A');
  1445  0026FE  0E41               	movlw	65
  1446  002700  EC17  F003         	call	_pick_and_place
  1447                           
  1448                           ;main.c: 252:                     pick_and_place('B');
  1449  002704  0E42               	movlw	66
  1450  002706  EC17  F003         	call	_pick_and_place
  1451  00270A                     
  1452                           ;main.c: 254:                     sequence[0]="C";
  1453  00270A  0EFD               	movlw	low (low STR_2)
  1454  00270C  6E72               	movwf	_sequence^0,c
  1455  00270E                     
  1456                           ;main.c: 255:                     sequence[1]="A";
  1457  00270E  0EF9               	movlw	low (low STR_3)
  1458  002710  6E73               	movwf	(_sequence+1)^0,c
  1459  002712                     
  1460                           ;main.c: 256:                     sequence[2]="B";
  1461  002712  0EFB               	movlw	low (low STR_4)
  1462  002714  6E74               	movwf	(_sequence+2)^0,c
  1463  002716                     l4615:
  1464  002716  FFFF               	dw	65535	; assembler added errata NOP
  1465                           
  1466                           ;main.c: 249:                 while(!New_char_RX){
  1467  002718  5071               	movf	_New_char_RX^0,w,c
  1468  00271A  B4D8               	btfsc	status,2,c
  1469  00271C  EF92  F013         	goto	u5011
  1470  002720  EF95  F013         	goto	u5010
  1471  002724                     u5011:
  1472  002724  FFFF               	dw	65535	; assembler added errata NOP
  1473  002726  EF7B  F013         	goto	l4607
  1474  00272A                     u5010:
  1475  00272A  FFFF               	dw	65535	; assembler added errata NOP
  1476  00272C  EFC7  F013         	goto	l4627
  1477  002730                     l4617:
  1478  002730  FFFF               	dw	65535	; assembler added errata NOP
  1479                           
  1480                           ; BSR set to: 0
  1481  002732  EC21  F00F         	call	_change_sequence	;wreg free
  1482                           
  1483                           ;main.c: 261:                     break;
  1484  002736  EFC7  F013         	goto	l4627
  1485  00273A                     l4619:
  1486  00273A  FFFF               	dw	65535	; assembler added errata NOP
  1487                           
  1488                           ; BSR set to: 0
  1489  00273C  EC45  F00C         	call	_add_component	;wreg free
  1490                           
  1491                           ;main.c: 263:                     break;
  1492  002740  EFC7  F013         	goto	l4627
  1493  002744                     l4621:
  1494  002744  FFFF               	dw	65535	; assembler added errata NOP
  1495                           
  1496                           ; BSR set to: 0
  1497  002746  ECD2  F00F         	call	_remove_component	;wreg free
  1498                           
  1499                           ;main.c: 265:                     break;
  1500  00274A  EFC7  F013         	goto	l4627
  1501  00274E                     l4625:
  1502  00274E  FFFF               	dw	65535	; assembler added errata NOP
  1503  002750  0100               	movlb	0	; () banked
  1504  002752  51C8               	movf	start_up_menu@ip& (0+255),w,b
  1505  002754  6FC6               	movwf	??_start_up_menu& (0+255),b
  1506  002756  6BC7               	clrf	(??_start_up_menu+1)& (0+255),b
  1507                           
  1508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1509                           ; Switch size 1, requested type "simple"
  1510                           ; Number of cases is 1, Range of values is 0 to 0
  1511                           ; switch strategies available:
  1512                           ; Name         Instructions Cycles
  1513                           ; simple_byte            4     3 (average)
  1514                           ;	Chosen strategy is simple_byte
  1515  002758  51C7               	movf	(??_start_up_menu+1)& (0+255),w,b
  1516  00275A  0A00               	xorlw	0	; case 0
  1517  00275C  B4D8               	btfsc	status,2,c
  1518  00275E  EFB3  F013         	goto	l4709
  1519  002762  EFC7  F013         	goto	l4627
  1520  002766                     l4709:
  1521  002766  FFFF               	dw	65535	; assembler added errata NOP
  1522                           
  1523                           ; BSR set to: 0
  1524                           ; Switch size 1, requested type "simple"
  1525                           ; Number of cases is 4, Range of values is 49 to 52
  1526                           ; switch strategies available:
  1527                           ; Name         Instructions Cycles
  1528                           ; simple_byte           13     7 (average)
  1529                           ;	Chosen strategy is simple_byte
  1530  002768  51C6               	movf	??_start_up_menu& (0+255),w,b
  1531  00276A  0A31               	xorlw	49	; case 49
  1532  00276C  B4D8               	btfsc	status,2,c
  1533  00276E  EF8B  F013         	goto	l4615
  1534  002772  0A03               	xorlw	3	; case 50
  1535  002774  B4D8               	btfsc	status,2,c
  1536  002776  EF98  F013         	goto	l4617
  1537  00277A  0A01               	xorlw	1	; case 51
  1538  00277C  B4D8               	btfsc	status,2,c
  1539  00277E  EF9D  F013         	goto	l4619
  1540  002782  0A07               	xorlw	7	; case 52
  1541  002784  B4D8               	btfsc	status,2,c
  1542  002786  EFA2  F013         	goto	l4621
  1543  00278A  EFC7  F013         	goto	l4627
  1544  00278E                     l4627:
  1545  00278E  FFFF               	dw	65535	; assembler added errata NOP
  1546                           
  1547                           ;main.c: 268:             New_char_RX=0;
  1548  002790  0E00               	movlw	0
  1549  002792  6E71               	movwf	_New_char_RX^0,c
  1550  002794  0012               	return		;funcret
  1551  002796  FFFF               	dw	65535	; errata NOP
  1552  002798                     __end_of_start_up_menu:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _remove_component *****************
  1556 ;; Defined at:
  1557 ;;		line 335 in file "main.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  i               2   86[COMRAM] int 
  1562 ;;  indxToDel       2   84[COMRAM] int 
  1563 ;;  ptr             2   82[COMRAM] PTR unsigned char 
  1564 ;;		 -> NULL(0), sequence(4), 
  1565 ;;  rm_comp         1   81[COMRAM] unsigned char 
  1566 ;;  i               2    0        int 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1576 ;;      Params:         0       0       0       0       0       0       0
  1577 ;;      Locals:         7       0       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0
  1579 ;;      Totals:         7       0       0       0       0       0       0
  1580 ;;Total ram usage:        7 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 5
  1583 ;; This function calls:
  1584 ;;		_memmove
  1585 ;;		_pick_and_place
  1586 ;;		_print_string
  1587 ;;		_serial_tx_char
  1588 ;;		_strlen
  1589 ;;		_strrchr
  1590 ;; This function is called by:
  1591 ;;		_start_up_menu
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text2
  1596  001FA4                     __ptext2:
  1597                           	callstack 0
  1598  001FA4                     _remove_component:
  1599                           	callstack 0
  1600  001FA4  FFFF               	dw	65535	; assembler added errata NOP
  1601  001FA6                     
  1602                           ;main.c: 336:     print_string("\nWhich component would you like to remove from the  seq
      +                          uence?\n");
  1603  001FA6  0E9D               	movlw	low STR_15
  1604  001FA8  6E09               	movwf	print_string@strng^0,c
  1605  001FAA  0E7E               	movlw	high STR_15
  1606  001FAC  6E0A               	movwf	(print_string@strng+1)^0,c
  1607  001FAE  EC26  F014         	call	_print_string	;wreg free
  1608  001FB2                     l4507:
  1609  001FB2  FFFF               	dw	65535	; assembler added errata NOP
  1610                           
  1611                           ;main.c: 338:     if(New_char_RX){
  1612  001FB4  5071               	movf	_New_char_RX^0,w,c
  1613  001FB6  B4D8               	btfsc	status,2,c
  1614  001FB8  EFE0  F00F         	goto	u4891
  1615  001FBC  EFE3  F00F         	goto	u4890
  1616  001FC0                     u4891:
  1617  001FC0  FFFF               	dw	65535	; assembler added errata NOP
  1618  001FC2  EFD9  F00F         	goto	l4507
  1619  001FC6                     u4890:
  1620  001FC6  FFFF               	dw	65535	; assembler added errata NOP
  1621  001FC8                     
  1622                           ;main.c: 339:         char rm_comp = input_str[0];
  1623  001FC8  C076  F052         	movff	_input_str,remove_component@rm_comp	;volatile
  1624  001FCC                     
  1625                           ;main.c: 340:         char *ptr;;main.c: 341:         int indxToDel;;main.c: 342:       
      +                            ptr=strrchr(sequence,rm_comp);
  1626  001FCC  0E72               	movlw	low _sequence
  1627  001FCE  6E16               	movwf	strrchr@s^0,c
  1628  001FD0  0E00               	movlw	high _sequence
  1629  001FD2  6E17               	movwf	(strrchr@s+1)^0,c
  1630  001FD4  C052  F018         	movff	remove_component@rm_comp,strrchr@c
  1631  001FD8  6A19               	clrf	(strrchr@c+1)^0,c
  1632  001FDA  EC81  F016         	call	_strrchr	;wreg free
  1633  001FDE  C016  F053         	movff	?_strrchr,remove_component@ptr
  1634  001FE2  C017  F054         	movff	?_strrchr+1,remove_component@ptr+1
  1635  001FE6                     
  1636                           ;main.c: 343:         if(ptr != ((void*)0)){
  1637  001FE6  5053               	movf	remove_component@ptr^0,w,c
  1638  001FE8  1054               	iorwf	(remove_component@ptr+1)^0,w,c
  1639  001FEA  B4D8               	btfsc	status,2,c
  1640  001FEC  EFFA  F00F         	goto	u4901
  1641  001FF0  EFFD  F00F         	goto	u4900
  1642  001FF4                     u4901:
  1643  001FF4  FFFF               	dw	65535	; assembler added errata NOP
  1644  001FF6  EF20  F010         	goto	l4521
  1645  001FFA                     u4900:
  1646  001FFA  FFFF               	dw	65535	; assembler added errata NOP
  1647  001FFC                     
  1648                           ;main.c: 344:             indxToDel = ptr - sequence;
  1649  001FFC  0E72               	movlw	low _sequence
  1650  001FFE  5C53               	subwf	remove_component@ptr^0,w,c
  1651  002000  6E55               	movwf	remove_component@indxToDel^0,c
  1652  002002  0E00               	movlw	high _sequence
  1653  002004  5854               	subwfb	(remove_component@ptr+1)^0,w,c
  1654  002006  6E56               	movwf	(remove_component@indxToDel+1)^0,c
  1655  002008                     
  1656                           ;main.c: 345:             memmove(&sequence[indxToDel], &sequence[indxToDel + 1], strlen
      +                          (sequence) - indxToDel);
  1657  002008  0E72               	movlw	low _sequence
  1658  00200A  2455               	addwf	remove_component@indxToDel^0,w,c
  1659  00200C  6E0C               	movwf	memmove@d1^0,c
  1660  00200E  0E00               	movlw	high _sequence
  1661  002010  2056               	addwfc	(remove_component@indxToDel+1)^0,w,c
  1662  002012  6E0D               	movwf	(memmove@d1+1)^0,c
  1663  002014  0E73               	movlw	low (_sequence+1)
  1664  002016  2455               	addwf	remove_component@indxToDel^0,w,c
  1665  002018  6E0E               	movwf	memmove@s1^0,c
  1666  00201A  0E00               	movlw	high (_sequence+1)
  1667  00201C  2056               	addwfc	(remove_component@indxToDel+1)^0,w,c
  1668  00201E  6E0F               	movwf	(memmove@s1+1)^0,c
  1669  002020  0E72               	movlw	low _sequence
  1670  002022  6E08               	movwf	strlen@s^0,c
  1671  002024  0E00               	movlw	high _sequence
  1672  002026  6E09               	movwf	(strlen@s+1)^0,c
  1673  002028  ECDE  F015         	call	_strlen	;wreg free
  1674  00202C  5055               	movf	remove_component@indxToDel^0,w,c
  1675  00202E  5C08               	subwf	?_strlen^0,w,c
  1676  002030  6E10               	movwf	memmove@n^0,c
  1677  002032  5056               	movf	(remove_component@indxToDel+1)^0,w,c
  1678  002034  5809               	subwfb	(?_strlen+1)^0,w,c
  1679  002036  6E11               	movwf	(memmove@n+1)^0,c
  1680  002038  ECA8  F011         	call	_memmove	;wreg free
  1681                           
  1682                           ;main.c: 346:             break;
  1683  00203C  EF2B  F010         	goto	l4525
  1684  002040                     l4521:
  1685  002040  FFFF               	dw	65535	; assembler added errata NOP
  1686                           
  1687                           ;main.c: 349:             print_string("\ncomponent is not in the sequence. \nTry select
      +                          ing another component\n");
  1688  002042  0E58               	movlw	low STR_16
  1689  002044  6E09               	movwf	print_string@strng^0,c
  1690  002046  0E7E               	movlw	high STR_16
  1691  002048  6E0A               	movwf	(print_string@strng+1)^0,c
  1692  00204A  EC26  F014         	call	_print_string	;wreg free
  1693  00204E                     
  1694                           ;main.c: 350:             New_char_RX=0;
  1695  00204E  0E00               	movlw	0
  1696  002050  6E71               	movwf	_New_char_RX^0,c
  1697  002052  EFD9  F00F         	goto	l4507
  1698  002056                     l4525:
  1699  002056  FFFF               	dw	65535	; assembler added errata NOP
  1700                           
  1701                           ;main.c: 354:     print_string("\nThe new sequence is: ");
  1702  002058  0EE2               	movlw	low STR_17
  1703  00205A  6E09               	movwf	print_string@strng^0,c
  1704  00205C  0E7F               	movlw	high STR_17
  1705  00205E  6E0A               	movwf	(print_string@strng+1)^0,c
  1706  002060  EC26  F014         	call	_print_string	;wreg free
  1707                           
  1708                           ;main.c: 355:     print_string(sequence);
  1709  002064  0E72               	movlw	low _sequence
  1710  002066  6E09               	movwf	print_string@strng^0,c
  1711  002068  0E00               	movlw	high _sequence
  1712  00206A  6E0A               	movwf	(print_string@strng+1)^0,c
  1713  00206C  EC26  F014         	call	_print_string	;wreg free
  1714  002070                     
  1715                           ;main.c: 356:     New_char_RX=0;
  1716  002070  0E00               	movlw	0
  1717  002072  6E71               	movwf	_New_char_RX^0,c
  1718                           
  1719                           ;main.c: 357:     while(!New_char_RX){
  1720  002074  EF6B  F010         	goto	l4537
  1721  002078                     l4529:
  1722  002078  FFFF               	dw	65535	; assembler added errata NOP
  1723                           
  1724                           ;main.c: 359:         for(int i=0; i<strlen(sequence);i++){
  1725  00207A  0E00               	movlw	0
  1726  00207C  6E58               	movwf	(remove_component@i_570+1)^0,c
  1727  00207E  0E00               	movlw	0
  1728  002080  6E57               	movwf	remove_component@i_570^0,c
  1729  002082  EF58  F010         	goto	l4535
  1730  002086                     l4531:
  1731  002086  FFFF               	dw	65535	; assembler added errata NOP
  1732                           
  1733                           ;main.c: 361:             serial_tx_char(sequence[i]);
  1734  002088  0E72               	movlw	low _sequence
  1735  00208A  2457               	addwf	remove_component@i_570^0,w,c
  1736  00208C  6ED9               	movwf	fsr2l,c
  1737  00208E  0E00               	movlw	high _sequence
  1738  002090  2058               	addwfc	(remove_component@i_570+1)^0,w,c
  1739  002092  6EDA               	movwf	fsr2h,c
  1740  002094  50DF               	movf	indf2,w,c
  1741  002096  ECC4  F016         	call	_serial_tx_char
  1742                           
  1743                           ;main.c: 362:             pick_and_place(sequence[i]);
  1744  00209A  0E72               	movlw	low _sequence
  1745  00209C  2457               	addwf	remove_component@i_570^0,w,c
  1746  00209E  6ED9               	movwf	fsr2l,c
  1747  0020A0  0E00               	movlw	high _sequence
  1748  0020A2  2058               	addwfc	(remove_component@i_570+1)^0,w,c
  1749  0020A4  6EDA               	movwf	fsr2h,c
  1750  0020A6  50DF               	movf	indf2,w,c
  1751  0020A8  EC17  F003         	call	_pick_and_place
  1752  0020AC                     
  1753                           ;main.c: 363:         }
  1754  0020AC  4A57               	infsnz	remove_component@i_570^0,f,c
  1755  0020AE  2A58               	incf	(remove_component@i_570+1)^0,f,c
  1756  0020B0                     l4535:
  1757  0020B0  FFFF               	dw	65535	; assembler added errata NOP
  1758  0020B2  0E72               	movlw	low _sequence
  1759  0020B4  6E08               	movwf	strlen@s^0,c
  1760  0020B6  0E00               	movlw	high _sequence
  1761  0020B8  6E09               	movwf	(strlen@s+1)^0,c
  1762  0020BA  ECDE  F015         	call	_strlen	;wreg free
  1763  0020BE  5008               	movf	?_strlen^0,w,c
  1764  0020C0  5C57               	subwf	remove_component@i_570^0,w,c
  1765  0020C2  5009               	movf	(?_strlen+1)^0,w,c
  1766  0020C4  5858               	subwfb	(remove_component@i_570+1)^0,w,c
  1767  0020C6  A0D8               	btfss	status,0,c
  1768  0020C8  EF68  F010         	goto	u4911
  1769  0020CC  EF6B  F010         	goto	u4910
  1770  0020D0                     u4911:
  1771  0020D0  FFFF               	dw	65535	; assembler added errata NOP
  1772  0020D2  EF43  F010         	goto	l4531
  1773  0020D6                     u4910:
  1774  0020D6                     l4537:
  1775  0020D6  FFFF               	dw	65535	; assembler added errata NOP
  1776                           
  1777                           ;main.c: 357:     while(!New_char_RX){
  1778  0020D8  5071               	movf	_New_char_RX^0,w,c
  1779  0020DA  B4D8               	btfsc	status,2,c
  1780  0020DC  EF72  F010         	goto	u4921
  1781  0020E0  EF75  F010         	goto	u4920
  1782  0020E4                     u4921:
  1783  0020E4  FFFF               	dw	65535	; assembler added errata NOP
  1784  0020E6  EF3C  F010         	goto	l4529
  1785  0020EA                     u4920:
  1786  0020EA  FFFF               	dw	65535	; assembler added errata NOP
  1787  0020EC  0012               	return		;funcret
  1788  0020EE  FFFF               	dw	65535	; errata NOP
  1789  0020F0                     __end_of_remove_component:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _strrchr *****************
  1793 ;; Defined at:
  1794 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strrchr.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  s               2   21[COMRAM] PTR const unsigned char 
  1797 ;;		 -> sequence(4), 
  1798 ;;  c               2   23[COMRAM] int 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  2   21[COMRAM] PTR unsigned char 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1810 ;;      Params:         4       0       0       0       0       0       0
  1811 ;;      Locals:         0       0       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0
  1813 ;;      Totals:         4       0       0       0       0       0       0
  1814 ;;Total ram usage:        4 bytes
  1815 ;; Hardware stack levels used: 1
  1816 ;; Hardware stack levels required when called: 2
  1817 ;; This function calls:
  1818 ;;		___memrchr
  1819 ;;		_strlen
  1820 ;; This function is called by:
  1821 ;;		_remove_component
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text3
  1826  002D02                     __ptext3:
  1827                           	callstack 0
  1828  002D02                     _strrchr:
  1829                           	callstack 0
  1830  002D02  FFFF               	dw	65535	; assembler added errata NOP
  1831  002D04  C016  F00C         	movff	strrchr@s,___memrchr@m
  1832  002D08  C017  F00D         	movff	strrchr@s+1,___memrchr@m+1
  1833  002D0C  C018  F00E         	movff	strrchr@c,___memrchr@c
  1834  002D10  C019  F00F         	movff	strrchr@c+1,___memrchr@c+1
  1835  002D14  C016  F008         	movff	strrchr@s,strlen@s
  1836  002D18  C017  F009         	movff	strrchr@s+1,strlen@s+1
  1837  002D1C  ECDE  F015         	call	_strlen	;wreg free
  1838  002D20  0E01               	movlw	1
  1839  002D22  2408               	addwf	?_strlen^0,w,c
  1840  002D24  6E10               	movwf	___memrchr@n^0,c
  1841  002D26  0E00               	movlw	0
  1842  002D28  2009               	addwfc	(?_strlen+1)^0,w,c
  1843  002D2A  6E11               	movwf	(___memrchr@n+1)^0,c
  1844  002D2C  ECB0  F014         	call	___memrchr	;wreg free
  1845  002D30  C00C  F016         	movff	?___memrchr,?_strrchr
  1846  002D34  C00D  F017         	movff	?___memrchr+1,?_strrchr+1
  1847  002D38  0012               	return		;funcret
  1848  002D3A  FFFF               	dw	65535	; errata NOP
  1849  002D3C                     __end_of_strrchr:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function ___memrchr *****************
  1853 ;; Defined at:
  1854 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memrchr.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  m               2   11[COMRAM] PTR const void 
  1857 ;;		 -> sequence(4), 
  1858 ;;  c               2   13[COMRAM] int 
  1859 ;;  n               2   15[COMRAM] unsigned int 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  s               2   19[COMRAM] PTR const unsigned char 
  1862 ;;		 -> sequence(4), 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2   11[COMRAM] PTR void 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1872 ;;      Params:         6       0       0       0       0       0       0
  1873 ;;      Locals:         2       0       0       0       0       0       0
  1874 ;;      Temps:          2       0       0       0       0       0       0
  1875 ;;      Totals:        10       0       0       0       0       0       0
  1876 ;;Total ram usage:       10 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; Hardware stack levels required when called: 1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_strrchr
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text4
  1887  002960                     __ptext4:
  1888                           	callstack 0
  1889  002960                     ___memrchr:
  1890                           	callstack 0
  1891  002960  FFFF               	dw	65535	; assembler added errata NOP
  1892  002962  C00C  F014         	movff	___memrchr@m,___memrchr@s
  1893  002966  C00D  F015         	movff	___memrchr@m+1,___memrchr@s+1
  1894  00296A  C00E  F00E         	movff	___memrchr@c,___memrchr@c
  1895  00296E  6A0F               	clrf	(___memrchr@c+1)^0,c
  1896  002970  EFDA  F014         	goto	l4183
  1897  002974                     l4177:
  1898  002974  FFFF               	dw	65535	; assembler added errata NOP
  1899  002976  5010               	movf	___memrchr@n^0,w,c
  1900  002978  2414               	addwf	___memrchr@s^0,w,c
  1901  00297A  6ED9               	movwf	fsr2l,c
  1902  00297C  5011               	movf	(___memrchr@n+1)^0,w,c
  1903  00297E  2015               	addwfc	(___memrchr@s+1)^0,w,c
  1904  002980  6EDA               	movwf	fsr2h,c
  1905  002982  50DF               	movf	indf2,w,c
  1906  002984  6E12               	movwf	??___memrchr^0,c
  1907  002986  6A13               	clrf	(??___memrchr+1)^0,c
  1908  002988  500E               	movf	___memrchr@c^0,w,c
  1909  00298A  1812               	xorwf	??___memrchr^0,w,c
  1910  00298C  E107               	bnz	u4341
  1911  00298E  500F               	movf	(___memrchr@c+1)^0,w,c
  1912  002990  1813               	xorwf	(??___memrchr+1)^0,w,c
  1913  002992  A4D8               	btfss	status,2,c
  1914  002994  EFCE  F014         	goto	u4341
  1915  002998  EFD1  F014         	goto	u4340
  1916  00299C                     u4341:
  1917  00299C  FFFF               	dw	65535	; assembler added errata NOP
  1918  00299E  EFDA  F014         	goto	l4183
  1919  0029A2                     u4340:
  1920  0029A2  FFFF               	dw	65535	; assembler added errata NOP
  1921  0029A4  5010               	movf	___memrchr@n^0,w,c
  1922  0029A6  2414               	addwf	___memrchr@s^0,w,c
  1923  0029A8  6E0C               	movwf	?___memrchr^0,c
  1924  0029AA  5011               	movf	(___memrchr@n+1)^0,w,c
  1925  0029AC  2015               	addwfc	(___memrchr@s+1)^0,w,c
  1926  0029AE  6E0D               	movwf	(?___memrchr+1)^0,c
  1927  0029B0  EFEE  F014         	goto	l1140
  1928  0029B4                     l4183:
  1929  0029B4  FFFF               	dw	65535	; assembler added errata NOP
  1930  0029B6  0610               	decf	___memrchr@n^0,f,c
  1931  0029B8  A0D8               	btfss	status,0,c
  1932  0029BA  0611               	decf	(___memrchr@n+1)^0,f,c
  1933  0029BC  2810               	incf	___memrchr@n^0,w,c
  1934  0029BE  E106               	bnz	u4351
  1935  0029C0  2811               	incf	(___memrchr@n+1)^0,w,c
  1936  0029C2  A4D8               	btfss	status,2,c
  1937  0029C4  EFE6  F014         	goto	u4351
  1938  0029C8  EFE9  F014         	goto	u4350
  1939  0029CC                     u4351:
  1940  0029CC  FFFF               	dw	65535	; assembler added errata NOP
  1941  0029CE  EFBA  F014         	goto	l4177
  1942  0029D2                     u4350:
  1943  0029D2  FFFF               	dw	65535	; assembler added errata NOP
  1944  0029D4  0E00               	movlw	0
  1945  0029D6  6E0C               	movwf	?___memrchr^0,c
  1946  0029D8  0E00               	movlw	0
  1947  0029DA  6E0D               	movwf	(?___memrchr+1)^0,c
  1948  0029DC                     l1140:
  1949  0029DC  FFFF               	dw	65535	; assembler added errata NOP
  1950  0029DE  0012               	return		;funcret
  1951  0029E0  FFFF               	dw	65535	; errata NOP
  1952  0029E2                     __end_of___memrchr:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _memmove *****************
  1956 ;; Defined at:
  1957 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/memmove.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  d1              2   11[COMRAM] PTR void 
  1960 ;;		 -> sequence(4), 
  1961 ;;  s1              2   13[COMRAM] PTR const void 
  1962 ;;		 -> sequence(4), 
  1963 ;;  n               2   15[COMRAM] unsigned int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  s               2   21[COMRAM] PTR const unsigned char 
  1966 ;;		 -> sequence(4), 
  1967 ;;  d               2   19[COMRAM] PTR unsigned char 
  1968 ;;		 -> sequence(4), 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2   11[COMRAM] PTR void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1978 ;;      Params:         6       0       0       0       0       0       0
  1979 ;;      Locals:         4       0       0       0       0       0       0
  1980 ;;      Temps:          2       0       0       0       0       0       0
  1981 ;;      Totals:        12       0       0       0       0       0       0
  1982 ;;Total ram usage:       12 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 1
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_remove_component
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text5
  1993  002350                     __ptext5:
  1994                           	callstack 0
  1995  002350                     _memmove:
  1996                           	callstack 0
  1997  002350  FFFF               	dw	65535	; assembler added errata NOP
  1998  002352  C00E  F016         	movff	memmove@s1,memmove@s
  1999  002356  C00F  F017         	movff	memmove@s1+1,memmove@s+1
  2000  00235A  C00C  F014         	movff	memmove@d1,memmove@d
  2001  00235E  C00D  F015         	movff	memmove@d1+1,memmove@d+1
  2002  002362  5014               	movf	memmove@d^0,w,c
  2003  002364  5C16               	subwf	memmove@s^0,w,c
  2004  002366  5015               	movf	(memmove@d+1)^0,w,c
  2005  002368  5817               	subwfb	(memmove@s+1)^0,w,c
  2006  00236A  B0D8               	btfsc	status,0,c
  2007  00236C  EFBA  F011         	goto	u4621
  2008  002370  EFBD  F011         	goto	u4620
  2009  002374                     u4621:
  2010  002374  FFFF               	dw	65535	; assembler added errata NOP
  2011  002376  EFFA  F011         	goto	l4367
  2012  00237A                     u4620:
  2013  00237A  FFFF               	dw	65535	; assembler added errata NOP
  2014  00237C  5010               	movf	memmove@n^0,w,c
  2015  00237E  2416               	addwf	memmove@s^0,w,c
  2016  002380  6E12               	movwf	??_memmove^0,c
  2017  002382  5011               	movf	(memmove@n+1)^0,w,c
  2018  002384  2017               	addwfc	(memmove@s+1)^0,w,c
  2019  002386  6E13               	movwf	(??_memmove+1)^0,c
  2020  002388  5012               	movf	??_memmove^0,w,c
  2021  00238A  5C14               	subwf	memmove@d^0,w,c
  2022  00238C  5013               	movf	(??_memmove+1)^0,w,c
  2023  00238E  5815               	subwfb	(memmove@d+1)^0,w,c
  2024  002390  B0D8               	btfsc	status,0,c
  2025  002392  EFCD  F011         	goto	u4631
  2026  002396  EFD0  F011         	goto	u4630
  2027  00239A                     u4631:
  2028  00239A  FFFF               	dw	65535	; assembler added errata NOP
  2029  00239C  EFFA  F011         	goto	l4367
  2030  0023A0                     u4630:
  2031  0023A0  FFFF               	dw	65535	; assembler added errata NOP
  2032  0023A2  5010               	movf	memmove@n^0,w,c
  2033  0023A4  2616               	addwf	memmove@s^0,f,c
  2034  0023A6  5011               	movf	(memmove@n+1)^0,w,c
  2035  0023A8  2217               	addwfc	(memmove@s+1)^0,f,c
  2036  0023AA  5010               	movf	memmove@n^0,w,c
  2037  0023AC  2614               	addwf	memmove@d^0,f,c
  2038  0023AE  5011               	movf	(memmove@n+1)^0,w,c
  2039  0023B0  2215               	addwfc	(memmove@d+1)^0,f,c
  2040  0023B2                     l4363:
  2041  0023B2  FFFF               	dw	65535	; assembler added errata NOP
  2042  0023B4  0616               	decf	memmove@s^0,f,c
  2043  0023B6  A0D8               	btfss	status,0,c
  2044  0023B8  0617               	decf	(memmove@s+1)^0,f,c
  2045  0023BA  C016  FFD9         	movff	memmove@s,fsr2l
  2046  0023BE  C017  FFDA         	movff	memmove@s+1,fsr2h
  2047  0023C2  0614               	decf	memmove@d^0,f,c
  2048  0023C4  A0D8               	btfss	status,0,c
  2049  0023C6  0615               	decf	(memmove@d+1)^0,f,c
  2050  0023C8  C014  FFE1         	movff	memmove@d,fsr1l
  2051  0023CC  C015  FFE2         	movff	memmove@d+1,fsr1h
  2052  0023D0  CFDF FFE7          	movff	indf2,indf1
  2053  0023D4  0610               	decf	memmove@n^0,f,c
  2054  0023D6  A0D8               	btfss	status,0,c
  2055  0023D8  0611               	decf	(memmove@n+1)^0,f,c
  2056  0023DA  5010               	movf	memmove@n^0,w,c
  2057  0023DC  1011               	iorwf	(memmove@n+1)^0,w,c
  2058  0023DE  A4D8               	btfss	status,2,c
  2059  0023E0  EFF4  F011         	goto	u4641
  2060  0023E4  EFF7  F011         	goto	u4640
  2061  0023E8                     u4641:
  2062  0023E8  FFFF               	dw	65535	; assembler added errata NOP
  2063  0023EA  EFD9  F011         	goto	l4363
  2064  0023EE                     u4640:
  2065  0023EE  FFFF               	dw	65535	; assembler added errata NOP
  2066  0023F0  EF22  F012         	goto	l1096
  2067  0023F4                     l4367:
  2068  0023F4  FFFF               	dw	65535	; assembler added errata NOP
  2069  0023F6  5010               	movf	memmove@n^0,w,c
  2070  0023F8  1011               	iorwf	(memmove@n+1)^0,w,c
  2071  0023FA  B4D8               	btfsc	status,2,c
  2072  0023FC  EF02  F012         	goto	u4651
  2073  002400  EF05  F012         	goto	u4650
  2074  002404                     u4651:
  2075  002404  FFFF               	dw	65535	; assembler added errata NOP
  2076  002406  EF22  F012         	goto	l1096
  2077  00240A                     u4650:
  2078  00240A  FFFF               	dw	65535	; assembler added errata NOP
  2079  00240C                     l4369:
  2080  00240C  FFFF               	dw	65535	; assembler added errata NOP
  2081  00240E  C016  FFD9         	movff	memmove@s,fsr2l
  2082  002412  C017  FFDA         	movff	memmove@s+1,fsr2h
  2083  002416  C014  FFE1         	movff	memmove@d,fsr1l
  2084  00241A  C015  FFE2         	movff	memmove@d+1,fsr1h
  2085  00241E  CFDF FFE7          	movff	indf2,indf1
  2086  002422  4A16               	infsnz	memmove@s^0,f,c
  2087  002424  2A17               	incf	(memmove@s+1)^0,f,c
  2088  002426  4A14               	infsnz	memmove@d^0,f,c
  2089  002428  2A15               	incf	(memmove@d+1)^0,f,c
  2090  00242A  0610               	decf	memmove@n^0,f,c
  2091  00242C  A0D8               	btfss	status,0,c
  2092  00242E  0611               	decf	(memmove@n+1)^0,f,c
  2093  002430  5010               	movf	memmove@n^0,w,c
  2094  002432  1011               	iorwf	(memmove@n+1)^0,w,c
  2095  002434  A4D8               	btfss	status,2,c
  2096  002436  EF1F  F012         	goto	u4661
  2097  00243A  EF22  F012         	goto	u4660
  2098  00243E                     u4661:
  2099  00243E  FFFF               	dw	65535	; assembler added errata NOP
  2100  002440  EF06  F012         	goto	l4369
  2101  002444                     u4660:
  2102  002444                     l1096:
  2103  002444  FFFF               	dw	65535	; assembler added errata NOP
  2104  002446  0012               	return		;funcret
  2105  002448  FFFF               	dw	65535	; errata NOP
  2106  00244A                     __end_of_memmove:
  2107                           	callstack 0
  2108                           
  2109 ;; *************** function _change_sequence *****************
  2110 ;; Defined at:
  2111 ;;		line 272 in file "main.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;		None
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  i               2    2[BANK0 ] int 
  2116 ;;  i               2    4[BANK0 ] int 
  2117 ;;  j               2    0[BANK0 ] int 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2127 ;;      Params:         0       0       0       0       0       0       0
  2128 ;;      Locals:         0       6       0       0       0       0       0
  2129 ;;      Temps:          3       0       0       0       0       0       0
  2130 ;;      Totals:         3       6       0       0       0       0       0
  2131 ;;Total ram usage:        9 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 5
  2134 ;; This function calls:
  2135 ;;		_pick_and_place
  2136 ;;		_print_string
  2137 ;;		_serial_tx_char
  2138 ;; This function is called by:
  2139 ;;		_start_up_menu
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text6
  2144  001E42                     __ptext6:
  2145                           	callstack 0
  2146  001E42                     _change_sequence:
  2147                           	callstack 0
  2148  001E42  FFFF               	dw	65535	; assembler added errata NOP
  2149  001E44                     
  2150                           ;main.c: 274:     print_string("The current sequence is: ");
  2151  001E44  0EB1               	movlw	low (STR_14+1)
  2152  001E46  6E09               	movwf	print_string@strng^0,c
  2153  001E48  0E7F               	movlw	high (STR_14+1)
  2154  001E4A  6E0A               	movwf	(print_string@strng+1)^0,c
  2155  001E4C  EC26  F014         	call	_print_string	;wreg free
  2156  001E50                     
  2157                           ;main.c: 277:     int j = 0;
  2158  001E50  0E00               	movlw	0
  2159  001E52  0100               	movlb	0	; () banked
  2160  001E54  6FC1               	movwf	(change_sequence@j+1)& (0+255),b
  2161  001E56  0E00               	movlw	0
  2162  001E58  6FC0               	movwf	change_sequence@j& (0+255),b
  2163  001E5A                     l4415:
  2164  001E5A  FFFF               	dw	65535	; assembler added errata NOP
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;main.c: 279:         serial_tx_char(sequence[j]);
  2168  001E5C  0E72               	movlw	low _sequence
  2169  001E5E  25C0               	addwf	change_sequence@j& (0+255),w,b
  2170  001E60  6ED9               	movwf	fsr2l,c
  2171  001E62  0E00               	movlw	high _sequence
  2172  001E64  21C1               	addwfc	(change_sequence@j+1)& (0+255),w,b
  2173  001E66  6EDA               	movwf	fsr2h,c
  2174  001E68  50DF               	movf	indf2,w,c
  2175  001E6A  ECC4  F016         	call	_serial_tx_char
  2176  001E6E                     
  2177                           ;main.c: 281:     }while(sequence[j++] != ((void*)0));
  2178  001E6E  0100               	movlb	0	; () banked
  2179  001E70  51C0               	movf	change_sequence@j& (0+255),w,b
  2180  001E72  6E52               	movwf	??_change_sequence^0,c
  2181  001E74  51C1               	movf	(change_sequence@j+1)& (0+255),w,b
  2182  001E76  6E53               	movwf	(??_change_sequence+1)^0,c
  2183  001E78  4BC0               	infsnz	change_sequence@j& (0+255),f,b
  2184  001E7A  2BC1               	incf	(change_sequence@j+1)& (0+255),f,b
  2185  001E7C  0E72               	movlw	low _sequence
  2186  001E7E  2452               	addwf	??_change_sequence^0,w,c
  2187  001E80  6ED9               	movwf	fsr2l,c
  2188  001E82  0E00               	movlw	high _sequence
  2189  001E84  2053               	addwfc	(??_change_sequence+1)^0,w,c
  2190  001E86  6EDA               	movwf	fsr2h,c
  2191  001E88  50DF               	movf	indf2,w,c
  2192  001E8A  A4D8               	btfss	status,2,c
  2193  001E8C  EF4A  F00F         	goto	u4761
  2194  001E90  EF4D  F00F         	goto	u4760
  2195  001E94                     u4761:
  2196  001E94  FFFF               	dw	65535	; assembler added errata NOP
  2197  001E96  EF2D  F00F         	goto	l4415
  2198  001E9A                     u4760:
  2199  001E9A  FFFF               	dw	65535	; assembler added errata NOP
  2200  001E9C                     
  2201                           ; BSR set to: 0
  2202                           ;main.c: 282:     print_string("Please give the new sequence as input\r");
  2203  001E9C  0EDC               	movlw	low STR_6
  2204  001E9E  6E09               	movwf	print_string@strng^0,c
  2205  001EA0  0E7E               	movlw	high STR_6
  2206  001EA2  6E0A               	movwf	(print_string@strng+1)^0,c
  2207  001EA4  EC26  F014         	call	_print_string	;wreg free
  2208  001EA8                     
  2209                           ;main.c: 285:     int i = 0;
  2210  001EA8  0E00               	movlw	0
  2211  001EAA  0100               	movlb	0	; () banked
  2212  001EAC  6FC5               	movwf	(change_sequence@i+1)& (0+255),b
  2213  001EAE  0E00               	movlw	0
  2214  001EB0  6FC4               	movwf	change_sequence@i& (0+255),b
  2215  001EB2                     l4423:
  2216  001EB2  FFFF               	dw	65535	; assembler added errata NOP
  2217                           
  2218                           ;main.c: 287:         if(New_char_RX){
  2219  001EB4  5071               	movf	_New_char_RX^0,w,c
  2220  001EB6  B4D8               	btfsc	status,2,c
  2221  001EB8  EF60  F00F         	goto	u4771
  2222  001EBC  EF63  F00F         	goto	u4770
  2223  001EC0                     u4771:
  2224  001EC0  FFFF               	dw	65535	; assembler added errata NOP
  2225  001EC2  EF59  F00F         	goto	l4423
  2226  001EC6                     u4770:
  2227  001EC6  FFFF               	dw	65535	; assembler added errata NOP
  2228  001EC8                     
  2229                           ;main.c: 288:             print_string("\nThe New sequence is: ");
  2230  001EC8  0ECB               	movlw	low STR_7
  2231  001ECA  6E09               	movwf	print_string@strng^0,c
  2232  001ECC  0E7F               	movlw	high STR_7
  2233  001ECE  6E0A               	movwf	(print_string@strng+1)^0,c
  2234  001ED0  EC26  F014         	call	_print_string	;wreg free
  2235  001ED4                     l4427:
  2236  001ED4  FFFF               	dw	65535	; assembler added errata NOP
  2237                           
  2238                           ;main.c: 290:                 sequence[i]=input_str[i];
  2239  001ED6  0E76               	movlw	low _input_str
  2240  001ED8  0100               	movlb	0	; () banked
  2241  001EDA  25C4               	addwf	change_sequence@i& (0+255),w,b
  2242  001EDC  6ED9               	movwf	fsr2l,c
  2243  001EDE  0E00               	movlw	high _input_str
  2244  001EE0  21C5               	addwfc	(change_sequence@i+1)& (0+255),w,b
  2245  001EE2  6EDA               	movwf	fsr2h,c
  2246  001EE4  0E72               	movlw	low _sequence
  2247  001EE6  25C4               	addwf	change_sequence@i& (0+255),w,b
  2248  001EE8  6EE1               	movwf	fsr1l,c
  2249  001EEA  0E00               	movlw	high _sequence
  2250  001EEC  21C5               	addwfc	(change_sequence@i+1)& (0+255),w,b
  2251  001EEE  6EE2               	movwf	fsr1h,c
  2252  001EF0  CFDF FFE7          	movff	indf2,indf1
  2253  001EF4                     
  2254                           ; BSR set to: 0
  2255                           ;main.c: 291:                 serial_tx_char(sequence[i]);
  2256  001EF4  0E72               	movlw	low _sequence
  2257  001EF6  25C4               	addwf	change_sequence@i& (0+255),w,b
  2258  001EF8  6ED9               	movwf	fsr2l,c
  2259  001EFA  0E00               	movlw	high _sequence
  2260  001EFC  21C5               	addwfc	(change_sequence@i+1)& (0+255),w,b
  2261  001EFE  6EDA               	movwf	fsr2h,c
  2262  001F00  50DF               	movf	indf2,w,c
  2263  001F02  ECC4  F016         	call	_serial_tx_char
  2264  001F06                     
  2265                           ;main.c: 292:             }while(input_str[i++]!='\n');
  2266  001F06  0100               	movlb	0	; () banked
  2267  001F08  51C4               	movf	change_sequence@i& (0+255),w,b
  2268  001F0A  6E52               	movwf	??_change_sequence^0,c
  2269  001F0C  51C5               	movf	(change_sequence@i+1)& (0+255),w,b
  2270  001F0E  6E53               	movwf	(??_change_sequence+1)^0,c
  2271  001F10  4BC4               	infsnz	change_sequence@i& (0+255),f,b
  2272  001F12  2BC5               	incf	(change_sequence@i+1)& (0+255),f,b
  2273  001F14  0E76               	movlw	low _input_str
  2274  001F16  2452               	addwf	??_change_sequence^0,w,c
  2275  001F18  6ED9               	movwf	fsr2l,c
  2276  001F1A  0E00               	movlw	high _input_str
  2277  001F1C  2053               	addwfc	(??_change_sequence+1)^0,w,c
  2278  001F1E  6EDA               	movwf	fsr2h,c
  2279  001F20  0E0A               	movlw	10
  2280  001F22  18DE               	xorwf	postinc2,w,c
  2281  001F24  A4D8               	btfss	status,2,c
  2282  001F26  EF97  F00F         	goto	u4781
  2283  001F2A  EF9A  F00F         	goto	u4780
  2284  001F2E                     u4781:
  2285  001F2E  FFFF               	dw	65535	; assembler added errata NOP
  2286  001F30  EF6A  F00F         	goto	l4427
  2287  001F34                     u4780:
  2288  001F34  FFFF               	dw	65535	; assembler added errata NOP
  2289  001F36                     
  2290                           ; BSR set to: 0
  2291                           ;main.c: 293:             New_char_RX=0;
  2292  001F36  0E00               	movlw	0
  2293  001F38  6E71               	movwf	_New_char_RX^0,c
  2294                           
  2295                           ;main.c: 294:             break;
  2296  001F3A  EFC5  F00F         	goto	l4441
  2297  001F3E                     l4435:
  2298  001F3E  FFFF               	dw	65535	; assembler added errata NOP
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;main.c: 299:         int i =0;
  2302  001F40  0E00               	movlw	0
  2303  001F42  6FC3               	movwf	(change_sequence@i_550+1)& (0+255),b
  2304  001F44  0E00               	movlw	0
  2305  001F46  6FC2               	movwf	change_sequence@i_550& (0+255),b
  2306  001F48                     l4437:
  2307  001F48  FFFF               	dw	65535	; assembler added errata NOP
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;main.c: 301:             pick_and_place(sequence[i]);
  2311  001F4A  0E72               	movlw	low _sequence
  2312  001F4C  25C2               	addwf	change_sequence@i_550& (0+255),w,b
  2313  001F4E  6ED9               	movwf	fsr2l,c
  2314  001F50  0E00               	movlw	high _sequence
  2315  001F52  21C3               	addwfc	(change_sequence@i_550+1)& (0+255),w,b
  2316  001F54  6EDA               	movwf	fsr2h,c
  2317  001F56  50DF               	movf	indf2,w,c
  2318  001F58  EC17  F003         	call	_pick_and_place
  2319  001F5C                     
  2320                           ;main.c: 302:         }while(sequence[i++]!='\n');
  2321  001F5C  0100               	movlb	0	; () banked
  2322  001F5E  51C2               	movf	change_sequence@i_550& (0+255),w,b
  2323  001F60  6E52               	movwf	??_change_sequence^0,c
  2324  001F62  51C3               	movf	(change_sequence@i_550+1)& (0+255),w,b
  2325  001F64  6E53               	movwf	(??_change_sequence+1)^0,c
  2326  001F66  4BC2               	infsnz	change_sequence@i_550& (0+255),f,b
  2327  001F68  2BC3               	incf	(change_sequence@i_550+1)& (0+255),f,b
  2328  001F6A  0E72               	movlw	low _sequence
  2329  001F6C  2452               	addwf	??_change_sequence^0,w,c
  2330  001F6E  6ED9               	movwf	fsr2l,c
  2331  001F70  0E00               	movlw	high _sequence
  2332  001F72  2053               	addwfc	(??_change_sequence+1)^0,w,c
  2333  001F74  6EDA               	movwf	fsr2h,c
  2334  001F76  0E0A               	movlw	10
  2335  001F78  18DE               	xorwf	postinc2,w,c
  2336  001F7A  A4D8               	btfss	status,2,c
  2337  001F7C  EFC2  F00F         	goto	u4791
  2338  001F80  EFC5  F00F         	goto	u4790
  2339  001F84                     u4791:
  2340  001F84  FFFF               	dw	65535	; assembler added errata NOP
  2341  001F86  EFA4  F00F         	goto	l4437
  2342  001F8A                     u4790:
  2343  001F8A                     l4441:
  2344  001F8A  FFFF               	dw	65535	; assembler added errata NOP
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;main.c: 298:     while(!New_char_RX){
  2348  001F8C  5071               	movf	_New_char_RX^0,w,c
  2349  001F8E  B4D8               	btfsc	status,2,c
  2350  001F90  EFCC  F00F         	goto	u4801
  2351  001F94  EFCF  F00F         	goto	u4800
  2352  001F98                     u4801:
  2353  001F98  FFFF               	dw	65535	; assembler added errata NOP
  2354  001F9A  EF9F  F00F         	goto	l4435
  2355  001F9E                     u4800:
  2356  001F9E  FFFF               	dw	65535	; assembler added errata NOP
  2357  001FA0                     
  2358                           ; BSR set to: 0
  2359  001FA0  0012               	return		;funcret
  2360  001FA2  FFFF               	dw	65535	; errata NOP
  2361  001FA4                     __end_of_change_sequence:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function _add_component *****************
  2365 ;; Defined at:
  2366 ;;		line 307 in file "main.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  i               2   86[COMRAM] int 
  2371 ;;  add_to_seque    2   84[COMRAM] unsigned char [2]
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2381 ;;      Params:         0       0       0       0       0       0       0
  2382 ;;      Locals:         4       0       0       0       0       0       0
  2383 ;;      Temps:          3       0       0       0       0       0       0
  2384 ;;      Totals:         7       0       0       0       0       0       0
  2385 ;;Total ram usage:        7 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 5
  2388 ;; This function calls:
  2389 ;;		_atoi
  2390 ;;		_pick_and_place
  2391 ;;		_print_string
  2392 ;;		_strncat
  2393 ;; This function is called by:
  2394 ;;		_start_up_menu
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text7
  2399  00188A                     __ptext7:
  2400                           	callstack 0
  2401  00188A                     _add_component:
  2402                           	callstack 0
  2403  00188A  FFFF               	dw	65535	; assembler added errata NOP
  2404  00188C                     
  2405                           ;main.c: 308:     print_string("\nEnter the pick position X:");
  2406  00188C  0E78               	movlw	low STR_8
  2407  00188E  6E09               	movwf	print_string@strng^0,c
  2408  001890  0E7F               	movlw	high STR_8
  2409  001892  6E0A               	movwf	(print_string@strng+1)^0,c
  2410  001894  EC26  F014         	call	_print_string	;wreg free
  2411  001898                     l4445:
  2412  001898  FFFF               	dw	65535	; assembler added errata NOP
  2413  00189A  5071               	movf	_New_char_RX^0,w,c
  2414  00189C  B4D8               	btfsc	status,2,c
  2415  00189E  EF53  F00C         	goto	u4811
  2416  0018A2  EF56  F00C         	goto	u4810
  2417  0018A6                     u4811:
  2418  0018A6  FFFF               	dw	65535	; assembler added errata NOP
  2419  0018A8  EF4C  F00C         	goto	l4445
  2420  0018AC                     u4810:
  2421  0018AC  FFFF               	dw	65535	; assembler added errata NOP
  2422  0018AE  0E76               	movlw	low _input_str
  2423  0018B0  6E0F               	movwf	atoi@s^0,c
  2424  0018B2  0E00               	movlw	high _input_str
  2425  0018B4  6E10               	movwf	(atoi@s+1)^0,c
  2426  0018B6  EC42  F00E         	call	_atoi	;wreg free
  2427  0018BA  C00F  F059         	movff	?_atoi,_X_Pick_D
  2428  0018BE  C010  F05A         	movff	?_atoi+1,_X_Pick_D+1
  2429  0018C2  0E00               	movlw	0
  2430  0018C4  6E71               	movwf	_New_char_RX^0,c
  2431  0018C6                     
  2432                           ;main.c: 310:     print_string("\nEnter the pick position Y:");
  2433  0018C6  0E94               	movlw	low STR_9
  2434  0018C8  6E09               	movwf	print_string@strng^0,c
  2435  0018CA  0E7F               	movlw	high STR_9
  2436  0018CC  6E0A               	movwf	(print_string@strng+1)^0,c
  2437  0018CE  EC26  F014         	call	_print_string	;wreg free
  2438  0018D2                     l4453:
  2439  0018D2  FFFF               	dw	65535	; assembler added errata NOP
  2440  0018D4  5071               	movf	_New_char_RX^0,w,c
  2441  0018D6  B4D8               	btfsc	status,2,c
  2442  0018D8  EF70  F00C         	goto	u4821
  2443  0018DC  EF73  F00C         	goto	u4820
  2444  0018E0                     u4821:
  2445  0018E0  FFFF               	dw	65535	; assembler added errata NOP
  2446  0018E2  EF69  F00C         	goto	l4453
  2447  0018E6                     u4820:
  2448  0018E6  FFFF               	dw	65535	; assembler added errata NOP
  2449  0018E8  0E76               	movlw	low _input_str
  2450  0018EA  6E0F               	movwf	atoi@s^0,c
  2451  0018EC  0E00               	movlw	high _input_str
  2452  0018EE  6E10               	movwf	(atoi@s+1)^0,c
  2453  0018F0  EC42  F00E         	call	_atoi	;wreg free
  2454  0018F4  C00F  F0AC         	movff	?_atoi,_Y_Pick_D
  2455  0018F8  C010  F0AD         	movff	?_atoi+1,_Y_Pick_D+1
  2456  0018FC  0E00               	movlw	0
  2457  0018FE  6E71               	movwf	_New_char_RX^0,c
  2458  001900                     
  2459                           ;main.c: 312:     print_string("\nEnter the pick orientation:");
  2460  001900  0E5B               	movlw	low STR_10
  2461  001902  6E09               	movwf	print_string@strng^0,c
  2462  001904  0E7F               	movlw	high STR_10
  2463  001906  6E0A               	movwf	(print_string@strng+1)^0,c
  2464  001908  EC26  F014         	call	_print_string	;wreg free
  2465  00190C                     l4461:
  2466  00190C  FFFF               	dw	65535	; assembler added errata NOP
  2467  00190E  5071               	movf	_New_char_RX^0,w,c
  2468  001910  B4D8               	btfsc	status,2,c
  2469  001912  EF8D  F00C         	goto	u4831
  2470  001916  EF90  F00C         	goto	u4830
  2471  00191A                     u4831:
  2472  00191A  FFFF               	dw	65535	; assembler added errata NOP
  2473  00191C  EF86  F00C         	goto	l4461
  2474  001920                     u4830:
  2475  001920  FFFF               	dw	65535	; assembler added errata NOP
  2476  001922  0E76               	movlw	low _input_str
  2477  001924  6E0F               	movwf	atoi@s^0,c
  2478  001926  0E00               	movlw	high _input_str
  2479  001928  6E10               	movwf	(atoi@s+1)^0,c
  2480  00192A  EC42  F00E         	call	_atoi	;wreg free
  2481  00192E  C00F  F0AA         	movff	?_atoi,_Pick_Angle_D
  2482  001932  C010  F0AB         	movff	?_atoi+1,_Pick_Angle_D+1
  2483  001936  0E00               	movlw	0
  2484  001938  6E71               	movwf	_New_char_RX^0,c
  2485  00193A                     
  2486                           ;main.c: 314:     print_string("\nEnter the place position X:");
  2487  00193A  0E21               	movlw	low STR_11
  2488  00193C  6E09               	movwf	print_string@strng^0,c
  2489  00193E  0E7F               	movlw	high STR_11
  2490  001940  6E0A               	movwf	(print_string@strng+1)^0,c
  2491  001942  EC26  F014         	call	_print_string	;wreg free
  2492  001946                     l4469:
  2493  001946  FFFF               	dw	65535	; assembler added errata NOP
  2494  001948  5071               	movf	_New_char_RX^0,w,c
  2495  00194A  B4D8               	btfsc	status,2,c
  2496  00194C  EFAA  F00C         	goto	u4841
  2497  001950  EFAD  F00C         	goto	u4840
  2498  001954                     u4841:
  2499  001954  FFFF               	dw	65535	; assembler added errata NOP
  2500  001956  EFA3  F00C         	goto	l4469
  2501  00195A                     u4840:
  2502  00195A  FFFF               	dw	65535	; assembler added errata NOP
  2503  00195C  0E76               	movlw	low _input_str
  2504  00195E  6E0F               	movwf	atoi@s^0,c
  2505  001960  0E00               	movlw	high _input_str
  2506  001962  6E10               	movwf	(atoi@s+1)^0,c
  2507  001964  EC42  F00E         	call	_atoi	;wreg free
  2508  001968  C00F  F0A8         	movff	?_atoi,_X_Place_D
  2509  00196C  C010  F0A9         	movff	?_atoi+1,_X_Place_D+1
  2510  001970  0E00               	movlw	0
  2511  001972  6E71               	movwf	_New_char_RX^0,c
  2512  001974                     
  2513                           ;main.c: 316:     print_string("\nEnter the place position Y:");
  2514  001974  0E3E               	movlw	low STR_12
  2515  001976  6E09               	movwf	print_string@strng^0,c
  2516  001978  0E7F               	movlw	high STR_12
  2517  00197A  6E0A               	movwf	(print_string@strng+1)^0,c
  2518  00197C  EC26  F014         	call	_print_string	;wreg free
  2519  001980                     l4477:
  2520  001980  FFFF               	dw	65535	; assembler added errata NOP
  2521  001982  5071               	movf	_New_char_RX^0,w,c
  2522  001984  B4D8               	btfsc	status,2,c
  2523  001986  EFC7  F00C         	goto	u4851
  2524  00198A  EFCA  F00C         	goto	u4850
  2525  00198E                     u4851:
  2526  00198E  FFFF               	dw	65535	; assembler added errata NOP
  2527  001990  EFC0  F00C         	goto	l4477
  2528  001994                     u4850:
  2529  001994  FFFF               	dw	65535	; assembler added errata NOP
  2530  001996  0E76               	movlw	low _input_str
  2531  001998  6E0F               	movwf	atoi@s^0,c
  2532  00199A  0E00               	movlw	high _input_str
  2533  00199C  6E10               	movwf	(atoi@s+1)^0,c
  2534  00199E  EC42  F00E         	call	_atoi	;wreg free
  2535  0019A2  C00F  F0A6         	movff	?_atoi,_Y_Place_D
  2536  0019A6  C010  F0A7         	movff	?_atoi+1,_Y_Place_D+1
  2537  0019AA  0E00               	movlw	0
  2538  0019AC  6E71               	movwf	_New_char_RX^0,c
  2539  0019AE                     
  2540                           ;main.c: 318:     print_string("\nEnter the place orientation:");
  2541  0019AE  0E03               	movlw	low STR_13
  2542  0019B0  6E09               	movwf	print_string@strng^0,c
  2543  0019B2  0E7F               	movlw	high STR_13
  2544  0019B4  6E0A               	movwf	(print_string@strng+1)^0,c
  2545  0019B6  EC26  F014         	call	_print_string	;wreg free
  2546  0019BA                     l4485:
  2547  0019BA  FFFF               	dw	65535	; assembler added errata NOP
  2548  0019BC  5071               	movf	_New_char_RX^0,w,c
  2549  0019BE  B4D8               	btfsc	status,2,c
  2550  0019C0  EFE4  F00C         	goto	u4861
  2551  0019C4  EFE7  F00C         	goto	u4860
  2552  0019C8                     u4861:
  2553  0019C8  FFFF               	dw	65535	; assembler added errata NOP
  2554  0019CA  EFDD  F00C         	goto	l4485
  2555  0019CE                     u4860:
  2556  0019CE  FFFF               	dw	65535	; assembler added errata NOP
  2557  0019D0  0E76               	movlw	low _input_str
  2558  0019D2  6E0F               	movwf	atoi@s^0,c
  2559  0019D4  0E00               	movlw	high _input_str
  2560  0019D6  6E10               	movwf	(atoi@s+1)^0,c
  2561  0019D8  EC42  F00E         	call	_atoi	;wreg free
  2562  0019DC  C00F  F0A4         	movff	?_atoi,_Place_Angle_D
  2563  0019E0  C010  F0A5         	movff	?_atoi+1,_Place_Angle_D+1
  2564  0019E4  0E00               	movlw	0
  2565  0019E6  6E71               	movwf	_New_char_RX^0,c
  2566  0019E8                     
  2567                           ;main.c: 320:     char add_to_sequence[]="D";
  2568  0019E8  C0BC  F055         	movff	add_component@F3129,add_component@add_to_sequence
  2569  0019EC  C0BD  F056         	movff	add_component@F3129+1,add_component@add_to_sequence+1
  2570  0019F0                     
  2571                           ;main.c: 321:     strncat(sequence, add_to_sequence,1);
  2572  0019F0  0E72               	movlw	low _sequence
  2573  0019F2  6E0C               	movwf	strncat@d^0,c
  2574  0019F4  0E00               	movlw	high _sequence
  2575  0019F6  6E0D               	movwf	(strncat@d+1)^0,c
  2576  0019F8  0E55               	movlw	low add_component@add_to_sequence
  2577  0019FA  6E0E               	movwf	strncat@s^0,c
  2578  0019FC  0E00               	movlw	high add_component@add_to_sequence
  2579  0019FE  6E0F               	movwf	(strncat@s+1)^0,c
  2580  001A00  0E00               	movlw	0
  2581  001A02  6E11               	movwf	(strncat@n+1)^0,c
  2582  001A04  0E01               	movlw	1
  2583  001A06  6E10               	movwf	strncat@n^0,c
  2584  001A08  EC6D  F014         	call	_strncat	;wreg free
  2585  001A0C                     
  2586                           ;main.c: 322:     print_string("\nThe current sequence is: ");
  2587  001A0C  0EB0               	movlw	low STR_14
  2588  001A0E  6E09               	movwf	print_string@strng^0,c
  2589  001A10  0E7F               	movlw	high STR_14
  2590  001A12  6E0A               	movwf	(print_string@strng+1)^0,c
  2591  001A14  EC26  F014         	call	_print_string	;wreg free
  2592  001A18                     
  2593                           ;main.c: 323:     print_string(sequence);
  2594  001A18  0E72               	movlw	low _sequence
  2595  001A1A  6E09               	movwf	print_string@strng^0,c
  2596  001A1C  0E00               	movlw	high _sequence
  2597  001A1E  6E0A               	movwf	(print_string@strng+1)^0,c
  2598  001A20  EC26  F014         	call	_print_string	;wreg free
  2599                           
  2600                           ;main.c: 325:     while(!New_char_RX){
  2601  001A24  EF39  F00D         	goto	l4503
  2602  001A28                     l4497:
  2603  001A28  FFFF               	dw	65535	; assembler added errata NOP
  2604                           
  2605                           ;main.c: 326:         int i =0;
  2606  001A2A  0E00               	movlw	0
  2607  001A2C  6E58               	movwf	(add_component@i+1)^0,c
  2608  001A2E  0E00               	movlw	0
  2609  001A30  6E57               	movwf	add_component@i^0,c
  2610  001A32                     l4499:
  2611  001A32  FFFF               	dw	65535	; assembler added errata NOP
  2612                           
  2613                           ;main.c: 329:             pick_and_place(sequence[i]);
  2614  001A34  0E72               	movlw	low _sequence
  2615  001A36  2457               	addwf	add_component@i^0,w,c
  2616  001A38  6ED9               	movwf	fsr2l,c
  2617  001A3A  0E00               	movlw	high _sequence
  2618  001A3C  2058               	addwfc	(add_component@i+1)^0,w,c
  2619  001A3E  6EDA               	movwf	fsr2h,c
  2620  001A40  50DF               	movf	indf2,w,c
  2621  001A42  EC17  F003         	call	_pick_and_place
  2622  001A46                     
  2623                           ;main.c: 331:         }while(sequence[i++]!='\n');
  2624  001A46  5057               	movf	add_component@i^0,w,c
  2625  001A48  6E52               	movwf	??_add_component^0,c
  2626  001A4A  5058               	movf	(add_component@i+1)^0,w,c
  2627  001A4C  6E53               	movwf	(??_add_component+1)^0,c
  2628  001A4E  4A57               	infsnz	add_component@i^0,f,c
  2629  001A50  2A58               	incf	(add_component@i+1)^0,f,c
  2630  001A52  0E72               	movlw	low _sequence
  2631  001A54  2452               	addwf	??_add_component^0,w,c
  2632  001A56  6ED9               	movwf	fsr2l,c
  2633  001A58  0E00               	movlw	high _sequence
  2634  001A5A  2053               	addwfc	(??_add_component+1)^0,w,c
  2635  001A5C  6EDA               	movwf	fsr2h,c
  2636  001A5E  0E0A               	movlw	10
  2637  001A60  18DE               	xorwf	postinc2,w,c
  2638  001A62  A4D8               	btfss	status,2,c
  2639  001A64  EF36  F00D         	goto	u4871
  2640  001A68  EF39  F00D         	goto	u4870
  2641  001A6C                     u4871:
  2642  001A6C  FFFF               	dw	65535	; assembler added errata NOP
  2643  001A6E  EF19  F00D         	goto	l4499
  2644  001A72                     u4870:
  2645  001A72                     l4503:
  2646  001A72  FFFF               	dw	65535	; assembler added errata NOP
  2647                           
  2648                           ;main.c: 325:     while(!New_char_RX){
  2649  001A74  5071               	movf	_New_char_RX^0,w,c
  2650  001A76  B4D8               	btfsc	status,2,c
  2651  001A78  EF40  F00D         	goto	u4881
  2652  001A7C  EF43  F00D         	goto	u4880
  2653  001A80                     u4881:
  2654  001A80  FFFF               	dw	65535	; assembler added errata NOP
  2655  001A82  EF14  F00D         	goto	l4497
  2656  001A86                     u4880:
  2657  001A86  FFFF               	dw	65535	; assembler added errata NOP
  2658  001A88  0012               	return		;funcret
  2659  001A8A  FFFF               	dw	65535	; errata NOP
  2660  001A8C                     __end_of_add_component:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function _strncat *****************
  2664 ;; Defined at:
  2665 ;;		line 3 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strncat.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  d               2   11[COMRAM] PTR unsigned char 
  2668 ;;		 -> sequence(4), 
  2669 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2670 ;;		 -> add_component@add_to_sequence(2), 
  2671 ;;  n               2   15[COMRAM] unsigned int 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  a               2    0        PTR unsigned char 
  2674 ;;		 -> sequence(4), 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  2   11[COMRAM] PTR unsigned char 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2684 ;;      Params:         6       0       0       0       0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0
  2687 ;;      Totals:         6       0       0       0       0       0       0
  2688 ;;Total ram usage:        6 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; Hardware stack levels required when called: 2
  2691 ;; This function calls:
  2692 ;;		_strlen
  2693 ;; This function is called by:
  2694 ;;		_add_component
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text8
  2699  0028DA                     __ptext8:
  2700                           	callstack 0
  2701  0028DA                     _strncat:
  2702                           	callstack 0
  2703  0028DA  FFFF               	dw	65535	; assembler added errata NOP
  2704  0028DC  C00C  F008         	movff	strncat@d,strlen@s
  2705  0028E0  C00D  F009         	movff	strncat@d+1,strlen@s+1
  2706  0028E4  ECDE  F015         	call	_strlen	;wreg free
  2707  0028E8  5008               	movf	?_strlen^0,w,c
  2708  0028EA  260C               	addwf	strncat@d^0,f,c
  2709  0028EC  5009               	movf	(?_strlen+1)^0,w,c
  2710  0028EE  220D               	addwfc	(strncat@d+1)^0,f,c
  2711  0028F0  EF8C  F014         	goto	l4343
  2712  0028F4                     l4335:
  2713  0028F4  FFFF               	dw	65535	; assembler added errata NOP
  2714  0028F6  0610               	decf	strncat@n^0,f,c
  2715  0028F8  A0D8               	btfss	status,0,c
  2716  0028FA  0611               	decf	(strncat@n+1)^0,f,c
  2717  0028FC  C00E  FFD9         	movff	strncat@s,fsr2l
  2718  002900  C00F  FFDA         	movff	strncat@s+1,fsr2h
  2719  002904  C00C  FFE1         	movff	strncat@d,fsr1l
  2720  002908  C00D  FFE2         	movff	strncat@d+1,fsr1h
  2721  00290C  CFDF FFE7          	movff	indf2,indf1
  2722  002910  4A0E               	infsnz	strncat@s^0,f,c
  2723  002912  2A0F               	incf	(strncat@s+1)^0,f,c
  2724  002914  4A0C               	infsnz	strncat@d^0,f,c
  2725  002916  2A0D               	incf	(strncat@d+1)^0,f,c
  2726  002918                     l4343:
  2727  002918  FFFF               	dw	65535	; assembler added errata NOP
  2728  00291A  5010               	movf	strncat@n^0,w,c
  2729  00291C  1011               	iorwf	(strncat@n+1)^0,w,c
  2730  00291E  B4D8               	btfsc	status,2,c
  2731  002920  EF94  F014         	goto	u4601
  2732  002924  EF97  F014         	goto	u4600
  2733  002928                     u4601:
  2734  002928  FFFF               	dw	65535	; assembler added errata NOP
  2735  00292A  EFA5  F014         	goto	l4347
  2736  00292E                     u4600:
  2737  00292E  FFFF               	dw	65535	; assembler added errata NOP
  2738  002930  C00E  FFD9         	movff	strncat@s,fsr2l
  2739  002934  C00F  FFDA         	movff	strncat@s+1,fsr2h
  2740  002938  50DF               	movf	indf2,w,c
  2741  00293A  A4D8               	btfss	status,2,c
  2742  00293C  EFA2  F014         	goto	u4611
  2743  002940  EFA5  F014         	goto	u4610
  2744  002944                     u4611:
  2745  002944  FFFF               	dw	65535	; assembler added errata NOP
  2746  002946  EF7A  F014         	goto	l4335
  2747  00294A                     u4610:
  2748  00294A                     l4347:
  2749  00294A  FFFF               	dw	65535	; assembler added errata NOP
  2750  00294C  C00C  FFD9         	movff	strncat@d,fsr2l
  2751  002950  C00D  FFDA         	movff	strncat@d+1,fsr2h
  2752  002954  0E00               	movlw	0
  2753  002956  6EDF               	movwf	indf2,c
  2754  002958  4A0C               	infsnz	strncat@d^0,f,c
  2755  00295A  2A0D               	incf	(strncat@d+1)^0,f,c
  2756  00295C  0012               	return		;funcret
  2757  00295E  FFFF               	dw	65535	; errata NOP
  2758  002960                     __end_of_strncat:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _strlen *****************
  2762 ;; Defined at:
  2763 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2766 ;;		 -> sequence(4), 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  a               2    9[COMRAM] PTR const unsigned char 
  2769 ;;		 -> sequence(4), 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  2    7[COMRAM] unsigned int 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2779 ;;      Params:         2       0       0       0       0       0       0
  2780 ;;      Locals:         2       0       0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0
  2782 ;;      Totals:         4       0       0       0       0       0       0
  2783 ;;Total ram usage:        4 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_remove_component
  2790 ;;		_strncat
  2791 ;;		_strrchr
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text9
  2796  002BBC                     __ptext9:
  2797                           	callstack 0
  2798  002BBC                     _strlen:
  2799                           	callstack 0
  2800  002BBC  FFFF               	dw	65535	; assembler added errata NOP
  2801  002BBE  C008  F00A         	movff	strlen@s,strlen@a
  2802  002BC2  C009  F00B         	movff	strlen@s+1,strlen@a+1
  2803  002BC6  EFE8  F015         	goto	l3795
  2804  002BCA                     l3793:
  2805  002BCA  FFFF               	dw	65535	; assembler added errata NOP
  2806  002BCC  4A08               	infsnz	strlen@s^0,f,c
  2807  002BCE  2A09               	incf	(strlen@s+1)^0,f,c
  2808  002BD0                     l3795:
  2809  002BD0  FFFF               	dw	65535	; assembler added errata NOP
  2810  002BD2  C008  FFD9         	movff	strlen@s,fsr2l
  2811  002BD6  C009  FFDA         	movff	strlen@s+1,fsr2h
  2812  002BDA  50DF               	movf	indf2,w,c
  2813  002BDC  A4D8               	btfss	status,2,c
  2814  002BDE  EFF3  F015         	goto	u3821
  2815  002BE2  EFF6  F015         	goto	u3820
  2816  002BE6                     u3821:
  2817  002BE6  FFFF               	dw	65535	; assembler added errata NOP
  2818  002BE8  EFE5  F015         	goto	l3793
  2819  002BEC                     u3820:
  2820  002BEC  FFFF               	dw	65535	; assembler added errata NOP
  2821  002BEE  500A               	movf	strlen@a^0,w,c
  2822  002BF0  5C08               	subwf	strlen@s^0,w,c
  2823  002BF2  6E08               	movwf	?_strlen^0,c
  2824  002BF4  500B               	movf	(strlen@a+1)^0,w,c
  2825  002BF6  5809               	subwfb	(strlen@s+1)^0,w,c
  2826  002BF8  6E09               	movwf	(?_strlen+1)^0,c
  2827  002BFA  0012               	return		;funcret
  2828  002BFC  FFFF               	dw	65535	; errata NOP
  2829  002BFE                     __end_of_strlen:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _print_string *****************
  2833 ;; Defined at:
  2834 ;;		line 373 in file "main.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  strng           2    8[COMRAM] PTR unsigned char 
  2837 ;;		 -> STR_17(23), STR_16(69), STR_15(63), STR_14(27), 
  2838 ;;		 -> STR_13(30), STR_12(29), STR_11(29), STR_10(29), 
  2839 ;;		 -> STR_9(28), STR_8(28), STR_7(23), STR_6(39), 
  2840 ;;		 -> STR_5(26), sequence(4), STR_1(83), 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  i               2   12[COMRAM] int 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2852 ;;      Params:         2       0       0       0       0       0       0
  2853 ;;      Locals:         2       0       0       0       0       0       0
  2854 ;;      Temps:          2       0       0       0       0       0       0
  2855 ;;      Totals:         6       0       0       0       0       0       0
  2856 ;;Total ram usage:        6 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 2
  2859 ;; This function calls:
  2860 ;;		_serial_tx_char
  2861 ;; This function is called by:
  2862 ;;		_start_up_menu
  2863 ;;		_change_sequence
  2864 ;;		_add_component
  2865 ;;		_remove_component
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text10
  2870  00284C                     __ptext10:
  2871                           	callstack 0
  2872  00284C                     _print_string:
  2873                           	callstack 0
  2874  00284C  FFFF               	dw	65535	; assembler added errata NOP
  2875  00284E                     
  2876                           ;main.c: 374:     for(int i =0; strng[i]!='\0'; i++){
  2877  00284E  0E00               	movlw	0
  2878  002850  6E0E               	movwf	(print_string@i+1)^0,c
  2879  002852  0E00               	movlw	0
  2880  002854  6E0D               	movwf	print_string@i^0,c
  2881  002856  EF49  F014         	goto	l4195
  2882  00285A                     l4191:
  2883  00285A  FFFF               	dw	65535	; assembler added errata NOP
  2884                           
  2885                           ;main.c: 375:         serial_tx_char(strng[i]);
  2886  00285C  500D               	movf	print_string@i^0,w,c
  2887  00285E  2409               	addwf	print_string@strng^0,w,c
  2888  002860  6E0B               	movwf	??_print_string^0,c
  2889  002862  500E               	movf	(print_string@i+1)^0,w,c
  2890  002864  200A               	addwfc	(print_string@strng+1)^0,w,c
  2891  002866  6E0C               	movwf	(??_print_string+1)^0,c
  2892  002868  C00B  FFF6         	movff	??_print_string,tblptrl
  2893  00286C  C00C  FFF7         	movff	??_print_string+1,tblptrh
  2894  002870  6AF8               	clrf	tblptru,c
  2895  002872  0E05               	movlw	(high __ramtop+-1)
  2896  002874  64F7               	cpfsgt	tblptrh,c
  2897  002876  D004               	bra	u4367
  2898  002878  0008               	tblrd		*
  2899  00287A  FFFF               	dw	65535	; errata NOP
  2900  00287C  50F5               	movf	tablat,w,c
  2901  00287E  D005               	bra	u4360
  2902  002880                     u4367:
  2903  002880  CFF6 FFE1          	movff	tblptrl,fsr1l
  2904  002884  CFF7 FFE2          	movff	tblptrh,fsr1h
  2905  002888  50E7               	movf	indf1,w,c
  2906  00288A                     u4360:
  2907  00288A  ECC4  F016         	call	_serial_tx_char
  2908  00288E                     
  2909                           ;main.c: 376:     }
  2910  00288E  4A0D               	infsnz	print_string@i^0,f,c
  2911  002890  2A0E               	incf	(print_string@i+1)^0,f,c
  2912  002892                     l4195:
  2913  002892  FFFF               	dw	65535	; assembler added errata NOP
  2914  002894  500D               	movf	print_string@i^0,w,c
  2915  002896  2409               	addwf	print_string@strng^0,w,c
  2916  002898  6E0B               	movwf	??_print_string^0,c
  2917  00289A  500E               	movf	(print_string@i+1)^0,w,c
  2918  00289C  200A               	addwfc	(print_string@strng+1)^0,w,c
  2919  00289E  6E0C               	movwf	(??_print_string+1)^0,c
  2920  0028A0  C00B  FFF6         	movff	??_print_string,tblptrl
  2921  0028A4  C00C  FFF7         	movff	??_print_string+1,tblptrh
  2922  0028A8  6AF8               	clrf	tblptru,c
  2923  0028AA  0E05               	movlw	(high __ramtop+-1)
  2924  0028AC  64F7               	cpfsgt	tblptrh,c
  2925  0028AE  D004               	bra	u4377
  2926  0028B0  0008               	tblrd		*
  2927  0028B2  FFFF               	dw	65535	; errata NOP
  2928  0028B4  50F5               	movf	tablat,w,c
  2929  0028B6  D005               	bra	u4370
  2930  0028B8                     u4377:
  2931  0028B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  2932  0028BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  2933  0028C0  50E7               	movf	indf1,w,c
  2934  0028C2                     u4370:
  2935  0028C2  0900               	iorlw	0
  2936  0028C4  A4D8               	btfss	status,2,c
  2937  0028C6  EF67  F014         	goto	u4381
  2938  0028CA  EF6A  F014         	goto	u4380
  2939  0028CE                     u4381:
  2940  0028CE  FFFF               	dw	65535	; assembler added errata NOP
  2941  0028D0  EF2D  F014         	goto	l4191
  2942  0028D4                     u4380:
  2943  0028D4  FFFF               	dw	65535	; assembler added errata NOP
  2944  0028D6  0012               	return		;funcret
  2945  0028D8  FFFF               	dw	65535	; errata NOP
  2946  0028DA                     __end_of_print_string:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _serial_tx_char *****************
  2950 ;; Defined at:
  2951 ;;		line 44 in file "serial_rs232.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  val             1    wreg     unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  val             1    7[COMRAM] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2965 ;;      Params:         0       0       0       0       0       0       0
  2966 ;;      Locals:         1       0       0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0
  2968 ;;      Totals:         1       0       0       0       0       0       0
  2969 ;;Total ram usage:        1 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 1
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_change_sequence
  2976 ;;		_remove_component
  2977 ;;		_print_string
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text11
  2982  002D88                     __ptext11:
  2983                           	callstack 0
  2984  002D88                     _serial_tx_char:
  2985                           	callstack 0
  2986  002D88  FFFF               	dw	65535	; assembler added errata NOP
  2987                           
  2988                           ;incstack = 0
  2989                           ;serial_tx_char@val stored from wreg
  2990  002D8A  6E08               	movwf	serial_tx_char@val^0,c
  2991  002D8C                     
  2992                           ;serial_rs232.c: 44: void serial_tx_char(unsigned char val);serial_rs232.c: 45: {;serial
      +                          _rs232.c: 46:   TXREG=val;
  2993  002D8C  C008  FFAD         	movff	serial_tx_char@val,4013	;volatile
  2994  002D90                     l48:
  2995  002D90  FFFF               	dw	65535	; assembler added errata NOP
  2996  002D92  A2AC               	btfss	172,1,c	;volatile
  2997  002D94  EFCE  F016         	goto	u3811
  2998  002D98  EFD1  F016         	goto	u3810
  2999  002D9C                     u3811:
  3000  002D9C  FFFF               	dw	65535	; assembler added errata NOP
  3001  002D9E  EFC8  F016         	goto	l48
  3002  002DA2                     u3810:
  3003  002DA2  FFFF               	dw	65535	; assembler added errata NOP
  3004  002DA4  0012               	return		;funcret
  3005  002DA6  FFFF               	dw	65535	; errata NOP
  3006  002DA8                     __end_of_serial_tx_char:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _pick_and_place *****************
  3010 ;; Defined at:
  3011 ;;		line 494 in file "main.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  Componnt        1    wreg     unsigned char 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  Componnt        1   80[COMRAM] unsigned char 
  3016 ;;  i               2   78[COMRAM] int 
  3017 ;;  i               2   74[COMRAM] int 
  3018 ;;  i               2   70[COMRAM] int 
  3019 ;;  i               2   68[COMRAM] int 
  3020 ;;  i               2   64[COMRAM] int 
  3021 ;;  i               2   60[COMRAM] int 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2   65[None  ] int 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3031 ;;      Params:         0       0       0       0       0       0       0
  3032 ;;      Locals:        21       0       0       0       0       0       0
  3033 ;;      Temps:          2       0       0       0       0       0       0
  3034 ;;      Totals:        23       0       0       0       0       0       0
  3035 ;;Total ram usage:       23 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 4
  3038 ;; This function calls:
  3039 ;;		_Twister
  3040 ;;		_X_axis
  3041 ;;		_Y_axis
  3042 ;;		_Z_axis_and_Tweezer
  3043 ;;		___fldiv
  3044 ;;		___flge
  3045 ;;		___xxtofl
  3046 ;;		_direct
  3047 ;; This function is called by:
  3048 ;;		_start_up_menu
  3049 ;;		_change_sequence
  3050 ;;		_add_component
  3051 ;;		_remove_component
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text12
  3056  00062E                     __ptext12:
  3057                           	callstack 0
  3058  00062E                     _pick_and_place:
  3059                           	callstack 0
  3060  00062E  FFFF               	dw	65535	; assembler added errata NOP
  3061                           
  3062                           ;incstack = 0
  3063                           ;pick_and_place@Componnt stored from wreg
  3064  000630  6E51               	movwf	pick_and_place@Componnt^0,c
  3065  000632                     
  3066                           ;main.c: 494: int pick_and_place(char Componnt);main.c: 495: {;main.c: 498:     if(Compo
      +                          nnt=='A')
  3067  000632  0E41               	movlw	65
  3068  000634  1851               	xorwf	pick_and_place@Componnt^0,w,c
  3069  000636  A4D8               	btfss	status,2,c
  3070  000638  EF20  F003         	goto	u4391
  3071  00063C  EF23  F003         	goto	u4390
  3072  000640                     u4391:
  3073  000640  FFFF               	dw	65535	; assembler added errata NOP
  3074  000642  EF3E  F003         	goto	l4201
  3075  000646                     u4390:
  3076  000646  FFFF               	dw	65535	; assembler added errata NOP
  3077  000648                     
  3078                           ;main.c: 499:     {;main.c: 500:         X_Pick=3;
  3079  000648  0E00               	movlw	0
  3080  00064A  6E6C               	movwf	(_X_Pick+1)^0,c
  3081  00064C  0E03               	movlw	3
  3082  00064E  6E6B               	movwf	_X_Pick^0,c
  3083                           
  3084                           ;main.c: 501:         Y_Pick=4;
  3085  000650  0E00               	movlw	0
  3086  000652  6E68               	movwf	(_Y_Pick+1)^0,c
  3087  000654  0E04               	movlw	4
  3088  000656  6E67               	movwf	_Y_Pick^0,c
  3089                           
  3090                           ;main.c: 502:         Pick_Angle=0;
  3091  000658  0E00               	movlw	0
  3092  00065A  6E64               	movwf	(_Pick_Angle+1)^0,c
  3093  00065C  0E00               	movlw	0
  3094  00065E  6E63               	movwf	_Pick_Angle^0,c
  3095                           
  3096                           ;main.c: 504:         X_Place=17;
  3097  000660  0E00               	movlw	0
  3098  000662  6E6A               	movwf	(_X_Place+1)^0,c
  3099  000664  0E11               	movlw	17
  3100  000666  6E69               	movwf	_X_Place^0,c
  3101                           
  3102                           ;main.c: 505:         Y_Place=5;
  3103  000668  0E00               	movlw	0
  3104  00066A  6E66               	movwf	(_Y_Place+1)^0,c
  3105  00066C  0E05               	movlw	5
  3106  00066E  6E65               	movwf	_Y_Place^0,c
  3107                           
  3108                           ;main.c: 506:         Place_Angle=270;
  3109  000670  0E01               	movlw	1
  3110  000672  6E62               	movwf	(_Place_Angle+1)^0,c
  3111  000674  0E0E               	movlw	14
  3112  000676  6E61               	movwf	_Place_Angle^0,c
  3113                           
  3114                           ;main.c: 507:     }
  3115  000678  EFB0  F003         	goto	l4213
  3116  00067C                     l4201:
  3117  00067C  FFFF               	dw	65535	; assembler added errata NOP
  3118  00067E  0E42               	movlw	66
  3119  000680  1851               	xorwf	pick_and_place@Componnt^0,w,c
  3120  000682  A4D8               	btfss	status,2,c
  3121  000684  EF46  F003         	goto	u4401
  3122  000688  EF49  F003         	goto	u4400
  3123  00068C                     u4401:
  3124  00068C  FFFF               	dw	65535	; assembler added errata NOP
  3125  00068E  EF64  F003         	goto	l4205
  3126  000692                     u4400:
  3127  000692  FFFF               	dw	65535	; assembler added errata NOP
  3128  000694                     
  3129                           ;main.c: 509:         X_Pick=3;
  3130  000694  0E00               	movlw	0
  3131  000696  6E6C               	movwf	(_X_Pick+1)^0,c
  3132  000698  0E03               	movlw	3
  3133  00069A  6E6B               	movwf	_X_Pick^0,c
  3134                           
  3135                           ;main.c: 510:         Y_Pick=10;
  3136  00069C  0E00               	movlw	0
  3137  00069E  6E68               	movwf	(_Y_Pick+1)^0,c
  3138  0006A0  0E0A               	movlw	10
  3139  0006A2  6E67               	movwf	_Y_Pick^0,c
  3140                           
  3141                           ;main.c: 511:         Pick_Angle=90;
  3142  0006A4  0E00               	movlw	0
  3143  0006A6  6E64               	movwf	(_Pick_Angle+1)^0,c
  3144  0006A8  0E5A               	movlw	90
  3145  0006AA  6E63               	movwf	_Pick_Angle^0,c
  3146                           
  3147                           ;main.c: 513:         X_Place=10;
  3148  0006AC  0E00               	movlw	0
  3149  0006AE  6E6A               	movwf	(_X_Place+1)^0,c
  3150  0006B0  0E0A               	movlw	10
  3151  0006B2  6E69               	movwf	_X_Place^0,c
  3152                           
  3153                           ;main.c: 514:         Y_Place=5;
  3154  0006B4  0E00               	movlw	0
  3155  0006B6  6E66               	movwf	(_Y_Place+1)^0,c
  3156  0006B8  0E05               	movlw	5
  3157  0006BA  6E65               	movwf	_Y_Place^0,c
  3158                           
  3159                           ;main.c: 515:         Place_Angle=180;
  3160  0006BC  0E00               	movlw	0
  3161  0006BE  6E62               	movwf	(_Place_Angle+1)^0,c
  3162  0006C0  0EB4               	movlw	180
  3163  0006C2  6E61               	movwf	_Place_Angle^0,c
  3164                           
  3165                           ;main.c: 516:     }
  3166  0006C4  EFB0  F003         	goto	l4213
  3167  0006C8                     l4205:
  3168  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  3169  0006CA  0E43               	movlw	67
  3170  0006CC  1851               	xorwf	pick_and_place@Componnt^0,w,c
  3171  0006CE  A4D8               	btfss	status,2,c
  3172  0006D0  EF6C  F003         	goto	u4411
  3173  0006D4  EF6F  F003         	goto	u4410
  3174  0006D8                     u4411:
  3175  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  3176  0006DA  EF8A  F003         	goto	l4209
  3177  0006DE                     u4410:
  3178  0006DE  FFFF               	dw	65535	; assembler added errata NOP
  3179  0006E0                     
  3180                           ;main.c: 518:         X_Pick=3;
  3181  0006E0  0E00               	movlw	0
  3182  0006E2  6E6C               	movwf	(_X_Pick+1)^0,c
  3183  0006E4  0E03               	movlw	3
  3184  0006E6  6E6B               	movwf	_X_Pick^0,c
  3185                           
  3186                           ;main.c: 519:         Y_Pick=15;
  3187  0006E8  0E00               	movlw	0
  3188  0006EA  6E68               	movwf	(_Y_Pick+1)^0,c
  3189  0006EC  0E0F               	movlw	15
  3190  0006EE  6E67               	movwf	_Y_Pick^0,c
  3191                           
  3192                           ;main.c: 520:         Pick_Angle=90;
  3193  0006F0  0E00               	movlw	0
  3194  0006F2  6E64               	movwf	(_Pick_Angle+1)^0,c
  3195  0006F4  0E5A               	movlw	90
  3196  0006F6  6E63               	movwf	_Pick_Angle^0,c
  3197                           
  3198                           ;main.c: 522:         X_Place=16;
  3199  0006F8  0E00               	movlw	0
  3200  0006FA  6E6A               	movwf	(_X_Place+1)^0,c
  3201  0006FC  0E10               	movlw	16
  3202  0006FE  6E69               	movwf	_X_Place^0,c
  3203                           
  3204                           ;main.c: 523:         Y_Place=14;
  3205  000700  0E00               	movlw	0
  3206  000702  6E66               	movwf	(_Y_Place+1)^0,c
  3207  000704  0E0E               	movlw	14
  3208  000706  6E65               	movwf	_Y_Place^0,c
  3209                           
  3210                           ;main.c: 524:         Place_Angle=270;
  3211  000708  0E01               	movlw	1
  3212  00070A  6E62               	movwf	(_Place_Angle+1)^0,c
  3213  00070C  0E0E               	movlw	14
  3214  00070E  6E61               	movwf	_Place_Angle^0,c
  3215                           
  3216                           ;main.c: 525:     }
  3217  000710  EFB0  F003         	goto	l4213
  3218  000714                     l4209:
  3219  000714  FFFF               	dw	65535	; assembler added errata NOP
  3220  000716  0E44               	movlw	68
  3221  000718  1851               	xorwf	pick_and_place@Componnt^0,w,c
  3222  00071A  A4D8               	btfss	status,2,c
  3223  00071C  EF92  F003         	goto	u4421
  3224  000720  EF95  F003         	goto	u4420
  3225  000724                     u4421:
  3226  000724  FFFF               	dw	65535	; assembler added errata NOP
  3227  000726  EFB0  F003         	goto	l294
  3228  00072A                     u4420:
  3229  00072A  FFFF               	dw	65535	; assembler added errata NOP
  3230  00072C                     
  3231                           ;main.c: 527:         X_Pick=X_Pick_D;
  3232  00072C  C059  F06B         	movff	_X_Pick_D,_X_Pick
  3233  000730  C05A  F06C         	movff	_X_Pick_D+1,_X_Pick+1
  3234                           
  3235                           ;main.c: 528:         Y_Pick=Y_Pick_D;
  3236  000734  C0AC  F067         	movff	_Y_Pick_D,_Y_Pick
  3237  000738  C0AD  F068         	movff	_Y_Pick_D+1,_Y_Pick+1
  3238                           
  3239                           ;main.c: 529:         Pick_Angle=Pick_Angle_D;
  3240  00073C  C0AA  F063         	movff	_Pick_Angle_D,_Pick_Angle
  3241  000740  C0AB  F064         	movff	_Pick_Angle_D+1,_Pick_Angle+1
  3242                           
  3243                           ;main.c: 531:         X_Place=X_Place_D;
  3244  000744  C0A8  F069         	movff	_X_Place_D,_X_Place
  3245  000748  C0A9  F06A         	movff	_X_Place_D+1,_X_Place+1
  3246                           
  3247                           ;main.c: 532:         Y_Place=Y_Place_D;
  3248  00074C  C0A6  F065         	movff	_Y_Place_D,_Y_Place
  3249  000750  C0A7  F066         	movff	_Y_Place_D+1,_Y_Place+1
  3250                           
  3251                           ;main.c: 533:         Place_Angle=Place_Angle_D;
  3252  000754  C0A4  F061         	movff	_Place_Angle_D,_Place_Angle
  3253  000758  C0A5  F062         	movff	_Place_Angle_D+1,_Place_Angle+1
  3254                           
  3255                           ;main.c: 534:     }
  3256  00075C  EFB0  F003         	goto	l4213
  3257  000760                     l294:
  3258  000760                     l4213:
  3259  000760  FFFF               	dw	65535	; assembler added errata NOP
  3260                           
  3261                           ;main.c: 539:     X_dir=direct(X_diff,X_Pick);
  3262  000762  C05F  F008         	movff	_X_diff,direct@prev
  3263  000766  C060  F009         	movff	_X_diff+1,direct@prev+1
  3264  00076A  C06B  F00A         	movff	_X_Pick,direct@next
  3265  00076E  C06C  F00B         	movff	_X_Pick+1,direct@next+1
  3266  000772  EC41  F016         	call	_direct	;wreg free
  3267  000776  5008               	movf	?_direct^0,w,c
  3268  000778  6E70               	movwf	_X_dir^0,c
  3269                           
  3270                           ;main.c: 540:     Y_dir=direct(Y_diff, Y_Pick);
  3271  00077A  C05D  F008         	movff	_Y_diff,direct@prev
  3272  00077E  C05E  F009         	movff	_Y_diff+1,direct@prev+1
  3273  000782  C067  F00A         	movff	_Y_Pick,direct@next
  3274  000786  C068  F00B         	movff	_Y_Pick+1,direct@next+1
  3275  00078A  EC41  F016         	call	_direct	;wreg free
  3276  00078E  5008               	movf	?_direct^0,w,c
  3277  000790  6E6F               	movwf	_Y_dir^0,c
  3278                           
  3279                           ;main.c: 541:     Rot_dir = direct(Angle_diff,Pick_Angle);
  3280  000792  C05B  F008         	movff	_Angle_diff,direct@prev
  3281  000796  C05C  F009         	movff	_Angle_diff+1,direct@prev+1
  3282  00079A  C063  F00A         	movff	_Pick_Angle,direct@next
  3283  00079E  C064  F00B         	movff	_Pick_Angle+1,direct@next+1
  3284  0007A2  EC41  F016         	call	_direct	;wreg free
  3285  0007A6  5008               	movf	?_direct^0,w,c
  3286  0007A8  6E6E               	movwf	_Rot_dir^0,c
  3287  0007AA                     
  3288                           ;main.c: 542:     for(int i = 0; i<(((X_Pick-X_diff) > 0 ? (X_Pick-X_diff) : -(X_Pick-X_
      +                          diff))); i++){X_axis(X_dir);}
  3289  0007AA  0E00               	movlw	0
  3290  0007AC  6E3E               	movwf	(pick_and_place@i+1)^0,c
  3291  0007AE  0E00               	movlw	0
  3292  0007B0  6E3D               	movwf	pick_and_place@i^0,c
  3293  0007B2  EFE1  F003         	goto	l4221
  3294  0007B6                     l4217:
  3295  0007B6  FFFF               	dw	65535	; assembler added errata NOP
  3296  0007B8  5070               	movf	_X_dir^0,w,c
  3297  0007BA  ECF9  F012         	call	_X_axis
  3298  0007BE  4A3D               	infsnz	pick_and_place@i^0,f,c
  3299  0007C0  2A3E               	incf	(pick_and_place@i+1)^0,f,c
  3300  0007C2                     l4221:
  3301  0007C2  FFFF               	dw	65535	; assembler added errata NOP
  3302  0007C4  505F               	movf	_X_diff^0,w,c
  3303  0007C6  5C6B               	subwf	_X_Pick^0,w,c
  3304  0007C8  6E3B               	movwf	??_pick_and_place^0,c
  3305  0007CA  5060               	movf	(_X_diff+1)^0,w,c
  3306  0007CC  586C               	subwfb	(_X_Pick+1)^0,w,c
  3307  0007CE  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3308  0007D0  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3309  0007D2  EFF6  F003         	goto	u4430
  3310  0007D6  503C               	movf	(??_pick_and_place+1)^0,w,c
  3311  0007D8  E106               	bnz	u4431
  3312  0007DA  043B               	decf	??_pick_and_place^0,w,c
  3313  0007DC  B0D8               	btfsc	status,0,c
  3314  0007DE  EFF3  F003         	goto	u4431
  3315  0007E2  EFF6  F003         	goto	u4430
  3316  0007E6                     u4431:
  3317  0007E6  FFFF               	dw	65535	; assembler added errata NOP
  3318  0007E8  EF07  F004         	goto	l4225
  3319  0007EC                     u4430:
  3320  0007EC  FFFF               	dw	65535	; assembler added errata NOP
  3321  0007EE  505F               	movf	_X_diff^0,w,c
  3322  0007F0  5C6B               	subwf	_X_Pick^0,w,c
  3323  0007F2  6E3B               	movwf	??_pick_and_place^0,c
  3324  0007F4  5060               	movf	(_X_diff+1)^0,w,c
  3325  0007F6  586C               	subwfb	(_X_Pick+1)^0,w,c
  3326  0007F8  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3327  0007FA  1E3B               	comf	??_pick_and_place^0,f,c
  3328  0007FC  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3329  0007FE  4A3B               	infsnz	??_pick_and_place^0,f,c
  3330  000800  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3331  000802  C03B  F03F         	movff	??_pick_and_place,_pick_and_place$590
  3332  000806  C03C  F040         	movff	??_pick_and_place+1,_pick_and_place$590+1
  3333  00080A  EF0E  F004         	goto	l304
  3334  00080E                     l4225:
  3335  00080E  FFFF               	dw	65535	; assembler added errata NOP
  3336  000810  505F               	movf	_X_diff^0,w,c
  3337  000812  5C6B               	subwf	_X_Pick^0,w,c
  3338  000814  6E3F               	movwf	_pick_and_place$590^0,c
  3339  000816  5060               	movf	(_X_diff+1)^0,w,c
  3340  000818  586C               	subwfb	(_X_Pick+1)^0,w,c
  3341  00081A  6E40               	movwf	(_pick_and_place$590+1)^0,c
  3342  00081C                     l304:
  3343  00081C  FFFF               	dw	65535	; assembler added errata NOP
  3344  00081E  503F               	movf	_pick_and_place$590^0,w,c
  3345  000820  5C3D               	subwf	pick_and_place@i^0,w,c
  3346  000822  503E               	movf	(pick_and_place@i+1)^0,w,c
  3347  000824  0A80               	xorlw	128
  3348  000826  6E3B               	movwf	??_pick_and_place^0,c
  3349  000828  5040               	movf	(_pick_and_place$590+1)^0,w,c
  3350  00082A  0A80               	xorlw	128
  3351  00082C  583B               	subwfb	??_pick_and_place^0,w,c
  3352  00082E  A0D8               	btfss	status,0,c
  3353  000830  EF1C  F004         	goto	u4441
  3354  000834  EF1F  F004         	goto	u4440
  3355  000838                     u4441:
  3356  000838  FFFF               	dw	65535	; assembler added errata NOP
  3357  00083A  EFDB  F003         	goto	l4217
  3358  00083E                     u4440:
  3359  00083E  FFFF               	dw	65535	; assembler added errata NOP
  3360  000840                     
  3361                           ;main.c: 543:     for(int i = 0; i<(((Y_Pick-Y_diff) > 0 ? (Y_Pick-Y_diff) : -(Y_Pick-Y_
      +                          diff))); i++){Y_axis(Y_dir);}
  3362  000840  0E00               	movlw	0
  3363  000842  6E42               	movwf	(pick_and_place@i_591+1)^0,c
  3364  000844  0E00               	movlw	0
  3365  000846  6E41               	movwf	pick_and_place@i_591^0,c
  3366  000848  EF2C  F004         	goto	l4233
  3367  00084C                     l4229:
  3368  00084C  FFFF               	dw	65535	; assembler added errata NOP
  3369  00084E  506F               	movf	_Y_dir^0,w,c
  3370  000850  EC8F  F012         	call	_Y_axis
  3371  000854  4A41               	infsnz	pick_and_place@i_591^0,f,c
  3372  000856  2A42               	incf	(pick_and_place@i_591+1)^0,f,c
  3373  000858                     l4233:
  3374  000858  FFFF               	dw	65535	; assembler added errata NOP
  3375  00085A  505D               	movf	_Y_diff^0,w,c
  3376  00085C  5C67               	subwf	_Y_Pick^0,w,c
  3377  00085E  6E3B               	movwf	??_pick_and_place^0,c
  3378  000860  505E               	movf	(_Y_diff+1)^0,w,c
  3379  000862  5868               	subwfb	(_Y_Pick+1)^0,w,c
  3380  000864  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3381  000866  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3382  000868  EF41  F004         	goto	u4450
  3383  00086C  503C               	movf	(??_pick_and_place+1)^0,w,c
  3384  00086E  E106               	bnz	u4451
  3385  000870  043B               	decf	??_pick_and_place^0,w,c
  3386  000872  B0D8               	btfsc	status,0,c
  3387  000874  EF3E  F004         	goto	u4451
  3388  000878  EF41  F004         	goto	u4450
  3389  00087C                     u4451:
  3390  00087C  FFFF               	dw	65535	; assembler added errata NOP
  3391  00087E  EF52  F004         	goto	l4237
  3392  000882                     u4450:
  3393  000882  FFFF               	dw	65535	; assembler added errata NOP
  3394  000884  505D               	movf	_Y_diff^0,w,c
  3395  000886  5C67               	subwf	_Y_Pick^0,w,c
  3396  000888  6E3B               	movwf	??_pick_and_place^0,c
  3397  00088A  505E               	movf	(_Y_diff+1)^0,w,c
  3398  00088C  5868               	subwfb	(_Y_Pick+1)^0,w,c
  3399  00088E  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3400  000890  1E3B               	comf	??_pick_and_place^0,f,c
  3401  000892  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3402  000894  4A3B               	infsnz	??_pick_and_place^0,f,c
  3403  000896  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3404  000898  C03B  F043         	movff	??_pick_and_place,_pick_and_place$593
  3405  00089C  C03C  F044         	movff	??_pick_and_place+1,_pick_and_place$593+1
  3406  0008A0  EF59  F004         	goto	l311
  3407  0008A4                     l4237:
  3408  0008A4  FFFF               	dw	65535	; assembler added errata NOP
  3409  0008A6  505D               	movf	_Y_diff^0,w,c
  3410  0008A8  5C67               	subwf	_Y_Pick^0,w,c
  3411  0008AA  6E43               	movwf	_pick_and_place$593^0,c
  3412  0008AC  505E               	movf	(_Y_diff+1)^0,w,c
  3413  0008AE  5868               	subwfb	(_Y_Pick+1)^0,w,c
  3414  0008B0  6E44               	movwf	(_pick_and_place$593+1)^0,c
  3415  0008B2                     l311:
  3416  0008B2  FFFF               	dw	65535	; assembler added errata NOP
  3417  0008B4  5043               	movf	_pick_and_place$593^0,w,c
  3418  0008B6  5C41               	subwf	pick_and_place@i_591^0,w,c
  3419  0008B8  5042               	movf	(pick_and_place@i_591+1)^0,w,c
  3420  0008BA  0A80               	xorlw	128
  3421  0008BC  6E3B               	movwf	??_pick_and_place^0,c
  3422  0008BE  5044               	movf	(_pick_and_place$593+1)^0,w,c
  3423  0008C0  0A80               	xorlw	128
  3424  0008C2  583B               	subwfb	??_pick_and_place^0,w,c
  3425  0008C4  A0D8               	btfss	status,0,c
  3426  0008C6  EF67  F004         	goto	u4461
  3427  0008CA  EF6A  F004         	goto	u4460
  3428  0008CE                     u4461:
  3429  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  3430  0008D0  EF26  F004         	goto	l4229
  3431  0008D4                     u4460:
  3432  0008D4  FFFF               	dw	65535	; assembler added errata NOP
  3433  0008D6                     
  3434                           ;main.c: 544:     for(int i = 0; i<((Angle_diff-Pick_Angle)/3.6); i++){Twister(Rot_dir);
      +                          }
  3435  0008D6  0E00               	movlw	0
  3436  0008D8  6E46               	movwf	(pick_and_place@i_594+1)^0,c
  3437  0008DA  0E00               	movlw	0
  3438  0008DC  6E45               	movwf	pick_and_place@i_594^0,c
  3439  0008DE  EF77  F004         	goto	l4245
  3440  0008E2                     l4241:
  3441  0008E2  FFFF               	dw	65535	; assembler added errata NOP
  3442  0008E4  506E               	movf	_Rot_dir^0,w,c
  3443  0008E6  ECCC  F013         	call	_Twister
  3444  0008EA  4A45               	infsnz	pick_and_place@i_594^0,f,c
  3445  0008EC  2A46               	incf	(pick_and_place@i_594+1)^0,f,c
  3446  0008EE                     l4245:
  3447  0008EE  FFFF               	dw	65535	; assembler added errata NOP
  3448  0008F0  C045  F008         	movff	pick_and_place@i_594,___xxtofl@val
  3449  0008F4  C046  F009         	movff	pick_and_place@i_594+1,___xxtofl@val+1
  3450  0008F8  0E00               	movlw	0
  3451  0008FA  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3452  0008FC  0EFF               	movlw	-1
  3453  0008FE  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3454  000900  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3455  000902  0E01               	movlw	1
  3456  000904  EC46  F00D         	call	___xxtofl
  3457  000908  C008  F02F         	movff	?___xxtofl,___flge@ff1
  3458  00090C  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
  3459  000910  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
  3460  000914  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
  3461  000918  0E66               	movlw	102
  3462  00091A  6E1A               	movwf	___fldiv@a^0,c
  3463  00091C  0E66               	movlw	102
  3464  00091E  6E1B               	movwf	(___fldiv@a+1)^0,c
  3465  000920  0E66               	movlw	102
  3466  000922  6E1C               	movwf	(___fldiv@a+2)^0,c
  3467  000924  0E40               	movlw	64
  3468  000926  6E1D               	movwf	(___fldiv@a+3)^0,c
  3469  000928  5063               	movf	_Pick_Angle^0,w,c
  3470  00092A  5C5B               	subwf	_Angle_diff^0,w,c
  3471  00092C  6E3B               	movwf	??_pick_and_place^0,c
  3472  00092E  5064               	movf	(_Pick_Angle+1)^0,w,c
  3473  000930  585C               	subwfb	(_Angle_diff+1)^0,w,c
  3474  000932  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3475  000934  C03B  F008         	movff	??_pick_and_place,___xxtofl@val
  3476  000938  C03C  F009         	movff	??_pick_and_place+1,___xxtofl@val+1
  3477  00093C  0E00               	movlw	0
  3478  00093E  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3479  000940  0EFF               	movlw	-1
  3480  000942  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3481  000944  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3482  000946  0E01               	movlw	1
  3483  000948  EC46  F00D         	call	___xxtofl
  3484  00094C  C008  F016         	movff	?___xxtofl,___fldiv@b
  3485  000950  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  3486  000954  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  3487  000958  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  3488  00095C  EC39  F008         	call	___fldiv	;wreg free
  3489  000960  C016  F033         	movff	?___fldiv,___flge@ff2
  3490  000964  C017  F034         	movff	?___fldiv+1,___flge@ff2+1
  3491  000968  C018  F035         	movff	?___fldiv+2,___flge@ff2+2
  3492  00096C  C019  F036         	movff	?___fldiv+3,___flge@ff2+3
  3493  000970  EC14  F011         	call	___flge	;wreg free
  3494  000974  A0D8               	btfss	status,0,c
  3495  000976  EFBF  F004         	goto	u4471
  3496  00097A  EFC2  F004         	goto	u4470
  3497  00097E                     u4471:
  3498  00097E  FFFF               	dw	65535	; assembler added errata NOP
  3499  000980  EF71  F004         	goto	l4241
  3500  000984                     u4470:
  3501  000984  FFFF               	dw	65535	; assembler added errata NOP
  3502  000986                     
  3503                           ;main.c: 546:         Z_axis_and_Tweezer();
  3504  000986  ECF1  F014         	call	_Z_axis_and_Tweezer	;wreg free
  3505                           
  3506                           ;main.c: 551:     X_dir=direct(X_Pick,X_Place);
  3507  00098A  C06B  F008         	movff	_X_Pick,direct@prev
  3508  00098E  C06C  F009         	movff	_X_Pick+1,direct@prev+1
  3509  000992  C069  F00A         	movff	_X_Place,direct@next
  3510  000996  C06A  F00B         	movff	_X_Place+1,direct@next+1
  3511  00099A  EC41  F016         	call	_direct	;wreg free
  3512  00099E  5008               	movf	?_direct^0,w,c
  3513  0009A0  6E70               	movwf	_X_dir^0,c
  3514                           
  3515                           ;main.c: 552:     Y_dir=direct(Y_Pick,Y_Place);
  3516  0009A2  C067  F008         	movff	_Y_Pick,direct@prev
  3517  0009A6  C068  F009         	movff	_Y_Pick+1,direct@prev+1
  3518  0009AA  C065  F00A         	movff	_Y_Place,direct@next
  3519  0009AE  C066  F00B         	movff	_Y_Place+1,direct@next+1
  3520  0009B2  EC41  F016         	call	_direct	;wreg free
  3521  0009B6  5008               	movf	?_direct^0,w,c
  3522  0009B8  6E6F               	movwf	_Y_dir^0,c
  3523                           
  3524                           ;main.c: 553:     Rot_dir=direct(Pick_Angle,Place_Angle);
  3525  0009BA  C063  F008         	movff	_Pick_Angle,direct@prev
  3526  0009BE  C064  F009         	movff	_Pick_Angle+1,direct@prev+1
  3527  0009C2  C061  F00A         	movff	_Place_Angle,direct@next
  3528  0009C6  C062  F00B         	movff	_Place_Angle+1,direct@next+1
  3529  0009CA  EC41  F016         	call	_direct	;wreg free
  3530  0009CE  5008               	movf	?_direct^0,w,c
  3531  0009D0  6E6E               	movwf	_Rot_dir^0,c
  3532  0009D2                     
  3533                           ;main.c: 554:     for(int i = 0; i<(((X_Place-X_diff) > 0 ? (X_Place-X_diff) : -(X_Place
      +                          -X_diff))); i++){X_axis(X_dir);}
  3534  0009D2  0E00               	movlw	0
  3535  0009D4  6E48               	movwf	(pick_and_place@i_596+1)^0,c
  3536  0009D6  0E00               	movlw	0
  3537  0009D8  6E47               	movwf	pick_and_place@i_596^0,c
  3538  0009DA  EFF5  F004         	goto	l4255
  3539  0009DE                     l4251:
  3540  0009DE  FFFF               	dw	65535	; assembler added errata NOP
  3541  0009E0  5070               	movf	_X_dir^0,w,c
  3542  0009E2  ECF9  F012         	call	_X_axis
  3543  0009E6  4A47               	infsnz	pick_and_place@i_596^0,f,c
  3544  0009E8  2A48               	incf	(pick_and_place@i_596+1)^0,f,c
  3545  0009EA                     l4255:
  3546  0009EA  FFFF               	dw	65535	; assembler added errata NOP
  3547  0009EC  505F               	movf	_X_diff^0,w,c
  3548  0009EE  5C69               	subwf	_X_Place^0,w,c
  3549  0009F0  6E3B               	movwf	??_pick_and_place^0,c
  3550  0009F2  5060               	movf	(_X_diff+1)^0,w,c
  3551  0009F4  586A               	subwfb	(_X_Place+1)^0,w,c
  3552  0009F6  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3553  0009F8  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3554  0009FA  EF0A  F005         	goto	u4480
  3555  0009FE  503C               	movf	(??_pick_and_place+1)^0,w,c
  3556  000A00  E106               	bnz	u4481
  3557  000A02  043B               	decf	??_pick_and_place^0,w,c
  3558  000A04  B0D8               	btfsc	status,0,c
  3559  000A06  EF07  F005         	goto	u4481
  3560  000A0A  EF0A  F005         	goto	u4480
  3561  000A0E                     u4481:
  3562  000A0E  FFFF               	dw	65535	; assembler added errata NOP
  3563  000A10  EF1B  F005         	goto	l4259
  3564  000A14                     u4480:
  3565  000A14  FFFF               	dw	65535	; assembler added errata NOP
  3566  000A16  505F               	movf	_X_diff^0,w,c
  3567  000A18  5C69               	subwf	_X_Place^0,w,c
  3568  000A1A  6E3B               	movwf	??_pick_and_place^0,c
  3569  000A1C  5060               	movf	(_X_diff+1)^0,w,c
  3570  000A1E  586A               	subwfb	(_X_Place+1)^0,w,c
  3571  000A20  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3572  000A22  1E3B               	comf	??_pick_and_place^0,f,c
  3573  000A24  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3574  000A26  4A3B               	infsnz	??_pick_and_place^0,f,c
  3575  000A28  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3576  000A2A  C03B  F049         	movff	??_pick_and_place,_pick_and_place$597
  3577  000A2E  C03C  F04A         	movff	??_pick_and_place+1,_pick_and_place$597+1
  3578  000A32  EF22  F005         	goto	l321
  3579  000A36                     l4259:
  3580  000A36  FFFF               	dw	65535	; assembler added errata NOP
  3581  000A38  505F               	movf	_X_diff^0,w,c
  3582  000A3A  5C69               	subwf	_X_Place^0,w,c
  3583  000A3C  6E49               	movwf	_pick_and_place$597^0,c
  3584  000A3E  5060               	movf	(_X_diff+1)^0,w,c
  3585  000A40  586A               	subwfb	(_X_Place+1)^0,w,c
  3586  000A42  6E4A               	movwf	(_pick_and_place$597+1)^0,c
  3587  000A44                     l321:
  3588  000A44  FFFF               	dw	65535	; assembler added errata NOP
  3589  000A46  5049               	movf	_pick_and_place$597^0,w,c
  3590  000A48  5C47               	subwf	pick_and_place@i_596^0,w,c
  3591  000A4A  5048               	movf	(pick_and_place@i_596+1)^0,w,c
  3592  000A4C  0A80               	xorlw	128
  3593  000A4E  6E3B               	movwf	??_pick_and_place^0,c
  3594  000A50  504A               	movf	(_pick_and_place$597+1)^0,w,c
  3595  000A52  0A80               	xorlw	128
  3596  000A54  583B               	subwfb	??_pick_and_place^0,w,c
  3597  000A56  A0D8               	btfss	status,0,c
  3598  000A58  EF30  F005         	goto	u4491
  3599  000A5C  EF33  F005         	goto	u4490
  3600  000A60                     u4491:
  3601  000A60  FFFF               	dw	65535	; assembler added errata NOP
  3602  000A62  EFEF  F004         	goto	l4251
  3603  000A66                     u4490:
  3604  000A66  FFFF               	dw	65535	; assembler added errata NOP
  3605  000A68                     
  3606                           ;main.c: 555:     for(int i = 0; i<(((Y_Place-Y_diff) > 0 ? (Y_Place-Y_diff) : -(Y_Place
      +                          -Y_diff))); i++){Y_axis(Y_dir);}
  3607  000A68  0E00               	movlw	0
  3608  000A6A  6E4C               	movwf	(pick_and_place@i_598+1)^0,c
  3609  000A6C  0E00               	movlw	0
  3610  000A6E  6E4B               	movwf	pick_and_place@i_598^0,c
  3611  000A70  EF40  F005         	goto	l4267
  3612  000A74                     l4263:
  3613  000A74  FFFF               	dw	65535	; assembler added errata NOP
  3614  000A76  506F               	movf	_Y_dir^0,w,c
  3615  000A78  EC8F  F012         	call	_Y_axis
  3616  000A7C  4A4B               	infsnz	pick_and_place@i_598^0,f,c
  3617  000A7E  2A4C               	incf	(pick_and_place@i_598+1)^0,f,c
  3618  000A80                     l4267:
  3619  000A80  FFFF               	dw	65535	; assembler added errata NOP
  3620  000A82  505D               	movf	_Y_diff^0,w,c
  3621  000A84  5C65               	subwf	_Y_Place^0,w,c
  3622  000A86  6E3B               	movwf	??_pick_and_place^0,c
  3623  000A88  505E               	movf	(_Y_diff+1)^0,w,c
  3624  000A8A  5866               	subwfb	(_Y_Place+1)^0,w,c
  3625  000A8C  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3626  000A8E  BE3C               	btfsc	(??_pick_and_place+1)^0,7,c
  3627  000A90  EF55  F005         	goto	u4500
  3628  000A94  503C               	movf	(??_pick_and_place+1)^0,w,c
  3629  000A96  E106               	bnz	u4501
  3630  000A98  043B               	decf	??_pick_and_place^0,w,c
  3631  000A9A  B0D8               	btfsc	status,0,c
  3632  000A9C  EF52  F005         	goto	u4501
  3633  000AA0  EF55  F005         	goto	u4500
  3634  000AA4                     u4501:
  3635  000AA4  FFFF               	dw	65535	; assembler added errata NOP
  3636  000AA6  EF66  F005         	goto	l4271
  3637  000AAA                     u4500:
  3638  000AAA  FFFF               	dw	65535	; assembler added errata NOP
  3639  000AAC  505D               	movf	_Y_diff^0,w,c
  3640  000AAE  5C65               	subwf	_Y_Place^0,w,c
  3641  000AB0  6E3B               	movwf	??_pick_and_place^0,c
  3642  000AB2  505E               	movf	(_Y_diff+1)^0,w,c
  3643  000AB4  5866               	subwfb	(_Y_Place+1)^0,w,c
  3644  000AB6  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3645  000AB8  1E3B               	comf	??_pick_and_place^0,f,c
  3646  000ABA  1E3C               	comf	(??_pick_and_place+1)^0,f,c
  3647  000ABC  4A3B               	infsnz	??_pick_and_place^0,f,c
  3648  000ABE  2A3C               	incf	(??_pick_and_place+1)^0,f,c
  3649  000AC0  C03B  F04D         	movff	??_pick_and_place,_pick_and_place$599
  3650  000AC4  C03C  F04E         	movff	??_pick_and_place+1,_pick_and_place$599+1
  3651  000AC8  EF6D  F005         	goto	l328
  3652  000ACC                     l4271:
  3653  000ACC  FFFF               	dw	65535	; assembler added errata NOP
  3654  000ACE  505D               	movf	_Y_diff^0,w,c
  3655  000AD0  5C65               	subwf	_Y_Place^0,w,c
  3656  000AD2  6E4D               	movwf	_pick_and_place$599^0,c
  3657  000AD4  505E               	movf	(_Y_diff+1)^0,w,c
  3658  000AD6  5866               	subwfb	(_Y_Place+1)^0,w,c
  3659  000AD8  6E4E               	movwf	(_pick_and_place$599+1)^0,c
  3660  000ADA                     l328:
  3661  000ADA  FFFF               	dw	65535	; assembler added errata NOP
  3662  000ADC  504D               	movf	_pick_and_place$599^0,w,c
  3663  000ADE  5C4B               	subwf	pick_and_place@i_598^0,w,c
  3664  000AE0  504C               	movf	(pick_and_place@i_598+1)^0,w,c
  3665  000AE2  0A80               	xorlw	128
  3666  000AE4  6E3B               	movwf	??_pick_and_place^0,c
  3667  000AE6  504E               	movf	(_pick_and_place$599+1)^0,w,c
  3668  000AE8  0A80               	xorlw	128
  3669  000AEA  583B               	subwfb	??_pick_and_place^0,w,c
  3670  000AEC  A0D8               	btfss	status,0,c
  3671  000AEE  EF7B  F005         	goto	u4511
  3672  000AF2  EF7E  F005         	goto	u4510
  3673  000AF6                     u4511:
  3674  000AF6  FFFF               	dw	65535	; assembler added errata NOP
  3675  000AF8  EF3A  F005         	goto	l4263
  3676  000AFC                     u4510:
  3677  000AFC  FFFF               	dw	65535	; assembler added errata NOP
  3678  000AFE                     
  3679                           ;main.c: 556:     for(int i = 0; i<((Pick_Angle-Place_Angle)/3.6); i++){Twister(Rot_dir)
      +                          ;}
  3680  000AFE  0E00               	movlw	0
  3681  000B00  6E50               	movwf	(pick_and_place@i_600+1)^0,c
  3682  000B02  0E00               	movlw	0
  3683  000B04  6E4F               	movwf	pick_and_place@i_600^0,c
  3684  000B06  EF8B  F005         	goto	l4279
  3685  000B0A                     l4275:
  3686  000B0A  FFFF               	dw	65535	; assembler added errata NOP
  3687  000B0C  506E               	movf	_Rot_dir^0,w,c
  3688  000B0E  ECCC  F013         	call	_Twister
  3689  000B12  4A4F               	infsnz	pick_and_place@i_600^0,f,c
  3690  000B14  2A50               	incf	(pick_and_place@i_600+1)^0,f,c
  3691  000B16                     l4279:
  3692  000B16  FFFF               	dw	65535	; assembler added errata NOP
  3693  000B18  C04F  F008         	movff	pick_and_place@i_600,___xxtofl@val
  3694  000B1C  C050  F009         	movff	pick_and_place@i_600+1,___xxtofl@val+1
  3695  000B20  0E00               	movlw	0
  3696  000B22  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3697  000B24  0EFF               	movlw	-1
  3698  000B26  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3699  000B28  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3700  000B2A  0E01               	movlw	1
  3701  000B2C  EC46  F00D         	call	___xxtofl
  3702  000B30  C008  F02F         	movff	?___xxtofl,___flge@ff1
  3703  000B34  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
  3704  000B38  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
  3705  000B3C  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
  3706  000B40  0E66               	movlw	102
  3707  000B42  6E1A               	movwf	___fldiv@a^0,c
  3708  000B44  0E66               	movlw	102
  3709  000B46  6E1B               	movwf	(___fldiv@a+1)^0,c
  3710  000B48  0E66               	movlw	102
  3711  000B4A  6E1C               	movwf	(___fldiv@a+2)^0,c
  3712  000B4C  0E40               	movlw	64
  3713  000B4E  6E1D               	movwf	(___fldiv@a+3)^0,c
  3714  000B50  5061               	movf	_Place_Angle^0,w,c
  3715  000B52  5C63               	subwf	_Pick_Angle^0,w,c
  3716  000B54  6E3B               	movwf	??_pick_and_place^0,c
  3717  000B56  5062               	movf	(_Place_Angle+1)^0,w,c
  3718  000B58  5864               	subwfb	(_Pick_Angle+1)^0,w,c
  3719  000B5A  6E3C               	movwf	(??_pick_and_place+1)^0,c
  3720  000B5C  C03B  F008         	movff	??_pick_and_place,___xxtofl@val
  3721  000B60  C03C  F009         	movff	??_pick_and_place+1,___xxtofl@val+1
  3722  000B64  0E00               	movlw	0
  3723  000B66  BE09               	btfsc	(___xxtofl@val+1)^0,7,c
  3724  000B68  0EFF               	movlw	-1
  3725  000B6A  6E0A               	movwf	(___xxtofl@val+2)^0,c
  3726  000B6C  6E0B               	movwf	(___xxtofl@val+3)^0,c
  3727  000B6E  0E01               	movlw	1
  3728  000B70  EC46  F00D         	call	___xxtofl
  3729  000B74  C008  F016         	movff	?___xxtofl,___fldiv@b
  3730  000B78  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  3731  000B7C  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  3732  000B80  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  3733  000B84  EC39  F008         	call	___fldiv	;wreg free
  3734  000B88  C016  F033         	movff	?___fldiv,___flge@ff2
  3735  000B8C  C017  F034         	movff	?___fldiv+1,___flge@ff2+1
  3736  000B90  C018  F035         	movff	?___fldiv+2,___flge@ff2+2
  3737  000B94  C019  F036         	movff	?___fldiv+3,___flge@ff2+3
  3738  000B98  EC14  F011         	call	___flge	;wreg free
  3739  000B9C  A0D8               	btfss	status,0,c
  3740  000B9E  EFD3  F005         	goto	u4521
  3741  000BA2  EFD6  F005         	goto	u4520
  3742  000BA6                     u4521:
  3743  000BA6  FFFF               	dw	65535	; assembler added errata NOP
  3744  000BA8  EF85  F005         	goto	l4275
  3745  000BAC                     u4520:
  3746  000BAC  FFFF               	dw	65535	; assembler added errata NOP
  3747  000BAE                     
  3748                           ;main.c: 557:         Z_axis_and_Tweezer();
  3749  000BAE  ECF1  F014         	call	_Z_axis_and_Tweezer	;wreg free
  3750  000BB2                     
  3751                           ;main.c: 559:     Angle_diff= Place_Angle;
  3752  000BB2  C061  F05B         	movff	_Place_Angle,_Angle_diff
  3753  000BB6  C062  F05C         	movff	_Place_Angle+1,_Angle_diff+1
  3754  000BBA                     
  3755                           ;main.c: 560:     X_diff = X_Place;
  3756  000BBA  C069  F05F         	movff	_X_Place,_X_diff
  3757  000BBE  C06A  F060         	movff	_X_Place+1,_X_diff+1
  3758  000BC2                     
  3759                           ;main.c: 561:     Y_diff = Y_Place;
  3760  000BC2  C065  F05D         	movff	_Y_Place,_Y_diff
  3761  000BC6  C066  F05E         	movff	_Y_Place+1,_Y_diff+1
  3762  000BCA  0012               	return		;funcret
  3763  000BCC  FFFF               	dw	65535	; errata NOP
  3764  000BCE                     __end_of_pick_and_place:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _direct *****************
  3768 ;; Defined at:
  3769 ;;		line 574 in file "main.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  prev            2    7[COMRAM] int 
  3772 ;;  next            2    9[COMRAM] int 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  2    7[COMRAM] int 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3784 ;;      Params:         4       0       0       0       0       0       0
  3785 ;;      Locals:         0       0       0       0       0       0       0
  3786 ;;      Temps:          1       0       0       0       0       0       0
  3787 ;;      Totals:         5       0       0       0       0       0       0
  3788 ;;Total ram usage:        5 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; Hardware stack levels required when called: 1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_pick_and_place
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text13
  3799  002C82                     __ptext13:
  3800                           	callstack 0
  3801  002C82                     _direct:
  3802                           	callstack 0
  3803  002C82  FFFF               	dw	65535	; assembler added errata NOP
  3804  002C84                     
  3805                           ;main.c: 575:     if(prev<next){
  3806  002C84  500A               	movf	direct@next^0,w,c
  3807  002C86  5C08               	subwf	direct@prev^0,w,c
  3808  002C88  5009               	movf	(direct@prev+1)^0,w,c
  3809  002C8A  0A80               	xorlw	128
  3810  002C8C  6E0C               	movwf	??_direct^0,c
  3811  002C8E  500B               	movf	(direct@next+1)^0,w,c
  3812  002C90  0A80               	xorlw	128
  3813  002C92  580C               	subwfb	??_direct^0,w,c
  3814  002C94  B0D8               	btfsc	status,0,c
  3815  002C96  EF4F  F016         	goto	u3891
  3816  002C9A  EF52  F016         	goto	u3890
  3817  002C9E                     u3891:
  3818  002C9E  FFFF               	dw	65535	; assembler added errata NOP
  3819  002CA0  EF59  F016         	goto	l3917
  3820  002CA4                     u3890:
  3821  002CA4  FFFF               	dw	65535	; assembler added errata NOP
  3822  002CA6                     
  3823                           ;main.c: 576:         return 0;
  3824  002CA6  0E00               	movlw	0
  3825  002CA8  6E09               	movwf	(?_direct+1)^0,c
  3826  002CAA  0E00               	movlw	0
  3827  002CAC  6E08               	movwf	?_direct^0,c
  3828  002CAE  EF5E  F016         	goto	l349
  3829  002CB2                     l3917:
  3830  002CB2  FFFF               	dw	65535	; assembler added errata NOP
  3831                           
  3832                           ;main.c: 579:         return 1;
  3833  002CB4  0E00               	movlw	0
  3834  002CB6  6E09               	movwf	(?_direct+1)^0,c
  3835  002CB8  0E01               	movlw	1
  3836  002CBA  6E08               	movwf	?_direct^0,c
  3837  002CBC                     l349:
  3838  002CBC  FFFF               	dw	65535	; assembler added errata NOP
  3839  002CBE  0012               	return		;funcret
  3840  002CC0  FFFF               	dw	65535	; errata NOP
  3841  002CC2                     __end_of_direct:
  3842                           	callstack 0
  3843                           
  3844 ;; *************** function ___xxtofl *****************
  3845 ;; Defined at:
  3846 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  sign            1    wreg     unsigned char 
  3849 ;;  val             4    7[COMRAM] long 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  sign            1   15[COMRAM] unsigned char 
  3852 ;;  arg             4   17[COMRAM] unsigned long 
  3853 ;;  exp             1   16[COMRAM] unsigned char 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  4    7[COMRAM] unsigned char 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2, status,0
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3863 ;;      Params:         4       0       0       0       0       0       0
  3864 ;;      Locals:         6       0       0       0       0       0       0
  3865 ;;      Temps:          4       0       0       0       0       0       0
  3866 ;;      Totals:        14       0       0       0       0       0       0
  3867 ;;Total ram usage:       14 bytes
  3868 ;; Hardware stack levels used: 1
  3869 ;; Hardware stack levels required when called: 1
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_pick_and_place
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text14
  3878  001A8C                     __ptext14:
  3879                           	callstack 0
  3880  001A8C                     ___xxtofl:
  3881                           	callstack 0
  3882  001A8C  FFFF               	dw	65535	; assembler added errata NOP
  3883                           
  3884                           ;incstack = 0
  3885                           ;___xxtofl@sign stored from wreg
  3886  001A8E  6E10               	movwf	___xxtofl@sign^0,c
  3887  001A90  5010               	movf	___xxtofl@sign^0,w,c
  3888  001A92  B4D8               	btfsc	status,2,c
  3889  001A94  EF4E  F00D         	goto	u4201
  3890  001A98  EF51  F00D         	goto	u4200
  3891  001A9C                     u4201:
  3892  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  3893  001A9E  EF76  F00D         	goto	l1025
  3894  001AA2                     u4200:
  3895  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  3896  001AA4  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  3897  001AA6  EF5A  F00D         	goto	u4210
  3898  001AAA  EF57  F00D         	goto	u4211
  3899  001AAE                     u4211:
  3900  001AAE  FFFF               	dw	65535	; assembler added errata NOP
  3901  001AB0  EF76  F00D         	goto	l1025
  3902  001AB4                     u4210:
  3903  001AB4  FFFF               	dw	65535	; assembler added errata NOP
  3904  001AB6  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  3905  001ABA  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  3906  001ABE  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  3907  001AC2  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  3908  001AC6  1E0C               	comf	??___xxtofl^0,f,c
  3909  001AC8  1E0D               	comf	(??___xxtofl+1)^0,f,c
  3910  001ACA  1E0E               	comf	(??___xxtofl+2)^0,f,c
  3911  001ACC  1E0F               	comf	(??___xxtofl+3)^0,f,c
  3912  001ACE  2A0C               	incf	??___xxtofl^0,f,c
  3913  001AD0  0E00               	movlw	0
  3914  001AD2  220D               	addwfc	(??___xxtofl+1)^0,f,c
  3915  001AD4  220E               	addwfc	(??___xxtofl+2)^0,f,c
  3916  001AD6  220F               	addwfc	(??___xxtofl+3)^0,f,c
  3917  001AD8  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  3918  001ADC  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  3919  001AE0  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  3920  001AE4  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  3921  001AE8  EF7F  F00D         	goto	l4117
  3922  001AEC                     l1025:
  3923  001AEC  FFFF               	dw	65535	; assembler added errata NOP
  3924  001AEE  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  3925  001AF2  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3926  001AF6  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3927  001AFA  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3928  001AFE                     l4117:
  3929  001AFE  FFFF               	dw	65535	; assembler added errata NOP
  3930  001B00  5008               	movf	___xxtofl@val^0,w,c
  3931  001B02  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  3932  001B04  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  3933  001B06  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  3934  001B08  A4D8               	btfss	status,2,c
  3935  001B0A  EF89  F00D         	goto	u4221
  3936  001B0E  EF8C  F00D         	goto	u4220
  3937  001B12                     u4221:
  3938  001B12  FFFF               	dw	65535	; assembler added errata NOP
  3939  001B14  EF97  F00D         	goto	l4123
  3940  001B18                     u4220:
  3941  001B18  FFFF               	dw	65535	; assembler added errata NOP
  3942  001B1A  0E00               	movlw	0
  3943  001B1C  6E08               	movwf	?___xxtofl^0,c
  3944  001B1E  0E00               	movlw	0
  3945  001B20  6E09               	movwf	(?___xxtofl+1)^0,c
  3946  001B22  0E00               	movlw	0
  3947  001B24  6E0A               	movwf	(?___xxtofl+2)^0,c
  3948  001B26  0E00               	movlw	0
  3949  001B28  6E0B               	movwf	(?___xxtofl+3)^0,c
  3950  001B2A  EF3F  F00E         	goto	l1028
  3951  001B2E                     l4123:
  3952  001B2E  FFFF               	dw	65535	; assembler added errata NOP
  3953  001B30  0E96               	movlw	150
  3954  001B32  6E11               	movwf	___xxtofl@exp^0,c
  3955  001B34  EFA3  F00D         	goto	l4127
  3956  001B38                     l4125:
  3957  001B38  FFFF               	dw	65535	; assembler added errata NOP
  3958  001B3A  2A11               	incf	___xxtofl@exp^0,f,c
  3959  001B3C  90D8               	bcf	status,0,c
  3960  001B3E  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  3961  001B40  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  3962  001B42  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  3963  001B44  3212               	rrcf	___xxtofl@arg^0,f,c
  3964  001B46                     l4127:
  3965  001B46  FFFF               	dw	65535	; assembler added errata NOP
  3966  001B48  0E00               	movlw	0
  3967  001B4A  1412               	andwf	___xxtofl@arg^0,w,c
  3968  001B4C  6E0C               	movwf	??___xxtofl^0,c
  3969  001B4E  0E00               	movlw	0
  3970  001B50  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  3971  001B52  6E0D               	movwf	(??___xxtofl+1)^0,c
  3972  001B54  0E00               	movlw	0
  3973  001B56  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  3974  001B58  6E0E               	movwf	(??___xxtofl+2)^0,c
  3975  001B5A  0EFE               	movlw	254
  3976  001B5C  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  3977  001B5E  6E0F               	movwf	(??___xxtofl+3)^0,c
  3978  001B60  500C               	movf	??___xxtofl^0,w,c
  3979  001B62  100D               	iorwf	(??___xxtofl+1)^0,w,c
  3980  001B64  100E               	iorwf	(??___xxtofl+2)^0,w,c
  3981  001B66  100F               	iorwf	(??___xxtofl+3)^0,w,c
  3982  001B68  A4D8               	btfss	status,2,c
  3983  001B6A  EFB9  F00D         	goto	u4231
  3984  001B6E  EFBC  F00D         	goto	u4230
  3985  001B72                     u4231:
  3986  001B72  FFFF               	dw	65535	; assembler added errata NOP
  3987  001B74  EF9C  F00D         	goto	l4125
  3988  001B78                     u4230:
  3989  001B78  FFFF               	dw	65535	; assembler added errata NOP
  3990  001B7A  EFCC  F00D         	goto	l1032
  3991  001B7E                     l4129:
  3992  001B7E  FFFF               	dw	65535	; assembler added errata NOP
  3993  001B80  2A11               	incf	___xxtofl@exp^0,f,c
  3994  001B82  0E01               	movlw	1
  3995  001B84  2612               	addwf	___xxtofl@arg^0,f,c
  3996  001B86  0E00               	movlw	0
  3997  001B88  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  3998  001B8A  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  3999  001B8C  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  4000  001B8E  90D8               	bcf	status,0,c
  4001  001B90  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  4002  001B92  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  4003  001B94  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  4004  001B96  3212               	rrcf	___xxtofl@arg^0,f,c
  4005  001B98                     l1032:
  4006  001B98  FFFF               	dw	65535	; assembler added errata NOP
  4007  001B9A  0E00               	movlw	0
  4008  001B9C  1412               	andwf	___xxtofl@arg^0,w,c
  4009  001B9E  6E0C               	movwf	??___xxtofl^0,c
  4010  001BA0  0E00               	movlw	0
  4011  001BA2  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  4012  001BA4  6E0D               	movwf	(??___xxtofl+1)^0,c
  4013  001BA6  0E00               	movlw	0
  4014  001BA8  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  4015  001BAA  6E0E               	movwf	(??___xxtofl+2)^0,c
  4016  001BAC  0EFF               	movlw	255
  4017  001BAE  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  4018  001BB0  6E0F               	movwf	(??___xxtofl+3)^0,c
  4019  001BB2  500C               	movf	??___xxtofl^0,w,c
  4020  001BB4  100D               	iorwf	(??___xxtofl+1)^0,w,c
  4021  001BB6  100E               	iorwf	(??___xxtofl+2)^0,w,c
  4022  001BB8  100F               	iorwf	(??___xxtofl+3)^0,w,c
  4023  001BBA  A4D8               	btfss	status,2,c
  4024  001BBC  EFE2  F00D         	goto	u4241
  4025  001BC0  EFE5  F00D         	goto	u4240
  4026  001BC4                     u4241:
  4027  001BC4  FFFF               	dw	65535	; assembler added errata NOP
  4028  001BC6  EFBF  F00D         	goto	l4129
  4029  001BCA                     u4240:
  4030  001BCA  FFFF               	dw	65535	; assembler added errata NOP
  4031  001BCC  EFEF  F00D         	goto	l4137
  4032  001BD0                     l4135:
  4033  001BD0  FFFF               	dw	65535	; assembler added errata NOP
  4034  001BD2  0611               	decf	___xxtofl@exp^0,f,c
  4035  001BD4  90D8               	bcf	status,0,c
  4036  001BD6  3612               	rlcf	___xxtofl@arg^0,f,c
  4037  001BD8  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  4038  001BDA  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  4039  001BDC  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  4040  001BDE                     l4137:
  4041  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  4042  001BE0  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  4043  001BE2  EFF5  F00D         	goto	u4251
  4044  001BE6  EFF8  F00D         	goto	u4250
  4045  001BEA                     u4251:
  4046  001BEA  FFFF               	dw	65535	; assembler added errata NOP
  4047  001BEC  EF02  F00E         	goto	l1039
  4048  001BF0                     u4250:
  4049  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  4050  001BF2  0E02               	movlw	2
  4051  001BF4  6011               	cpfslt	___xxtofl@exp^0,c
  4052  001BF6  EFFF  F00D         	goto	u4261
  4053  001BFA  EF02  F00E         	goto	u4260
  4054  001BFE                     u4261:
  4055  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  4056  001C00  EFE8  F00D         	goto	l4135
  4057  001C04                     u4260:
  4058  001C04                     l1039:
  4059  001C04  FFFF               	dw	65535	; assembler added errata NOP
  4060  001C06  B011               	btfsc	___xxtofl@exp^0,0,c
  4061  001C08  EF08  F00E         	goto	u4271
  4062  001C0C  EF0B  F00E         	goto	u4270
  4063  001C10                     u4271:
  4064  001C10  FFFF               	dw	65535	; assembler added errata NOP
  4065  001C12  EF0D  F00E         	goto	l4143
  4066  001C16                     u4270:
  4067  001C16  FFFF               	dw	65535	; assembler added errata NOP
  4068  001C18  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  4069  001C1A                     l4143:
  4070  001C1A  FFFF               	dw	65535	; assembler added errata NOP
  4071  001C1C  90D8               	bcf	status,0,c
  4072  001C1E  3211               	rrcf	___xxtofl@exp^0,f,c
  4073  001C20  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  4074  001C24  6A0D               	clrf	(??___xxtofl+1)^0,c
  4075  001C26  6A0E               	clrf	(??___xxtofl+2)^0,c
  4076  001C28  6A0F               	clrf	(??___xxtofl+3)^0,c
  4077  001C2A  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  4078  001C2E  6A0E               	clrf	(??___xxtofl+2)^0,c
  4079  001C30  6A0D               	clrf	(??___xxtofl+1)^0,c
  4080  001C32  6A0C               	clrf	??___xxtofl^0,c
  4081  001C34  500C               	movf	??___xxtofl^0,w,c
  4082  001C36  1212               	iorwf	___xxtofl@arg^0,f,c
  4083  001C38  500D               	movf	(??___xxtofl+1)^0,w,c
  4084  001C3A  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  4085  001C3C  500E               	movf	(??___xxtofl+2)^0,w,c
  4086  001C3E  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  4087  001C40  500F               	movf	(??___xxtofl+3)^0,w,c
  4088  001C42  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  4089  001C44  5010               	movf	___xxtofl@sign^0,w,c
  4090  001C46  B4D8               	btfsc	status,2,c
  4091  001C48  EF28  F00E         	goto	u4281
  4092  001C4C  EF2B  F00E         	goto	u4280
  4093  001C50                     u4281:
  4094  001C50  FFFF               	dw	65535	; assembler added errata NOP
  4095  001C52  EF36  F00E         	goto	l4153
  4096  001C56                     u4280:
  4097  001C56  FFFF               	dw	65535	; assembler added errata NOP
  4098  001C58  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  4099  001C5A  EF34  F00E         	goto	u4290
  4100  001C5E  EF31  F00E         	goto	u4291
  4101  001C62                     u4291:
  4102  001C62  FFFF               	dw	65535	; assembler added errata NOP
  4103  001C64  EF36  F00E         	goto	l4153
  4104  001C68                     u4290:
  4105  001C68  FFFF               	dw	65535	; assembler added errata NOP
  4106  001C6A  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  4107  001C6C                     l4153:
  4108  001C6C  FFFF               	dw	65535	; assembler added errata NOP
  4109  001C6E  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  4110  001C72  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  4111  001C76  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  4112  001C7A  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  4113  001C7E                     l1028:
  4114  001C7E  FFFF               	dw	65535	; assembler added errata NOP
  4115  001C80  0012               	return		;funcret
  4116  001C82  FFFF               	dw	65535	; errata NOP
  4117  001C84                     __end_of___xxtofl:
  4118                           	callstack 0
  4119                           
  4120 ;; *************** function ___fldiv *****************
  4121 ;; Defined at:
  4122 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  b               4   21[COMRAM] unsigned char 
  4125 ;;  a               4   25[COMRAM] unsigned char 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  grs             4   40[COMRAM] unsigned long 
  4128 ;;  rem             4   33[COMRAM] unsigned long 
  4129 ;;  new_exp         2   38[COMRAM] short 
  4130 ;;  aexp            1   45[COMRAM] unsigned char 
  4131 ;;  bexp            1   44[COMRAM] unsigned char 
  4132 ;;  sign            1   37[COMRAM] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  4   21[COMRAM] unsigned char 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4142 ;;      Params:         8       0       0       0       0       0       0
  4143 ;;      Locals:        13       0       0       0       0       0       0
  4144 ;;      Temps:          4       0       0       0       0       0       0
  4145 ;;      Totals:        25       0       0       0       0       0       0
  4146 ;;Total ram usage:       25 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; Hardware stack levels required when called: 1
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_pick_and_place
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text15
  4157  001072                     __ptext15:
  4158                           	callstack 0
  4159  001072                     ___fldiv:
  4160                           	callstack 0
  4161  001072  FFFF               	dw	65535	; assembler added errata NOP
  4162  001074  5019               	movf	(___fldiv@b+3)^0,w,c
  4163  001076  0B80               	andlw	128
  4164  001078  6E26               	movwf	___fldiv@sign^0,c
  4165  00107A  5019               	movf	(___fldiv@b+3)^0,w,c
  4166  00107C  2419               	addwf	(___fldiv@b+3)^0,w,c
  4167  00107E  6E2D               	movwf	___fldiv@bexp^0,c
  4168  001080  AE18               	btfss	(___fldiv@b+2)^0,7,c
  4169  001082  EF45  F008         	goto	u3921
  4170  001086  EF48  F008         	goto	u3920
  4171  00108A                     u3921:
  4172  00108A  FFFF               	dw	65535	; assembler added errata NOP
  4173  00108C  EF4A  F008         	goto	l3957
  4174  001090                     u3920:
  4175  001090  FFFF               	dw	65535	; assembler added errata NOP
  4176  001092  802D               	bsf	___fldiv@bexp^0,0,c
  4177  001094                     l3957:
  4178  001094  FFFF               	dw	65535	; assembler added errata NOP
  4179  001096  502D               	movf	___fldiv@bexp^0,w,c
  4180  001098  B4D8               	btfsc	status,2,c
  4181  00109A  EF51  F008         	goto	u3931
  4182  00109E  EF54  F008         	goto	u3930
  4183  0010A2                     u3931:
  4184  0010A2  FFFF               	dw	65535	; assembler added errata NOP
  4185  0010A4  EF6D  F008         	goto	l3967
  4186  0010A8                     u3930:
  4187  0010A8  FFFF               	dw	65535	; assembler added errata NOP
  4188  0010AA  282D               	incf	___fldiv@bexp^0,w,c
  4189  0010AC  A4D8               	btfss	status,2,c
  4190  0010AE  EF5B  F008         	goto	u3941
  4191  0010B2  EF5E  F008         	goto	u3940
  4192  0010B6                     u3941:
  4193  0010B6  FFFF               	dw	65535	; assembler added errata NOP
  4194  0010B8  EF67  F008         	goto	l3963
  4195  0010BC                     u3940:
  4196  0010BC  FFFF               	dw	65535	; assembler added errata NOP
  4197  0010BE  0E00               	movlw	0
  4198  0010C0  6E16               	movwf	___fldiv@b^0,c
  4199  0010C2  0E00               	movlw	0
  4200  0010C4  6E17               	movwf	(___fldiv@b+1)^0,c
  4201  0010C6  0E00               	movlw	0
  4202  0010C8  6E18               	movwf	(___fldiv@b+2)^0,c
  4203  0010CA  0E00               	movlw	0
  4204  0010CC  6E19               	movwf	(___fldiv@b+3)^0,c
  4205  0010CE                     l3963:
  4206  0010CE  FFFF               	dw	65535	; assembler added errata NOP
  4207  0010D0  8E18               	bsf	(___fldiv@b+2)^0,7,c
  4208  0010D2  0E00               	movlw	0
  4209  0010D4  6E19               	movwf	(___fldiv@b+3)^0,c
  4210  0010D6  EF76  F008         	goto	l3969
  4211  0010DA                     l3967:
  4212  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  4213  0010DC  0E00               	movlw	0
  4214  0010DE  6E16               	movwf	___fldiv@b^0,c
  4215  0010E0  0E00               	movlw	0
  4216  0010E2  6E17               	movwf	(___fldiv@b+1)^0,c
  4217  0010E4  0E00               	movlw	0
  4218  0010E6  6E18               	movwf	(___fldiv@b+2)^0,c
  4219  0010E8  0E00               	movlw	0
  4220  0010EA  6E19               	movwf	(___fldiv@b+3)^0,c
  4221  0010EC                     l3969:
  4222  0010EC  FFFF               	dw	65535	; assembler added errata NOP
  4223  0010EE  501D               	movf	(___fldiv@a+3)^0,w,c
  4224  0010F0  0B80               	andlw	128
  4225  0010F2  1A26               	xorwf	___fldiv@sign^0,f,c
  4226  0010F4  501D               	movf	(___fldiv@a+3)^0,w,c
  4227  0010F6  241D               	addwf	(___fldiv@a+3)^0,w,c
  4228  0010F8  6E2E               	movwf	___fldiv@aexp^0,c
  4229  0010FA  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  4230  0010FC  EF82  F008         	goto	u3951
  4231  001100  EF85  F008         	goto	u3950
  4232  001104                     u3951:
  4233  001104  FFFF               	dw	65535	; assembler added errata NOP
  4234  001106  EF87  F008         	goto	l3977
  4235  00110A                     u3950:
  4236  00110A  FFFF               	dw	65535	; assembler added errata NOP
  4237  00110C  802E               	bsf	___fldiv@aexp^0,0,c
  4238  00110E                     l3977:
  4239  00110E  FFFF               	dw	65535	; assembler added errata NOP
  4240  001110  502E               	movf	___fldiv@aexp^0,w,c
  4241  001112  B4D8               	btfsc	status,2,c
  4242  001114  EF8E  F008         	goto	u3961
  4243  001118  EF91  F008         	goto	u3960
  4244  00111C                     u3961:
  4245  00111C  FFFF               	dw	65535	; assembler added errata NOP
  4246  00111E  EFAA  F008         	goto	l3987
  4247  001122                     u3960:
  4248  001122  FFFF               	dw	65535	; assembler added errata NOP
  4249  001124  282E               	incf	___fldiv@aexp^0,w,c
  4250  001126  A4D8               	btfss	status,2,c
  4251  001128  EF98  F008         	goto	u3971
  4252  00112C  EF9B  F008         	goto	u3970
  4253  001130                     u3971:
  4254  001130  FFFF               	dw	65535	; assembler added errata NOP
  4255  001132  EFA4  F008         	goto	l3983
  4256  001136                     u3970:
  4257  001136  FFFF               	dw	65535	; assembler added errata NOP
  4258  001138  0E00               	movlw	0
  4259  00113A  6E1A               	movwf	___fldiv@a^0,c
  4260  00113C  0E00               	movlw	0
  4261  00113E  6E1B               	movwf	(___fldiv@a+1)^0,c
  4262  001140  0E00               	movlw	0
  4263  001142  6E1C               	movwf	(___fldiv@a+2)^0,c
  4264  001144  0E00               	movlw	0
  4265  001146  6E1D               	movwf	(___fldiv@a+3)^0,c
  4266  001148                     l3983:
  4267  001148  FFFF               	dw	65535	; assembler added errata NOP
  4268  00114A  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  4269  00114C  0E00               	movlw	0
  4270  00114E  6E1D               	movwf	(___fldiv@a+3)^0,c
  4271  001150  EFB3  F008         	goto	l3989
  4272  001154                     l3987:
  4273  001154  FFFF               	dw	65535	; assembler added errata NOP
  4274  001156  0E00               	movlw	0
  4275  001158  6E1A               	movwf	___fldiv@a^0,c
  4276  00115A  0E00               	movlw	0
  4277  00115C  6E1B               	movwf	(___fldiv@a+1)^0,c
  4278  00115E  0E00               	movlw	0
  4279  001160  6E1C               	movwf	(___fldiv@a+2)^0,c
  4280  001162  0E00               	movlw	0
  4281  001164  6E1D               	movwf	(___fldiv@a+3)^0,c
  4282  001166                     l3989:
  4283  001166  FFFF               	dw	65535	; assembler added errata NOP
  4284  001168  501A               	movf	___fldiv@a^0,w,c
  4285  00116A  101B               	iorwf	(___fldiv@a+1)^0,w,c
  4286  00116C  101C               	iorwf	(___fldiv@a+2)^0,w,c
  4287  00116E  101D               	iorwf	(___fldiv@a+3)^0,w,c
  4288  001170  A4D8               	btfss	status,2,c
  4289  001172  EFBD  F008         	goto	u3981
  4290  001176  EFC0  F008         	goto	u3980
  4291  00117A                     u3981:
  4292  00117A  FFFF               	dw	65535	; assembler added errata NOP
  4293  00117C  EFDA  F008         	goto	l4001
  4294  001180                     u3980:
  4295  001180  FFFF               	dw	65535	; assembler added errata NOP
  4296  001182  0E00               	movlw	0
  4297  001184  6E16               	movwf	___fldiv@b^0,c
  4298  001186  0E00               	movlw	0
  4299  001188  6E17               	movwf	(___fldiv@b+1)^0,c
  4300  00118A  0E00               	movlw	0
  4301  00118C  6E18               	movwf	(___fldiv@b+2)^0,c
  4302  00118E  0E00               	movlw	0
  4303  001190  6E19               	movwf	(___fldiv@b+3)^0,c
  4304  001192  0E80               	movlw	128
  4305  001194  1218               	iorwf	(___fldiv@b+2)^0,f,c
  4306  001196  0E7F               	movlw	127
  4307  001198  1219               	iorwf	(___fldiv@b+3)^0,f,c
  4308  00119A                     l3995:
  4309  00119A  FFFF               	dw	65535	; assembler added errata NOP
  4310  00119C  5026               	movf	___fldiv@sign^0,w,c
  4311  00119E  1219               	iorwf	(___fldiv@b+3)^0,f,c
  4312  0011A0  C016  F016         	movff	___fldiv@b,?___fldiv
  4313  0011A4  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  4314  0011A8  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  4315  0011AC  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  4316  0011B0  EF4F  F00A         	goto	l952
  4317  0011B4                     l4001:
  4318  0011B4  FFFF               	dw	65535	; assembler added errata NOP
  4319  0011B6  502D               	movf	___fldiv@bexp^0,w,c
  4320  0011B8  A4D8               	btfss	status,2,c
  4321  0011BA  EFE1  F008         	goto	u3991
  4322  0011BE  EFE4  F008         	goto	u3990
  4323  0011C2                     u3991:
  4324  0011C2  FFFF               	dw	65535	; assembler added errata NOP
  4325  0011C4  EFEF  F008         	goto	l4009
  4326  0011C8                     u3990:
  4327  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  4328  0011CA  0E00               	movlw	0
  4329  0011CC  6E16               	movwf	?___fldiv^0,c
  4330  0011CE  0E00               	movlw	0
  4331  0011D0  6E17               	movwf	(?___fldiv+1)^0,c
  4332  0011D2  0E00               	movlw	0
  4333  0011D4  6E18               	movwf	(?___fldiv+2)^0,c
  4334  0011D6  0E00               	movlw	0
  4335  0011D8  6E19               	movwf	(?___fldiv+3)^0,c
  4336  0011DA  EF4F  F00A         	goto	l952
  4337  0011DE                     l4009:
  4338  0011DE  FFFF               	dw	65535	; assembler added errata NOP
  4339  0011E0  502E               	movf	___fldiv@aexp^0,w,c
  4340  0011E2  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  4341  0011E6  6A1F               	clrf	(??___fldiv+1)^0,c
  4342  0011E8  5E1E               	subwf	??___fldiv^0,f,c
  4343  0011EA  0E00               	movlw	0
  4344  0011EC  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  4345  0011EE  0E7F               	movlw	127
  4346  0011F0  241E               	addwf	??___fldiv^0,w,c
  4347  0011F2  6E27               	movwf	___fldiv@new_exp^0,c
  4348  0011F4  0E00               	movlw	0
  4349  0011F6  201F               	addwfc	(??___fldiv+1)^0,w,c
  4350  0011F8  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4351  0011FA  C016  F022         	movff	___fldiv@b,___fldiv@rem
  4352  0011FE  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  4353  001202  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  4354  001206  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  4355  00120A  0E00               	movlw	0
  4356  00120C  6E16               	movwf	___fldiv@b^0,c
  4357  00120E  0E00               	movlw	0
  4358  001210  6E17               	movwf	(___fldiv@b+1)^0,c
  4359  001212  0E00               	movlw	0
  4360  001214  6E18               	movwf	(___fldiv@b+2)^0,c
  4361  001216  0E00               	movlw	0
  4362  001218  6E19               	movwf	(___fldiv@b+3)^0,c
  4363  00121A  0E00               	movlw	0
  4364  00121C  6E29               	movwf	___fldiv@grs^0,c
  4365  00121E  0E00               	movlw	0
  4366  001220  6E2A               	movwf	(___fldiv@grs+1)^0,c
  4367  001222  0E00               	movlw	0
  4368  001224  6E2B               	movwf	(___fldiv@grs+2)^0,c
  4369  001226  0E00               	movlw	0
  4370  001228  6E2C               	movwf	(___fldiv@grs+3)^0,c
  4371  00122A  0E00               	movlw	0
  4372  00122C  6E2E               	movwf	___fldiv@aexp^0,c
  4373  00122E  EF5B  F009         	goto	l954
  4374  001232                     l4019:
  4375  001232  FFFF               	dw	65535	; assembler added errata NOP
  4376  001234  502E               	movf	___fldiv@aexp^0,w,c
  4377  001236  B4D8               	btfsc	status,2,c
  4378  001238  EF20  F009         	goto	u4001
  4379  00123C  EF23  F009         	goto	u4000
  4380  001240                     u4001:
  4381  001240  FFFF               	dw	65535	; assembler added errata NOP
  4382  001242  EF3E  F009         	goto	l4027
  4383  001246                     u4000:
  4384  001246  FFFF               	dw	65535	; assembler added errata NOP
  4385  001248  90D8               	bcf	status,0,c
  4386  00124A  3622               	rlcf	___fldiv@rem^0,f,c
  4387  00124C  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  4388  00124E  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  4389  001250  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  4390  001252  90D8               	bcf	status,0,c
  4391  001254  3616               	rlcf	___fldiv@b^0,f,c
  4392  001256  3617               	rlcf	(___fldiv@b+1)^0,f,c
  4393  001258  3618               	rlcf	(___fldiv@b+2)^0,f,c
  4394  00125A  3619               	rlcf	(___fldiv@b+3)^0,f,c
  4395  00125C  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  4396  00125E  EF33  F009         	goto	u4011
  4397  001262  EF36  F009         	goto	u4010
  4398  001266                     u4011:
  4399  001266  FFFF               	dw	65535	; assembler added errata NOP
  4400  001268  EF38  F009         	goto	l957
  4401  00126C                     u4010:
  4402  00126C  FFFF               	dw	65535	; assembler added errata NOP
  4403  00126E  8016               	bsf	___fldiv@b^0,0,c
  4404  001270                     l957:
  4405  001270  FFFF               	dw	65535	; assembler added errata NOP
  4406  001272  90D8               	bcf	status,0,c
  4407  001274  3629               	rlcf	___fldiv@grs^0,f,c
  4408  001276  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  4409  001278  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  4410  00127A  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  4411  00127C                     l4027:
  4412  00127C  FFFF               	dw	65535	; assembler added errata NOP
  4413  00127E  501A               	movf	___fldiv@a^0,w,c
  4414  001280  5C22               	subwf	___fldiv@rem^0,w,c
  4415  001282  501B               	movf	(___fldiv@a+1)^0,w,c
  4416  001284  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  4417  001286  501C               	movf	(___fldiv@a+2)^0,w,c
  4418  001288  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  4419  00128A  501D               	movf	(___fldiv@a+3)^0,w,c
  4420  00128C  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  4421  00128E  A0D8               	btfss	status,0,c
  4422  001290  EF4C  F009         	goto	u4021
  4423  001294  EF4F  F009         	goto	u4020
  4424  001298                     u4021:
  4425  001298  FFFF               	dw	65535	; assembler added errata NOP
  4426  00129A  EF59  F009         	goto	l4033
  4427  00129E                     u4020:
  4428  00129E  FFFF               	dw	65535	; assembler added errata NOP
  4429  0012A0  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  4430  0012A2  501A               	movf	___fldiv@a^0,w,c
  4431  0012A4  5E22               	subwf	___fldiv@rem^0,f,c
  4432  0012A6  501B               	movf	(___fldiv@a+1)^0,w,c
  4433  0012A8  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  4434  0012AA  501C               	movf	(___fldiv@a+2)^0,w,c
  4435  0012AC  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  4436  0012AE  501D               	movf	(___fldiv@a+3)^0,w,c
  4437  0012B0  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  4438  0012B2                     l4033:
  4439  0012B2  FFFF               	dw	65535	; assembler added errata NOP
  4440  0012B4  2A2E               	incf	___fldiv@aexp^0,f,c
  4441  0012B6                     l954:
  4442  0012B6  FFFF               	dw	65535	; assembler added errata NOP
  4443  0012B8  0E19               	movlw	25
  4444  0012BA  642E               	cpfsgt	___fldiv@aexp^0,c
  4445  0012BC  EF62  F009         	goto	u4031
  4446  0012C0  EF65  F009         	goto	u4030
  4447  0012C4                     u4031:
  4448  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  4449  0012C6  EF19  F009         	goto	l4019
  4450  0012CA                     u4030:
  4451  0012CA  FFFF               	dw	65535	; assembler added errata NOP
  4452  0012CC  5022               	movf	___fldiv@rem^0,w,c
  4453  0012CE  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  4454  0012D0  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  4455  0012D2  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  4456  0012D4  B4D8               	btfsc	status,2,c
  4457  0012D6  EF6F  F009         	goto	u4041
  4458  0012DA  EF72  F009         	goto	u4040
  4459  0012DE                     u4041:
  4460  0012DE  FFFF               	dw	65535	; assembler added errata NOP
  4461  0012E0  EF8F  F009         	goto	l4045
  4462  0012E4                     u4040:
  4463  0012E4  FFFF               	dw	65535	; assembler added errata NOP
  4464  0012E6  8029               	bsf	___fldiv@grs^0,0,c
  4465  0012E8  EF8F  F009         	goto	l4045
  4466  0012EC                     l4039:
  4467  0012EC  FFFF               	dw	65535	; assembler added errata NOP
  4468  0012EE  90D8               	bcf	status,0,c
  4469  0012F0  3616               	rlcf	___fldiv@b^0,f,c
  4470  0012F2  3617               	rlcf	(___fldiv@b+1)^0,f,c
  4471  0012F4  3618               	rlcf	(___fldiv@b+2)^0,f,c
  4472  0012F6  3619               	rlcf	(___fldiv@b+3)^0,f,c
  4473  0012F8  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  4474  0012FA  EF81  F009         	goto	u4051
  4475  0012FE  EF84  F009         	goto	u4050
  4476  001302                     u4051:
  4477  001302  FFFF               	dw	65535	; assembler added errata NOP
  4478  001304  EF86  F009         	goto	l963
  4479  001308                     u4050:
  4480  001308  FFFF               	dw	65535	; assembler added errata NOP
  4481  00130A  8016               	bsf	___fldiv@b^0,0,c
  4482  00130C                     l963:
  4483  00130C  FFFF               	dw	65535	; assembler added errata NOP
  4484  00130E  90D8               	bcf	status,0,c
  4485  001310  3629               	rlcf	___fldiv@grs^0,f,c
  4486  001312  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  4487  001314  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  4488  001316  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  4489  001318  0627               	decf	___fldiv@new_exp^0,f,c
  4490  00131A  A0D8               	btfss	status,0,c
  4491  00131C  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  4492  00131E                     l4045:
  4493  00131E  FFFF               	dw	65535	; assembler added errata NOP
  4494  001320  AE18               	btfss	(___fldiv@b+2)^0,7,c
  4495  001322  EF95  F009         	goto	u4061
  4496  001326  EF98  F009         	goto	u4060
  4497  00132A                     u4061:
  4498  00132A  FFFF               	dw	65535	; assembler added errata NOP
  4499  00132C  EF76  F009         	goto	l4039
  4500  001330                     u4060:
  4501  001330  FFFF               	dw	65535	; assembler added errata NOP
  4502  001332  0E00               	movlw	0
  4503  001334  6E2E               	movwf	___fldiv@aexp^0,c
  4504  001336  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  4505  001338  EFA0  F009         	goto	u4071
  4506  00133C  EFA3  F009         	goto	u4070
  4507  001340                     u4071:
  4508  001340  FFFF               	dw	65535	; assembler added errata NOP
  4509  001342  EFCE  F009         	goto	l965
  4510  001346                     u4070:
  4511  001346  FFFF               	dw	65535	; assembler added errata NOP
  4512  001348  0EFF               	movlw	255
  4513  00134A  1429               	andwf	___fldiv@grs^0,w,c
  4514  00134C  6E1E               	movwf	??___fldiv^0,c
  4515  00134E  0EFF               	movlw	255
  4516  001350  142A               	andwf	(___fldiv@grs+1)^0,w,c
  4517  001352  6E1F               	movwf	(??___fldiv+1)^0,c
  4518  001354  0EFF               	movlw	255
  4519  001356  142B               	andwf	(___fldiv@grs+2)^0,w,c
  4520  001358  6E20               	movwf	(??___fldiv+2)^0,c
  4521  00135A  0E7F               	movlw	127
  4522  00135C  142C               	andwf	(___fldiv@grs+3)^0,w,c
  4523  00135E  6E21               	movwf	(??___fldiv+3)^0,c
  4524  001360  501E               	movf	??___fldiv^0,w,c
  4525  001362  101F               	iorwf	(??___fldiv+1)^0,w,c
  4526  001364  1020               	iorwf	(??___fldiv+2)^0,w,c
  4527  001366  1021               	iorwf	(??___fldiv+3)^0,w,c
  4528  001368  B4D8               	btfsc	status,2,c
  4529  00136A  EFB9  F009         	goto	u4081
  4530  00136E  EFBC  F009         	goto	u4080
  4531  001372                     u4081:
  4532  001372  FFFF               	dw	65535	; assembler added errata NOP
  4533  001374  EFC2  F009         	goto	l966
  4534  001378                     u4080:
  4535  001378  FFFF               	dw	65535	; assembler added errata NOP
  4536  00137A                     l4053:
  4537  00137A  FFFF               	dw	65535	; assembler added errata NOP
  4538  00137C  0E01               	movlw	1
  4539  00137E  6E2E               	movwf	___fldiv@aexp^0,c
  4540  001380  EFCE  F009         	goto	l965
  4541  001384                     l966:
  4542  001384  FFFF               	dw	65535	; assembler added errata NOP
  4543  001386  A016               	btfss	___fldiv@b^0,0,c
  4544  001388  EFC8  F009         	goto	u4091
  4545  00138C  EFCB  F009         	goto	u4090
  4546  001390                     u4091:
  4547  001390  FFFF               	dw	65535	; assembler added errata NOP
  4548  001392  EFCE  F009         	goto	l965
  4549  001396                     u4090:
  4550  001396  FFFF               	dw	65535	; assembler added errata NOP
  4551  001398  EFBD  F009         	goto	l4053
  4552  00139C                     l965:
  4553  00139C  FFFF               	dw	65535	; assembler added errata NOP
  4554  00139E  502E               	movf	___fldiv@aexp^0,w,c
  4555  0013A0  B4D8               	btfsc	status,2,c
  4556  0013A2  EFD5  F009         	goto	u4101
  4557  0013A6  EFD8  F009         	goto	u4100
  4558  0013AA                     u4101:
  4559  0013AA  FFFF               	dw	65535	; assembler added errata NOP
  4560  0013AC  EFFF  F009         	goto	l4065
  4561  0013B0                     u4100:
  4562  0013B0  FFFF               	dw	65535	; assembler added errata NOP
  4563  0013B2  0E01               	movlw	1
  4564  0013B4  2616               	addwf	___fldiv@b^0,f,c
  4565  0013B6  0E00               	movlw	0
  4566  0013B8  2217               	addwfc	(___fldiv@b+1)^0,f,c
  4567  0013BA  2218               	addwfc	(___fldiv@b+2)^0,f,c
  4568  0013BC  2219               	addwfc	(___fldiv@b+3)^0,f,c
  4569  0013BE  A019               	btfss	(___fldiv@b+3)^0,0,c
  4570  0013C0  EFE4  F009         	goto	u4111
  4571  0013C4  EFE7  F009         	goto	u4110
  4572  0013C8                     u4111:
  4573  0013C8  FFFF               	dw	65535	; assembler added errata NOP
  4574  0013CA  EFFF  F009         	goto	l4065
  4575  0013CE                     u4110:
  4576  0013CE  FFFF               	dw	65535	; assembler added errata NOP
  4577  0013D0  C016  F01E         	movff	___fldiv@b,??___fldiv
  4578  0013D4  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  4579  0013D8  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  4580  0013DC  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  4581  0013E0  3421               	rlcf	(??___fldiv+3)^0,w,c
  4582  0013E2  3221               	rrcf	(??___fldiv+3)^0,f,c
  4583  0013E4  3220               	rrcf	(??___fldiv+2)^0,f,c
  4584  0013E6  321F               	rrcf	(??___fldiv+1)^0,f,c
  4585  0013E8  321E               	rrcf	??___fldiv^0,f,c
  4586  0013EA  C01E  F016         	movff	??___fldiv,___fldiv@b
  4587  0013EE  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  4588  0013F2  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  4589  0013F6  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  4590  0013FA  4A27               	infsnz	___fldiv@new_exp^0,f,c
  4591  0013FC  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  4592  0013FE                     l4065:
  4593  0013FE  FFFF               	dw	65535	; assembler added errata NOP
  4594  001400  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4595  001402  EF0B  F00A         	goto	u4121
  4596  001406  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  4597  001408  E109               	bnz	u4120
  4598  00140A  2827               	incf	___fldiv@new_exp^0,w,c
  4599  00140C  A0D8               	btfss	status,0,c
  4600  00140E  EF0B  F00A         	goto	u4121
  4601  001412  EF0E  F00A         	goto	u4120
  4602  001416                     u4121:
  4603  001416  FFFF               	dw	65535	; assembler added errata NOP
  4604  001418  EF1A  F00A         	goto	l4069
  4605  00141C                     u4120:
  4606  00141C  FFFF               	dw	65535	; assembler added errata NOP
  4607  00141E  0E00               	movlw	0
  4608  001420  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4609  001422  6827               	setf	___fldiv@new_exp^0,c
  4610  001424  0E00               	movlw	0
  4611  001426  6E16               	movwf	___fldiv@b^0,c
  4612  001428  0E00               	movlw	0
  4613  00142A  6E17               	movwf	(___fldiv@b+1)^0,c
  4614  00142C  0E00               	movlw	0
  4615  00142E  6E18               	movwf	(___fldiv@b+2)^0,c
  4616  001430  0E00               	movlw	0
  4617  001432  6E19               	movwf	(___fldiv@b+3)^0,c
  4618  001434                     l4069:
  4619  001434  FFFF               	dw	65535	; assembler added errata NOP
  4620  001436  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4621  001438  EF29  F00A         	goto	u4130
  4622  00143C  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  4623  00143E  E106               	bnz	u4131
  4624  001440  0427               	decf	___fldiv@new_exp^0,w,c
  4625  001442  B0D8               	btfsc	status,0,c
  4626  001444  EF26  F00A         	goto	u4131
  4627  001448  EF29  F00A         	goto	u4130
  4628  00144C                     u4131:
  4629  00144C  FFFF               	dw	65535	; assembler added errata NOP
  4630  00144E  EF38  F00A         	goto	l4073
  4631  001452                     u4130:
  4632  001452  FFFF               	dw	65535	; assembler added errata NOP
  4633  001454  0E00               	movlw	0
  4634  001456  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  4635  001458  0E00               	movlw	0
  4636  00145A  6E27               	movwf	___fldiv@new_exp^0,c
  4637  00145C  0E00               	movlw	0
  4638  00145E  6E16               	movwf	___fldiv@b^0,c
  4639  001460  0E00               	movlw	0
  4640  001462  6E17               	movwf	(___fldiv@b+1)^0,c
  4641  001464  0E00               	movlw	0
  4642  001466  6E18               	movwf	(___fldiv@b+2)^0,c
  4643  001468  0E00               	movlw	0
  4644  00146A  6E19               	movwf	(___fldiv@b+3)^0,c
  4645  00146C  0E00               	movlw	0
  4646  00146E  6E26               	movwf	___fldiv@sign^0,c
  4647  001470                     l4073:
  4648  001470  FFFF               	dw	65535	; assembler added errata NOP
  4649  001472  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  4650  001476  A02D               	btfss	___fldiv@bexp^0,0,c
  4651  001478  EF40  F00A         	goto	u4141
  4652  00147C  EF43  F00A         	goto	u4140
  4653  001480                     u4141:
  4654  001480  FFFF               	dw	65535	; assembler added errata NOP
  4655  001482  EF47  F00A         	goto	l4079
  4656  001486                     u4140:
  4657  001486  FFFF               	dw	65535	; assembler added errata NOP
  4658  001488  8E18               	bsf	(___fldiv@b+2)^0,7,c
  4659  00148A  EF49  F00A         	goto	l4081
  4660  00148E                     l4079:
  4661  00148E  FFFF               	dw	65535	; assembler added errata NOP
  4662  001490  9E18               	bcf	(___fldiv@b+2)^0,7,c
  4663  001492                     l4081:
  4664  001492  FFFF               	dw	65535	; assembler added errata NOP
  4665  001494  90D8               	bcf	status,0,c
  4666  001496  302D               	rrcf	___fldiv@bexp^0,w,c
  4667  001498  6E19               	movwf	(___fldiv@b+3)^0,c
  4668  00149A  EFCD  F008         	goto	l3995
  4669  00149E                     l952:
  4670  00149E  FFFF               	dw	65535	; assembler added errata NOP
  4671  0014A0  0012               	return		;funcret
  4672  0014A2  FFFF               	dw	65535	; errata NOP
  4673  0014A4                     __end_of___fldiv:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function _Z_axis_and_Tweezer *****************
  4677 ;; Defined at:
  4678 ;;		line 584 in file "main.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  i               2   16[COMRAM] int 
  4683 ;;  i               2   14[COMRAM] int 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, status,2, status,0, cstack
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4693 ;;      Params:         0       0       0       0       0       0       0
  4694 ;;      Locals:         4       0       0       0       0       0       0
  4695 ;;      Temps:          0       0       0       0       0       0       0
  4696 ;;      Totals:         4       0       0       0       0       0       0
  4697 ;;Total ram usage:        4 bytes
  4698 ;; Hardware stack levels used: 1
  4699 ;; Hardware stack levels required when called: 3
  4700 ;; This function calls:
  4701 ;;		_Z_axis
  4702 ;; This function is called by:
  4703 ;;		_pick_and_place
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           	psect	text16
  4708  0029E2                     __ptext16:
  4709                           	callstack 0
  4710  0029E2                     _Z_axis_and_Tweezer:
  4711                           	callstack 0
  4712  0029E2  FFFF               	dw	65535	; assembler added errata NOP
  4713  0029E4                     
  4714                           ;main.c: 585:      for(int i = 0;i<15; i++){Z_axis(0);}
  4715  0029E4  0E00               	movlw	0
  4716  0029E6  6E10               	movwf	(Z_axis_and_Tweezer@i+1)^0,c
  4717  0029E8  0E00               	movlw	0
  4718  0029EA  6E0F               	movwf	Z_axis_and_Tweezer@i^0,c
  4719  0029EC                     l3927:
  4720  0029EC  FFFF               	dw	65535	; assembler added errata NOP
  4721  0029EE  0E00               	movlw	0
  4722  0029F0  EC25  F012         	call	_Z_axis
  4723  0029F4  4A0F               	infsnz	Z_axis_and_Tweezer@i^0,f,c
  4724  0029F6  2A10               	incf	(Z_axis_and_Tweezer@i+1)^0,f,c
  4725  0029F8  BE10               	btfsc	(Z_axis_and_Tweezer@i+1)^0,7,c
  4726  0029FA  EF08  F015         	goto	u3901
  4727  0029FE  5010               	movf	(Z_axis_and_Tweezer@i+1)^0,w,c
  4728  002A00  E10A               	bnz	u3900
  4729  002A02  0E0F               	movlw	15
  4730  002A04  5C0F               	subwf	Z_axis_and_Tweezer@i^0,w,c
  4731  002A06  A0D8               	btfss	status,0,c
  4732  002A08  EF08  F015         	goto	u3901
  4733  002A0C  EF0B  F015         	goto	u3900
  4734  002A10                     u3901:
  4735  002A10  FFFF               	dw	65535	; assembler added errata NOP
  4736  002A12  EFF6  F014         	goto	l3927
  4737  002A16                     u3900:
  4738  002A16  FFFF               	dw	65535	; assembler added errata NOP
  4739  002A18                     
  4740                           ;main.c: 587:      for(int i = 0; i<15; i++){Z_axis(1);}
  4741  002A18  0E00               	movlw	0
  4742  002A1A  6E12               	movwf	(Z_axis_and_Tweezer@i_611+1)^0,c
  4743  002A1C  0E00               	movlw	0
  4744  002A1E  6E11               	movwf	Z_axis_and_Tweezer@i_611^0,c
  4745  002A20                     l3939:
  4746  002A20  FFFF               	dw	65535	; assembler added errata NOP
  4747  002A22  0E01               	movlw	1
  4748  002A24  EC25  F012         	call	_Z_axis
  4749  002A28  4A11               	infsnz	Z_axis_and_Tweezer@i_611^0,f,c
  4750  002A2A  2A12               	incf	(Z_axis_and_Tweezer@i_611+1)^0,f,c
  4751  002A2C  BE12               	btfsc	(Z_axis_and_Tweezer@i_611+1)^0,7,c
  4752  002A2E  EF22  F015         	goto	u3911
  4753  002A32  5012               	movf	(Z_axis_and_Tweezer@i_611+1)^0,w,c
  4754  002A34  E10A               	bnz	u3910
  4755  002A36  0E0F               	movlw	15
  4756  002A38  5C11               	subwf	Z_axis_and_Tweezer@i_611^0,w,c
  4757  002A3A  A0D8               	btfss	status,0,c
  4758  002A3C  EF22  F015         	goto	u3911
  4759  002A40  EF25  F015         	goto	u3910
  4760  002A44                     u3911:
  4761  002A44  FFFF               	dw	65535	; assembler added errata NOP
  4762  002A46  EF10  F015         	goto	l3939
  4763  002A4A                     u3910:
  4764  002A4A  FFFF               	dw	65535	; assembler added errata NOP
  4765  002A4C  0012               	return		;funcret
  4766  002A4E  FFFF               	dw	65535	; errata NOP
  4767  002A50                     __end_of_Z_axis_and_Tweezer:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function _Z_axis *****************
  4771 ;; Defined at:
  4772 ;;		line 435 in file "main.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  direction       1    wreg     unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  direction       1   13[COMRAM] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0, cstack
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4786 ;;      Params:         0       0       0       0       0       0       0
  4787 ;;      Locals:         1       0       0       0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0       0
  4789 ;;      Totals:         1       0       0       0       0       0       0
  4790 ;;Total ram usage:        1 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; Hardware stack levels required when called: 2
  4793 ;; This function calls:
  4794 ;;		_ms_delay
  4795 ;; This function is called by:
  4796 ;;		_Z_axis_and_Tweezer
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text17
  4801  00244A                     __ptext17:
  4802                           	callstack 0
  4803  00244A                     _Z_axis:
  4804                           	callstack 0
  4805  00244A  FFFF               	dw	65535	; assembler added errata NOP
  4806                           
  4807                           ;incstack = 0
  4808                           ;Z_axis@direction stored from wreg
  4809  00244C  6E0E               	movwf	Z_axis@direction^0,c
  4810  00244E                     
  4811                           ;main.c: 436:     if (direction == 1){
  4812  00244E  040E               	decf	Z_axis@direction^0,w,c
  4813  002450  A4D8               	btfss	status,2,c
  4814  002452  EF2D  F012         	goto	u3791
  4815  002456  EF30  F012         	goto	u3790
  4816  00245A                     u3791:
  4817  00245A  FFFF               	dw	65535	; assembler added errata NOP
  4818  00245C  EF59  F012         	goto	l3773
  4819  002460                     u3790:
  4820  002460  FFFF               	dw	65535	; assembler added errata NOP
  4821  002462                     
  4822                           ;main.c: 437:         PORTD = 0b00000011;
  4823  002462  0E03               	movlw	3
  4824  002464  6E83               	movwf	131,c	;volatile
  4825  002466                     
  4826                           ;main.c: 438:         ms_delay(1);
  4827  002466  0E00               	movlw	0
  4828  002468  6E09               	movwf	(ms_delay@val+1)^0,c
  4829  00246A  0E01               	movlw	1
  4830  00246C  6E08               	movwf	ms_delay@val^0,c
  4831  00246E  EC8B  F015         	call	_ms_delay	;wreg free
  4832  002472                     
  4833                           ;main.c: 439:         PORTD = 0b00000110;
  4834  002472  0E06               	movlw	6
  4835  002474  6E83               	movwf	131,c	;volatile
  4836  002476                     
  4837                           ;main.c: 440:         ms_delay(1);
  4838  002476  0E00               	movlw	0
  4839  002478  6E09               	movwf	(ms_delay@val+1)^0,c
  4840  00247A  0E01               	movlw	1
  4841  00247C  6E08               	movwf	ms_delay@val^0,c
  4842  00247E  EC8B  F015         	call	_ms_delay	;wreg free
  4843  002482                     
  4844                           ;main.c: 441:         PORTD = 0b00001100;
  4845  002482  0E0C               	movlw	12
  4846  002484  6E83               	movwf	131,c	;volatile
  4847  002486                     
  4848                           ;main.c: 442:         ms_delay(1);
  4849  002486  0E00               	movlw	0
  4850  002488  6E09               	movwf	(ms_delay@val+1)^0,c
  4851  00248A  0E01               	movlw	1
  4852  00248C  6E08               	movwf	ms_delay@val^0,c
  4853  00248E  EC8B  F015         	call	_ms_delay	;wreg free
  4854  002492                     
  4855                           ;main.c: 443:         PORTD = 0b00001001;
  4856  002492  0E09               	movlw	9
  4857  002494  6E83               	movwf	131,c	;volatile
  4858  002496                     
  4859                           ;main.c: 444:         ms_delay(1);
  4860  002496  0E00               	movlw	0
  4861  002498  6E09               	movwf	(ms_delay@val+1)^0,c
  4862  00249A  0E01               	movlw	1
  4863  00249C  6E08               	movwf	ms_delay@val^0,c
  4864  00249E  EC8B  F015         	call	_ms_delay	;wreg free
  4865  0024A2                     
  4866                           ;main.c: 445:         PORTD = 0b00000011;
  4867  0024A2  0E03               	movlw	3
  4868  0024A4  6E83               	movwf	131,c	;volatile
  4869  0024A6                     
  4870                           ;main.c: 446:         ms_delay(1);
  4871  0024A6  0E00               	movlw	0
  4872  0024A8  6E09               	movwf	(ms_delay@val+1)^0,c
  4873  0024AA  0E01               	movlw	1
  4874  0024AC  6E08               	movwf	ms_delay@val^0,c
  4875  0024AE  EC8B  F015         	call	_ms_delay	;wreg free
  4876  0024B2                     l3773:
  4877  0024B2  FFFF               	dw	65535	; assembler added errata NOP
  4878                           
  4879                           ;main.c: 448:     if (direction == 0){
  4880  0024B4  500E               	movf	Z_axis@direction^0,w,c
  4881  0024B6  A4D8               	btfss	status,2,c
  4882  0024B8  EF60  F012         	goto	u3801
  4883  0024BC  EF63  F012         	goto	u3800
  4884  0024C0                     u3801:
  4885  0024C0  FFFF               	dw	65535	; assembler added errata NOP
  4886  0024C2  EF8C  F012         	goto	l275
  4887  0024C6                     u3800:
  4888  0024C6  FFFF               	dw	65535	; assembler added errata NOP
  4889  0024C8                     
  4890                           ;main.c: 449:         PORTD = 0b00001001;
  4891  0024C8  0E09               	movlw	9
  4892  0024CA  6E83               	movwf	131,c	;volatile
  4893  0024CC                     
  4894                           ;main.c: 450:         ms_delay(1);
  4895  0024CC  0E00               	movlw	0
  4896  0024CE  6E09               	movwf	(ms_delay@val+1)^0,c
  4897  0024D0  0E01               	movlw	1
  4898  0024D2  6E08               	movwf	ms_delay@val^0,c
  4899  0024D4  EC8B  F015         	call	_ms_delay	;wreg free
  4900  0024D8                     
  4901                           ;main.c: 451:         PORTD = 0b00001100;
  4902  0024D8  0E0C               	movlw	12
  4903  0024DA  6E83               	movwf	131,c	;volatile
  4904                           
  4905                           ;main.c: 452:         ms_delay(1);
  4906  0024DC  0E00               	movlw	0
  4907  0024DE  6E09               	movwf	(ms_delay@val+1)^0,c
  4908  0024E0  0E01               	movlw	1
  4909  0024E2  6E08               	movwf	ms_delay@val^0,c
  4910  0024E4  EC8B  F015         	call	_ms_delay	;wreg free
  4911  0024E8                     
  4912                           ;main.c: 453:         PORTD = 0b00000110;
  4913  0024E8  0E06               	movlw	6
  4914  0024EA  6E83               	movwf	131,c	;volatile
  4915  0024EC                     
  4916                           ;main.c: 454:         ms_delay(1);
  4917  0024EC  0E00               	movlw	0
  4918  0024EE  6E09               	movwf	(ms_delay@val+1)^0,c
  4919  0024F0  0E01               	movlw	1
  4920  0024F2  6E08               	movwf	ms_delay@val^0,c
  4921  0024F4  EC8B  F015         	call	_ms_delay	;wreg free
  4922                           
  4923                           ;main.c: 455:         PORTD = 0b00000011;
  4924  0024F8  0E03               	movlw	3
  4925  0024FA  6E83               	movwf	131,c	;volatile
  4926  0024FC                     
  4927                           ;main.c: 456:         ms_delay(1);
  4928  0024FC  0E00               	movlw	0
  4929  0024FE  6E09               	movwf	(ms_delay@val+1)^0,c
  4930  002500  0E01               	movlw	1
  4931  002502  6E08               	movwf	ms_delay@val^0,c
  4932  002504  EC8B  F015         	call	_ms_delay	;wreg free
  4933  002508                     
  4934                           ;main.c: 457:         PORTD = 0b00001001;
  4935  002508  0E09               	movlw	9
  4936  00250A  6E83               	movwf	131,c	;volatile
  4937                           
  4938                           ;main.c: 458:         ms_delay(1);
  4939  00250C  0E00               	movlw	0
  4940  00250E  6E09               	movwf	(ms_delay@val+1)^0,c
  4941  002510  0E01               	movlw	1
  4942  002512  6E08               	movwf	ms_delay@val^0,c
  4943  002514  EC8B  F015         	call	_ms_delay	;wreg free
  4944  002518                     l275:
  4945  002518  FFFF               	dw	65535	; assembler added errata NOP
  4946  00251A  0012               	return		;funcret
  4947  00251C  FFFF               	dw	65535	; errata NOP
  4948  00251E                     __end_of_Z_axis:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function _Y_axis *****************
  4952 ;; Defined at:
  4953 ;;		line 407 in file "main.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  direction       1    wreg     unsigned char 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  direction       1   13[COMRAM] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4967 ;;      Params:         0       0       0       0       0       0       0
  4968 ;;      Locals:         1       0       0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0
  4970 ;;      Totals:         1       0       0       0       0       0       0
  4971 ;;Total ram usage:        1 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; Hardware stack levels required when called: 2
  4974 ;; This function calls:
  4975 ;;		_ms_delay
  4976 ;; This function is called by:
  4977 ;;		_pick_and_place
  4978 ;;		_return_to_initial
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text18
  4983  00251E                     __ptext18:
  4984                           	callstack 0
  4985  00251E                     _Y_axis:
  4986                           	callstack 0
  4987  00251E  FFFF               	dw	65535	; assembler added errata NOP
  4988                           
  4989                           ;incstack = 0
  4990                           ;Y_axis@direction stored from wreg
  4991  002520  6E0E               	movwf	Y_axis@direction^0,c
  4992  002522                     
  4993                           ;main.c: 408:     if (direction == 1){
  4994  002522  040E               	decf	Y_axis@direction^0,w,c
  4995  002524  A4D8               	btfss	status,2,c
  4996  002526  EF97  F012         	goto	u3851
  4997  00252A  EF9A  F012         	goto	u3850
  4998  00252E                     u3851:
  4999  00252E  FFFF               	dw	65535	; assembler added errata NOP
  5000  002530  EFC3  F012         	goto	l3861
  5001  002534                     u3850:
  5002  002534  FFFF               	dw	65535	; assembler added errata NOP
  5003  002536                     
  5004                           ;main.c: 409:         PORTB = 0b00110000;
  5005  002536  0E30               	movlw	48
  5006  002538  6E81               	movwf	129,c	;volatile
  5007  00253A                     
  5008                           ;main.c: 410:         ms_delay(1);
  5009  00253A  0E00               	movlw	0
  5010  00253C  6E09               	movwf	(ms_delay@val+1)^0,c
  5011  00253E  0E01               	movlw	1
  5012  002540  6E08               	movwf	ms_delay@val^0,c
  5013  002542  EC8B  F015         	call	_ms_delay	;wreg free
  5014  002546                     
  5015                           ;main.c: 411:         PORTB = 0b01100000;
  5016  002546  0E60               	movlw	96
  5017  002548  6E81               	movwf	129,c	;volatile
  5018  00254A                     
  5019                           ;main.c: 412:         ms_delay(1);
  5020  00254A  0E00               	movlw	0
  5021  00254C  6E09               	movwf	(ms_delay@val+1)^0,c
  5022  00254E  0E01               	movlw	1
  5023  002550  6E08               	movwf	ms_delay@val^0,c
  5024  002552  EC8B  F015         	call	_ms_delay	;wreg free
  5025  002556                     
  5026                           ;main.c: 413:         PORTB = 0b11000000;
  5027  002556  0EC0               	movlw	192
  5028  002558  6E81               	movwf	129,c	;volatile
  5029  00255A                     
  5030                           ;main.c: 414:         ms_delay(1);
  5031  00255A  0E00               	movlw	0
  5032  00255C  6E09               	movwf	(ms_delay@val+1)^0,c
  5033  00255E  0E01               	movlw	1
  5034  002560  6E08               	movwf	ms_delay@val^0,c
  5035  002562  EC8B  F015         	call	_ms_delay	;wreg free
  5036  002566                     
  5037                           ;main.c: 415:         PORTB = 0b10010000;
  5038  002566  0E90               	movlw	144
  5039  002568  6E81               	movwf	129,c	;volatile
  5040  00256A                     
  5041                           ;main.c: 416:         ms_delay(1);
  5042  00256A  0E00               	movlw	0
  5043  00256C  6E09               	movwf	(ms_delay@val+1)^0,c
  5044  00256E  0E01               	movlw	1
  5045  002570  6E08               	movwf	ms_delay@val^0,c
  5046  002572  EC8B  F015         	call	_ms_delay	;wreg free
  5047  002576                     
  5048                           ;main.c: 417:         PORTB = 0b00110000;
  5049  002576  0E30               	movlw	48
  5050  002578  6E81               	movwf	129,c	;volatile
  5051  00257A                     
  5052                           ;main.c: 418:         ms_delay(1);
  5053  00257A  0E00               	movlw	0
  5054  00257C  6E09               	movwf	(ms_delay@val+1)^0,c
  5055  00257E  0E01               	movlw	1
  5056  002580  6E08               	movwf	ms_delay@val^0,c
  5057  002582  EC8B  F015         	call	_ms_delay	;wreg free
  5058  002586                     l3861:
  5059  002586  FFFF               	dw	65535	; assembler added errata NOP
  5060                           
  5061                           ;main.c: 420:     if (direction == 0){
  5062  002588  500E               	movf	Y_axis@direction^0,w,c
  5063  00258A  A4D8               	btfss	status,2,c
  5064  00258C  EFCA  F012         	goto	u3861
  5065  002590  EFCD  F012         	goto	u3860
  5066  002594                     u3861:
  5067  002594  FFFF               	dw	65535	; assembler added errata NOP
  5068  002596  EFF6  F012         	goto	l270
  5069  00259A                     u3860:
  5070  00259A  FFFF               	dw	65535	; assembler added errata NOP
  5071  00259C                     
  5072                           ;main.c: 421:         PORTB = 0b10010000;
  5073  00259C  0E90               	movlw	144
  5074  00259E  6E81               	movwf	129,c	;volatile
  5075  0025A0                     
  5076                           ;main.c: 422:         ms_delay(1);
  5077  0025A0  0E00               	movlw	0
  5078  0025A2  6E09               	movwf	(ms_delay@val+1)^0,c
  5079  0025A4  0E01               	movlw	1
  5080  0025A6  6E08               	movwf	ms_delay@val^0,c
  5081  0025A8  EC8B  F015         	call	_ms_delay	;wreg free
  5082  0025AC                     
  5083                           ;main.c: 423:         PORTB = 0b11000000;
  5084  0025AC  0EC0               	movlw	192
  5085  0025AE  6E81               	movwf	129,c	;volatile
  5086                           
  5087                           ;main.c: 424:         ms_delay(1);
  5088  0025B0  0E00               	movlw	0
  5089  0025B2  6E09               	movwf	(ms_delay@val+1)^0,c
  5090  0025B4  0E01               	movlw	1
  5091  0025B6  6E08               	movwf	ms_delay@val^0,c
  5092  0025B8  EC8B  F015         	call	_ms_delay	;wreg free
  5093  0025BC                     
  5094                           ;main.c: 425:         PORTB = 0b01100000;
  5095  0025BC  0E60               	movlw	96
  5096  0025BE  6E81               	movwf	129,c	;volatile
  5097  0025C0                     
  5098                           ;main.c: 426:         ms_delay(1);
  5099  0025C0  0E00               	movlw	0
  5100  0025C2  6E09               	movwf	(ms_delay@val+1)^0,c
  5101  0025C4  0E01               	movlw	1
  5102  0025C6  6E08               	movwf	ms_delay@val^0,c
  5103  0025C8  EC8B  F015         	call	_ms_delay	;wreg free
  5104                           
  5105                           ;main.c: 427:         PORTB = 0b00110000;
  5106  0025CC  0E30               	movlw	48
  5107  0025CE  6E81               	movwf	129,c	;volatile
  5108  0025D0                     
  5109                           ;main.c: 428:         ms_delay(1);
  5110  0025D0  0E00               	movlw	0
  5111  0025D2  6E09               	movwf	(ms_delay@val+1)^0,c
  5112  0025D4  0E01               	movlw	1
  5113  0025D6  6E08               	movwf	ms_delay@val^0,c
  5114  0025D8  EC8B  F015         	call	_ms_delay	;wreg free
  5115  0025DC                     
  5116                           ;main.c: 429:         PORTB = 0b10010000;
  5117  0025DC  0E90               	movlw	144
  5118  0025DE  6E81               	movwf	129,c	;volatile
  5119                           
  5120                           ;main.c: 430:         ms_delay(1);
  5121  0025E0  0E00               	movlw	0
  5122  0025E2  6E09               	movwf	(ms_delay@val+1)^0,c
  5123  0025E4  0E01               	movlw	1
  5124  0025E6  6E08               	movwf	ms_delay@val^0,c
  5125  0025E8  EC8B  F015         	call	_ms_delay	;wreg free
  5126  0025EC                     l270:
  5127  0025EC  FFFF               	dw	65535	; assembler added errata NOP
  5128  0025EE  0012               	return		;funcret
  5129  0025F0  FFFF               	dw	65535	; errata NOP
  5130  0025F2                     __end_of_Y_axis:
  5131                           	callstack 0
  5132                           
  5133 ;; *************** function _X_axis *****************
  5134 ;; Defined at:
  5135 ;;		line 379 in file "main.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  direction       1    wreg     unsigned char 
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;  direction       1   13[COMRAM] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5149 ;;      Params:         0       0       0       0       0       0       0
  5150 ;;      Locals:         1       0       0       0       0       0       0
  5151 ;;      Temps:          0       0       0       0       0       0       0
  5152 ;;      Totals:         1       0       0       0       0       0       0
  5153 ;;Total ram usage:        1 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 2
  5156 ;; This function calls:
  5157 ;;		_ms_delay
  5158 ;; This function is called by:
  5159 ;;		_pick_and_place
  5160 ;;		_return_to_initial
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text19
  5165  0025F2                     __ptext19:
  5166                           	callstack 0
  5167  0025F2                     _X_axis:
  5168                           	callstack 0
  5169  0025F2  FFFF               	dw	65535	; assembler added errata NOP
  5170                           
  5171                           ;incstack = 0
  5172                           ;X_axis@direction stored from wreg
  5173  0025F4  6E0E               	movwf	X_axis@direction^0,c
  5174  0025F6                     
  5175                           ;main.c: 380:     if (direction == 1){
  5176  0025F6  040E               	decf	X_axis@direction^0,w,c
  5177  0025F8  A4D8               	btfss	status,2,c
  5178  0025FA  EF01  F013         	goto	u3831
  5179  0025FE  EF04  F013         	goto	u3830
  5180  002602                     u3831:
  5181  002602  FFFF               	dw	65535	; assembler added errata NOP
  5182  002604  EF2D  F013         	goto	l3823
  5183  002608                     u3830:
  5184  002608  FFFF               	dw	65535	; assembler added errata NOP
  5185  00260A                     
  5186                           ;main.c: 381:         PORTB = 0b00000011;
  5187  00260A  0E03               	movlw	3
  5188  00260C  6E81               	movwf	129,c	;volatile
  5189  00260E                     
  5190                           ;main.c: 382:         ms_delay(1);
  5191  00260E  0E00               	movlw	0
  5192  002610  6E09               	movwf	(ms_delay@val+1)^0,c
  5193  002612  0E01               	movlw	1
  5194  002614  6E08               	movwf	ms_delay@val^0,c
  5195  002616  EC8B  F015         	call	_ms_delay	;wreg free
  5196  00261A                     
  5197                           ;main.c: 383:         PORTB = 0b00000110;
  5198  00261A  0E06               	movlw	6
  5199  00261C  6E81               	movwf	129,c	;volatile
  5200  00261E                     
  5201                           ;main.c: 384:         ms_delay(1);
  5202  00261E  0E00               	movlw	0
  5203  002620  6E09               	movwf	(ms_delay@val+1)^0,c
  5204  002622  0E01               	movlw	1
  5205  002624  6E08               	movwf	ms_delay@val^0,c
  5206  002626  EC8B  F015         	call	_ms_delay	;wreg free
  5207  00262A                     
  5208                           ;main.c: 385:         PORTB = 0b00001100;
  5209  00262A  0E0C               	movlw	12
  5210  00262C  6E81               	movwf	129,c	;volatile
  5211  00262E                     
  5212                           ;main.c: 386:         ms_delay(1);
  5213  00262E  0E00               	movlw	0
  5214  002630  6E09               	movwf	(ms_delay@val+1)^0,c
  5215  002632  0E01               	movlw	1
  5216  002634  6E08               	movwf	ms_delay@val^0,c
  5217  002636  EC8B  F015         	call	_ms_delay	;wreg free
  5218  00263A                     
  5219                           ;main.c: 387:         PORTB = 0b00001001;
  5220  00263A  0E09               	movlw	9
  5221  00263C  6E81               	movwf	129,c	;volatile
  5222  00263E                     
  5223                           ;main.c: 388:         ms_delay(1);
  5224  00263E  0E00               	movlw	0
  5225  002640  6E09               	movwf	(ms_delay@val+1)^0,c
  5226  002642  0E01               	movlw	1
  5227  002644  6E08               	movwf	ms_delay@val^0,c
  5228  002646  EC8B  F015         	call	_ms_delay	;wreg free
  5229  00264A                     
  5230                           ;main.c: 389:         PORTB = 0b00000011;
  5231  00264A  0E03               	movlw	3
  5232  00264C  6E81               	movwf	129,c	;volatile
  5233  00264E                     
  5234                           ;main.c: 390:         ms_delay(1);
  5235  00264E  0E00               	movlw	0
  5236  002650  6E09               	movwf	(ms_delay@val+1)^0,c
  5237  002652  0E01               	movlw	1
  5238  002654  6E08               	movwf	ms_delay@val^0,c
  5239  002656  EC8B  F015         	call	_ms_delay	;wreg free
  5240  00265A                     l3823:
  5241  00265A  FFFF               	dw	65535	; assembler added errata NOP
  5242                           
  5243                           ;main.c: 392:     if (direction == 0){
  5244  00265C  500E               	movf	X_axis@direction^0,w,c
  5245  00265E  A4D8               	btfss	status,2,c
  5246  002660  EF34  F013         	goto	u3841
  5247  002664  EF37  F013         	goto	u3840
  5248  002668                     u3841:
  5249  002668  FFFF               	dw	65535	; assembler added errata NOP
  5250  00266A  EF60  F013         	goto	l265
  5251  00266E                     u3840:
  5252  00266E  FFFF               	dw	65535	; assembler added errata NOP
  5253  002670                     
  5254                           ;main.c: 393:         PORTB = 0b00001001;
  5255  002670  0E09               	movlw	9
  5256  002672  6E81               	movwf	129,c	;volatile
  5257  002674                     
  5258                           ;main.c: 394:         ms_delay(1);
  5259  002674  0E00               	movlw	0
  5260  002676  6E09               	movwf	(ms_delay@val+1)^0,c
  5261  002678  0E01               	movlw	1
  5262  00267A  6E08               	movwf	ms_delay@val^0,c
  5263  00267C  EC8B  F015         	call	_ms_delay	;wreg free
  5264  002680                     
  5265                           ;main.c: 395:         PORTB = 0b00001100;
  5266  002680  0E0C               	movlw	12
  5267  002682  6E81               	movwf	129,c	;volatile
  5268                           
  5269                           ;main.c: 396:         ms_delay(1);
  5270  002684  0E00               	movlw	0
  5271  002686  6E09               	movwf	(ms_delay@val+1)^0,c
  5272  002688  0E01               	movlw	1
  5273  00268A  6E08               	movwf	ms_delay@val^0,c
  5274  00268C  EC8B  F015         	call	_ms_delay	;wreg free
  5275  002690                     
  5276                           ;main.c: 397:         PORTB = 0b00000110;
  5277  002690  0E06               	movlw	6
  5278  002692  6E81               	movwf	129,c	;volatile
  5279  002694                     
  5280                           ;main.c: 398:         ms_delay(1);
  5281  002694  0E00               	movlw	0
  5282  002696  6E09               	movwf	(ms_delay@val+1)^0,c
  5283  002698  0E01               	movlw	1
  5284  00269A  6E08               	movwf	ms_delay@val^0,c
  5285  00269C  EC8B  F015         	call	_ms_delay	;wreg free
  5286                           
  5287                           ;main.c: 399:         PORTB = 0b00000011;
  5288  0026A0  0E03               	movlw	3
  5289  0026A2  6E81               	movwf	129,c	;volatile
  5290  0026A4                     
  5291                           ;main.c: 400:         ms_delay(1);
  5292  0026A4  0E00               	movlw	0
  5293  0026A6  6E09               	movwf	(ms_delay@val+1)^0,c
  5294  0026A8  0E01               	movlw	1
  5295  0026AA  6E08               	movwf	ms_delay@val^0,c
  5296  0026AC  EC8B  F015         	call	_ms_delay	;wreg free
  5297  0026B0                     
  5298                           ;main.c: 401:         PORTB = 0b00001001;
  5299  0026B0  0E09               	movlw	9
  5300  0026B2  6E81               	movwf	129,c	;volatile
  5301                           
  5302                           ;main.c: 402:         ms_delay(1);
  5303  0026B4  0E00               	movlw	0
  5304  0026B6  6E09               	movwf	(ms_delay@val+1)^0,c
  5305  0026B8  0E01               	movlw	1
  5306  0026BA  6E08               	movwf	ms_delay@val^0,c
  5307  0026BC  EC8B  F015         	call	_ms_delay	;wreg free
  5308  0026C0                     l265:
  5309  0026C0  FFFF               	dw	65535	; assembler added errata NOP
  5310  0026C2  0012               	return		;funcret
  5311  0026C4  FFFF               	dw	65535	; errata NOP
  5312  0026C6                     __end_of_X_axis:
  5313                           	callstack 0
  5314                           
  5315 ;; *************** function _Twister *****************
  5316 ;; Defined at:
  5317 ;;		line 463 in file "main.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  direction       1    wreg     unsigned char 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  direction       1   13[COMRAM] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      void 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0, cstack
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5331 ;;      Params:         0       0       0       0       0       0       0
  5332 ;;      Locals:         1       0       0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0
  5334 ;;      Totals:         1       0       0       0       0       0       0
  5335 ;;Total ram usage:        1 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; Hardware stack levels required when called: 2
  5338 ;; This function calls:
  5339 ;;		_ms_delay
  5340 ;; This function is called by:
  5341 ;;		_pick_and_place
  5342 ;;		_return_to_initial
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text20
  5347  002798                     __ptext20:
  5348                           	callstack 0
  5349  002798                     _Twister:
  5350                           	callstack 0
  5351  002798  FFFF               	dw	65535	; assembler added errata NOP
  5352                           
  5353                           ;incstack = 0
  5354                           ;Twister@direction stored from wreg
  5355  00279A  6E0E               	movwf	Twister@direction^0,c
  5356  00279C                     
  5357                           ;main.c: 464:     if (direction == 1){
  5358  00279C  040E               	decf	Twister@direction^0,w,c
  5359  00279E  A4D8               	btfss	status,2,c
  5360  0027A0  EFD4  F013         	goto	u3871
  5361  0027A4  EFD7  F013         	goto	u3870
  5362  0027A8                     u3871:
  5363  0027A8  FFFF               	dw	65535	; assembler added errata NOP
  5364  0027AA  EFF8  F013         	goto	l3895
  5365  0027AE                     u3870:
  5366  0027AE  FFFF               	dw	65535	; assembler added errata NOP
  5367  0027B0                     
  5368                           ;main.c: 465:         PORTD = 0b00110000;
  5369  0027B0  0E30               	movlw	48
  5370  0027B2  6E83               	movwf	131,c	;volatile
  5371  0027B4                     
  5372                           ;main.c: 466:         ms_delay(1);
  5373  0027B4  0E00               	movlw	0
  5374  0027B6  6E09               	movwf	(ms_delay@val+1)^0,c
  5375  0027B8  0E01               	movlw	1
  5376  0027BA  6E08               	movwf	ms_delay@val^0,c
  5377  0027BC  EC8B  F015         	call	_ms_delay	;wreg free
  5378  0027C0                     
  5379                           ;main.c: 467:         PORTD = 0b11000000;
  5380  0027C0  0EC0               	movlw	192
  5381  0027C2  6E83               	movwf	131,c	;volatile
  5382  0027C4                     
  5383                           ;main.c: 468:         ms_delay(1);
  5384  0027C4  0E00               	movlw	0
  5385  0027C6  6E09               	movwf	(ms_delay@val+1)^0,c
  5386  0027C8  0E01               	movlw	1
  5387  0027CA  6E08               	movwf	ms_delay@val^0,c
  5388  0027CC  EC8B  F015         	call	_ms_delay	;wreg free
  5389  0027D0                     
  5390                           ;main.c: 469:         PORTD = 0b10010000;
  5391  0027D0  0E90               	movlw	144
  5392  0027D2  6E83               	movwf	131,c	;volatile
  5393  0027D4                     
  5394                           ;main.c: 470:         ms_delay(1);
  5395  0027D4  0E00               	movlw	0
  5396  0027D6  6E09               	movwf	(ms_delay@val+1)^0,c
  5397  0027D8  0E01               	movlw	1
  5398  0027DA  6E08               	movwf	ms_delay@val^0,c
  5399  0027DC  EC8B  F015         	call	_ms_delay	;wreg free
  5400  0027E0                     
  5401                           ;main.c: 471:         PORTD = 0b00110000;
  5402  0027E0  0E30               	movlw	48
  5403  0027E2  6E83               	movwf	131,c	;volatile
  5404  0027E4                     
  5405                           ;main.c: 472:         ms_delay(1);
  5406  0027E4  0E00               	movlw	0
  5407  0027E6  6E09               	movwf	(ms_delay@val+1)^0,c
  5408  0027E8  0E01               	movlw	1
  5409  0027EA  6E08               	movwf	ms_delay@val^0,c
  5410  0027EC  EC8B  F015         	call	_ms_delay	;wreg free
  5411  0027F0                     l3895:
  5412  0027F0  FFFF               	dw	65535	; assembler added errata NOP
  5413                           
  5414                           ;main.c: 474:     if (direction == 0){
  5415  0027F2  500E               	movf	Twister@direction^0,w,c
  5416  0027F4  A4D8               	btfss	status,2,c
  5417  0027F6  EFFF  F013         	goto	u3881
  5418  0027FA  EF02  F014         	goto	u3880
  5419  0027FE                     u3881:
  5420  0027FE  FFFF               	dw	65535	; assembler added errata NOP
  5421  002800  EF23  F014         	goto	l280
  5422  002804                     u3880:
  5423  002804  FFFF               	dw	65535	; assembler added errata NOP
  5424  002806                     
  5425                           ;main.c: 475:         PORTD = 0b10010000;
  5426  002806  0E90               	movlw	144
  5427  002808  6E83               	movwf	131,c	;volatile
  5428  00280A                     
  5429                           ;main.c: 476:         ms_delay(1);
  5430  00280A  0E00               	movlw	0
  5431  00280C  6E09               	movwf	(ms_delay@val+1)^0,c
  5432  00280E  0E01               	movlw	1
  5433  002810  6E08               	movwf	ms_delay@val^0,c
  5434  002812  EC8B  F015         	call	_ms_delay	;wreg free
  5435  002816                     
  5436                           ;main.c: 477:         PORTD = 0b01100000;
  5437  002816  0E60               	movlw	96
  5438  002818  6E83               	movwf	131,c	;volatile
  5439                           
  5440                           ;main.c: 478:         ms_delay(1);
  5441  00281A  0E00               	movlw	0
  5442  00281C  6E09               	movwf	(ms_delay@val+1)^0,c
  5443  00281E  0E01               	movlw	1
  5444  002820  6E08               	movwf	ms_delay@val^0,c
  5445  002822  EC8B  F015         	call	_ms_delay	;wreg free
  5446  002826                     
  5447                           ;main.c: 479:         PORTD = 0b00110000;
  5448  002826  0E30               	movlw	48
  5449  002828  6E83               	movwf	131,c	;volatile
  5450  00282A                     
  5451                           ;main.c: 480:         ms_delay(1);
  5452  00282A  0E00               	movlw	0
  5453  00282C  6E09               	movwf	(ms_delay@val+1)^0,c
  5454  00282E  0E01               	movlw	1
  5455  002830  6E08               	movwf	ms_delay@val^0,c
  5456  002832  EC8B  F015         	call	_ms_delay	;wreg free
  5457                           
  5458                           ;main.c: 481:         PORTD = 0b10010000;
  5459  002836  0E90               	movlw	144
  5460  002838  6E83               	movwf	131,c	;volatile
  5461  00283A                     
  5462                           ;main.c: 482:         ms_delay(1);
  5463  00283A  0E00               	movlw	0
  5464  00283C  6E09               	movwf	(ms_delay@val+1)^0,c
  5465  00283E  0E01               	movlw	1
  5466  002840  6E08               	movwf	ms_delay@val^0,c
  5467  002842  EC8B  F015         	call	_ms_delay	;wreg free
  5468  002846                     l280:
  5469  002846  FFFF               	dw	65535	; assembler added errata NOP
  5470  002848  0012               	return		;funcret
  5471  00284A  FFFF               	dw	65535	; errata NOP
  5472  00284C                     __end_of_Twister:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _ms_delay *****************
  5476 ;; Defined at:
  5477 ;;		line 487 in file "main.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  val             2    7[COMRAM] unsigned int 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  j               2   11[COMRAM] unsigned int 
  5482 ;;  i               2    9[COMRAM] unsigned int 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      void 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5492 ;;      Params:         2       0       0       0       0       0       0
  5493 ;;      Locals:         4       0       0       0       0       0       0
  5494 ;;      Temps:          0       0       0       0       0       0       0
  5495 ;;      Totals:         6       0       0       0       0       0       0
  5496 ;;Total ram usage:        6 bytes
  5497 ;; Hardware stack levels used: 1
  5498 ;; Hardware stack levels required when called: 1
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_X_axis
  5503 ;;		_Y_axis
  5504 ;;		_Z_axis
  5505 ;;		_Twister
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text21
  5510  002B16                     __ptext21:
  5511                           	callstack 0
  5512  002B16                     _ms_delay:
  5513                           	callstack 0
  5514  002B16  FFFF               	dw	65535	; assembler added errata NOP
  5515  002B18                     
  5516                           ;main.c: 487: void ms_delay(unsigned int val);main.c: 488: {;main.c: 489:      unsigned 
      +                          int i,j;;main.c: 490:         for(i=0;i<val;i++)
  5517  002B18  0E00               	movlw	0
  5518  002B1A  6E0B               	movwf	(ms_delay@i+1)^0,c
  5519  002B1C  0E00               	movlw	0
  5520  002B1E  6E0A               	movwf	ms_delay@i^0,c
  5521  002B20  EFA9  F015         	goto	l3749
  5522  002B24                     l3737:
  5523  002B24  FFFF               	dw	65535	; assembler added errata NOP
  5524                           
  5525                           ;main.c: 491:             for(j=0;j<1650;j++);
  5526  002B26  0E00               	movlw	0
  5527  002B28  6E0D               	movwf	(ms_delay@j+1)^0,c
  5528  002B2A  0E00               	movlw	0
  5529  002B2C  6E0C               	movwf	ms_delay@j^0,c
  5530  002B2E                     l3743:
  5531  002B2E  FFFF               	dw	65535	; assembler added errata NOP
  5532  002B30  4A0C               	infsnz	ms_delay@j^0,f,c
  5533  002B32  2A0D               	incf	(ms_delay@j+1)^0,f,c
  5534  002B34  0E72               	movlw	114
  5535  002B36  5C0C               	subwf	ms_delay@j^0,w,c
  5536  002B38  0E06               	movlw	6
  5537  002B3A  580D               	subwfb	(ms_delay@j+1)^0,w,c
  5538  002B3C  A0D8               	btfss	status,0,c
  5539  002B3E  EFA3  F015         	goto	u3771
  5540  002B42  EFA6  F015         	goto	u3770
  5541  002B46                     u3771:
  5542  002B46  FFFF               	dw	65535	; assembler added errata NOP
  5543  002B48  EF97  F015         	goto	l3743
  5544  002B4C                     u3770:
  5545  002B4C  FFFF               	dw	65535	; assembler added errata NOP
  5546  002B4E  4A0A               	infsnz	ms_delay@i^0,f,c
  5547  002B50  2A0B               	incf	(ms_delay@i+1)^0,f,c
  5548  002B52                     l3749:
  5549  002B52  FFFF               	dw	65535	; assembler added errata NOP
  5550  002B54  5008               	movf	ms_delay@val^0,w,c
  5551  002B56  5C0A               	subwf	ms_delay@i^0,w,c
  5552  002B58  5009               	movf	(ms_delay@val+1)^0,w,c
  5553  002B5A  580B               	subwfb	(ms_delay@i+1)^0,w,c
  5554  002B5C  A0D8               	btfss	status,0,c
  5555  002B5E  EFB3  F015         	goto	u3781
  5556  002B62  EFB6  F015         	goto	u3780
  5557  002B66                     u3781:
  5558  002B66  FFFF               	dw	65535	; assembler added errata NOP
  5559  002B68  EF92  F015         	goto	l3737
  5560  002B6C                     u3780:
  5561  002B6C  FFFF               	dw	65535	; assembler added errata NOP
  5562  002B6E  0012               	return		;funcret
  5563  002B70  FFFF               	dw	65535	; errata NOP
  5564  002B72                     __end_of_ms_delay:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function _atoi *****************
  5568 ;; Defined at:
  5569 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  s               2   14[COMRAM] PTR const unsigned char 
  5572 ;;		 -> input_str(2), 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  n               2   27[COMRAM] int 
  5575 ;;  neg             2   20[COMRAM] int 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  2   14[COMRAM] int 
  5578 ;; Registers used:
  5579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5585 ;;      Params:         2       0       0       0       0       0       0
  5586 ;;      Locals:         9       0       0       0       0       0       0
  5587 ;;      Temps:          4       0       0       0       0       0       0
  5588 ;;      Totals:        15       0       0       0       0       0       0
  5589 ;;Total ram usage:       15 bytes
  5590 ;; Hardware stack levels used: 1
  5591 ;; Hardware stack levels required when called: 2
  5592 ;; This function calls:
  5593 ;;		___wmul
  5594 ;;		_isdigit
  5595 ;;		_isspace
  5596 ;; This function is called by:
  5597 ;;		_add_component
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text22
  5602  001C84                     __ptext22:
  5603                           	callstack 0
  5604  001C84                     _atoi:
  5605                           	callstack 0
  5606  001C84  FFFF               	dw	65535	; assembler added errata NOP
  5607  001C86  0E00               	movlw	0
  5608  001C88  6E1D               	movwf	(atoi@n+1)^0,c
  5609  001C8A  0E00               	movlw	0
  5610  001C8C  6E1C               	movwf	atoi@n^0,c
  5611  001C8E  0E00               	movlw	0
  5612  001C90  6E16               	movwf	(atoi@neg+1)^0,c
  5613  001C92  0E00               	movlw	0
  5614  001C94  6E15               	movwf	atoi@neg^0,c
  5615  001C96  EF50  F00E         	goto	l4293
  5616  001C9A                     l4291:
  5617  001C9A  FFFF               	dw	65535	; assembler added errata NOP
  5618  001C9C  4A0F               	infsnz	atoi@s^0,f,c
  5619  001C9E  2A10               	incf	(atoi@s+1)^0,f,c
  5620  001CA0                     l4293:
  5621  001CA0  FFFF               	dw	65535	; assembler added errata NOP
  5622  001CA2  0E01               	movlw	1
  5623  001CA4  6E1B               	movwf	_atoi$1070^0,c
  5624  001CA6  C00F  FFD9         	movff	atoi@s,fsr2l
  5625  001CAA  C010  FFDA         	movff	atoi@s+1,fsr2h
  5626  001CAE  0E20               	movlw	32
  5627  001CB0  18DE               	xorwf	postinc2,w,c
  5628  001CB2  B4D8               	btfsc	status,2,c
  5629  001CB4  EF5E  F00E         	goto	u4531
  5630  001CB8  EF61  F00E         	goto	u4530
  5631  001CBC                     u4531:
  5632  001CBC  FFFF               	dw	65535	; assembler added errata NOP
  5633  001CBE  EF80  F00E         	goto	l4301
  5634  001CC2                     u4530:
  5635  001CC2  FFFF               	dw	65535	; assembler added errata NOP
  5636  001CC4  0EF7               	movlw	247
  5637  001CC6  6E11               	movwf	??_atoi^0,c
  5638  001CC8  0EFF               	movlw	255
  5639  001CCA  6E12               	movwf	(??_atoi+1)^0,c
  5640  001CCC  C00F  FFD9         	movff	atoi@s,fsr2l
  5641  001CD0  C010  FFDA         	movff	atoi@s+1,fsr2h
  5642  001CD4  50DF               	movf	indf2,w,c
  5643  001CD6  6E13               	movwf	(??_atoi+2)^0,c
  5644  001CD8  6A14               	clrf	(??_atoi+3)^0,c
  5645  001CDA  5011               	movf	??_atoi^0,w,c
  5646  001CDC  2613               	addwf	(??_atoi+2)^0,f,c
  5647  001CDE  5012               	movf	(??_atoi+1)^0,w,c
  5648  001CE0  2214               	addwfc	(??_atoi+3)^0,f,c
  5649  001CE2  5014               	movf	(??_atoi+3)^0,w,c
  5650  001CE4  E10A               	bnz	u4540
  5651  001CE6  0E05               	movlw	5
  5652  001CE8  5C13               	subwf	(??_atoi+2)^0,w,c
  5653  001CEA  A0D8               	btfss	status,0,c
  5654  001CEC  EF7A  F00E         	goto	u4541
  5655  001CF0  EF7D  F00E         	goto	u4540
  5656  001CF4                     u4541:
  5657  001CF4  FFFF               	dw	65535	; assembler added errata NOP
  5658  001CF6  EF80  F00E         	goto	l4301
  5659  001CFA                     u4540:
  5660  001CFA  FFFF               	dw	65535	; assembler added errata NOP
  5661  001CFC  0E00               	movlw	0
  5662  001CFE  6E1B               	movwf	_atoi$1070^0,c
  5663  001D00                     l4301:
  5664  001D00  FFFF               	dw	65535	; assembler added errata NOP
  5665  001D02  C01B  F017         	movff	_atoi$1070,_atoi$1069
  5666  001D06  6A18               	clrf	(_atoi$1069+1)^0,c
  5667  001D08  5017               	movf	_atoi$1069^0,w,c
  5668  001D0A  1018               	iorwf	(_atoi$1069+1)^0,w,c
  5669  001D0C  A4D8               	btfss	status,2,c
  5670  001D0E  EF8B  F00E         	goto	u4551
  5671  001D12  EF8E  F00E         	goto	u4550
  5672  001D16                     u4551:
  5673  001D16  FFFF               	dw	65535	; assembler added errata NOP
  5674  001D18  EF4D  F00E         	goto	l4291
  5675  001D1C                     u4550:
  5676  001D1C  FFFF               	dw	65535	; assembler added errata NOP
  5677  001D1E  EF9B  F00E         	goto	l4311
  5678  001D22                     l4307:
  5679  001D22  FFFF               	dw	65535	; assembler added errata NOP
  5680  001D24  0E00               	movlw	0
  5681  001D26  6E16               	movwf	(atoi@neg+1)^0,c
  5682  001D28  0E01               	movlw	1
  5683  001D2A  6E15               	movwf	atoi@neg^0,c
  5684  001D2C                     l4309:
  5685  001D2C  FFFF               	dw	65535	; assembler added errata NOP
  5686  001D2E  4A0F               	infsnz	atoi@s^0,f,c
  5687  001D30  2A10               	incf	(atoi@s+1)^0,f,c
  5688  001D32  EFD3  F00E         	goto	l4317
  5689  001D36                     l4311:
  5690  001D36  FFFF               	dw	65535	; assembler added errata NOP
  5691  001D38  C00F  FFD9         	movff	atoi@s,fsr2l
  5692  001D3C  C010  FFDA         	movff	atoi@s+1,fsr2h
  5693  001D40  50DF               	movf	indf2,w,c
  5694  001D42  6E11               	movwf	??_atoi^0,c
  5695  001D44  6A12               	clrf	(??_atoi+1)^0,c
  5696                           
  5697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5698                           ; Switch size 1, requested type "simple"
  5699                           ; Number of cases is 1, Range of values is 0 to 0
  5700                           ; switch strategies available:
  5701                           ; Name         Instructions Cycles
  5702                           ; simple_byte            4     3 (average)
  5703                           ;	Chosen strategy is simple_byte
  5704  001D46  5012               	movf	(??_atoi+1)^0,w,c
  5705  001D48  0A00               	xorlw	0	; case 0
  5706  001D4A  B4D8               	btfsc	status,2,c
  5707  001D4C  EFAA  F00E         	goto	l4711
  5708  001D50  EFD3  F00E         	goto	l4317
  5709  001D54                     l4711:
  5710  001D54  FFFF               	dw	65535	; assembler added errata NOP
  5711                           
  5712                           ; Switch size 1, requested type "simple"
  5713                           ; Number of cases is 2, Range of values is 43 to 45
  5714                           ; switch strategies available:
  5715                           ; Name         Instructions Cycles
  5716                           ; simple_byte            7     4 (average)
  5717                           ;	Chosen strategy is simple_byte
  5718  001D56  5011               	movf	??_atoi^0,w,c
  5719  001D58  0A2B               	xorlw	43	; case 43
  5720  001D5A  B4D8               	btfsc	status,2,c
  5721  001D5C  EF96  F00E         	goto	l4309
  5722  001D60  0A06               	xorlw	6	; case 45
  5723  001D62  B4D8               	btfsc	status,2,c
  5724  001D64  EF91  F00E         	goto	l4307
  5725  001D68  EFD3  F00E         	goto	l4317
  5726  001D6C                     l4313:
  5727  001D6C  FFFF               	dw	65535	; assembler added errata NOP
  5728  001D6E  C01C  F008         	movff	atoi@n,___wmul@multiplier
  5729  001D72  C01D  F009         	movff	atoi@n+1,___wmul@multiplier+1
  5730  001D76  0E00               	movlw	0
  5731  001D78  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  5732  001D7A  0E0A               	movlw	10
  5733  001D7C  6E0A               	movwf	___wmul@multiplicand^0,c
  5734  001D7E  EC9E  F016         	call	___wmul	;wreg free
  5735  001D82  C00F  FFD9         	movff	atoi@s,fsr2l
  5736  001D86  C010  FFDA         	movff	atoi@s+1,fsr2h
  5737  001D8A  50DF               	movf	indf2,w,c
  5738  001D8C  6E11               	movwf	??_atoi^0,c
  5739  001D8E  5011               	movf	??_atoi^0,w,c
  5740  001D90  5E08               	subwf	?___wmul^0,f,c
  5741  001D92  0E00               	movlw	0
  5742  001D94  5A09               	subwfb	(?___wmul+1)^0,f,c
  5743  001D96  0E30               	movlw	48
  5744  001D98  2408               	addwf	?___wmul^0,w,c
  5745  001D9A  6E1C               	movwf	atoi@n^0,c
  5746  001D9C  0E00               	movlw	0
  5747  001D9E  2009               	addwfc	(?___wmul+1)^0,w,c
  5748  001DA0  6E1D               	movwf	(atoi@n+1)^0,c
  5749  001DA2  EF96  F00E         	goto	l4309
  5750  001DA6                     l4317:
  5751  001DA6  FFFF               	dw	65535	; assembler added errata NOP
  5752  001DA8  0ED0               	movlw	208
  5753  001DAA  6E11               	movwf	??_atoi^0,c
  5754  001DAC  0EFF               	movlw	255
  5755  001DAE  6E12               	movwf	(??_atoi+1)^0,c
  5756  001DB0  C00F  FFD9         	movff	atoi@s,fsr2l
  5757  001DB4  C010  FFDA         	movff	atoi@s+1,fsr2h
  5758  001DB8  50DF               	movf	indf2,w,c
  5759  001DBA  6E13               	movwf	(??_atoi+2)^0,c
  5760  001DBC  6A14               	clrf	(??_atoi+3)^0,c
  5761  001DBE  5011               	movf	??_atoi^0,w,c
  5762  001DC0  2613               	addwf	(??_atoi+2)^0,f,c
  5763  001DC2  5012               	movf	(??_atoi+1)^0,w,c
  5764  001DC4  2214               	addwfc	(??_atoi+3)^0,f,c
  5765  001DC6  5014               	movf	(??_atoi+3)^0,w,c
  5766  001DC8  E10B               	bnz	u4560
  5767  001DCA  0E0A               	movlw	10
  5768  001DCC  5C13               	subwf	(??_atoi+2)^0,w,c
  5769  001DCE  A0D8               	btfss	status,0,c
  5770  001DD0  EFEC  F00E         	goto	u4561
  5771  001DD4  EFF0  F00E         	goto	u4560
  5772  001DD8                     u4561:
  5773  001DD8  FFFF               	dw	65535	; assembler added errata NOP
  5774  001DDA  0E01               	movlw	1
  5775  001DDC  EFF2  F00E         	goto	u4570
  5776  001DE0                     u4560:
  5777  001DE0  FFFF               	dw	65535	; assembler added errata NOP
  5778  001DE2  0E00               	movlw	0
  5779  001DE4                     u4570:
  5780  001DE4  FFFF               	dw	65535	; assembler added errata NOP
  5781  001DE6  6E19               	movwf	_atoi$1071^0,c
  5782  001DE8  6A1A               	clrf	(_atoi$1071+1)^0,c
  5783  001DEA  5019               	movf	_atoi$1071^0,w,c
  5784  001DEC  101A               	iorwf	(_atoi$1071+1)^0,w,c
  5785  001DEE  A4D8               	btfss	status,2,c
  5786  001DF0  EFFC  F00E         	goto	u4581
  5787  001DF4  EFFF  F00E         	goto	u4580
  5788  001DF8                     u4581:
  5789  001DF8  FFFF               	dw	65535	; assembler added errata NOP
  5790  001DFA  EFB6  F00E         	goto	l4313
  5791  001DFE                     u4580:
  5792  001DFE  FFFF               	dw	65535	; assembler added errata NOP
  5793  001E00  5015               	movf	atoi@neg^0,w,c
  5794  001E02  1016               	iorwf	(atoi@neg+1)^0,w,c
  5795  001E04  A4D8               	btfss	status,2,c
  5796  001E06  EF07  F00F         	goto	u4591
  5797  001E0A  EF0A  F00F         	goto	u4590
  5798  001E0E                     u4591:
  5799  001E0E  FFFF               	dw	65535	; assembler added errata NOP
  5800  001E10  EF19  F00F         	goto	l1069
  5801  001E14                     u4590:
  5802  001E14  FFFF               	dw	65535	; assembler added errata NOP
  5803  001E16  C01C  F011         	movff	atoi@n,??_atoi
  5804  001E1A  C01D  F012         	movff	atoi@n+1,??_atoi+1
  5805  001E1E  1E11               	comf	??_atoi^0,f,c
  5806  001E20  1E12               	comf	(??_atoi+1)^0,f,c
  5807  001E22  4A11               	infsnz	??_atoi^0,f,c
  5808  001E24  2A12               	incf	(??_atoi+1)^0,f,c
  5809  001E26  C011  F00F         	movff	??_atoi,?_atoi
  5810  001E2A  C012  F010         	movff	??_atoi+1,?_atoi+1
  5811  001E2E  EF1E  F00F         	goto	l1072
  5812  001E32                     l1069:
  5813  001E32  FFFF               	dw	65535	; assembler added errata NOP
  5814  001E34  C01C  F00F         	movff	atoi@n,?_atoi
  5815  001E38  C01D  F010         	movff	atoi@n+1,?_atoi+1
  5816  001E3C                     l1072:
  5817  001E3C  FFFF               	dw	65535	; assembler added errata NOP
  5818  001E3E  0012               	return		;funcret
  5819  001E40  FFFF               	dw	65535	; errata NOP
  5820  001E42                     __end_of_atoi:
  5821                           	callstack 0
  5822                           
  5823 ;; *************** function _isspace *****************
  5824 ;; Defined at:
  5825 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  c               2    7[COMRAM] int 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  2    7[COMRAM] int 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5839 ;;      Params:         2       0       0       0       0       0       0
  5840 ;;      Locals:         1       0       0       0       0       0       0
  5841 ;;      Temps:          4       0       0       0       0       0       0
  5842 ;;      Totals:         7       0       0       0       0       0       0
  5843 ;;Total ram usage:        7 bytes
  5844 ;; Hardware stack levels used: 1
  5845 ;; Hardware stack levels required when called: 1
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_atoi
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text23
  5854  002AB6                     __ptext23:
  5855                           	callstack 0
  5856  002AB6                     _isspace:
  5857                           	callstack 26
  5858  002AB6  FFFF               	dw	65535	; assembler added errata NOP
  5859  002AB8  0E01               	movlw	1
  5860  002ABA  6E0E               	movwf	_isspace$1087^0,c
  5861  002ABC  0E20               	movlw	32
  5862  002ABE  1808               	xorwf	isspace@c^0,w,c
  5863  002AC0  1009               	iorwf	(isspace@c+1)^0,w,c
  5864  002AC2  B4D8               	btfsc	status,2,c
  5865  002AC4  EF66  F015         	goto	u4301
  5866  002AC8  EF69  F015         	goto	u4300
  5867  002ACC                     u4301:
  5868  002ACC  FFFF               	dw	65535	; assembler added errata NOP
  5869  002ACE  EF85  F015         	goto	l4165
  5870  002AD2                     u4300:
  5871  002AD2  FFFF               	dw	65535	; assembler added errata NOP
  5872  002AD4  0EF7               	movlw	247
  5873  002AD6  6E0A               	movwf	??_isspace^0,c
  5874  002AD8  0EFF               	movlw	255
  5875  002ADA  6E0B               	movwf	(??_isspace+1)^0,c
  5876  002ADC  C008  F00C         	movff	isspace@c,??_isspace+2
  5877  002AE0  C009  F00D         	movff	isspace@c+1,??_isspace+3
  5878  002AE4  500A               	movf	??_isspace^0,w,c
  5879  002AE6  260C               	addwf	(??_isspace+2)^0,f,c
  5880  002AE8  500B               	movf	(??_isspace+1)^0,w,c
  5881  002AEA  220D               	addwfc	(??_isspace+3)^0,f,c
  5882  002AEC  500D               	movf	(??_isspace+3)^0,w,c
  5883  002AEE  E10A               	bnz	u4310
  5884  002AF0  0E05               	movlw	5
  5885  002AF2  5C0C               	subwf	(??_isspace+2)^0,w,c
  5886  002AF4  A0D8               	btfss	status,0,c
  5887  002AF6  EF7F  F015         	goto	u4311
  5888  002AFA  EF82  F015         	goto	u4310
  5889  002AFE                     u4311:
  5890  002AFE  FFFF               	dw	65535	; assembler added errata NOP
  5891  002B00  EF85  F015         	goto	l4165
  5892  002B04                     u4310:
  5893  002B04  FFFF               	dw	65535	; assembler added errata NOP
  5894  002B06  0E00               	movlw	0
  5895  002B08  6E0E               	movwf	_isspace$1087^0,c
  5896  002B0A                     l4165:
  5897  002B0A  FFFF               	dw	65535	; assembler added errata NOP
  5898  002B0C  C00E  F008         	movff	_isspace$1087,?_isspace
  5899  002B10  6A09               	clrf	(?_isspace+1)^0,c
  5900  002B12  0012               	return		;funcret
  5901  002B14  FFFF               	dw	65535	; errata NOP
  5902  002B16                     __end_of_isspace:
  5903                           	callstack 0
  5904                           
  5905 ;; *************** function _isdigit *****************
  5906 ;; Defined at:
  5907 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  c               2    7[COMRAM] int 
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;		None
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  2    7[COMRAM] int 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5921 ;;      Params:         2       0       0       0       0       0       0
  5922 ;;      Locals:         0       0       0       0       0       0       0
  5923 ;;      Temps:          4       0       0       0       0       0       0
  5924 ;;      Totals:         6       0       0       0       0       0       0
  5925 ;;Total ram usage:        6 bytes
  5926 ;; Hardware stack levels used: 1
  5927 ;; Hardware stack levels required when called: 1
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_atoi
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text24
  5936  002BFE                     __ptext24:
  5937                           	callstack 0
  5938  002BFE                     _isdigit:
  5939                           	callstack 26
  5940  002BFE  FFFF               	dw	65535	; assembler added errata NOP
  5941  002C00  0ED0               	movlw	208
  5942  002C02  6E0A               	movwf	??_isdigit^0,c
  5943  002C04  0EFF               	movlw	255
  5944  002C06  6E0B               	movwf	(??_isdigit+1)^0,c
  5945  002C08  C008  F00C         	movff	isdigit@c,??_isdigit+2
  5946  002C0C  C009  F00D         	movff	isdigit@c+1,??_isdigit+3
  5947  002C10  500A               	movf	??_isdigit^0,w,c
  5948  002C12  260C               	addwf	(??_isdigit+2)^0,f,c
  5949  002C14  500B               	movf	(??_isdigit+1)^0,w,c
  5950  002C16  220D               	addwfc	(??_isdigit+3)^0,f,c
  5951  002C18  500D               	movf	(??_isdigit+3)^0,w,c
  5952  002C1A  E10B               	bnz	u4320
  5953  002C1C  0E0A               	movlw	10
  5954  002C1E  5C0C               	subwf	(??_isdigit+2)^0,w,c
  5955  002C20  A0D8               	btfss	status,0,c
  5956  002C22  EF15  F016         	goto	u4321
  5957  002C26  EF19  F016         	goto	u4320
  5958  002C2A                     u4321:
  5959  002C2A  FFFF               	dw	65535	; assembler added errata NOP
  5960  002C2C  0E01               	movlw	1
  5961  002C2E  EF1B  F016         	goto	u4330
  5962  002C32                     u4320:
  5963  002C32  FFFF               	dw	65535	; assembler added errata NOP
  5964  002C34  0E00               	movlw	0
  5965  002C36                     u4330:
  5966  002C36  FFFF               	dw	65535	; assembler added errata NOP
  5967  002C38  6E08               	movwf	?_isdigit^0,c
  5968  002C3A  6A09               	clrf	(?_isdigit+1)^0,c
  5969  002C3C  0012               	return		;funcret
  5970  002C3E  FFFF               	dw	65535	; errata NOP
  5971  002C40                     __end_of_isdigit:
  5972                           	callstack 0
  5973                           
  5974 ;; *************** function ___wmul *****************
  5975 ;; Defined at:
  5976 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  multiplier      2    7[COMRAM] unsigned int 
  5979 ;;  multiplicand    2    9[COMRAM] unsigned int 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  product         2   11[COMRAM] unsigned int 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  2    7[COMRAM] unsigned int 
  5984 ;; Registers used:
  5985 ;;		wreg, status,2, status,0, prodl, prodh
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5991 ;;      Params:         4       0       0       0       0       0       0
  5992 ;;      Locals:         2       0       0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0
  5994 ;;      Totals:         6       0       0       0       0       0       0
  5995 ;;Total ram usage:        6 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; Hardware stack levels required when called: 1
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_atoi
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text25
  6006  002D3C                     __ptext25:
  6007                           	callstack 0
  6008  002D3C                     ___wmul:
  6009                           	callstack 0
  6010  002D3C  FFFF               	dw	65535	; assembler added errata NOP
  6011  002D3E  5008               	movf	___wmul@multiplier^0,w,c
  6012  002D40  020A               	mulwf	___wmul@multiplicand^0,c
  6013  002D42  CFF3 F00C          	movff	prodl,___wmul@product
  6014  002D46  CFF4 F00D          	movff	prodh,___wmul@product+1
  6015  002D4A  5008               	movf	___wmul@multiplier^0,w,c
  6016  002D4C  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  6017  002D4E  50F3               	movf	243,w,c
  6018  002D50  260D               	addwf	(___wmul@product+1)^0,f,c
  6019  002D52  5009               	movf	(___wmul@multiplier+1)^0,w,c
  6020  002D54  020A               	mulwf	___wmul@multiplicand^0,c
  6021  002D56  50F3               	movf	243,w,c
  6022  002D58  260D               	addwf	(___wmul@product+1)^0,f,c
  6023  002D5A  C00C  F008         	movff	___wmul@product,?___wmul
  6024  002D5E  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  6025  002D62  0012               	return		;funcret
  6026  002D64  FFFF               	dw	65535	; errata NOP
  6027  002D66                     __end_of___wmul:
  6028                           	callstack 0
  6029                           
  6030 ;; *************** function _init_interrupts *****************
  6031 ;; Defined at:
  6032 ;;		line 27 in file "init_PIC.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;		None
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;		None
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  1    wreg      void 
  6039 ;; Registers used:
  6040 ;;		None
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6046 ;;      Params:         0       0       0       0       0       0       0
  6047 ;;      Locals:         0       0       0       0       0       0       0
  6048 ;;      Temps:          0       0       0       0       0       0       0
  6049 ;;      Totals:         0       0       0       0       0       0       0
  6050 ;;Total ram usage:        0 bytes
  6051 ;; Hardware stack levels used: 1
  6052 ;; Hardware stack levels required when called: 1
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_main
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text26
  6061  002DD2                     __ptext26:
  6062                           	callstack 0
  6063  002DD2                     _init_interrupts:
  6064                           	callstack 0
  6065  002DD2  FFFF               	dw	65535	; assembler added errata NOP
  6066  002DD4                     
  6067                           ;init_PIC.c: 29:     PIR1bits.RCIF = 0;
  6068  002DD4  9A9E               	bcf	158,5,c	;volatile
  6069                           
  6070                           ;init_PIC.c: 30:  PIE1bits.RCIE = 1;
  6071  002DD6  8A9D               	bsf	157,5,c	;volatile
  6072                           
  6073                           ;init_PIC.c: 31:  INTCONbits.PEIE = 1;
  6074  002DD8  8CF2               	bsf	242,6,c	;volatile
  6075  002DDA  0012               	return		;funcret
  6076  002DDC  FFFF               	dw	65535	; errata NOP
  6077  002DDE                     __end_of_init_interrupts:
  6078                           	callstack 0
  6079                           
  6080 ;; *************** function _init_USART *****************
  6081 ;; Defined at:
  6082 ;;		line 17 in file "serial_rs232.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;		None
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;		None
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  1    wreg      void 
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6096 ;;      Params:         0       0       0       0       0       0       0
  6097 ;;      Locals:         0       0       0       0       0       0       0
  6098 ;;      Temps:          0       0       0       0       0       0       0
  6099 ;;      Totals:         0       0       0       0       0       0       0
  6100 ;;Total ram usage:        0 bytes
  6101 ;; Hardware stack levels used: 1
  6102 ;; Hardware stack levels required when called: 4
  6103 ;; This function calls:
  6104 ;;		___fltol
  6105 ;;		_roundf
  6106 ;; This function is called by:
  6107 ;;		_main
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text27
  6112  002CC2                     __ptext27:
  6113                           	callstack 0
  6114  002CC2                     _init_USART:
  6115                           	callstack 0
  6116  002CC2  FFFF               	dw	65535	; assembler added errata NOP
  6117  002CC4                     
  6118                           ;serial_rs232.c: 33:     SPBRG = roundf(((Fosc / desired_BaudRate)/16)-1);
  6119  002CC4  0E55               	movlw	85
  6120  002CC6  6E3B               	movwf	roundf@x^0,c
  6121  002CC8  0E55               	movlw	85
  6122  002CCA  6E3C               	movwf	(roundf@x+1)^0,c
  6123  002CCC  0EC8               	movlw	200
  6124  002CCE  6E3D               	movwf	(roundf@x+2)^0,c
  6125  002CD0  0E41               	movlw	65
  6126  002CD2  6E3E               	movwf	(roundf@x+3)^0,c
  6127  002CD4  EC52  F00A         	call	_roundf	;wreg free
  6128  002CD8  C03B  F055         	movff	?_roundf,___fltol@f1
  6129  002CDC  C03C  F056         	movff	?_roundf+1,___fltol@f1+1
  6130  002CE0  C03D  F057         	movff	?_roundf+2,___fltol@f1+2
  6131  002CE4  C03E  F058         	movff	?_roundf+3,___fltol@f1+3
  6132  002CE8  EC78  F010         	call	___fltol	;wreg free
  6133  002CEC  5055               	movf	?___fltol^0,w,c
  6134  002CEE  6EAF               	movwf	175,c	;volatile
  6135  002CF0                     
  6136                           ;serial_rs232.c: 35:  TXSTAbits.TX9=0;
  6137  002CF0  9CAC               	bcf	172,6,c	;volatile
  6138  002CF2                     
  6139                           ;serial_rs232.c: 36:     TXSTAbits.TXEN=1;
  6140  002CF2  8AAC               	bsf	172,5,c	;volatile
  6141  002CF4                     
  6142                           ;serial_rs232.c: 37:     TXSTAbits.SYNC=0;
  6143  002CF4  98AC               	bcf	172,4,c	;volatile
  6144  002CF6                     
  6145                           ;serial_rs232.c: 38:     TXSTAbits.BRGH=1;
  6146  002CF6  84AC               	bsf	172,2,c	;volatile
  6147  002CF8                     
  6148                           ;serial_rs232.c: 39:     RCSTAbits.SPEN=1;
  6149  002CF8  8EAB               	bsf	171,7,c	;volatile
  6150  002CFA                     
  6151                           ;serial_rs232.c: 40:     RCSTAbits.RX9=0;
  6152  002CFA  9CAB               	bcf	171,6,c	;volatile
  6153  002CFC                     
  6154                           ;serial_rs232.c: 41:     RCSTAbits.CREN=1;
  6155  002CFC  88AB               	bsf	171,4,c	;volatile
  6156  002CFE  0012               	return		;funcret
  6157  002D00  FFFF               	dw	65535	; errata NOP
  6158  002D02                     __end_of_init_USART:
  6159                           	callstack 0
  6160                           
  6161 ;; *************** function _roundf *****************
  6162 ;; Defined at:
  6163 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/roundf.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  x               4   58[COMRAM] float 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  y               4   80[COMRAM] float 
  6168 ;;  u               4   76[COMRAM] struct .
  6169 ;;  e               2   70[COMRAM] int 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  4   58[COMRAM] float 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6179 ;;      Params:         4       0       0       0       0       0       0
  6180 ;;      Locals:        18       0       0       0       0       0       0
  6181 ;;      Temps:          4       0       0       0       0       0       0
  6182 ;;      Totals:        26       0       0       0       0       0       0
  6183 ;;Total ram usage:       26 bytes
  6184 ;; Hardware stack levels used: 1
  6185 ;; Hardware stack levels required when called: 3
  6186 ;; This function calls:
  6187 ;;		___fladd
  6188 ;;		___flge
  6189 ;;		___flmul
  6190 ;;		___flneg
  6191 ;;		___flsub
  6192 ;; This function is called by:
  6193 ;;		_init_USART
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text28
  6198  0014A4                     __ptext28:
  6199                           	callstack 0
  6200  0014A4                     _roundf:
  6201                           	callstack 0
  6202  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  6203  0014A6  C09E  F04D         	movff	roundf@F528,roundf@u
  6204  0014AA  C09F  F04E         	movff	roundf@F528+1,roundf@u+1
  6205  0014AE  C0A0  F04F         	movff	roundf@F528+2,roundf@u+2
  6206  0014B2  C0A1  F050         	movff	roundf@F528+3,roundf@u+3
  6207  0014B6  C03B  F04D         	movff	roundf@x,roundf@u
  6208  0014BA  C03C  F04E         	movff	roundf@x+1,roundf@u+1
  6209  0014BE  C03D  F04F         	movff	roundf@x+2,roundf@u+2
  6210  0014C2  C03E  F050         	movff	roundf@x+3,roundf@u+3
  6211  0014C6  C04D  F03F         	movff	roundf@u,??_roundf
  6212  0014CA  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6213  0014CE  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6214  0014D2  C050  F042         	movff	roundf@u+3,??_roundf+3
  6215  0014D6  0E18               	movlw	24
  6216  0014D8  EF74  F00A         	goto	u4670
  6217  0014DC                     u4675:
  6218  0014DC  FFFF               	dw	65535	; assembler added errata NOP
  6219  0014DE  90D8               	bcf	status,0,c
  6220  0014E0  3242               	rrcf	(??_roundf+3)^0,f,c
  6221  0014E2  3241               	rrcf	(??_roundf+2)^0,f,c
  6222  0014E4  3240               	rrcf	(??_roundf+1)^0,f,c
  6223  0014E6  323F               	rrcf	??_roundf^0,f,c
  6224  0014E8                     u4670:
  6225  0014E8  FFFF               	dw	65535	; assembler added errata NOP
  6226  0014EA  2EE8               	decfsz	wreg,f,c
  6227  0014EC  EF6E  F00A         	goto	u4675
  6228  0014F0  503F               	movf	??_roundf^0,w,c
  6229  0014F2  6E47               	movwf	roundf@e^0,c
  6230  0014F4  6A48               	clrf	(roundf@e+1)^0,c
  6231  0014F6  BE48               	btfsc	(roundf@e+1)^0,7,c
  6232  0014F8  EF87  F00A         	goto	u4681
  6233  0014FC  5048               	movf	(roundf@e+1)^0,w,c
  6234  0014FE  E10A               	bnz	u4680
  6235  001500  0E96               	movlw	150
  6236  001502  5C47               	subwf	roundf@e^0,w,c
  6237  001504  A0D8               	btfss	status,0,c
  6238  001506  EF87  F00A         	goto	u4681
  6239  00150A  EF8A  F00A         	goto	u4680
  6240  00150E                     u4681:
  6241  00150E  FFFF               	dw	65535	; assembler added errata NOP
  6242  001510  EF95  F00A         	goto	l4383
  6243  001514                     u4680:
  6244  001514  FFFF               	dw	65535	; assembler added errata NOP
  6245  001516  C03B  F03B         	movff	roundf@x,?_roundf
  6246  00151A  C03C  F03C         	movff	roundf@x+1,?_roundf+1
  6247  00151E  C03D  F03D         	movff	roundf@x+2,?_roundf+2
  6248  001522  C03E  F03E         	movff	roundf@x+3,?_roundf+3
  6249  001526  EF42  F00C         	goto	l1104
  6250  00152A                     l4383:
  6251  00152A  FFFF               	dw	65535	; assembler added errata NOP
  6252  00152C  C04D  F03F         	movff	roundf@u,??_roundf
  6253  001530  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6254  001534  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6255  001538  C050  F042         	movff	roundf@u+3,??_roundf+3
  6256  00153C  0E20               	movlw	32
  6257  00153E  EFA7  F00A         	goto	u4690
  6258  001542                     u4695:
  6259  001542  FFFF               	dw	65535	; assembler added errata NOP
  6260  001544  90D8               	bcf	status,0,c
  6261  001546  3242               	rrcf	(??_roundf+3)^0,f,c
  6262  001548  3241               	rrcf	(??_roundf+2)^0,f,c
  6263  00154A  3240               	rrcf	(??_roundf+1)^0,f,c
  6264  00154C  323F               	rrcf	??_roundf^0,f,c
  6265  00154E                     u4690:
  6266  00154E  FFFF               	dw	65535	; assembler added errata NOP
  6267  001550  2EE8               	decfsz	wreg,f,c
  6268  001552  EFA1  F00A         	goto	u4695
  6269  001556  503F               	movf	??_roundf^0,w,c
  6270  001558  1040               	iorwf	(??_roundf+1)^0,w,c
  6271  00155A  1041               	iorwf	(??_roundf+2)^0,w,c
  6272  00155C  1042               	iorwf	(??_roundf+3)^0,w,c
  6273  00155E  B4D8               	btfsc	status,2,c
  6274  001560  EFB4  F00A         	goto	u4701
  6275  001564  EFB7  F00A         	goto	u4700
  6276  001568                     u4701:
  6277  001568  FFFF               	dw	65535	; assembler added errata NOP
  6278  00156A  EFCA  F00A         	goto	l4387
  6279  00156E                     u4700:
  6280  00156E  FFFF               	dw	65535	; assembler added errata NOP
  6281  001570  C03B  F008         	movff	roundf@x,___flneg@f1
  6282  001574  C03C  F009         	movff	roundf@x+1,___flneg@f1+1
  6283  001578  C03D  F00A         	movff	roundf@x+2,___flneg@f1+2
  6284  00157C  C03E  F00B         	movff	roundf@x+3,___flneg@f1+3
  6285  001580  EC20  F016         	call	___flneg	;wreg free
  6286  001584  C008  F03B         	movff	?___flneg,roundf@x
  6287  001588  C009  F03C         	movff	?___flneg+1,roundf@x+1
  6288  00158C  C00A  F03D         	movff	?___flneg+2,roundf@x+2
  6289  001590  C00B  F03E         	movff	?___flneg+3,roundf@x+3
  6290  001594                     l4387:
  6291  001594  FFFF               	dw	65535	; assembler added errata NOP
  6292  001596  BE48               	btfsc	(roundf@e+1)^0,7,c
  6293  001598  EFDA  F00A         	goto	u4710
  6294  00159C  5048               	movf	(roundf@e+1)^0,w,c
  6295  00159E  E107               	bnz	u4711
  6296  0015A0  0E7E               	movlw	126
  6297  0015A2  5C47               	subwf	roundf@e^0,w,c
  6298  0015A4  B0D8               	btfsc	status,0,c
  6299  0015A6  EFD7  F00A         	goto	u4711
  6300  0015AA  EFDA  F00A         	goto	u4710
  6301  0015AE                     u4711:
  6302  0015AE  FFFF               	dw	65535	; assembler added errata NOP
  6303  0015B0  EFF7  F00A         	goto	l4393
  6304  0015B4                     u4710:
  6305  0015B4  FFFF               	dw	65535	; assembler added errata NOP
  6306  0015B6  C04D  F008         	movff	roundf@u,___flmul@b
  6307  0015BA  C04E  F009         	movff	roundf@u+1,___flmul@b+1
  6308  0015BE  C04F  F00A         	movff	roundf@u+2,___flmul@b+2
  6309  0015C2  C050  F00B         	movff	roundf@u+3,___flmul@b+3
  6310  0015C6  0E00               	movlw	0
  6311  0015C8  6E0C               	movwf	___flmul@a^0,c
  6312  0015CA  0E00               	movlw	0
  6313  0015CC  6E0D               	movwf	(___flmul@a+1)^0,c
  6314  0015CE  0E00               	movlw	0
  6315  0015D0  6E0E               	movwf	(___flmul@a+2)^0,c
  6316  0015D2  0E00               	movlw	0
  6317  0015D4  6E0F               	movwf	(___flmul@a+3)^0,c
  6318  0015D6  ECE7  F005         	call	___flmul	;wreg free
  6319  0015DA  C008  F03B         	movff	?___flmul,?_roundf
  6320  0015DE  C009  F03C         	movff	?___flmul+1,?_roundf+1
  6321  0015E2  C00A  F03D         	movff	?___flmul+2,?_roundf+2
  6322  0015E6  C00B  F03E         	movff	?___flmul+3,?_roundf+3
  6323  0015EA  EF42  F00C         	goto	l1104
  6324  0015EE                     l4393:
  6325  0015EE  FFFF               	dw	65535	; assembler added errata NOP
  6326  0015F0  0E00               	movlw	0
  6327  0015F2  6E0C               	movwf	___fladd@a^0,c
  6328  0015F4  0E00               	movlw	0
  6329  0015F6  6E0D               	movwf	(___fladd@a+1)^0,c
  6330  0015F8  0E00               	movlw	0
  6331  0015FA  6E0E               	movwf	(___fladd@a+2)^0,c
  6332  0015FC  0E4B               	movlw	75
  6333  0015FE  6E0F               	movwf	(___fladd@a+3)^0,c
  6334  001600  C03B  F008         	movff	roundf@x,___fladd@b
  6335  001604  C03C  F009         	movff	roundf@x+1,___fladd@b+1
  6336  001608  C03D  F00A         	movff	roundf@x+2,___fladd@b+2
  6337  00160C  C03E  F00B         	movff	roundf@x+3,___fladd@b+3
  6338  001610  EC43  F000         	call	___fladd	;wreg free
  6339  001614  C008  F049         	movff	?___fladd,_roundf$1335
  6340  001618  C009  F04A         	movff	?___fladd+1,_roundf$1335+1
  6341  00161C  C00A  F04B         	movff	?___fladd+2,_roundf$1335+2
  6342  001620  C00B  F04C         	movff	?___fladd+3,_roundf$1335+3
  6343  001624  0E00               	movlw	0
  6344  001626  6E0C               	movwf	___fladd@a^0,c
  6345  001628  0E00               	movlw	0
  6346  00162A  6E0D               	movwf	(___fladd@a+1)^0,c
  6347  00162C  0E00               	movlw	0
  6348  00162E  6E0E               	movwf	(___fladd@a+2)^0,c
  6349  001630  0ECB               	movlw	203
  6350  001632  6E0F               	movwf	(___fladd@a+3)^0,c
  6351  001634  C049  F008         	movff	_roundf$1335,___fladd@b
  6352  001638  C04A  F009         	movff	_roundf$1335+1,___fladd@b+1
  6353  00163C  C04B  F00A         	movff	_roundf$1335+2,___fladd@b+2
  6354  001640  C04C  F00B         	movff	_roundf$1335+3,___fladd@b+3
  6355  001644  EC43  F000         	call	___fladd	;wreg free
  6356  001648  C008  F043         	movff	?___fladd,_roundf$1336
  6357  00164C  C009  F044         	movff	?___fladd+1,_roundf$1336+1
  6358  001650  C00A  F045         	movff	?___fladd+2,_roundf$1336+2
  6359  001654  C00B  F046         	movff	?___fladd+3,_roundf$1336+3
  6360  001658  C043  F018         	movff	_roundf$1336,___flsub@b
  6361  00165C  C044  F019         	movff	_roundf$1336+1,___flsub@b+1
  6362  001660  C045  F01A         	movff	_roundf$1336+2,___flsub@b+2
  6363  001664  C046  F01B         	movff	_roundf$1336+3,___flsub@b+3
  6364  001668  C03B  F01C         	movff	roundf@x,___flsub@a
  6365  00166C  C03C  F01D         	movff	roundf@x+1,___flsub@a+1
  6366  001670  C03D  F01E         	movff	roundf@x+2,___flsub@a+2
  6367  001674  C03E  F01F         	movff	roundf@x+3,___flsub@a+3
  6368  001678  ECB9  F015         	call	___flsub	;wreg free
  6369  00167C  C018  F051         	movff	?___flsub,roundf@y
  6370  001680  C019  F052         	movff	?___flsub+1,roundf@y+1
  6371  001684  C01A  F053         	movff	?___flsub+2,roundf@y+2
  6372  001688  C01B  F054         	movff	?___flsub+3,roundf@y+3
  6373  00168C  0E00               	movlw	0
  6374  00168E  6E2F               	movwf	___flge@ff1^0,c
  6375  001690  0E00               	movlw	0
  6376  001692  6E30               	movwf	(___flge@ff1+1)^0,c
  6377  001694  0E00               	movlw	0
  6378  001696  6E31               	movwf	(___flge@ff1+2)^0,c
  6379  001698  0E3F               	movlw	63
  6380  00169A  6E32               	movwf	(___flge@ff1+3)^0,c
  6381  00169C  C051  F033         	movff	roundf@y,___flge@ff2
  6382  0016A0  C052  F034         	movff	roundf@y+1,___flge@ff2+1
  6383  0016A4  C053  F035         	movff	roundf@y+2,___flge@ff2+2
  6384  0016A8  C054  F036         	movff	roundf@y+3,___flge@ff2+3
  6385  0016AC  EC14  F011         	call	___flge	;wreg free
  6386  0016B0  B0D8               	btfsc	status,0,c
  6387  0016B2  EF5D  F00B         	goto	u4721
  6388  0016B6  EF60  F00B         	goto	u4720
  6389  0016BA                     u4721:
  6390  0016BA  FFFF               	dw	65535	; assembler added errata NOP
  6391  0016BC  EF97  F00B         	goto	l4397
  6392  0016C0                     u4720:
  6393  0016C0  FFFF               	dw	65535	; assembler added errata NOP
  6394  0016C2  C03B  F00C         	movff	roundf@x,___fladd@a
  6395  0016C6  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  6396  0016CA  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  6397  0016CE  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  6398  0016D2  C051  F008         	movff	roundf@y,___fladd@b
  6399  0016D6  C052  F009         	movff	roundf@y+1,___fladd@b+1
  6400  0016DA  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  6401  0016DE  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  6402  0016E2  EC43  F000         	call	___fladd	;wreg free
  6403  0016E6  C008  F049         	movff	?___fladd,_roundf$1335
  6404  0016EA  C009  F04A         	movff	?___fladd+1,_roundf$1335+1
  6405  0016EE  C00A  F04B         	movff	?___fladd+2,_roundf$1335+2
  6406  0016F2  C00B  F04C         	movff	?___fladd+3,_roundf$1335+3
  6407  0016F6  C049  F008         	movff	_roundf$1335,___fladd@b
  6408  0016FA  C04A  F009         	movff	_roundf$1335+1,___fladd@b+1
  6409  0016FE  C04B  F00A         	movff	_roundf$1335+2,___fladd@b+2
  6410  001702  C04C  F00B         	movff	_roundf$1335+3,___fladd@b+3
  6411  001706  0E00               	movlw	0
  6412  001708  6E0C               	movwf	___fladd@a^0,c
  6413  00170A  0E00               	movlw	0
  6414  00170C  6E0D               	movwf	(___fladd@a+1)^0,c
  6415  00170E  0E80               	movlw	128
  6416  001710  6E0E               	movwf	(___fladd@a+2)^0,c
  6417  001712  0EBF               	movlw	191
  6418  001714  6E0F               	movwf	(___fladd@a+3)^0,c
  6419  001716  EC43  F000         	call	___fladd	;wreg free
  6420  00171A  C008  F051         	movff	?___fladd,roundf@y
  6421  00171E  C009  F052         	movff	?___fladd+1,roundf@y+1
  6422  001722  C00A  F053         	movff	?___fladd+2,roundf@y+2
  6423  001726  C00B  F054         	movff	?___fladd+3,roundf@y+3
  6424  00172A  EF04  F00C         	goto	l4403
  6425  00172E                     l4397:
  6426  00172E  FFFF               	dw	65535	; assembler added errata NOP
  6427  001730  0E00               	movlw	0
  6428  001732  6E2F               	movwf	___flge@ff1^0,c
  6429  001734  0E00               	movlw	0
  6430  001736  6E30               	movwf	(___flge@ff1+1)^0,c
  6431  001738  0E00               	movlw	0
  6432  00173A  6E31               	movwf	(___flge@ff1+2)^0,c
  6433  00173C  0EBF               	movlw	191
  6434  00173E  6E32               	movwf	(___flge@ff1+3)^0,c
  6435  001740  C051  F033         	movff	roundf@y,___flge@ff2
  6436  001744  C052  F034         	movff	roundf@y+1,___flge@ff2+1
  6437  001748  C053  F035         	movff	roundf@y+2,___flge@ff2+2
  6438  00174C  C054  F036         	movff	roundf@y+3,___flge@ff2+3
  6439  001750  EC14  F011         	call	___flge	;wreg free
  6440  001754  A0D8               	btfss	status,0,c
  6441  001756  EFAF  F00B         	goto	u4731
  6442  00175A  EFB2  F00B         	goto	u4730
  6443  00175E                     u4731:
  6444  00175E  FFFF               	dw	65535	; assembler added errata NOP
  6445  001760  EFE9  F00B         	goto	l4401
  6446  001764                     u4730:
  6447  001764  FFFF               	dw	65535	; assembler added errata NOP
  6448  001766  C03B  F00C         	movff	roundf@x,___fladd@a
  6449  00176A  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  6450  00176E  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  6451  001772  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  6452  001776  C051  F008         	movff	roundf@y,___fladd@b
  6453  00177A  C052  F009         	movff	roundf@y+1,___fladd@b+1
  6454  00177E  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  6455  001782  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  6456  001786  EC43  F000         	call	___fladd	;wreg free
  6457  00178A  C008  F049         	movff	?___fladd,_roundf$1335
  6458  00178E  C009  F04A         	movff	?___fladd+1,_roundf$1335+1
  6459  001792  C00A  F04B         	movff	?___fladd+2,_roundf$1335+2
  6460  001796  C00B  F04C         	movff	?___fladd+3,_roundf$1335+3
  6461  00179A  C049  F008         	movff	_roundf$1335,___fladd@b
  6462  00179E  C04A  F009         	movff	_roundf$1335+1,___fladd@b+1
  6463  0017A2  C04B  F00A         	movff	_roundf$1335+2,___fladd@b+2
  6464  0017A6  C04C  F00B         	movff	_roundf$1335+3,___fladd@b+3
  6465  0017AA  0E00               	movlw	0
  6466  0017AC  6E0C               	movwf	___fladd@a^0,c
  6467  0017AE  0E00               	movlw	0
  6468  0017B0  6E0D               	movwf	(___fladd@a+1)^0,c
  6469  0017B2  0E80               	movlw	128
  6470  0017B4  6E0E               	movwf	(___fladd@a+2)^0,c
  6471  0017B6  0E3F               	movlw	63
  6472  0017B8  6E0F               	movwf	(___fladd@a+3)^0,c
  6473  0017BA  EC43  F000         	call	___fladd	;wreg free
  6474  0017BE  C008  F051         	movff	?___fladd,roundf@y
  6475  0017C2  C009  F052         	movff	?___fladd+1,roundf@y+1
  6476  0017C6  C00A  F053         	movff	?___fladd+2,roundf@y+2
  6477  0017CA  C00B  F054         	movff	?___fladd+3,roundf@y+3
  6478  0017CE  EF04  F00C         	goto	l4403
  6479  0017D2                     l4401:
  6480  0017D2  FFFF               	dw	65535	; assembler added errata NOP
  6481  0017D4  C051  F008         	movff	roundf@y,___fladd@b
  6482  0017D8  C052  F009         	movff	roundf@y+1,___fladd@b+1
  6483  0017DC  C053  F00A         	movff	roundf@y+2,___fladd@b+2
  6484  0017E0  C054  F00B         	movff	roundf@y+3,___fladd@b+3
  6485  0017E4  C03B  F00C         	movff	roundf@x,___fladd@a
  6486  0017E8  C03C  F00D         	movff	roundf@x+1,___fladd@a+1
  6487  0017EC  C03D  F00E         	movff	roundf@x+2,___fladd@a+2
  6488  0017F0  C03E  F00F         	movff	roundf@x+3,___fladd@a+3
  6489  0017F4  EC43  F000         	call	___fladd	;wreg free
  6490  0017F8  C008  F051         	movff	?___fladd,roundf@y
  6491  0017FC  C009  F052         	movff	?___fladd+1,roundf@y+1
  6492  001800  C00A  F053         	movff	?___fladd+2,roundf@y+2
  6493  001804  C00B  F054         	movff	?___fladd+3,roundf@y+3
  6494  001808                     l4403:
  6495  001808  FFFF               	dw	65535	; assembler added errata NOP
  6496  00180A  C04D  F03F         	movff	roundf@u,??_roundf
  6497  00180E  C04E  F040         	movff	roundf@u+1,??_roundf+1
  6498  001812  C04F  F041         	movff	roundf@u+2,??_roundf+2
  6499  001816  C050  F042         	movff	roundf@u+3,??_roundf+3
  6500  00181A  0E20               	movlw	32
  6501  00181C  EF16  F00C         	goto	u4740
  6502  001820                     u4745:
  6503  001820  FFFF               	dw	65535	; assembler added errata NOP
  6504  001822  90D8               	bcf	status,0,c
  6505  001824  3242               	rrcf	(??_roundf+3)^0,f,c
  6506  001826  3241               	rrcf	(??_roundf+2)^0,f,c
  6507  001828  3240               	rrcf	(??_roundf+1)^0,f,c
  6508  00182A  323F               	rrcf	??_roundf^0,f,c
  6509  00182C                     u4740:
  6510  00182C  FFFF               	dw	65535	; assembler added errata NOP
  6511  00182E  2EE8               	decfsz	wreg,f,c
  6512  001830  EF10  F00C         	goto	u4745
  6513  001834  503F               	movf	??_roundf^0,w,c
  6514  001836  1040               	iorwf	(??_roundf+1)^0,w,c
  6515  001838  1041               	iorwf	(??_roundf+2)^0,w,c
  6516  00183A  1042               	iorwf	(??_roundf+3)^0,w,c
  6517  00183C  B4D8               	btfsc	status,2,c
  6518  00183E  EF23  F00C         	goto	u4751
  6519  001842  EF26  F00C         	goto	u4750
  6520  001846                     u4751:
  6521  001846  FFFF               	dw	65535	; assembler added errata NOP
  6522  001848  EF39  F00C         	goto	l4407
  6523  00184C                     u4750:
  6524  00184C  FFFF               	dw	65535	; assembler added errata NOP
  6525  00184E  C051  F008         	movff	roundf@y,___flneg@f1
  6526  001852  C052  F009         	movff	roundf@y+1,___flneg@f1+1
  6527  001856  C053  F00A         	movff	roundf@y+2,___flneg@f1+2
  6528  00185A  C054  F00B         	movff	roundf@y+3,___flneg@f1+3
  6529  00185E  EC20  F016         	call	___flneg	;wreg free
  6530  001862  C008  F051         	movff	?___flneg,roundf@y
  6531  001866  C009  F052         	movff	?___flneg+1,roundf@y+1
  6532  00186A  C00A  F053         	movff	?___flneg+2,roundf@y+2
  6533  00186E  C00B  F054         	movff	?___flneg+3,roundf@y+3
  6534  001872                     l4407:
  6535  001872  FFFF               	dw	65535	; assembler added errata NOP
  6536  001874  C051  F03B         	movff	roundf@y,?_roundf
  6537  001878  C052  F03C         	movff	roundf@y+1,?_roundf+1
  6538  00187C  C053  F03D         	movff	roundf@y+2,?_roundf+2
  6539  001880  C054  F03E         	movff	roundf@y+3,?_roundf+3
  6540  001884                     l1104:
  6541  001884  FFFF               	dw	65535	; assembler added errata NOP
  6542  001886  0012               	return		;funcret
  6543  001888  FFFF               	dw	65535	; errata NOP
  6544  00188A                     __end_of_roundf:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function ___flsub *****************
  6548 ;; Defined at:
  6549 ;;		line 245 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  b               4   23[COMRAM] float 
  6552 ;;  a               4   27[COMRAM] float 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;		None
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  4   23[COMRAM] float 
  6557 ;; Registers used:
  6558 ;;		wreg, status,2, status,0, cstack
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6564 ;;      Params:         8       0       0       0       0       0       0
  6565 ;;      Locals:         0       0       0       0       0       0       0
  6566 ;;      Temps:          0       0       0       0       0       0       0
  6567 ;;      Totals:         8       0       0       0       0       0       0
  6568 ;;Total ram usage:        8 bytes
  6569 ;; Hardware stack levels used: 1
  6570 ;; Hardware stack levels required when called: 2
  6571 ;; This function calls:
  6572 ;;		___fladd
  6573 ;; This function is called by:
  6574 ;;		_roundf
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text29
  6579  002B72                     __ptext29:
  6580                           	callstack 0
  6581  002B72                     ___flsub:
  6582                           	callstack 0
  6583  002B72  FFFF               	dw	65535	; assembler added errata NOP
  6584  002B74  0E00               	movlw	0
  6585  002B76  1A1C               	xorwf	___flsub@a^0,f,c
  6586  002B78  0E00               	movlw	0
  6587  002B7A  1A1D               	xorwf	(___flsub@a+1)^0,f,c
  6588  002B7C  0E00               	movlw	0
  6589  002B7E  1A1E               	xorwf	(___flsub@a+2)^0,f,c
  6590  002B80  0E80               	movlw	128
  6591  002B82  1A1F               	xorwf	(___flsub@a+3)^0,f,c
  6592  002B84  C018  F008         	movff	___flsub@b,___fladd@b
  6593  002B88  C019  F009         	movff	___flsub@b+1,___fladd@b+1
  6594  002B8C  C01A  F00A         	movff	___flsub@b+2,___fladd@b+2
  6595  002B90  C01B  F00B         	movff	___flsub@b+3,___fladd@b+3
  6596  002B94  C01C  F00C         	movff	___flsub@a,___fladd@a
  6597  002B98  C01D  F00D         	movff	___flsub@a+1,___fladd@a+1
  6598  002B9C  C01E  F00E         	movff	___flsub@a+2,___fladd@a+2
  6599  002BA0  C01F  F00F         	movff	___flsub@a+3,___fladd@a+3
  6600  002BA4  EC43  F000         	call	___fladd	;wreg free
  6601  002BA8  C008  F018         	movff	?___fladd,?___flsub
  6602  002BAC  C009  F019         	movff	?___fladd+1,?___flsub+1
  6603  002BB0  C00A  F01A         	movff	?___fladd+2,?___flsub+2
  6604  002BB4  C00B  F01B         	movff	?___fladd+3,?___flsub+3
  6605  002BB8  0012               	return		;funcret
  6606  002BBA  FFFF               	dw	65535	; errata NOP
  6607  002BBC                     __end_of___flsub:
  6608                           	callstack 0
  6609                           
  6610 ;; *************** function ___fladd *****************
  6611 ;; Defined at:
  6612 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;  b               4    7[COMRAM] float 
  6615 ;;  a               4   11[COMRAM] float 
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;  grs             1   22[COMRAM] unsigned char 
  6618 ;;  bexp            1   21[COMRAM] unsigned char 
  6619 ;;  aexp            1   20[COMRAM] unsigned char 
  6620 ;;  signs           1   19[COMRAM] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  4    7[COMRAM] unsigned char 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6630 ;;      Params:         8       0       0       0       0       0       0
  6631 ;;      Locals:         4       0       0       0       0       0       0
  6632 ;;      Temps:          4       0       0       0       0       0       0
  6633 ;;      Totals:        16       0       0       0       0       0       0
  6634 ;;Total ram usage:       16 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; Hardware stack levels required when called: 1
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		___flsub
  6641 ;;		_roundf
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text30
  6646  000086                     __ptext30:
  6647                           	callstack 0
  6648  000086                     ___fladd:
  6649                           	callstack 0
  6650  000086  FFFF               	dw	65535	; assembler added errata NOP
  6651  000088  500B               	movf	(___fladd@b+3)^0,w,c
  6652  00008A  0B80               	andlw	128
  6653  00008C  6E14               	movwf	___fladd@signs^0,c
  6654  00008E  500B               	movf	(___fladd@b+3)^0,w,c
  6655  000090  240B               	addwf	(___fladd@b+3)^0,w,c
  6656  000092  6E16               	movwf	___fladd@bexp^0,c
  6657  000094  AE0A               	btfss	(___fladd@b+2)^0,7,c
  6658  000096  EF4F  F000         	goto	u2051
  6659  00009A  EF52  F000         	goto	u2050
  6660  00009E                     u2051:
  6661  00009E  FFFF               	dw	65535	; assembler added errata NOP
  6662  0000A0  EF54  F000         	goto	l2669
  6663  0000A4                     u2050:
  6664  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  6665  0000A6  8016               	bsf	___fladd@bexp^0,0,c
  6666  0000A8                     l2669:
  6667  0000A8  FFFF               	dw	65535	; assembler added errata NOP
  6668  0000AA  5016               	movf	___fladd@bexp^0,w,c
  6669  0000AC  B4D8               	btfsc	status,2,c
  6670  0000AE  EF5B  F000         	goto	u2061
  6671  0000B2  EF5E  F000         	goto	u2060
  6672  0000B6                     u2061:
  6673  0000B6  FFFF               	dw	65535	; assembler added errata NOP
  6674  0000B8  EF77  F000         	goto	l2679
  6675  0000BC                     u2060:
  6676  0000BC  FFFF               	dw	65535	; assembler added errata NOP
  6677  0000BE  2816               	incf	___fladd@bexp^0,w,c
  6678  0000C0  A4D8               	btfss	status,2,c
  6679  0000C2  EF65  F000         	goto	u2071
  6680  0000C6  EF68  F000         	goto	u2070
  6681  0000CA                     u2071:
  6682  0000CA  FFFF               	dw	65535	; assembler added errata NOP
  6683  0000CC  EF71  F000         	goto	l2675
  6684  0000D0                     u2070:
  6685  0000D0  FFFF               	dw	65535	; assembler added errata NOP
  6686  0000D2  0E00               	movlw	0
  6687  0000D4  6E08               	movwf	___fladd@b^0,c
  6688  0000D6  0E00               	movlw	0
  6689  0000D8  6E09               	movwf	(___fladd@b+1)^0,c
  6690  0000DA  0E00               	movlw	0
  6691  0000DC  6E0A               	movwf	(___fladd@b+2)^0,c
  6692  0000DE  0E00               	movlw	0
  6693  0000E0  6E0B               	movwf	(___fladd@b+3)^0,c
  6694  0000E2                     l2675:
  6695  0000E2  FFFF               	dw	65535	; assembler added errata NOP
  6696  0000E4  8E0A               	bsf	(___fladd@b+2)^0,7,c
  6697  0000E6  0E00               	movlw	0
  6698  0000E8  6E0B               	movwf	(___fladd@b+3)^0,c
  6699  0000EA  EF80  F000         	goto	l2681
  6700  0000EE                     l2679:
  6701  0000EE  FFFF               	dw	65535	; assembler added errata NOP
  6702  0000F0  0E00               	movlw	0
  6703  0000F2  6E08               	movwf	___fladd@b^0,c
  6704  0000F4  0E00               	movlw	0
  6705  0000F6  6E09               	movwf	(___fladd@b+1)^0,c
  6706  0000F8  0E00               	movlw	0
  6707  0000FA  6E0A               	movwf	(___fladd@b+2)^0,c
  6708  0000FC  0E00               	movlw	0
  6709  0000FE  6E0B               	movwf	(___fladd@b+3)^0,c
  6710  000100                     l2681:
  6711  000100  FFFF               	dw	65535	; assembler added errata NOP
  6712  000102  500F               	movf	(___fladd@a+3)^0,w,c
  6713  000104  0B80               	andlw	128
  6714  000106  6E15               	movwf	___fladd@aexp^0,c
  6715  000108  5014               	movf	___fladd@signs^0,w,c
  6716  00010A  1815               	xorwf	___fladd@aexp^0,w,c
  6717  00010C  B4D8               	btfsc	status,2,c
  6718  00010E  EF8B  F000         	goto	u2081
  6719  000112  EF8E  F000         	goto	u2080
  6720  000116                     u2081:
  6721  000116  FFFF               	dw	65535	; assembler added errata NOP
  6722  000118  EF90  F000         	goto	l2687
  6723  00011C                     u2080:
  6724  00011C  FFFF               	dw	65535	; assembler added errata NOP
  6725  00011E  8C14               	bsf	___fladd@signs^0,6,c
  6726  000120                     l2687:
  6727  000120  FFFF               	dw	65535	; assembler added errata NOP
  6728  000122  500F               	movf	(___fladd@a+3)^0,w,c
  6729  000124  240F               	addwf	(___fladd@a+3)^0,w,c
  6730  000126  6E15               	movwf	___fladd@aexp^0,c
  6731  000128  AE0E               	btfss	(___fladd@a+2)^0,7,c
  6732  00012A  EF99  F000         	goto	u2091
  6733  00012E  EF9C  F000         	goto	u2090
  6734  000132                     u2091:
  6735  000132  FFFF               	dw	65535	; assembler added errata NOP
  6736  000134  EF9E  F000         	goto	l2693
  6737  000138                     u2090:
  6738  000138  FFFF               	dw	65535	; assembler added errata NOP
  6739  00013A  8015               	bsf	___fladd@aexp^0,0,c
  6740  00013C                     l2693:
  6741  00013C  FFFF               	dw	65535	; assembler added errata NOP
  6742  00013E  5015               	movf	___fladd@aexp^0,w,c
  6743  000140  B4D8               	btfsc	status,2,c
  6744  000142  EFA5  F000         	goto	u2101
  6745  000146  EFA8  F000         	goto	u2100
  6746  00014A                     u2101:
  6747  00014A  FFFF               	dw	65535	; assembler added errata NOP
  6748  00014C  EFC1  F000         	goto	l2703
  6749  000150                     u2100:
  6750  000150  FFFF               	dw	65535	; assembler added errata NOP
  6751  000152  2815               	incf	___fladd@aexp^0,w,c
  6752  000154  A4D8               	btfss	status,2,c
  6753  000156  EFAF  F000         	goto	u2111
  6754  00015A  EFB2  F000         	goto	u2110
  6755  00015E                     u2111:
  6756  00015E  FFFF               	dw	65535	; assembler added errata NOP
  6757  000160  EFBB  F000         	goto	l2699
  6758  000164                     u2110:
  6759  000164  FFFF               	dw	65535	; assembler added errata NOP
  6760  000166  0E00               	movlw	0
  6761  000168  6E0C               	movwf	___fladd@a^0,c
  6762  00016A  0E00               	movlw	0
  6763  00016C  6E0D               	movwf	(___fladd@a+1)^0,c
  6764  00016E  0E00               	movlw	0
  6765  000170  6E0E               	movwf	(___fladd@a+2)^0,c
  6766  000172  0E00               	movlw	0
  6767  000174  6E0F               	movwf	(___fladd@a+3)^0,c
  6768  000176                     l2699:
  6769  000176  FFFF               	dw	65535	; assembler added errata NOP
  6770  000178  8E0E               	bsf	(___fladd@a+2)^0,7,c
  6771  00017A  0E00               	movlw	0
  6772  00017C  6E0F               	movwf	(___fladd@a+3)^0,c
  6773  00017E  EFCA  F000         	goto	l2705
  6774  000182                     l2703:
  6775  000182  FFFF               	dw	65535	; assembler added errata NOP
  6776  000184  0E00               	movlw	0
  6777  000186  6E0C               	movwf	___fladd@a^0,c
  6778  000188  0E00               	movlw	0
  6779  00018A  6E0D               	movwf	(___fladd@a+1)^0,c
  6780  00018C  0E00               	movlw	0
  6781  00018E  6E0E               	movwf	(___fladd@a+2)^0,c
  6782  000190  0E00               	movlw	0
  6783  000192  6E0F               	movwf	(___fladd@a+3)^0,c
  6784  000194                     l2705:
  6785  000194  FFFF               	dw	65535	; assembler added errata NOP
  6786  000196  5016               	movf	___fladd@bexp^0,w,c
  6787  000198  5C15               	subwf	___fladd@aexp^0,w,c
  6788  00019A  B0D8               	btfsc	status,0,c
  6789  00019C  EFD2  F000         	goto	u2121
  6790  0001A0  EFD5  F000         	goto	u2120
  6791  0001A4                     u2121:
  6792  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  6793  0001A6  EF00  F001         	goto	l2741
  6794  0001AA                     u2120:
  6795  0001AA  FFFF               	dw	65535	; assembler added errata NOP
  6796  0001AC  AC14               	btfss	___fladd@signs^0,6,c
  6797  0001AE  EFDB  F000         	goto	u2131
  6798  0001B2  EFDE  F000         	goto	u2130
  6799  0001B6                     u2131:
  6800  0001B6  FFFF               	dw	65535	; assembler added errata NOP
  6801  0001B8  EFE1  F000         	goto	l2711
  6802  0001BC                     u2130:
  6803  0001BC  FFFF               	dw	65535	; assembler added errata NOP
  6804  0001BE  0E80               	movlw	128
  6805  0001C0  1A14               	xorwf	___fladd@signs^0,f,c
  6806  0001C2                     l2711:
  6807  0001C2  FFFF               	dw	65535	; assembler added errata NOP
  6808  0001C4  C016  F017         	movff	___fladd@bexp,___fladd@grs
  6809  0001C8  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  6810  0001CC  C017  F015         	movff	___fladd@grs,___fladd@aexp
  6811  0001D0  C008  F017         	movff	___fladd@b,___fladd@grs
  6812  0001D4  C00C  F008         	movff	___fladd@a,___fladd@b
  6813  0001D8  C017  F00C         	movff	___fladd@grs,___fladd@a
  6814  0001DC  C009  F017         	movff	___fladd@b+1,___fladd@grs
  6815  0001E0  C00D  F009         	movff	___fladd@a+1,___fladd@b+1
  6816  0001E4  C017  F00D         	movff	___fladd@grs,___fladd@a+1
  6817  0001E8  C00A  F017         	movff	___fladd@b+2,___fladd@grs
  6818  0001EC  C00E  F00A         	movff	___fladd@a+2,___fladd@b+2
  6819  0001F0  C017  F00E         	movff	___fladd@grs,___fladd@a+2
  6820  0001F4  C00B  F017         	movff	___fladd@b+3,___fladd@grs
  6821  0001F8  C00F  F00B         	movff	___fladd@a+3,___fladd@b+3
  6822  0001FC  C017  F00F         	movff	___fladd@grs,___fladd@a+3
  6823  000200                     l2741:
  6824  000200  FFFF               	dw	65535	; assembler added errata NOP
  6825  000202  0E00               	movlw	0
  6826  000204  6E17               	movwf	___fladd@grs^0,c
  6827  000206  5016               	movf	___fladd@bexp^0,w,c
  6828  000208  C015  F010         	movff	___fladd@aexp,??___fladd
  6829  00020C  6A11               	clrf	(??___fladd+1)^0,c
  6830  00020E  5E10               	subwf	??___fladd^0,f,c
  6831  000210  0E00               	movlw	0
  6832  000212  5A11               	subwfb	(??___fladd+1)^0,f,c
  6833  000214  BE11               	btfsc	(??___fladd+1)^0,7,c
  6834  000216  EF16  F001         	goto	u2141
  6835  00021A  5011               	movf	(??___fladd+1)^0,w,c
  6836  00021C  E10A               	bnz	u2140
  6837  00021E  0E1A               	movlw	26
  6838  000220  5C10               	subwf	??___fladd^0,w,c
  6839  000222  A0D8               	btfss	status,0,c
  6840  000224  EF16  F001         	goto	u2141
  6841  000228  EF19  F001         	goto	u2140
  6842  00022C                     u2141:
  6843  00022C  FFFF               	dw	65535	; assembler added errata NOP
  6844  00022E  EF5C  F001         	goto	l899
  6845  000232                     u2140:
  6846  000232  FFFF               	dw	65535	; assembler added errata NOP
  6847  000234  5008               	movf	___fladd@b^0,w,c
  6848  000236  1009               	iorwf	(___fladd@b+1)^0,w,c
  6849  000238  100A               	iorwf	(___fladd@b+2)^0,w,c
  6850  00023A  100B               	iorwf	(___fladd@b+3)^0,w,c
  6851  00023C  A4D8               	btfss	status,2,c
  6852  00023E  EF23  F001         	goto	u2151
  6853  000242  EF27  F001         	goto	u2150
  6854  000246                     u2151:
  6855  000246  FFFF               	dw	65535	; assembler added errata NOP
  6856  000248  0E01               	movlw	1
  6857  00024A  EF29  F001         	goto	u2160
  6858  00024E                     u2150:
  6859  00024E  FFFF               	dw	65535	; assembler added errata NOP
  6860  000250  0E00               	movlw	0
  6861  000252                     u2160:
  6862  000252  FFFF               	dw	65535	; assembler added errata NOP
  6863  000254  6E17               	movwf	___fladd@grs^0,c
  6864  000256  0E00               	movlw	0
  6865  000258  6E08               	movwf	___fladd@b^0,c
  6866  00025A  0E00               	movlw	0
  6867  00025C  6E09               	movwf	(___fladd@b+1)^0,c
  6868  00025E  0E00               	movlw	0
  6869  000260  6E0A               	movwf	(___fladd@b+2)^0,c
  6870  000262  0E00               	movlw	0
  6871  000264  6E0B               	movwf	(___fladd@b+3)^0,c
  6872  000266  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  6873  00026A  EF67  F001         	goto	l898
  6874  00026E                     l900:
  6875  00026E  FFFF               	dw	65535	; assembler added errata NOP
  6876  000270  A017               	btfss	___fladd@grs^0,0,c
  6877  000272  EF3D  F001         	goto	u2171
  6878  000276  EF40  F001         	goto	u2170
  6879  00027A                     u2171:
  6880  00027A  FFFF               	dw	65535	; assembler added errata NOP
  6881  00027C  EF47  F001         	goto	l2753
  6882  000280                     u2170:
  6883  000280  FFFF               	dw	65535	; assembler added errata NOP
  6884  000282  90D8               	bcf	status,0,c
  6885  000284  3017               	rrcf	___fladd@grs^0,w,c
  6886  000286  0901               	iorlw	1
  6887  000288  6E17               	movwf	___fladd@grs^0,c
  6888  00028A  EF4A  F001         	goto	l2755
  6889  00028E                     l2753:
  6890  00028E  FFFF               	dw	65535	; assembler added errata NOP
  6891  000290  90D8               	bcf	status,0,c
  6892  000292  3217               	rrcf	___fladd@grs^0,f,c
  6893  000294                     l2755:
  6894  000294  FFFF               	dw	65535	; assembler added errata NOP
  6895  000296  A008               	btfss	___fladd@b^0,0,c
  6896  000298  EF50  F001         	goto	u2181
  6897  00029C  EF53  F001         	goto	u2180
  6898  0002A0                     u2181:
  6899  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  6900  0002A2  EF55  F001         	goto	l2759
  6901  0002A6                     u2180:
  6902  0002A6  FFFF               	dw	65535	; assembler added errata NOP
  6903  0002A8  8E17               	bsf	___fladd@grs^0,7,c
  6904  0002AA                     l2759:
  6905  0002AA  FFFF               	dw	65535	; assembler added errata NOP
  6906  0002AC  340B               	rlcf	(___fladd@b+3)^0,w,c
  6907  0002AE  320B               	rrcf	(___fladd@b+3)^0,f,c
  6908  0002B0  320A               	rrcf	(___fladd@b+2)^0,f,c
  6909  0002B2  3209               	rrcf	(___fladd@b+1)^0,f,c
  6910  0002B4  3208               	rrcf	___fladd@b^0,f,c
  6911  0002B6  2A16               	incf	___fladd@bexp^0,f,c
  6912  0002B8                     l899:
  6913  0002B8  FFFF               	dw	65535	; assembler added errata NOP
  6914  0002BA  5015               	movf	___fladd@aexp^0,w,c
  6915  0002BC  5C16               	subwf	___fladd@bexp^0,w,c
  6916  0002BE  A0D8               	btfss	status,0,c
  6917  0002C0  EF64  F001         	goto	u2191
  6918  0002C4  EF67  F001         	goto	u2190
  6919  0002C8                     u2191:
  6920  0002C8  FFFF               	dw	65535	; assembler added errata NOP
  6921  0002CA  EF37  F001         	goto	l900
  6922  0002CE                     u2190:
  6923  0002CE                     l898:
  6924  0002CE  FFFF               	dw	65535	; assembler added errata NOP
  6925  0002D0  BC14               	btfsc	___fladd@signs^0,6,c
  6926  0002D2  EF6D  F001         	goto	u2201
  6927  0002D6  EF70  F001         	goto	u2200
  6928  0002DA                     u2201:
  6929  0002DA  FFFF               	dw	65535	; assembler added errata NOP
  6930  0002DC  EFBD  F001         	goto	l2787
  6931  0002E0                     u2200:
  6932  0002E0  FFFF               	dw	65535	; assembler added errata NOP
  6933  0002E2  5016               	movf	___fladd@bexp^0,w,c
  6934  0002E4  A4D8               	btfss	status,2,c
  6935  0002E6  EF77  F001         	goto	u2211
  6936  0002EA  EF7A  F001         	goto	u2210
  6937  0002EE                     u2211:
  6938  0002EE  FFFF               	dw	65535	; assembler added errata NOP
  6939  0002F0  EF85  F001         	goto	l2769
  6940  0002F4                     u2210:
  6941  0002F4  FFFF               	dw	65535	; assembler added errata NOP
  6942  0002F6  0E00               	movlw	0
  6943  0002F8  6E08               	movwf	?___fladd^0,c
  6944  0002FA  0E00               	movlw	0
  6945  0002FC  6E09               	movwf	(?___fladd+1)^0,c
  6946  0002FE  0E00               	movlw	0
  6947  000300  6E0A               	movwf	(?___fladd+2)^0,c
  6948  000302  0E00               	movlw	0
  6949  000304  6E0B               	movwf	(?___fladd+3)^0,c
  6950  000306  EF14  F003         	goto	l907
  6951  00030A                     l2769:
  6952  00030A  FFFF               	dw	65535	; assembler added errata NOP
  6953  00030C  500C               	movf	___fladd@a^0,w,c
  6954  00030E  2608               	addwf	___fladd@b^0,f,c
  6955  000310  500D               	movf	(___fladd@a+1)^0,w,c
  6956  000312  2209               	addwfc	(___fladd@b+1)^0,f,c
  6957  000314  500E               	movf	(___fladd@a+2)^0,w,c
  6958  000316  220A               	addwfc	(___fladd@b+2)^0,f,c
  6959  000318  500F               	movf	(___fladd@a+3)^0,w,c
  6960  00031A  220B               	addwfc	(___fladd@b+3)^0,f,c
  6961  00031C  A00B               	btfss	(___fladd@b+3)^0,0,c
  6962  00031E  EF93  F001         	goto	u2221
  6963  000322  EF96  F001         	goto	u2220
  6964  000326                     u2221:
  6965  000326  FFFF               	dw	65535	; assembler added errata NOP
  6966  000328  EF61  F002         	goto	l2823
  6967  00032C                     u2220:
  6968  00032C  FFFF               	dw	65535	; assembler added errata NOP
  6969  00032E  A017               	btfss	___fladd@grs^0,0,c
  6970  000330  EF9C  F001         	goto	u2231
  6971  000334  EF9F  F001         	goto	u2230
  6972  000338                     u2231:
  6973  000338  FFFF               	dw	65535	; assembler added errata NOP
  6974  00033A  EFA6  F001         	goto	l2777
  6975  00033E                     u2230:
  6976  00033E  FFFF               	dw	65535	; assembler added errata NOP
  6977  000340  90D8               	bcf	status,0,c
  6978  000342  3017               	rrcf	___fladd@grs^0,w,c
  6979  000344  0901               	iorlw	1
  6980  000346  6E17               	movwf	___fladd@grs^0,c
  6981  000348  EFA9  F001         	goto	l2779
  6982  00034C                     l2777:
  6983  00034C  FFFF               	dw	65535	; assembler added errata NOP
  6984  00034E  90D8               	bcf	status,0,c
  6985  000350  3217               	rrcf	___fladd@grs^0,f,c
  6986  000352                     l2779:
  6987  000352  FFFF               	dw	65535	; assembler added errata NOP
  6988  000354  A008               	btfss	___fladd@b^0,0,c
  6989  000356  EFAF  F001         	goto	u2241
  6990  00035A  EFB2  F001         	goto	u2240
  6991  00035E                     u2241:
  6992  00035E  FFFF               	dw	65535	; assembler added errata NOP
  6993  000360  EFB4  F001         	goto	l2783
  6994  000364                     u2240:
  6995  000364  FFFF               	dw	65535	; assembler added errata NOP
  6996  000366  8E17               	bsf	___fladd@grs^0,7,c
  6997  000368                     l2783:
  6998  000368  FFFF               	dw	65535	; assembler added errata NOP
  6999  00036A  340B               	rlcf	(___fladd@b+3)^0,w,c
  7000  00036C  320B               	rrcf	(___fladd@b+3)^0,f,c
  7001  00036E  320A               	rrcf	(___fladd@b+2)^0,f,c
  7002  000370  3209               	rrcf	(___fladd@b+1)^0,f,c
  7003  000372  3208               	rrcf	___fladd@b^0,f,c
  7004  000374  2A16               	incf	___fladd@bexp^0,f,c
  7005  000376  EF61  F002         	goto	l2823
  7006  00037A                     l2787:
  7007  00037A  FFFF               	dw	65535	; assembler added errata NOP
  7008  00037C  500C               	movf	___fladd@a^0,w,c
  7009  00037E  5C08               	subwf	___fladd@b^0,w,c
  7010  000380  500D               	movf	(___fladd@a+1)^0,w,c
  7011  000382  5809               	subwfb	(___fladd@b+1)^0,w,c
  7012  000384  500E               	movf	(___fladd@a+2)^0,w,c
  7013  000386  580A               	subwfb	(___fladd@b+2)^0,w,c
  7014  000388  500B               	movf	(___fladd@b+3)^0,w,c
  7015  00038A  0A80               	xorlw	128
  7016  00038C  6E10               	movwf	??___fladd^0,c
  7017  00038E  500F               	movf	(___fladd@a+3)^0,w,c
  7018  000390  0A80               	xorlw	128
  7019  000392  5810               	subwfb	??___fladd^0,w,c
  7020  000394  B0D8               	btfsc	status,0,c
  7021  000396  EFCF  F001         	goto	u2251
  7022  00039A  EFD2  F001         	goto	u2250
  7023  00039E                     u2251:
  7024  00039E  FFFF               	dw	65535	; assembler added errata NOP
  7025  0003A0  EF00  F002         	goto	l2797
  7026  0003A4                     u2250:
  7027  0003A4  FFFF               	dw	65535	; assembler added errata NOP
  7028  0003A6  5008               	movf	___fladd@b^0,w,c
  7029  0003A8  5C0C               	subwf	___fladd@a^0,w,c
  7030  0003AA  6E10               	movwf	??___fladd^0,c
  7031  0003AC  5009               	movf	(___fladd@b+1)^0,w,c
  7032  0003AE  580D               	subwfb	(___fladd@a+1)^0,w,c
  7033  0003B0  6E11               	movwf	(??___fladd+1)^0,c
  7034  0003B2  500A               	movf	(___fladd@b+2)^0,w,c
  7035  0003B4  580E               	subwfb	(___fladd@a+2)^0,w,c
  7036  0003B6  6E12               	movwf	(??___fladd+2)^0,c
  7037  0003B8  500B               	movf	(___fladd@b+3)^0,w,c
  7038  0003BA  580F               	subwfb	(___fladd@a+3)^0,w,c
  7039  0003BC  6E13               	movwf	(??___fladd+3)^0,c
  7040  0003BE  0EFF               	movlw	255
  7041  0003C0  2410               	addwf	??___fladd^0,w,c
  7042  0003C2  6E08               	movwf	___fladd@b^0,c
  7043  0003C4  0EFF               	movlw	255
  7044  0003C6  2011               	addwfc	(??___fladd+1)^0,w,c
  7045  0003C8  6E09               	movwf	(___fladd@b+1)^0,c
  7046  0003CA  0EFF               	movlw	255
  7047  0003CC  2012               	addwfc	(??___fladd+2)^0,w,c
  7048  0003CE  6E0A               	movwf	(___fladd@b+2)^0,c
  7049  0003D0  0EFF               	movlw	255
  7050  0003D2  2013               	addwfc	(??___fladd+3)^0,w,c
  7051  0003D4  6E0B               	movwf	(___fladd@b+3)^0,c
  7052  0003D6  0E80               	movlw	128
  7053  0003D8  1A14               	xorwf	___fladd@signs^0,f,c
  7054  0003DA  6C17               	negf	___fladd@grs^0,c
  7055  0003DC  5017               	movf	___fladd@grs^0,w,c
  7056  0003DE  A4D8               	btfss	status,2,c
  7057  0003E0  EFF4  F001         	goto	u2261
  7058  0003E4  EFF7  F001         	goto	u2260
  7059  0003E8                     u2261:
  7060  0003E8  FFFF               	dw	65535	; assembler added errata NOP
  7061  0003EA  EF09  F002         	goto	l915
  7062  0003EE                     u2260:
  7063  0003EE  FFFF               	dw	65535	; assembler added errata NOP
  7064  0003F0  0E01               	movlw	1
  7065  0003F2  2608               	addwf	___fladd@b^0,f,c
  7066  0003F4  0E00               	movlw	0
  7067  0003F6  2209               	addwfc	(___fladd@b+1)^0,f,c
  7068  0003F8  220A               	addwfc	(___fladd@b+2)^0,f,c
  7069  0003FA  220B               	addwfc	(___fladd@b+3)^0,f,c
  7070  0003FC  EF09  F002         	goto	l915
  7071  000400                     l2797:
  7072  000400  FFFF               	dw	65535	; assembler added errata NOP
  7073  000402  500C               	movf	___fladd@a^0,w,c
  7074  000404  5E08               	subwf	___fladd@b^0,f,c
  7075  000406  500D               	movf	(___fladd@a+1)^0,w,c
  7076  000408  5A09               	subwfb	(___fladd@b+1)^0,f,c
  7077  00040A  500E               	movf	(___fladd@a+2)^0,w,c
  7078  00040C  5A0A               	subwfb	(___fladd@b+2)^0,f,c
  7079  00040E  500F               	movf	(___fladd@a+3)^0,w,c
  7080  000410  5A0B               	subwfb	(___fladd@b+3)^0,f,c
  7081  000412                     l915:
  7082  000412  FFFF               	dw	65535	; assembler added errata NOP
  7083  000414  5008               	movf	___fladd@b^0,w,c
  7084  000416  1009               	iorwf	(___fladd@b+1)^0,w,c
  7085  000418  100A               	iorwf	(___fladd@b+2)^0,w,c
  7086  00041A  100B               	iorwf	(___fladd@b+3)^0,w,c
  7087  00041C  A4D8               	btfss	status,2,c
  7088  00041E  EF13  F002         	goto	u2271
  7089  000422  EF16  F002         	goto	u2270
  7090  000426                     u2271:
  7091  000426  FFFF               	dw	65535	; assembler added errata NOP
  7092  000428  EF58  F002         	goto	l2821
  7093  00042C                     u2270:
  7094  00042C  FFFF               	dw	65535	; assembler added errata NOP
  7095  00042E  5017               	movf	___fladd@grs^0,w,c
  7096  000430  A4D8               	btfss	status,2,c
  7097  000432  EF1D  F002         	goto	u2281
  7098  000436  EF20  F002         	goto	u2280
  7099  00043A                     u2281:
  7100  00043A  FFFF               	dw	65535	; assembler added errata NOP
  7101  00043C  EF58  F002         	goto	l2821
  7102  000440                     u2280:
  7103  000440  FFFF               	dw	65535	; assembler added errata NOP
  7104  000442  0E00               	movlw	0
  7105  000444  6E08               	movwf	?___fladd^0,c
  7106  000446  0E00               	movlw	0
  7107  000448  6E09               	movwf	(?___fladd+1)^0,c
  7108  00044A  0E00               	movlw	0
  7109  00044C  6E0A               	movwf	(?___fladd+2)^0,c
  7110  00044E  0E00               	movlw	0
  7111  000450  6E0B               	movwf	(?___fladd+3)^0,c
  7112  000452  EF14  F003         	goto	l907
  7113  000456                     l2805:
  7114  000456  FFFF               	dw	65535	; assembler added errata NOP
  7115  000458  90D8               	bcf	status,0,c
  7116  00045A  3608               	rlcf	___fladd@b^0,f,c
  7117  00045C  3609               	rlcf	(___fladd@b+1)^0,f,c
  7118  00045E  360A               	rlcf	(___fladd@b+2)^0,f,c
  7119  000460  360B               	rlcf	(___fladd@b+3)^0,f,c
  7120  000462  AE17               	btfss	___fladd@grs^0,7,c
  7121  000464  EF36  F002         	goto	u2291
  7122  000468  EF39  F002         	goto	u2290
  7123  00046C                     u2291:
  7124  00046C  FFFF               	dw	65535	; assembler added errata NOP
  7125  00046E  EF3B  F002         	goto	l2811
  7126  000472                     u2290:
  7127  000472  FFFF               	dw	65535	; assembler added errata NOP
  7128  000474  8008               	bsf	___fladd@b^0,0,c
  7129  000476                     l2811:
  7130  000476  FFFF               	dw	65535	; assembler added errata NOP
  7131  000478  A017               	btfss	___fladd@grs^0,0,c
  7132  00047A  EF41  F002         	goto	u2301
  7133  00047E  EF44  F002         	goto	u2300
  7134  000482                     u2301:
  7135  000482  FFFF               	dw	65535	; assembler added errata NOP
  7136  000484  EF49  F002         	goto	l2815
  7137  000488                     u2300:
  7138  000488  FFFF               	dw	65535	; assembler added errata NOP
  7139  00048A  80D8               	bsf	status,0,c
  7140  00048C  3617               	rlcf	___fladd@grs^0,f,c
  7141  00048E  EF4C  F002         	goto	l2817
  7142  000492                     l2815:
  7143  000492  FFFF               	dw	65535	; assembler added errata NOP
  7144  000494  90D8               	bcf	status,0,c
  7145  000496  3617               	rlcf	___fladd@grs^0,f,c
  7146  000498                     l2817:
  7147  000498  FFFF               	dw	65535	; assembler added errata NOP
  7148  00049A  5016               	movf	___fladd@bexp^0,w,c
  7149  00049C  B4D8               	btfsc	status,2,c
  7150  00049E  EF53  F002         	goto	u2311
  7151  0004A2  EF56  F002         	goto	u2310
  7152  0004A6                     u2311:
  7153  0004A6  FFFF               	dw	65535	; assembler added errata NOP
  7154  0004A8  EF58  F002         	goto	l2821
  7155  0004AC                     u2310:
  7156  0004AC  FFFF               	dw	65535	; assembler added errata NOP
  7157  0004AE  0616               	decf	___fladd@bexp^0,f,c
  7158  0004B0                     l2821:
  7159  0004B0  FFFF               	dw	65535	; assembler added errata NOP
  7160  0004B2  AE0A               	btfss	(___fladd@b+2)^0,7,c
  7161  0004B4  EF5E  F002         	goto	u2321
  7162  0004B8  EF61  F002         	goto	u2320
  7163  0004BC                     u2321:
  7164  0004BC  FFFF               	dw	65535	; assembler added errata NOP
  7165  0004BE  EF2B  F002         	goto	l2805
  7166  0004C2                     u2320:
  7167  0004C2                     l2823:
  7168  0004C2  FFFF               	dw	65535	; assembler added errata NOP
  7169  0004C4  0E00               	movlw	0
  7170  0004C6  6E15               	movwf	___fladd@aexp^0,c
  7171  0004C8  AE17               	btfss	___fladd@grs^0,7,c
  7172  0004CA  EF69  F002         	goto	u2331
  7173  0004CE  EF6C  F002         	goto	u2330
  7174  0004D2                     u2331:
  7175  0004D2  FFFF               	dw	65535	; assembler added errata NOP
  7176  0004D4  EF8B  F002         	goto	l924
  7177  0004D8                     u2330:
  7178  0004D8  FFFF               	dw	65535	; assembler added errata NOP
  7179  0004DA  C017  F010         	movff	___fladd@grs,??___fladd
  7180  0004DE  0E7F               	movlw	127
  7181  0004E0  1610               	andwf	??___fladd^0,f,c
  7182  0004E2  B4D8               	btfsc	status,2,c
  7183  0004E4  EF76  F002         	goto	u2341
  7184  0004E8  EF79  F002         	goto	u2340
  7185  0004EC                     u2341:
  7186  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  7187  0004EE  EF7F  F002         	goto	l925
  7188  0004F2                     u2340:
  7189  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  7190  0004F4                     l2829:
  7191  0004F4  FFFF               	dw	65535	; assembler added errata NOP
  7192  0004F6  0E01               	movlw	1
  7193  0004F8  6E15               	movwf	___fladd@aexp^0,c
  7194  0004FA  EF8B  F002         	goto	l924
  7195  0004FE                     l925:
  7196  0004FE  FFFF               	dw	65535	; assembler added errata NOP
  7197  000500  A008               	btfss	___fladd@b^0,0,c
  7198  000502  EF85  F002         	goto	u2351
  7199  000506  EF88  F002         	goto	u2350
  7200  00050A                     u2351:
  7201  00050A  FFFF               	dw	65535	; assembler added errata NOP
  7202  00050C  EF8B  F002         	goto	l924
  7203  000510                     u2350:
  7204  000510  FFFF               	dw	65535	; assembler added errata NOP
  7205  000512  EF7A  F002         	goto	l2829
  7206  000516                     l924:
  7207  000516  FFFF               	dw	65535	; assembler added errata NOP
  7208  000518  5015               	movf	___fladd@aexp^0,w,c
  7209  00051A  B4D8               	btfsc	status,2,c
  7210  00051C  EF92  F002         	goto	u2361
  7211  000520  EF95  F002         	goto	u2360
  7212  000524                     u2361:
  7213  000524  FFFF               	dw	65535	; assembler added errata NOP
  7214  000526  EFC5  F002         	goto	l2841
  7215  00052A                     u2360:
  7216  00052A  FFFF               	dw	65535	; assembler added errata NOP
  7217  00052C  0E01               	movlw	1
  7218  00052E  2608               	addwf	___fladd@b^0,f,c
  7219  000530  0E00               	movlw	0
  7220  000532  2209               	addwfc	(___fladd@b+1)^0,f,c
  7221  000534  220A               	addwfc	(___fladd@b+2)^0,f,c
  7222  000536  220B               	addwfc	(___fladd@b+3)^0,f,c
  7223  000538  A00B               	btfss	(___fladd@b+3)^0,0,c
  7224  00053A  EFA1  F002         	goto	u2371
  7225  00053E  EFA4  F002         	goto	u2370
  7226  000542                     u2371:
  7227  000542  FFFF               	dw	65535	; assembler added errata NOP
  7228  000544  EFC5  F002         	goto	l2841
  7229  000548                     u2370:
  7230  000548  FFFF               	dw	65535	; assembler added errata NOP
  7231  00054A  C008  F010         	movff	___fladd@b,??___fladd
  7232  00054E  C009  F011         	movff	___fladd@b+1,??___fladd+1
  7233  000552  C00A  F012         	movff	___fladd@b+2,??___fladd+2
  7234  000556  C00B  F013         	movff	___fladd@b+3,??___fladd+3
  7235  00055A  3413               	rlcf	(??___fladd+3)^0,w,c
  7236  00055C  3213               	rrcf	(??___fladd+3)^0,f,c
  7237  00055E  3212               	rrcf	(??___fladd+2)^0,f,c
  7238  000560  3211               	rrcf	(??___fladd+1)^0,f,c
  7239  000562  3210               	rrcf	??___fladd^0,f,c
  7240  000564  C010  F008         	movff	??___fladd,___fladd@b
  7241  000568  C011  F009         	movff	??___fladd+1,___fladd@b+1
  7242  00056C  C012  F00A         	movff	??___fladd+2,___fladd@b+2
  7243  000570  C013  F00B         	movff	??___fladd+3,___fladd@b+3
  7244  000574  2816               	incf	___fladd@bexp^0,w,c
  7245  000576  B4D8               	btfsc	status,2,c
  7246  000578  EFC0  F002         	goto	u2381
  7247  00057C  EFC3  F002         	goto	u2380
  7248  000580                     u2381:
  7249  000580  FFFF               	dw	65535	; assembler added errata NOP
  7250  000582  EFC5  F002         	goto	l2841
  7251  000586                     u2380:
  7252  000586  FFFF               	dw	65535	; assembler added errata NOP
  7253  000588  2A16               	incf	___fladd@bexp^0,f,c
  7254  00058A                     l2841:
  7255  00058A  FFFF               	dw	65535	; assembler added errata NOP
  7256  00058C  2816               	incf	___fladd@bexp^0,w,c
  7257  00058E  B4D8               	btfsc	status,2,c
  7258  000590  EFCC  F002         	goto	u2391
  7259  000594  EFCF  F002         	goto	u2390
  7260  000598                     u2391:
  7261  000598  FFFF               	dw	65535	; assembler added errata NOP
  7262  00059A  EFD9  F002         	goto	l2845
  7263  00059E                     u2390:
  7264  00059E  FFFF               	dw	65535	; assembler added errata NOP
  7265  0005A0  5016               	movf	___fladd@bexp^0,w,c
  7266  0005A2  A4D8               	btfss	status,2,c
  7267  0005A4  EFD6  F002         	goto	u2401
  7268  0005A8  EFD9  F002         	goto	u2400
  7269  0005AC                     u2401:
  7270  0005AC  FFFF               	dw	65535	; assembler added errata NOP
  7271  0005AE  EFEE  F002         	goto	l2849
  7272  0005B2                     u2400:
  7273  0005B2                     l2845:
  7274  0005B2  FFFF               	dw	65535	; assembler added errata NOP
  7275  0005B4  0E00               	movlw	0
  7276  0005B6  6E08               	movwf	___fladd@b^0,c
  7277  0005B8  0E00               	movlw	0
  7278  0005BA  6E09               	movwf	(___fladd@b+1)^0,c
  7279  0005BC  0E00               	movlw	0
  7280  0005BE  6E0A               	movwf	(___fladd@b+2)^0,c
  7281  0005C0  0E00               	movlw	0
  7282  0005C2  6E0B               	movwf	(___fladd@b+3)^0,c
  7283  0005C4  5016               	movf	___fladd@bexp^0,w,c
  7284  0005C6  A4D8               	btfss	status,2,c
  7285  0005C8  EFE8  F002         	goto	u2411
  7286  0005CC  EFEB  F002         	goto	u2410
  7287  0005D0                     u2411:
  7288  0005D0  FFFF               	dw	65535	; assembler added errata NOP
  7289  0005D2  EFEE  F002         	goto	l2849
  7290  0005D6                     u2410:
  7291  0005D6  FFFF               	dw	65535	; assembler added errata NOP
  7292  0005D8  0E00               	movlw	0
  7293  0005DA  6E14               	movwf	___fladd@signs^0,c
  7294  0005DC                     l2849:
  7295  0005DC  FFFF               	dw	65535	; assembler added errata NOP
  7296  0005DE  A016               	btfss	___fladd@bexp^0,0,c
  7297  0005E0  EFF4  F002         	goto	u2421
  7298  0005E4  EFF7  F002         	goto	u2420
  7299  0005E8                     u2421:
  7300  0005E8  FFFF               	dw	65535	; assembler added errata NOP
  7301  0005EA  EFFB  F002         	goto	l2853
  7302  0005EE                     u2420:
  7303  0005EE  FFFF               	dw	65535	; assembler added errata NOP
  7304  0005F0  8E0A               	bsf	(___fladd@b+2)^0,7,c
  7305  0005F2  EFFD  F002         	goto	l2855
  7306  0005F6                     l2853:
  7307  0005F6  FFFF               	dw	65535	; assembler added errata NOP
  7308  0005F8  9E0A               	bcf	(___fladd@b+2)^0,7,c
  7309  0005FA                     l2855:
  7310  0005FA  FFFF               	dw	65535	; assembler added errata NOP
  7311  0005FC  90D8               	bcf	status,0,c
  7312  0005FE  3016               	rrcf	___fladd@bexp^0,w,c
  7313  000600  6E0B               	movwf	(___fladd@b+3)^0,c
  7314  000602  AE14               	btfss	___fladd@signs^0,7,c
  7315  000604  EF06  F003         	goto	u2431
  7316  000608  EF09  F003         	goto	u2430
  7317  00060C                     u2431:
  7318  00060C  FFFF               	dw	65535	; assembler added errata NOP
  7319  00060E  EF0B  F003         	goto	l2861
  7320  000612                     u2430:
  7321  000612  FFFF               	dw	65535	; assembler added errata NOP
  7322  000614  8E0B               	bsf	(___fladd@b+3)^0,7,c
  7323  000616                     l2861:
  7324  000616  FFFF               	dw	65535	; assembler added errata NOP
  7325  000618  C008  F008         	movff	___fladd@b,?___fladd
  7326  00061C  C009  F009         	movff	___fladd@b+1,?___fladd+1
  7327  000620  C00A  F00A         	movff	___fladd@b+2,?___fladd+2
  7328  000624  C00B  F00B         	movff	___fladd@b+3,?___fladd+3
  7329  000628                     l907:
  7330  000628  FFFF               	dw	65535	; assembler added errata NOP
  7331  00062A  0012               	return		;funcret
  7332  00062C  FFFF               	dw	65535	; errata NOP
  7333  00062E                     __end_of___fladd:
  7334                           	callstack 0
  7335                           
  7336 ;; *************** function ___flneg *****************
  7337 ;; Defined at:
  7338 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  f1              4    7[COMRAM] unsigned char 
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;		None
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  4    7[COMRAM] unsigned char 
  7345 ;; Registers used:
  7346 ;;		wreg, status,2, status,0
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7352 ;;      Params:         4       0       0       0       0       0       0
  7353 ;;      Locals:         0       0       0       0       0       0       0
  7354 ;;      Temps:          0       0       0       0       0       0       0
  7355 ;;      Totals:         4       0       0       0       0       0       0
  7356 ;;Total ram usage:        4 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; Hardware stack levels required when called: 1
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_roundf
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           	psect	text31
  7367  002C40                     __ptext31:
  7368                           	callstack 0
  7369  002C40                     ___flneg:
  7370                           	callstack 0
  7371  002C40  FFFF               	dw	65535	; assembler added errata NOP
  7372  002C42  5008               	movf	___flneg@f1^0,w,c
  7373  002C44  1009               	iorwf	(___flneg@f1+1)^0,w,c
  7374  002C46  100A               	iorwf	(___flneg@f1+2)^0,w,c
  7375  002C48  100B               	iorwf	(___flneg@f1+3)^0,w,c
  7376  002C4A  B4D8               	btfsc	status,2,c
  7377  002C4C  EF2A  F016         	goto	u3381
  7378  002C50  EF2D  F016         	goto	u3380
  7379  002C54                     u3381:
  7380  002C54  FFFF               	dw	65535	; assembler added errata NOP
  7381  002C56  EF36  F016         	goto	l3431
  7382  002C5A                     u3380:
  7383  002C5A  FFFF               	dw	65535	; assembler added errata NOP
  7384  002C5C  0E00               	movlw	0
  7385  002C5E  1A08               	xorwf	___flneg@f1^0,f,c
  7386  002C60  0E00               	movlw	0
  7387  002C62  1A09               	xorwf	(___flneg@f1+1)^0,f,c
  7388  002C64  0E00               	movlw	0
  7389  002C66  1A0A               	xorwf	(___flneg@f1+2)^0,f,c
  7390  002C68  0E80               	movlw	128
  7391  002C6A  1A0B               	xorwf	(___flneg@f1+3)^0,f,c
  7392  002C6C                     l3431:
  7393  002C6C  FFFF               	dw	65535	; assembler added errata NOP
  7394  002C6E  C008  F008         	movff	___flneg@f1,?___flneg
  7395  002C72  C009  F009         	movff	___flneg@f1+1,?___flneg+1
  7396  002C76  C00A  F00A         	movff	___flneg@f1+2,?___flneg+2
  7397  002C7A  C00B  F00B         	movff	___flneg@f1+3,?___flneg+3
  7398  002C7E  0012               	return		;funcret
  7399  002C80  FFFF               	dw	65535	; errata NOP
  7400  002C82                     __end_of___flneg:
  7401                           	callstack 0
  7402                           
  7403 ;; *************** function ___flmul *****************
  7404 ;; Defined at:
  7405 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  b               4    7[COMRAM] unsigned char 
  7408 ;;  a               4   11[COMRAM] unsigned char 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  prod            4   26[COMRAM] struct .
  7411 ;;  grs             4   20[COMRAM] unsigned long 
  7412 ;;  temp            2   30[COMRAM] struct .
  7413 ;;  bexp            1   25[COMRAM] unsigned char 
  7414 ;;  aexp            1   24[COMRAM] unsigned char 
  7415 ;;  sign            1   19[COMRAM] unsigned char 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  4    7[COMRAM] unsigned char 
  7418 ;; Registers used:
  7419 ;;		wreg, status,2, status,0, prodl, prodh
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7425 ;;      Params:         8       0       0       0       0       0       0
  7426 ;;      Locals:        13       0       0       0       0       0       0
  7427 ;;      Temps:          4       0       0       0       0       0       0
  7428 ;;      Totals:        25       0       0       0       0       0       0
  7429 ;;Total ram usage:       25 bytes
  7430 ;; Hardware stack levels used: 1
  7431 ;; Hardware stack levels required when called: 1
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_roundf
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text32
  7440  000BCE                     __ptext32:
  7441                           	callstack 0
  7442  000BCE                     ___flmul:
  7443                           	callstack 0
  7444  000BCE  FFFF               	dw	65535	; assembler added errata NOP
  7445  000BD0  500B               	movf	(___flmul@b+3)^0,w,c
  7446  000BD2  0B80               	andlw	128
  7447  000BD4  6E14               	movwf	___flmul@sign^0,c
  7448  000BD6  500B               	movf	(___flmul@b+3)^0,w,c
  7449  000BD8  240B               	addwf	(___flmul@b+3)^0,w,c
  7450  000BDA  6E1A               	movwf	___flmul@bexp^0,c
  7451  000BDC  AE0A               	btfss	(___flmul@b+2)^0,7,c
  7452  000BDE  EFF3  F005         	goto	u3191
  7453  000BE2  EFF6  F005         	goto	u3190
  7454  000BE6                     u3191:
  7455  000BE6  FFFF               	dw	65535	; assembler added errata NOP
  7456  000BE8  EFF8  F005         	goto	l3297
  7457  000BEC                     u3190:
  7458  000BEC  FFFF               	dw	65535	; assembler added errata NOP
  7459  000BEE  801A               	bsf	___flmul@bexp^0,0,c
  7460  000BF0                     l3297:
  7461  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  7462  000BF2  501A               	movf	___flmul@bexp^0,w,c
  7463  000BF4  B4D8               	btfsc	status,2,c
  7464  000BF6  EFFF  F005         	goto	u3201
  7465  000BFA  EF02  F006         	goto	u3200
  7466  000BFE                     u3201:
  7467  000BFE  FFFF               	dw	65535	; assembler added errata NOP
  7468  000C00  EF19  F006         	goto	l3305
  7469  000C04                     u3200:
  7470  000C04  FFFF               	dw	65535	; assembler added errata NOP
  7471  000C06  281A               	incf	___flmul@bexp^0,w,c
  7472  000C08  A4D8               	btfss	status,2,c
  7473  000C0A  EF09  F006         	goto	u3211
  7474  000C0E  EF0C  F006         	goto	u3210
  7475  000C12                     u3211:
  7476  000C12  FFFF               	dw	65535	; assembler added errata NOP
  7477  000C14  EF15  F006         	goto	l3303
  7478  000C18                     u3210:
  7479  000C18  FFFF               	dw	65535	; assembler added errata NOP
  7480  000C1A  0E00               	movlw	0
  7481  000C1C  6E08               	movwf	___flmul@b^0,c
  7482  000C1E  0E00               	movlw	0
  7483  000C20  6E09               	movwf	(___flmul@b+1)^0,c
  7484  000C22  0E00               	movlw	0
  7485  000C24  6E0A               	movwf	(___flmul@b+2)^0,c
  7486  000C26  0E00               	movlw	0
  7487  000C28  6E0B               	movwf	(___flmul@b+3)^0,c
  7488  000C2A                     l3303:
  7489  000C2A  FFFF               	dw	65535	; assembler added errata NOP
  7490  000C2C  8E0A               	bsf	(___flmul@b+2)^0,7,c
  7491  000C2E  EF22  F006         	goto	l3307
  7492  000C32                     l3305:
  7493  000C32  FFFF               	dw	65535	; assembler added errata NOP
  7494  000C34  0E00               	movlw	0
  7495  000C36  6E08               	movwf	___flmul@b^0,c
  7496  000C38  0E00               	movlw	0
  7497  000C3A  6E09               	movwf	(___flmul@b+1)^0,c
  7498  000C3C  0E00               	movlw	0
  7499  000C3E  6E0A               	movwf	(___flmul@b+2)^0,c
  7500  000C40  0E00               	movlw	0
  7501  000C42  6E0B               	movwf	(___flmul@b+3)^0,c
  7502  000C44                     l3307:
  7503  000C44  FFFF               	dw	65535	; assembler added errata NOP
  7504  000C46  500F               	movf	(___flmul@a+3)^0,w,c
  7505  000C48  0B80               	andlw	128
  7506  000C4A  1A14               	xorwf	___flmul@sign^0,f,c
  7507  000C4C  500F               	movf	(___flmul@a+3)^0,w,c
  7508  000C4E  240F               	addwf	(___flmul@a+3)^0,w,c
  7509  000C50  6E19               	movwf	___flmul@aexp^0,c
  7510  000C52  AE0E               	btfss	(___flmul@a+2)^0,7,c
  7511  000C54  EF2E  F006         	goto	u3221
  7512  000C58  EF31  F006         	goto	u3220
  7513  000C5C                     u3221:
  7514  000C5C  FFFF               	dw	65535	; assembler added errata NOP
  7515  000C5E  EF33  F006         	goto	l3315
  7516  000C62                     u3220:
  7517  000C62  FFFF               	dw	65535	; assembler added errata NOP
  7518  000C64  8019               	bsf	___flmul@aexp^0,0,c
  7519  000C66                     l3315:
  7520  000C66  FFFF               	dw	65535	; assembler added errata NOP
  7521  000C68  5019               	movf	___flmul@aexp^0,w,c
  7522  000C6A  B4D8               	btfsc	status,2,c
  7523  000C6C  EF3A  F006         	goto	u3231
  7524  000C70  EF3D  F006         	goto	u3230
  7525  000C74                     u3231:
  7526  000C74  FFFF               	dw	65535	; assembler added errata NOP
  7527  000C76  EF54  F006         	goto	l3323
  7528  000C7A                     u3230:
  7529  000C7A  FFFF               	dw	65535	; assembler added errata NOP
  7530  000C7C  2819               	incf	___flmul@aexp^0,w,c
  7531  000C7E  A4D8               	btfss	status,2,c
  7532  000C80  EF44  F006         	goto	u3241
  7533  000C84  EF47  F006         	goto	u3240
  7534  000C88                     u3241:
  7535  000C88  FFFF               	dw	65535	; assembler added errata NOP
  7536  000C8A  EF50  F006         	goto	l3321
  7537  000C8E                     u3240:
  7538  000C8E  FFFF               	dw	65535	; assembler added errata NOP
  7539  000C90  0E00               	movlw	0
  7540  000C92  6E0C               	movwf	___flmul@a^0,c
  7541  000C94  0E00               	movlw	0
  7542  000C96  6E0D               	movwf	(___flmul@a+1)^0,c
  7543  000C98  0E00               	movlw	0
  7544  000C9A  6E0E               	movwf	(___flmul@a+2)^0,c
  7545  000C9C  0E00               	movlw	0
  7546  000C9E  6E0F               	movwf	(___flmul@a+3)^0,c
  7547  000CA0                     l3321:
  7548  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  7549  000CA2  8E0E               	bsf	(___flmul@a+2)^0,7,c
  7550  000CA4  EF5D  F006         	goto	l984
  7551  000CA8                     l3323:
  7552  000CA8  FFFF               	dw	65535	; assembler added errata NOP
  7553  000CAA  0E00               	movlw	0
  7554  000CAC  6E0C               	movwf	___flmul@a^0,c
  7555  000CAE  0E00               	movlw	0
  7556  000CB0  6E0D               	movwf	(___flmul@a+1)^0,c
  7557  000CB2  0E00               	movlw	0
  7558  000CB4  6E0E               	movwf	(___flmul@a+2)^0,c
  7559  000CB6  0E00               	movlw	0
  7560  000CB8  6E0F               	movwf	(___flmul@a+3)^0,c
  7561  000CBA                     l984:
  7562  000CBA  FFFF               	dw	65535	; assembler added errata NOP
  7563  000CBC  5019               	movf	___flmul@aexp^0,w,c
  7564  000CBE  B4D8               	btfsc	status,2,c
  7565  000CC0  EF64  F006         	goto	u3251
  7566  000CC4  EF67  F006         	goto	u3250
  7567  000CC8                     u3251:
  7568  000CC8  FFFF               	dw	65535	; assembler added errata NOP
  7569  000CCA  EF71  F006         	goto	l3327
  7570  000CCE                     u3250:
  7571  000CCE  FFFF               	dw	65535	; assembler added errata NOP
  7572  000CD0  501A               	movf	___flmul@bexp^0,w,c
  7573  000CD2  A4D8               	btfss	status,2,c
  7574  000CD4  EF6E  F006         	goto	u3261
  7575  000CD8  EF71  F006         	goto	u3260
  7576  000CDC                     u3261:
  7577  000CDC  FFFF               	dw	65535	; assembler added errata NOP
  7578  000CDE  EF7C  F006         	goto	l3331
  7579  000CE2                     u3260:
  7580  000CE2                     l3327:
  7581  000CE2  FFFF               	dw	65535	; assembler added errata NOP
  7582  000CE4  0E00               	movlw	0
  7583  000CE6  6E08               	movwf	?___flmul^0,c
  7584  000CE8  0E00               	movlw	0
  7585  000CEA  6E09               	movwf	(?___flmul+1)^0,c
  7586  000CEC  0E00               	movlw	0
  7587  000CEE  6E0A               	movwf	(?___flmul+2)^0,c
  7588  000CF0  0E00               	movlw	0
  7589  000CF2  6E0B               	movwf	(?___flmul+3)^0,c
  7590  000CF4  EF36  F008         	goto	l988
  7591  000CF8                     l3331:
  7592  000CF8  FFFF               	dw	65535	; assembler added errata NOP
  7593  000CFA  500E               	movf	(___flmul@a+2)^0,w,c
  7594  000CFC  0208               	mulwf	___flmul@b^0,c
  7595  000CFE  CFF3 F01F          	movff	prodl,___flmul@temp
  7596  000D02  CFF4 F020          	movff	prodh,___flmul@temp+1
  7597  000D06  501F               	movf	___flmul@temp^0,w,c
  7598  000D08  6E15               	movwf	___flmul@grs^0,c
  7599  000D0A  6A16               	clrf	(___flmul@grs+1)^0,c
  7600  000D0C  6A17               	clrf	(___flmul@grs+2)^0,c
  7601  000D0E  6A18               	clrf	(___flmul@grs+3)^0,c
  7602  000D10  5020               	movf	(___flmul@temp+1)^0,w,c
  7603  000D12  6E1B               	movwf	___flmul@prod^0,c
  7604  000D14  6A1C               	clrf	(___flmul@prod+1)^0,c
  7605  000D16  6A1D               	clrf	(___flmul@prod+2)^0,c
  7606  000D18  6A1E               	clrf	(___flmul@prod+3)^0,c
  7607  000D1A  500D               	movf	(___flmul@a+1)^0,w,c
  7608  000D1C  0209               	mulwf	(___flmul@b+1)^0,c
  7609  000D1E  CFF3 F01F          	movff	prodl,___flmul@temp
  7610  000D22  CFF4 F020          	movff	prodh,___flmul@temp+1
  7611  000D26  501F               	movf	___flmul@temp^0,w,c
  7612  000D28  2615               	addwf	___flmul@grs^0,f,c
  7613  000D2A  0E00               	movlw	0
  7614  000D2C  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7615  000D2E  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7616  000D30  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7617  000D32  5020               	movf	(___flmul@temp+1)^0,w,c
  7618  000D34  261B               	addwf	___flmul@prod^0,f,c
  7619  000D36  0E00               	movlw	0
  7620  000D38  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7621  000D3A  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7622  000D3C  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7623  000D3E  500C               	movf	___flmul@a^0,w,c
  7624  000D40  020A               	mulwf	(___flmul@b+2)^0,c
  7625  000D42  CFF3 F01F          	movff	prodl,___flmul@temp
  7626  000D46  CFF4 F020          	movff	prodh,___flmul@temp+1
  7627  000D4A  501F               	movf	___flmul@temp^0,w,c
  7628  000D4C  2615               	addwf	___flmul@grs^0,f,c
  7629  000D4E  0E00               	movlw	0
  7630  000D50  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7631  000D52  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7632  000D54  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7633  000D56  5020               	movf	(___flmul@temp+1)^0,w,c
  7634  000D58  261B               	addwf	___flmul@prod^0,f,c
  7635  000D5A  0E00               	movlw	0
  7636  000D5C  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7637  000D5E  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7638  000D60  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7639  000D62  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  7640  000D66  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  7641  000D6A  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  7642  000D6E  6A15               	clrf	___flmul@grs^0,c
  7643  000D70  500C               	movf	___flmul@a^0,w,c
  7644  000D72  0209               	mulwf	(___flmul@b+1)^0,c
  7645  000D74  CFF3 F01F          	movff	prodl,___flmul@temp
  7646  000D78  CFF4 F020          	movff	prodh,___flmul@temp+1
  7647  000D7C  501F               	movf	___flmul@temp^0,w,c
  7648  000D7E  2615               	addwf	___flmul@grs^0,f,c
  7649  000D80  5020               	movf	(___flmul@temp+1)^0,w,c
  7650  000D82  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7651  000D84  0E00               	movlw	0
  7652  000D86  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7653  000D88  0E00               	movlw	0
  7654  000D8A  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7655  000D8C  500D               	movf	(___flmul@a+1)^0,w,c
  7656  000D8E  0208               	mulwf	___flmul@b^0,c
  7657  000D90  CFF3 F01F          	movff	prodl,___flmul@temp
  7658  000D94  CFF4 F020          	movff	prodh,___flmul@temp+1
  7659  000D98  501F               	movf	___flmul@temp^0,w,c
  7660  000D9A  2615               	addwf	___flmul@grs^0,f,c
  7661  000D9C  5020               	movf	(___flmul@temp+1)^0,w,c
  7662  000D9E  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7663  000DA0  0E00               	movlw	0
  7664  000DA2  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7665  000DA4  0E00               	movlw	0
  7666  000DA6  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7667  000DA8  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  7668  000DAC  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  7669  000DB0  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  7670  000DB4  6A15               	clrf	___flmul@grs^0,c
  7671  000DB6  500C               	movf	___flmul@a^0,w,c
  7672  000DB8  0208               	mulwf	___flmul@b^0,c
  7673  000DBA  CFF3 F01F          	movff	prodl,___flmul@temp
  7674  000DBE  CFF4 F020          	movff	prodh,___flmul@temp+1
  7675  000DC2  501F               	movf	___flmul@temp^0,w,c
  7676  000DC4  2615               	addwf	___flmul@grs^0,f,c
  7677  000DC6  5020               	movf	(___flmul@temp+1)^0,w,c
  7678  000DC8  2216               	addwfc	(___flmul@grs+1)^0,f,c
  7679  000DCA  0E00               	movlw	0
  7680  000DCC  2217               	addwfc	(___flmul@grs+2)^0,f,c
  7681  000DCE  0E00               	movlw	0
  7682  000DD0  2218               	addwfc	(___flmul@grs+3)^0,f,c
  7683  000DD2  500E               	movf	(___flmul@a+2)^0,w,c
  7684  000DD4  0209               	mulwf	(___flmul@b+1)^0,c
  7685  000DD6  CFF3 F01F          	movff	prodl,___flmul@temp
  7686  000DDA  CFF4 F020          	movff	prodh,___flmul@temp+1
  7687  000DDE  501F               	movf	___flmul@temp^0,w,c
  7688  000DE0  261B               	addwf	___flmul@prod^0,f,c
  7689  000DE2  5020               	movf	(___flmul@temp+1)^0,w,c
  7690  000DE4  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7691  000DE6  0E00               	movlw	0
  7692  000DE8  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7693  000DEA  0E00               	movlw	0
  7694  000DEC  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7695  000DEE  500D               	movf	(___flmul@a+1)^0,w,c
  7696  000DF0  020A               	mulwf	(___flmul@b+2)^0,c
  7697  000DF2  CFF3 F01F          	movff	prodl,___flmul@temp
  7698  000DF6  CFF4 F020          	movff	prodh,___flmul@temp+1
  7699  000DFA  501F               	movf	___flmul@temp^0,w,c
  7700  000DFC  261B               	addwf	___flmul@prod^0,f,c
  7701  000DFE  5020               	movf	(___flmul@temp+1)^0,w,c
  7702  000E00  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7703  000E02  0E00               	movlw	0
  7704  000E04  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7705  000E06  0E00               	movlw	0
  7706  000E08  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7707  000E0A  500E               	movf	(___flmul@a+2)^0,w,c
  7708  000E0C  020A               	mulwf	(___flmul@b+2)^0,c
  7709  000E0E  CFF3 F01F          	movff	prodl,___flmul@temp
  7710  000E12  CFF4 F020          	movff	prodh,___flmul@temp+1
  7711  000E16  501F               	movf	___flmul@temp^0,w,c
  7712  000E18  6E10               	movwf	??___flmul^0,c
  7713  000E1A  5020               	movf	(___flmul@temp+1)^0,w,c
  7714  000E1C  6E11               	movwf	(??___flmul+1)^0,c
  7715  000E1E  6A12               	clrf	(??___flmul+2)^0,c
  7716  000E20  6A13               	clrf	(??___flmul+3)^0,c
  7717  000E22  C012  F013         	movff	??___flmul+2,??___flmul+3
  7718  000E26  C011  F012         	movff	??___flmul+1,??___flmul+2
  7719  000E2A  C010  F011         	movff	??___flmul,??___flmul+1
  7720  000E2E  6A10               	clrf	??___flmul^0,c
  7721  000E30  5010               	movf	??___flmul^0,w,c
  7722  000E32  261B               	addwf	___flmul@prod^0,f,c
  7723  000E34  5011               	movf	(??___flmul+1)^0,w,c
  7724  000E36  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7725  000E38  5012               	movf	(??___flmul+2)^0,w,c
  7726  000E3A  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7727  000E3C  5013               	movf	(??___flmul+3)^0,w,c
  7728  000E3E  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7729  000E40  C015  F010         	movff	___flmul@grs,??___flmul
  7730  000E44  C016  F011         	movff	___flmul@grs+1,??___flmul+1
  7731  000E48  C017  F012         	movff	___flmul@grs+2,??___flmul+2
  7732  000E4C  C018  F013         	movff	___flmul@grs+3,??___flmul+3
  7733  000E50  0E19               	movlw	25
  7734  000E52  EF31  F007         	goto	u3270
  7735  000E56                     u3275:
  7736  000E56  FFFF               	dw	65535	; assembler added errata NOP
  7737  000E58  90D8               	bcf	status,0,c
  7738  000E5A  3213               	rrcf	(??___flmul+3)^0,f,c
  7739  000E5C  3212               	rrcf	(??___flmul+2)^0,f,c
  7740  000E5E  3211               	rrcf	(??___flmul+1)^0,f,c
  7741  000E60  3210               	rrcf	??___flmul^0,f,c
  7742  000E62                     u3270:
  7743  000E62  FFFF               	dw	65535	; assembler added errata NOP
  7744  000E64  2EE8               	decfsz	wreg,f,c
  7745  000E66  EF2B  F007         	goto	u3275
  7746  000E6A  5010               	movf	??___flmul^0,w,c
  7747  000E6C  261B               	addwf	___flmul@prod^0,f,c
  7748  000E6E  5011               	movf	(??___flmul+1)^0,w,c
  7749  000E70  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7750  000E72  5012               	movf	(??___flmul+2)^0,w,c
  7751  000E74  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7752  000E76  5013               	movf	(??___flmul+3)^0,w,c
  7753  000E78  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7754  000E7A  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  7755  000E7E  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  7756  000E82  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  7757  000E86  6A15               	clrf	___flmul@grs^0,c
  7758  000E88  5019               	movf	___flmul@aexp^0,w,c
  7759  000E8A  C01A  F010         	movff	___flmul@bexp,??___flmul
  7760  000E8E  6A11               	clrf	(??___flmul+1)^0,c
  7761  000E90  2610               	addwf	??___flmul^0,f,c
  7762  000E92  0E00               	movlw	0
  7763  000E94  2211               	addwfc	(??___flmul+1)^0,f,c
  7764  000E96  0E82               	movlw	130
  7765  000E98  2410               	addwf	??___flmul^0,w,c
  7766  000E9A  6E1F               	movwf	___flmul@temp^0,c
  7767  000E9C  0EFF               	movlw	255
  7768  000E9E  2011               	addwfc	(??___flmul+1)^0,w,c
  7769  000EA0  6E20               	movwf	(___flmul@temp+1)^0,c
  7770  000EA2  EF6C  F007         	goto	l3379
  7771  000EA6                     l3373:
  7772  000EA6  FFFF               	dw	65535	; assembler added errata NOP
  7773  000EA8  90D8               	bcf	status,0,c
  7774  000EAA  361B               	rlcf	___flmul@prod^0,f,c
  7775  000EAC  361C               	rlcf	(___flmul@prod+1)^0,f,c
  7776  000EAE  361D               	rlcf	(___flmul@prod+2)^0,f,c
  7777  000EB0  361E               	rlcf	(___flmul@prod+3)^0,f,c
  7778  000EB2  AE18               	btfss	(___flmul@grs+3)^0,7,c
  7779  000EB4  EF5E  F007         	goto	u3281
  7780  000EB8  EF61  F007         	goto	u3280
  7781  000EBC                     u3281:
  7782  000EBC  FFFF               	dw	65535	; assembler added errata NOP
  7783  000EBE  EF63  F007         	goto	l991
  7784  000EC2                     u3280:
  7785  000EC2  FFFF               	dw	65535	; assembler added errata NOP
  7786  000EC4  801B               	bsf	___flmul@prod^0,0,c
  7787  000EC6                     l991:
  7788  000EC6  FFFF               	dw	65535	; assembler added errata NOP
  7789  000EC8  90D8               	bcf	status,0,c
  7790  000ECA  3615               	rlcf	___flmul@grs^0,f,c
  7791  000ECC  3616               	rlcf	(___flmul@grs+1)^0,f,c
  7792  000ECE  3617               	rlcf	(___flmul@grs+2)^0,f,c
  7793  000ED0  3618               	rlcf	(___flmul@grs+3)^0,f,c
  7794  000ED2  061F               	decf	___flmul@temp^0,f,c
  7795  000ED4  A0D8               	btfss	status,0,c
  7796  000ED6  0620               	decf	(___flmul@temp+1)^0,f,c
  7797  000ED8                     l3379:
  7798  000ED8  FFFF               	dw	65535	; assembler added errata NOP
  7799  000EDA  AE1D               	btfss	(___flmul@prod+2)^0,7,c
  7800  000EDC  EF72  F007         	goto	u3291
  7801  000EE0  EF75  F007         	goto	u3290
  7802  000EE4                     u3291:
  7803  000EE4  FFFF               	dw	65535	; assembler added errata NOP
  7804  000EE6  EF53  F007         	goto	l3373
  7805  000EEA                     u3290:
  7806  000EEA  FFFF               	dw	65535	; assembler added errata NOP
  7807  000EEC  0E00               	movlw	0
  7808  000EEE  6E19               	movwf	___flmul@aexp^0,c
  7809  000EF0  AE18               	btfss	(___flmul@grs+3)^0,7,c
  7810  000EF2  EF7D  F007         	goto	u3301
  7811  000EF6  EF80  F007         	goto	u3300
  7812  000EFA                     u3301:
  7813  000EFA  FFFF               	dw	65535	; assembler added errata NOP
  7814  000EFC  EFAB  F007         	goto	l993
  7815  000F00                     u3300:
  7816  000F00  FFFF               	dw	65535	; assembler added errata NOP
  7817  000F02  0EFF               	movlw	255
  7818  000F04  1415               	andwf	___flmul@grs^0,w,c
  7819  000F06  6E10               	movwf	??___flmul^0,c
  7820  000F08  0EFF               	movlw	255
  7821  000F0A  1416               	andwf	(___flmul@grs+1)^0,w,c
  7822  000F0C  6E11               	movwf	(??___flmul+1)^0,c
  7823  000F0E  0EFF               	movlw	255
  7824  000F10  1417               	andwf	(___flmul@grs+2)^0,w,c
  7825  000F12  6E12               	movwf	(??___flmul+2)^0,c
  7826  000F14  0E7F               	movlw	127
  7827  000F16  1418               	andwf	(___flmul@grs+3)^0,w,c
  7828  000F18  6E13               	movwf	(??___flmul+3)^0,c
  7829  000F1A  5010               	movf	??___flmul^0,w,c
  7830  000F1C  1011               	iorwf	(??___flmul+1)^0,w,c
  7831  000F1E  1012               	iorwf	(??___flmul+2)^0,w,c
  7832  000F20  1013               	iorwf	(??___flmul+3)^0,w,c
  7833  000F22  B4D8               	btfsc	status,2,c
  7834  000F24  EF96  F007         	goto	u3311
  7835  000F28  EF99  F007         	goto	u3310
  7836  000F2C                     u3311:
  7837  000F2C  FFFF               	dw	65535	; assembler added errata NOP
  7838  000F2E  EF9F  F007         	goto	l994
  7839  000F32                     u3310:
  7840  000F32  FFFF               	dw	65535	; assembler added errata NOP
  7841  000F34                     l3387:
  7842  000F34  FFFF               	dw	65535	; assembler added errata NOP
  7843  000F36  0E01               	movlw	1
  7844  000F38  6E19               	movwf	___flmul@aexp^0,c
  7845  000F3A  EFAB  F007         	goto	l993
  7846  000F3E                     l994:
  7847  000F3E  FFFF               	dw	65535	; assembler added errata NOP
  7848  000F40  A01B               	btfss	___flmul@prod^0,0,c
  7849  000F42  EFA5  F007         	goto	u3321
  7850  000F46  EFA8  F007         	goto	u3320
  7851  000F4A                     u3321:
  7852  000F4A  FFFF               	dw	65535	; assembler added errata NOP
  7853  000F4C  EFAB  F007         	goto	l993
  7854  000F50                     u3320:
  7855  000F50  FFFF               	dw	65535	; assembler added errata NOP
  7856  000F52  EF9A  F007         	goto	l3387
  7857  000F56                     l993:
  7858  000F56  FFFF               	dw	65535	; assembler added errata NOP
  7859  000F58  5019               	movf	___flmul@aexp^0,w,c
  7860  000F5A  B4D8               	btfsc	status,2,c
  7861  000F5C  EFB2  F007         	goto	u3331
  7862  000F60  EFB5  F007         	goto	u3330
  7863  000F64                     u3331:
  7864  000F64  FFFF               	dw	65535	; assembler added errata NOP
  7865  000F66  EFDC  F007         	goto	l3399
  7866  000F6A                     u3330:
  7867  000F6A  FFFF               	dw	65535	; assembler added errata NOP
  7868  000F6C  0E01               	movlw	1
  7869  000F6E  261B               	addwf	___flmul@prod^0,f,c
  7870  000F70  0E00               	movlw	0
  7871  000F72  221C               	addwfc	(___flmul@prod+1)^0,f,c
  7872  000F74  221D               	addwfc	(___flmul@prod+2)^0,f,c
  7873  000F76  221E               	addwfc	(___flmul@prod+3)^0,f,c
  7874  000F78  A01E               	btfss	(___flmul@prod+3)^0,0,c
  7875  000F7A  EFC1  F007         	goto	u3341
  7876  000F7E  EFC4  F007         	goto	u3340
  7877  000F82                     u3341:
  7878  000F82  FFFF               	dw	65535	; assembler added errata NOP
  7879  000F84  EFDC  F007         	goto	l3399
  7880  000F88                     u3340:
  7881  000F88  FFFF               	dw	65535	; assembler added errata NOP
  7882  000F8A  C01B  F010         	movff	___flmul@prod,??___flmul
  7883  000F8E  C01C  F011         	movff	___flmul@prod+1,??___flmul+1
  7884  000F92  C01D  F012         	movff	___flmul@prod+2,??___flmul+2
  7885  000F96  C01E  F013         	movff	___flmul@prod+3,??___flmul+3
  7886  000F9A  3413               	rlcf	(??___flmul+3)^0,w,c
  7887  000F9C  3213               	rrcf	(??___flmul+3)^0,f,c
  7888  000F9E  3212               	rrcf	(??___flmul+2)^0,f,c
  7889  000FA0  3211               	rrcf	(??___flmul+1)^0,f,c
  7890  000FA2  3210               	rrcf	??___flmul^0,f,c
  7891  000FA4  C010  F01B         	movff	??___flmul,___flmul@prod
  7892  000FA8  C011  F01C         	movff	??___flmul+1,___flmul@prod+1
  7893  000FAC  C012  F01D         	movff	??___flmul+2,___flmul@prod+2
  7894  000FB0  C013  F01E         	movff	??___flmul+3,___flmul@prod+3
  7895  000FB4  4A1F               	infsnz	___flmul@temp^0,f,c
  7896  000FB6  2A20               	incf	(___flmul@temp+1)^0,f,c
  7897  000FB8                     l3399:
  7898  000FB8  FFFF               	dw	65535	; assembler added errata NOP
  7899  000FBA  BE20               	btfsc	(___flmul@temp+1)^0,7,c
  7900  000FBC  EFE8  F007         	goto	u3351
  7901  000FC0  5020               	movf	(___flmul@temp+1)^0,w,c
  7902  000FC2  E109               	bnz	u3350
  7903  000FC4  281F               	incf	___flmul@temp^0,w,c
  7904  000FC6  A0D8               	btfss	status,0,c
  7905  000FC8  EFE8  F007         	goto	u3351
  7906  000FCC  EFEB  F007         	goto	u3350
  7907  000FD0                     u3351:
  7908  000FD0  FFFF               	dw	65535	; assembler added errata NOP
  7909  000FD2  EFF6  F007         	goto	l3403
  7910  000FD6                     u3350:
  7911  000FD6  FFFF               	dw	65535	; assembler added errata NOP
  7912  000FD8  0E00               	movlw	0
  7913  000FDA  6E1B               	movwf	___flmul@prod^0,c
  7914  000FDC  0E00               	movlw	0
  7915  000FDE  6E1C               	movwf	(___flmul@prod+1)^0,c
  7916  000FE0  0E80               	movlw	128
  7917  000FE2  6E1D               	movwf	(___flmul@prod+2)^0,c
  7918  000FE4  0E7F               	movlw	127
  7919  000FE6  6E1E               	movwf	(___flmul@prod+3)^0,c
  7920  000FE8  EF2B  F008         	goto	l3415
  7921  000FEC                     l3403:
  7922  000FEC  FFFF               	dw	65535	; assembler added errata NOP
  7923  000FEE  BE20               	btfsc	(___flmul@temp+1)^0,7,c
  7924  000FF0  EF05  F008         	goto	u3360
  7925  000FF4  5020               	movf	(___flmul@temp+1)^0,w,c
  7926  000FF6  E106               	bnz	u3361
  7927  000FF8  041F               	decf	___flmul@temp^0,w,c
  7928  000FFA  B0D8               	btfsc	status,0,c
  7929  000FFC  EF02  F008         	goto	u3361
  7930  001000  EF05  F008         	goto	u3360
  7931  001004                     u3361:
  7932  001004  FFFF               	dw	65535	; assembler added errata NOP
  7933  001006  EF12  F008         	goto	l1001
  7934  00100A                     u3360:
  7935  00100A  FFFF               	dw	65535	; assembler added errata NOP
  7936  00100C  0E00               	movlw	0
  7937  00100E  6E1B               	movwf	___flmul@prod^0,c
  7938  001010  0E00               	movlw	0
  7939  001012  6E1C               	movwf	(___flmul@prod+1)^0,c
  7940  001014  0E00               	movlw	0
  7941  001016  6E1D               	movwf	(___flmul@prod+2)^0,c
  7942  001018  0E00               	movlw	0
  7943  00101A  6E1E               	movwf	(___flmul@prod+3)^0,c
  7944  00101C  0E00               	movlw	0
  7945  00101E  6E14               	movwf	___flmul@sign^0,c
  7946  001020  EF2B  F008         	goto	l3415
  7947  001024                     l1001:
  7948  001024  FFFF               	dw	65535	; assembler added errata NOP
  7949  001026  C01F  F01A         	movff	___flmul@temp,___flmul@bexp
  7950  00102A  0EFF               	movlw	255
  7951  00102C  161B               	andwf	___flmul@prod^0,f,c
  7952  00102E  0EFF               	movlw	255
  7953  001030  161C               	andwf	(___flmul@prod+1)^0,f,c
  7954  001032  0E7F               	movlw	127
  7955  001034  161D               	andwf	(___flmul@prod+2)^0,f,c
  7956  001036  0E00               	movlw	0
  7957  001038  161E               	andwf	(___flmul@prod+3)^0,f,c
  7958  00103A  A01A               	btfss	___flmul@bexp^0,0,c
  7959  00103C  EF22  F008         	goto	u3371
  7960  001040  EF25  F008         	goto	u3370
  7961  001044                     u3371:
  7962  001044  FFFF               	dw	65535	; assembler added errata NOP
  7963  001046  EF27  F008         	goto	l3413
  7964  00104A                     u3370:
  7965  00104A  FFFF               	dw	65535	; assembler added errata NOP
  7966  00104C  8E1D               	bsf	(___flmul@prod+2)^0,7,c
  7967  00104E                     l3413:
  7968  00104E  FFFF               	dw	65535	; assembler added errata NOP
  7969  001050  90D8               	bcf	status,0,c
  7970  001052  301A               	rrcf	___flmul@bexp^0,w,c
  7971  001054  6E1E               	movwf	(___flmul@prod+3)^0,c
  7972  001056                     l3415:
  7973  001056  FFFF               	dw	65535	; assembler added errata NOP
  7974  001058  5014               	movf	___flmul@sign^0,w,c
  7975  00105A  121E               	iorwf	(___flmul@prod+3)^0,f,c
  7976  00105C  C01B  F008         	movff	___flmul@prod,?___flmul
  7977  001060  C01C  F009         	movff	___flmul@prod+1,?___flmul+1
  7978  001064  C01D  F00A         	movff	___flmul@prod+2,?___flmul+2
  7979  001068  C01E  F00B         	movff	___flmul@prod+3,?___flmul+3
  7980  00106C                     l988:
  7981  00106C  FFFF               	dw	65535	; assembler added errata NOP
  7982  00106E  0012               	return		;funcret
  7983  001070  FFFF               	dw	65535	; errata NOP
  7984  001072                     __end_of___flmul:
  7985                           	callstack 0
  7986                           
  7987 ;; *************** function ___flge *****************
  7988 ;; Defined at:
  7989 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;  ff1             4   46[COMRAM] unsigned char 
  7992 ;;  ff2             4   50[COMRAM] unsigned char 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;		None
  7995 ;; Return value:  Size  Location     Type
  7996 ;;		None               void
  7997 ;; Registers used:
  7998 ;;		wreg, status,2, status,0
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8004 ;;      Params:         8       0       0       0       0       0       0
  8005 ;;      Locals:         0       0       0       0       0       0       0
  8006 ;;      Temps:          4       0       0       0       0       0       0
  8007 ;;      Totals:        12       0       0       0       0       0       0
  8008 ;;Total ram usage:       12 bytes
  8009 ;; Hardware stack levels used: 1
  8010 ;; Hardware stack levels required when called: 1
  8011 ;; This function calls:
  8012 ;;		Nothing
  8013 ;; This function is called by:
  8014 ;;		_pick_and_place
  8015 ;;		_roundf
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text33
  8020  002228                     __ptext33:
  8021                           	callstack 0
  8022  002228                     ___flge:
  8023                           	callstack 0
  8024  002228  FFFF               	dw	65535	; assembler added errata NOP
  8025  00222A  0E00               	movlw	0
  8026  00222C  142F               	andwf	___flge@ff1^0,w,c
  8027  00222E  6E37               	movwf	??___flge^0,c
  8028  002230  0E00               	movlw	0
  8029  002232  1430               	andwf	(___flge@ff1+1)^0,w,c
  8030  002234  6E38               	movwf	(??___flge+1)^0,c
  8031  002236  0E80               	movlw	128
  8032  002238  1431               	andwf	(___flge@ff1+2)^0,w,c
  8033  00223A  6E39               	movwf	(??___flge+2)^0,c
  8034  00223C  0E7F               	movlw	127
  8035  00223E  1432               	andwf	(___flge@ff1+3)^0,w,c
  8036  002240  6E3A               	movwf	(??___flge+3)^0,c
  8037  002242  5037               	movf	??___flge^0,w,c
  8038  002244  1038               	iorwf	(??___flge+1)^0,w,c
  8039  002246  1039               	iorwf	(??___flge+2)^0,w,c
  8040  002248  103A               	iorwf	(??___flge+3)^0,w,c
  8041  00224A  A4D8               	btfss	status,2,c
  8042  00224C  EF2A  F011         	goto	u4151
  8043  002250  EF2D  F011         	goto	u4150
  8044  002254                     u4151:
  8045  002254  FFFF               	dw	65535	; assembler added errata NOP
  8046  002256  EF36  F011         	goto	l4093
  8047  00225A                     u4150:
  8048  00225A  FFFF               	dw	65535	; assembler added errata NOP
  8049  00225C  0E00               	movlw	0
  8050  00225E  6E2F               	movwf	___flge@ff1^0,c
  8051  002260  0E00               	movlw	0
  8052  002262  6E30               	movwf	(___flge@ff1+1)^0,c
  8053  002264  0E00               	movlw	0
  8054  002266  6E31               	movwf	(___flge@ff1+2)^0,c
  8055  002268  0E00               	movlw	0
  8056  00226A  6E32               	movwf	(___flge@ff1+3)^0,c
  8057  00226C                     l4093:
  8058  00226C  FFFF               	dw	65535	; assembler added errata NOP
  8059  00226E  0E00               	movlw	0
  8060  002270  1433               	andwf	___flge@ff2^0,w,c
  8061  002272  6E37               	movwf	??___flge^0,c
  8062  002274  0E00               	movlw	0
  8063  002276  1434               	andwf	(___flge@ff2+1)^0,w,c
  8064  002278  6E38               	movwf	(??___flge+1)^0,c
  8065  00227A  0E80               	movlw	128
  8066  00227C  1435               	andwf	(___flge@ff2+2)^0,w,c
  8067  00227E  6E39               	movwf	(??___flge+2)^0,c
  8068  002280  0E7F               	movlw	127
  8069  002282  1436               	andwf	(___flge@ff2+3)^0,w,c
  8070  002284  6E3A               	movwf	(??___flge+3)^0,c
  8071  002286  5037               	movf	??___flge^0,w,c
  8072  002288  1038               	iorwf	(??___flge+1)^0,w,c
  8073  00228A  1039               	iorwf	(??___flge+2)^0,w,c
  8074  00228C  103A               	iorwf	(??___flge+3)^0,w,c
  8075  00228E  A4D8               	btfss	status,2,c
  8076  002290  EF4C  F011         	goto	u4161
  8077  002294  EF4F  F011         	goto	u4160
  8078  002298                     u4161:
  8079  002298  FFFF               	dw	65535	; assembler added errata NOP
  8080  00229A  EF58  F011         	goto	l4097
  8081  00229E                     u4160:
  8082  00229E  FFFF               	dw	65535	; assembler added errata NOP
  8083  0022A0  0E00               	movlw	0
  8084  0022A2  6E33               	movwf	___flge@ff2^0,c
  8085  0022A4  0E00               	movlw	0
  8086  0022A6  6E34               	movwf	(___flge@ff2+1)^0,c
  8087  0022A8  0E00               	movlw	0
  8088  0022AA  6E35               	movwf	(___flge@ff2+2)^0,c
  8089  0022AC  0E00               	movlw	0
  8090  0022AE  6E36               	movwf	(___flge@ff2+3)^0,c
  8091  0022B0                     l4097:
  8092  0022B0  FFFF               	dw	65535	; assembler added errata NOP
  8093  0022B2  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8094  0022B4  EF5E  F011         	goto	u4171
  8095  0022B8  EF61  F011         	goto	u4170
  8096  0022BC                     u4171:
  8097  0022BC  FFFF               	dw	65535	; assembler added errata NOP
  8098  0022BE  EF6B  F011         	goto	l4101
  8099  0022C2                     u4170:
  8100  0022C2  FFFF               	dw	65535	; assembler added errata NOP
  8101  0022C4  6C2F               	negf	___flge@ff1^0,c
  8102  0022C6  1E30               	comf	(___flge@ff1+1)^0,f,c
  8103  0022C8  B0D8               	btfsc	status,0,c
  8104  0022CA  2A30               	incf	(___flge@ff1+1)^0,f,c
  8105  0022CC  1E31               	comf	(___flge@ff1+2)^0,f,c
  8106  0022CE  B0D8               	btfsc	status,0,c
  8107  0022D0  2A31               	incf	(___flge@ff1+2)^0,f,c
  8108  0022D2  0E80               	movlw	128
  8109  0022D4  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8110  0022D6                     l4101:
  8111  0022D6  FFFF               	dw	65535	; assembler added errata NOP
  8112  0022D8  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8113  0022DA  EF71  F011         	goto	u4181
  8114  0022DE  EF74  F011         	goto	u4180
  8115  0022E2                     u4181:
  8116  0022E2  FFFF               	dw	65535	; assembler added errata NOP
  8117  0022E4  EF7E  F011         	goto	l635
  8118  0022E8                     u4180:
  8119  0022E8  FFFF               	dw	65535	; assembler added errata NOP
  8120  0022EA  6C33               	negf	___flge@ff2^0,c
  8121  0022EC  1E34               	comf	(___flge@ff2+1)^0,f,c
  8122  0022EE  B0D8               	btfsc	status,0,c
  8123  0022F0  2A34               	incf	(___flge@ff2+1)^0,f,c
  8124  0022F2  1E35               	comf	(___flge@ff2+2)^0,f,c
  8125  0022F4  B0D8               	btfsc	status,0,c
  8126  0022F6  2A35               	incf	(___flge@ff2+2)^0,f,c
  8127  0022F8  0E80               	movlw	128
  8128  0022FA  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8129  0022FC                     l635:
  8130  0022FC  FFFF               	dw	65535	; assembler added errata NOP
  8131  0022FE  0E00               	movlw	0
  8132  002300  1A2F               	xorwf	___flge@ff1^0,f,c
  8133  002302  0E00               	movlw	0
  8134  002304  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8135  002306  0E00               	movlw	0
  8136  002308  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8137  00230A  0E80               	movlw	128
  8138  00230C  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8139  00230E  0E00               	movlw	0
  8140  002310  1A33               	xorwf	___flge@ff2^0,f,c
  8141  002312  0E00               	movlw	0
  8142  002314  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8143  002316  0E00               	movlw	0
  8144  002318  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8145  00231A  0E80               	movlw	128
  8146  00231C  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8147  00231E  5033               	movf	___flge@ff2^0,w,c
  8148  002320  5C2F               	subwf	___flge@ff1^0,w,c
  8149  002322  5034               	movf	(___flge@ff2+1)^0,w,c
  8150  002324  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8151  002326  5035               	movf	(___flge@ff2+2)^0,w,c
  8152  002328  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8153  00232A  5036               	movf	(___flge@ff2+3)^0,w,c
  8154  00232C  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8155  00232E  B0D8               	btfsc	status,0,c
  8156  002330  EF9C  F011         	goto	u4191
  8157  002334  EF9F  F011         	goto	u4190
  8158  002338                     u4191:
  8159  002338  FFFF               	dw	65535	; assembler added errata NOP
  8160  00233A  EFA3  F011         	goto	l4107
  8161  00233E                     u4190:
  8162  00233E  FFFF               	dw	65535	; assembler added errata NOP
  8163  002340  90D8               	bcf	status,0,c
  8164  002342  EFA5  F011         	goto	l640
  8165  002346                     l4107:
  8166  002346  FFFF               	dw	65535	; assembler added errata NOP
  8167  002348  80D8               	bsf	status,0,c
  8168  00234A                     l640:
  8169  00234A  FFFF               	dw	65535	; assembler added errata NOP
  8170  00234C  0012               	return		;funcret
  8171  00234E  FFFF               	dw	65535	; errata NOP
  8172  002350                     __end_of___flge:
  8173                           	callstack 0
  8174                           
  8175 ;; *************** function ___fltol *****************
  8176 ;; Defined at:
  8177 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;  f1              4   84[COMRAM] unsigned char 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  exp1            1    5[BANK0 ] unsigned char 
  8182 ;;  sign1           1    4[BANK0 ] unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  4   84[COMRAM] long 
  8185 ;; Registers used:
  8186 ;;		wreg, status,2, status,0
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8192 ;;      Params:         4       0       0       0       0       0       0
  8193 ;;      Locals:         0       2       0       0       0       0       0
  8194 ;;      Temps:          0       4       0       0       0       0       0
  8195 ;;      Totals:         4       6       0       0       0       0       0
  8196 ;;Total ram usage:       10 bytes
  8197 ;; Hardware stack levels used: 1
  8198 ;; Hardware stack levels required when called: 1
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		_init_USART
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text34
  8207  0020F0                     __ptext34:
  8208                           	callstack 0
  8209  0020F0                     ___fltol:
  8210                           	callstack 0
  8211  0020F0  FFFF               	dw	65535	; assembler added errata NOP
  8212  0020F2  3457               	rlcf	(___fltol@f1+2)^0,w,c
  8213  0020F4  3458               	rlcf	(___fltol@f1+3)^0,w,c
  8214  0020F6  0100               	movlb	0	; () banked
  8215  0020F8  6FC5               	movwf	___fltol@exp1& (0+255),b
  8216  0020FA  51C5               	movf	___fltol@exp1& (0+255),w,b
  8217  0020FC  A4D8               	btfss	status,2,c
  8218  0020FE  EF83  F010         	goto	u4931
  8219  002102  EF86  F010         	goto	u4930
  8220  002106                     u4931:
  8221  002106  FFFF               	dw	65535	; assembler added errata NOP
  8222  002108  EF92  F010         	goto	l4545
  8223  00210C                     u4930:
  8224  00210C  FFFF               	dw	65535	; assembler added errata NOP
  8225  00210E                     l4541:
  8226  00210E  FFFF               	dw	65535	; assembler added errata NOP
  8227                           
  8228                           ; BSR set to: 0
  8229  002110  0E00               	movlw	0
  8230  002112  6E55               	movwf	?___fltol^0,c
  8231  002114  0E00               	movlw	0
  8232  002116  6E56               	movwf	(?___fltol+1)^0,c
  8233  002118  0E00               	movlw	0
  8234  00211A  6E57               	movwf	(?___fltol+2)^0,c
  8235  00211C  0E00               	movlw	0
  8236  00211E  6E58               	movwf	(?___fltol+3)^0,c
  8237  002120  EF11  F011         	goto	l667
  8238  002124                     l4545:
  8239  002124  FFFF               	dw	65535	; assembler added errata NOP
  8240                           
  8241                           ; BSR set to: 0
  8242  002126  C055  F0C0         	movff	___fltol@f1,??___fltol
  8243  00212A  C056  F0C1         	movff	___fltol@f1+1,??___fltol+1
  8244  00212E  C057  F0C2         	movff	___fltol@f1+2,??___fltol+2
  8245  002132  C058  F0C3         	movff	___fltol@f1+3,??___fltol+3
  8246  002136  0E20               	movlw	32
  8247  002138  EFA4  F010         	goto	u4940
  8248  00213C                     u4945:
  8249  00213C  FFFF               	dw	65535	; assembler added errata NOP
  8250  00213E  90D8               	bcf	status,0,c
  8251  002140  33C3               	rrcf	(??___fltol+3)& (0+255),f,b
  8252  002142  33C2               	rrcf	(??___fltol+2)& (0+255),f,b
  8253  002144  33C1               	rrcf	(??___fltol+1)& (0+255),f,b
  8254  002146  33C0               	rrcf	??___fltol& (0+255),f,b
  8255  002148                     u4940:
  8256  002148  FFFF               	dw	65535	; assembler added errata NOP
  8257  00214A  2EE8               	decfsz	wreg,f,c
  8258  00214C  EF9E  F010         	goto	u4945
  8259  002150  51C0               	movf	??___fltol& (0+255),w,b
  8260  002152  6FC4               	movwf	___fltol@sign1& (0+255),b
  8261  002154                     
  8262                           ; BSR set to: 0
  8263  002154  8E57               	bsf	(___fltol@f1+2)^0,7,c
  8264  002156                     
  8265                           ; BSR set to: 0
  8266  002156  0EFF               	movlw	255
  8267  002158  1655               	andwf	___fltol@f1^0,f,c
  8268  00215A  0EFF               	movlw	255
  8269  00215C  1656               	andwf	(___fltol@f1+1)^0,f,c
  8270  00215E  0EFF               	movlw	255
  8271  002160  1657               	andwf	(___fltol@f1+2)^0,f,c
  8272  002162  0E00               	movlw	0
  8273  002164  1658               	andwf	(___fltol@f1+3)^0,f,c
  8274  002166                     
  8275                           ; BSR set to: 0
  8276  002166  0E96               	movlw	150
  8277  002168  5FC5               	subwf	___fltol@exp1& (0+255),f,b
  8278  00216A                     
  8279                           ; BSR set to: 0
  8280  00216A  BFC5               	btfsc	___fltol@exp1& (0+255),7,b
  8281  00216C  EFBD  F010         	goto	u4950
  8282  002170  EFBA  F010         	goto	u4951
  8283  002174                     u4951:
  8284  002174  FFFF               	dw	65535	; assembler added errata NOP
  8285  002176  EFD7  F010         	goto	l4565
  8286  00217A                     u4950:
  8287  00217A  FFFF               	dw	65535	; assembler added errata NOP
  8288  00217C                     
  8289                           ; BSR set to: 0
  8290  00217C  51C5               	movf	___fltol@exp1& (0+255),w,b
  8291  00217E  0A80               	xorlw	128
  8292  002180  0F97               	addlw	151
  8293  002182  B0D8               	btfsc	status,0,c
  8294  002184  EFC6  F010         	goto	u4961
  8295  002188  EFC9  F010         	goto	u4960
  8296  00218C                     u4961:
  8297  00218C  FFFF               	dw	65535	; assembler added errata NOP
  8298  00218E  EFCC  F010         	goto	l4561
  8299  002192                     u4960:
  8300  002192  FFFF               	dw	65535	; assembler added errata NOP
  8301  002194  EF87  F010         	goto	l4541
  8302  002198                     l4561:
  8303  002198  FFFF               	dw	65535	; assembler added errata NOP
  8304                           
  8305                           ; BSR set to: 0
  8306  00219A  90D8               	bcf	status,0,c
  8307  00219C  3258               	rrcf	(___fltol@f1+3)^0,f,c
  8308  00219E  3257               	rrcf	(___fltol@f1+2)^0,f,c
  8309  0021A0  3256               	rrcf	(___fltol@f1+1)^0,f,c
  8310  0021A2  3255               	rrcf	___fltol@f1^0,f,c
  8311  0021A4                     
  8312                           ; BSR set to: 0
  8313  0021A4  3FC5               	incfsz	___fltol@exp1& (0+255),f,b
  8314  0021A6  EFCC  F010         	goto	l4561
  8315  0021AA  EFF5  F010         	goto	l4575
  8316  0021AE                     l4565:
  8317  0021AE  FFFF               	dw	65535	; assembler added errata NOP
  8318                           
  8319                           ; BSR set to: 0
  8320  0021B0  0E1F               	movlw	31
  8321  0021B2  65C5               	cpfsgt	___fltol@exp1& (0+255),b
  8322  0021B4  EFDE  F010         	goto	u4971
  8323  0021B8  EFE1  F010         	goto	u4970
  8324  0021BC                     u4971:
  8325  0021BC  FFFF               	dw	65535	; assembler added errata NOP
  8326  0021BE  EFEB  F010         	goto	l4573
  8327  0021C2                     u4970:
  8328  0021C2  FFFF               	dw	65535	; assembler added errata NOP
  8329  0021C4  EF87  F010         	goto	l4541
  8330  0021C8                     l4571:
  8331  0021C8  FFFF               	dw	65535	; assembler added errata NOP
  8332                           
  8333                           ; BSR set to: 0
  8334  0021CA  90D8               	bcf	status,0,c
  8335  0021CC  3655               	rlcf	___fltol@f1^0,f,c
  8336  0021CE  3656               	rlcf	(___fltol@f1+1)^0,f,c
  8337  0021D0  3657               	rlcf	(___fltol@f1+2)^0,f,c
  8338  0021D2  3658               	rlcf	(___fltol@f1+3)^0,f,c
  8339  0021D4  07C5               	decf	___fltol@exp1& (0+255),f,b
  8340  0021D6                     l4573:
  8341  0021D6  FFFF               	dw	65535	; assembler added errata NOP
  8342                           
  8343                           ; BSR set to: 0
  8344  0021D8  51C5               	movf	___fltol@exp1& (0+255),w,b
  8345  0021DA  A4D8               	btfss	status,2,c
  8346  0021DC  EFF2  F010         	goto	u4981
  8347  0021E0  EFF5  F010         	goto	u4980
  8348  0021E4                     u4981:
  8349  0021E4  FFFF               	dw	65535	; assembler added errata NOP
  8350  0021E6  EFE4  F010         	goto	l4571
  8351  0021EA                     u4980:
  8352  0021EA                     l4575:
  8353  0021EA  FFFF               	dw	65535	; assembler added errata NOP
  8354                           
  8355                           ; BSR set to: 0
  8356  0021EC  51C4               	movf	___fltol@sign1& (0+255),w,b
  8357  0021EE  B4D8               	btfsc	status,2,c
  8358  0021F0  EFFC  F010         	goto	u4991
  8359  0021F4  EFFF  F010         	goto	u4990
  8360  0021F8                     u4991:
  8361  0021F8  FFFF               	dw	65535	; assembler added errata NOP
  8362  0021FA  EF08  F011         	goto	l4579
  8363  0021FE                     u4990:
  8364  0021FE  FFFF               	dw	65535	; assembler added errata NOP
  8365  002200                     
  8366                           ; BSR set to: 0
  8367  002200  1E58               	comf	(___fltol@f1+3)^0,f,c
  8368  002202  1E57               	comf	(___fltol@f1+2)^0,f,c
  8369  002204  1E56               	comf	(___fltol@f1+1)^0,f,c
  8370  002206  6C55               	negf	___fltol@f1^0,c
  8371  002208  0E00               	movlw	0
  8372  00220A  2256               	addwfc	(___fltol@f1+1)^0,f,c
  8373  00220C  2257               	addwfc	(___fltol@f1+2)^0,f,c
  8374  00220E  2258               	addwfc	(___fltol@f1+3)^0,f,c
  8375  002210                     l4579:
  8376  002210  FFFF               	dw	65535	; assembler added errata NOP
  8377                           
  8378                           ; BSR set to: 0
  8379  002212  C055  F055         	movff	___fltol@f1,?___fltol
  8380  002216  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  8381  00221A  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  8382  00221E  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  8383  002222                     l667:
  8384  002222  FFFF               	dw	65535	; assembler added errata NOP
  8385                           
  8386                           ; BSR set to: 0
  8387  002224  0012               	return		;funcret
  8388  002226  FFFF               	dw	65535	; errata NOP
  8389  002228                     __end_of___fltol:
  8390                           	callstack 0
  8391                           
  8392 ;; *************** function _init_PORTS *****************
  8393 ;; Defined at:
  8394 ;;		line 9 in file "init_PIC.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;		None
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;		None
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  1    wreg      void 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8408 ;;      Params:         0       0       0       0       0       0       0
  8409 ;;      Locals:         0       0       0       0       0       0       0
  8410 ;;      Temps:          0       0       0       0       0       0       0
  8411 ;;      Totals:         0       0       0       0       0       0       0
  8412 ;;Total ram usage:        0 bytes
  8413 ;; Hardware stack levels used: 1
  8414 ;; Hardware stack levels required when called: 1
  8415 ;; This function calls:
  8416 ;;		Nothing
  8417 ;; This function is called by:
  8418 ;;		_main
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text35
  8423  002D66                     __ptext35:
  8424                           	callstack 0
  8425  002D66                     _init_PORTS:
  8426                           	callstack 0
  8427  002D66  FFFF               	dw	65535	; assembler added errata NOP
  8428  002D68                     
  8429                           ;init_PIC.c: 11:     TRISB = 0x00;
  8430  002D68  0E00               	movlw	0
  8431  002D6A  6E93               	movwf	147,c	;volatile
  8432                           
  8433                           ;init_PIC.c: 12:     TRISD = 0x00;
  8434  002D6C  0E00               	movlw	0
  8435  002D6E  6E95               	movwf	149,c	;volatile
  8436                           
  8437                           ;init_PIC.c: 13:     PORTB = 0x0F;
  8438  002D70  0E0F               	movlw	15
  8439  002D72  6E81               	movwf	129,c	;volatile
  8440                           
  8441                           ;init_PIC.c: 14:     PORTD = 0x0F;
  8442  002D74  0E0F               	movlw	15
  8443  002D76  6E83               	movwf	131,c	;volatile
  8444                           
  8445                           ;init_PIC.c: 17:     LATC = 0;
  8446  002D78  0E00               	movlw	0
  8447  002D7A  6E8B               	movwf	139,c	;volatile
  8448                           
  8449                           ;init_PIC.c: 18:     PORTC = 0;
  8450  002D7C  0E00               	movlw	0
  8451  002D7E  6E82               	movwf	130,c	;volatile
  8452  002D80                     
  8453                           ;init_PIC.c: 19:     TRISCbits.RC7 = 1;
  8454  002D80  8E94               	bsf	148,7,c	;volatile
  8455  002D82                     
  8456                           ;init_PIC.c: 20:     TRISCbits.RC6 = 0;
  8457  002D82  9C94               	bcf	148,6,c	;volatile
  8458  002D84  0012               	return		;funcret
  8459  002D86  FFFF               	dw	65535	; errata NOP
  8460  002D88                     __end_of_init_PORTS:
  8461                           	callstack 0
  8462                           
  8463 ;; *************** function _Rx_char_USART *****************
  8464 ;; Defined at:
  8465 ;;		line 590 in file "main.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;		None
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;  i               2    5[COMRAM] int 
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  1    wreg      void 
  8472 ;; Registers used:
  8473 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 0/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8479 ;;      Params:         0       0       0       0       0       0       0
  8480 ;;      Locals:         2       0       0       0       0       0       0
  8481 ;;      Temps:          5       0       0       0       0       0       0
  8482 ;;      Totals:         7       0       0       0       0       0       0
  8483 ;;Total ram usage:        7 bytes
  8484 ;; Hardware stack levels used: 1
  8485 ;; This function calls:
  8486 ;;		Nothing
  8487 ;; This function is called by:
  8488 ;;		Interrupt level 2
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           	psect	intcode
  8493  000008                     __pintcode:
  8494                           	callstack 0
  8495  000008                     _Rx_char_USART:
  8496                           	callstack 0
  8497  000008  FFFF               	dw	65535	; assembler added errata NOP
  8498                           
  8499                           ;incstack = 0
  8500  00000A  8278               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8501  00000C  CFD9 F004          	movff	fsr2l,??_Rx_char_USART+3
  8502  000010  CFDA F005          	movff	fsr2h,??_Rx_char_USART+4
  8503  000014                     
  8504                           ;main.c: 593:     int i=0;
  8505  000014  0E00               	movlw	0
  8506  000016  6E07               	movwf	(Rx_char_USART@i+1)^0,c
  8507  000018  0E00               	movlw	0
  8508  00001A  6E06               	movwf	Rx_char_USART@i^0,c
  8509  00001C                     i2l363:
  8510  00001C  FFFF               	dw	65535	; assembler added errata NOP
  8511  00001E  AA9E               	btfss	3998,5,c	;volatile
  8512  000020  EF14  F000         	goto	i2u188_41
  8513  000024  EF17  F000         	goto	i2u188_40
  8514  000028                     i2u188_41:
  8515  000028  FFFF               	dw	65535	; assembler added errata NOP
  8516  00002A  EF0E  F000         	goto	i2l363
  8517  00002E                     i2u188_40:
  8518  00002E  FFFF               	dw	65535	; assembler added errata NOP
  8519  000030                     
  8520                           ;main.c: 597:         input_str[i]=RCREG;
  8521  000030  0E76               	movlw	low _input_str
  8522  000032  2406               	addwf	Rx_char_USART@i^0,w,c
  8523  000034  6ED9               	movwf	fsr2l,c
  8524  000036  0E00               	movlw	high _input_str
  8525  000038  2007               	addwfc	(Rx_char_USART@i+1)^0,w,c
  8526  00003A  6EDA               	movwf	fsr2h,c
  8527  00003C  CFAE FFDF          	movff	4014,indf2	;volatile
  8528                           
  8529                           ;main.c: 599:     }while(input_str[i++]!= '\n');
  8530  000040  5006               	movf	Rx_char_USART@i^0,w,c
  8531  000042  6E01               	movwf	??_Rx_char_USART^0,c
  8532  000044  5007               	movf	(Rx_char_USART@i+1)^0,w,c
  8533  000046  6E02               	movwf	(??_Rx_char_USART+1)^0,c
  8534  000048  4A06               	infsnz	Rx_char_USART@i^0,f,c
  8535  00004A  2A07               	incf	(Rx_char_USART@i+1)^0,f,c
  8536  00004C  0E76               	movlw	low _input_str
  8537  00004E  2401               	addwf	??_Rx_char_USART^0,w,c
  8538  000050  6ED9               	movwf	fsr2l,c
  8539  000052  0E00               	movlw	high _input_str
  8540  000054  2002               	addwfc	(??_Rx_char_USART+1)^0,w,c
  8541  000056  6EDA               	movwf	fsr2h,c
  8542  000058  0E0A               	movlw	10
  8543  00005A  18DE               	xorwf	postinc2,w,c
  8544  00005C  A4D8               	btfss	status,2,c
  8545  00005E  EF33  F000         	goto	i2u189_41
  8546  000062  EF36  F000         	goto	i2u189_40
  8547  000066                     i2u189_41:
  8548  000066  FFFF               	dw	65535	; assembler added errata NOP
  8549  000068  EF0E  F000         	goto	i2l363
  8550  00006C                     i2u189_40:
  8551  00006C  FFFF               	dw	65535	; assembler added errata NOP
  8552  00006E                     
  8553                           ;main.c: 601:     PIR1bits.RCIF = 0;
  8554  00006E  9A9E               	bcf	158,5,c	;volatile
  8555  000070                     
  8556                           ;main.c: 602:     New_char_RX = 1;
  8557  000070  0E01               	movlw	1
  8558  000072  6E71               	movwf	_New_char_RX^0,c
  8559  000074  C005  FFDA         	movff	??_Rx_char_USART+4,fsr2h
  8560  000078  C004  FFD9         	movff	??_Rx_char_USART+3,fsr2l
  8561  00007C  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8562  00007E  0011               	retfie		f
  8563  000080  FFFF               	dw	65535	; errata NOP
  8564  000082                     __end_of_Rx_char_USART:
  8565                           	callstack 0
  8566                           
  8567                           	psect	rparam
  8568  0000                     
  8569                           	psect	temp
  8570  000078                     btemp:
  8571                           	callstack 0
  8572  000078                     	ds	1
  8573  0000                     int$flags	set	btemp
  8574  0000                     wtemp8	set	btemp+1
  8575  0000                     ttemp5	set	btemp+1
  8576  0000                     ttemp6	set	btemp+4
  8577  0000                     ttemp7	set	btemp+8
  8578                           
  8579                           	psect	idloc
  8580                           
  8581                           ;Config register IDLOC0 @ 0x200000
  8582                           ;	unspecified, using default values
  8583  200000                     	org	2097152
  8584  200000  FF                 	db	255
  8585                           
  8586                           ;Config register IDLOC1 @ 0x200001
  8587                           ;	unspecified, using default values
  8588  200001                     	org	2097153
  8589  200001  FF                 	db	255
  8590                           
  8591                           ;Config register IDLOC2 @ 0x200002
  8592                           ;	unspecified, using default values
  8593  200002                     	org	2097154
  8594  200002  FF                 	db	255
  8595                           
  8596                           ;Config register IDLOC3 @ 0x200003
  8597                           ;	unspecified, using default values
  8598  200003                     	org	2097155
  8599  200003  FF                 	db	255
  8600                           
  8601                           ;Config register IDLOC4 @ 0x200004
  8602                           ;	unspecified, using default values
  8603  200004                     	org	2097156
  8604  200004  FF                 	db	255
  8605                           
  8606                           ;Config register IDLOC5 @ 0x200005
  8607                           ;	unspecified, using default values
  8608  200005                     	org	2097157
  8609  200005  FF                 	db	255
  8610                           
  8611                           ;Config register IDLOC6 @ 0x200006
  8612                           ;	unspecified, using default values
  8613  200006                     	org	2097158
  8614  200006  FF                 	db	255
  8615                           
  8616                           ;Config register IDLOC7 @ 0x200007
  8617                           ;	unspecified, using default values
  8618  200007                     	org	2097159
  8619  200007  FF                 	db	255
  8620                           
  8621                           	psect	config
  8622                           
  8623                           ; Padding undefined space
  8624  300000                     	org	3145728
  8625  300000  FF                 	db	255
  8626                           
  8627                           ;Config register CONFIG1H @ 0x300001
  8628                           ;	Oscillator Selection bits
  8629                           ;	OSC = XT, XT oscillator
  8630                           ;	Oscillator System Clock Switch Enable bit
  8631                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  8632  300001                     	org	3145729
  8633  300001  21                 	db	33
  8634                           
  8635                           ;Config register CONFIG2L @ 0x300002
  8636                           ;	Power-up Timer Enable bit
  8637                           ;	PWRT = OFF, PWRT disabled
  8638                           ;	Brown-out Reset Enable bit
  8639                           ;	BOR = OFF, Brown-out Reset disabled
  8640                           ;	Brown-out Reset Voltage bits
  8641                           ;	BORV = 20, VBOR set to 2.0V
  8642  300002                     	org	3145730
  8643  300002  0D                 	db	13
  8644                           
  8645                           ;Config register CONFIG2H @ 0x300003
  8646                           ;	Watchdog Timer Enable bit
  8647                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8648                           ;	Watchdog Timer Postscale Select bits
  8649                           ;	WDTPS = 128, 1:128
  8650  300003                     	org	3145731
  8651  300003  0E                 	db	14
  8652                           
  8653                           ; Padding undefined space
  8654  300004                     	org	3145732
  8655  300004  FF                 	db	255
  8656                           
  8657                           ;Config register CONFIG3H @ 0x300005
  8658                           ;	CCP2 Mux bit
  8659                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  8660  300005                     	org	3145733
  8661  300005  00                 	db	0
  8662                           
  8663                           ;Config register CONFIG4L @ 0x300006
  8664                           ;	Stack Full/Underflow Reset Enable bit
  8665                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  8666                           ;	Low Voltage ICSP Enable bit
  8667                           ;	LVP = OFF, Low Voltage ICSP disabled
  8668                           ;	Background Debugger Enable bit
  8669                           ;	DEBUG = 0x1, unprogrammed default
  8670  300006                     	org	3145734
  8671  300006  80                 	db	128
  8672                           
  8673                           ; Padding undefined space
  8674  300007                     	org	3145735
  8675  300007  FF                 	db	255
  8676                           
  8677                           ;Config register CONFIG5L @ 0x300008
  8678                           ;	Code Protection bit
  8679                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  8680                           ;	Code Protection bit
  8681                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  8682                           ;	Code Protection bit
  8683                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  8684                           ;	Code Protection bit
  8685                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  8686  300008                     	org	3145736
  8687  300008  0F                 	db	15
  8688                           
  8689                           ;Config register CONFIG5H @ 0x300009
  8690                           ;	Boot Block Code Protection bit
  8691                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  8692                           ;	Data EEPROM Code Protection bit
  8693                           ;	CPD = OFF, Data EEPROM not code protected
  8694  300009                     	org	3145737
  8695  300009  C0                 	db	192
  8696                           
  8697                           ;Config register CONFIG6L @ 0x30000A
  8698                           ;	Write Protection bit
  8699                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  8700                           ;	Write Protection bit
  8701                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  8702                           ;	Write Protection bit
  8703                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  8704                           ;	Write Protection bit
  8705                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  8706  30000A                     	org	3145738
  8707  30000A  0F                 	db	15
  8708                           
  8709                           ;Config register CONFIG6H @ 0x30000B
  8710                           ;	Configuration Register Write Protection bit
  8711                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  8712                           ;	Boot Block Write Protection bit
  8713                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  8714                           ;	Data EEPROM Write Protection bit
  8715                           ;	WRTD = OFF, Data EEPROM not write protected
  8716  30000B                     	org	3145739
  8717  30000B  E0                 	db	224
  8718                           
  8719                           ;Config register CONFIG7L @ 0x30000C
  8720                           ;	Table Read Protection bit
  8721                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  8722                           ;	Table Read Protection bit
  8723                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  8724                           ;	Table Read Protection bit
  8725                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  8726                           ;	Table Read Protection bit
  8727                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  8728  30000C                     	org	3145740
  8729  30000C  0F                 	db	15
  8730                           
  8731                           ;Config register CONFIG7H @ 0x30000D
  8732                           ;	Boot Block Table Read Protection bit
  8733                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  8734  30000D                     	org	3145741
  8735  30000D  40                 	db	64
  8736                           tosu	equ	0xFFF
  8737                           tosh	equ	0xFFE
  8738                           tosl	equ	0xFFD
  8739                           stkptr	equ	0xFFC
  8740                           pclatu	equ	0xFFB
  8741                           pclath	equ	0xFFA
  8742                           pcl	equ	0xFF9
  8743                           tblptru	equ	0xFF8
  8744                           tblptrh	equ	0xFF7
  8745                           tblptrl	equ	0xFF6
  8746                           tablat	equ	0xFF5
  8747                           prodh	equ	0xFF4
  8748                           prodl	equ	0xFF3
  8749                           indf0	equ	0xFEF
  8750                           postinc0	equ	0xFEE
  8751                           postdec0	equ	0xFED
  8752                           preinc0	equ	0xFEC
  8753                           plusw0	equ	0xFEB
  8754                           fsr0h	equ	0xFEA
  8755                           fsr0l	equ	0xFE9
  8756                           wreg	equ	0xFE8
  8757                           indf1	equ	0xFE7
  8758                           postinc1	equ	0xFE6
  8759                           postdec1	equ	0xFE5
  8760                           preinc1	equ	0xFE4
  8761                           plusw1	equ	0xFE3
  8762                           fsr1h	equ	0xFE2
  8763                           fsr1l	equ	0xFE1
  8764                           bsr	equ	0xFE0
  8765                           indf2	equ	0xFDF
  8766                           postinc2	equ	0xFDE
  8767                           postdec2	equ	0xFDD
  8768                           preinc2	equ	0xFDC
  8769                           plusw2	equ	0xFDB
  8770                           fsr2h	equ	0xFDA
  8771                           fsr2l	equ	0xFD9
  8772                           status	equ	0xFD8

Data Sizes:
    Strings     506
    Constant    20
    Data        18
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     88     119
    BANK0           128      9      73
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    __memrchr@m	PTR const void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    __memrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    sp____memrchr	PTR void  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(COMRAM[4]), 

    strrchr@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strncat@s	PTR const unsigned char  size(2) Largest target is 2
		 -> add_component@add_to_sequence(COMRAM[2]), 

    strncat@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strncat@a	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@d1	PTR void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@s1	PTR const void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 2
		 -> input_str(COMRAM[2]), 

    print_string@strng	PTR unsigned char  size(2) Largest target is 83
		 -> STR_17(CODE[23]), STR_16(CODE[69]), STR_15(CODE[63]), STR_14(CODE[27]), 
		 -> STR_13(CODE[30]), STR_12(CODE[29]), STR_11(CODE[29]), STR_10(CODE[29]), 
		 -> STR_9(CODE[28]), STR_8(CODE[28]), STR_7(CODE[23]), STR_6(CODE[39]), 
		 -> STR_5(CODE[26]), sequence(COMRAM[4]), STR_1(CODE[83]), 

    sp__memmove	PTR void  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 

    sp__strrchr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(COMRAM[4]), 

    remove_component@ptr	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), sequence(COMRAM[4]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 4
		 -> sequence(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _start_up_menu->_add_component
    _start_up_menu->_remove_component
    _remove_component->_pick_and_place
    _strrchr->___memrchr
    ___memrchr->_strlen
    _memmove->_strlen
    _change_sequence->_pick_and_place
    _add_component->_pick_and_place
    _strncat->_strlen
    _print_string->_serial_tx_char
    _pick_and_place->___flge
    ___fldiv->___xxtofl
    _Z_axis_and_Tweezer->_Z_axis
    _Z_axis->_ms_delay
    _Y_axis->_ms_delay
    _X_axis->_ms_delay
    _Twister->_ms_delay
    _atoi->_isspace
    _init_USART->___fltol
    _roundf->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___fltol->_roundf

Critical Paths under _Rx_char_USART in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_start_up_menu
    _start_up_menu->_change_sequence
    _init_USART->___fltol

Critical Paths under _Rx_char_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_char_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_char_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_char_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_char_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_char_USART in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  104836
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                      _start_up_menu
 ---------------------------------------------------------------------------------
 (1) _start_up_menu                                        3     3      0   93600
                                              6 BANK0      3     3      0
                      _add_component
                    _change_sequence
                     _pick_and_place
                       _print_string
                   _remove_component
 ---------------------------------------------------------------------------------
 (2) _remove_component                                     9     9      0   24746
                                             81 COMRAM     7     7      0
                            _memmove
                     _pick_and_place
                       _print_string
                     _serial_tx_char
                             _strlen
                            _strrchr
 ---------------------------------------------------------------------------------
 (3) _strrchr                                              4     0      4    1287
                                             21 COMRAM     4     0      4
                          ___memrchr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___memrchr                                           10     4      6     524
                                             11 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     791
                                             11 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _change_sequence                                      9     9      0   22138
                                             81 COMRAM     3     3      0
                                              0 BANK0      6     6      0
                     _pick_and_place
                       _print_string
                     _serial_tx_char
 ---------------------------------------------------------------------------------
 (2) _add_component                                        7     7      0   24832
                                             81 COMRAM     7     7      0
                               _atoi
                     _pick_and_place
                       _print_string
                            _strncat
 ---------------------------------------------------------------------------------
 (3) _strncat                                              8     2      6    1002
                                             11 COMRAM     6     0      6
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     490
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _print_string                                         6     4      2    1601
                                              8 COMRAM     6     4      2
                     _serial_tx_char
 ---------------------------------------------------------------------------------
 (3) _serial_tx_char                                       1     1      0      31
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _pick_and_place                                      23    23      0   20249
                                             58 COMRAM    23    23      0
                            _Twister
                             _X_axis
                             _Y_axis
                 _Z_axis_and_Tweezer
                            ___fldiv
                             ___flge
                           ___xxtofl
                             _direct
 ---------------------------------------------------------------------------------
 (4) _direct                                               5     1      4    1142
                                              7 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                              7 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2183
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _Z_axis_and_Tweezer                                   4     4      0    3754
                                             14 COMRAM     4     4      0
                             _Z_axis
 ---------------------------------------------------------------------------------
 (5) _Z_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _Y_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _X_axis                                               1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (4) _Twister                                              1     1      0    3618
                                             13 COMRAM     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (6) _ms_delay                                             6     4      2    3556
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    1875
                                             14 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     259
                                              7 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     191
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11233
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10806
                                             58 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             23 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              7 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              7 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              7 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     986
                                             46 COMRAM    12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             84 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Rx_char_USART                                        7     7      0      30
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
   _init_interrupts
   _start_up_menu
     _add_component
       _atoi
         ___wmul
         _isdigit
         _isspace
       _pick_and_place
         _Twister
           _ms_delay
         _X_axis
           _ms_delay
         _Y_axis
           _ms_delay
         _Z_axis_and_Tweezer
           _Z_axis
             _ms_delay
         ___fldiv
         ___flge
         ___xxtofl
         _direct
       _print_string
         _serial_tx_char
       _strncat
         _strlen
     _change_sequence
       _pick_and_place
       _print_string
       _serial_tx_char
     _pick_and_place
     _print_string
     _remove_component
       _memmove
         _strlen (ARG)
       _pick_and_place
       _print_string
       _serial_tx_char
       _strlen
       _strrchr
         ___memrchr
           _strlen (ARG)
         _strlen

 _Rx_char_USART (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      9      49       5       57.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     58      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0      15        0.0%
DATA                 0      0      C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun  8 01:23:02 2021

                                                     ___fldiv@aexp 002E  
                                                     ___fldiv@bexp 002D  
                                                     ___fldiv@sign 0026  
                                                               l23 2D84  
                                                               l26 2DDA  
                                                               l51 2DA4  
                                                               l45 2CFE  
                                                               l48 2D90  
                                              ___wmul@multiplicand 000A  
                                           __size_of_start_up_menu 00D2  
                                                              l205 1FA0  
                                                              l230 19E8  
                                                              l311 08B2  
                                                              l304 081C  
                                                              l321 0A44  
                                                              l260 28D6  
                                                              l333 0BCA  
                                                              l270 25EC  
                                                              l254 20EC  
                                                              l239 1A88  
                                                              l280 2846  
                                                              l328 0ADA  
                                                              l265 26C0  
                                                              l370 2D62  
                                                              l275 2518  
                                                              l357 2A4C  
                                                              l349 2CBC  
                                                              l189 2794  
                                                              l294 0760  
                                                              l640 234A  
                                                              l288 2B6E  
                                                              l635 22FC  
                                                              l644 2C7E  
                                                              l900 026E  
                                                              l667 2222  
                                                              l915 0412  
                                                              l907 0628  
                                                              l924 0516  
                                                              l940 2BB8  
                                                              l925 04FE  
                                                              l952 149E  
                                                              l954 12B6  
                                                              l963 130C  
                                                              l965 139C  
                                                              l957 1270  
                                                              l966 1384  
                                                              l991 0EC6  
                                                              l984 0CBA  
                                                              l993 0F56  
                                                              l994 0F3E  
                                                              l898 02CE  
                                                              l899 02B8  
                                                              l988 106C  
                                                ??_init_interrupts 0008  
                                                              wreg 000FE8  
                                                     ___flmul@aexp 0019  
                                                     ___flmul@bexp 001A  
                                                     ___flmul@sign 0014  
                                                     ___flmul@temp 001F  
                                                     ___flmul@prod 001B  
                                                     ___fltol@exp1 00C5  
                                                             l1001 1024  
                                                             l1104 1884  
                                                             l1032 1B98  
                                                             l1025 1AEC  
                                                             l1028 1C7E  
                                                             l1140 29DC  
                                                             l1117 2BFA  
                                                             l1134 2D38  
                                                             l1039 1C04  
                                                             l1127 295C  
                                                             l1072 1E3C  
                                                             l1075 2C3C  
                                                             l1083 2B12  
                                                             l1069 1E32  
                                                             l1096 2444  
                                                             l4001 11B4  
                                                             l4011 11FA  
                                                             l4003 11CA  
                                                             l2341 2D82  
                                                             l4101 22D6  
                                                             l3301 0C1A  
                                                             l4021 1248  
                                                             l4013 120A  
                                                             l4005 11CA  
                                                             l4103 22EA  
                                                             l3311 0C52  
                                                             l3303 0C2A  
                                                             l4031 12A2  
                                                             l4023 125C  
                                                             l4015 121A  
                                                             l4111 1A90  
                                                             l2337 2D68  
                                                             l4105 2340  
                                                             l3401 0FD8  
                                                             l3321 0CA0  
                                                             l3313 0C64  
                                                             l3305 0C32  
                                                             l2345 2DD4  
                                                             l4041 12F8  
                                                             l4033 12B2  
                                                             l4025 126E  
                                                             l4017 122A  
                                                             l4009 11DE  
                                                             l4113 1AA4  
                                                             l4201 067C  
                                                             l2339 2D80  
                                                             l4107 2346  
                                                             l3411 104C  
                                                             l3403 0FEC  
                                                             l3331 0CF8  
                                                             l3323 0CA8  
                                                             l3315 0C66  
                                                             l3307 0C44  
                                                             l4051 1348  
                                                             l4043 130A  
                                                             l4035 12CC  
                                                             l4027 127C  
                                                             l4019 1232  
                                                             l4131 1B82  
                                                             l4123 1B2E  
                                                             l4115 1AB6  
                                                             l4211 072C  
                                                             l4203 0694  
                                                             l3413 104E  
                                                             l3405 100C  
                                                             l3341 0D4A  
                                                             l3333 0D06  
                                                             l3325 0CD0  
                                                             l3317 0C7C  
                                                             l3309 0C4C  
                                                             l2701 017A  
                                                             l3421 2B74  
                                                             l4301 1D00  
                                                             l4061 13D0  
                                                             l4053 137A  
                                                             l4037 12E6  
                                                             l4045 131E  
                                                             l4029 12A0  
                                                             l4141 1C18  
                                                             l4133 1B8E  
                                                             l4125 1B38  
                                                             l4117 1AFE  
                                                             l4221 07C2  
                                                             l4205 06C8  
                                                             l4213 0760  
                                                             l3407 102A  
                                                             l3415 1056  
                                                             l3351 0D8C  
                                                             l3343 0D56  
                                                             l3335 0D10  
                                                             l3327 0CE2  
                                                             l3319 0C90  
                                                             l3431 2C6C  
                                                             l2711 01C2  
                                                             l2703 0182  
                                                             l3423 2B84  
                                                             l4311 1D36  
                                                             l4071 1454  
                                                             l4063 13FA  
                                                             l4047 1332  
                                                             l4039 12EC  
                                                             l4151 1C6A  
                                                             l4143 1C1A  
                                                             l4135 1BD0  
                                                             l4127 1B46  
                                                             l4119 1B1A  
                                                             l4231 0854  
                                                             l4223 07EE  
                                                             l4215 07AA  
                                                             l4207 06E0  
                                                             l3417 105C  
                                                             l3409 103A  
                                                             l3361 0DEE  
                                                             l3353 0D98  
                                                             l3345 0D62  
                                                             l3337 0D26  
                                                             l2801 0442  
                                                             l2721 01D8  
                                                             l2713 01C8  
                                                             l2705 0194  
                                                             l4401 17D2  
                                                             l4161 2AD4  
                                                             l4321 1DEA  
                                                             l4313 1D6C  
                                                             l4305 1D08  
                                                             l4081 1492  
                                                             l4073 1470  
                                                             l4057 13B2  
                                                             l4065 13FE  
                                                             l4049 1336  
                                                             l4153 1C6C  
                                                             l4145 1C20  
                                                             l4137 1BDE  
                                                             l4129 1B7E  
                                                             l4241 08E2  
                                                             l4233 0858  
                                                             l4225 080E  
                                                             l4217 07B6  
                                                             l4209 0714  
                                                             l4091 225C  
                                                             l3371 0E88  
                                                             l3363 0DFA  
                                                             l3355 0DA8  
                                                             l3347 0D70  
                                                             l3339 0D32  
                                                             l3291 0BD0  
                                                             l3427 2C42  
                                                             l2811 0476  
                                                             l2731 01EC  
                                                             l2723 01DC  
                                                             l2715 01CC  
                                                             l2707 01AC  
                                                             l4403 1808  
                                                             l4163 2B06  
                                                             l4323 1E00  
                                                             l4307 1D22  
                                                             l4075 1476  
                                                             l4067 141E  
                                                             l4059 13BE  
                                                             l4147 1C44  
                                                             l4139 1BF2  
                                                             l4251 09DE  
                                                             l4243 08EA  
                                                             l4235 0884  
                                                             l4227 0840  
                                                             l4219 07BE  
                                                             l4331 28DC  
                                                             l4411 1E44  
                                                             l4093 226C  
                                                             l3381 0EEC  
                                                             l3373 0EA6  
                                                             l3365 0E16  
                                                             l3357 0DC2  
                                                             l3349 0D7C  
                                                             l3293 0BDC  
                                                             l3429 2C5C  
                                                             l2813 048A  
                                                             l2805 0456  
                                                             l2821 04B0  
                                                             l2733 01F0  
                                                             l2725 01E0  
                                                             l2717 01D0  
                                                             l2709 01BE  
                                                             l2741 0200  
                                                             l4405 184E  
                                                             l4165 2B0A  
                                                             l4157 2AB6  
                                                             l4325 1E16  
                                                             l4317 1DA6  
                                                             l4309 1D2C  
                                                             l4077 1488  
                                                             l4069 1434  
                                                             l4149 1C58  
                                                             l4261 0A68  
                                                             l4253 09E6  
                                                             l4245 08EE  
                                                             l4237 08A4  
                                                             l4229 084C  
                                                             l4341 2914  
                                                             l4333 28DC  
                                                             l4501 1A46  
                                                             l4421 1EA8  
                                                             l4413 1E50  
                                                             l4173 2962  
                                                             l4095 22A0  
                                                             l3391 0F6C  
                                                             l3383 0EF0  
                                                             l3375 0EB2  
                                                             l3367 0E40  
                                                             l3359 0DD2  
                                                             l3295 0BEE  
                                                             l2815 0492  
                                                             l2807 0462  
                                                             l2823 04C2  
                                                             l2751 0282  
                                                             l2743 0206  
                                                             l2735 01F4  
                                                             l2727 01E4  
                                                             l2719 01D4  
                                                             l2671 00BE  
                                                             l2663 0088  
                                                             l4407 1872  
                                                             l4159 2ABC  
                                                             l4079 148E  
                                                             l4271 0ACC  
                                                             l4263 0A74  
                                                             l4255 09EA  
                                                             l4247 0986  
                                                             l4239 08D6  
                                                             l4191 285A  
                                                             l4335 28F4  
                                                             l4343 2918  
                                                             l4503 1A72  
                                                             l4431 1F06  
                                                             l4423 1EB2  
                                                             l4415 1E5A  
                                                             l4183 29B4  
                                                             l4175 296A  
                                                             l4511 1FCC  
                                                             l4097 22B0  
                                                             l4089 222A  
                                                             l3393 0F78  
                                                             l3385 0F02  
                                                             l3377 0EC4  
                                                             l3369 0E7A  
                                                             l3297 0BF0  
                                                             l2833 052C  
                                                             l2841 058A  
                                                             l2825 04C8  
                                                             l2817 0498  
                                                             l2809 0474  
                                                             l2761 02B6  
                                                             l2753 028E  
                                                             l2745 0234  
                                                             l2737 01F8  
                                                             l2729 01E8  
                                                             l2681 0100  
                                                             l2673 00D2  
                                                             l2665 0094  
                                                             l4169 2BFE  
                                                             l3801 25F6  
                                                             l4281 0BAE  
                                                             l4273 0AFE  
                                                             l4265 0A7C  
                                                             l4257 0A16  
                                                             l4249 09D2  
                                                             l4193 288E  
                                                             l4345 2930  
                                                             l4337 28FC  
                                                             l4441 1F8A  
                                                             l4433 1F36  
                                                             l4425 1EC8  
                                                             l4417 1E6E  
                                                             l4361 23A2  
                                                             l4185 29D4  
                                                             l4177 2974  
                                                             l4353 2D04  
                                                             l4521 2040  
                                                             l4513 1FE6  
                                                             l4505 1FA6  
                                                             l4601 26D4  
                                                             l4099 22C4  
                                                             l3395 0F8A  
                                                             l3387 0F34  
                                                             l3379 0ED8  
                                                             l3299 0C06  
                                                             l2851 05F0  
                                                             l2843 05A0  
                                                             l2835 0538  
                                                             l2827 04DA  
                                                             l2819 04AE  
                                                             l2771 031C  
                                                             l2763 02E2  
                                                             l2755 0294  
                                                             l2747 0256  
                                                             l2739 01FC  
                                                             l2691 013A  
                                                             l2683 0108  
                                                             l2675 00E2  
                                                             l2667 00A6  
                                                             l4291 1C9A  
                                                             l3811 262A  
                                                             l3803 260A  
                                                             l4283 0BB2  
                                                             l4275 0B0A  
                                                             l4267 0A80  
                                                             l4259 0A36  
                                                             l4195 2892  
                                                             l4347 294A  
                                                             l4339 2910  
                                                             l4451 18C6  
                                                             l4443 188C  
                                                             l4435 1F3E  
                                                             l4427 1ED4  
                                                             l4419 1E9C  
                                                             l4371 2422  
                                                             l4363 23B2  
                                                             l4179 29A4  
                                                             l4531 2086  
                                                             l4523 204E  
                                                             l4515 1FFC  
                                                             l4507 1FB2  
                                                             l4611 270E  
                                                             l4603 26EA  
                                                             l4541 210E  
                                                             l3397 0FB4  
                                                             l2861 0616  
                                                             l2853 05F6  
                                                             l2845 05B2  
                                                             l2837 054A  
                                                             l2829 04F4  
                                                             l2781 0366  
                                                             l2773 032E  
                                                             l2765 02F6  
                                                             l2757 02A8  
                                                             l2749 0266  
                                                             l2693 013C  
                                                             l2685 011E  
                                                             l2677 00E6  
                                                             l2669 00A8  
                                                             l4381 1516  
                                                             l4293 1CA0  
                                                             l3901 2816  
                                                             l3821 264E  
                                                             l3813 262E  
                                                             l3805 260E  
                                                             l4285 0BBA  
                                                             l4277 0B12  
                                                             l4269 0AAC  
                                                             l4197 0632  
                                                             l4189 284E  
                                                             l4349 2958  
                                                             l4461 190C  
                                                             l4453 18D2  
                                                             l4445 1898  
                                                             l4437 1F48  
                                                             l4429 1EF4  
                                                             l4373 2426  
                                                             l4365 23D4  
                                                             l4357 2352  
                                                             l4533 20AC  
                                                             l4525 2056  
                                                             l4517 2008  
                                                             l4509 1FC8  
                                                             l4621 2744  
                                                             l4613 2712  
                                                             l4605 26EE  
                                                             l4551 2166  
                                                             l3399 0FB8  
                                                             l2855 05FA  
                                                             l2847 05D8  
                                                             l2839 0588  
                                                             l2791 03DA  
                                                             l2783 0368  
                                                             l2775 0340  
                                                             l2759 02AA  
                                                             l2695 0152  
                                                             l2687 0120  
                                                             l2679 00EE  
                                                             l4383 152A  
                                                             l4711 1D54  
                                                             l4295 1CA6  
                                                             l3743 2B2E  
                                                             l3735 2B18  
                                                             l3903 2826  
                                                             l3831 2690  
                                                             l3815 263A  
                                                             l3807 261A  
                                                             l3823 265A  
                                                             l3751 244E  
                                                             l3911 2CA6  
                                                             l4287 0BC2  
                                                             l4279 0B16  
                                                             l4199 0648  
                                                             l4471 195C  
                                                             l4463 1922  
                                                             l4455 18E8  
                                                             l4447 18AE  
                                                             l4439 1F5C  
                                                             l4375 242A  
                                                             l4359 237C  
                                                             l4367 23F4  
                                                             l4535 20B0  
                                                             l4527 2070  
                                                             l4615 2716  
                                                             l4607 26F6  
                                                             l4561 2198  
                                                             l4553 216A  
                                                             l4545 2124  
                                                             l2857 0602  
                                                             l2849 05DC  
                                                             l2793 03DC  
                                                             l2785 0374  
                                                             l2777 034C  
                                                             l2769 030A  
                                                             l2697 0166  
                                                             l2689 0128  
                                                             l4393 15EE  
                                                             l4385 1570  
                                                             l4377 14A6  
                                                             l4297 1CC4  
                                                             l4289 1C86  
                                                             l3745 2B34  
                                                             l3737 2B24  
                                                             l3905 282A  
                                                             l3833 2694  
                                                             l3825 2670  
                                                             l3817 263E  
                                                             l3809 261E  
                                                             l3841 2536  
                                                             l3761 2482  
                                                             l3753 2462  
                                                             l3921 29E4  
                                                             l4481 19AA  
                                                             l4473 1970  
                                                             l4465 1936  
                                                             l4457 18FC  
                                                             l4449 18C2  
                                                             l4369 240C  
                                                             l4529 2078  
                                                             l4537 20D6  
                                                             l4617 2730  
                                                             l4609 270A  
                                                             l4625 274E  
                                                             l4641 2DB6  
                                                             l4633 2DA8  
                                                             l4571 21C8  
                                                             l4563 21A4  
                                                             l4555 217C  
                                                             l4547 2154  
                                                             l4539 20F2  
                                                             l2859 0614  
                                                             l2795 03F0  
                                                             l2779 0352  
                                                             l2787 037A  
                                                             l2699 0176  
                                                             l4395 16C2  
                                                             l4387 1594  
                                                             l4379 14C6  
                                                             l4299 1CFC  
                                                             l3747 2B4E  
                                                             l3907 283A  
                                                             l3835 26A4  
                                                             l3827 2674  
                                                             l3819 264A  
                                                             l3851 255A  
                                                             l3843 253A  
                                                             l3771 24A6  
                                                             l3763 2486  
                                                             l3755 2466  
                                                             l3931 29F8  
                                                             l4491 19F0  
                                                             l4483 19AE  
                                                             l4475 1974  
                                                             l4467 193A  
                                                             l4459 1900  
                                                             l4619 273A  
                                                             l4627 278E  
                                                             l4643 2DB8  
                                                             l4635 2DA8  
                                                             l4573 21D6  
                                                             l4565 21AE  
                                                             l4549 2156  
                                                             l2789 03A6  
                                                             l2797 0400  
                                                             l4397 172E  
                                                             l4389 15B6  
                                                             l3749 2B52  
                                                             l3837 26B0  
                                                             l3829 2680  
                                                             l3853 2566  
                                                             l3845 2546  
                                                             l3861 2586  
                                                             l3781 24E8  
                                                             l3765 2492  
                                                             l3757 2472  
                                                             l3773 24B2  
                                                             l3941 2A28  
                                                             l3933 2A18  
                                                             l3917 2CB2  
                                                             l3909 2C84  
                                                             l4493 1A0C  
                                                             l4485 19BA  
                                                             l4477 1980  
                                                             l4469 1946  
                                                             l4709 2766  
                                                             l4637 2DAE  
                                                             l4575 21EA  
                                                             l2799 042E  
                                                             l4399 1766  
                                                             l4591 2CF6  
                                                             l4583 2CC4  
                                                             l3871 25C0  
                                                             l3863 259C  
                                                             l3855 256A  
                                                             l3847 254A  
                                                             l3839 2522  
                                                             l3783 24EC  
                                                             l3775 24C8  
                                                             l3767 2496  
                                                             l3759 2476  
                                                             l3943 2A2C  
                                                             l3927 29EC  
                                                             l3951 1074  
                                                             l3791 2BBE  
                                                             l4495 1A18  
                                                             l4487 19D0  
                                                             l4479 1996  
                                                             l4639 2DB2  
                                                             l4577 2200  
                                                             l4593 2CF8  
                                                             l4585 2CF0  
                                                             l3945 2D3E  
                                                             l3881 27B4  
                                                             l3873 25D0  
                                                             l3865 25A0  
                                                             l3857 2576  
                                                             l3849 2556  
                                                             l3785 24FC  
                                                             l3777 24CC  
                                                             l3769 24A2  
                                                             l3929 29F4  
                                                             l3961 10BE  
                                                             l3953 1080  
                                                             l3793 2BCA  
                                                             l4497 1A28  
                                                             l4489 19E4  
                                                             l4579 2210  
                                                             l4595 2CFA  
                                                             l4587 2CF2  
                                                             l3947 2D5A  
                                                             l3891 27E0  
                                                             l3883 27C0  
                                                             l3875 25DC  
                                                             l3867 25AC  
                                                             l3859 257A  
                                                             l3787 2508  
                                                             l3779 24D8  
                                                             l3939 2A20  
                                                             l3971 10F4  
                                                             l3963 10CE  
                                                             l3955 1092  
                                                             l3795 2BD0  
                                                             l4499 1A32  
                                                             l4597 2CFC  
                                                             l4589 2CF4  
                                                             l3893 27E4  
                                                             l3885 27C4  
                                                             l3877 279C  
                                                             l3869 25BC  
                                                             l3981 1138  
                                                             l3973 10FA  
                                                             l3965 10D2  
                                                             l3957 1094  
                                                             l3789 2D8C  
                                                             l3797 2BEE  
                                                             l3887 27D0  
                                                             l3879 27B0  
                                                             l3895 27F0  
                                                             l3991 1182  
                                                             l3983 1148  
                                                             l3975 110C  
                                                             l3959 10AA  
                                                             l3967 10DA  
                                                             l4599 26C8  
                                                             l3897 2806  
                                                             l3889 27D4  
                                                             l3993 1192  
                                                             l3985 114C  
                                                             l3977 110E  
                                                             l3969 10EC  
                                                             l3899 280A  
                                                             l3995 119A  
                                                             l3979 1124  
                                                             l3987 1154  
                                                             l3997 11A0  
                                                             l3989 1166  
                                                             STR_1 7E05  
                                                             STR_2 7FFD  
                                                             STR_3 7FF9  
                                                             STR_4 7FFB  
                                                             STR_5 7FB1  
                                                             STR_6 7EDC  
                                                             STR_7 7FCB  
                                                             STR_8 7F78  
                                                             STR_9 7F94  
                                                             u2100 0150  
                                                             u2101 014A  
                                                             u2110 0164  
                                                             u2111 015E  
                                                             u2200 02E0  
                                                             u2120 01AA  
                                                             u2201 02DA  
                                                             u2121 01A4  
                                                             u2210 02F4  
                                                             u2130 01BC  
                                                             u2050 00A4  
                                                             u2211 02EE  
                                                             u2131 01B6  
                                                             u2051 009E  
                                                             u2300 0488  
                                                             u2220 032C  
                                                             u2140 0232  
                                                             u2060 00BC  
                                                             u2301 0482  
                                                             u2221 0326  
                                                             u2141 022C  
                                                             u2061 00B6  
                                                             u2310 04AC  
                                                             u2230 033E  
                                                             u2150 024E  
                                                             u2070 00D0  
                                                             u2311 04A6  
                                                             u2231 0338  
                                                             u2151 0246  
                                                             u2071 00CA  
                                                             _LATC 000F8B  
                                                             u3200 0C04  
                                                             u2400 05B2  
                                                             u2320 04C2  
                                                             u2240 0364  
                                                             u2160 0252  
                                                             u2080 011C  
                                                             u4000 1246  
                                                             u3201 0BFE  
                                                             u2401 05AC  
                                                             u2321 04BC  
                                                             u2241 035E  
                                                             u2081 0116  
                                                             u4001 1240  
                                                             u3210 0C18  
                                                             u2410 05D6  
                                                             u2330 04D8  
                                                             u2250 03A4  
                                                             u2170 0280  
                                                             u2090 0138  
                                                             u4010 126C  
                                                             u3211 0C12  
                                                             u2411 05D0  
                                                             u2331 04D2  
                                                             u2251 039E  
                                                             u2171 027A  
                                                             u2091 0132  
                                                             u4011 1266  
                                                             u3300 0F00  
                                                             u3220 0C62  
                                                             u2420 05EE  
                                                             u2340 04F2  
                                                             u2260 03EE  
                                                             u2180 02A6  
                                                             u4100 13B0  
                                                             u4020 129E  
                                                             u3301 0EFA  
                                                             u3221 0C5C  
                                                             u2421 05E8  
                                                             u2341 04EC  
                                                             u2261 03E8  
                                                             u2181 02A0  
                                                             u4101 13AA  
                                                             u4021 1298  
                                                             u3310 0F32  
                                                             u3230 0C7A  
                                                             u2430 0612  
                                                             u2350 0510  
                                                             u2270 042C  
                                                             u2190 02CE  
                                                             u4110 13CE  
                                                             u4030 12CA  
                                                             u3311 0F2C  
                                                             u3231 0C74  
                                                             u2431 060C  
                                                             u2351 050A  
                                                             u2271 0426  
                                                             u2191 02C8  
                                                             u4111 13C8  
                                                             u4031 12C4  
                                                             u3320 0F50  
                                                             u3240 0C8E  
                                                             u2360 052A  
                                                             u2280 0440  
                                                             u4120 141C  
                                                             u4040 12E4  
                                                             u4200 1AA2  
                                                             u5000 26E8  
                                                             u3321 0F4A  
                                                             u3241 0C88  
                                                             u2361 0524  
                                                             u2281 043A  
                                                             u4121 1416  
                                                             u4041 12DE  
                                                             u4201 1A9C  
                                                             u5001 26E2  
                                                             u3330 0F6A  
                                                             u3250 0CCE  
                                                             u2370 0548  
                                                             u2290 0472  
                                                             u4130 1452  
                                                             u4050 1308  
                                                             u4210 1AB4  
                                                             u5010 272A  
                                                             u3331 0F64  
                                                             u3251 0CC8  
                                                             u2371 0542  
                                                             u2291 046C  
                                                             u4131 144C  
                                                             u4051 1302  
                                                             u4211 1AAE  
                                                             u5011 2724  
                                                             u3340 0F88  
                                                             u3260 0CE2  
                                                             u2380 0586  
                                                             u4300 2AD2  
                                                             u4140 1486  
                                                             u4060 1330  
                                                             u4220 1B18  
                                                             u3341 0F82  
                                                             u3261 0CDC  
                                                             u2381 0580  
                                                             u4301 2ACC  
                                                             u4141 1480  
                                                             u4061 132A  
                                                             u4221 1B12  
                                                             u4150 225A  
                                                             u3350 0FD6  
                                                             u3270 0E62  
                                                             u3190 0BEC  
                                                             u2390 059E  
                                                             u4310 2B04  
                                                             u4070 1346  
                                                             u4230 1B78  
                                                             u4151 2254  
                                                             u3351 0FD0  
                                                             u3191 0BE6  
                                                             u2391 0598  
                                                             u4311 2AFE  
                                                             u4071 1340  
                                                             u4231 1B72  
                                                             u4160 229E  
                                                             u3360 100A  
                                                             u3280 0EC2  
                                                             u4320 2C32  
                                                             u4080 1378  
                                                             u4240 1BCA  
                                                             u4400 0692  
                                                             u4161 2298  
                                                             u3361 1004  
                                                             u3281 0EBC  
                                                             u4321 2C2A  
                                                             u4081 1372  
                                                             u4241 1BC4  
                                                             u4401 068C  
                                                             u4170 22C2  
                                                             u3370 104A  
                                                             u3290 0EEA  
                                                             u4330 2C36  
                                                             u4090 1396  
                                                             u4250 1BF0  
                                                             u4410 06DE  
                                                             u4171 22BC  
                                                             u3371 1044  
                                                             u3291 0EE4  
                                                             u3275 0E56  
                                                             u4091 1390  
                                                             u4251 1BEA  
                                                             u4411 06D8  
                                                             u4180 22E8  
                                                             u3380 2C5A  
                                                             u4260 1C04  
                                                             u4500 0AAA  
                                                             u4420 072A  
                                                             u4340 29A2  
                                                             u4181 22E2  
                                                             u3381 2C54  
                                                             u4261 1BFE  
                                                             u4501 0AA4  
                                                             u4421 0724  
                                                             u4341 299C  
                                                             u4190 233E  
                                                             u4270 1C16  
                                                             u4510 0AFC  
                                                             u4430 07EC  
                                                             u4350 29D2  
                                                             u4191 2338  
                                                             u4271 1C10  
                                                             u4511 0AF6  
                                                             u4431 07E6  
                                                             u4351 29CC  
                                                             u3800 24C6  
                                                             u4280 1C56  
                                                             u4520 0BAC  
                                                             u4440 083E  
                                                             u4360 288A  
                                                             u4600 292E  
                                                             u3801 24C0  
                                                             u4281 1C50  
                                                             u4521 0BA6  
                                                             u4441 0838  
                                                             u4601 2928  
                                                             u4530 1CC2  
                                                             u4290 1C68  
                                                             u4450 0882  
                                                             u3810 2DA2  
                                                             u4370 28C2  
                                                             u4610 294A  
                                                             u4531 1CBC  
                                                             u4291 1C62  
                                                             u4451 087C  
                                                             u3811 2D9C  
                                                             u4611 2944  
                                                             u4700 156E  
                                                             u4540 1CFA  
                                                             u3900 2A16  
                                                             u4460 08D4  
                                                             u4380 28D4  
                                                             u3820 2BEC  
                                                             u4620 237A  
                                                             u4701 1568  
                                                             u4541 1CF4  
                                                             u3901 2A10  
                                                             u4461 08CE  
                                                             u4381 28CE  
                                                             u3821 2BE6  
                                                             u4621 2374  
                                                             u4710 15B4  
                                                             u4550 1D1C  
                                                             u3830 2608  
                                                             u3910 2A4A  
                                                             u4470 0984  
                                                             u4390 0646  
                                                             u4630 23A0  
                                                             u4711 15AE  
                                                             u4551 1D16  
                                                             u3831 2602  
                                                             u3911 2A44  
                                                             u4471 097E  
                                                             u4391 0640  
                                                             u4367 2880  
                                                             u4631 239A  
                                                             u4720 16C0  
                                                             u4560 1DE0  
                                                             u3840 266E  
                                                             u3920 1090  
                                                             u4480 0A14  
                                                             u4800 1F9E  
                                                             u4640 23EE  
                                                             u4721 16BA  
                                                             u4561 1DD8  
                                                             u3841 2668  
                                                             u3921 108A  
                                                             u4481 0A0E  
                                                             u4377 28B8  
                                                             u4801 1F98  
                                                             u4641 23E8  
                                                             u4730 1764  
                                                             u4570 1DE4  
                                                             u3770 2B4C  
                                                             u3850 2534  
                                                             u3930 10A8  
                                                             u4490 0A66  
                                                             u4810 18AC  
                                                             u4650 240A  
                                                             u4731 175E  
                                                             u3771 2B46  
                                                             u3851 252E  
                                                             u3931 10A2  
                                                             u4491 0A60  
                                                             u4811 18A6  
                                                             u4651 2404  
                                                             u4740 182C  
                                                             u4580 1DFE  
                                                             u3780 2B6C  
                                                             u3860 259A  
                                                             u3940 10BC  
                                                             u4820 18E6  
                                                             u4660 2444  
                                                             u4900 1FFA  
                                                             _RCIF 007CF5  
                                                             u4581 1DF8  
                                                             u3781 2B66  
                                                             u3861 2594  
                                                             u3941 10B6  
                                                             u4821 18E0  
                                                             u4661 243E  
                                                             u4901 1FF4  
                                                             u4750 184C  
                                                             u4670 14E8  
                                                             u4590 1E14  
                                                             u3870 27AE  
                                                             u3790 2460  
                                                             u3950 110A  
                                                             u4830 1920  
                                                             u4910 20D6  
                                                             u4751 1846  
                                                             u4591 1E0E  
                                                             u3871 27A8  
                                                             u3791 245A  
                                                             u3951 1104  
                                                             u4831 191A  
                                                             u4911 20D0  
                                                             u4680 1514  
                                                             u3880 2804  
                                                             u3960 1122  
                                                             u4840 195A  
                                                             u4760 1E9A  
                                                             u4920 20EA  
                                                             u4745 1820  
                                                             u4681 150E  
                                                             u3881 27FE  
                                                             u3961 111C  
                                                             u4841 1954  
                                                             u4761 1E94  
                                                             u4921 20E4  
                                                             u4930 210C  
                                                             u4690 154E  
                                                             u3970 1136  
                                                             u3890 2CA4  
                                                             u4850 1994  
                                                             u4770 1EC6  
                                                             u4931 2106  
                                                             u4675 14DC  
                                                             u3971 1130  
                                                             u3891 2C9E  
                                                             u4851 198E  
                                                             u4771 1EC0  
                                                             u4940 2148  
                                                             u3980 1180  
                                                             u4860 19CE  
                                                             u4780 1F34  
                                                             u3981 117A  
                                                             u4861 19C8  
                                                             u4781 1F2E  
                                                             u4950 217A  
                                                             u3990 11C8  
                                                             u4870 1A72  
                                                             u4790 1F8A  
                                                             u4951 2174  
                                                             u4695 1542  
                                                             u3991 11C2  
                                                             u4871 1A6C  
                                                             u4791 1F84  
                                                             u4960 2192  
                                                             u4880 1A86  
                                                             u4961 218C  
                                                             u4945 213C  
                                                             u4881 1A80  
                                                             u4970 21C2  
                                                             u4890 1FC6  
                                                             u4971 21BC  
                                                             u4891 1FC0  
                                                             u4980 21EA  
                                                             u4981 21E4  
                                                             u4990 21FE  
                                                             u4991 21F8  
                                                             _Fosc 7E01  
                                                             _Tosc 00B8  
                                                             _atoi 1C84  
                                                             _main 2DA8  
                                                             fsr1h 000FE2  
                                                             fsr2h 000FDA  
                                                             indf1 000FE7  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0078  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                             change_sequence@i_550 00C2  
                                                             start 0082  
                                                       _Angle_diff 005B  
                                                  ___fldiv@new_exp 0027  
                                                     ___param_bank 000000  
                                                    ___fltol@sign1 00C4  
                                                            ?_atoi 000F  
                                                  __end_of___fladd 062E  
                                                            ?_main 0001  
                                                  __end_of___fldiv 14A4  
                                                  __end_of___flneg 2C82  
                                                            STR_10 7F5B  
                                                            STR_11 7F21  
                                                            STR_12 7F3E  
                                                            STR_13 7F03  
                                                            STR_14 7FB0  
                                                            STR_15 7E9D  
                                                            STR_16 7E58  
                                                            STR_17 7FE2  
                                                  __end_of___flmul 1072  
                                                  __end_of___flsub 2BBC  
                                                  __end_of___fltol 2228  
                                                  __end_of_Twister 284C  
                                                            i2l363 001C  
                                                            i2l366 006E  
                                                            i2l367 0074  
                                                            _RCREG 000FAE  
                                                            _SPBRG 000FAF  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISB 000F93  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                 Twister@direction 000E  
                                          Z_axis_and_Tweezer@i_611 0011  
                                                            _X_dir 0070  
                                                            _Y_dir 006F  
                                           __size_of_add_component 0202  
                                                  __end_of_isdigit 2C40  
                                                  __end_of_memmove 244A  
                                                            atoi@n 001C  
                                                            atoi@s 000F  
                               __end_of_desired_BaudRate@main$F495 7DF9  
                                       _desired_BaudRate@main$F495 7DF5  
                                                            _toint 7DF1  
                                                  __end_of_isspace 2B16  
                                                            tablat 000FF5  
                                                    _start_up_menu 26C6  
                                                  _change_sequence 1E42  
                                                            ttemp5 0079  
                                                            ttemp6 007C  
                                                  Y_axis@direction 000E  
                                                            ttemp7 0080  
                                                            status 000FD8  
                                                            wtemp8 0079  
                                                  __end_of_strncat 2960  
                                                  __end_of_strrchr 2D3C  
                                                     __end_of_Fosc 7E05  
                                                  __initialization 2A50  
                                                     __end_of_atoi 1E42  
                                                     __end_of_main 2DC6  
                                                       _Pick_Angle 0063  
                                                           ??_atoi 0011  
                                                           ??_main 0059  
                                                    __activetblptr 000002  
                                                    print_string@i 000D  
                                                   ?_start_up_menu 0001  
                                                           i2l2433 0014  
                                                           i2l2435 0030  
                                                           i2l2437 0070  
                                                 __end_of___xxtofl 1C84  
                                          remove_component@rm_comp 0052  
                                                           _X_Pick 006B  
                                                           _Y_Pick 0067  
                                                           _X_diff 005F  
                                                           _Y_diff 005D  
                                                           _X_axis 25F2  
                                                           _Y_axis 251E  
                                                           _Z_axis 244A  
                                                    _add_component 188A  
                                                ?_remove_component 0001  
                                                           ___flge 2228  
                                                        ??___fladd 0010  
                                                           ___wmul 2D3C  
                                                        ??___fldiv 001E  
                                                        ??___flneg 000C  
                                                        ??___flmul 0010  
                                                        ??___flsub 0020  
                                                        ??___fltol 00C0  
                                                 ??_pick_and_place 003B  
                                                           _direct 2C82  
                                               ??_remove_component 0052  
                                                        ??_Twister 000E  
                                                           clear_0 2A96  
                                                           clear_1 2AA2  
                                                           isa$std 000001  
                                                 __end_of_ms_delay 2B72  
                                                           _roundf 14A4  
                                                           _strlen 2BBC  
                                                     __pdataCOMRAM 0072  
                                                        ??_isdigit 000A  
                                                        ??_memmove 0012  
                                                    _Place_Angle_D 00A4  
                                                     __mediumconst 7DF0  
                                                        ??_isspace 000A  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                          __end_of_change_sequence 1FA4  
                                                        ??_strncat 0012  
                                                        ??_strrchr 001A  
                                                       ___flge@ff1 002F  
                                                       ___flge@ff2 0033  
                                                     ___xxtofl@arg 0012  
                                                     ___xxtofl@exp 0011  
                                                     ___xxtofl@val 0008  
                                                       __accesstop 0080  
                                          __end_of__initialization 2AA8  
                                               __size_of___memrchr 0082  
                                                       ___flneg@f1 0008  
                                                serial_tx_char@val 0008  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0055  
                                               _pick_and_place$590 003F  
                                               _pick_and_place$593 0043  
                                               _pick_and_place$597 0049  
                                               _pick_and_place$599 004D  
                                                   ?_add_component 0001  
                                                  _init_interrupts 2DD2  
                                                   __pcstackCOMRAM 0001  
                                                     __pidataBANK0 2DC6  
                                               _Z_axis_and_Tweezer 29E2  
                                                    __end_of_toint 7DF5  
                                              ?_Z_axis_and_Tweezer 0001  
                                                      ms_delay@val 0008  
                                                 _desired_BaudRate 7DF9  
                                          __size_of_serial_tx_char 0020  
                                                  ??_start_up_menu 00C6  
                                                      _Place_Angle 0061  
                                                      _New_char_RX 0071  
                                                       __pbssBANK0 0080  
                                            __end_of_Rx_char_USART 0082  
                                        remove_component@indxToDel 0055  
                                             ??_Z_axis_and_Tweezer 000F  
                                                       _angle_diff 00A2  
                                                          ?_X_axis 0001  
                                                          ?_Y_axis 0001  
                                                          ?_Z_axis 0001  
                                                          ?___flge 002F  
                                                          ?___wmul 0008  
                                                          ?_direct 0008  
                                                   add_component@i 0057  
                                                          ?_roundf 003B  
                                                __end_of___memrchr 29E2  
                                                          ?_strlen 0008  
                                                        ?___xxtofl 0008  
                                              pick_and_place@i_600 004F  
                                              pick_and_place@i_591 0041  
                                              pick_and_place@i_594 0045  
                                              pick_and_place@i_596 0047  
                                              pick_and_place@i_598 004B  
                                                 ?_change_sequence 0001  
                                              Z_axis_and_Tweezer@i 000F  
                                                          _RX_Char 006D  
                                          __end_of_init_interrupts 2DDE  
                                                  ??_add_component 0052  
                                                        ?_ms_delay 0008  
                                                          _X_Place 0069  
                                                          _Y_Place 0065  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  pick_and_place@i 003D  
                                                       _init_PORTS 2D66  
                                                       _init_USART 2CC2  
                                                  __size_of_X_axis 00D4  
                                                  __size_of_Y_axis 00D4  
                                                          _Rot_dir 006E  
                                                  __size_of_Z_axis 00D4  
                                                  __size_of___flge 0128  
                                                          ___fladd 0086  
                                                          ___fldiv 1072  
                                                          ___flneg 2C40  
                                                          ___flmul 0BCE  
                                                          ___flsub 2B72  
                                                          ___fltol 20F0  
                                                  __size_of___wmul 002A  
                                                          _Twister 2798  
                                                  __size_of_direct 0040  
                                                          __pcinit 2A50  
                                                          __ramtop 0600  
                                                          __ptext0 2DA8  
                                                          __ptext1 26C6  
                                                          __ptext2 1FA4  
                                                          __ptext3 2D02  
                                                          __ptext4 2960  
                                                          __ptext5 2350  
                                                          __ptext6 1E42  
                                                          __ptext7 188A  
                                                          __ptext8 28DA  
                                                          __ptext9 2BBC  
                                                  __size_of_roundf 03E6  
                                                  __size_of_strlen 0042  
                                                          _isdigit 2BFE  
                                                          _memmove 2350  
                                                       ??___xxtofl 000C  
                                                          _isspace 2AB6  
                                                          atoi@neg 0015  
                                                          _strncat 28DA  
                                                          _strrchr 2D02  
                                             end_of_initialization 2AA8  
                                              remove_component@ptr 0053  
                                                    __Lmediumconst 7DF0  
                                                       ??_ms_delay 000A  
                                                        _RCSTAbits 000FAB  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                          roundf@e 0047  
                                                          roundf@u 004D  
                                                          roundf@x 003B  
                                                          roundf@y 0051  
                                                          strlen@a 000A  
                                                          strlen@s 0008  
                                                       direct@next 000A  
                                                       direct@prev 0008  
                                               add_component@F3129 00BC  
                                                      ___fladd@grs 0017  
                                                   _serial_tx_char 2D88  
                                                    ___xxtofl@sign 0010  
                                        __size_of_remove_component 014C  
                                                        _TRISCbits 000F94  
                                                      ___fldiv@grs 0029  
                                                      ___fldiv@rem 0022  
                                                    ?_print_string 0009  
                                                      ___flmul@grs 0015  
                                                 ?_init_interrupts 0001  
                                                        _TXSTAbits 000FAC  
                                                      ___memrchr@c 000E  
                                                      ___memrchr@m 000C  
                                                      ___memrchr@n 0010  
                                                      ___memrchr@s 0014  
                                         __end_of_desired_BaudRate 7DFD  
                                                      ?_init_PORTS 0001  
                                                      ?_init_USART 0001  
                                                   __end_of_X_axis 26C6  
                                                   __end_of_Y_axis 25F2  
                                                   __end_of_Z_axis 251E  
                                                   __end_of___flge 2350  
                                                   __end_of___wmul 2D66  
                                                    __pidataCOMRAM 2DDE  
                                     add_component@add_to_sequence 0055  
                                                   __end_of_direct 2CC2  
                                           __end_of_serial_tx_char 2DA8  
                                                   __end_of_roundf 188A  
                                                   __end_of_strlen 2BFE  
                                              start_initialization 2A50  
                                                   ??_print_string 000B  
                                                        _X_Place_D 00A8  
                                                        _Y_Place_D 00A6  
                                                  X_axis@direction 000E  
                                                     _Pick_Angle_D 00AA  
                                                   _Tosc@main$F494 00B4  
                                                         ??_X_axis 000E  
                                                         ??_Y_axis 000E  
                                                         ??_Z_axis 000E  
                                                         ??___flge 0037  
                                                         ??___wmul 000C  
                                                         ??_direct 000C  
                                                      __pdataBANK0 00B4  
                                                   _lenth_of_array 00BE  
                                                         ??_roundf 003F  
                                                         ??_strlen 000A  
                                                  ?_serial_tx_char 0001  
                                                        ___fladd@a 000C  
                                                        ___fladd@b 0008  
                                                        ___fldiv@a 001A  
                                                        ___fldiv@b 0016  
                                                        ___flmul@a 000C  
                                                        ___flmul@b 0008  
                                                      __pbssCOMRAM 0059  
                                                 change_sequence@i 00C4  
                                                 change_sequence@j 00C0  
                                                        ___flsub@a 001C  
                                                        ___flsub@b 0018  
                                                    __pcstackBANK0 00C0  
                                          __size_of_pick_and_place 05A0  
                                                        ___memrchr 2960  
                                                __size_of___xxtofl 01F8  
                                              __size_of_init_PORTS 0022  
                                              __size_of_init_USART 0040  
                                            __end_of_start_up_menu 2798  
                                                        _atoi$1070 001B  
                                                        _atoi$1071 0019  
                                                        _atoi$1069 0017  
                                      __size_of_Z_axis_and_Tweezer 006E  
                                                  Z_axis@direction 000E  
                                                __size_of_ms_delay 005C  
                                                        __pintcode 0008  
                                                    __pmediumconst 7DF0  
                                                         ?___fladd 0008  
                                                         ?___fldiv 0016  
                                                         ?___flneg 0008  
                                                         ?___flmul 0008  
                                                         ?___flsub 0018  
                                                         ?___fltol 0055  
                                                         ?_Twister 0001  
                                                   Rx_char_USART@i 0006  
                                           __size_of_Rx_char_USART 007A  
                                                print_string@strng 0009  
                                                         ?_isdigit 0008  
                                                         ?_memmove 000C  
                                                         ?_isspace 0008  
                                                 _remove_component 1FA4  
                                                   _Fosc@main$F493 7DFD  
                                                       ?___memrchr 000C  
                                                         ?_strncat 000C  
                                                         ?_strrchr 0016  
                                                        _input_str 0076  
                                                   ___wmul@product 000C  
                                         __size_of_change_sequence 0162  
                                                         _PIE1bits 000F9D  
                                            __end_of_add_component 1A8C  
                                                         _PIR1bits 000F9E  
                                                         i2u188_40 002E  
                                                         i2u188_41 0028  
                                                         i2u189_40 006C  
                                                         i2u189_41 0066  
                                             __end_of_print_string 28DA  
                                                        _testarray 0080  
                                                ___wmul@multiplier 0008  
                                           __end_of_Fosc@main$F493 7E01  
                                                     _isspace$1087 000E  
                                                        copy_data0 2A64  
                                                        copy_data1 2A84  
                                                         _X_Pick_D 0059  
                                                    _Rx_char_USART 0008  
                                                         _Y_Pick_D 00AC  
                                            remove_component@i_570 0057  
                                                       roundf@F528 009E  
                                                         __Hrparam 0000  
                                                     ??_init_PORTS 0008  
                                                     ??_init_USART 0059  
                                                         __Lrparam 0000  
                                                        memmove@d1 000C  
                                                        memmove@s1 000E  
                                                 __size_of___fladd 05A8  
                                                 __size_of___fldiv 0432  
                                                 __size_of___flneg 0042  
                                                 __size_of___flmul 04A4  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 0138  
                                                 __size_of_Twister 00B4  
                                                        ms_delay@i 000A  
                                                        ms_delay@j 000C  
                                                         ___xxtofl 1A8C  
                                                   _pick_and_place 062E  
                                                 __size_of_isdigit 0042  
                                                 __size_of_memmove 00FA  
                                                      ??___memrchr 0012  
                                                 __size_of_isspace 0060  
                                                         __ptext10 284C  
                                                         __ptext11 2D88  
                                                         __ptext20 2798  
                                                         __ptext12 062E  
                                                         __ptext21 2B16  
                                                         __ptext13 2C82  
                                                         __ptext30 0086  
                                                         __ptext22 1C84  
                                                         __ptext14 1A8C  
                                                         __ptext31 2C40  
                                                         __ptext23 2AB6  
                                                         __ptext15 1072  
                                                         __ptext32 0BCE  
                                                         __ptext24 2BFE  
                                                         __ptext16 29E2  
                                                         __ptext33 2228  
                                                         __ptext25 2D3C  
                                                         __ptext17 244A  
                                                         __ptext34 20F0  
                                                         __ptext26 2DD2  
                                                         __ptext18 251E  
                                                         __ptext35 2D66  
                                                         __ptext27 2CC2  
                                                         __ptext19 25F2  
                                                         __ptext28 14A4  
                                                         __ptext29 2B72  
                                               __end_of_init_PORTS 2D88  
                                               __end_of_init_USART 2D02  
                                                 __size_of_strncat 0086  
                                                 __size_of_strrchr 003A  
                                                   ?_Rx_char_USART 0001  
                                                    __size_of_atoi 01BE  
                                                    __size_of_main 001E  
                                                         _ms_delay 2B16  
                                                         isa$xinst 000000  
                                                         _sequence 0072  
                                         __size_of_init_interrupts 000C  
                                                ??_change_sequence 0052  
                                                         int$flags 0078  
                                                 ??_serial_tx_char 0008  
                                                         _rotation 00AE  
                                           __end_of_pick_and_place 0BCE  
                                                       _INTCONbits 000FF2  
                                                         isdigit@c 0008  
                                                         memmove@d 0014  
                                                         memmove@n 0010  
                                                         memmove@s 0016  
                                                         intlevel2 2DE4  
                                                         isspace@c 0008  
                                                   _displacement_X 00B2  
                                                   _displacement_Y 00B0  
                                            __size_of_print_string 008E  
                                         __end_of_remove_component 20F0  
                                           pick_and_place@Componnt 0051  
                                                  ?_pick_and_place 0001  
                                                         strncat@d 000C  
                                                         strncat@n 0010  
                                                         strncat@s 000E  
                                                         strrchr@c 0018  
                                                         strrchr@s 0016  
                                                    ___fladd@signs 0014  
                                                  ??_Rx_char_USART 0001  
                                                     _print_string 284C  
                                       __end_of_Z_axis_and_Tweezer 2A50  
                                                     ___fladd@aexp 0015  
                                                     ___fladd@bexp 0016  
                                                  start_up_menu@ip 00C8  
                                                      _roundf$1335 0049  
                                                      _roundf$1336 0043  
